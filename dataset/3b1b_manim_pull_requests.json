[
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-03-29T16:49:26Z",
        "closed_at": "2023-03-29T19:20:01Z",
        "merged_at": null,
        "body": "Changed the index of the anchors as it was going out of the bounds. Please review it.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 334,
        "deletions": 333,
        "changed_files": 14,
        "created_at": "2023-01-31T22:21:23Z",
        "closed_at": "2023-02-01T19:27:01Z",
        "merged_at": "2023-02-01T19:27:00Z",
        "body": "Add [Self](https://peps.python.org/pep-0673/) as the return type for many Mobject methods",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 27,
        "changed_files": 5,
        "created_at": "2023-01-31T19:47:00Z",
        "closed_at": "2023-01-31T22:24:08Z",
        "merged_at": "2023-01-31T22:24:08Z",
        "body": "One theory for what's going on with https://github.com/3b1b/manim/issues/1975#issuecomment-1410906866 and https://github.com/3b1b/manim/issues/1405#issuecomment-1410741180 is that the usage of gl_VertexID was causing problems. This removes dependence on that.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-01-31T16:49:26Z",
        "closed_at": "2023-01-31T22:22:16Z",
        "merged_at": "2023-01-31T22:22:16Z",
        "body": "Possible fix for https://github.com/3b1b/manim/issues/1976",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 324,
        "deletions": 219,
        "changed_files": 20,
        "created_at": "2023-01-27T20:44:46Z",
        "closed_at": "2023-01-28T03:28:41Z",
        "merged_at": "2023-01-28T03:28:41Z",
        "body": "- Edits to winding fill to ensure it works better with transparency and works regardless of orientation\r\n- Fix issues with arrow and variable stroke width\r\n- Various fixes based on recent changes to ShaderWrapper",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-01-22T20:32:17Z",
        "closed_at": "2023-01-23T03:36:51Z",
        "merged_at": "2023-01-23T03:36:51Z",
        "body": "The type union operator wasn't added until Python 3.10. This was added a few days ago, which caused manim to crash with a TypeError for earlier versions of Python. This CL causes the code to do the same thing, but it works for <3.10 versions of Python too.\r\n\r\nFixes #1968",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2023-01-12T11:05:59Z",
        "closed_at": "2023-01-13T16:09:14Z",
        "merged_at": "2023-01-13T16:09:14Z",
        "body": "## Motivation\r\nWhen using `tqdm` in the context of Jupyter Notebooks, the CLI version does not cut it.\r\n\r\n## Proposed changes\r\nFor this reason, the `tqdm` authors created the `tqdm.auto` dispatching, which displays an optimal version of `tqdm` for either CLI or jupyter notebooks depending on the context.\r\n\r\n## Test\r\nUsing the package in a CLI or Jupyter Notebook environment will display a different loading bar.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1138,
        "deletions": 1267,
        "changed_files": 56,
        "created_at": "2023-01-10T18:02:18Z",
        "closed_at": "2023-01-15T17:39:17Z",
        "merged_at": "2023-01-15T17:39:17Z",
        "body": "This includes a number of meaningful updates to vector graphic rendering, motivated by performance and cleanliness.\r\n\r\nOne aim was to simplify the relevant shaders so as to not needlessly do more work than they have to, or store more data than is needed.\r\n\r\nThis also involves changing the way quadratic bezier paths are stored, where instead of stacking each (anchor1, handle, anchor2) triplet together, which involves redundancy at the endpoints, paths are defined the more traditional way (anchor, handle, anchor, handle, anchor, ...)",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-01-01T09:27:31Z",
        "closed_at": "2023-01-15T17:39:57Z",
        "merged_at": "2023-01-15T17:39:57Z",
        "body": "\r\n## Proposed changes\r\n<!-- What you changed in those files -->\r\n-  Changed the year in the Licence to current year\r\n\r\n\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 13,
        "changed_files": 2,
        "created_at": "2022-12-28T22:07:04Z",
        "closed_at": "2022-12-29T05:03:35Z",
        "merged_at": null,
        "body": "<!-- Thanks for contributing to manim!\r\n    Please ensure that your pull request works with the latest version of manim.\r\n-->\r\n\r\n## Motivation\r\n<!-- Outline your motivation: In what way do your changes improve the library? -->\r\nWhen running Example today, using ***manimgl example_scenes.py OpeningManimExample*** , after I follow the installation steps exactly on my macOS, I keep gettting getting ***TypeError: 'staticmethod' object is not callable***. It is not just me. There is one other who got the same issue too. Please see (https://github.com/3b1b/manim/issues/1945).\r\n\r\n## Proposed changes\r\n<!-- What you changed in those files -->\r\nAo, I tried removing all the static decorators which gives the errors from manim/manimlib/mobject/mobject.py and manim/manimlib/mobject/types/vectorized_mobject.py.\r\n\r\nThe exact lines are\r\n- manim/manimlib/mobject/mobject.py\", line 555\r\n- manim/manimlib/mobject/mobject.py\", line 569\r\n- manim/manimlib/mobject/mobject.py\", line 1753\r\n- manim/manimlib/mobject/types/vectorized_mobject.py\", line 1022\r\n\r\n## Test\r\n<!-- How do you test your changes -->\r\n**Result**: After the removal of all static decorators in the two files, I was able to run the example. It will show the following and a window with animations.\r\n\r\n```\r\nManimGL v1.6.1\r\n[01:33:49] INFO     Using the default configuration file, which you can modify in                                      config.py:348\r\n                    `/Users/pi/Desktop/manim/manim/manimlib/default_config.yml`                                                     \r\n           INFO     If you want to create a local configuration file, you can create a file named `custom_config.yml`, config.py:349\r\n                    or run `manimgl --config`\r\n```",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1038,
        "deletions": 760,
        "changed_files": 29,
        "created_at": "2022-12-20T22:35:33Z",
        "closed_at": "2022-12-24T01:11:30Z",
        "merged_at": "2022-12-24T01:11:30Z",
        "body": "- Make MTex the new Tex\r\n    - Rename Tex to OldTex, it should be completely removed from manim, but may stay alive in the 3b1b/videos repo for backwards compatibility\r\n- Add an option allowing StringMobject allowing it to only render one svg rather than two\r\n    - Make this the default behavior for Tex and Text\r\n- Slight refactor to initialization of SVGMobject\r\n- Allow for multiple inputs to Tex\r\n- Allow for selecting substrings from Tex and Text which were not specified in the \"isolate\" parameter\r\n    - This doesn't have a strong guarantee of always working, but it's convenient for much of the time, and a user can always fall back on adding an \"isolate\" parameter when undesirable behavior pops up.\r\n- Fix a few bugs associated with VMobject unit normals by removing the need to pass global unit normal information to shader\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 263,
        "deletions": 230,
        "changed_files": 10,
        "created_at": "2022-12-20T01:09:53Z",
        "closed_at": "2022-12-20T22:32:25Z",
        "merged_at": null,
        "body": "Minimal changes to illustrate behavior of StringMobject with a single svg write",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 3549,
        "deletions": 7020,
        "changed_files": 77,
        "created_at": "2022-12-17T21:19:56Z",
        "closed_at": "2022-12-18T18:27:15Z",
        "merged_at": "2022-12-18T18:27:15Z",
        "body": "- Removing usage of CONFIG dicts, handling that state either in __init__ parameters are class variables, depending on which makes more sense to the user.\r\n- Add clearer type hints throughout\r\n- A few bits of refactoring and cleanup throughout the library\r\n- Removing old or unused constructs which were specific to 3b1b videos, or old practices.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-12-12T14:42:25Z",
        "closed_at": "2022-12-13T06:57:37Z",
        "merged_at": "2022-12-13T06:57:37Z",
        "body": "In manim cairo-backend, line 127 and 131,\r\nFixing typo: \"ipmlemented\" to \"implemented\" ; \"understanable\" to \"understandable\"",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2022-12-08T17:18:17Z",
        "closed_at": "2022-12-10T15:19:59Z",
        "merged_at": null,
        "body": "<!-- Thanks for contributing to manim!\r\n    Please ensure that your pull request works with the latest version of manim.\r\n-->\r\n\r\n## Motivation\r\nTo fix the issue https://github.com/3b1b/manim/issues/1844#issue-1317730247\r\n## Proposed changes\r\n- Changed the comparison conditions to check if object is outside the screen \r\n\r\n**Code**:\r\n```py\r\ndef is_off_screen(self):\r\n        if self.get_left()[0] < -FRAME_X_RADIUS:\r\n            return True\r\n        if self.get_right()[0] > FRAME_X_RADIUS:\r\n            return True\r\n        if self.get_bottom()[1] < -FRAME_Y_RADIUS:\r\n            return True\r\n        if self.get_top()[1] > FRAME_Y_RADIUS:\r\n            return True\r\n        return False\r\n```\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-12-03T18:29:18Z",
        "closed_at": "2022-12-04T06:32:12Z",
        "merged_at": null,
        "body": "correcting the python version on the readme file.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-11-21T15:40:04Z",
        "closed_at": "2022-12-13T06:57:23Z",
        "merged_at": "2022-12-13T06:57:23Z",
        "body": "\r\n## Proposed changes\r\n<!-- What you changed in those files -->\r\n- lenth -> length\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-10-11T12:38:59Z",
        "closed_at": "2022-11-03T22:45:01Z",
        "merged_at": "2022-11-03T22:45:01Z",
        "body": "## Motivation\r\nJust a small license year fix.\r\n\r\nSource: https://softwareengineering.stackexchange.com/questions/210472/is-renewal-of-mit-license-needed-on-github-at-the-beginning-of-each-year",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2022-09-30T20:29:41Z",
        "closed_at": "2022-10-01T08:07:09Z",
        "merged_at": "2022-10-01T08:07:09Z",
        "body": "## Motivation\r\nI fixed a typo in the documentation\r\n\r\n## Proposed changes\r\nI fixed a single typo \"termnial\" in the documentation.\r\n\r\n## Test\r\nIt is a documentation change",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1080,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-09-30T01:08:07Z",
        "closed_at": "2022-09-30T14:36:32Z",
        "merged_at": null,
        "body": "<!-- Thanks for contributing to manim!\r\n    Please ensure that your pull request works with the latest version of manim.\r\n-->\r\n\r\n## Motivation\r\n<!-- Outline your motivation: In what way do your changes improve the library? -->\r\n\r\n## Proposed changes\r\n<!-- What you changed in those files -->\r\n- \r\n- \r\n- \r\n\r\n## Test\r\n<!-- How do you test your changes -->\r\n**Code**:\r\n\r\n**Result**:",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 33,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2022-09-11T03:15:17Z",
        "closed_at": "2022-09-13T19:42:36Z",
        "merged_at": "2022-09-13T19:42:36Z",
        "body": "<!-- Thanks for contributing to manim!\r\n    Please ensure that your pull request works with the latest version of manim.\r\n-->\r\n\r\n## Motivation\r\n<!-- Outline your motivation: In what way do your changes improve the library? -->\r\n\r\nWith the pr of manim community, we can easily use `.animate` method to build Animation, but we cannot change the arguments of Animations. With the `set_anim_args` method, we can change args of Animation. Since `_AnimationBuilder` will build it into `MoveToTarget`, we can also use `path_arc` or `path_func` and so on.\r\n\r\n## Test\r\n\r\n```python\r\nclass TestAnimateArgs(Scene):\r\n    def construct(self) -> None:\r\n        a = Circle().to_edge(LEFT)\r\n        anim_builder = (\r\n            a\r\n            .animate\r\n            .scale(3)\r\n            .to_edge(RIGHT)\r\n            .set_anim_args(run_time=3, time_span=(1, 2), rate_func=double_smooth, path_arc=PI/2)\r\n        )\r\n        self.play(anim_builder)\r\n```\r\n\r\n\r\nhttps://user-images.githubusercontent.com/55699713/189510867-2d94d2c5-f8bc-44ed-a3e4-697df835cea4.mp4\r\n\r\n\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2022-08-27T04:18:34Z",
        "closed_at": "2022-11-03T22:44:32Z",
        "merged_at": "2022-11-03T22:44:32Z",
        "body": "I've noticed that if no scene names are passed to `manimgl` explicitly, then the rendering progress bar will not be shown correctly.\r\n\r\nTo showcase the bug, suppose we have a file with only one Scene class in it:\r\n\r\n```python\r\n# my_scene.py\r\ndef MyScene(Scene):\r\n    def construct(self):\r\n        # some animations\r\n# end of file\r\n```\r\nAnd I'd like to render it using `manimgl`. Then both of the following command line should work:\r\n```bash\r\n$ manimgl my_scene.py MyScene -w\r\n$ manimgl my_scene.py -w\r\n```\r\nas there's only one scene in the file and the scene name can be omitted.\r\n\r\nBut when I omit the scene name(second case), the progress bar by `SceneFileWriter` during rendering will disappear/can't show correctly, which is annoying you're rendering long and intricate scenes.\r\n\r\n## Motivation\r\nFix the bug with rendering progress bar as shown above.\r\n\r\nI believe that this is a bug. But if it's an intended feature, please let me know.\r\n\r\n## Proposed changes\r\nThe bug arises from the `SceneFileWriter` and `extract_scene` module.\r\nIn `SceneFileWriter`, if its requested to open movie pipe and, total frames of the Scene is counted to be >0, then it will show progress display. \r\n(See `scene_file_writer.py SceneFileWriter.open_movie_pipe(...)` func.)\r\nHowever, in `extract_scene.get_scenes_to_render(...)`, if scene to render are passed from command line (selected from the prompt instead, or so), total frames of the scene is NOT counted. This makes `SceneFileWriter` confused and not display the rendering progress bar.\r\n\r\nTo fix this, I change `extract_scene.get_scenes_to_render(...)` so that all paths of it will count total_frames for the `SceneFileWriter`. (See codes for details)\r\n\r\n\r\n## Test\r\nThe test code is oriented on command line for this bug.\r\n**Code**:\r\nFirst we have some scenes to render:\r\n```python\r\n# my_scene.py\r\ndef MyScene(Scene):\r\n    def construct(self):\r\n        r = Rectangle()\r\n        self.add(r)\r\n        # some arbitrary animations to render\r\n        self.play(r.animate.shift(RIGHT))\r\n        self.play(r.animate.shift(LEFT*3), run_time=3)\r\n```\r\nThen we call `manimgl` to render it on command line:\r\n```bash\r\n$ manimgl my_scene.py MyScene -w\r\n$ manimgl my_scene.py -w\r\n```\r\nNormal window presenting mode is not broken, which can be shown by:\r\n```bash\r\n$ manimgl my_scene.py [MyScene]\r\n```\r\n\r\n**Result**:\r\nIn both case, rendering progress bar like this will appear:\r\n\r\n```\r\nRendering MyScene.mp4 (1 MoveToTarget):  26%|##      | 31/120 [00:03<00:15,  5.71it/s]\r\n```\r\nBefore bug fix, ONLY the first command line will have the progress bar.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-08-02T08:00:48Z",
        "closed_at": "2022-12-13T07:01:44Z",
        "merged_at": null,
        "body": "code:\r\nbool_ops_text = MarkupText(\"<u>Boolean Operation</u>\").next_to(ellipse1, UP * 3)\r\n\r\nerror: \r\nManimGL v1.6.1\r\n<u>\r\n</u>\r\nTraceback (most recent call last):\r\n  File \"d:\\anaconda3\\envs\\manim\\Scripts\\manimgl-script.py\", line 33, in <module>\r\n    sys.exit(load_entry_point('manimgl', 'console_scripts', 'manimgl')())\r\n  File \"g:\\github\\manim\\manimlib\\__main__.py\", line 25, in main\r\n    scene.run()\r\n  File \"g:\\github\\manim\\manimlib\\scene\\scene.py\", line 120, in run\r\n    self.construct()\r\n  File \"G:\\github\\manim\\sin.py\", line 173, in construct\r\n    bool_ops_text = MarkupText(\"<u>Boolean Operation</u>\").next_to(ellipse1, UP * 3)\r\n  File \"g:\\github\\manim\\manimlib\\mobject\\svg\\text_mobject.py\", line 123, in __init__\r\n    super().__init__(text, **kwargs)\r\n  File \"g:\\github\\manim\\manimlib\\mobject\\svg\\string_mobject.py\", line 77, in __init__\r\n    self.parse()\r\n  File \"g:\\github\\manim\\manimlib\\mobject\\svg\\string_mobject.py\", line 262, in parse\r\n    self.get_cmd_span_pairs(cmd_spans, flags)\r\n  File \"g:\\github\\manim\\manimlib\\mobject\\svg\\string_mobject.py\", line 313, in get_cmd_span_pairs\r\n    raise ValueError(\"Missing open command\")\r\nValueError: Missing open command\r\n\r\n<!-- Thanks for contributing to manim!\r\n    Please ensure that your pull request works with the latest version of manim.\r\n-->\r\n\r\n## Motivation\r\nfix: can't parse<u>Boolean Operation</u>\r\n\r\n## Proposed changes\r\n<!-- What you changed in those files -->\r\n- manimlib\\mobject\\svg\\text_mobject.py get_substr_flag\r\n\r\n## Test\r\n<!-- How do you test your changes -->\r\n**Code**:\r\n```python\r\nclass BooleanOperations(Scene):\r\n    def construct(self):\r\n        ellipse1 = Ellipse(\r\n            width=4.0, height=5.0, fill_opacity=0.5, color=BLUE, stroke_width=10\r\n        ).move_to(LEFT)\r\n        ellipse2 = ellipse1.copy().set_color(color=RED).move_to(RIGHT)\r\n        bool_ops_text = MarkupText(\"<u>Boolean Operation</u>\").next_to(ellipse1, UP * 3)\r\n        ellipse_group = Group(bool_ops_text, ellipse1, ellipse2).move_to(LEFT * 3)\r\n        self.play(FadeIn(ellipse_group))\r\n```\r\n\r\n**Result**:\r\nGUI",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-05-24T14:44:04Z",
        "closed_at": "2022-05-25T06:12:54Z",
        "merged_at": "2022-05-25T06:12:54Z",
        "body": "## Motivation\r\nFix a bug in `TransformMatchingStrings` class.\r\n\r\n## Proposed changes\r\n- M `manimlib/animation/transform_matching_parts.py`: Add back mismatched indices.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1474,
        "deletions": 709,
        "changed_files": 16,
        "created_at": "2022-05-22T03:08:47Z",
        "closed_at": "2022-09-13T19:42:15Z",
        "merged_at": "2022-09-13T19:42:15Z",
        "body": "## Features added\r\n### Supports self-defined tex templates and temporary addition of preambles\r\nSometimes users may want to temporarily use tex commands from tex packages not included in tex template files by default. So I add support for it. This is inspired from Manim Community. For classes `Tex`, `MTex`, parameters `template` and `additional_preamble` are added. Example usages are shown below.\r\n\r\nDemo\r\n```python\r\ntex = Tex(\r\n    \"a^2 + b^2 = c^2\",\r\n    template=\"French Cursive\"\r\n)\r\nself.add(tex)\r\n```\r\n<details>\r\n<summary>Result</summary>\r\n\r\n![TexTemplateDemo1](https://user-images.githubusercontent.com/50232075/170860023-3297fe0a-76f7-4093-85b4-b74e2f8f3f93.png)\r\n</details>\r\n\r\nDemo\r\n```python\r\nchem = TexText(\r\n    \"\\\\ce{Zn^2+ <=>[+ 2OH-][+ 2H+] \"\r\n    \"$\\\\underset{\\\\text{amphoteres Hydroxid}}{\\\\ce{Zn(OH)2 v}}$ \"\r\n    \"<=>[+ 2OH-][+ 2H+]\"\r\n    \"$\\\\underset{\\\\text{Hydroxozikat}}{\\\\ce{[Zn(OH)4]^2-}}$}\",\r\n    template=\"empty\",\r\n    additional_preamble=\"\\\\usepackage{mhchem}\"\r\n).scale(0.7)\r\nself.add(chem)\r\n```\r\n<details>\r\n<summary>Result</summary>\r\n\r\n![TexTemplateDemo2](https://user-images.githubusercontent.com/50232075/170860030-1b5fb48e-0103-49c5-8513-6c69dd1c44f8.png)\r\n</details>\r\n\r\nDemo\r\n```python\r\ntextext = MTexText(\r\n    \"The quick brown fox jumps over the lazy dog.\",\r\n    template=\"French Cursive\", isolate=\"brown\"\r\n)\r\ntextext.select_part(\"brown\").set_fill(LIGHT_BROWN)\r\nself.add(textext)\r\n```\r\n<details>\r\n<summary>Result</summary>\r\n\r\n![TexTemplateDemo3](https://user-images.githubusercontent.com/50232075/170860042-f3d7674e-b1a7-4bd0-a6f7-ad358af7dfa7.png)\r\n</details>\r\n\r\n58 tex templates in total are provided in `manimlib/tex_templates.yml`. Users may feel free to add whatever template they want to this file for own usage. These templates can simply be accessed by passing their names to `template` attribute. By default, `template` is an empty string, in which case manim will use the default template specified at `style.tex_template` in the configuration file. Currently this key replaces all 4 attributes under `tex` key. The original template files (`tex_template.tex` and `ctex_template.tex`) are now removed, and are now included as `default` and `ctex` for backward compatibility.\r\n\r\nUsers may add preambles specifically to a `Tex` or `MTex` instance via `additional_preamble` attribute, which is also an empty string by default.\r\n\r\nFrankly speaking, I'm a bit worried if having so much packages imported in a tex file could cause side effects. For instance, the `\"\\vdots\"` command doesn't show up in the final svg (not caused by questionable parsing of `svgelements`; even the path is not defined). This issue may be caused by the line `\"\\usepackage[T1]{fontenc}\"` (which I'm not sure). The point is, I would suggest using a template with only a few elementary packages imported, and add packages for specific `Tex` instances. Manim Community is also concerned about such an issue (https://github.com/ManimCommunity/manim/issues/2889). That's why `basic`, `empty` templates show up in the `tex_templates.yml`. I also collected all 52 templates from the Community Edition and sorted them alphabetically.\r\n\r\n### New `protect` attribute for `StringMobject`\r\nUsers may use `protect` attribute to specify some substrings that are not expected to be broken up.\r\n\r\nDemo\r\n```python\r\nprotected_tex = MTex(\r\n    \"\\\\begin{bmatrix} a & b \\\\\\\\ - b & a \\\\end{bmatrix}\",\r\n    tex_to_color_map={\"a\": GREEN, \"b\": RED},\r\n    protect=\"{bmatrix}\"\r\n)\r\nself.add(protected_tex)\r\n```\r\n<details>\r\n<summary>Result</summary>\r\n\r\n![ProtectDemo1](https://user-images.githubusercontent.com/50232075/185935528-eaa45f8c-214f-4076-a81c-719bf90d25f4.png)\r\n</details>\r\n\r\nIn the demonstration above, without specifying `protect=\"{bmatrix}\"`, all of letter `b`s (including ones in the word `bmatrix`) will be isolated. In fact, `MTex` can automatically handle most cases --- it protects all substrings matched by the regex expression `\\\\([a-zA-Z]+|.)`. The case above is tricky so that we shall tackle it manually. Sidenote, this attribute only prevents from cutting **halfway** at protected spans, so isolating `\"\\\\begin{bmatrix}\"` in the example above is still allowed (but nobody will do so, unless on purpose).\r\n\r\n`protect` attribute should be of type `Selector`, the same as `isolate`.\r\n\r\n### Add back `disable_ligatures` attribute in `MarkupText` and `Text`\r\nFor backward compatibility. Default to be `True`.\r\n\r\n## Features removed\r\n### Removes `is_markup` attribute for `MarkupText` and `Text`\r\nThis attribute is not expected to be altered up to the class --- so why not remove it?\r\n\r\n### No longer allows passing in a 2-tuple to `tex_template` attribute in `MTex`\r\nThis feature was originally added in #1795 in order to escape isolating substrings in, e.g., `\\begin{table}{ccc}`, `\\end{table}` (which cannot be solved by passing `tex_environment=\"table\"`). Now we can make use of `protect` attribute to overcome this problem in an elegant way.\r\n\r\n### No longer adjusts spans in `StringMobject`\r\nIn the previous implementation, I designed an algorithm to handle spans pointing to crazy substrings, like `\"a{b\"`. From now on, such spans will receive warnings and will no longer be adjusted. Similarly, partly overlapping substrings now lead to warnings instead of exceptions.\r\n\r\n## Issues fixed\r\n### #1760 After using math font package in tex_template of ManimGL, the TexText cannot displayed correctly\r\nThis issue is caused since `svgelements` cannot parse `use` elements whose referred elements are defined afterwards. This is fixed by expanding all `use` elements in svg before parsing.\r\n\r\n### #1792 Cannot show text in Ubuntu20.04\r\n`Text` uses the `line_height` attribute to control the line spacing, which requires pango with version >=1.50. The version of pango is now checked to decide whether to insert this attribute.\r\n\r\n### #1848 Fix: can't parse `<u>Boolean Operation</u>`\r\nFixed passingly in the refactory.\r\n\r\n### #1850 ValueError: Invalid markup string - when entering characters in Interactive mode\r\nThe `font_size` attribute in a markup tag can only be integers. This issue is fixed by inserting a `round` function.\r\n\r\n### Other bugs\r\n`MTex.get_part_by_tex` and `Text.get_part_by_text` miss `**kwargs` when passing attributes.\r\n\r\n`manimlib/animation/indication.py` file misses imports from `manimlib.constants`.\r\n\r\n## Proposed changes\r\n- M `manimlib/animation/indication.py`: Add missed imports.\r\n- M `manimlib/animation/transform_matching_parts.py`: Refactor `TransformMatchingStrings`.\r\n- M `manimlib/default_config.yml`: Add `tex_template` attribute; remove `tex` items.\r\n- M `manimlib/mobject/svg/mtex_mobject.py`: Add `template`, `additional_preamble` attributes; refactor `MTex` according to `StringMobject`.\r\n- M `manimlib/mobject/svg/string_mobject.py`: Refactor `StringMobject`.\r\n- M `manimlib/mobject/svg/svg_mobject.py`: Expand `use` elements beforehand; use `hash_string` function.\r\n- M `manimlib/mobject/svg/tex_mobject.py`: Add `template`, `additional_preamble` attributes.\r\n- M `manimlib/mobject/svg/text_mobject.py`: Remove `is_markup` attribute; refactor `Text` according to `StringMobject`.\r\n- A `manimlib/tex_templates.yml`: Add preambles of tex templates.\r\n- R `manimlib/tex_templates/.`: Remove tex template files.\r\n- M `manimlib/utils/init_config.py`: Alter according to `default_config.yml`.\r\n- M `manimlib/utils/simple_functions.py`: Add `hash_string` function.\r\n- M `manimlib/utils/tex_file_writing.py`: Make manim able to generate tex files based on specific preamble; remove `tex_hash` function.\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 2,
        "changed_files": 4,
        "created_at": "2022-04-27T12:58:40Z",
        "closed_at": "2022-05-19T14:07:07Z",
        "merged_at": "2022-05-19T14:07:07Z",
        "body": "## Motivation\r\nAdd some missed imports\r\n\r\n## Proposed changes\r\n- M `manimlib/mobject/geometry.py`: import `DEGREES`, `Iterable`\r\n- M `manimlib/mobject/probability.py`: import `numpy`\r\n- M `manimlib/mobject/types/point_cloud_mobject.py`: import `numpy`",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 919,
        "deletions": 1231,
        "changed_files": 9,
        "created_at": "2022-04-23T09:26:12Z",
        "closed_at": "2022-05-17T16:17:53Z",
        "merged_at": "2022-05-17T16:17:53Z",
        "body": "## Motivation\r\nRefactor `StringMobject` (renamed from `LabelledString`), `MarkupText`, `MTex` classes.\r\n\r\n## Proposed changes\r\n- M `manimlib/mobject/svg/labelled_string.py`: Unify logic from `MarkupText`, `MTex`; remove `use_plain_tex` attributes; support a much more flexible `Selector` type; allow passing in substrings whose braces or tags aren't paired; rename some methods.\r\n- M `manimlib/mobject/svg/mtex_mobject.py`: Allow passing in a 2-tuple to `tex_environment`, regarded as a prefix and a suffix respectively; remove `use_plain_tex` attributes.\r\n- M `manimlib/mobject/svg/text_mobject.py`: Parse entities to prevent from cutting halfway; remove `use_plain_tex` attributes.\r\n- M `manimlib/animation/creation.py`\r\n- M `manimlib/animation/transform_matching_parts.py`\r\n- M `manimlib/scene/interactive_scene.py`: Add `from __future__ import annotations`.\r\n\r\nThe method renaming in `StringMobject` class includes:\r\n```\r\nget_parts_by_string => select_parts\r\nget_part_by_string => select_part\r\nset_color_by_string => set_parts_color\r\nset_color_by_string_to_color_map => set_parts_color_by_dict\r\n```\r\n\r\nThe names of aliases remain unchanged (e.g. `MTex.get_parts_by_tex`)\r\n\r\nThe type definition of `Selector` is given below:\r\n```py\r\nSelector = Union[\r\n    str,  # Match all identical strings\r\n    re.Pattern,  # Match the pattern\r\n    tuple[Union[int, None], Union[int, None]],  # A normal span\r\n    Iterable[Union[  # A collection of the above\r\n        str,\r\n        re.Pattern,\r\n        tuple[Union[int, None], Union[int, None]]\r\n    ]]\r\n]\r\n```\r\n\r\nThe `StringMobject.select_parts` method takes in a `selector` as an input. The `isolate` parameter, keys of `tex_to_color_map`, keys of `t2c`, etc. are also of type `selector`. `StringMobject.select_parts` no longer supports `case_sensitive`, `substring` and `regex` parameters --- only substrings **inside** spans specified by selectors will be selected.\r\n\r\n```py\r\n# Equivalent:\r\ntext_ = Text(\"abc\", isolate=\"ab\")\r\n#text_ = Text(\"abc\", isolate=[\"ab\"])\r\n#text_ = Text(\"abc\", isolate=(0, 2))\r\n#text_ = Text(\"abc\", isolate=(None, -1))\r\n\r\n# Equivalent:\r\ntext = Text(\"abcBC\", isolate=(\"a\", \"bc\", \"BC\"))\r\n#text = Text(\"abcBC\", isolate=(\"a\", re.compile(\"bc\", re.I)))\r\n#text = Text(\"abcBC\", isolate=((0, 1), (1, 3), (3, 5)))\r\n#text = Text(\"abcBC\", isolate=((None, 1), (1, 3), (-2, None)))\r\n\r\n# Equivalent:\r\ntext.select_part(\"bcBC\").set_fill(BLUE)\r\n#text.select_part((\"bc\", \"BC\")).set_fill(BLUE)\r\n#text.select_part(re.compile(\"bc\", re.I)).set_fill(BLUE)\r\n#text.select_part((1, None)).set_fill(BLUE)\r\n\r\n# Equivalent:\r\npoly = MTex(\r\n    \"p(x) = a_0 x^0 + a_1 x^1 + \\\\cdots + a_{n-1} x^{n-1} + a_n x^n\",\r\n    tex_to_color_map={re.compile(r\"a_(.+?) x\\^\\1\"): ORANGE}\r\n)\r\n#poly = MTex(\r\n#    \"p(x) = a_0 x^0 + a_1 x^1 + \\\\cdots + a_{n-1} x^{n-1} + a_n x^n\",\r\n#    tex_to_color_map={\r\n#        s: ORANGE\r\n#        for s in [\"a_0 x^0\", \"a_1 x^1\", \"a_{n-1} x^{n-1}\", \"a_n x^n\"]\r\n#    }\r\n#)\r\n\r\nself.add(VGroup(text_, text, poly).arrange(DOWN))\r\n```\r\n![StringDemo0](https://user-images.githubusercontent.com/50232075/167099760-d6ab8a3b-72ff-41b3-ad5e-c0cc7850afd8.png)\r\n\r\nThis PR handles imbalanced strings and entity strings, so the following will work:\r\n```py\r\ntex = MTex(\"\\\\frac{-b\\\\pm\\\\sqrt{b^2-4ac}}{2a}\", tex_to_color_map={\"{b^2-4ac\": TEAL})\r\ntext = MarkupText(\"<tt>Hello Markup</tt>!\", t2c={re.compile(r\"\\W+\"): RED})\r\nself.add(VGroup(tex, text).arrange(DOWN))\r\n```\r\n![StringDemo1](https://user-images.githubusercontent.com/50232075/167099793-498ae77e-3710-47e5-992b-21962fc79a0d.png)\r\n\r\nThis PR fixes [#1792](https://github.com/3b1b/manim/issues/1792) by removing `line_height` from the global attribute dictionary if Pango doesn't support.\r\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-04-12T12:27:25Z",
        "closed_at": "2022-04-12T15:13:02Z",
        "merged_at": "2022-04-12T15:13:02Z",
        "body": "<!-- Thanks for contributing to manim!\r\n    Please ensure that your pull request works with the latest version of manim.\r\n-->\r\n\r\n## Motivation\r\n<!-- Outline your motivation: In what way do your changes improve the library? -->\r\nFixes #1790.\r\n\r\nBecause `set_color` of `ImageMobject` actually does nothing, I override it to just return itself to avoid #1790.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 614,
        "deletions": 397,
        "changed_files": 70,
        "created_at": "2022-04-12T03:34:36Z",
        "closed_at": "2022-04-23T15:53:14Z",
        "merged_at": "2022-04-23T15:53:14Z",
        "body": "## Motivation\r\nSort imports in alphabetical order. Expand all imports from `from manimlib.constants import *` (except `manimlib/mobject/svg/drawings`). Refactor some methods of `LabelledString` class.\r\n\r\n## Proposed changes\r\n- M `manimlib/mobject/utils/color.py`: Add annotations and refactor with functions supported by `colour` package.\r\n- M `manimlib/mobject/coordinate_systems.py`: Make `CoordinateSystem` inherit `ABC`.\r\n- M `manimlib/mobject/svg/svg_mobject.py`: Change `hex` to `hexrgb` to prevent from passing in an 8-digit-hex to `fill_color` and `stroke_color`.\r\n- M `manimlib/utils/iterables.py`: Support hashing `Color` objects.\r\n- Sort imports alphabetically, remove unused imports, adjust type annotations, etc.\r\n\r\n## Sidenote\r\n\r\nI once decided to refactor `Mobject.scale` function through the following statement:\r\n```py\r\nscale_factor = np.resize(scale_factor, self.dim).clip(min=min_scale_factor)\r\n```\r\n\r\nThis statement can simultaneously handle float and array objects, but it hurts the behavior of `DecimalNumber._handle_scale_side_effects` method, which can only work when `scale_factor` is a float. So I'd suggest some thoughts about removing `font_size` from `DecimalNumber.data` (`font_size` is even not stored in `Tex.data` or `Text.data`).\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-04-10T23:05:55Z",
        "closed_at": "2022-04-21T05:19:17Z",
        "merged_at": "2022-04-21T05:19:17Z",
        "body": "<!-- Thanks for contributing to manim!\r\n    Please ensure that your pull request works with the latest version of manim.\r\n-->\r\n\r\n## Motivation\r\n\r\nLearning Python and Math and then found this awesome tool\r\n\r\n## Proposed changes\r\n\r\nNothing but a deletion of a unused import, see image below\r\n\r\n<kbd>\r\n  <img src=\"https://user-images.githubusercontent.com/51419598/162643631-f54a6742-92cb-4ff2-afc8-4691a5dcf068.png\" />\r\n</kbd>\r\n\r\n## Test\r\n\r\n**Code**: Not applicable\r\n\r\n**Result**: Not applicable",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 263,
        "deletions": 288,
        "changed_files": 5,
        "created_at": "2022-04-10T00:44:42Z",
        "closed_at": "2022-04-11T16:52:52Z",
        "merged_at": "2022-04-11T16:52:52Z",
        "body": "## Motivation\r\nThere's a bug when dealing with multi-line tex. Just fixed.\r\n\r\n## Proposed changes\r\n- M `manimlib/animation/creation.py`: use attribute instead of calling a method\r\n- M `manimlib/animation/transform_matching_parts.py`: clean up logic\r\n- M `manimlib/mobject/svg/labelled_string.py`: fix bug; add `regex` parameter for `get_parts_by_tex` method; remove `indices_of_part` and `indices_lists_of_parts` methods\r\n- M `manimlib/mobject/svg/mtex_mobject.py`: some small refactors\r\n- M `manimlib/mobject/svg/text_mobject.py`: some small refactors\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2022-04-09T04:41:41Z",
        "closed_at": "2022-04-10T03:06:22Z",
        "merged_at": null,
        "body": "Fix a problem with Arrow which deforms the tip and line.\r\nBefore:    https://thumbnail1.baidupcs.com/thumbnail/c1fd78ab7saf91293ecd75855498428f?fid=1235339601-250528-743290651475862&rt=pr&sign=FDTAER-DCb740ccc5511e5e8fedcff06b081203-9k4G9B3dPJrRt%2fW1LeGwut4GnrE%3d&expires=8h&chkbd=0&chkv=0&dp-logid=9202057540599820629&dp-callid=0&time=1649476800&size=c1440_u900&quality=90&vuk=1235339601&ft=image&autopolicy=1\r\n\r\nAfter:    https://thumbnail1.baidupcs.com/thumbnail/fb929add1qd50e1fa74e10157a2db617?fid=1235339601-250528-475424386199360&rt=pr&sign=FDTAER-DCb740ccc5511e5e8fedcff06b081203-XSKy240edkWhuMV5l7EsjJDGIlw%3d&expires=8h&chkbd=0&chkv=0&dp-logid=9202545994416860780&dp-callid=0&time=1649476800&size=c1440_u900&quality=90&vuk=1235339601&ft=image&autopolicy=1\r\n\r\nThere is still some problem with Arrow but looks much better.\r\nAnd if you only want to display a line with a tip, try `Line.add_tip()`",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-04-08T21:08:39Z",
        "closed_at": "2022-04-11T16:50:33Z",
        "merged_at": "2022-04-11T16:50:33Z",
        "body": "<!-- Thanks for contributing to manim!\r\n    Please ensure that your pull request works with the latest version of manim.\r\n-->\r\n\r\n## Motivation\r\n<!-- Outline your motivation: In what way do your changes improve the library? -->\r\nMakes something like `Tex(\"\\overset\", \"{def A}\", \"{=}\")` work.\r\n\r\n## Proposed changes\r\nAdded `\"\\\\overset\"` -> `\"\\\\overset{\\\\quad}{\\\\quad}\"` and documented why \\frac and friends do not work (yet).\r\n\r\n\r\n## Test\r\n<!-- How do you test your changes -->\r\n**Code**:\r\n```python\r\n  color = {\"isolate\": [\"{A}\", \"{B}\"], \"tex_to_color_map\": {\"{A}\": GREEN, \"{B}\": BLUE}}\r\n  t = Tex(r\"a{B}c\", r\"\\overset\", \"{A}{=} a{B}c\", **color)\r\n  self.play(Write(t))\r\n```\r\n**Result**:\r\n![Screenshot_2022-04-08_22-58-07](https://user-images.githubusercontent.com/5936614/162529742-6a0df8a2-8384-4c7a-8064-303ee47c179a.png)\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 81,
        "deletions": 49,
        "changed_files": 3,
        "created_at": "2022-04-06T16:52:12Z",
        "closed_at": "2022-04-07T01:58:39Z",
        "merged_at": "2022-04-07T01:58:39Z",
        "body": "## Motivation\r\nAdd support for `substring` and `case_sensitive` parameters for `LabelledString.get_parts_by_string` method, and other relative methods as well.\r\n\r\n## Proposed changes\r\n- M `manimlib/mobject/svg/labelled_string.py`\r\n- M `manimlib/mobject/svg/mtex_mobject.py`\r\n- M `manimlib/mobject/svg/text_mobject.py`\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 163,
        "deletions": 170,
        "changed_files": 5,
        "created_at": "2022-04-06T14:47:28Z",
        "closed_at": "2022-04-06T15:53:23Z",
        "merged_at": "2022-04-06T15:53:23Z",
        "body": "## Motivation\r\nSome refactors on `LabelledString` and relevant classes.\r\n\r\n## Proposed changes\r\n- M `manimlib/mobject/numbers.py`: Remove the cache dict, since `SVGMobject`s are already cached.\r\n- M `manimlib/mobject/svg/labelled_string.py`: Support passing in `svg_default.color` and `svg_default.fill_color` as aliases of `base_color`; improve algorithm.\r\n- M `manimlib/mobject/svg/mtex_mobject.py`: Some refactors.\r\n- M `manimlib/mobject/svg/text_mobject.py`: Some refactors.\r\n- M `manimlib/mobject/svg/svg_mobject.py`: Add an empty line.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1278,
        "deletions": 971,
        "changed_files": 8,
        "created_at": "2022-03-30T15:02:02Z",
        "closed_at": "2022-04-04T17:01:14Z",
        "merged_at": "2022-04-04T17:01:13Z",
        "body": "## Motivation\r\nIn previous versions, when users want to slice a `Text` mobject via a substring, the span of it is directly used to slice the mobject. The result could be unexpected due to spaces, ligatures, and fancy mobjects brought by markup tags. So I referred to the idea of `MTex` and refactored these classes.\r\n\r\nIn this PR, `MarkupText` and `MTex` both inherit `LabelledString` class, so they share many similarities. `Text` is an alias of `MarkupText`, with the only exception that the attribute `is_markup` is default to be `False`. `apply_space_chars` and `disable_ligatures` attributes are removed.\r\n\r\nSome noticeable features about `LabelledString`:\r\n- Still maintains the original svg structure (no additional hierarchies);\r\n- Has an `isolate` attribute to add substrings to break up;\r\n- Has a `base_color` attribute to specify the default color (default `WHITE`);\r\n- Supports methods including `get_parts_by_string`, `get_part_by_string`, `set_color_by_string`, `set_color_by_string_to_color_map` (in `MTex`, aliases like `get_parts_by_tex` are supported; in `Text` and `MarkupText`, aliases like `get_parts_by_text` are supported);\r\n- Supports `TransformMatchingStrings`, `AddTextWordByWord` animations.\r\n\r\nThe substring selecting logic is improved so that strings can be matched more easily:\r\n```python\r\ntex = MTex(\"3 \\\\sqrt{2}\", isolate=[\"\\\\sqrt{2}\"])\r\ntex.set_color_by_tex(\"sqrt\", ORANGE)\r\nself.add(tex)\r\n```\r\n<details>\r\n<summary>Result</summary>\r\n\r\n![StringTest0](https://user-images.githubusercontent.com/50232075/160865079-d2469e8e-0bce-427f-a464-0ecf3ed380a5.png)\r\n</details>\r\n\r\nBy default, the string passed into `Text` is chopped into substrings at the following indices:\r\n> Boundaries of words (a.k.a. `r\"\\b\"`),\r\n> Bounderies of continuous spaces (a.k.a. `r\"\\s+\"`),\r\n> Boundaries of markup commands.\r\n\r\nSo there'll be no problem if one runs the following:\r\n```python\r\ntext = Text(\"Hello text\", base_color=TEAL)\r\ntext.set_color_by_text(\"text\", ORANGE)\r\nself.add(text)\r\n```\r\n<details>\r\n<summary>Result</summary>\r\n\r\n![StringTest1](https://user-images.githubusercontent.com/50232075/160866375-db8087f3-042b-4c76-9524-82f1e9a00cd9.png)\r\n</details>\r\n\r\nBut if the second line is replaced with `text.set_color_by_text(\"tex\", ORANGE)`, still the entire `\"text\"` will be colored. If you need to color `\"tex\"` only, you may specify `isolate=[\"tex\"]`:\r\n```python\r\ntext = Text(\"Hello text\", isolate=[\"tex\"], base_color=TEAL)\r\ntext.set_color_by_text(\"tex\", ORANGE)\r\nself.add(text)\r\n```\r\n<details>\r\n<summary>Result</summary>\r\n\r\n![StringTest2](https://user-images.githubusercontent.com/50232075/160866433-4cc6e765-0dec-4062-aa62-3c25dbe70132.png)\r\n</details>\r\n\r\nOther examples:\r\n```python\r\ntext = MarkupText(\r\n    \"<span face='Consolas'>Hello span</span>\",\r\n    global_config={\"underline\": \"double\", \"underline_color\": MAROON},\r\n    local_configs={\"Hello\": {\"bgcolor\": TEAL}}\r\n)\r\ntext.set_color_by_text(\"span\", ORANGE)\r\nself.add(text)\r\n```\r\n<details>\r\n<summary>Result</summary>\r\n\r\n![StringTest3](https://user-images.githubusercontent.com/50232075/160865276-2ecb0c88-c8c5-4c16-b5f5-f58d1b4d6199.png)\r\n</details>\r\n\r\n```python\r\nt0 = MarkupText(\"here comes <span color='red'>text</span>\")\r\nt1 = MarkupText(\"<span color='yellow'>text</span> is here\")\r\nself.add(t0)\r\nself.wait()\r\nself.play(TransformMatchingStrings(t0, t1), run_time=3)\r\nself.wait()\r\n```\r\n<details>\r\n<summary>Result</summary>\r\n\r\nhttps://user-images.githubusercontent.com/50232075/160865428-343060ee-3c12-4d12-b5e2-7e5edd287e12.mp4\r\n</details>\r\n\r\n```python\r\ntex = MTex(\"\\\\sqrt{s}\", isolate=[\"{s}\"])\r\ntex.set_color_by_tex(\"s\", TEAL)\r\nself.add(tex)\r\n```\r\n<details>\r\n<summary>Result</summary>\r\n\r\n![StringTest4](https://user-images.githubusercontent.com/50232075/161041329-e1ecd073-229e-45f3-9001-5e40c75529f4.png)\r\n</details>\r\n\r\n```python\r\nparagraph = Text(\"\"\"\r\n    Lorem ipsum dolor sit amet, consectetur \r\n    adipisicing elit,  sed do eiusmod tempor \r\n    incididunt ut labore et dolore magna aliqua. \r\n    Ut enim ad minim veniam, quis nostrud \r\n    exercitation ullamco laboris nisi ut \r\n    aliquip ex ea commodo consequat.\r\n\"\"\")\r\nself.play(AddTextWordByWord(paragraph))\r\n```\r\n<details>\r\n<summary>Result</summary>\r\n\r\nhttps://user-images.githubusercontent.com/50232075/160965587-b15b1e13-663b-4ad5-9d4b-edb9bbaca21b.mp4\r\n</details>\r\n\r\n## Proposed changes\r\n- M `manimlib/animation/creation.py`: fix `AddTextWordByWord`\r\n- M `manimlib/animation/transform_matching_parts.py`: construct `TransformMatchingStrings`, remove `TransformMatchingMTex`\r\n- A `manimlib/mobject/svg/labelled_string.py`: construct `LabelledString` base class\r\n- M `manimlib/mobject/svg/mtex_mobject.py`: refactor `MTex` based on `LabelledString`\r\n- M `manimlib/mobject/svg/svg_mobject.py`: remove submobjects of `SVGMobject` without points\r\n- M `manimlib/mobject/svg/text_mobject.py`: refactor `Text` and `MarkupText` based on `LabelledString`\r\n- M `manimlib/utils/iterables.py`: remove some unused functions\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 17,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-03-28T01:47:51Z",
        "closed_at": "2023-02-18T00:35:51Z",
        "merged_at": null,
        "body": "<!-- Thanks for contributing to manim!\r\n    Please ensure that your pull request works with the latest version of manim.\r\n-->\r\n\r\n## Motivation\r\n<!-- Outline your motivation: In what way do your changes improve the library? -->\r\nSvgelements is discarding SVG gradient fill information, so manim is using a solid black fill instead of the gradient. Unfortunately many SVGs with gradient fills thus become unusable.  This pull request gives SVGMobjects rudimentary support for gradient fills, just enough to extract the basic color & opacity information, so that an SVG with gradient fills is still often usable.   \r\nBroader Motivation: Noto emoji use gradient fills. Noto emoji are world-class quality and have the most generous license, so it would be nice to use them in manim.  Please envision with me, emoji have such depth of meaning as they are on everyone's phone & pervasively used.  Imagine in the future there is a simple class in drawings.py, Emojimob, where the user can quickly and conveniently specify an emoji shortcode (its name), and manim returns the emoji graphic as an SVGMobject. What a world of expression would be opened up. If a mathematical formula is wrong, we put the `:prohibited:` :no_entry_sign:  emoji or `:skull_and_crossbones:` :skull_and_crossbones: on it. If a formula is right, we could display a `:star:` :star: or a `:100:` :100:. If a formula is too complicated, :poop:. Users could make their own substitute for pi creatures simply by using an emoji smiley as a head, and all the variants to show their emotions.  If a picture is worth a thousand words, emoji step that up a notch because they bring so much extra implicit meaning. We prefer SVG to PNG because of the arbitrary scaling and the ability to manipulate submobjects (eg smiley face, animate its eyebrow raising).  Adding basic support for gradient fills is a big step toward making the Noto Emoji usable within manim.\r\n\r\n## Proposed changes\r\n<!-- What you changed in those files -->\r\nWe propose to capture the SVG's gradient fill information and give it to the SVGMobject.  Manim itself already has some support for linear gradient fills, so all we do is tell manim about the SVG's gradients and manim will use them as best it can. \r\nThe pull request is 10 lines of code - could be made more robust however this code is deactivated by default, so nothing can break unless the user asks for it.\r\n\r\n## Test\r\n<!-- How do you test your changes -->\r\n**Code**:\r\nHere is a Scene that downloads two Noto emoji SVG from the Noto github and displays them, \"before\" and \"after\" style.  Since the user must actively choose the new gradient fill logic, we can implement 'before' and 'after' just by using the CONFIG option `'gradient_fills: True'` that we send to SVGMobject.\r\n\r\nThe variable `filnms` is setup with a hardcode of two representative emoji.  For a limitless smorgasbord of emoji, uncomment the lines at the top to download the entire emoji dictionary, parse it, and store it into `filnms` (also commenting out the other `filnms`)\r\n```\r\nfrom manimlib import *\r\n\r\n#for even more fun, uncomment to get the entire dictionary of every emoji (comment the other one)\r\n#\r\n#import json\r\n#from urllib.request import urlopen\r\n#emjdat = urlopen(\"https://raw.githubusercontent.com/googlefonts/emoji-metadata/main/emoji_14_0_ordering.json\")\r\n#filnms = [{\"alias\":alias,\"filnm\": 'emoji_u'+ \"_\".join(filter(None,[ format(x,'04x').replace('fe0f','') for x in codes]))} for alias,codes in [('  '.join(emj[\"shortcodes\"]),altbas) for grp in json.load(emjdat) if grp[\"group\"] != \"Flags\" for emj in grp[\"emoji\"] if emj[\"shortcodes\"] not in [[':foot:']] for altbas in emj[\"alternates\"] or [emj[\"base\"]] ] ]\r\n\r\n#Or, just specify a couple of emoji to test\r\n# these two highlight the improvement from the new code\r\n#\r\nfilnms = [ {\"filnm\":\"emoji_u1f633\",\"alias\":\"flushed face\"} ,{\"filnm\":\"emoji_u1f56f\",\"alias\":\"candle\"} ]\r\n\r\n#Where to get the emoji SVG\r\n# automatically download from internet on the fly (slow) \r\n# or point to a local dir of them that you downloaded previously\r\n#\r\n#noto_url = \"noto/\"\r\nnoto_url = \"https://raw.githubusercontent.com/googlefonts/noto-emoji/main/\"\r\n\r\n############################\r\n#Current SVGMobject: no changes/no gradients since the new code is not used by default\r\n############################\r\nclass Emojiold(SVGMobject):\r\n  CONFIG = { \"svg_default\": { \"stroke_width\": 0.0 } }\r\n  def __init__(self, **kwargs):\r\n    SVGMobject.__init__(self, **kwargs)\r\n\r\n############################\r\n#New Gradient Fills: user must actively choose with config \"gradient_fills\"\r\n############################\r\nclass Emojinew(SVGMobject):\r\n  CONFIG = { \"svg_default\": { \"stroke_width\": 0.0 }, \"gradient_fills\": True}\r\n  def __init__(self, **kwargs):\r\n    SVGMobject.__init__(self,  **kwargs)\r\n\r\n############################\r\n#Scene\r\n############################\r\nclass GradientTest(Scene):\r\n  def construct(self):\r\n    for emoji in filnms:\r\n      self.clear()\r\n      oldemj = Emojiold(file_name=noto_url+\"svg/\"+emoji[\"filnm\"]+\".svg\").scale(2).shift(LEFT*3.5)\r\n      newemj = Emojinew(file_name=noto_url+\"svg/\"+emoji[\"filnm\"]+\".svg\").scale(2).shift(RIGHT*3.5)\r\n      self.add(ComplexPlane(), oldemj, newemj,\r\n               Text(emoji[\"filnm\"]).to_edge(UP+LEFT), Text(emoji[\"alias\"]).to_edge(DOWN+LEFT),\r\n               Text(\"OLD\").next_to(oldemj,DOWN),Text(\"NEW\").next_to(newemj,DOWN))\r\n      self.wait(5/self.camera.frame_rate)  # 5 frames each\r\n```\r\n\r\n**Result**:\r\nI tested using most every Noto emoji (a few thousand). This new logic turns most of the unusable Noto emoji into usable, and nothing breaks.  Note `:foot:` :foot: is the one single Noto emoji SVG that breaks manim, whether using old logic or new (nothing to do with gradient fills) and so I omitted it.  I also omitted country flags because they would need some additional twisting to bring in, and many are broken anyway (both old and new, nothing to do with gradient fills).  I consider these (and other) issues in scope for a different, future topic.\r\nBelow are manim videos of all these, 'before' and 'after' style. Looking at the 'afters', this change gets the vast majority of Noto emoji to some level of usability, and it's a nice way for other improvements to suggest themselves for SVGMobject in the future. If we get to step 1, I could see it leading to community interest in helping with those too.\r\nDue to 10mb size limitation I had to make 1 frame per each emoji & split into two files. Hopefully there is a way to step frame-by-frame or you have gaming quality reaction times.\r\n**Every Noto Emoji 1-2000:\r\nhttps://user-images.githubusercontent.com/40634339/160312137-d3a983ff-7651-4ee8-900b-dbde29e516d2.mp4\r\n\r\n**Every Noto Emoji 2000+ \r\nhttps://user-images.githubusercontent.com/40634339/160312177-80b3f3b4-3c72-48bc-b4ca-59a1dcdaac3b.mp4\r\n\r\n**Random sample in UHD\r\nHere is every fiftieth emoji (i.e., a random sampler) in UHD, slowed down to 1 second per emoji.\r\nhttps://user-images.githubusercontent.com/40634339/160312842-0c6bb27a-f158-4bc2-9813-a3ef987e1ddb.mp4\r\n\r\n\r\n\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-03-27T00:43:11Z",
        "closed_at": "2022-03-28T16:30:01Z",
        "merged_at": "2022-03-28T16:30:01Z",
        "body": "<!-- Thanks for contributing to manim!\r\n    Please ensure that your pull request works with the latest version of manim.\r\n-->\r\n\r\n## Motivation\r\n<!-- Outline your motivation: In what way do your changes improve the library? -->\r\nManim does not provide feedback to the user while processing a long-running SVG mobject.\r\nSince manim typically runs so fast, a long-running SVG catches the user by surprise. Personally it took me a few hours to figure out that manim was not freezing, rather it was just taking a long time on a complicated SVG.\r\n\r\n\r\n## Proposed changes\r\n<!-- What you changed in those files -->\r\nThis change gives the user some feedback while processing a complicated SVG.\r\nSpecifically:  \r\nIf the SVG has over 100 rings to process, we display a counter to log.info once per 100 processed rings.  Thus the user learns manim is working on a long-running operation.\r\nIf the SVG has under 100 rings, this change has no effect. Manim will process it quick enough.\r\n\r\n## Test\r\n<!-- How do you test your changes -->\r\n**Code**:\r\nI tested with the Noto emoji - Afghan flag SVG.  Here is the complete scene code, which automatically gets the SVG from the internet so no additional files are needed. \r\nPaste into a blank _.py file and run manimgl _.py  \r\nTry it without the pull request, and it will seem that manimgl has frozen with a blank screen.\r\nTry it with the pull request, and rest reassured manim is working.\r\n```\r\nfrom manimlib import *\r\n\r\nclass Flagtest(Scene):\r\n    def construct(self):\r\n        flag_url = \"https://raw.githubusercontent.com/googlefonts/noto-emoji/main/third_party/region-flags/svg/AF.svg\"\r\n        flag_mob = SVGMobject(flag_url, svg_default = { \"stroke_width\": 0 } )\r\n        flag_mob.scale( min( self.camera.frame.get_width()/flag_mob.get_width(), self.camera.frame.get_height()/flag_mob.get_height() ) )\r\n        self.add(flag_mob)\r\n```\r\n\r\n**Result**:\r\n```\r\n(manimlib) sunkisser@localhost ~/manimlib $ manimgl flagtest.py\r\nManimGL v1.5.0\r\n[00:30:09] INFO     Using the default configuration file, which you can modify in            config.py:265\r\n                    `/home/sunkisser/manimlib/manim/manimlib/default_config.yml`                          \r\n           INFO     If you want to create a local configuration file, you can create a file  config.py:266\r\n                    named `custom_config.yml`, or run `manimgl --config`                                  \r\n[00:30:12] INFO     Tips: You are now in the interactive mode. Now you can use the keyboard   scene.py:119\r\n                    and the mouse to interact with the scene. Just press `q` if you want to               \r\n                    quit.                                                                                 \r\n           INFO     SVG triangulation: 0/753                                              space_ops.py:420\r\n[00:30:19] INFO     SVG triangulation: 100/753                                            space_ops.py:420\r\n[00:30:33] INFO     SVG triangulation: 200/753                                            space_ops.py:420\r\n[00:30:53] INFO     SVG triangulation: 300/753                                            space_ops.py:420\r\n[00:31:17] INFO     SVG triangulation: 400/753                                            space_ops.py:420\r\n[00:31:47] INFO     SVG triangulation: 500/753                                            space_ops.py:420\r\n[00:32:20] INFO     SVG triangulation: 600/753                                            space_ops.py:420\r\n[00:32:57] INFO     SVG triangulation: 700/753                                            space_ops.py:420\r\n[00:33:13] INFO     SVG triangulation: 752/753                                            space_ops.py:420\r\n```\r\n\r\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 54,
        "deletions": 76,
        "changed_files": 6,
        "created_at": "2022-03-23T04:27:34Z",
        "closed_at": "2022-03-23T06:17:34Z",
        "merged_at": "2022-03-23T06:17:34Z",
        "body": "## Motivation\r\nResolve conflicts of #1736 and #1751, and adjust some typings. \r\n\r\n## Proposed changes\r\n- M `docs/source/documentation/constants.rst`: remove `START_X`, `START_Y` constants\r\n- M `manimlib/constants.py`: remove `START_X`, `START_Y` constants\r\n- M `manimlib/mobject/svg/mtex_mobject.py`: adjust typings\r\n- M `manimlib/mobject/svg/svg_mobject.py`: remove unused method `get_mobject_from`\r\n- M `manimlib/mobject/svg/text_mobject.py`: add type hints; remove an unused import\r\n\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-03-17T06:16:07Z",
        "closed_at": "2022-03-17T16:06:42Z",
        "merged_at": "2022-03-17T16:06:42Z",
        "body": "<!-- Thanks for contributing to manim!\r\n    Please ensure that your pull request works with the latest version of manim.\r\n-->\r\n\r\n## Motivation\r\nFix the width of riemann rectangles\r\n\r\n## Proposed changes\r\nChange the width from `x1 - x0` to `width=self.x_axis.n2p(x1)[0] - self.x_axis.n2p(x0)[0]`.\r\n\r\nThe former means the global coord width while the latter means custom coord width. \r\n\r\n## Test\r\n<!-- How do you test your changes -->\r\n![image](https://user-images.githubusercontent.com/55699713/158748366-98369da3-43d8-4f10-81c2-0dd0cb395a77.png)\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2022-03-06T05:59:27Z",
        "closed_at": "2022-03-06T17:27:22Z",
        "merged_at": "2022-03-06T17:27:22Z",
        "body": "<!-- Thanks for contributing to manim!\r\n    Please ensure that your pull request works with the latest version of manim.\r\n-->\r\n\r\n## Motivation\r\n<!-- Outline your motivation: In what way do your changes improve the library? -->\r\nSometimes a graph is initialized with ```get_graph``` method, which stores the function into ```self.underlying_function``` attributes. While for function graphs, they are stored in ```self.function``` attribute.\r\nReorganizing getters can help to avoid Attribution error, when trying to initialize another graph that shares the same function with an existing graph.\r\n\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 424,
        "deletions": 514,
        "changed_files": 4,
        "created_at": "2022-03-02T11:54:40Z",
        "closed_at": "2022-03-22T16:50:43Z",
        "merged_at": "2022-03-22T16:50:43Z",
        "body": "## Motivation\r\nThe current `Text`, `MarkupText` classes are a copied version from community edition, and should run together with old manimpango versions. I heard that the community had a future development plan for manimpango, so I decided to refactor the two classes to fit the code style in manimgl, while using the latest manimpango version as a requirement.\r\n\r\nIn my modified code, `MarkupText` becomes almost an alias of `Text`. Parameters are rearranged:\r\n\r\n**Added**\r\n- `is_markup`: A boolean (default `False` in `Text`, while `True` in `MarkupText`) representing whether the given string uses markup syntax.\r\n- `justify`: A boolean (default `False`) to determine whether each line of a paragraph is slightly stretched to align at both edges.\r\n- `indent`: An integer (default `0`) representing the indent of each paragraph.\r\n- `alignment`: A string (one of `LEFT`, `CENTER`, `RIGHT`, default `LEFT`) to determine which direction to align if not justified.\r\n- `line_width_factor`: A float | None (default `None`) to determine where the text should wrap, e.g. `1.0` means the text is wrapped just to fit the full screen. `None` stands for disabling automatic wrappings (you can still wrap lines via inserting `\"\\n\"`).\r\n- `apply_space_chars`: A boolean (default `True` in `Text`, while `False` in `MarkupText`) to determine whether empty mobjects should be inserted as spaces. However, applying spaces may raise IndexError if some characters exceed the canvas in pango, or if ligatures, underlines, background rectangles occur in text. When slicing `Text` object via `get_part(s)_by_text`, `apply_space_chars` should be made sure to set to `True`, or a warning is raised. (Sidenote, currently the parameter `disable_ligatures` doesn't affect the output, and ligatures are always applied if there exist some in the font.)\r\n- `global_config`: A dict (type `dict[str, Any]`, default `{}`) holding extra global configurations on text. Keys can be any attribute supported by pango. (You may look through all attributes supported by pango in this website: https://docs.gtk.org/Pango/pango_markup.html)\r\n- `local_configs`: A dict (type `dict[str | tuple[int, int], dict[str, Any]]`, default `{}`) holding extra local configuration dicts on text. Keys can be either a string (indicating several ranges that match) or a tuple (indicating a single range), and keys of each local configuration dict can be any attribute supported by pango.\r\n\r\n**Modified**\r\n- `t2c`, `t2f`, `t2s`, `t2w`: (type `dict[str | tuple[int, int], Any]`, default `{}`) Users can now set either a string (indicating several ranges that match) or a tuple (indicating a single range) as a key of any one of those dicts. Strings like `[2:5]` will no longer be regarded as ranges.\r\n- `t2g`: Pango cannot handle gradients, so please use `set_color_by_gradient` instead. A deprecation warning is raised if `t2g` is set.\r\n\r\n**Removed**\r\n- `size`: This is originally an alias of `font_size`. The deprecation warning is removed.\r\n- `tab_width`: Originally `tab_width * \" \"` is used to replace all tabs, but it's not useful since `\"\\t\"` can be handled in pango.\r\n\r\nBehaviors of the rest parameters in `CONFIG` are preserved for backwards compatibility.\r\n\r\n## Proposed changes\r\n- M `manimlib/mobject/svg/text_mobject.py`: Refactor `Text`, `MarkupText`, `Code`.\r\n- M `manimlib/mobject/svg/svg_mobject.py`: Avoid issue brought by trailing \"Z M\" commands.\r\n- M `setup.cfg`: Update version requirement for manimpango.\r\n- M `requirement.txt`: Update version requirement for manimpango.\r\n\r\n## Test\r\n**Code**:\r\n```python\r\ntext = Text(\r\n    \"Hello Pango\",\r\n    global_config={\"underline\": \"double\", \"underline_color\": MAROON},\r\n    local_configs={\"Pango\": {\"bgcolor\": TEAL}}\r\n)\r\nself.add(text)\r\n```\r\n\r\n**Result**:\r\n![TextTest](https://user-images.githubusercontent.com/50232075/156356951-bfc1c3a6-798b-4456-a490-9e2d99d4b52d.png)\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 38,
        "deletions": 30,
        "changed_files": 1,
        "created_at": "2022-02-17T14:08:10Z",
        "closed_at": "2022-02-17T15:23:19Z",
        "merged_at": null,
        "body": "<!-- Thanks for contributing to manim!\r\n    Please ensure that your pull request works with the latest version of manim.\r\n-->\r\n\r\n## Motivation\r\n<!-- Outline your motivation: In what way do your changes improve the library? -->\r\nAllows the users to have a better understanding of the license agreement of the repository.\r\n\r\n## Proposed changes\r\n<!-- What you changed in those files -->\r\n- added a more detailed license statement in README.md\r\n- \r\n- \r\n\r\n## Test\r\n<!-- How do you test your changes -->\r\n**Code**:\r\n\r\n**Result**:",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 229,
        "deletions": 221,
        "changed_files": 7,
        "created_at": "2022-02-15T12:33:16Z",
        "closed_at": "2022-02-15T18:05:53Z",
        "merged_at": "2022-02-15T18:05:53Z",
        "body": "## Motivation\r\nFix some potential bugs left in #1731.\r\n\r\n## Proposed changes\r\n- M `manimlib/mobject/svg/svg_mobject.py`: Add `svg_default` dictionary to allow users to specifically fill in style attributes to elements whose style is not specified in svg scope (and the functionality of `init_colors` is therefore preserved); use `xml.dom.ElementTree` package to parse style attributes in the outer svg tag; use `SVG_HASH_TO_MOB_MAP` to cache svg mobjects\r\n- M `manimlib/mobject/svg/drawings.py`: Remove unnecessary `init_colors` override\r\n- M `manimlib/mobject/svg/text_mobject.py`: Remove unnecessary `set_fill` process\r\n- M `manimlib/mobject/svg/mtex_mobject.py`: Reorganize inheriting structure (`MTex` inherits from `SVGMobject`)\r\n- M `manimlib/mobject/svg/tex_mobject.py`: Reorganize inheriting structure (`SingleStringTex` inherits from `SVGMobject`)\r\n- M `manimlib/utils/tex_file_writing.py`: Avoid the message from being too long\r\n- M `manimlib/utils/iterables.py`: Add `hash_obj` function to hash objects that may contain dictionaries\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2022-02-15T02:19:01Z",
        "closed_at": "2022-02-15T17:59:46Z",
        "merged_at": "2022-02-15T17:59:46Z",
        "body": "Added config passing for text\r\n\r\n<!-- Thanks for contributing to manim!\r\n    Please ensure that your pull request works with the latest version of manim.\r\n-->\r\n\r\n## Motivation\r\n<!-- Outline your motivation: In what way do your changes improve the library? -->\r\n\r\nGive users option to change the text config for ```DecimalNumber```\r\n\r\n## Proposed changes\r\n<!-- What you changed in those files -->\r\n- Added ```text_config``` in decimal number config\r\n- Removed extra ```init_colors()``` so that ```t2c``` can be passed in\r\n- Adjusted```string_to_mob``` method so key word arguments can be accepted, meanwhile maintain the``` string_to_mob_map```\r\n\r\n## Test\r\n<!-- How do you test your changes -->\r\n**Code**:\r\n```python\r\nclass Test(Scene):\r\n    def construct(self):\r\n        a = DecimalNumber(1.02, show_ellipsis=True)\r\n        b = DecimalNumber(1.02, show_ellipsis=True, \r\n                            text_config=dict(font=\"\u4eff\u5b8b\", slant=ITALIC)).shift(DOWN)\r\n        c = DecimalNumber(1.02, show_ellipsis=True, \r\n                            text_config=dict(font=\"Times New Romen\", t2c={'0':RED})).shift(2*DOWN)\r\n        self.add(a, b, c)\r\n```\r\n\r\n**Result**:\r\n![image](https://user-images.githubusercontent.com/86190295/153979187-a667c576-d0a9-4fe4-8974-5c49c31cb405.png)\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 8,
        "changed_files": 6,
        "created_at": "2022-02-12T17:33:56Z",
        "closed_at": "2022-02-13T03:12:42Z",
        "merged_at": "2022-02-13T03:12:41Z",
        "body": "## Motivation\r\n\r\n- Minor edits\r\n  - Remove unnecessary imports\r\n  - Remove duplicated keys\r\n  - Add `,` for symmetry's sake (unneeded because it's `join`ed anyway but still)\r\n  - Remove `time_per_edge`\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2801,
        "deletions": 1378,
        "changed_files": 62,
        "created_at": "2022-02-12T15:52:45Z",
        "closed_at": "2022-03-22T18:05:10Z",
        "merged_at": "2022-03-22T18:05:10Z",
        "body": "Add type hints according to [PEP 484](https://www.python.org/dev/peps/pep-0484/), [PEP 526](https://www.python.org/dev/peps/pep-0526/) and [PEP 604](https://www.python.org/dev/peps/pep-0604/)\r\n\r\n## Motivation\r\n\r\nThe motivation for this is to allow the IDE (language server) to better analyze the code and give type hints like:\r\n<img width=\"715\" alt=\"image\" src=\"https://user-images.githubusercontent.com/44120331/154065308-c147997d-31ac-4eea-b231-b15633b8a68f.png\">\r\nAnd this also provides convenience for writing API documentation in the next step\r\n\r\n## Changes\r\n\r\nI manually wrote type annotations for almost all class methods and functions following these PEP standards. \r\nHowever, due to the dynamic addition of attributes using `CONFIG` and `digest_config`, the types of some attribute values \u200b\u200bcannot be annotated and therefore the whole module cannot be checked with static type checkers such as `mypy`. So this annotation is **exactly** like a **comment**.\r\n\r\nAnd it's worth mentioning that in this pull request, I upgraded the python version available for ManimGL to python 3.7 and above (i.e. python 3.6 is no longer supported). Because the type annotation system has been relatively complete since 3.7, and numpy no longer supports 3.6 since 1.20 (the `numpy.typing` submodule has only been added since version 1.20)\r\nI'm not sure if it's worth giving up on 3.6, but maybe that's a general trend.\r\n\r\nBecause the changes in this PR are almost type annotations, except for some additions of import, it will not affect the normal usage (python will not check whether the variable type satisfies the annotation at runtime)\r\n\r\nBy the way, in this pull request, I also changed the order of imports according to the PEP 8 (that is, `from __future__ import` first, then an empty line for built-in modules, an empty line for third-party modules, and an empty line for local modules)\r\n\r\n## Progress\r\n- [x] `manimlib.utils`\r\n- [x] `manimlib.camera`\r\n- [x] `manimlib.mobject`\r\n    - [x]  `manimlib.mobject.mobject`\r\n    - [x]  `manimlib.mobject.types`\r\n    - [x]  `manimlib.mobject.svg`\r\n- [x] `manimlib.animation`\r\n- [x] `manimlib.event_handler`\r\n- [x] `manimlib.scene`\r\n- [x] `manimlib.shader_wrapper`\r\n- [x] `manimlib.window`",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 245,
        "deletions": 627,
        "changed_files": 10,
        "created_at": "2022-02-09T16:05:56Z",
        "closed_at": "2022-02-11T15:53:21Z",
        "merged_at": "2022-02-11T15:53:21Z",
        "body": "## Motivation\r\nTry using external library `svgelements` to refactor SVGMobject.\r\n\r\n## Proposed changes\r\n- M `manimlib/mobject/svg/svg_mobject.py`: use `svgelements` to parse svg files\r\n- M `manimlib/mobject/svg/tex_mobject.py`: remove `override` attribute from `init_colors` method; cut off global style-applying process from `init_colors`\r\n- M `manimlib/mobject/svg/text_mobject.py`: remove `init_colors` inheritance; add `set_fill` process since svg files rendered by `Text` have the black color specified\r\n- M `manimlib/mobject/svg/mtex_mobject.py`: replace `.fill_color` with `.get_fill_color()`\r\n- M `manimlib/mobject/mobject.py`: remove `override` attribute from `init_colors` method\r\n- M `manimlib/mobject/geometry.py`: add `Polyline` class; remove `override` attribute from `init_colors` method\r\n- M `manimlib/mobject/types/surface.py`: remove `override` attribute from `init_colors` method\r\n- M `manimlib/mobject/types/vectorized_mobject.py`: remove `override` attribute from `init_colors` method\r\n- M `requirements.txt`: update requirements (add `svgelements`, remove `cssselect2`)\r\n- M `setup.cfg`: update requirements (add `svgelements`, remove `cssselect2`)\r\n\r\n## Notes\r\n- For each submobject of `SVGMobject`, 5 attributes (`fill_color`, `fill_opacity`, `stroke_width`, `stroke_color`, `stroke_opacity`) depend on the result of style parsing. If not specified, they will be set as default attributes passed to `SVGMobject` class. `set_fill`, `set_stroke` methods can still apply style globally.\r\n- `unpack_groups` attribute is removed as the structure may be modified. Now `SVGMobject` always unpacks submobjects.\r\n- Some changes may also have to be made to `MarkupText`, just like `Text`, but I cannot run `MarkupText` and cannot look into svg files rendered by it.\r\n- `<text>` tags in svg are still not handled.\r\n- A scaling process with scalar 0.75 is applied so that the size of a mobject remains as before.\r\n- The outer svg tag may also contain style, which is ignored when inserting a group tag in svg content. This may be handled in the future.\r\n- I notice that it's more reasonable to let `SingleStringTex` and `MTex` both inherit from `SVGMobject`, and in community edition they do. This may also be handled later.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 41,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2022-02-05T08:30:13Z",
        "closed_at": "2022-02-07T16:24:41Z",
        "merged_at": "2022-02-07T16:24:40Z",
        "body": "## Motivation\r\nImplement `ImplicitFunction` class using `isosurfaces` package. This is borrowed from manim community edition.\r\n\r\n## Proposed changes\r\n- M `manimlib/mobject/functions.py`: implement ImplicitFunction\r\n- M `requirements.txt`: add dependency\r\n- M `setup.cfg`: add dependency\r\n\r\n## Test\r\n**Code**:\r\n```python\r\nclass FuncTest(Scene):\r\n    def construct(self):\r\n        graph = ImplicitFunction(\r\n            lambda x, y: x * y ** 2 - x ** 2 * y - 2,\r\n            color=YELLOW\r\n        )\r\n        self.add(NumberPlane(), graph)\r\n```\r\n**Result**:\r\n![FuncTest](https://user-images.githubusercontent.com/50232075/152634549-4ec1e575-a75a-46ed-8234-7f5a23220b2d.png)\r\n\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 535,
        "deletions": 482,
        "changed_files": 2,
        "created_at": "2022-02-02T12:28:35Z",
        "closed_at": "2022-02-07T16:21:54Z",
        "merged_at": "2022-02-07T16:21:53Z",
        "body": "## Motivation\r\nThis is (possibly) the last overall refactoring applied to MTex class. The structure is updated to prevent from polluting namespace, and some algorithms of methods are improved.\r\n\r\nThere are some small difference between this version and former pull requests. For example,\r\n- Color-related commands, from now on, are not allowed since they are really tricky to hangle in MTex;\r\n- Substrings specified are stripped;\r\n- Whitespaces and \"\\_\", \"^\" can be skipped when matching tex (you can match \"a b\" if \"a\" and \"b\" are isolated);\r\n- Tex strings of submobjects are formatted so that they can be matched more easily.\r\n\r\nAlso, the class `TransformMatchingMTex` is implemented. It tries to match as long and complete strings as possible. Hope this would be helpful :) \r\n\r\n## MTex guideline\r\n### Basic usage\r\n**Relative methods**\r\n```python\r\nMTex.__init__(self, tex_string, **kwargs)\r\nMTexText.__init__(self, tex_string, **kwargs)\r\n```\r\n\r\nMTex only takes in a complete tex string. The string is stripped at the very beginning to avoid problems.\r\n```python\r\nmtex = MTex(\"\\\\mathrm{e}^{i \\\\pi} + 1 = 0\")\r\nself.add(mtex)\r\n```\r\n<details>\r\n<summary>Result</summary>\r\n\r\n![MTexTest0](https://user-images.githubusercontent.com/50232075/152153506-cec82eb0-0618-4976-8b63-3515e1d002ec.png)\r\n</details>\r\n\r\n```python\r\nquestionable_mtex = MTex(\"\\\\mathrm{e}^{i \\\\pi}\", \"+\", \"1\", \"=\", \"0\")  # Not okay\r\n# TypeError: __init__() takes 2 positional arguments but 6 were given\r\n```\r\n\r\nThe default configuration is listed as follows:\r\n```python\r\nCONFIG = {\r\n    \"fill_opacity\": 1.0,\r\n    \"stroke_width\": 0,\r\n    \"font_size\": 48,\r\n    \"alignment\": \"\\\\centering\",\r\n    \"tex_environment\": \"align*\",\r\n    \"isolate\": [],\r\n    \"tex_to_color_map\": {},\r\n    \"use_plain_tex\": False,\r\n}\r\n```\r\n\r\nJust like Tex, MTex is rendered in math mode by default, as `tex_environment` is set to `\"align*\"`. Users may use other environments like:\r\n```python\r\nmtex = MTex(\"\\\\mathrm{e}^{i \\\\pi} + 1 = 0\", tex_environment=\"equation\")\r\nself.add(mtex)\r\n```\r\n<details>\r\n<summary>Result</summary>\r\n\r\n![MTexTest1](https://user-images.githubusercontent.com/50232075/152153536-2c433456-d895-47cd-af3f-c6eadd937c57.png)\r\n</details>\r\n\r\n```python\r\n# mtextext = MTex(\"text\", tex_environment=None)\r\n# Equivalent to:\r\nmtextext = MTexText(\"text\")\r\nself.add(mtextext)\r\n```\r\n<details>\r\n<summary>Result</summary>\r\n\r\n![MTexTest2](https://user-images.githubusercontent.com/50232075/152153555-8c127ef2-575d-4c95-bd3f-a63e5d480962.png)\r\n</details>\r\n\r\nIf an environment takes in parameters, please include `\\begin` and `\\end` commands in the content.\r\n```python\r\ntable = MTexText(\"\"\"\r\n    \\\\begin{table}[htb]\r\n    \\\\begin{center}\r\n    \\\\label{table:1} \r\n    \\\\begin{tabular}{|c|c|c|}\r\n    \\\\hline \\\\textbf{Algorithms} & \\\\textbf{Complexity} & \\\\textbf{Overhead} \\\\\\\\\r\n    \\\\hline algorithm 1 & high & low \\\\\\\\\r\n    \\\\hline algorithm 2 & high & low \\\\\\\\\r\n    \\\\hline algorithm 3 & low & low \\\\\\\\\r\n    \\\\hline\r\n    \\\\end{tabular}\r\n    \\\\end{center}\r\n    \\\\end{table}\r\n\"\"\")\r\nself.add(table)\r\n```\r\n<details>\r\n<summary>Result</summary>\r\n\r\n![MTexTest3](https://user-images.githubusercontent.com/50232075/152153573-ed494afe-c8e0-42b6-acd1-218f0db7dedc.png)\r\n</details>\r\n\r\n### Specify substrings\r\n**Relative methods**\r\n```python\r\nMTex.__init__(self, tex_string, isolate=isolate, tex_to_color_map=tex_to_color_map, use_plain_tex=use_plain_tex)\r\nMTex.get_specified_substrings(self)\r\n```\r\n\r\nUsers may specify some substrings for manipulation using one of the following methods:\r\n- Enclose a substring by a pair of double braces (the final substring will have braces included);\r\n- Set a substring as a key of `tex_to_color_map` dict;\r\n- Add a substring to `isolate` list.\r\n\r\nEvery substring specified should be a valid tex string itself. Or, more particularly, after inserting a pair of braces enclosing it, the tex string should still be valid.\r\n```\r\n\"\\left( x + y \\right)^2\"\r\n\"x\": valid\r\n\"x + y\": valid\r\n\"\\left( x + y \\right)\": valid\r\n\"\\left(\": invalid\r\n\"2\": valid (but not recommended, since superscripts are already broken up and needn't be specified)\r\n\"^2\": valid (but not recommended)\r\n\"(\": invalid\r\n```\r\n\r\nEach two substrings specified shall not partially overlap, but one completely overlapping another is okay:\r\n```\r\n\"abcd\"\r\n\"abc\" and \"d\" can coexist\r\n\"abc\" and \"bc\" can coexist\r\n\"abc\" and \"cd\" cannot coexist\r\n```\r\n\r\nAll substrings specified through one of the methods above will be included in `specified_substrings` list, which is available by calling `self.get_specified_substrings()`.\r\n```python\r\nmtex = MTex(\"{{1}}234\", isolate=[\"2\"], tex_to_color_map={\"3\": BLUE})\r\nprint(mtex.get_specified_substrings())\r\n# ['{{1}}', '2', '3']\r\n```\r\n\r\nSpecifying substrings may change the shape of svg rendered, since the tex string is modified after all. Users may specify `use_plain_tex=True` to avoid alteration in shape.\r\n\r\n```python\r\ngroup = VGroup(\r\n    MTex(\"1 + 1\", isolate=[\"+\"]),\r\n    MTex(\"1 + 1\", isolate=[\"+\"], use_plain_tex=True),\r\n    MTex(\"1 {{+}} 1\"),\r\n).arrange(DOWN)\r\nself.add(group)\r\n```\r\n<details>\r\n<summary>Result</summary>\r\n\r\n![MTexTest4](https://user-images.githubusercontent.com/50232075/152494883-dc0854f3-8332-49d9-b51f-6655628df538.png)\r\n</details>\r\n\r\n### Selecting mobjects through substrings\r\n**Relative methods**\r\n```python\r\nMTex.get_parts_by_tex(self, tex)\r\nMTex.get_part_by_tex(self, tex, index=0)\r\nMTex.set_color_by_tex(self, tex, color)\r\nMTex.indices_of_part_by_tex(self, tex, index=0)\r\nMTex.get_isolated_substrings(self)\r\nMTex.get_submob_tex(self)\r\n```\r\n\r\nUsers may search for submobjects that a substring refers to using `get_parts_by_tex()` or `get_part_by_tex()` method. `get_parts_by_tex()` returns a VGroup with several parts, each of which is a VGroup of submobjects given by a possible match object. Note that in MTex, \"part\" is regarded as a VGroup of submobjects. The string should be part of the original tex string, and should be able to be split into several substrings that are in the list given by `get_isolated_substrings()`, and a few characters leftover should be whitespaces or \"\\_\", \"^\".\r\n\r\nMTex tries to assign each submobject with a formatted tex string (which is stripped and braces are matched). You may check out their tex strings via `get_submob_tex()`. This method can be used together with `index_labels()`. However, the process cannot ensure 100% correctness, and tex strings are only assigned for reference.\r\n```python\r\nmtex = MTex(\r\n    \"\\\\Vert \\\\mathbf{x} \\\\Vert_{p} = \\\\sqrt[{p}]{x_1^{p} + x_2^{p} + \\\\cdots + x_n^{p}}\",\r\n    tex_to_color_map={\r\n        \"{p}\": GREEN_B,\r\n        \"x_1\": BLUE_B,\r\n        \"x_2\": BLUE_C,\r\n        \"x_n\": BLUE_E,\r\n    }\r\n)\r\ngroup = VGroup(mtex, mtex.copy()).arrange(DOWN)\r\nself.add(group, index_labels(group[1]))\r\nprint(mtex.get_specified_substrings())\r\n# ['x_1', 'x_2', 'x_n', '{p}']\r\nprint(mtex.get_isolated_substrings())\r\n# ['\\\\Vert \\\\mathbf{x} \\\\Vert_{p} = \\\\sqrt[{p}]{x_1^{p} + x_2^{p} + \\\\cdots + x_n^{p}}', '1', '2', 'n', 'x', '{p}']\r\nprint(mtex.get_submob_tex())\r\n# ['\\\\Vert \\\\mathbf{x} \\\\Vert', 'p', '= \\\\sqrt[', 'p', ']', 'x', '1', 'p', '+', 'x', '2', 'p', '+ \\\\cdots +', 'x', 'n', 'p']\r\nmtex.get_parts_by_tex(\"{p}\")  # Specified substring: okay\r\nmtex.get_parts_by_tex(\"x_1^{p}\")  # Can be split into \"x\", \"1\", \"{p}\" with \"_\", \"^\" leftover: okay\r\n# mtex.get_parts_by_tex(\"{x_1^{p} + x_2^{p} + \\\\cdots + x_n^{p}}\")  # Not okay\r\n# ValueError: Failed to match mobjects from tex: \"{x_1^{p} + x_2^{p} + \\cdots + x_n^{p}}\"\r\n```\r\n<details>\r\n<summary>Result</summary>\r\n\r\n![MTexTest5](https://user-images.githubusercontent.com/50232075/152629956-ab428c2d-bec6-4247-bf3b-081a82f41c4c.png)\r\n</details>\r\n\r\n```python\r\nmtex = MTex(\r\n    \"{{\\\\Gamma \\\\left( {z} \\\\right)}} = {{\\\\int_{0}^{\\\\infty} \\\\mathrm{e}^{- t} t^{{{z} - 1}} \\\\mathrm{d} t}}\",\r\n    isolate=[\r\n        \"=\",\r\n        \"\\\\int_{0}^{\\\\infty} \\\\mathrm{e}^{- t}\",\r\n        \"\\\\mathrm{d} t\"\r\n    ],\r\n    tex_to_color_map={\r\n        \"{z}\": YELLOW,\r\n        \"\\\\mathrm{e}\": MAROON_A\r\n    }\r\n)\r\ngroup = VGroup(mtex, mtex.copy()).arrange(DOWN)\r\nself.add(group, index_labels(group[1]))\r\nprint(mtex.get_specified_substrings())\r\n# ['{{\\\\Gamma \\\\left( {z} \\\\right)}}', '{{{z} - 1}}', '{{\\\\int_{0}^{\\\\infty} \\\\mathrm{e}^{- t} t^{{{z} - 1}} \\\\mathrm{d} t}}', '=', '\\\\int_{0}^{\\\\infty} \\\\mathrm{e}^{- t}', '\\\\mathrm{d} t', '\\\\mathrm{e}', '{z}']\r\nprint(mtex.get_isolated_substrings())\r\n# ['{{\\\\Gamma \\\\left( {z} \\\\right)}} = {{\\\\int_{0}^{\\\\infty} \\\\mathrm{e}^{- t} t^{{{z} - 1}} \\\\mathrm{d} t}}', '{0}', '{\\\\infty}', '{- t}', '{{{z} - 1}}', '{{\\\\Gamma \\\\left( {z} \\\\right)}}', '{{\\\\int_{0}^{\\\\infty} \\\\mathrm{e}^{- t} t^{{{z} - 1}} \\\\mathrm{d} t}}', '=', '\\\\int_{0}^{\\\\infty} \\\\mathrm{e}^{- t}', '\\\\mathrm{d} t', '\\\\mathrm{e}', '{z}']\r\nprint(mtex.get_submob_tex())\r\n# ['\\\\Gamma \\\\left(', 'z', '\\\\right)', '=', '\\\\int', '0', '\\\\infty', '\\\\mathrm{e}', '- t', 't', 'z', '- 1', '\\\\mathrm{d} t']\r\nmtex.get_parts_by_tex(\"{{{z} - 1}}\")  # Specified substring: okay\r\nmtex.get_parts_by_tex(\"_{0}\")  # Subscript that consists of \"{0}\" and \"_\": okay\r\nmtex.get_parts_by_tex(\"{{\\\\Gamma \\\\left( {z} \\\\right)}} =\")  # Can be split into two specified substrings and a whitespace: okay\r\n# mtex.get_parts_by_tex(\"\\\\int_{0}^{\\\\infty} \\\\mathrm{e}^{- t} t^{{{z} - 1}}\")  # Not okay\r\n# ValueError: Failed to match mobjects from tex: \"\\int_{0}^{\\infty} \\mathrm{e}^{- t} t^{{{z} - 1}}\"\r\n```\r\n<details>\r\n<summary>Result</summary>\r\n\r\n![MTexTest6](https://user-images.githubusercontent.com/50232075/152629973-d5d9da25-a74e-4807-870d-3a767474f848.png)\r\n</details>\r\n\r\n### Coloring\r\n\r\n**Relative methods**\r\n```python\r\nMTex.__init__(self, tex_string, color=color, tex_to_color_map=tex_to_color_map)\r\nMTex.set_color_by_tex(self, tex, color)\r\nMTex.set_color_by_tex_to_color_map(self, tex_to_color_map)\r\n```\r\n\r\nUsers may specify `color` attribute to control the base color of MTex, and specify `tex_to_color_map` attribute to color different parts of MTex. Pay attention that **color-related commands in the content of tex string (like `\\color`, `\\textcolor`, etc.) will lead to error in MTex**, so please avoid them.\r\n\r\nThe `set_color_by_tex()` method will override the color of target submobjects.\r\n```python\r\nmtex = MTex(\r\n    \"R {{G}} B\",\r\n    tex_to_color_map={\"R {{G}}\": RED},\r\n    color=BLUE\r\n)\r\nmtex.set_color_by_tex(\"{{G}}\", GREEN)\r\nself.add(mtex)\r\n```\r\n<details>\r\n<summary>Result</summary>\r\n\r\n![MTexTest7](https://user-images.githubusercontent.com/50232075/152153658-1ff62451-194b-4b6d-bd03-f86a3cf75441.png)\r\n</details>\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 173,
        "deletions": 109,
        "changed_files": 1,
        "created_at": "2022-01-27T15:18:55Z",
        "closed_at": "2022-01-29T16:01:48Z",
        "merged_at": "2022-01-29T16:01:48Z",
        "body": "## Proposed changes\r\n- M `manimlib/mobject/svg/mtex_mobject.py`\r\n> Since MTex uses color for indexing submobjects, tex that originally brought with `\\color` commands (or `\\textcolor`, etc.) will cause failure. So I handled such a situation. Also, I reconstructed the algorithm in `generate_tex()` function, making svg files generated as few as possible.\r\n\r\n## Test\r\n**Code**:\r\n```python\r\nfrom manimlib import *\r\n\r\n\r\nclass Test(Scene):\r\n    def construct(self):\r\n        mtex = MTex(\r\n            \"{\\\\color{green} R G} {{Y}} B\",\r\n            tex_to_color_map={\"R\": RED},\r\n            color=BLUE\r\n        )\r\n        mtex.set_color_by_tex(\"{{Y}}\", YELLOW)\r\n        self.add(mtex)\r\n```\r\n\r\n**Result**:\r\n![MathjaxTest](https://user-images.githubusercontent.com/50232075/151387986-7c3e664c-4c3a-4772-b36b-9469b840dc49.png)\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 108,
        "deletions": 84,
        "changed_files": 3,
        "created_at": "2022-01-27T10:31:56Z",
        "closed_at": "2022-01-27T21:33:14Z",
        "merged_at": "2022-01-27T21:33:14Z",
        "body": "<!-- Thanks for contributing to manim!\r\n    Please ensure that your pull request works with the latest version of manim.\r\n-->\r\n\r\n## Motivation\r\n<!-- Outline your motivation: In what way do your changes improve the library? -->\r\nhttps://github.com/3b1b/manim/pull/1717#issuecomment-1022344306\r\nI solved this issue. Use tinycss2 to parse style (including `<style>` tag and `style` attributes in other tags), and use cssselect2 to choose which tag to apply to based on selector.\r\nAnd in order to make cssselect2 handle selectors correctly, I replaced `xml.dom.minidom` with `xml.etree` for parsing SVG file, which also has more features.\r\n\r\nAt the same time, I also implemented the processing of the `<line>` tag by the way.\r\n\r\n## Proposed changes\r\n<!-- What you changed in those files -->\r\n- M `manimlib/mobject/svg/svg_mobject.py`: improve style parsing and implement the `<line>` tag\r\n- M `setup.cfg` & `requirements.txt`: add dependency of `cssselect2`(`tinycss2` will be installed along with it)\r\n\r\n## Test\r\n<!-- How do you test your changes -->\r\n**Code**:\r\n```python\r\nclass Code(Scene):\r\n    def construct(self):\r\n        svg = SVGMobject(\"beer.svg\", color=BLACK, height=6)\r\n        self.add(svg)\r\n```\r\n\r\n**Result**:\r\n![image](https://user-images.githubusercontent.com/44120331/151341038-152db106-51af-4dab-82b3-f1ecc1f94f49.png)\r\n\r\n**Code**:\r\n```python\r\nclass Code(Scene):\r\n    def construct(self):\r\n        svg = SVGMobject(\"line.svg\")\r\n        self.add(svg)\r\n```\r\n![line](https://user-images.githubusercontent.com/44120331/151341356-32b6102d-88ae-4f8d-a4f5-b9071068a840.svg)\r\n\r\n\r\n**Result**:\r\n![image](https://user-images.githubusercontent.com/44120331/151341239-cf34e08d-f4e1-4442-8cd1-9155f35ab027.png)\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 161,
        "deletions": 84,
        "changed_files": 7,
        "created_at": "2022-01-26T12:18:37Z",
        "closed_at": "2022-01-26T15:56:03Z",
        "merged_at": "2022-01-26T15:56:03Z",
        "body": "<!-- Thanks for contributing to manim!\r\n    Please ensure that your pull request works with the latest version of manim.\r\n-->\r\n\r\n## Motivation\r\n<!-- Outline your motivation: In what way do your changes improve the library? -->\r\nBefore, `SVGMobject` will remove all styles from a svg file.\r\nThis pull request parse the style for SVG by refering to [ManimCommunity/manim](https://github.com/ManimCommunity/manim).\r\nIn order to prevent the style generated layer by layer in `init_points` from being globally overwritten by the `init_colors` after it. I added a parameter `override` to `init_colors`, which is set to `True` by default (that is, consistent with the original performance), but when `override = False`, it will recurse layer by layer and set the color to the currently generated color.\r\n\r\n## Proposed changes\r\n<!-- What you changed in those files -->\r\n- M `manimlib/mobject/svg/svg_mobject.py`: add SVG style parser and fix some bugs of path string\r\n- M `manimlib/mobject/types/vectorized_mobject.py`: add `override` parameter to `init_colors`\r\n- M `manimlib/mobject/mobject.py`: synchronously update the parameters of `init_colors`\r\n- M `manimlib/mobject/geometry.py`: synchronously update the parameters of `init_colors`\r\n- M `manimlib/mobject/types/surface.py`: synchronously update the parameters of `init_colors`\r\n- M `manimlib/mobject/svg/tex_mobject.py`: synchronously update the parameters of `init_colors` and synchronize `SingleStringTex`'s `stroke_width` to `SVGMobject`\r\n- M `manimlib/mobject/svg/tex_mobject.py`: cache color in `tex_string_to_mob_map` together with tex_string\r\n- M `manimlib/mobject/svg/text_mobject.py`: replace `warnings.warn` with `log.warning`\r\n\r\n## Test\r\n<!-- How do you test your changes -->\r\nI tested all the svg files used in ManimCE for testing and each file renders correctly with color and stroke.\r\nAnd `Tex` `TexText` can correctly generate texts with color according to the corresponding LaTeX expression (`\\color{}`)\r\n\r\n\r\n**Code**:\r\n```python\r\nclass Code(Scene):\r\n    def construct(self):\r\n        svg = VGroup(\r\n            TexText(r\"test {\\color{red}and} {\\color{blue}test}\").set_width(10),\r\n            TexText(r\"test {\\color{red}and} {\\color{blue}test}\").set_width(10).set_color(WHITE),\r\n            TexText(r\"test {\\color{red}and} {\\color{blue}test}\", color=BLACK).set_width(10),\r\n        ).arrange(DOWN)\r\n        self.add(svg)\r\n```\r\n**Result**:\r\n![image](https://user-images.githubusercontent.com/44120331/151164308-7ba0da16-3d1e-4885-b78e-aee061eed808.png)\r\nAs can be seen from the above example, the color parameter is only the default color, and this color will be overwritten as long as a color is included in the SVG. If you want to ignore the color in SVG, you can directly `.set_color` again.\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 209,
        "deletions": 234,
        "changed_files": 6,
        "created_at": "2022-01-26T05:30:28Z",
        "closed_at": "2022-01-26T16:56:44Z",
        "merged_at": "2022-01-26T16:56:44Z",
        "body": "## Proposed changes\r\n- M `manimlib/mobject/svg/mtex_mobject.py`: add `generate_plain_tex_file` config option (default False) to allow users generate another svg without additional `\\color` commands to prevent the shape of svg from being altered by them; some refactors for efficiency improvememt; fix the bug that multi-line tex fails rendering\r\n- M `manimlib/utils/simple_functions.py`: refactor `choose` with lru_cache and scipy's func (borrowed from community edition); delete `clip_in_place` func (unused)\r\n- M `manimlib/utils/color.py`: delete `get_shaded_rgb` func (unused)\r\n- D `manimlib/utils/string.py`: clean up unused functions\r\n- M `manimlib/mobject/coordinate_systems.py`: remove redundancies\r\n- M `manimlib/__init__.py`: remove `manimlib/utils/string.py` import\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 239,
        "deletions": 169,
        "changed_files": 10,
        "created_at": "2022-01-25T12:51:47Z",
        "closed_at": "2022-01-25T21:26:47Z",
        "merged_at": null,
        "body": "## Motivation\r\n@zmx0142857 came up with an idea, rendering tex with Mathjax, which is a lot faster than original LaTeX rendering. He authored `manimlib/mathjax` directory. The svg files generated by different compilers are often slightly different in shape, but the one generated by Mathjax has a more complicated structure, so @TonyCrane improved SVGMobject class for better svg parsing. I refactored `MTex` class to support Mathjax rendering.\r\n\r\n## Usage\r\nTo use Mathjax, user may have `nodejs` installed, and run `npm install` at the directory `manimlib/mathjax`.\r\n\r\n## Proposed changes\r\n- A `manimlib/mathjax/index.js, tex2svg.js, package.json`: support Mathjax renderer\r\n- M `manimlib/utils/tex_file_writing.py`: implement `tex_to_svg_using_mathjax()` function, which uses `node` command to generate svg files of tex\r\n- M `.gitignore`: filter out nodejs-related files\r\n- M `manimlib/mobject/svg/mtex_mobject.py`: add `use_mathjax` config option (default False) to allow users select tex renderer; add `generate_plain_tex_file` config option (default False) to allow users generate another svg without additional `\\color` commands to prevent the shape of svg from being altered by them\r\n\r\n## Test\r\n**Code**:\r\n```python\r\nfrom manimlib import *\r\n\r\n\r\nclass MathjaxTest(Scene):\r\n    def construct(self):\r\n        tex_string = \"\"\"\r\n\\\\mathbf{V}(x_0, x_1, \\\\cdots, x_{n-1})^{\\\\mathsf T} \\\\times \\\\mathbf{v} = \r\n\\\\begin{bmatrix}\r\n    1 &1 &1 &\\\\cdots & 1\\\\\\\\\r\n    x_0 &x_1 &x_2 &\\\\cdots & x_{n-1}\\\\\\\\\r\n    \\\\vdots &\\\\vdots &\\\\vdots &\\\\ddots & \\\\vdots\\\\\\\\\r\n    x_0^{n-1} &x_1^{n-1} &x_2^{n-1} &\\\\cdots & x_{n-1}^{n-1}\\\\\\\\\r\n\\\\end{bmatrix} \\\\times \\\\mathbf{v}\r\n        \"\"\"\r\n\r\n        mtex_mathjax_mob = MTex(tex_string, use_mathjax=True).set_fill(MAROON)\r\n        mtex_mathjax_mob.shift(2 * UP)\r\n        self.add(mtex_mathjax_mob)\r\n\r\n        mtex_mob = MTex(tex_string).set_fill(TEAL)\r\n        mtex_mob.shift(2 * DOWN)\r\n        self.add(mtex_mob)\r\n```\r\n\r\n**Result**:\r\n![MathjaxTest](https://user-images.githubusercontent.com/50232075/150980243-030f3c65-d032-4978-98f6-5508ea956123.png)\r\n\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 167,
        "deletions": 71,
        "changed_files": 3,
        "created_at": "2022-01-25T07:21:19Z",
        "closed_at": "2022-01-25T21:26:40Z",
        "merged_at": "2022-01-25T21:26:40Z",
        "body": "<!-- Thanks for contributing to manim!\r\n    Please ensure that your pull request works with the latest version of manim.\r\n-->\r\n\r\n## Motivation\r\nManimGL only supports `matrix(...)`, `scale(...)`, `translate(...)` transform, and doesn't support multiple transformation in a single `transform` property, which causes many issues.\r\n<details>\r\n<summary>For example</summary>\r\n\r\n**Code**:\r\n```python\r\nclass Code(Scene):\r\n    def construct(self):\r\n        svg = SVGMobject(\"formula.svg\", stroke_width=0).set_width(13)\r\n        self.add(svg)\r\n```\r\n![formula](https://user-images.githubusercontent.com/44120331/150927385-9e759c75-508b-4e3d-bc87-dc4c051e495e.svg)\r\n\r\n**Result**:\r\n![image](https://user-images.githubusercontent.com/44120331/150927478-a1d2f874-f50c-4e71-8361-d13b136ca9b9.png)\r\n\r\n</details> \r\n\r\nThis pull request adds full support for all transforms in the [svg standard](https://www.w3.org/TR/css-transforms-1/#svg-syntax), which are `matrix translate scale rotate skewX skewY`.\r\nAnd refactors the parsing of the name and parameters of each transform by referring to https://github.com/cjlano/svg/blob/3ea3384457c9780fa7d67837c9c5fd4ebc42cb3b/svg/svg.py#L75.\r\n\r\n## Proposed changes\r\n<!-- What you changed in those files -->\r\n- M`manimlib/mobject/mobject.py`: allow `Mobject.scale` receive iterable `scale_factor` clip it with `min_scale_factor`\r\n- M`manimlib/mobject/svg/svg_mobject.py`: replace `warnings.warn` with `log.warning`\r\n- M`manimlib/mobject/svg/svg_mobject.py`: refactor `SVGMobject.handle_transforms` and add support for `rotate` and `skewX skewY`\r\n\r\n## Test\r\n<details>\r\n<summary>The current performance of the above example</summary>\r\n\r\n**Code**:\r\n```python\r\nclass Code(Scene):\r\n    def construct(self):\r\n        svg = SVGMobject(\"formula.svg\", stroke_width=0).set_width(13)\r\n        self.add(svg)\r\n```\r\n![formula](https://user-images.githubusercontent.com/44120331/150927385-9e759c75-508b-4e3d-bc87-dc4c051e495e.svg)\r\n**Result**:\r\n![image](https://user-images.githubusercontent.com/44120331/150926918-43e07f7f-6ea1-4d2b-a322-48aa4b21136b.png)\r\n\r\n</details>\r\n\r\n<details>\r\n<summary><code>rotate</code></summary>\r\n\r\n**Code**:\r\n```python\r\nclass Code(Scene):\r\n    def construct(self):\r\n        svg = SVGMobject(\"test.svg\")\r\n        self.add(svg)\r\n```\r\n```xml\r\n<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">\r\n  <rect width=\"300\" height=\"100\" transform=\"rotate(60)\"/>\r\n</svg>\r\n```\r\n\r\n**Result**:\r\n![image](https://user-images.githubusercontent.com/44120331/150929211-eb11c402-92fe-40d4-83be-7471a0cbbc26.png)\r\n\r\n</details>\r\n\r\n<details>\r\n<summary><code>skewX</code> and <code>skewY</code></summary>\r\n\r\n**Code**:\r\n```python\r\nclass Code(Scene):\r\n    def construct(self):\r\n        svg = VGroup(\r\n            SVGMobject(\"skewX.svg\"),\r\n            SVGMobject(\"skewY.svg\")\r\n        ).arrange(RIGHT)\r\n        self.add(svg)\r\n```\r\n`skewX.svg`:\r\n```xml\r\n<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">\r\n  <rect width=\"300\" height=\"100\" transform=\"skewX(30)\"/>\r\n</svg>\r\n```\r\n`skewY.svg`:\r\n```xml\r\n<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">\r\n  <rect width=\"300\" height=\"100\" transform=\"skewY(30)\"/>\r\n</svg>\r\n```\r\n\r\n**Result**:\r\n![image](https://user-images.githubusercontent.com/44120331/150929587-29121a4d-3d0a-4886-8c1e-f095287a3c1c.png)\r\n\r\n</details>",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 17,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-01-17T13:02:34Z",
        "closed_at": "2022-01-17T16:56:09Z",
        "merged_at": "2022-01-17T16:56:09Z",
        "body": "<!-- Thanks for contributing to manim!\r\n    Please ensure that your pull request works with the latest version of manim.\r\n-->\r\n\r\n## Motivation\r\n<!-- Outline your motivation: In what way do your changes improve the library? -->\r\n\r\n- After initializing a ```NumberPlane``` object, the code area below will be marked as \"unreachable\" by Pylance\r\n- This grey out the code and disables syntax highlighting\r\n<img width=\"482\" alt=\"8df6ec7f74f4c701fa4e3b5e3058afa\" src=\"https://user-images.githubusercontent.com/86190295/149770151-9f5968ab-cd5f-4209-b865-c074a7449371.png\">\r\n\r\n(When I was writing the code)\r\n\r\n![T$X{NC77UQ6E_@N2TFNWI8C](https://user-images.githubusercontent.com/86190295/149769895-6c32b26f-88ae-41b9-9b8b-f6b93a16d4c9.jpg)\r\n(In the source code)\r\n\r\n- Meanwhile, when clicking \"show definition\" for ```get_x_axis()``` or ```get_y_axis```, it will jumps to abstract methods under ```CoordinateSystem```\r\n\r\n- https://github.com/microsoft/pylance-release/issues/248 (Reference) \r\n  This warning was due to \r\n```python \r\ndef get_axes(self):\r\n    raise Exception(\"Not implemented\")\r\n``` \r\nhowever without adding an abstract class decorator\r\n```python \r\n@absrtactclass\r\ndef get_axes(self):\r\n    raise Exception(\"Not implemented\")\r\n``` \r\n(Jumping was due to the fact that ```get_x_axis()``` and ```get_y_axis``` are not overrode again under ```Axes``` class)\r\n\r\nThis pull request aims to improve the structure and make it convenient especially for Pylance user writing and tracking codes\r\n\r\n## Proposed changes\r\n<!-- What you changed in those files -->\r\n\r\n- added ```@abstractclass``` for two abstract methods\r\n- overrides ```get_axis```, ```get_x_axis```, ```get_y_axis```, ```get_z_axis``` so that when using these/writing these methods, Pylance and users can track back to re-implemented methods under ```Axes``` class instead of ```CoordinateSystem``` where they will find nothing but a raise Exception\r\n\r\n## Test\r\n<!-- How do you test your changes -->\r\n![image](https://user-images.githubusercontent.com/86190295/149772860-5d790d85-5af2-45ed-b79a-a74d1ba3b8f0.png)\r\n\r\nTested by initializing a Numberline object and no error occurred.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-01-03T07:06:07Z",
        "closed_at": "2022-01-03T16:53:35Z",
        "merged_at": "2022-01-03T16:53:35Z",
        "body": "<!-- Thanks for contributing to manim!\r\n    Please ensure that your pull request works with the latest version of manim.\r\n-->\r\n\r\n## Motivation\r\n<!-- Outline your motivation: In what way do your changes improve the library? -->\r\n-When adding a Brace Label, I can adjust the label scale and the buff between the brace and the mobject adding to. However, I can not adjust the buff between the label and the brace, which would make the distance disproportional. \r\n\r\n-Directly using ```brace.scale()``` does not work either, as this will change the length of the brace as well.\r\n\r\n-Meanwhile, directly passing in the argument ```buff=value``` as keyword argument will set the buff between the target mobject and the brace only. And since both methods (```Brace.CONFIG``` and ```Brace.put_at_tip```) use the ```buff``` keyword argument, therefore, to allow different values can be passed in for \"mobject-brace buff\" and \"brace-label buff\", this parameter is clarified as ```label_buff```.\r\n```python\r\nbrace1 = BraceLabel(dl1, 'r', UP, label_scale=0.35, font_size=30, buff=0.1)\r\n```\r\nFor example, the code above will result in \r\n![image](https://user-images.githubusercontent.com/86190295/147906016-e18d56ea-20b3-4221-befc-cf2c686bdbe5.png)\r\nWhich in this case the small 'r' is clearly too far away from the brace.\r\n\r\n## Proposed changes\r\n<!-- What you changed in those files -->\r\n- In file manimlib.mobject.svg.brace.py, class BraceLable, added parameter ```label_buff``` in the CONFIG\r\n- In Line 108, pass in the parameter ```buff=self.label_buff``` for put_at_top method\r\n- Added import copy at the beginning\r\n\r\n## Test\r\n<!-- How do you test your changes -->\r\n**Code**:\r\n```python\r\nbrace1 = BraceLabel(dl1, 'r', UP, label_scale=0.35, font_size=30, buff=0.1, label_buff=0.1)\r\n```\r\n**Result**:\r\n![image](https://user-images.githubusercontent.com/86190295/147906094-bccc3362-7548-41a1-aaeb-46620a1303a7.png)\r\n\r\n\r\nIn addition, the previous version was missing an importation\r\n*before*\r\n<img width=\"650\" alt=\"f6cffa48c2608c43789a0e864f0db5d\" src=\"https://user-images.githubusercontent.com/86190295/147912845-84160e52-f9d7-4113-b388-fa87cffb7edc.png\">\r\n*after*\r\n![image](https://user-images.githubusercontent.com/86190295/147912827-4b2bc43b-f132-4e54-ab76-8c123affdb51.png)\r\n\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 162,
        "deletions": 43,
        "changed_files": 2,
        "created_at": "2022-01-03T05:54:34Z",
        "closed_at": "2022-01-25T07:05:25Z",
        "merged_at": null,
        "body": "## Motivation\r\nTo make user have a better control in manipulating equations, I implement this class designed for `MTex` class that I constructed in #1678.\r\n\r\n## Proposed changes\r\n- Implement `TransformMatchingMTex` in `animation/transform_matching_parts.py`\r\n- Remove some unnecessary attributes in `MTex` class\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-12-31T05:12:21Z",
        "closed_at": "2021-12-31T10:18:50Z",
        "merged_at": "2021-12-31T10:18:50Z",
        "body": "<!-- Thanks for contributing to manim!\r\n    Please ensure that your pull request works with the latest version of manim.\r\n-->\r\n\r\n## Motivation\r\n<!-- Outline your motivation: In what way do your changes improve the library? -->\r\nfixed typo in comments\r\n## Proposed changes\r\n<!-- What you changed in those files -->\r\n- remove an extra 'all'\r\n- \r\n- \r\n\r\n## Test\r\n<!-- How do you test your changes -->\r\n**Code**:\r\n\r\n**Result**:",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 24,
        "deletions": 10,
        "changed_files": 1,
        "created_at": "2021-12-16T15:15:22Z",
        "closed_at": "2021-12-17T17:30:53Z",
        "merged_at": "2021-12-17T17:30:53Z",
        "body": "<!-- Thanks for contributing to manim!\r\n    Please ensure that your pull request works with the latest version of manim.\r\n-->\r\n\r\n## Motivation\r\n<!-- Outline your motivation: In what way do your changes improve the library? -->\r\nIt's only a minor change. I found out that BarChart() doesn't have an option to add ticks on x-axis. I know it's because the x-axis is usually for names or labels and not values, but I think it's nice to add an option to add ticks to seperate bars for better visualization.\r\n\r\n## Proposed changes\r\n<!-- What you changed in those files -->\r\n- I looked up at how manim add ticks on y-axis and created an option for people to also add ticks to the x-axis\r\n- I added a config parameter \"include-x-ticks\"\r\n- The number of ticks divided is also the number of values\r\n\r\n## Test\r\n<!-- How do you test your changes -->\r\n**Code**:\r\n```py \r\nfrom manimlib import *\r\n\r\nclass Test(Scene):\r\n    def construct(self):\r\n        global chart\r\n        bar_value = [50]*10\r\n        chart = BarChart(\r\n            bar_value,\r\n            label_y_axis = True,\r\n            n_ticks = 10,\r\n            max_value = 100,\r\n            bar_label_scale_val = 0.5,\r\n            include_x_ticks = True\r\n        )\r\n        self.add(chart)\r\n```\r\n\r\n**Result**\r\n![Test](https://user-images.githubusercontent.com/88956865/146397175-b2e688ba-2f03-423d-85c5-b8e5c73ed8d8.png)\r\n:",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2021-12-05T09:50:04Z",
        "closed_at": "2021-12-05T11:44:59Z",
        "merged_at": null,
        "body": null,
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1751,
        "deletions": 0,
        "changed_files": 5,
        "created_at": "2021-12-02T04:47:41Z",
        "closed_at": "2021-12-02T17:08:53Z",
        "merged_at": null,
        "body": "<!-- Thanks for contributing to manim!\r\n    Please ensure that your pull request works with the latest version of manim.\r\n-->\r\n\r\n## Motivation\r\n<!-- Outline your motivation: In what way do your changes improve the library? -->\r\nI've added a visual directory structure to `docs/source` in a `README.md` file. A visual layout of the directory may help some developers better navigate this library. I also added a directory structure visualization in `docs/source/getting_started/structure.rst`.\r\n\r\n## Proposed changes\r\n<!-- What you changed in those files -->\r\n- Added SVG images of directory structure in a graphical form.\r\n\r\n## Test\r\n<!-- How do you test your changes -->\r\n**Code**: N/A. This is just an image in the documentation of the project.\r\n\r\n**Result**: Note that this is rendered as PNG only for this preview. The actual are SVG.\r\n![graph](https://user-images.githubusercontent.com/47697395/144359423-51931a12-c1bd-478c-b887-c5fd35ff7852.png)\r\n\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 522,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2021-11-12T13:26:37Z",
        "closed_at": "2021-12-14T00:09:56Z",
        "merged_at": "2021-12-14T00:09:55Z",
        "body": "Updated on 11/28 (GMT+8): Some information in this comment may be outdated. Please see the latest comment.\r\n\r\n## Motivation\r\nAs what I've mentioned in #1677 , recently I'm working on the refactoring of `Tex` mobject. Manim generates all substrings of a `Tex`, namely the `SingleStringTex` objects, and calculates their lengths in order to figure out indices of some certain submobjects. This may cause the program to become slow as a `Tex` is split into tons of components, which is a usual case for complicated math formulas. And, even worse, symbols composed with a mutable number of symbols in different contexts also prevent us from indexing the mobject correctly.\r\n\r\nMy little trick is to insert some `\\color` commands into the tex code. For example, `Tex(\"abc\", isolate=[\"a\"])` will send `\"{\\color[RGB]{0, 0, 1} a}bc\"` to be compiled. In most cases, the addition of `\\color` won't change the shapes of glyphs, but the svg output will carry information about colors, which marks out the key glyphs. This can help us finish the indexing work, only with compiling just one tex file.\r\n\r\nHowever, this still doesn't fix all the problems. I'll briefly list pros and cons about this pull request.\r\n\r\n### Pros\r\n- Every `Tex` corresponds to exactly 1 compilation, which is the greatest benefit and can speed up rendering.\r\n- Problems concerned with indexing will no longer happen, and the coloring issue is fixed. For example, `\\frac` command is available when the denominator part is expected to be colored.\r\n- The preprocessing part, including balancing brackets, filling in missing parameters, becomes useless and is discarded.\r\n- Using the combination of the full `tex_string` and `substrings_to_isolate` to generate hash keys, with which to determine whether a `Tex` should be compiled again. This fixes the issue that two `Tex` with the same `tex_string` but different substrings are only compiled once, and the indexing of the later constructed one crashes.\r\n\r\n### Cons\r\n- Still, in some cases the shapes of glyphs will change when `\\color` is inserted. For instance, when `x_{0}^{2}` becomes `{\\color[RGB]{0, 0, 1} x_{0}}^{2}`, the exponent `2` is shifted rightward.\r\n- It's uncertain whether all `tex_string`s of components actually match them or not. This may happen if a `tex_substring` actually matches no mobjects, but matches the next group of mobjects according to the program.\r\n- The class `SingleStringTex` is removed, which may cause some old scenes to break. This can be simply fixed by replacing them with `Tex`.\r\n- Without the brackets balancing process, the `tex_string` and `substrings_to_isolate` (including `isolate` and `tex_to_color_map`) provided must be balanced in brackets, or a compilation error will occur.\r\n- All `Tex` with at least one `substrings_to_isolate` provided will be remade since the files are inserted with `\\color` commands, which is never seen in previous versions.\r\n- `mob.get_tex()` is preserved in a temporary fashion.\r\n\r\nLast but not least, this pull request is newly written, and is far from being tested enough. Any discussion or better strategy to fix this type of thing is welcome!\r\n\r\n\r\n## Test\r\n**Code**:\r\n\r\n```python\r\nfrom manimlib import *\r\n\r\n\r\nTEST_STR = \"\"\"\\\\lim_{{n} \\\\to \\\\infty} \\\\left\\\\lfloor\r\n\\\\sqrt{\\\\frac{1}{{n} !} \\\\mathrm{e}^{n} {a}_{n} + b_{n}^{p}} \\\\otimes\r\n\\\\sqrt[{n}]{\\\\sum_{m = 0}^{{n}^{2}} \\\\tilde{c}_{m \\\\cdot {n}}^{b_{n}^{p}\r\n\\\\cos \\\\left( \\\\theta \\\\right)}} \\\\right\\\\rfloor\"\"\".replace(\"\\n\", \" \")\r\n\r\n\r\nclass TestScene(Scene):\r\n    def construct(self):\r\n        tex1 = Tex(\r\n            TEST_STR,\r\n            fill_color=TEAL\r\n        )\r\n        tex1.shift(2 * UP)\r\n        tex2 = Tex(\r\n            TEST_STR,\r\n            tex_to_color_map={\r\n                #\"\\\\sum\": BLUE_E,\r\n                \"b_{n}\": LIGHT_PINK,\r\n                \"{n}\": YELLOW\r\n            },\r\n            fill_color=TEAL\r\n        )\r\n        tex2.shift(2 * DOWN)\r\n        self.add(tex1, tex2)\r\n\r\n        # Labels of indices for debugging\r\n        self.add(\r\n            #index_labels(tex1[0]),\r\n            #index_labels(tex2),\r\n            #*[index_labels(submob) for submob in tex2]\r\n        )\r\n```\r\n\r\n**Result**:\r\n![TestScene](https://user-images.githubusercontent.com/50232075/141474300-c84a7662-dfce-4ce9-94e5-d4c1923fcc7a.png)\r\n",
        "comments": 14
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-11-03T16:03:16Z",
        "closed_at": "2021-11-04T04:30:53Z",
        "merged_at": null,
        "body": "<!-- Thanks for contributing to manim!\r\n    Please ensure that your pull request works with the latest version of manim.\r\n-->\r\n\r\n## Motivation\r\n<!-- Outline your motivation: In what way do your changes improve the library? -->\r\n\r\n## Proposed changes\r\n<!-- What you changed in those files -->\r\n- \r\n- \r\n- \r\n\r\n## Test\r\n<!-- How do you test your changes -->\r\n**Code**:\r\n\r\n**Result**:",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2021-10-31T12:04:10Z",
        "closed_at": "2021-11-01T20:17:16Z",
        "merged_at": "2021-11-01T20:17:16Z",
        "body": "<!-- Thanks for contributing to manim!\r\n    Please ensure that your pull request works with the latest version of manim.\r\n-->\r\n\r\n## Motivation\r\n- To make combining mobjects to a Group of mobjects and adding mobjects to a group more convenient. \r\n\r\n\r\n## Proposed changes\r\n<!-- What you changed in those files -->\r\n- In file mobject.py, added __add__ function and __mul__ dunder function for Mobject, returning a Group type accordingly\r\n- In file vectorized_mobject,py, added __add__ dunder function\r\n- \r\n\r\n## Test\r\n<!-- How do you test your changes -->\r\n**Code**:\r\n```python\r\nclass testscene(Scene):\r\n    def construct(self):\r\n        cir = Circle()\r\n        sq = Square()\r\n        group1 = (cir*6).arrange_in_grid(2, 3)\r\n        print(type(group1))\r\n        self.add(group1)\r\n        group2 = (cir+sq).move_to(DOWN)\r\n        self.add(group2)\r\n        print(type(group2))\r\n```\r\n\r\n**Result**:\r\n```\r\n<class 'manimlib.mobject.types.vectorized_mobject.VGroup'>\r\n<class 'manimlib.mobject.types.vectorized_mobject.VGroup'>\r\n```",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2021-10-31T10:45:58Z",
        "closed_at": "2021-10-31T12:03:36Z",
        "merged_at": null,
        "body": "<!-- Thanks for contributing to manim!\r\n    Please ensure that your pull request works with the latest version of manim.\r\n-->\r\n\r\n## Motivation\r\n- To make combining mobjects to a Group of mobjects and adding mobjects to a group more convenient. \r\n\r\n\r\n## Proposed changes\r\n<!-- What you changed in those files -->\r\n- In file mobject.py, added __add__ function and __mul__ dunder function for Mobject, returning a Group type accordingly\r\n- In file vectorized_mobject,py, added __add__ dunder function\r\n- \r\n\r\n## Test\r\n<!-- How do you test your changes -->\r\n**Code**:\r\n```python\r\nclass testscene(Scene):\r\n    def construct(self):\r\n        cir = Circle()\r\n        sq = Square()\r\n        group1 = (cir*6).arrange_in_grid(2, 3)\r\n        print(type(group1))\r\n        self.add(group1)\r\n        group2 = (cir+sq).move_to(DOWN)\r\n        self.add(group2)\r\n        print(type(group2))\r\n```\r\n\r\n**Result**:\r\n```\r\n<class 'manimlib.mobject.types.vectorized_mobject.VGroup'>\r\n<class 'manimlib.mobject.types.vectorized_mobject.VGroup'>\r\n```",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 54,
        "deletions": 78,
        "changed_files": 2,
        "created_at": "2021-10-24T14:34:28Z",
        "closed_at": "2021-10-24T16:47:54Z",
        "merged_at": "2021-10-24T16:47:54Z",
        "body": "## Motivation\r\nThe code modified in #1598 , where I added support for `A` command, is a little bit messy, so I go on to refactor some code in `svg_mobject.py`.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 15,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2021-10-22T12:59:59Z",
        "closed_at": "2021-10-31T10:41:04Z",
        "merged_at": null,
        "body": "<!-- Thanks for contributing to manim!\r\n    Please ensure that your pull request works with the latest version of manim.\r\n-->\r\n\r\n## Motivation\r\n- To make combining mobjects to a Group of mobjects and adding mobjects to a group more convenient. \r\n- Instead of using the \"add method\" for VGroup(, , ,), users can use an alternative way by directly using the plus operator, which makes creating and modifying groups faster during development.\r\n- In creating multiple copies of the same mobject, users can directly use the * sign instead of the replicate sign. For a VMobject, * operation will return a VGroup instead of a Group.\r\n\r\n## Proposed changes\r\n<!-- What you changed in those files -->\r\n- In file mobject.py, added __add__ function and __mul__ dunder function for Mobject, returning a Group or VGroup\r\n- In file vectorized_mobject,py, added __add__ dunder function for Group and VGroup\r\n- \r\n\r\n## Test\r\n<!-- How do you test your changes -->\r\n**Code**:\r\n```python\r\nclass testscene(Scene):\r\n    def construct(self):\r\n        cir = Circle()\r\n        sq = Square()\r\n        group1 = (cir*6).arrange_in_grid(10, 10)\r\n        print(type(group1))\r\n        self.add(group1)\r\n        group2 = (cir+sq).move_to(DOWN)\r\n        self.add(group2)\r\n        print(type(group2))\r\n```\r\n\r\n**Result**:\r\n```\r\n<class 'manimlib.mobject.types.vectorized_mobject.VGroup'>\r\n<class 'manimlib.mobject.types.vectorized_mobject.VGroup'>\r\n```",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-10-18T11:20:32Z",
        "closed_at": "2021-10-18T14:01:58Z",
        "merged_at": "2021-10-18T14:01:58Z",
        "body": "<!-- Thanks for contributing to manim!\r\n    Please ensure that your pull request works with the latest version of manim.\r\n-->\r\n\r\n## Problem\r\n<!-- Outline your motivation: In what way do your changes improve the library? -->\r\n\r\nI'd like to rotate the camera frame in one scene but something was wrong. It turned out to that the value of `new_rot_T[2]` went beyond [-1,1], which is fatal for the arccos function. The problem was probably caused by loss of precision in float calculation. \r\n\r\n## Proposed changes\r\n<!-- What you changed in those files -->\r\nAs a result, `clip` function is called before `Fz` is passed into `acos`. \r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-10-12T01:05:19Z",
        "closed_at": "2021-10-12T04:21:07Z",
        "merged_at": "2021-10-12T04:21:07Z",
        "body": "<!-- Thanks for contributing to manim!\r\n    Please ensure that your pull request works with the latest version of manim.\r\n-->\r\n\r\n## Motivation\r\n<!-- Outline your motivation: In what way do your changes improve the library? -->\r\n\r\n## Proposed changes\r\n<!-- What you changed in those files -->\r\n- \r\n- \r\n- \r\n\r\n## Test\r\n<!-- How do you test your changes -->\r\n**Code**:\r\n\r\n**Result**:",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 70,
        "deletions": 35,
        "changed_files": 10,
        "created_at": "2021-10-07T09:50:29Z",
        "closed_at": "2021-10-15T19:13:03Z",
        "merged_at": "2021-10-15T19:13:03Z",
        "body": "<!-- Thanks for contributing to manim!\r\n    Please ensure that your pull request works with the latest version of manim.\r\n-->\r\n\r\n## Motivation\r\n<!-- Outline your motivation: In what way do your changes improve the library? -->\r\nAdd some warnings to warn users what they are doing.\r\nAnd use rich to display log, which is more beautiful.\r\n\r\n## Proposed changes\r\n<!-- What you changed in those files -->\r\n- N `manimlib/logger.py`\r\n- M `manimlib/__init__.py`: add `__version__`\r\n- M `manimlib/__main__.py`: print version when start using manim\r\n- M `manimlib/config.py`: add cli arg `-v` and change `print` to `log`\r\n- M `...`: change `print` to `log`",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 125,
        "deletions": 49,
        "changed_files": 2,
        "created_at": "2021-09-15T08:18:21Z",
        "closed_at": "2021-09-15T16:31:34Z",
        "merged_at": "2021-09-15T16:31:34Z",
        "body": "<!-- Thanks for contributing to manim!\r\n    Please ensure that your pull request works with the latest version of manim.\r\n-->\r\n\r\n## Motivation\r\n<!-- Outline your motivation: In what way do your changes improve the library? -->\r\nAdd `Code` mobject with syntax highlighting. It's inherited from `Text` with the help of `pygments`, which is a python site-package and should be additionally installed.\r\n\r\n## Proposed changes\r\n<!-- What you changed in those files -->\r\n- Rewrite `Text.text2settings()` method so that substrings specified in `t2f`, `t2s`, `t2w` can occupy each other.\r\n- Add `Code` mobject with the code highlighted, which [supports different languages and various styles](https://pygments.org/demo/).\r\n\r\n## Test\r\n<!-- How do you test your changes -->\r\n**Code**:\r\n```python\r\nfrom manimlib import *\r\n\r\n\r\nEXAMPLE_HELLO_WORLD_CODE_DICT = {\r\n\"python\": \"\"\"\r\nprint(\"Hello World!\")\r\n\"\"\",\r\n\r\n\"C++\": \"\"\"\r\n# include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint main() {\r\n    cout << \"Hello World!\" << endl;\r\n    return 0;\r\n}\r\n\"\"\",\r\n\r\n\"Java\": \"\"\"\r\npublic class HelloWorld {\r\n    public static void main(String[] args) {\r\n        System.out.println(\"Hello World!\");\r\n    }\r\n}\r\n\"\"\",\r\n\r\n\"C\": \"\"\"\r\n# include <stdio.h>\r\n\r\nint main() {\r\n    printf(\"%s\\\\n\", \"Hello World!\");\r\n    return 0;\r\n}\r\n\"\"\"\r\n}\r\n\r\n\r\nclass CodeExampleScene(Scene):\r\n    def construct(self):\r\n        code_mobs = VGroup(*[\r\n            Code(EXAMPLE_HELLO_WORLD_CODE_DICT[lang], language=lang, code_style=code_style)\r\n            for lang, code_style in zip(\r\n                [\"python\", \"C++\", \"Java\", \"C\"],\r\n                [\"zenburn\", \"monokai\", \"algol\", \"emacs\"]\r\n            )\r\n        ]).arrange_in_grid(2, 2, h_buff=0.0, v_buff=0.5)\r\n        self.add(code_mobs)\r\n\r\n```\r\n\r\n**Result**:\r\n![CodeExampleScene](https://user-images.githubusercontent.com/50232075/133395605-0e48873b-1121-421a-b842-fdb0203030f0.png)\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-09-12T03:07:19Z",
        "closed_at": "2021-09-12T04:17:41Z",
        "merged_at": "2021-09-12T04:17:41Z",
        "body": "updated the cmd command line to \"manimgl example_scenes.py OpeningManimExample\" instead of \"python -m manim\", which the latter one was used for cairo-backend manim version instead of the current manimgl\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-08-24T05:30:24Z",
        "closed_at": "2021-08-25T04:27:09Z",
        "merged_at": "2021-08-25T04:27:09Z",
        "body": "## Motivation\r\nFixed a documentation typo in updatersExample section under Example Scenes section . \r\n\r\n## Proposed changes\r\nThe following change was made in example_scenes.rst file . \r\n- In line 338 , I have fixed a trivial typo which may mislead the readers  (thst -> that).\r\n\r\n## Test\r\nNo explicit testing was done for a typo fix in  documentation as It'll be reflected as expected without any issues.\r\n\r\n**Result**: The typo is fixed for better.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 46,
        "deletions": 2413,
        "changed_files": 27,
        "created_at": "2021-08-10T23:00:03Z",
        "closed_at": "2022-02-14T04:51:47Z",
        "merged_at": null,
        "body": "## Manim Spanish\r\nI'm now working on a fork of ManimGL named Manim Spanish (at this moment it's not ready). The mission of this fork is to expand the original 3b1b's project to Spanish-speaking people with totally ordered documentation and new features like table mobject, SVG icons of social networks, mobjects about other sciences (different from math), more examples scenes for self-teaching, etc. I love your project and I would like to expand it to many people \ud83d\ude04.\r\nWhen I'm ready, I will tell you.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 131,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2021-08-08T13:34:28Z",
        "closed_at": "2021-08-09T23:19:15Z",
        "merged_at": "2021-08-09T23:19:15Z",
        "body": "<!-- Thanks for contributing to manim!\r\n    Please ensure that your pull request works with the latest version of manim.\r\n-->\r\n\r\n## Motivation\r\n<!-- Outline your motivation: In what way do your changes improve the library? -->\r\nSupport the elliptical arc command for SVGMobject. Now all the commands of svg path can be implemented.\r\n\r\n## Proposed changes\r\n<!-- What you changed in those files -->\r\nThis is reached through approximating elliptical arcs with quadratic bezier curves, which is almost the same way to form a circular arc in `Arc` class. The key is to figure out the center of the ellipse, requiring us to solve simultaneous equations. I've built a function `add_elliptical_arc_to(self, rx, ry, x_axis_rotation, large_arc_flag, sweep_flag, point)`, inside which a bunch of functions were defined just to do those calculations. I guess it might be better to transfer them into the file `utils\\space_ops.py`, but I daren't make too much changes across files in my first pull request.\r\nDetailed annotations are left in the code. I deduced all those stuff by hand today .(:\u0437\u300d\u2220).\r\n\r\n## Test\r\n<!-- How do you test your changes -->\r\n**Code**:\r\n```python\r\nclass Test(Scene):\r\n    def construct(self):\r\n        self.add(SVGMobject(\"test\"))\r\n\r\n```\r\n\r\n```html\r\n<svg width=\"320px\" height=\"320px\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\r\n  <path d=\"M10 315\r\n           L 110 215\r\n           A 30 50 0 0 1 162.55 162.45\r\n           L 172.55 152.45\r\n           A 30 50 -45 0 1 215.1 109.9\r\n           L 315 10\"/>\r\n</svg>\r\n```\r\n**Result**:\r\n![result](https://user-images.githubusercontent.com/50232075/128633616-a119cea0-f276-4fb0-ba30-f4e222f72247.png)\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2021-08-04T14:54:10Z",
        "closed_at": "2021-08-06T17:25:47Z",
        "merged_at": "2021-08-06T17:25:47Z",
        "body": "## Proposed changes\r\nAdd another rotation to make it work.\r\n## Test\r\nHere are some tests.\r\n\r\nhttps://user-images.githubusercontent.com/86904416/128203385-0116e14e-4827-41dc-9ef4-a6732c3a115d.mp4\r\n\r\nhttps://user-images.githubusercontent.com/86904416/128203399-f1f60d5a-ac32-4581-99d8-a80055666696.mp4\r\n\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2021-08-03T07:39:14Z",
        "closed_at": "2021-08-03T20:37:18Z",
        "merged_at": "2021-08-03T20:37:18Z",
        "body": "<!-- Thanks for contributing to manim!\r\n    Please ensure that your pull request works with the latest version of manim.\r\n-->\r\n\r\n## Motivation\r\n<!-- Outline your motivation: In what way do your changes improve the library? -->\r\nPrevious `Mobject.scale` method doesn't use overrided method, which causes some problems when scaling a VGroup:\r\n\r\n**Code**:\r\n```python\r\nclass Code(Scene):\r\n    def construct(self):\r\n        num = VGroup(\r\n            DecimalNumber(1), \r\n            Text(\"foo\")\r\n        ).scale(4).arrange(RIGHT)\r\n        self.add(num)\r\n        self.play(num[0].animate.set_value(2))\r\n```\r\n**Output**:\r\n\r\nhttps://user-images.githubusercontent.com/44120331/127976196-03ea964f-3cf5-4260-afa0-6da174f4ce28.mp4\r\n\r\nBecause `DecimalNumber` override `scale` method to change the `font_size` attribute.\r\n\r\nThis PR is implemented by recursively calling `scale` method on the submobjects of the current mobject.\r\n\r\n## Proposed changes\r\n<!-- What you changed in those files -->\r\n- M `manimlib/mobject/mobject.py`: rewrote `scale` method\r\n\r\n## Test\r\n<!-- How do you test your changes -->\r\n**Code**:\r\n```python\r\nclass Code(Scene):\r\n    def construct(self):\r\n        num = VGroup(\r\n            DecimalNumber(1), \r\n            Text(\"foo\")\r\n        ).scale(4).arrange(RIGHT)\r\n        self.add(num)\r\n        self.play(num[0].animate.set_value(2))\r\n```\r\n**Result**:\r\n\r\nhttps://user-images.githubusercontent.com/44120331/127976835-cd7c9246-fb4e-4f1b-b9b2-05040d3c88b1.mp4\r\n\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 55,
        "deletions": 77,
        "changed_files": 2,
        "created_at": "2021-07-28T11:02:10Z",
        "closed_at": "2021-07-28T14:43:42Z",
        "merged_at": "2021-07-28T14:43:42Z",
        "body": "## Motivation\r\nFrom #1331 we can know that the triangulation is sometimes incorrect. #1552 offers a temporary hack for showing text correctly, but it still can't deal with all situations. This pull request aims to fix the bug completely.\r\n\r\n## Proposed changes\r\nI rewrote the function `earclip_triangulation`. The function `earcut` can deal with one polygon with empty holes (without other rings in the hole), so I just deal with the shapes in a hole separately.\r\n\r\nAlso, I removed the temporary hack in `text_mobject.py`.\r\n\r\nIt runs almost as fast as before (before #1552).\r\n\r\n## Test\r\n\r\n**Code**:\r\n```python\r\nfrom manimlib import *\r\nimport time\r\n\r\nclass FontTest(Scene):\r\n    def construct(self):\r\n        start=time.time()\r\n\r\n        chinese_text=\"\u7586\u57df \u753b\u9762 \u85e4\u8513 \u5bd2\u98a4 \u56de\u590d \u56f0\u96be \\n\u86d0\u86d0 \u91cf\u53d6 \u9b53 \u5716 \u8f5f \u757e \u9ad4 \u5718 \u5787 \u513d\"\r\n        text1 = Text(chinese_text, font=\"SimSun\").scale(1.3).shift(UP*3)\r\n        text2 = Text(chinese_text, font=\"SimHei\").scale(1.3).next_to(text1,DOWN)\r\n        text3 = Text(chinese_text, font=\"YouYuan\").scale(1.3).next_to(text2,DOWN)\r\n        emoji = Text(\"\ud83d\ude00\ud83d\uded2\ud83e\udd2f\ud83d\udc7e\ud83d\ude48\ud83e\udd1e\ud83e\udd94\ud83e\udd9a\ud83d\udc1e\ud83d\udc90\ud83d\udea7\ud83e\uddee\ud83c\udfc1\\n\\n\ud83c\udf47\ud83c\ude1a\ud83e\udd66\ud83c\udf54\ud83c\udf5f\ud83c\udf71\ud83c\udf82\ud83c\udffa\ud83c\udfe5\ud83c\udfa1\ud83e\udd45\ud83e\uddec\ud83d\udcf1\").scale(1.3).next_to(text3,DOWN)\r\n        self.add(text1, text2, text3, emoji)\r\n\r\n        end=time.time()\r\n        print(end-start)\r\n        # text=Text(\"\u56de\", font=\"SimHei\").scale(0.1)\r\n        # self.add(text)\r\n```\r\n\r\n**Result**:\r\n![FontTest](https://user-images.githubusercontent.com/36598223/127311551-32cfd61d-1298-42c5-b5af-ae7c4b8ad6f2.png)\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-07-17T06:12:41Z",
        "closed_at": "2021-07-18T02:58:48Z",
        "merged_at": "2021-07-18T02:58:48Z",
        "body": "<!-- Thanks for contributing to manim!\r\n    Please ensure that your pull request works with the latest version of manim.\r\n-->\r\n\r\n## Motivation\r\nIn the Manim discord, we often see people confused about the different versions of Manim, using the community instructions to install manimgl or vice versa. Adding this clarification should help lessen the confusion and potentially save hours for many people.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-07-17T05:51:52Z",
        "closed_at": "2021-07-18T02:51:33Z",
        "merged_at": "2021-07-18T02:51:33Z",
        "body": "<!-- Thanks for contributing to manim!\r\n    Please ensure that your pull request works with the latest version of manim.\r\n-->\r\n\r\n## Motivation\r\nWe're trying to change the link to our Discord (so that it points to #rules instead of #manim-dev. This PR changes the link to the new, preferred link.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-07-14T08:32:23Z",
        "closed_at": "2021-07-28T14:50:42Z",
        "merged_at": "2021-07-28T14:50:42Z",
        "body": "<!-- Thanks for contributing to manim!\r\n    Please ensure that your pull request works with the latest version of manim.\r\n-->\r\n\r\n## Motivation\r\n<!-- Outline your motivation: In what way do your changes improve the library? -->\r\nIt's weird that when you Scroll Up, the interactive shell zooms out, this is generally the other way round for most of the UI's.\r\n\r\n## Proposed changes\r\n<!-- What you changed in those files -->\r\nSimply replace factor -> 1 / factor. \r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-06-29T15:03:56Z",
        "closed_at": "2021-07-28T14:48:02Z",
        "merged_at": "2021-07-28T14:48:02Z",
        "body": "If we add an updater to the frame of the camera, and have not added the frame into the scene before, the updater will not work. So, I suggest to add the frame to the objects of the scene at the initilization stage.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 37,
        "deletions": 19,
        "changed_files": 5,
        "created_at": "2021-06-26T04:36:38Z",
        "closed_at": "2021-07-28T14:47:19Z",
        "merged_at": "2021-07-28T14:47:18Z",
        "body": "## Motivation\r\n<!-- Outline your motivation: In what way do your changes improve the library? -->\r\nBecause manim always use `pbr` for setup, which needs to automatically obtain the version from the `.git/` folder. This leads to the issues of #1390 #1403 that cannot be installed from the `.zip` file.\r\nSo I transitioned to the method of using `pyproject.toml` and `setup.cfg` to build, which is also recommended by `setuptools`.\r\n\r\n## Proposed changes\r\n<!-- What you changed in those files -->\r\n- D `setup.py`\r\n- M `setup.cfg`\r\n- N `pyproject.toml`\r\n- N `MANIFEST.in`\r\n\r\n## Test\r\n<!-- How do you test your changes -->\r\nhttps://test.pypi.org/project/manimgl/",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 236,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2021-06-19T20:00:10Z",
        "closed_at": "2021-07-28T14:45:50Z",
        "merged_at": "2021-07-28T14:45:50Z",
        "body": "## Motivation\r\nAdd MarkupText which is previously in Community Edition\r\nThis would use a Pango specific markup that looks like HTML.\r\n\r\n## Proposed changes\r\nThere are some specific implementation here about `<color>`\r\nand `<gradient>`\r\nPango doesn't support `<gradient>`  or `<color> ` instead it works with `color` attribute and the gradient isn't supported.\r\nSince `SVGMobject` doesn't know about parsing colours from SVG image and implementation of `<color>` and `<gradient>` is added.\r\n\r\n- Add a new class MarkupText\r\n\r\n## Comments\r\nMost parts of the code were authored by PhilippImhof and copied from Manim Community. I have added him as co-author in that commit\r\n\r\n## Test\r\n<!-- How do you test your changes -->\r\n**Code**:\r\n```py\r\nclass TextExample(Scene):\r\n    def construct(self):\r\n        a1 = MarkupText('<span style=\"italic\">italic</span>')\r\n        a2 = MarkupText('<span weight=\"bold\">bold</span>')\r\n        a3 = MarkupText('<span font=\"Roboto\">Roboto Font</span>')\r\n        a4 = MarkupText('<span font=\"Cursive\">Cursive Font</span>')\r\n        a5 = MarkupText('<color col=\"RED\"><span font=\"Cursive\">Red</span></color>')\r\n        a6 = MarkupText('<gradient from=\"RED\" to=\"BLUE\">Gradient</gradient>')\r\n        v = VGroup(a1, a2, a3, a4, a5, a6).arrange_in_grid()\r\n        self.play(FadeIn(v))\r\n```\r\n\r\n**Result**:\r\n\r\n\r\nhttps://user-images.githubusercontent.com/49693820/122654124-c6604780-d166-11eb-8374-9921adb86ead.mp4\r\n\r\n\r\n\r\n\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 19,
        "changed_files": 2,
        "created_at": "2021-06-19T05:19:57Z",
        "closed_at": "2021-06-19T16:30:40Z",
        "merged_at": "2021-06-19T16:30:40Z",
        "body": "Reverts 3b1b/manim#1543\r\nSee: https://github.com/3b1b/manim/pull/1554#issuecomment-864357225 https://github.com/3b1b/manim/pull/1543#discussion_r654749380\r\n\r\n```text\r\n[1.] before #1543 \u00d7 -> #1543 \u221a (but not a good solution)\r\n[2.] before #1543 \u00d7 -> #1553 \u221a \r\n[3.] before #1543 \u00d7 -> #1553 \u221a -> #1543 \u00d7 (master)\r\n[4.] before #1543 \u00d7 -> #1553 \u221a -> #1543 \u00d7 -> #1554 \u221a (but not a good solution)\r\n[5.] before #1543 \u00d7 -> #1553 \u221a -> #1543 \u00d7 -> #1555 \u221a (same as [2.])\r\n```\r\n\r\nCloses #1533",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2021-06-18T19:59:01Z",
        "closed_at": "2021-06-19T05:11:18Z",
        "merged_at": null,
        "body": "@TonyCrane, after running your fix to the text height, it looked like text was getting scaled by the font size twice.  This PR fixes things for me, but can you verify that this branch works appropriately for you? It's possible I may misunderstand something about when font_size is used for Text.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 21,
        "deletions": 10,
        "changed_files": 1,
        "created_at": "2021-06-18T12:35:11Z",
        "closed_at": "2021-06-18T19:14:33Z",
        "merged_at": "2021-06-18T19:14:32Z",
        "body": "## Motivation\r\n`Text` wasn't scaled correctly previous with https://github.com/3b1b/manim/pull/1383\r\n\r\nCloses #1497.\r\nCloses #1533.\r\n\r\n## Proposed changes\r\nChange `TEXT_MOB_SCALE_FACTOR` value\r\nAlso deprecate `size` parameter\r\n\r\nAlso, now text isn't scaled when increasing font size\r\ninstead it is passed to the underlying enging\r\nfor handling. Though always a Text object is scaled\r\nwith a default value so that it fits the screen.\r\n\r\n## Test\r\n\r\nLocally I get the following with this scene. It would nice if others test this.\r\n**Code**:\r\n```py\r\nfrom manimlib import *\r\n\r\nipsum = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\r\nclass TextExample(Scene):\r\n    def fade_out_in(self, m , m1):\r\n        self.play(FadeOut(m),FadeIn(m1),run_time=3)\r\n    def construct(self):\r\n        t = Text(\"Hello World\")\r\n        t1 = Text(\"Hello World \\n new line\")\r\n        t2 = Text(\"Hello Cursive\", font=\"Cursive\")\r\n        t3 = Text(\"Hello Cursive\", font=\"Cursive\", t2c = {'Hello':RED})\r\n        t4 = Text(\"Hello Cursive\", font=\"Cursive\", t2c = {'Hello':RED,'Cursive':BLUE})\r\n        t5 = Text(\"Hello Cursive\", font=\"Cursive\", t2c = {'Hello':RED,'Cursive':BLUE}, font_size=60)        \r\n        t6 = Text(ipsum, font_size=30).scale(.7)\r\n        self.add(t)\r\n        self.fade_out_in(t,t1)\r\n        self.fade_out_in(t1,t2)\r\n        self.fade_out_in(t2,t3)\r\n        self.fade_out_in(t3,t4)\r\n        self.fade_out_in(t4,t5)\r\n        self.fade_out_in(t5,t6)\r\n```\r\n\r\n**Result**:\r\n\r\nhttps://user-images.githubusercontent.com/49693820/122561514-95e1b600-d05f-11eb-8367-54530dbe8abc.mp4\r\n\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2021-06-18T08:20:28Z",
        "closed_at": "2021-06-19T16:53:24Z",
        "merged_at": "2021-06-19T16:53:24Z",
        "body": "## Motivation\r\nThe function `earclip_triangulation` works incorrectly with polygons with many holes. It is mentioned in #1331, but not fixed completely. The function goes wrong mainly for two reasons:\r\n- Simply choose the closest pair of points may fail with characters that contain a \u25eb-like structure in it. In the following picture, the two blue edges will be added first, and the dot (outside the large square) will connect with either of the small squares (inside the large square). This happens with \u7586 in the SimHei font.\r\n  ![Image](https://user-images.githubusercontent.com/36598223/122521168-12b46600-d047-11eb-92c7-77b456e000af.png)\r\n- Because the first and the last point of a ring is the same, the connected ring might be self-crossed at this point (as the following gif shows). It's usually caused by a \u7530-like structure. This happens with \u753b in the SimHei font.\r\n  ![Explain2](https://user-images.githubusercontent.com/36598223/122529461-1ac4d380-d050-11eb-8179-33391f861699.gif)\r\n  The red squares are two rings passed to the function (and there are more rings). The white stroke means part of the connected ring. The animation shows the order of the points on the stroke.\r\n\r\n## Proposed changes\r\n- It seems to be hard to write a correct `earclip_triangulation` function. I come up with several ideas, but they all have high time complexity. So I just used `insert_n_curves` to avoid the situation in the picture above. It works well most of the time, but still gets few characters wrong such as \ud83e\uddec(U+1F9EC). It doubles the time taken for rendering the picture below.\r\n- Just moving the first and the last points in the ring slightly solves the second problem.\r\n\r\n## Test\r\n**Code**:\r\n```python\r\nfrom manimlib import *\r\nimport time\r\n\r\nclass FontTest(Scene):\r\n    def construct(self):\r\n        start=time.time()\r\n\r\n        chinese_text=\"\u7586\u57df \u753b\u9762 \u85e4\u8513 \u5bd2\u98a4 \u56de\u590d \u56f0\u96be \\n\\n\u86d0\u86d0 \u91cf\u53d6 \u9b53 \u5716 \u8f5f \u757e \u9ad4 \u5718 \u5787 \u513d\"\r\n        text1 = Text(chinese_text, font=\"SimSun\").scale(0.7).shift(UP*3)\r\n        text2 = Text(chinese_text, font=\"SimHei\").scale(0.7).next_to(text1,DOWN)\r\n        text3 = Text(chinese_text, font=\"YouYuan\").scale(0.7).next_to(text2,DOWN)\r\n        emoji = Text(\"\ud83d\ude00\ud83d\uded2\ud83e\udd2f\ud83d\udc7e\ud83d\ude48\ud83e\udd1e\ud83e\udd94\ud83e\udd9a\ud83d\udc1e\ud83d\udc90\ud83d\udea7\ud83e\uddee\ud83c\udfc1\\n\\n\ud83c\udf47\ud83c\ude1a\ud83e\udd66\ud83c\udf54\ud83c\udf5f\ud83c\udf71\ud83c\udf82\ud83c\udffa\ud83c\udfe5\ud83c\udfa1\ud83e\udd45\ud83e\uddec\ud83d\udcf1\").next_to(text4,DOWN)\r\n        self.add(text1, text2, text3, text4, emoji)\r\n\r\n        end=time.time()\r\n        print(end-start)\r\n```\r\n\r\n**Result**:\r\nBefore:\r\n![image](https://user-images.githubusercontent.com/36598223/122527136-a5580380-d04d-11eb-84c8-1e2de894f4e3.png)\r\n\r\nAfter:\r\n![image](https://user-images.githubusercontent.com/36598223/122526959-75106500-d04d-11eb-8694-36e097247dd1.png)\r\n\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2021-06-17T06:14:30Z",
        "closed_at": "2021-06-20T07:37:06Z",
        "merged_at": "2021-06-20T07:37:06Z",
        "body": "<!-- Thanks for contributing to manim!\r\n    Please ensure that your pull request works with the latest version of manim.\r\n-->\r\n\r\n## Motivation\r\n<!-- Outline your motivation: In what way do your changes improve the library? -->\r\nFixes https://github.com/3b1b/manim/issues/1385 issue (ControlsExample Scene)\r\n\r\n## Proposed changes\r\n<!-- What you changed in those files -->\r\n1. Add `self.suspend_updating(recurse)` line back to `Mobject.clear_updaters` function\r\n(This was removed back in https://github.com/3b1b/manim/commit/d7f3f5ad24b22ed7bc85ee27df03319498fa863f commit which fixed https://github.com/3b1b/manim/issues/1378 issue)\r\n2. Unrelated to ControlsExample Scene, Remove unused `listen_to_events` `CONFIG` of `Mobject` which I added during Interactive Mobjects development but never used it! (https://github.com/3b1b/manim/pull/1323, https://github.com/3b1b/manim/pull/1326, https://github.com/3b1b/manim/pull/1335)\r\n\r\n## Comments\r\nI am not sure of the consequences of the first change. Since it was intentionally removed before to fix the https://github.com/3b1b/manim/issues/1378 issue, please check whether it is the right way of solving this issue.",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 9,
        "created_at": "2021-06-15T12:08:28Z",
        "closed_at": "2021-06-15T18:16:37Z",
        "merged_at": "2021-06-15T18:16:37Z",
        "body": "<!-- Thanks for contributing to manim!\r\n    Please ensure that your pull request works with the latest version of manim.\r\n-->\r\n\r\n## Motivation\r\n<!-- Outline your motivation: In what way do your changes improve the library? -->\r\nThere are some bugs in the `example_scenes.py`, I tried to fix some of them.\r\nBut there are still two scenes are boken:\r\n- `CoordinateSystemExample`: #1544\r\n- `ControlsExample`: #1385\r\n\r\n## Proposed changes\r\n<!-- What you changed in those files -->\r\n- `OpeningManimExample`: the default `lsh` cause the multiline Text displays ugly after #1383, and set `lsh` to 1.5 may look much better\r\n- `UpdatersExample`: since https://github.com/3b1b/manim/commit/6c3e4b94eadaf818afa2c3da5d259e8611a54461, manimgl has not allowed a mobject to be set a width which is no larger than 0, so this scene should be changed.\r\n- `docs/`: the videos in the docs have been updated\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 19,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2021-06-15T11:15:02Z",
        "closed_at": "2021-06-18T19:28:33Z",
        "merged_at": "2021-06-18T19:28:33Z",
        "body": "<!-- Thanks for contributing to manim!\r\n    Please ensure that your pull request works with the latest version of manim.\r\n-->\r\n\r\n## Motivation\r\n<!-- Outline your motivation: In what way do your changes improve the library? -->\r\nIn my opinion, `Text` should be the same size as `TexText`.\r\nBut after the introduction of `manimpango` in #1383 , it seems that the size of `Text` is different on different machines.\r\nFor this problem, there are some issues: [ManimCommunity/ManimPango#52](https://github.com/ManimCommunity/ManimPango/issues/52), #1399, #1405, #1497, #1533.\r\n\r\nMy idea is to compare the height of a `Text` letter and `TexText` letter when rendering a scene with `Text` for the first time to get the `scale_factor` required by `Text`.\r\nI think this idea may not be the best, but it does ensure that the size of `Text` is consistent with `TexText` on different machines. And I have come up with no other good solutions.\r\nIn addition, I have doubts about the reason why the system DPI affects the size of the text. I think this may not be a problem within manimgl?\r\n\r\nCloses #1497.\r\nCloses #1533.\r\n\r\n## Proposed changes\r\n<!-- What you changed in those files -->\r\n- `manimlib/mobject/svg/text_mobject.py`: fixed the size of Text on different machines\r\n- `docs/`: docs has been changed for this change\r\n\r\n## Test\r\n<!-- How do you test your changes -->\r\n**Code**:\r\n```python\r\nclass Test1(Scene):\r\n    def construct(self):\r\n        tex = TexText(\"TexText\")\r\n        text = Text(\"Text\")\r\n        VGroup(tex, text).arrange(RIGHT, aligned_edge=DOWN)\r\n        self.add(tex, text)\r\n```\r\n\r\n**Result**:\r\n![image](https://user-images.githubusercontent.com/44120331/122043444-eb268900-ce0d-11eb-8335-0054072e9ca9.png)\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 68,
        "deletions": 16,
        "changed_files": 7,
        "created_at": "2021-06-14T13:32:54Z",
        "closed_at": "2021-06-14T16:47:51Z",
        "merged_at": "2021-06-14T16:47:51Z",
        "body": "<!-- Thanks for contributing to manim!\r\n    Please ensure that your pull request works with the latest version of manim.\r\n-->\r\n\r\n## Motivation\r\n<!-- Outline your motivation: In what way do your changes improve the library? -->\r\nAdded some features and fixed some bugs\r\n\r\n## Proposed changes\r\n<!-- What you changed in those files -->\r\n- `manimlib/__main__.py`: supported debugger launch\r\n- `manimlib/config.py`: added `--config_file` CLI flag to load configuration file manually\r\n- `manimlib/mobject/geometry.py`: added `tip_style` to `tip_config`, there are three styles (0 to 2 from up to down):\r\n    \r\n    ![image](https://user-images.githubusercontent.com/44120331/121900079-99bbc280-cd57-11eb-8290-71ca3c84710a.png)\r\n\r\n- `manimlib/mobject/geometry.py`: fixed the default color of tip\r\n- `manimlib/mobject/vector_field.py`: fixed a typo (`ShowPassingFlash` to `VShowPassingFlash`)\r\n- `docs/`: docs had been modified for these changes\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 6,
        "changed_files": 4,
        "created_at": "2021-06-05T14:07:41Z",
        "closed_at": "2021-06-14T16:44:02Z",
        "merged_at": "2021-06-14T16:44:02Z",
        "body": "## Motivation\r\n- `camera_distance` is set to be 6 and doesn't change with the `focal_distance`.\r\n- The z coordinate is used to check whether the surface is facing the camera. It generates the wrong result which is particularly obvious when `focal_distance` is small.\r\n\r\n## Proposed changes\r\n- Replace `float camera_distance = 6;` with `float camera_distance = focal_distance;`, and add `uniform float focal_distance;` in some shaders.\r\n- Use the dot product to check whether the surface is facing the camera.\r\n\r\n## Test\r\n**Code**:\r\n```python\r\nfrom manimlib import *\r\n\r\n\r\nclass Test(Scene):\r\n    CONFIG = {\r\n        \"camera_class\": ThreeDCamera,\r\n        \"camera_config\": {\r\n            \"focal_distance\": 0.5,\r\n            \"light_source_position\": [1, 1, -2],\r\n            \"frame_config\":{\r\n                \"frame_shape\": (4, 3),\r\n            }\r\n        }\r\n    }\r\n\r\n    def construct(self):\r\n        sphere = Sphere(radius=2)\r\n        sphere.shift(DOWN*3.3)\r\n        sphere.set_color('#cccccc')\r\n        self.add(sphere)\r\n        self.wait(1)\r\n\r\n```\r\n\r\n**Result**:\r\nBefore:\r\n![image](https://user-images.githubusercontent.com/36598223/120894198-d72e9a80-c649-11eb-807f-3a6e2e97c324.png)\r\n\r\nAfter:\r\n![image](https://user-images.githubusercontent.com/36598223/120894205-e01f6c00-c649-11eb-97fd-dd95980d4649.png)\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-06-05T00:19:55Z",
        "closed_at": "2021-06-14T16:42:41Z",
        "merged_at": "2021-06-14T16:42:41Z",
        "body": "https://github.com/3b1b/manim/issues/1509 is caused by Camera.pixel_coords_to_space_coords using the default pyglet window size (1280x720) instead of the actual window size. Fixed by passing the window size to the constructor of PygletWindow.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-05-31T20:37:51Z",
        "closed_at": "2021-06-12T12:39:22Z",
        "merged_at": null,
        "body": "<!-- Thanks for contributing to manim!\r\n    Please ensure that your pull request works with the latest version of manim.\r\n-->\r\n\r\n## Motivation\r\n<!-- Outline your motivation: In what way do your changes improve the library? -->\r\n\r\nThis PR fixes #1404\r\n\r\n## Proposed changes\r\n<!-- What you changed in those files -->\r\n- Remove unnecessary `}` in the documentation.\r\n\r\n## Test\r\n<!-- How do you test your changes -->\r\n**Code**: I've rendered the .rst page and confirmed that now the example works.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-05-24T16:55:51Z",
        "closed_at": "2021-06-12T12:29:53Z",
        "merged_at": "2021-06-12T12:29:53Z",
        "body": "## Motivation\r\nmanimpango v0.3.0 should work as there are no breaking changes for the API used here\r\nI should bring in MarkupText here...\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-05-18T15:19:05Z",
        "closed_at": "2021-06-12T12:25:33Z",
        "merged_at": null,
        "body": "Added docstring help changes.\r\nIt don't affect coding.\r\nOnly starting(more will be added\r\n\r\n\r\n<!-- Thanks for contributing to manim!\r\n    Please ensure that your pull request works with the latest version of manim.\r\n-->\r\n\r\n## Motivation\r\n<!-- extended help for users. more will be added soon. -->\r\n\r\n## Proposed changes\r\n<!-- added docstring -->\r\n- \r\n- \r\n- \r\n\r\n## Test\r\n<!-- use __doc__ or open in python specialized coding programmes (PyCharm)  -->\r\n**__doc__**:\r\n\r\n**(extended help)**:",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-04-25T14:58:26Z",
        "closed_at": "2021-06-12T11:28:41Z",
        "merged_at": "2021-06-12T11:28:41Z",
        "body": "Removed extra left side curly bracket in embed section\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2021-04-20T10:26:31Z",
        "closed_at": "2021-06-26T00:49:37Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2021-04-20T08:00:41Z",
        "closed_at": "2021-06-12T10:31:44Z",
        "merged_at": "2021-06-12T10:31:43Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-04-17T14:35:33Z",
        "closed_at": "2021-06-14T16:50:20Z",
        "merged_at": "2021-06-14T16:50:20Z",
        "body": "When pattern is an empty string, text is splited one by one. If there is a \"$\" letter, latex will try to find another \"$\".",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-04-17T08:38:45Z",
        "closed_at": "2021-06-12T10:21:09Z",
        "merged_at": "2021-06-12T10:21:08Z",
        "body": "## Motivation\r\nSpelling errors in README.md\r\n\r\n## Proposed changes\r\nMinor spelling fixes\r\n\r\n## Test\r\nNo tests, only plain text was changed",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-04-16T15:21:55Z",
        "closed_at": "2021-06-12T10:18:18Z",
        "merged_at": "2021-06-12T10:18:18Z",
        "body": "<!-- Thanks for contributing to manim!\r\n    Please ensure that your pull request works with the latest version of manim.\r\n-->\r\n\r\n## Motivation\r\n<!-- Outline your motivation: In what way do your changes improve the library? -->\r\n\r\n## Proposed changes\r\n<!-- What you changed in those files -->\r\n- \r\n- \r\n- \r\n\r\n## Test\r\n<!-- How do you test your changes -->\r\n**Code**:\r\n\r\n**Result**:",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-04-10T12:19:35Z",
        "closed_at": "2021-06-12T10:06:03Z",
        "merged_at": "2021-06-12T10:06:03Z",
        "body": "Just fix a small typo",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-03-08T03:21:19Z",
        "closed_at": "2021-04-08T21:22:25Z",
        "merged_at": "2021-04-08T21:22:25Z",
        "body": "## Motivation\r\nMy motivation was to make the ease of use better because the class would be properly named.\r\n\r\n## Proposed changes\r\n- The spelling of \"Development\"",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 715,
        "deletions": 9,
        "changed_files": 8,
        "created_at": "2021-03-03T16:11:37Z",
        "closed_at": "2021-03-08T14:01:42Z",
        "merged_at": null,
        "body": "<!-- Thanks for contributing to manim!\r\n    Please ensure that your pull request works with the latest version of manim.\r\n-->\r\n\r\n## Motivation\r\n<!-- Outline your motivation: In what way do your changes improve the library? -->\r\n\r\n## Proposed changes\r\n<!-- What you changed in those files -->\r\n- \r\n- \r\n- \r\n\r\n## Test\r\n<!-- How do you test your changes -->\r\n**Code**:\r\n\r\n**Result**:",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2021-02-26T17:02:30Z",
        "closed_at": "2021-04-08T21:23:29Z",
        "merged_at": "2021-04-08T21:23:29Z",
        "body": "## Motivation\r\nSee \r\nhttps://github.com/3b1b/manim/issues/1387\r\nhttps://github.com/3b1b/manim/issues/1391\r\n\r\nManimPango should be installed from the source for Linux users.\r\nAlso, see https://github.com/ManimCommunity/ManimPango/issues/27\r\n\r\n## Proposed changes\r\nupdate docs\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-02-26T09:48:57Z",
        "closed_at": "2021-04-08T21:22:47Z",
        "merged_at": "2021-04-08T21:22:47Z",
        "body": "## Motivation\r\nElbow is unusable in the master\r\n\r\n## Proposed changes\r\nFixed the __init__ of Elbow\r\n\r\n## Test\r\n**Code**:\r\nclass ElbowExample(Scene):\r\n    def construct(self):\r\n        elbow = Elbow()\r\n        self.add(elbow)\r\n**Result**:\r\nAn Elbow is drawn",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-02-24T17:37:13Z",
        "closed_at": "2021-04-08T21:23:02Z",
        "merged_at": "2021-04-08T21:23:02Z",
        "body": "## Motivation\r\n<!-- Outline your motivation: In what way do your changes improve the library? -->\r\nThis simply fixes a typo in the README.md file.\r\n\r\n## Proposed changes\r\n`devlopers` is changed to `developers`",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 40365,
        "deletions": 292776,
        "changed_files": 706,
        "created_at": "2021-02-20T17:48:49Z",
        "closed_at": "2021-02-21T02:54:41Z",
        "merged_at": null,
        "body": "<!-- Thanks for contributing to manim!\r\n    Please ensure that your pull request works with the latest version of manim.\r\n-->\r\n\r\n## Motivation\r\n<!-- Outline your motivation: In what way do your changes improve the library? -->\r\nthe link could work and I am learning to do PR.\r\n\r\n## Proposed changes\r\n<!-- What you changed in those files -->\r\nfix-1045  [(https://github.com/ManimCommunity/manim/issues/1045)]\r\n- The stable branch does not exist, that's why it showing the 404.\r\n- posibly, an oversight after getting rid of the stable branch. Can be fixed similarly to what is done here:\r\n`manim/docs/source/conf.py`\r\n\r\nLine 118 in 6744c48\r\n`if version == \"latest\": ` \r\n\r\n- possibly also just by linking to master, so adding ` or ... == \"stable\" to that line.`\r\n- \r\n\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2021-02-19T17:06:16Z",
        "closed_at": "2021-02-23T20:00:31Z",
        "merged_at": "2021-02-23T20:00:31Z",
        "body": "rebased #1161\r\n\r\n> - removed unused `progressbar` dependency\r\n> - correct `ascii` fallback auto-detection, related https://github.com/tqdm/tqdm/issues/454",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2021-02-18T19:20:57Z",
        "closed_at": "2021-02-23T19:59:43Z",
        "merged_at": "2021-02-23T19:59:43Z",
        "body": "## Motivation\r\n`register_font` method is now available for macOS for `ManimPango>=v0.2.3`, which was released a few days back.\r\nhttps://github.com/ManimCommunity/ManimPango/pull/26\r\n\r\n## Proposed changes\r\n- Edit doc string\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 87,
        "deletions": 73,
        "changed_files": 2,
        "created_at": "2021-02-12T07:15:25Z",
        "closed_at": "2021-02-12T21:15:40Z",
        "merged_at": "2021-02-12T21:15:40Z",
        "body": "## Motivation\r\nPango is a lot better at Text Rendering rather than using a Toy API for Cairo. I had discussed this with @3b1b on [Discord.](https://discord.com/channels/581738731934056449/712140817200054294/808055730639863868). This will remove the dependency on pycairo.\r\n\r\nIt also provides another method to add a font file to Pango search path, whose family name can later be called. This method isn't available for macOS yet.\r\n\r\nI couldn't find `Code` here, that would require a small change setting `disable_ligatures`, or else colours would be broken, due to ligatures.\r\n\r\n## Proposed changes\r\n- requirements.txt - add manimpango\r\n- text_mobject.py - use manimpango\r\n\r\n## Test\r\nRunning example scenes should work, no breaking API changes. `register_font` API can be used as\r\n```py\r\nwith register_font('roboto.ttf'):\r\n    a=Text(\"Hello Roboto\",font=\"Roboto\")\r\n```\r\nA list of fonts visible to Pango can be got from\r\n```py\r\n>>> import manimpango\r\n>>> manimpango.list_fonts()\r\n[ ... ]\r\n```\r\nMore API at https://manimpango.manim.community/en/latest/",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-02-11T11:50:32Z",
        "closed_at": "2021-04-22T03:45:45Z",
        "merged_at": null,
        "body": "<!-- Thanks for contributing to manim!\r\n    Please ensure that your pull request works with the latest version of manim.\r\n-->\r\n\r\n## Motivation\r\n<!-- Outline your motivation: In what way do your changes improve the library? -->\r\nIn the `cairo-backend` branch, configurations such as `background_color` of `Camera` was possible to be set via `Scene`'s `CONFIG` like so:\r\n```py\r\nClass MyScene(Scene):\r\n    CONFIG = {\"camera_config\": {\"background_color\": <color>}}\r\n```\r\nBut it is currently not possible in the `master` branch. The only way to achieve this is to either change the `custom_defaults` or pass the relevant command line flags (for example `-c <color>` for background color). The reason is, `scene_config` built through `custom_defaults` and the command line flags no where considers `MyScene.CONFIG`. The `digest_config` function might seem to take care of this, but since `kwargs` are given higher priority in `digest_config` and `scene_config` is indeed passed as `kwargs` while instantiating the `Scene`,https://github.com/3b1b/manim/blob/787b3be357e3c8b6c119aa45f1b8101fdee70487/manimlib/extract_scene.py#L76\r\n`MyScene.CONFIG` gets overridden by the `scene_config` while the opposite is expected. \r\n## Proposed changes\r\n<!-- What you changed in those files -->\r\n- Allow users to set `camera_config`, `window_config`, `file_writer_config` and other configurations of a `Scene` through `CONFIG` dict of their scenes. \r\n\r\n## Test\r\n<!-- How do you test your changes -->\r\n**Code**:\r\n```py\r\nclass Test(Scene):\r\n    CONFIG = {\r\n        \"camera_config\":{\r\n            \"background_color\": \"#cc9900\",\r\n            \"samples\": 4\r\n        },\r\n        \"window_config\":{\"size\": (1900, 1000)},  # works if preview is True\r\n        \"preview\": False,\r\n        \"file_writer_config\": {\r\n            \"save_last_frame\": True,\r\n            \"open_file_upon_completion\": True,\r\n        }\r\n    }\r\n\r\n    def construct(self):\r\n        motivation = Text(\r\n            \"Allow setting scene_configs through CONFIG dict\", \r\n            font=\"Georgia\",\r\n            t2c={\"scene_config\": BLACK, \"CONFIG\": BLACK}\r\n        ).set_width(FRAME_WIDTH-1)\r\n        self.add(motivation)\r\n```\r\n\r\n**Result**:\r\n- **command** : `python -m manim .\\test.py Test`\r\n- **Result on master**: (All the configs are ignored, a window at top right corner opens up which is the default behavior)\r\n![Screenshot (43)](https://user-images.githubusercontent.com/64465542/107632341-6293b280-6c8c-11eb-9c64-3aed65d6e8b6.png)\r\n- **Result on current branch**: (All the configs are respected and the Test.png file opens up as expected from `Test.CONFIG`)\r\n![Test](https://user-images.githubusercontent.com/64465542/107632825-067d5e00-6c8d-11eb-8be9-1ae99187918c.png)\r\n\r\n",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 223,
        "deletions": 133,
        "changed_files": 10,
        "created_at": "2021-02-10T15:57:23Z",
        "closed_at": "2021-02-10T21:43:08Z",
        "merged_at": "2021-02-10T21:43:08Z",
        "body": "<!-- Thanks for contributing to manim!\r\n    Please ensure that your pull request works with the latest version of manim.\r\n-->\r\n\r\n## Motivation\r\n<!-- Outline your motivation: In what way do your changes improve the library? -->\r\nAdding `.animate` syntax greatly improves the syntax for animating mobject method calls, especially with regards to passing keyword arguments to methods. Where before you would do\r\n\r\n```py\r\nself.play(mobj.method, arg, {\"kwarg\": value})\r\n```\r\n\r\nNow you can do\r\n\r\n```py\r\nself.play(mobj.animate.method(arg, kwarg=value))\r\n```\r\n\r\n(Though the old syntax still works).\r\n\r\nFor more information, see the [Manim Community docs](https://docs.manim.community/en/stable/reference/manim.mobject.mobject.Mobject.html#manim.mobject.mobject.Mobject.animate).\r\n\r\n## Proposed changes\r\n<!-- What you changed in those files -->\r\n- Add the `animate` property to the `Mobject` class, along with all associated logic (`override_animate`, using the `.animate` syntax in `AnimationGroup`s, etc.).\r\n- Update all usages of the old syntax to the `.animate` syntax, besides from some lines in the docs/examples explaining the old syntax.\r\n- My text editor is configured so that it removes trailing white space and adds a newline at the end of every file I save, that seems to have affected a few places.\r\n\r\n## Test\r\n<!-- How do you test your changes -->\r\n**Code**:\r\n```py\r\nfrom manimlib.imports import *\r\n\r\nclass Test(Scene):\r\n    def construct(self):\r\n        c = Circle()\r\n        self.add(c)\r\n        self.play(c.animate.scale(2))\r\n        self.play(c.scale, 0.5)\r\n```\r\n**Result**:\r\n\r\nhttps://user-images.githubusercontent.com/20881398/107535195-237b3980-6b86-11eb-99ac-bb4783a6045c.mp4\r\n\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 392,
        "deletions": 414,
        "changed_files": 31,
        "created_at": "2021-02-07T14:07:52Z",
        "closed_at": "2021-02-11T18:54:48Z",
        "merged_at": "2021-02-11T18:54:48Z",
        "body": "<!-- Thanks for contributing to manim!\r\n    Please ensure that your pull request works with the latest version of manim.\r\n-->\r\n## Motivation\r\n<!-- Outline your motivation: In what way do your changes improve the library? -->\r\nThe current `manimlib` is relatively inconsistent with the package specification, so some slight refactoring has been carried out.\r\nAnd added an automation guide for setting `custom_default.yml`\r\n## Proposed changes\r\n<!-- What you changed in those files -->\r\n- Move `manimlib/__init__.py` into `manimlib/__main__.py` as an entry point of manim and remove all non-manim imports.\r\n- Move `manimlib/imports.py` into `manimlib/__init__.py`. So we can use `from manimlib import *` to import this package.\r\n- Add empty `__init__.py` for each folder\r\n- Delete old entry point `manim.py`, Use `manimgl` (or `manim-render`) instead of `python manim.py`.\r\n- Change file names of yaml files: `custom_defaults.yml -> custom_config.yml`, `defaults.yml -> default_config.yml`\r\n- Add configuration guide, which will be run when there is no configuration file (`custom_config.yml` or `manimlib/default_config.yml`)\r\n- Add a warning if there is no `custom_config.yml` and using the `default_config.yml`\r\n- Add a CLI flag `--config`. Use `manimgl --config` to create a config file according to the guide for a second time.\r\n- Update README and docs",
        "comments": 20
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-02-06T10:00:14Z",
        "closed_at": "2021-02-06T17:05:22Z",
        "merged_at": "2021-02-06T17:05:22Z",
        "body": "<!-- Thanks for contributing to manim!\r\n    Please ensure that your pull request works with the latest version of manim.\r\n-->\r\n\r\n## Motivation\r\n<!-- Outline your motivation: In what way do your changes improve the library? -->\r\nMinor bugs concerning `unit_size` of `NumberLine`. \r\n\r\n1. The `get_unit_size` method \r\nhttps://github.com/3b1b/manim/blob/66817c4e2bc56f45f370498c2c93b033c1109951/manimlib/mobject/number_line.py#L125-L126 should return `self.get_length() / (self.x_max - self.x_min)`, not `(self.x_max - self.x_min) / self.get_length()`\r\n\r\n2. If `width` is passed as an argument, the `unit_size` attribute (available via `CONFIG`) still remains 1 when it should be reset to appropriate value.\r\n## Proposed changes\r\n<!-- What you changed in those files -->\r\n1. Fix the return value of `get_unit_size` method.\r\n2. Reset the value of `unit_size` attribute if `width` is passed.  \r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2021-02-05T10:12:28Z",
        "closed_at": "2021-02-05T18:12:15Z",
        "merged_at": "2021-02-05T18:12:15Z",
        "body": "this is a remake of https://github.com/3b1b/manim/pull/1204 on the current master\r\n\r\nthis way, decorated methods - typically Scene.play - have a decent docstring\r\nso first-time users can use help()\r\n\r\n\r\n<!-- Thanks for contributing to manim!\r\n    Please ensure that your pull request works with the latest version of manim.\r\n-->\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2021-02-05T07:58:23Z",
        "closed_at": "2021-02-05T22:49:35Z",
        "merged_at": "2021-02-05T22:49:35Z",
        "body": "## Motivation\r\nWhen prompted for Scene Selection,\r\n1. The comma separator was not working.\r\n2. Also, typing out the full scene is an error-prone tedious job. \r\nSince scene name (class name) can not be a numeric value, we could allow both options.\r\n\r\n## Files Changed\r\nmanimlib/extract_scene.py\r\n> Changed prompt_user_for_choice method.\r\n\r\n## Result\r\nComma-separated scene names or numbers are working properly.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2021-02-05T06:06:29Z",
        "closed_at": "2021-02-05T22:51:47Z",
        "merged_at": "2021-02-05T22:51:47Z",
        "body": "<!-- Thanks for contributing to manim!\r\n    Please ensure that your pull request works with the latest version of manim.\r\n-->\r\n\r\n## Motivation\r\n<!-- Outline your motivation: In what way do your changes improve the library? -->\r\nFixed #1354.\r\nTemporarily fix the problem that occurs when `GraphScene` calls `NumberLine`. \r\nBut I am not sure if it is necessary to continue to support `GraphScene`. If needed, then more adaptive changes should be made to `GraphScene`; if not, then it should be deleted.\r\n## Proposed changes\r\n<!-- What you changed in those files -->\r\n- Change `self.tick_marks` to `self.ticks`\r\n- Do not unpack when passing the value to `add_numbers()`\r\n\r\n## Test\r\n<!-- How do you test your changes -->\r\n**Code**: The code in #1354 \r\n```python\r\nclass Plot2yLabelNumbers(GraphScene):\r\n    CONFIG = {\r\n        \"y_min\": 0,\r\n        \"y_max\": 100,\r\n        \"y_axis_config\": {\"tick_frequency\": 10},\r\n        \"y_labeled_nums\": np.arange(0, 100, 10)\r\n    }\r\n    def construct(self):\r\n        self.setup_axes()\r\n        dot = Dot().move_to(self.coords_to_point(PI / 2, 20))\r\n        func_graph = self.get_graph(lambda x: 20 * np.sin(x))\r\n        self.add(dot,func_graph)\r\n```\r\n**Result**:\r\n![Plot2yLabelNumbers](https://user-images.githubusercontent.com/44120331/106996095-38894e80-67bb-11eb-8b1e-8ffa947ab386.png)\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-02-03T09:23:59Z",
        "closed_at": "2021-02-03T18:58:31Z",
        "merged_at": "2021-02-03T18:58:31Z",
        "body": "<!-- Thanks for contributing to manim!\r\n    Please ensure that your pull request works with the latest version of manim.\r\n-->\r\n\r\n## Motivation\r\n<!-- Outline your motivation: In what way do your changes improve the library? -->\r\nFixes #1330, #1337, #1341, #1342.\r\nOn some machines, the line `samples=1` will cause `pyglet.window.NoSuchConfigException`, deleting it (changing it to the default value of 0) will not cause problems.\r\nThis is also included in #1336.\r\n## Proposed changes\r\n<!-- What you changed in those files -->\r\n- Remove `samples=1` in `window.py`\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2021-02-02T18:42:29Z",
        "closed_at": "2021-02-03T19:59:09Z",
        "merged_at": "2021-02-03T19:59:09Z",
        "body": "# Motivation\r\nJust a minor fix!\r\nI had configured default temporary location storage in custom_defaults.yml.\r\nAfter running SurfaceExample from example_scenes.py, the earth textures were downloaded at the default system temp location rather than what was configured.\r\n\r\n# Files Changed\r\n1. manimlib/utils/directories.py\r\n> Added get_downloads_dir method\r\n2. manimlib/utils/file_ops.py\r\n> Changed downloads folder from tempfile.gettempdir() to get_downloads_dir\r\n\r\n# Result\r\nNow, the SurfaceExample Scene is downloading textures in the folder configured in custom_defaults.yml rather than system default temp dir.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 98,
        "deletions": 5,
        "changed_files": 6,
        "created_at": "2021-02-02T15:22:53Z",
        "closed_at": "2021-02-06T00:17:33Z",
        "merged_at": "2021-02-06T00:17:33Z",
        "body": "I added the code to package manimlib and publish it on pypi using GitHub Action. Also fixed some bugs that made manimlib unable to be used normally after packaging.\r\n- The first commit https://github.com/3b1b/manim/commit/9916f56fb10b8600856b37e1bb84b57f5cc63ad2: The package will not include `manim.py`, so the \"manim\" module will not be found. So I changed to get the manimlib directory, and returned to the previous level to get the original \"manim_dir\".\r\n- The second commit https://github.com/3b1b/manim/commit/e4df135bbea9f6c8e57ef597e796bccd03b4fe58: Updated the version and document address in `setup.cfg`.\r\n- The third commit https://github.com/3b1b/manim/commit/7a6a8556b87c3f7b307127dea100b8892dab0eba: The package will also not include `custom_default.yml`, so I created the same `default.yml` in the manimlib folder as the default configuration. At the same time, the previous `custom_default.yml` will take effect as before when the repo is cloned and run, because this personalized default value overrides the `default.yml` in manimlib\r\n- The fourth commit https://github.com/3b1b/manim/commit/5b6997aea97de3d2f2ed697c5e60083644f85204: Set up a GitHub Action to package manimlib and publish it on pypi. Whenever a release is created, the current version will be released on pypi.\r\n- The fifth commit https://github.com/3b1b/manim/commit/c5b00401663e15c8c34a450f4ce05c46cac1d3f9: As mentioned and solved in #1330, the line `samples=1` on some machines will cause `NoSuchConfigException`. So I deleted this line. But this may not be a good solution.\r\n---\r\n@3b1b, if you think it is okay to merge this PR, to package and publish manimlib to pypi, you also need to create two repository secrets in Settings-Secrets, one is `PYPI_USERNAME`, which is your pypi username, and the other is `PYPI_PASSWORD` , which is your pypi account password. After setting it up, create a release. If there is no error, the current version will be packaged and released to pypi at the same time. Then others can install manimlib through pip, and use manim directly as `manim code.py Scene` in anywhere.",
        "comments": 19
    },
    {
        "merged": true,
        "additions": 258,
        "deletions": 111,
        "changed_files": 7,
        "created_at": "2021-02-02T11:01:41Z",
        "closed_at": "2021-02-02T17:57:56Z",
        "merged_at": "2021-02-02T17:57:56Z",
        "body": "# Motivation\r\nAs metioned by @3b1b https://github.com/3b1b/manim/pull/1326#pullrequestreview-580589728,\r\n\r\n> Generally looks good, the only worry I could see would be a small edge case where if you add a mobject to a scene, then later add an interactive mobject to that mobject, it wouldn't be reflected in the scene.\r\n> \r\n> But this is probably unusual enough it's not worth worrying about right now.\r\n\r\nAlso, The event handling mechanism was fragmented across Scene and Mobject classes.\r\nThe same has been abstracted and is contained within EventDispatcher class.\r\n\r\n# Changes\r\n1. Added manimlib/event_handler folder\r\n> This contains all the logic behind event handling\r\n2. manimlib/mobject/interactive.py, manimlib/mobject/mobject.py, manimlib/scene/scene.py\r\n> To refactor event handling mechanism\r\n\r\n# Result\r\n![ExampleWithEventDispatcher](https://user-images.githubusercontent.com/49190295/106590598-49e01a00-6573-11eb-86cd-fb13c37f1155.gif)\r\nThe ControlsExample in example_scene works just as before, only the underlying structure is changed.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 64,
        "deletions": 21,
        "changed_files": 5,
        "created_at": "2021-02-02T08:51:19Z",
        "closed_at": "2021-02-02T18:04:12Z",
        "merged_at": "2021-02-02T18:04:12Z",
        "body": "Create two new issue templates:\r\n- Error when using\r\n- Bug report\r\n- and a link to discussion/Q&A for asking questions.\r\n\r\nAnd update templates of pull requests.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-02-02T06:07:13Z",
        "closed_at": "2021-02-03T20:33:59Z",
        "merged_at": "2021-02-03T20:33:59Z",
        "body": "Thanks for contributing to manim!\r\n\r\n**Please ensure that your pull request works with the latest version of manim.**\r\nYou should also include:\r\n\r\n1. The motivation for making this change (or link the relevant issues)\r\n2. How you tested the new behavior (e.g. a minimal working example, before/after\r\nscreenshots, gifs, commands, etc.) This is rather informal at the moment, but\r\nthe goal is to show us how you know the pull request works as intended.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-02-02T03:47:18Z",
        "closed_at": "2021-02-02T06:13:46Z",
        "merged_at": null,
        "body": "added installation guide for macOS X\r\n\r\nThanks for contributing to manim!\r\n\r\n**Please ensure that your pull request works with the latest version of manim.**\r\nYou should also include:\r\n\r\n1. The motivation for making this change (or link the relevant issues)\r\n2. How you tested the new behavior (e.g. a minimal working example, before/after\r\nscreenshots, gifs, commands, etc.) This is rather informal at the moment, but\r\nthe goal is to show us how you know the pull request works as intended.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2021-02-01T15:04:49Z",
        "closed_at": "2021-02-02T18:04:17Z",
        "merged_at": "2021-02-02T18:04:17Z",
        "body": "Similar to #950. On some machines, the return value of the function in GLSL is float, but returning 0 will cause an error. After changing it to 0.0, such an error will not occur.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2021-02-01T08:32:49Z",
        "closed_at": "2021-02-03T20:10:03Z",
        "merged_at": "2021-02-03T20:10:03Z",
        "body": "\r\n## Motivation\r\n<!-- Outline your motivation: In what way do your changes improve the library? -->\r\nCurrently the key `exclude_zero_from_default_numbers` of `NumberLine` is redundant since its value is not used anywhere else (including `coordinate_systems.py`) https://github.com/3b1b/manim/blob/fe85d4e02f6935c49fb0b88eebbd492dfff2d324/manimlib/mobject/number_line.py#L40 So, passing it as an argument to `NumberLine` won't produce the desired result. This PR removes the redundancy by replacing the key `exclude_zero_from_default_numbers` with `numbers_to_exclude` (defaults to `None`), which is passed as an argument to the method `add_numbers` at this line:\r\nhttps://github.com/3b1b/manim/blob/fe85d4e02f6935c49fb0b88eebbd492dfff2d324/manimlib/mobject/number_line.py#L73 So `self.add_numbers()` becomes `self.add_numbers(excluding=self.numbers_to_exclude)`\r\n## Proposed changes\r\n\r\n1. Replace the redundant `CONFIG` key `exclude_zero_from_default_numbers` with `numbers_to_exclude`.\r\n2. Pass the value of replaced key `numbers_to_exclude` to the method `add_numbers` \r\n\r\n## Testing Status\r\n<!-- Optional (but recommended): your computer specs and\r\nwhat tests you ran with their results, if any. This section\r\nis also intended for other testing-related comments. -->\r\nBefore: \r\n```py\r\nclass NumberLineExcludeFail(Scene):\r\n    def construct(self):\r\n        self.add(\r\n            NumberLine(\r\n                include_numbers = True,\r\n                exclude_zero_from_default_numbers = True\r\n                )\r\n            )\r\n```\r\n![Test](https://user-images.githubusercontent.com/64465542/106432907-6a39a700-6495-11eb-90f1-5b54cd1b28dd.png)\r\nAfter:\r\n```py\r\nclass NumberLineExcludePass(Scene):\r\n    def construct(self):\r\n        self.add(\r\n            NumberLine(\r\n                include_numbers = True,\r\n                numbers_to_exclude = [0]\r\n                )\r\n            )\r\n```\r\n\r\n![Test](https://user-images.githubusercontent.com/64465542/106433212-e0d6a480-6495-11eb-97b9-ddc780c23471.png)\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-02-01T02:17:02Z",
        "closed_at": "2021-02-03T20:09:34Z",
        "merged_at": "2021-02-03T20:09:34Z",
        "body": "## Motivation: \r\nWhen graphing functions that have sharp corners, the smoothing causes ringing near the corners which is undesired. The goal of the change is to allow turning smoothing off and on as desired. \r\n\r\nA few other people have run into this issue as well.\r\n[My post](https://www.reddit.com/r/manim/comments/l5xlrg/is_there_a_way_to_change_the_interpolation_to/)  \r\n[u/mc_pm's post](https://www.reddit.com/r/manim/comments/l9l64d/graphscene_is_there_a_way_to_turn_off_bezier)\r\n\r\nThe fix was suggested by Reddit user [u/FIeabus](https://www.reddit.com/user/FIeabus/) (Thank you so much!) and I tested it locally.\r\n\r\n### Example that was previously broken:\r\n```\r\nfrom manimlib.imports import *\r\nimport math\r\n\r\nclass Graphing(GraphScene): \r\n    CONFIG = {\r\n        \"x_min\": 0,\r\n        \"x_max\": 3,\r\n        \"x_tick_frequency\": 1,\r\n        \"x_axis_width\": 5,\r\n        \"y_min\": 0,\r\n        \"y_max\": 2,\r\n        \"y_tick_frequency\": 1,\r\n        \"y_axis_height\": 5,\r\n        \"graph_origin\": ORIGIN,\r\n        \"function_color\": WHITE,\r\n        \"axes_color\": BLUE\r\n    }\r\n\r\n    def construct(self):\r\n        self.setup_axes(animate=True)\r\n        func_graph=self.get_graph(self.f1, self.function_color)\r\n        self.play(ShowCreation(func_graph)) \r\n\r\n    def f1(self, t):\r\n        if(t < 1):\r\n            return 0\r\n        elif(t < 1.1):\r\n            return 10*(t - 1)\r\n        elif(t < 1.9):\r\n            return 1\r\n        elif(t < 2):\r\n            return -10*(t-2)\r\n        else:\r\n            return 0\r\n```\r\n![image](https://user-images.githubusercontent.com/1178952/106406693-53dd0e00-63f7-11eb-82a2-e7c311a140af.png)\r\n\r\n## Fix: \r\nAdded the new `smoothing` parameter to ParametricCurve. When True, make_smooth is called in the generate_points function. When False, make_smooth is not called. The default is True so the functionality remains identical to how it is now, unless configured otherwise.\r\n\r\nNow in the previous code the get_graph function can be changed to:\r\n`func_graph=self.get_graph(self.f1, self.function_color, smoothing=False)`\r\n\r\nThis gives the result with smoothing disabled as desired.\r\n![image](https://user-images.githubusercontent.com/1178952/106406858-d796fa80-63f7-11eb-8fcf-c9e29921fef8.png)\r\n\r\n### Additional Tests:\r\n#### Confirm it works with smoothing explicitly set to True:\r\n`func_graph=self.get_graph(self.f1, self.function_color, smoothing=True)`\r\n![image](https://user-images.githubusercontent.com/1178952/106406908-feedc780-63f7-11eb-9702-c73bde3c1b40.png)\r\n\r\n#### Confirm the default is smoothing to match previous functionality:\r\n`func_graph=self.get_graph(self.f1, self.function_color)`\r\n![image](https://user-images.githubusercontent.com/1178952/106406995-2349a400-63f8-11eb-9f11-6e1e1a81c851.png)\r\n\r\n\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 66,
        "deletions": 51,
        "changed_files": 3,
        "created_at": "2021-01-31T10:37:33Z",
        "closed_at": "2021-02-01T17:30:05Z",
        "merged_at": "2021-02-01T17:30:05Z",
        "body": "# Motivation\r\nAs mentioned in https://github.com/3b1b/manim/pull/1323#issuecomment-769350572, interactive mobjects were a bit laggy.\r\n\r\nSo, to improve interactively mobjects performance, the following changes are made.\r\n1. Maintain a separate list of mobject listeners instead of filtering mobjects on every frame.\r\n>   This significantly improved the performance on all events except the on_mouse_drag event. So to improve it the 2nd change was made.\r\n2.  Changed the way drag events are handled.\r\n> This improved the performance of on_mouse_drag event.\r\n\r\n# Files Changed\r\n1. manimlib/scene/scene.py\r\n> To store a separate list of mob_listners rather than checking it on every frame and changed the on_mouse_drag event handling. \r\n2. manimlib/mobject/interactive.py\r\n> To adapt to the changes made in the way event handling works\r\n3. example_scenes.py\r\n> Commented out \"self.embed()\"\r\n\r\n# Change in how on_mouse_drag works\r\nIf mouse is being draged, following events are triggered\r\n1. **on_mouse_press** once\r\n2. Then, till the mouse is being dragged, **on_mouse_drag** is called\r\n3. Finally, **on_mouse_release** once\r\n\r\nPreviously, on_mouse_drag event of mobject was called on every frame if the point is touching the mobject.\r\n\r\nSo, if in between dragging, the mouse point leaves the mobject radius, on_mouse_drag event of mobject is stopped.\r\n\r\nNow, If on_mouse_press is called, all the mobjects near mouse point is stored in array. And when mouse is being dragged,\r\non_mouse_drag is called on all the mobjects stored earlier regardless of whether mouse point is touching the mobject or not.\r\nAnd, once on_mouse_release is called, that array is cleared\r\n\r\nThis has significantly improved the interactivity involving dragging.\r\n\r\n# Results\r\n![DraggableMobjectsExample](https://user-images.githubusercontent.com/49190295/106261792-1423f400-6248-11eb-8738-4980cec4b19d.gif)\r\nNow, all the interactive mobjects are responding very quickly to events.",
        "comments": 12
    },
    {
        "merged": false,
        "additions": 58,
        "deletions": 44,
        "changed_files": 2,
        "created_at": "2021-01-29T10:26:53Z",
        "closed_at": "2021-01-31T11:50:13Z",
        "merged_at": null,
        "body": "# Motivation\r\nAs mentioned in https://github.com/3b1b/manim/pull/1323#issuecomment-769350572, interactive mobjects were a bit laggy.\r\n\r\nSo, to improve interactively mobjects performance, the following changes are made.\r\n1. Maintain a separate list of mobject listeners instead of filtering mobjects on every frame.\r\n>   This significantly improved the performance on all events except the on_mouse_drag event. So to improve it the 2nd change was made.\r\n2.  Changed the way drag events are handled.\r\n> This improved the performance of on_mouse_drag event.\r\n\r\n# Files Changed\r\n1. manimlib/scene/scene.py\r\n> To store a separate list of mob_listners rather than checking it on every frame and changed the on_mouse_drag event handling. \r\n2. manimlib/mobject/interactive.py\r\n> To adapt to the changes made in the way event handling works\r\n\r\n# Change in how on_mouse_drag works\r\nIf mouse is being draged, following events are triggered\r\n1. **on_mouse_press** once\r\n2. Then, till the mouse is being dragged, **on_mouse_drag** is called\r\n3. Finally, **on_mouse_release** once\r\n\r\nPreviously, on_mouse_drag event of mobject was called on every frame if the point is touching the mobject.\r\n\r\nSo, if in between dragging, the mouse point leaves the mobject radius, on_mouse_drag event of mobject is stopped.\r\n\r\nNow, If on_mouse_press is called, all the mobjects near mouse point is stored in array. And when mouse is being dragged,\r\non_mouse_drag is called on all the mobjects stored earlier regardless of whether mouse point is touching the mobject or not.\r\nAnd, once on_mouse_release is called, that array is cleared\r\n\r\nThis has significantly improved the interactivity involving dragging.\r\n\r\n# Results\r\n![DraggableMobjectsExample](https://user-images.githubusercontent.com/49190295/106261792-1423f400-6248-11eb-8738-4980cec4b19d.gif)\r\nNow, all the interactive mobjects are responding very quickly to events.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 667,
        "deletions": 4,
        "changed_files": 6,
        "created_at": "2021-01-28T09:58:30Z",
        "closed_at": "2021-01-28T19:59:13Z",
        "merged_at": "2021-01-28T19:59:13Z",
        "body": "# Motivation\r\nHaving sliders, textbox, checkbox, etc will speed up the development process of videos and it can also help in some videos that include explanations of how things change when some parameters are tweaked.\r\n\r\n# Example\r\n![InteractiveMobjectsExample](https://user-images.githubusercontent.com/49190295/106116700-3a7a5e80-6178-11eb-9502-b4818faa3d70.gif)\r\n( Source code of the above interactive is added in **example_scenes.py** )\r\n\r\n# Uses\r\n\r\n* It can be used during development purposes for tweaking parameters and seeing the changes live.\r\n* It can also be used for explanation videos that consist of tweaking parameters.\r\n* For videos, instead of mouse and keyboard, you can change Interactive Mobject Values using the **set_value** method.\r\n* Like ValueTracker, you can add updaters to other mobjects which changes mobject state using interactive mobjects **get_value** method.\r\n\r\n# Files Changed\r\n\r\n1. manimlib/mobject/mobject.py\r\n> Added event handlers methods and \"listen_to_events\" config in Mobject Class.\r\n2. manimlib/scene/scene.py\r\n> Added calls to event handlers of Mobject whose \"listen_to_events\" property is True.\r\n3. manimlib/mobject/interactive.py\r\n> Added some interactive Mobjects in this file.\r\n> This file includes\r\n> * MotionMobject (This Mobject can be dragged to any location on-screen)\r\n> * Button (You can pass any Mobject associate with it an on_click event listener)\r\n> * ControlMobject (It extends ValueTracker Mobject and is base for other controls below)\r\n> * EnableDisableButton and Checkbox (It stores bool value and toggles it on press)\r\n> * LinearNumberSlider (It stores number value and can be changed using slider)\r\n> * ColorSliders (It is a Group of 4 Sliders for RGBA and one preview box)\r\n> * Textbox (It stores string value and can be changed by clicking on textbox once to activate it and typing)\r\n> * Control Panel (It can take Mobjects and put it in a drawer on the top left corner which can be dragged down as in the example)\r\n4. manimlib/utils/space_ops.py\r\n> Added one space util method used for LinearNumberSlider Mobject.\r\n5. manimlib/imports.py\r\n> Added manimlib/mobject/interactive.py import in global imports.\r\n6. example_scenes.py\r\n> Added the above example source code in this file.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 2172,
        "deletions": 4,
        "changed_files": 46,
        "created_at": "2021-01-26T15:40:44Z",
        "closed_at": "2021-01-28T19:53:04Z",
        "merged_at": "2021-01-28T19:53:04Z",
        "body": "I made a brief documentation for shaders. You can preview it here (before this pr is merged): https://tonycrane.github.io/manim/\r\n\r\nCurrently contains introductory tutorials, documentation for `constants.py` and `custom_default.yml` and something about development. I will fill in the rest of the documentation later (about this summer), but I think this document is enough to be used as an introductory guide.\r\n\r\nThis document is built using Sphinx, applies Furo theme, and is automatically deployed on GitHub Pages through GitHub Action.\r\n\r\nIf I made some mistakes, please point them out. If there is a grammatical error, please also bring it up (my English is not very good).\r\n@3b1b Please take a look at this documentation. I will tell you in private about how to deploy this document.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 79,
        "deletions": 40,
        "changed_files": 8,
        "created_at": "2021-01-16T03:23:10Z",
        "closed_at": "2021-01-18T03:22:12Z",
        "merged_at": "2021-01-18T03:22:12Z",
        "body": "Continued https://github.com/3b1b/manim/pull/1315#issuecomment-761285165\r\nAlthough `Text` can be colored properly in some cases, the position of non-display characters is not very good, and tabs are not processed. Because the #1035 of the master is not synchronized to the shaders. So I added them (https://github.com/3b1b/manim/commit/5f6b653803e3b138a2c9337c4a22dead375299c8) and made some changes (https://github.com/3b1b/manim/commit/3d118a5bb6d0dd55111dc8bc496db07d010f26d9) to fit the shaders branch.\r\nAnd for this part (\u2193), if modify `SVGMobject` as in #1035, it may cause some problems for SVG, so I only modified the generated svg file in `Text` and deleted the empty path.\r\nhttps://github.com/3b1b/manim/blob/5f6b653803e3b138a2c9337c4a22dead375299c8/manimlib/mobject/svg/text_mobject.py#L92-L97\r\nNow, even **tabs**, **newlines**, and different amounts of **whitespaces** will not affect the coloring:\r\n```python\r\ntext = Text(\r\n    \"\"\"Here is a tab ->\\t, and a newline ->\\nand even the number of whitespaces    doesn't influence coloring\"\"\",\r\n    t2c={\"tab\": BLUE, \"newline\": BLUE, \"number\": BLUE, \"coloring\": ORANGE}\r\n).set_width(FRAME_WIDTH - 1)\r\nself.add(text)\r\nindex = index_labels(text, 0.05)\r\nself.add(index)\r\n```\r\n![E88({N`~C0M9{ 0VZD8J3WH](https://user-images.githubusercontent.com/44120331/104795825-26377880-57ec-11eb-9958-2d8d9e6d1e8e.png)\r\n\r\nAnd one of the differences between `Text` and `TextMobject` is that the index of `Text` completely obeys the incoming string, that is, tabs are reserved (each occupies a position), and whitespaces (each occupies a position) are also reserved. I think this may be convenient for using `Text`.\r\n\r\n---\r\n\r\n- For this commit https://github.com/3b1b/manim/commit/f6b5edede29a972c2a1b08d035b37119a0a9d2c0, if don't modify it in this way, the computer will automatically select the Chinese input method when I (in China) focus on the window, resulting in the following annoying errors repeatedly. After the modification, only one sentence is prompted, which may be more friendly.\r\n```text\r\nTraceback (most recent call last):\r\n  File \"_ctypes/callbacks.c\", line 232, in 'calling callback function'\r\n  File \"...\\Anaconda3\\envs\\manim\\lib\\site-packages\\pyglet\\window\\win32\\__init__.py\", line 668, in f\r\n    result = event_handler(msg, wParam, lParam)\r\n  File \"...\\Anaconda3\\envs\\manim\\lib\\site-packages\\pyglet\\window\\win32\\__init__.py\", line 739, in _event_key\r\n    self.dispatch_event(ev, symbol, modifiers)\r\n  File \"...\\Anaconda3\\envs\\manim\\lib\\site-packages\\pyglet\\window\\__init__.py\", line 1327, in dispatch_event\r\n    if EventDispatcher.dispatch_event(self, *args) != False:\r\n  File \"...\\Anaconda3\\envs\\manim\\lib\\site-packages\\pyglet\\event.py\", line 408, in dispatch_event\r\n    if handler(*args):\r\n  File \"...\\manimlib\\window.py\", line 66, in on_key_press\r\n    self.scene.on_key_press(symbol, modifiers)\r\n  File \"...\\manimlib\\scene\\scene.py\", line 542, in on_key_press\r\n    if chr(symbol) == \"r\":\r\nOverflowError: Python int too large to convert to C long\r\n```\r\n\r\n- For this commit https://github.com/3b1b/manim/commit/b7bd40a6f6af9ec56237529ba954935c62b51d12, I added an option to change the position of the window in `custom_default.yml`. You can use the relative position on the screen (the first character means upper(U) / middle(O) / lower(D), the second character means left(L) / middle(O) / right(R)), and you can also use the pixels on the screen in the upper left corner of the window (separated by a comma) for positioning.\r\n\r\n---\r\nBtw, you have gave me the permission to directly push into the shaders branch, but in order not to interfere with your work, I did not do this, but opened a pull request and waited for you to read it and merge. \r\nSo now if I find a small problem in codes (like https://github.com/3b1b/manim/pull/1316/commits/cfa8577454c5272ccad3d7103e710e9d17ae1643), I can _directly commit and then push into the shaders branch_, or _open a pull request but merge directly_, or _open the pull request and wait for you to merge_. Which one do you prefer? @3b1b",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 56,
        "deletions": 73,
        "changed_files": 8,
        "created_at": "2021-01-15T13:37:48Z",
        "closed_at": "2021-01-15T19:13:34Z",
        "merged_at": "2021-01-15T19:13:34Z",
        "body": "Here are some bug fixes for the shaders branch.\r\n\r\n- The first commit https://github.com/3b1b/manim/commit/79b81363309d4b9eb1a125d6dac75ee5cd674bc1 : I'm trying to make the `Text` class work perfectly in shaders. But I found that if I remove some of the changes in #1030(or #1031), the `Text` will directly work fine. So I revert them.\r\n- The second commit https://github.com/3b1b/manim/commit/78848b971cd3f7db0831db58ad4e9c40d1cf61e4 : I checked the docs of `logging` in the official python documentation and also checked the source code. I found that `logging.log` cannot receive the `file` argument, so I deleted this line, otherwise the following error will appear:\r\n```python\r\n  File \".../manimlib/extract_scene.py\", line 82, in get_scenes_to_render\r\n    file=sys.stderr\r\n  File \".../Anaconda3/envs/manim/lib/logging/__init__.py\", line 2014, in log\r\n    root.log(level, msg, *args, **kwargs)\r\n  File \".../Anaconda3/envs/manim/lib/logging/__init__.py\", line 1449, in log\r\n    self._log(level, msg, args, **kwargs)\r\nTypeError: _log() got an unexpected keyword argument 'file'\r\n```\r\n- The fourth commit https://github.com/3b1b/manim/commit/f696ba4100d43e67a3ebd05c05b514086cf435b6 : I write a brief example for `Text` to introduce and test it.\r\n- The fifth commit https://github.com/3b1b/manim/pull/1315/commits/fa3cad18e0e4d55e727b09ff210a79befa612b19 : Added the missing `ipython` package mentioned in https://github.com/3b1b/manim/pull/1301#issuecomment-753643071, and updated the `environment.yml` for Anaconda.\r\n- The sixth commit https://github.com/3b1b/manim/pull/1315/commits/c6fcaa93bb9c4482815fd03b19de2a52951cf143 : Deleted the file `stream_starter.py`. Because it seems that stream related functions have been completely deleted, but this file remains.\r\n- The eighth commit https://github.com/3b1b/manim/pull/1315/commits/7c04edcced38eea1046b934aa853e8500c4b3af9 : Added `font_size` to `Text`, and synchronized to the same size effect as `TextMobject` :\r\n![VG))B17{8$14CRJGRMDD7`R](https://user-images.githubusercontent.com/44120331/104747306-526edd00-578b-11eb-9848-36b29483299e.png)\r\n\r\n\r\n---\r\n@3b1b please have a look at these changes.\r\nBy the way, there is also a bug that I can't fix it, I talked in detail in #1314",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 49,
        "deletions": 28,
        "changed_files": 1,
        "created_at": "2021-01-10T18:56:20Z",
        "closed_at": "2021-02-04T01:40:29Z",
        "merged_at": null,
        "body": "Thanks for contributing to manim!\r\n\r\n**Please ensure that your pull request works with the latest version of manim.**\r\nYou should also include:\r\n\r\n1. The motivation for making this change (or link the relevant issues)\r\n2. How you tested the new behavior (e.g. a minimal working example, before/after\r\n   screenshots, gifs, commands, etc.) This is rather informal at the moment, but\r\n   the goal is to show us how you know the pull request works as intended.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-01-06T20:22:40Z",
        "closed_at": "2021-02-03T20:34:56Z",
        "merged_at": "2021-02-03T20:34:56Z",
        "body": "\"Note meant to be displayed\" -> \"Not meant to be displayed\". Just a small typo fix!",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 161,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2021-01-05T16:14:45Z",
        "closed_at": "2021-08-10T02:06:39Z",
        "merged_at": null,
        "body": "Added support for SVG arcs command. This is done by approximating the elliptical arc command through bezier curves.\r\nSo far can only accept an absolute and not relative command.\r\n\r\nSVG support is important, especially for people that works with software like Inkscape or Illustrator, so I decided to make the effort to include this by using an existing library made in npm.\r\n\r\nI attached a simple scene of a flag made with this.\r\n\r\nhttps://user-images.githubusercontent.com/5047248/103669578-48f99f80-4f57-11eb-9096-cdc124ae88a9.mp4\r\n\r\n\r\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 41,
        "deletions": 1097,
        "changed_files": 44,
        "created_at": "2021-01-02T11:52:21Z",
        "closed_at": "2021-01-02T17:43:11Z",
        "merged_at": "2021-01-02T17:43:11Z",
        "body": "Here are some cleanups and bug fixes for the shaders branch\r\n\r\n- Deleted some unnecessary files and folders:\r\n   - The documents in `docs/` are for the master branch and are not currently being updated, so delete them in the shaders branch\r\n   - Travis related is mainly used to build documentation and publish python package, which are useless in shaders branch, delete\r\n   - The docker image is for the master branch, not for the shaders branch, so delete\r\n- Deleted the version of the package in `requirements.txt` for easy installation, and updated the `environment.yml` for anaconda\r\n- Fixed the `TypeError` caused by float number when determining the window position\r\n- Fixed the code that may cause `(xe)Latex error converting to dvi(xdv)`, same as #689 #1187\r\n- Fixed the bug in `extract_scene.py`, otherwise will cause the error of `TypeError: run() missing 1 required positional argument:'self'`after selecting the scene number\r\n- Updated `README.md`\r\n\r\n\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-12-18T15:27:59Z",
        "closed_at": "2021-02-03T20:46:07Z",
        "merged_at": null,
        "body": "Hi,\r\n\r\nAs seen in the source code, the argument 'axes' is never used. There is no point providing it, as the real useful argument 'axis' has been there. This can mislead the users.\r\n\r\nThis function is provided as an API to users, and it's not used in manimlib itself(I tested via Pycharm's Find usage option). So it's safe to remove it from the source code.\r\n\r\nPrevious user code that didn't use this argument can be compiled with manim correctly as before. Also, any previous user code that did use this parameter(should be really rare) will not be compiled to generate videos. And that makes sense, because it has nothing meaningful. Using argument 'axis' is the right solution.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-11-29T04:00:11Z",
        "closed_at": "2020-11-29T11:23:47Z",
        "merged_at": "2020-11-29T11:23:47Z",
        "body": "I accidentally found this \"word\", and I'm pretty sure there's no such word 'permananant'. I think @Aathish04 means the word 'permanent'.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 57,
        "deletions": 3,
        "changed_files": 4,
        "created_at": "2020-11-18T08:05:10Z",
        "closed_at": "2021-02-03T20:48:10Z",
        "merged_at": null,
        "body": "Thanks for contributing to manim!\r\n\r\n**Please ensure that your pull request works with the latest version of manim.**\r\nYou should also include:\r\n\r\n1. The motivation for making this change (or link the relevant issues)\r\n2. How you tested the new behavior (e.g. a minimal working example, before/after\r\nscreenshots, gifs, commands, etc.) This is rather informal at the moment, but\r\nthe goal is to show us how you know the pull request works as intended.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 63,
        "deletions": 63,
        "changed_files": 28,
        "created_at": "2020-11-12T06:36:12Z",
        "closed_at": "2021-02-04T20:07:51Z",
        "merged_at": null,
        "body": "## Motivation:\r\nThis pull request fixes some of the quality issues raised by [DeepSource](http://deepsource.io) on my fork of this repository.\r\nYou can take a quick glance at all the issues detected [here](https://deepsource.io/gh/srijan-deepsource/manim/).\r\n\r\n## Description of the changes\r\n- Remove unnecessary return statement\r\n- Remove duplicate dictionary key\r\n- Merge `isinstance` calls\r\n- Use literal syntax instead of function calls to create the data structure\r\n- Remove unnecessary comprehension\r\n- Remove unnecessary use of comprehension\r\n- Use identity check for comparison with True\r\n- Remove reimported module\r\n- Add .deepsource.toml\r\n\r\n\r\nI have not added/tweaked any test as the PR is not changing any code logic. \r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2020-11-09T15:04:28Z",
        "closed_at": "2020-11-14T02:53:26Z",
        "merged_at": "2020-11-14T02:53:26Z",
        "body": "This is the second fix to pr #1264. \r\n\r\nThe original travis-ci build environment is Ubuntu xenial, which is version 16.04 (see this information on travis-ci [document page](https://docs.travis-ci.com/user/reference/linux)), and the newest cairo version on it is 1.14, which caused problem with the newset pycairo 1.20.0. See the previous travis-ci [error message](https://travis-ci.org/github/3b1b/manim/jobs/737736332#L372).\r\n\r\nUbuntu bionic will not cause the problem, and redundant pycairo version can be removed.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-11-08T13:58:14Z",
        "closed_at": "2020-11-09T14:56:55Z",
        "merged_at": null,
        "body": "This is the second fix for pr [#1264 ](https://github.com/3b1b/manim/pull/1264).\r\n\r\nSome interpreter may cause a warning for pycairo not satisfied 1.19.1 (especially for old users). Now any installed version that is less than 1.20.0 is fine, and will not cause the ci  to fail (see more infomation in [#1264](https://github.com/3b1b/manim/pull/1264)).",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-11-04T10:47:17Z",
        "closed_at": "2020-11-08T05:49:36Z",
        "merged_at": "2020-11-08T05:49:36Z",
        "body": "pip will by default install the newest version of library. The newest pycairo(which manimlib needs) is now version [1.20.0](https://pypi.org/project/pycairo/#history) released on October 6th, 2020. But unfortunately pycairo 1.20.0 uses [PEP 517](https://www.python.org/dev/peps/pep-0517/) to build, which still has problems with virtualenv that travis-ci or other users rely on.\r\n\r\nSee the current travis-ci output [message](https://travis-ci.org/github/3b1b/manim/jobs/737736332#L377).\r\n\r\nThe second newest pycairo version on pip now is 1.19.1, and will not cause the ci to fail. In the future, new version of pycairo should always be tested to see if it's working, otherwise it's safer to specify a particular version of pycairo that works.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 26323,
        "deletions": 286612,
        "changed_files": 638,
        "created_at": "2020-10-30T20:36:00Z",
        "closed_at": "2020-11-01T04:31:42Z",
        "merged_at": null,
        "body": "\r\n![Screenshot_2020-10-31-02-34-09-10_2846feb41f9b5cb675f80f9baa9a118c](https://user-images.githubusercontent.com/67183704/97754434-b76a4d80-1b21-11eb-820c-16cd24920b88.jpg)\r\nThanks for contributing to manim!\r\n\r\n**Please ensure that your pull request works with the latest version of manim.**\r\nYou should also include:\r\n\r\n1. The motivation for making this change (or link the relevant issues)\r\n2. How you tested the new behavior (e.g. a minimal working example, before/after\r\nscreenshots, gifs, commands, etc.) This is rather informal at the moment, but\r\nthe goal is to show us how you know the pull request works as intended.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-10-20T12:55:37Z",
        "closed_at": "2020-10-21T14:42:20Z",
        "merged_at": "2020-10-21T14:42:20Z",
        "body": "Thanks for contributing to manim!\r\n\r\n**Please ensure that your pull request works with the latest version of manim.**\r\nYou should also include:\r\n\r\n1. The motivation for making this change (or link the relevant issues)\r\n2. How you tested the new behavior (e.g. a minimal working example, before/after\r\nscreenshots, gifs, commands, etc.) This is rather informal at the moment, but\r\nthe goal is to show us how you know the pull request works as intended.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-10-19T16:53:25Z",
        "closed_at": "2020-10-21T14:46:03Z",
        "merged_at": null,
        "body": "corrected grammatical errors. A command was not clear so modified it.\r\n\r\nThanks for contributing to manim!\r\n\r\n**Please ensure that your pull request works with the latest version of manim.**\r\nYou should also include:\r\n\r\n1. The motivation for making this change (or link the relevant issues)\r\n2. How you tested the new behavior (e.g. a minimal working example, before/after\r\nscreenshots, gifs, commands, etc.) This is rather informal at the moment, but\r\nthe goal is to show us how you know the pull request works as intended.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2020-10-12T16:46:26Z",
        "closed_at": "2020-12-09T08:25:34Z",
        "merged_at": null,
        "body": "Pycairo now has wheels published to PyPi for Windows. So users no need to the these. \r\nRef:\r\nhttps://github.com/pygobject/pycairo/pull/191\r\nhttps://github.com/ManimCommunity/manim/pull/517",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-10-07T14:59:42Z",
        "closed_at": "2020-10-10T02:45:52Z",
        "merged_at": "2020-10-10T02:45:52Z",
        "body": "I fix a small bug in the OpeningQuote scene. This scene has an attribute `highlighted_quote_terms` that is a dictionary. \r\nIn method `get_quote`, it was iterating only through the dictionary keys.\r\n\r\n1.In Python 3.x the way iterate through a dictionary has changed, hence it was incompatible with new Python versions.\r\n\r\n2. I tested with my videos.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-10-05T21:49:53Z",
        "closed_at": "2020-10-08T15:09:38Z",
        "merged_at": "2020-10-08T15:09:37Z",
        "body": "Thanks for contributing to manim!\r\n\r\n**Please ensure that your pull request works with the latest version of manim.**\r\nYou should also include:\r\n\r\n1. The motivation for making this change (or link the relevant issues)\r\n2. How you tested the new behavior (e.g. a minimal working example, before/after\r\nscreenshots, gifs, commands, etc.) This is rather informal at the moment, but\r\nthe goal is to show us how you know the pull request works as intended.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 66,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-10-01T18:45:35Z",
        "closed_at": "2021-02-04T20:17:18Z",
        "merged_at": null,
        "body": "Hi, \r\nIn my latest project i used axes labels which always face towards the camera and they also move\r\nwith the tips of the axes so I added a method to the SpecialThreeDScene class simply because my \r\nmethod \"get_fixed_in_frame_labels\" uses ThreeDScene class.\r\n\r\nHere is a video which proves my point : \r\n\r\n![ezgif com-gif-maker](https://user-images.githubusercontent.com/64778535/94850265-54af6480-0444-11eb-8394-eb3b7c4905d8.gif)\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-10-01T17:25:50Z",
        "closed_at": "2020-10-02T06:05:46Z",
        "merged_at": null,
        "body": "Thanks for contributing to manim!\r\n\r\n**Please ensure that your pull request works with the latest version of manim.**\r\nYou should also include:\r\n\r\n1. The motivation for making this change (or link the relevant issues)\r\n2. How you tested the new behavior (e.g. a minimal working example, before/after\r\nscreenshots, gifs, commands, etc.) This is rather informal at the moment, but\r\nthe goal is to show us how you know the pull request works as intended.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2020-09-29T08:25:44Z",
        "closed_at": "2020-10-08T06:47:55Z",
        "merged_at": null,
        "body": "\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b `os.system` \u65e0\u6cd5\u5b8c\u6210\u7279\u5b9a\u7684\u903b\u8f91\r\nIn some cases, `os.system` cannot complete the specified logic \r\n\r\n\u6bd4\u5982:  `os.system(\" \".join(commands))` \u5c31\u4e0d\u80fd\u6b63\u786e\u7684\u6267\u884c\r\ne.g `os.system(\" \".join(commands))` will not execute correctly\r\n\r\n\u6211\u4eec\u5c06\u65e0\u6cd5\u521b\u5efa `.xdv` , `.svg` \u6587\u4ef6\r\nWe will not create `.xdv` , `.svg` file\r\n\r\n\u4f7f\u7528 `subprocess.call(...)` \u66ff\u6362 `os.system(...)` \r\nReplace os.system(...) with subprocess.call(...)\r\n\r\n[replacing-os-system@Python3/library](https://docs.python.org/3/library/subprocess.html#replacing-os-system)\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-08-27T11:05:25Z",
        "closed_at": "2020-09-30T14:28:28Z",
        "merged_at": "2020-09-30T14:28:28Z",
        "body": "Fixed the following deprecation warning caused by numpy:\r\n`/manim/manimlib/scene/scene_file_writer.py:336: DeprecationWarning: tostring() is deprecated. Use tobytes() instead.`\r\nTested on: python 3.8.1 ; numpy 1.19.1",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-08-27T10:18:08Z",
        "closed_at": "2020-10-02T06:03:08Z",
        "merged_at": "2020-10-02T06:03:08Z",
        "body": "I have fixed a very simple typo and would like to commit it.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 119,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-08-27T10:11:19Z",
        "closed_at": "2021-02-04T20:38:04Z",
        "merged_at": null,
        "body": "**Please ensure that your pull request works with the latest version of manim.**\r\nChecked.\r\n\r\n1. The motivation for making this change (or link the relevant issues)\r\nAdding more 3d objects - a Cone, and a 3d arrow.\r\n\r\n2. How you tested the new behavior (e.g. a minimal working example, before/after\r\nscreenshots, gifs, commands, etc.) This is rather informal at the moment, but\r\nthe goal is to show us how you know the pull request works as intended.\r\nminimal working example:\r\n\r\n[cone_example.zip](https://github.com/3b1b/manim/files/5135704/cone_example.zip)\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 99,
        "deletions": 99,
        "changed_files": 51,
        "created_at": "2020-08-26T17:21:31Z",
        "closed_at": "2021-02-04T01:38:50Z",
        "merged_at": null,
        "body": "From a fresh Manim install, attempting to execute \r\n`python3 ./manim.py ./from_3b1b/active/diffyq/all_part1_scenes.py ` \r\nresults in an error because the first line of `all_part1_scenes.py` says `from active_projects.diffyq.part1.pendulum import *`\r\n\r\nThis doesn't work, since the \"active_projects\" directory doesn't exist in the Manim repo. Rather, this directory is named \"active\".\r\n\r\nSimply changing the script to use \"active\" instead fails - I'm not sure why this is, but going up another level to the from_3b1b directory fixes everything. I am now able to execute the diffyq files.\r\n\r\n\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-08-16T10:09:36Z",
        "closed_at": "2021-02-04T20:40:42Z",
        "merged_at": null,
        "body": "1. The motivation for making this change (or link the relevant issues)\r\n\r\ntrying to get help on `Scene.play` leads to a dead end, because the `handle_play_like_call` decorator fails to take care of its outcome's docstring (and other special attributes like `__name__` I would bet)\r\n\r\nthe good practice for writing such decorator is to take advantage of `functools.wraps`, this PR exhibits one example; let me know what you think and I could review the code more deeply to account for the other possible places where that change could come in handy\r\n\r\nthis way, decorated methods - typically `Scene.play` - have a decent docstring\r\nso first-time users can use `help()` on them\r\n\r\n\r\n2. How you tested the new behavior (e.g. a minimal working example, before/after\r\nscreenshots, gifs, commands, etc.) This is rather informal at the moment, but\r\nthe goal is to show us how you know the pull request works as intended.\r\n\r\nwell, I'm a first time user, and I've been using this brew of manim for my first steps, and have not met any unexpected result so far, as compared to what the tutorial shows\r\n\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2020-08-09T09:54:38Z",
        "closed_at": "2020-08-09T17:29:25Z",
        "merged_at": null,
        "body": "Changed the line__intersection\r\n\r\nEarlier, it used the array system of marking the points of lines which returns an error:-\r\n![image](https://user-images.githubusercontent.com/46346108/89729528-39336900-da54-11ea-8e01-3e6e9f96db14.png)\r\n\r\nNow, it works perfectly:-\r\n![image](https://user-images.githubusercontent.com/46346108/89729549-6b44cb00-da54-11ea-8e49-0257e56c18e7.png)\r\n\r\n\r\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 55,
        "deletions": 8,
        "changed_files": 2,
        "created_at": "2020-08-04T13:24:04Z",
        "closed_at": "2020-08-06T18:20:42Z",
        "merged_at": null,
        "body": "1. **Rendering at different frames per second becomes integral when working with video inside the animation itself, which is something I am doing with the creation of a new Object called VideoMobject**\r\n2. I have added a **type failsafe and a limit failsafe to the custom frame rate** that can be set, as can be seen below:\r\n```\r\ndef set_custom_fps(frame_rate):\r\n    # type filter\r\n    if type(frame_rate) != int:\r\n        raise Exception(f\"Invlaid value {frame_rate} for custom frame rate. Required value is of type int!\")\r\n\r\n    # value filter\r\n    if 0 < frame_rate <= 120:\r\n        CUSTOM_VIDEO_CONFIG[\"frame_rate\"] = frame_rate\r\n    else:\r\n        raise Exception(\"Custom FPS has to be 0 < integer <= 120!\")\r\n```\r\nFurthermore in the config.py file I have placed a failsafe if the parameter -x is added but the function set_custom_fps is not used in the file at all or is not used correctly, as can be seen below:\r\n\r\n```\r\nif args.custom_fps:\r\n        _**code not important to this point I am making **_\r\n\r\n        if manimlib.constants.CUSTOM_QUALITY_CAMERA_CONFIG[\"frame_rate\"] == None:\r\n            raise Exception(\"You need to set custom FPS using set_custom_fps(int-value) to use this parameter.\")\r\n\r\n```\r\n\r\n**_if the --custom_fps is passed without a --low_quality or another quality parameter then it will take PRODUCTION_QUALITY as default pixel (height x width). But if they are it will use the custom fps along with the height & width of the quality you mentioned._**\r\n\r\nNote:  The --low_quality or another quality parameter's framerate are ignored if you pass in the --custom_fps and correctly set a valid fps in the file using the set_custom_fps(0 < integer_value <= 120).\r\n\r\nTHIS FEATURE IS EXTREMELY IMPORTANT IF WE WANT THERE TO BE A VIDEOMOBJECT as not all videos have the same fps",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-08-02T10:34:09Z",
        "closed_at": "2020-10-15T13:32:32Z",
        "merged_at": null,
        "body": "Typo \"flat\" to \"flag\"\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 27271,
        "deletions": 4148,
        "changed_files": 180,
        "created_at": "2020-07-31T14:28:16Z",
        "closed_at": "2020-07-31T15:33:55Z",
        "merged_at": null,
        "body": "1. [Manim generates variable framerate video instead of the constant value in the CONFIG](https://github.com/3b1b/manim/issues/1000)\r\n\r\n2. [`mp4fpsmod`](https://github.com/nu774/mp4fpsmod) tool can fix this. Unzip the attachment to manim folder and place this code to line `502` of `scene_file_writer.py` right after `combine_process.wait()`.\r\n\r\nNote: this tool does not work if you have opened the video file in another program.\r\n```\r\nmp4fpsmod_file_path = os.path.join(\r\n    os.getcwd(),\r\n    'mp4fpsmod.exe' if os.name == 'nt' else 'mp4fpsmod'\r\n)\r\n\r\nfix_timestamps_process = subprocess.Popen([\r\n    mp4fpsmod_file_path,\r\n    '--fps', '0:' + str(self.scene.camera.frame_rate),\r\n    '--timescale', '15360',\r\n    movie_file_path, '--inplace'\r\n])\r\nfix_timestamps_process.wait()\r\n```\r\n\r\n[mp4fpsmod.zip](https://github.com/3b1b/manim/files/5007443/mp4fpsmod.zip)\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-07-28T15:13:00Z",
        "closed_at": "2020-09-30T12:54:47Z",
        "merged_at": "2020-09-30T12:54:47Z",
        "body": "This may solve some xelatex errors, like #1055 #1027 etc.\r\n\r\nIf `\\usepackage[UTF8]{ctex}` doesn\u2019t be placed at the top of `ctex_template.tex`, it may cause xelatex error even TexLive or MiKTeX is installed correctly.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 198,
        "deletions": 13,
        "changed_files": 8,
        "created_at": "2020-07-21T06:11:49Z",
        "closed_at": "2021-02-06T17:35:06Z",
        "merged_at": null,
        "body": "Add physics simulation support by add package 'pymunk'.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-07-17T05:18:20Z",
        "closed_at": "2021-02-04T01:37:29Z",
        "merged_at": "2021-02-04T01:37:29Z",
        "body": "corrected the linking word.\r\n\r\nThanks for contributing to manim!\r\n\r\n**Please ensure that your pull request works with the latest version of manim.**\r\nYou should also include:\r\n\r\n1. The motivation for making this change (or link the relevant issues)\r\n2. How you tested the new behavior (e.g. a minimal working example, before/after\r\nscreenshots, gifs, commands, etc.) This is rather informal at the moment, but\r\nthe goal is to show us how you know the pull request works as intended.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-07-15T01:22:03Z",
        "closed_at": "2021-02-07T19:21:35Z",
        "merged_at": null,
        "body": "Thanks for contributing to manim!\r\n\r\n**Please ensure that your pull request works with the latest version of manim.**\r\nYou should also include:\r\n\r\n1. The motivation for making this change (or link the relevant issues)\r\n2. How you tested the new behavior (e.g. a minimal working example, before/after\r\nscreenshots, gifs, commands, etc.) This is rather informal at the moment, but\r\nthe goal is to show us how you know the pull request works as intended.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2020-07-15T01:20:45Z",
        "closed_at": "2022-02-14T05:02:54Z",
        "merged_at": null,
        "body": "Fixing problems with the animation of the zeta transformation\r\n\r\nThanks for contributing to manim!\r\n\r\n**Please ensure that your pull request works with the latest version of manim.**\r\nYou should also include:\r\n\r\n1. The motivation for making this change (or link the relevant issues)\r\n2. How you tested the new behavior (e.g. a minimal working example, before/after\r\nscreenshots, gifs, commands, etc.) This is rather informal at the moment, but\r\nthe goal is to show us how you know the pull request works as intended.\r\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 44,
        "deletions": 18,
        "changed_files": 1,
        "created_at": "2020-07-15T01:17:47Z",
        "closed_at": "2021-02-04T01:35:53Z",
        "merged_at": null,
        "body": "Thanks for contributing to manim!\r\n\r\n**Please ensure that your pull request works with the latest version of manim.**\r\nYou should also include:\r\n\r\n1. The motivation for making this change (or link the relevant issues)\r\n2. How you tested the new behavior (e.g. a minimal working example, before/after\r\nscreenshots, gifs, commands, etc.) This is rather informal at the moment, but\r\nthe goal is to show us how you know the pull request works as intended.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2020-07-09T12:41:37Z",
        "closed_at": "2021-02-04T01:35:19Z",
        "merged_at": null,
        "body": "- removed unused `progressbar` dependency\r\n- updated `tqdm` (was an ancient 2 year old! https://tqdm.github.io/releases/#v4240-2018-07-26)\r\n- correct `ascii` fallback auto-detection, related https://github.com/tqdm/tqdm/issues/454",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-07-06T15:53:12Z",
        "closed_at": "2021-02-06T18:42:01Z",
        "merged_at": null,
        "body": "Thanks for contributing to manim!\r\n\r\n**Please ensure that your pull request works with the latest version of manim.**\r\nYou should also include:\r\n\r\n1. The motivation for making this change (or link the relevant issues)\r\n2. How you tested the new behavior (e.g. a minimal working example, before/after\r\nscreenshots, gifs, commands, etc.) This is rather informal at the moment, but\r\nthe goal is to show us how you know the pull request works as intended.\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-06-22T11:53:11Z",
        "closed_at": "2020-09-30T15:33:08Z",
        "merged_at": "2020-09-30T15:33:08Z",
        "body": "1. After installing manim with Anaconda using the environment.yml file and running any script including the example_scenes.py script, one receives an error of \"no module pygments installed\" (to that effect). This dependency is in the requirements.txt file but not in the environment.yml file, therefore I added it for easier environment installation and setup.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-06-19T22:17:02Z",
        "closed_at": "2021-02-10T06:35:48Z",
        "merged_at": null,
        "body": "This is so one can get submobjects of an SVGMobject by referring to them by their xml id.\r\n\r\nIn the same spirit of TexMobject:get_parts_by_tex, with this patch you can get a submobject by its id. You just type something like:\r\n`        left_eye = svg_mobject.get_mobject_by_id('left_eye')\r\n`\r\nI have attached a minimal working example. I just added an id for each eye on PiCreatures_plain.svg.\r\n\r\n```\r\nfrom manimlib.imports import *\r\n\r\nclass SVGById(Scene):\r\n    def construct(self):\r\n        svg_mobject = SVGMobject(file_name=\"PiCreatures_plain\", fill_color=RED)\r\n        self.add(svg_mobject)\r\n        self.wait()\r\n\r\n        left_eye = svg_mobject.get_mobject_by_id('left_eye')\r\n        right_eye = svg_mobject.get_mobject_by_id('right_eye')\r\n\r\n        self.play(\r\n            Swap(left_eye, right_eye),\r\n        )\r\n\r\n```\r\n\r\n![SVGById](https://user-images.githubusercontent.com/50269481/85182937-853a0c80-b260-11ea-9307-fddcc07cb859.gif)\r\n[minimal_working_example.zip](https://github.com/3b1b/manim/files/4806872/svg_id.zip)\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3468,
        "deletions": 0,
        "changed_files": 9,
        "created_at": "2020-06-18T16:55:22Z",
        "closed_at": "2021-07-18T03:23:33Z",
        "merged_at": null,
        "body": "Thanks for contributing to manim!\r\n\r\n**Please ensure that your pull request works with the latest version of manim.**\r\nYou should also include:\r\n\r\n1. The motivation for making this change (or link the relevant issues)\r\n2. How you tested the new behavior (e.g. a minimal working example, before/after\r\nscreenshots, gifs, commands, etc.) This is rather informal at the moment, but\r\nthe goal is to show us how you know the pull request works as intended.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 51,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2020-06-16T15:08:20Z",
        "closed_at": "2020-06-29T11:17:55Z",
        "merged_at": null,
        "body": "Wrote some changes in `README.md` for Cairo Installation in Windows.\r\nFixes #1129 #1050 #1049 #1053 #369 \r\nWell, more than that. If you can link more.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-06-16T04:30:15Z",
        "closed_at": "2021-02-10T06:31:27Z",
        "merged_at": null,
        "body": "added link in README.md to a tutorial made by Theorem of Beethoven\r\n\r\nrelated issue: Add another good tutorial resource to README #1137\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-06-14T18:55:06Z",
        "closed_at": "2021-02-04T01:32:51Z",
        "merged_at": null,
        "body": "https://stackoverflow.com/questions/27431390/typeerror-zip-object-is-not-subscriptable: In Python3 zip returns an iterable and thus cannot be sliced. It can be converted to a list, then sliced, however\r\n\r\nThanks for contributing to manim!\r\n\r\n**Please ensure that your pull request works with the latest version of manim.**\r\nYou should also include:\r\n\r\n1. The motivation for making this change (or link the relevant issues)\r\n2. How you tested the new behavior (e.g. a minimal working example, before/after\r\nscreenshots, gifs, commands, etc.) This is rather informal at the moment, but\r\nthe goal is to show us how you know the pull request works as intended.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2020-06-08T17:13:59Z",
        "closed_at": "2021-02-04T01:32:06Z",
        "merged_at": null,
        "body": "Fixing the syntax error and making the example renderable\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-06-04T14:37:46Z",
        "closed_at": "2021-02-10T06:34:07Z",
        "merged_at": null,
        "body": "1. The aim / objective is to actually have a GraphScene and corresponding graphs, but not displaying the axes beforehand.\r\n\r\nCurrent problem:\r\n\r\n    You cannot add a graph without self.setup_axes()\r\n    self.setup_axes() displays the axes by default.\r\n\r\nFor example, I want to first display some text, FadeOut the TextMobject and then FadeIn the axes, I cannot FadeIn(self.axes) unless first setting up the axes via self.setup_axes().\r\n\r\nHence this patch.\r\n\r\n2. Attached is a GIF using my patch.\r\n![hideaxes_trial](https://user-images.githubusercontent.com/42336020/83947833-18be1700-a837-11ea-9fa0-d118ad209a14.gif)\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2020-06-03T23:24:39Z",
        "closed_at": "2021-02-12T21:37:31Z",
        "merged_at": null,
        "body": "Fixes #1122.\r\n\r\nRationale for this patch can be found on Issue #1122.\r\n\r\nCalls to Mobject.move_to(), for example, end up in a call to self.get_points_defining_boundary(). However, if a VMobject contains a non-VMobject submobject, we gen an error indicating that submobject.get_anchors() is not implemented.\r\n\r\nThe method VMobject.get_points_defining_boundary() is a recursive method inherited from VMobject and reimplemented. Since get_anchors() is not implemented in Mobject, instead of calling submobject.get_anchors() for all sobmobjects, it should call get_anchors() just for self, and get_points_defining_boundary() for all submobjects.\r\n\r\nOne problem in this patch is that this implementation relies on:\r\n1. The fact that self is the first Mobject returned by Mobject.get_family().\r\n2. The fact that self is NOT in Mobject.get_family()[1:]",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-06-03T18:10:26Z",
        "closed_at": "2020-09-30T15:32:24Z",
        "merged_at": null,
        "body": "The line removed was probably accidentally left behind.\r\n\r\nThe line calls a function with no side-effects, but its return value is not used at all.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-05-31T17:56:57Z",
        "closed_at": "2020-09-30T15:30:49Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-05-31T16:45:23Z",
        "closed_at": "2021-02-04T01:31:28Z",
        "merged_at": "2021-02-04T01:31:27Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-05-28T18:22:16Z",
        "closed_at": "2020-09-30T15:27:29Z",
        "merged_at": "2020-09-30T15:27:29Z",
        "body": "I felt like using only white in BulletedList wasn't visually appealing, so the ability to change the color of the bullet seemed useful.\r\n```python\r\nl = BulletedList(\"Item 1\", \"Item 2\", \"Item 3\", dot_color=BLUE)\r\n```\r\nproduces\r\n<img width=\"366\" alt=\"image\" src=\"https://user-images.githubusercontent.com/31397379/83178468-65864d00-a0d5-11ea-8fc2-2cd665def137.png\">\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-05-28T08:30:58Z",
        "closed_at": "2021-02-04T01:29:42Z",
        "merged_at": null,
        "body": "Thanks for contributing to manim!\r\n\r\n**Please ensure that your pull request works with the latest version of manim.**\r\nYou should also include:\r\n\r\n1. The motivation for making this change (or link the relevant issues)\r\nThe import isn't needed.\r\n2. How you tested the new behavior (e.g. a minimal working example, before/after\r\nscreenshots, gifs, commands, etc.) This is rather informal at the moment, but\r\nthe goal is to show us how you know the pull request works as intended.\r\nThe code still runs without the import.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2020-05-26T17:52:16Z",
        "closed_at": "2020-06-03T17:54:53Z",
        "merged_at": null,
        "body": "In the present time, calls to Mobject.suspend_updating cannot be nested. I made nesting possible by substituting the boolean flag by a counter.\r\n\r\nI do not see any need to argue about the need/desire to suspend updating when performing some animation. But as I see, updating methods keep the Mobject satisfying some constraint. However, during the animation, probably the object might not satisfy those constraints, so updating should usually be suspended.\r\n\r\nBut if you do a block of a sequence of animations (even using the Succession animation class), updating is resumed as soon as the first animation finishes. IMO, suspension should be like:\r\n\r\n```\r\nmobject.suspend_updating()\r\n# Leave the orbit a bit.\r\nself.play(DoThis(mobject))\r\nself.wait()\r\n# Fly back to its orbit.\r\nself.play(DoThat(mobject))\r\nmobject.resume_updating()\r\n```\r\nHowever, DoThis calls mobject.resume_updating and causes the animation sequence to be disrupted before DoThat is played. Suspension does not work even if you do:\r\nself.play(Succession(DoThis(mobject), DoThat(mobject))).\r\n\r\nIdeally, Succession should call suspend_updating for every mobject involved. But this is not the object of this patch. :-)",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 38,
        "deletions": 15,
        "changed_files": 2,
        "created_at": "2020-05-24T16:28:54Z",
        "closed_at": "2021-02-04T01:28:12Z",
        "merged_at": null,
        "body": "**Reason for adding**\n1. To enable faster rendering of scenes on cpu's with a high amount of cores vs single core speed.\n2. Allow users to opt in using the new \"-j\" or \"--threads\" flag followed by the integer number of threads to use (note that -j is picked because -t is taken and the syntax of gcc is -j4 for 4 cores).\n\n**Working Example**\n1. My CPU does not benefit massively from it, but using 2 threads gave me a roughly 10-20% speed boost (measured using the time command).\n2. Too many cores slow down processing, base it off your cpu architecture.\n3. Threads can only work on seperate scenes, so enabling extra threads when processing one scene will do nothing.\n4. Makes use of the inbuilt threading library, so there is no need to add more dependencies.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 112,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2020-05-18T12:39:32Z",
        "closed_at": "2022-02-14T04:55:21Z",
        "merged_at": null,
        "body": "# Motivation\r\n\r\nCurrently,, `SVGMobject` doesn't support `<text>` tag in SVG format. The support of this tag is good for plotting diagrams, graphs, and other structures from SVG. I've faced it when trying to plot graphs rendered by [graphviz](https://www.graphviz.org/).\r\n\r\n# Implementation\r\n\r\nI've added text processing to SVGMobject using `Text` mobject with the following features:\r\n\r\n- scaling text using `text_scale` for better drawing (original font size is incorrectly small;\r\n- support of font-family translated into `font` parameter of `Text` mobject;\r\n- additional shifting up to the half of 'o' height to adjust centered placement.\r\n\r\n# Testing\r\n\r\nTested by drawing SVG file with a graph built by graphviz. The used file is available [here](https://yadi.sk/i/yvOsugyp8Cxx9g).\r\n\r\n```python\r\nfrom manimlib.imports import *\r\n\r\nclass SvgGraphScene(Scene):\r\n    def construct(self):\r\n        g = SVGMobject(file_name=r'd:\\g.svg', stroke_width=1.0, \r\n            fill_opacity=0.0, text_scale=2.0)\r\n        g.scale(3)\r\n        self.add(g)\r\n        self.wait(5)\r\n```\r\n\r\nThe result is shown below: left - before, right - after.\r\n\r\n![before_after](https://user-images.githubusercontent.com/11081197/82213389-b7ccae80-991c-11ea-9f8f-0d163bcffda7.png)\r\n\r\n# Additional notes\r\n\r\n- There are parameters in `<text>` tag which are not supported yet (further work): `text-anchor`, centering and rotation in `font-family` etc.\r\n- It will be good to extend the logic of `SVGMobject` to support different stroke/fill styles for different objects. E.g. to fill the text instead of stroking. Currently, it can be done using `submobjects`.\r\n- It seems that `SVGMobject` doesn't support `stroke-dasharray` in `<path>`. Could be useful. Again, currently, it seems to be available using `submobjects`.\r\n\r\n",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-05-15T19:43:31Z",
        "closed_at": "2021-02-04T01:27:04Z",
        "merged_at": null,
        "body": "Make sure people `cd` into the manim directory before installing from requirements.txt.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2020-05-15T16:47:31Z",
        "closed_at": "2021-02-10T06:44:16Z",
        "merged_at": null,
        "body": "When using ZoomedScene, incorrect stroke width behavior is observed. \r\n\r\nI found that a special multiplier `self.get_frame_width() / FRAME_WIDTH` was added, which is supposed to keep the right stroke width. In fact, it introduces an incorrect behavior. See the example below:\r\n\r\n![before](https://user-images.githubusercontent.com/5459767/82075120-6fc34700-96e4-11ea-9302-fa2707308d5b.png)\r\n![after](https://user-images.githubusercontent.com/5459767/82075128-7356ce00-96e4-11ea-8f52-31e361804af1.png)\r\n\r\nReproducible example:\r\n```python\r\nclass Test(ZoomedScene):\r\n    CONFIG = {\r\n        \"zoom_factor\": 0.4,\r\n        \"zoomed_display_height\": 5,\r\n        \"zoomed_display_width\": 5\r\n    }\r\n\r\n    def construct(self):\r\n        zoomed_camera = self.zoomed_camera\r\n        zoomed_display = self.zoomed_display\r\n\r\n        title = TextMobject(\"Before\").scale(2.5).to_corner(LEFT + UP)\r\n\r\n        zoomed_display.display_frame.set_color(BLUE)\r\n        zoomed_display.to_corner(RIGHT + UP, buff=0)\r\n\r\n        circle1 = Circle(stroke_width=6).scale(0.5)\r\n        circle2 = Circle(stroke_width=3, color=BLUE).scale(0.25)\r\n        rect = Rectangle(height=1.25, width=2.0, color=YELLOW, stroke_width=2).next_to(circle2, LEFT, buff=0)\r\n        dot = Dot(fill_color=BLUE, color=WHITE, stroke_width=4).scale(2).next_to(circle1, LEFT, buff=0)\r\n        zoomed_camera.frame.next_to(rect, LEFT)\r\n\r\n        self.add(circle1, circle2, rect, dot, title)\r\n        self.activate_zooming()\r\n        self.play(self.get_zoomed_display_pop_out_animation())\r\n\r\n        zoomed_camera.frame.generate_target().move_to(circle1)\r\n        self.play(\r\n            MoveToTarget(zoomed_camera.frame),\r\n            run_time=6\r\n        )\r\n        self.wait(2)\r\n```\r\n\r\nI understand that the author of this code fragment originally wanted to keep the thickness of the lines in ZoomedScene the same as in the original scene. First of all, I think that this is an unexpected behavior as it is normal to expect a thickening of lines when zooming objects. Secondly, the originally proposed hack does not work, because the width and height of the scenes in pixels are different, so simple multiplication by `self.get_frame_width() / FRAME_WIDTH` does not restore the original stroke width. If someone wants to keep this behavior, it should be made optional.",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2020-05-15T04:48:25Z",
        "closed_at": "2020-09-30T15:27:00Z",
        "merged_at": "2020-09-30T15:27:00Z",
        "body": "Allow Axes to change the color of coordinate labels\r\n\r\n__before__ , we can't change the color of the coordinates' color.\r\n```python\r\nclass Test(Scene):\r\n    CONFIG = {\r\n        \"camera_config\": {\r\n            \"background_color\": WHITE,\r\n        },\r\n    }\r\n    def construct(self):\r\n        plane = NumberPlane(axis_config={\"stroke_color\": BLACK})\r\n        plane.add_coordinates()\r\n        self.add(plane)\r\n```\r\n![image](https://user-images.githubusercontent.com/44120331/82012179-be9fbb00-96a9-11ea-9ded-99a505b18acb.png)\r\n```python\r\nplane.add_coordinates(number_config={\"color\": BLACK})\r\n```\r\n![image](https://user-images.githubusercontent.com/44120331/82012248-f149b380-96a9-11ea-95ed-adcc7edc4247.png)\r\n\r\n__after__, allow to use `number_config` to change the color:\r\n```python\r\nclass Test(Scene):\r\n    CONFIG = {\r\n        \"camera_config\": {\r\n            \"background_color\": WHITE,\r\n        },\r\n    }\r\n    def construct(self):\r\n        plane = NumberPlane(axis_config={\"stroke_color\": BLACK})\r\n        plane.add_coordinates(number_config={\"color\": BLACK})\r\n        self.add(plane)\r\n```\r\n![image](https://user-images.githubusercontent.com/44120331/82012343-3ff74d80-96aa-11ea-96da-d977abe74542.png)\r\n\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 419,
        "deletions": 314,
        "changed_files": 4,
        "created_at": "2020-05-14T21:08:02Z",
        "closed_at": "2020-07-12T09:56:19Z",
        "merged_at": null,
        "body": "Fixed https://github.com/3b1b/manim/issues/1067\r\nNOTE : SurroundingRectangle() only contains visible text.\r\n```Python\r\nclass te(Scene):\r\n    def construct(self):\r\n        text1 = Text(\" ab \", font=\"Consolas\", size=2)\r\n        rect1 = SurroundingRectangle(text1)\r\n        text1.chars[1].set_color(GREEN)\r\n        self.add(text1,rect1)\r\n```\r\nOutput\r\n![te](https://user-images.githubusercontent.com/30471072/81986815-27f5de80-9656-11ea-8eef-9e6a927e28c0.png)\r\n\r\n```python\r\nclass bug1(Scene):\r\n    def construct(self):\r\n        text1 = Text(\"  ab\\ncd\", font=\"Consolas\", size=2)\r\n        text2 = Text(\"ab\\ngh\", font=\"Consolas\", size=2)\r\n        rect1 = SurroundingRectangle(text1)\r\n        rect2 = SurroundingRectangle(text2)\r\n        self.play(Transform(remove_invisible_chars(text1), remove_invisible_chars(text2)), Transform(rect1, rect2))\r\n        self.wait()\r\n```\r\nOutput \r\n![bug1](https://user-images.githubusercontent.com/30471072/82108509-961ccd00-974c-11ea-9c3e-4c97abc4d2a8.gif)\r\n\r\n\r\nAdded new parameters `background_stroke_width` and `background_stroke_color`\r\n```python\r\nclass bug2andbug3(Scene):\r\n    def construct(self):\r\n        helloworldc = Code(\r\n            \"helloworldc.c\",\r\n            tab_width=4,\r\n            background_stroke_width=1,\r\n            background_stroke_color=WHITE,\r\n            insert_line_no=True,\r\n            style=Code.styles_list[4],\r\n            background=\"window\",\r\n            language=\"cpp\",\r\n        )\r\n        helloworldcpp = Code(\r\n            \"helloworldcpp.cpp\",\r\n            tab_width=4,\r\n            background_stroke_width=1,\r\n            background_stroke_color=WHITE,\r\n            insert_line_no=True,\r\n            style=Code.styles_list[15],\r\n            background=\"window\",\r\n            language=\"cpp\",\r\n        )\r\n        helloworldc.move_to(np.array([-3.6, 0, 0]))\r\n        helloworldcpp.move_to(np.array([3.1, 0, 0]))\r\n        self.add(helloworldc,helloworldcpp)\r\n```\r\nOutput\r\n![bug2andbug3](https://user-images.githubusercontent.com/30471072/81985513-fd0a8b00-9653-11ea-96a2-26cb7ae86a32.png)\r\n\r\nUpdated Paragraph() and added new methods `set_line_to_initial_position()` and `set_all_lines_to_initial_positions()`\r\n```python\r\nclass para(Scene):\r\n    def construct(self):\r\n        t = Paragraph('this is a awesome', 'paragraph', 'With \\nNewlines', '\\tWith Tabs', '  With Spaces',\r\n                      'With Alignments',\r\n                      'center', \"left\", \"right\")\r\n        t.set_line_alignment(\"center\", 7)\r\n        t.set_line_alignment(\"right\", 9)\r\n        t.shift(2 * RIGHT)\r\n        rect = SurroundingRectangle(t)\r\n        self.add(t, rect)\r\n        self.wait()\r\n        self.play(t.set_all_lines_alignments, \"right\")\r\n        self.play(t.set_line_to_initial_position, 4)\r\n        self.play(t.set_all_lines_to_initial_positions)\r\n        self.play(t.set_line_alignment, \"center\", 7)\r\n        self.play(t.set_line_alignment, \"right\", 9)\r\n        t.chars[0][5:7].set_color(GREEN)\r\n        t[1][0:4].set_color(YELLOW)\r\n        self.wait()\r\n```\r\nOutput\r\n![ezgif-3-3dc23c79c5fa](https://user-images.githubusercontent.com/30471072/81988502-3396d480-9659-11ea-8a7d-674665b1a888.gif)\r\n\r\n\r\n\r\n",
        "comments": 27
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-05-14T19:43:47Z",
        "closed_at": "2020-05-21T03:21:11Z",
        "merged_at": "2020-05-21T03:21:10Z",
        "body": "I know this is trivial, but I had to fix it.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 30,
        "deletions": 11,
        "changed_files": 1,
        "created_at": "2020-05-14T14:32:03Z",
        "closed_at": "2022-02-14T05:05:31Z",
        "merged_at": null,
        "body": "As mentioned in https://github.com/3b1b/manim/issues/994, attempting to initialise `StreamLines` with any values set in `\"start_points_generator_config\"` results in\r\n```\r\nTypeError: get_start_points() got an unexpected keyword argument 'delta_x'\r\n```\r\nA minimal example:\r\n```\r\nfrom manimlib.mobject.vector_field import StreamLines\r\n\r\nstream_line_config = {\r\n    \"start_points_generator_config\": {\r\n        \"delta_x\": 0.1\r\n    }\r\n}\r\nsl = StreamLines(lambda x: x, **stream_line_config)\r\n```\r\n\r\nThe error is due to the initialise method of `StreamLines` attempting to call `get_start_points` with keyword arguments:\r\nhttps://github.com/3b1b/manim/blob/ca0b7a6b06ff7787d1efab5ad3b28cfb88f67c3f/manimlib/mobject/vector_field.py#L228-L230\r\nHowever `get_start_points` does not accept any parameters:\r\nhttps://github.com/3b1b/manim/blob/ca0b7a6b06ff7787d1efab5ad3b28cfb88f67c3f/manimlib/mobject/vector_field.py#L265\r\n\r\n It is unclear if the configuration was handled differently in the past as `\"start_points_generator_config\"` has been used [in older code](https://github.com/3b1b/manim/blob/master/from_3b1b/old/div_curl.py#L1432-L1455), but no changes are evident in the git history.\r\n\r\nThis change provides `get_start_points` with parameters that default to the class config properties if no values are passed.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-05-13T16:20:45Z",
        "closed_at": "2020-09-30T15:21:57Z",
        "merged_at": "2020-09-30T15:21:57Z",
        "body": "A very simple fix for `mobject.number_line.get_number_line()`\r\n\r\nCloses https://github.com/3b1b/manim/issues/997\r\n\r\n> In `manimlib/mobject/number_line.py` the method `get_unit_size()` is defined thus\r\n> \r\n> ```python\r\n> def get_unit_size(self):\r\n>     return (self.x_max - self.x_min) / self.get_length()\r\n> ```\r\n> \r\n> However, the dividend should be flipped with the divisor:\r\n> \r\n> ```python\r\n> def get_unit_size(self):\r\n>     return self.get_length() / (self.x_max - self.x_min)\r\n> ```\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 157,
        "deletions": 17,
        "changed_files": 1,
        "created_at": "2020-05-13T03:55:09Z",
        "closed_at": "2020-05-14T06:13:16Z",
        "merged_at": null,
        "body": "A part of https://github.com/3b1b/manim/pull/1036\r\n## It solves the following problems\r\n1) Text() with tabs, indexes not works correctly https://github.com/3b1b/manim/issues/1060\r\n2) Text() don't shows spaces in front of the text and at the end of the text https://github.com/3b1b/manim/issues/1061\r\n\r\n```python\r\nclass Test4(Scene):\r\n    def construct(self):\r\n        t2 = Text(\" a\\ty  \").scale(3)\r\n        t2[3].set_color(GREEN)\r\n        r = SurroundingRectangle(t2)\r\n        self.add(t2,r)\r\n        self.wait()\r\n``` \r\nOutput\r\n![Test4](https://user-images.githubusercontent.com/30471072/81769468-4f846400-94fb-11ea-9a5c-65752c702fd9.png)\r\n\r\n\r\nCreated Paragraph()\r\n```python\r\nclass Test3(Scene):\r\n    def construct(self):\r\n        t = Paragraph('this is a awesome', 'paragraph', 'With \\nNewlines', '\\tWith Tabs', '  With Spaces', 'With Alignments',\r\n                 'center', \"left\", \"right\", line_spacing=0.1, alignment=\"left\", t2c={\"Tabs\": RED})\r\n        t.set_alignment(\"center\", 7)\r\n        t.set_alignment(\"left\", 8)\r\n        t.set_alignment(\"right\", 9)\r\n        #t.set_all_lines_alignment(\"center\")\r\n        t[0][5].set_color(GREEN)\r\n        t[0][6].set_color(GREEN)\r\n        t[1][0:4].set_color(YELLOW)\r\n        rect = SurroundingRectangle(t)\r\n        self.add(t,rect)\r\n        self.wait()\r\n```\r\nOutput \r\n![Test6](https://user-images.githubusercontent.com/30471072/81265334-8b817a00-9060-11ea-93a6-09f130f1447c.png)\r\n\r\n```python\r\nclass Test7(Scene):\r\n    def construct(self):\r\n        t = Paragraph('this is a awesome', 'paragraph', 'With \\nNewlines', '\\tWith Tabs', '  With Spaces',\r\n                  'With Alignments',\r\n                  'center', \"left\", \"right\", line_spacing=0.1, alignment=\"left\", t2c={\"Tabs\": RED})\r\n        #t.set_alignment(\"center\", 7)\r\n        self.add(t)\r\n        self.play(t.shift, RIGHT)\r\n        rect = SurroundingRectangle(t)\r\n        self.add(rect)\r\n        self.play(t.set_alignment, \"right\", 9)\r\n        self.play(t.set_all_lines_alignment, \"center\")\r\n        self.wait()\r\n```\r\nOutput \r\n![ezgif-1-ec983ee94268](https://user-images.githubusercontent.com/30471072/81756790-59499f80-94da-11ea-8883-ebb82d2e6913.gif)\r\n\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-05-12T20:18:16Z",
        "closed_at": "2020-05-14T05:13:57Z",
        "merged_at": "2020-05-14T05:13:57Z",
        "body": "Fixed \r\nhttps://github.com/3b1b/manim/issues/1051\r\nhttps://github.com/3b1b/manim/issues/1054  \r\nhttps://github.com/3b1b/manim/issues/1059\r\nhttps://github.com/3b1b/manim/issues/1065\r\n\r\nResource links \r\nhttps://stackoverflow.com/a/57132336 \r\nhttps://trac.ffmpeg.org/ticket/2303\r\nhttps://stackoverflow.com/a/56492893",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 159,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2020-05-12T19:31:36Z",
        "closed_at": "2020-05-13T03:50:16Z",
        "merged_at": null,
        "body": "A part of https://github.com/3b1b/manim/pull/1036\r\n\r\nCreated Texts() for paragraph.\r\n```python\r\nclass Test3(Scene):\r\n    def construct(self):\r\n        t = Texts('this is a awesome', 'paragraph', 'With \\nNewlines', '\\tWith Tabs', '  With Spaces', 'With Alignments',\r\n                 'center', \"left\", \"right\", line_spacing=0.1, alignment=\"left\", t2c={\"Tabs\": RED})\r\n        t.set_alignment(\"center\", 7)\r\n        t.set_alignment(\"left\", 8)\r\n        t.set_alignment(\"right\", 9)\r\n        #t.set_all_lines_alignment(\"center\")\r\n        t[0][5].set_color(GREEN)\r\n        t[0][6].set_color(GREEN)\r\n        t[1][0:4].set_color(YELLOW)\r\n        rect = SurroundingRectangle(t)\r\n        self.add(t,rect)\r\n        self.wait()\r\n```\r\nOutput \r\n![Test6](https://user-images.githubusercontent.com/30471072/81265334-8b817a00-9060-11ea-93a6-09f130f1447c.png)\r\n\r\n```python\r\nclass Test7(Scene):\r\n    def construct(self):\r\n        t = Texts('this is a awesome', 'paragraph', 'With \\nNewlines', '\\tWith Tabs', '  With Spaces',\r\n                  'With Alignments',\r\n                  'center', \"left\", \"right\", line_spacing=0.1, alignment=\"left\", t2c={\"Tabs\": RED})\r\n        #t.set_alignment(\"center\", 7)\r\n        self.add(t)\r\n        self.play(t.shift, RIGHT)\r\n        rect = SurroundingRectangle(t)\r\n        self.add(rect)\r\n        self.play(t.set_alignment, \"right\", 9)\r\n        self.play(t.set_all_lines_alignment, \"center\")\r\n        self.wait()\r\n```\r\nOutput \r\n![ezgif-1-ec983ee94268](https://user-images.githubusercontent.com/30471072/81756790-59499f80-94da-11ea-8883-ebb82d2e6913.gif)\r\n\r\nAdded a new parameter \"exact_spaces\" to Text()\r\n```python\r\nclass Test4(Scene):\r\n    def construct(self):\r\n        t1 = Text(\"a c\", exact_spaces=False).scale(13)\r\n        t2 = Text(\"a c\", exact_spaces=True).scale(13)\r\n        r1 = SurroundingRectangle(t1[1], stroke_width=8, buff=0, color=RED)\r\n        r2 = SurroundingRectangle(t2[1], stroke_width=8, buff=0, color=GREEN)\r\n        self.add(t1, r1, r2)\r\n        self.wait()\r\n``` \r\nOutput\r\n![Test4](https://user-images.githubusercontent.com/30471072/81736003-89317c80-94b3-11ea-869c-1e4e0ffa47af.png)",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 12,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2020-05-11T22:04:39Z",
        "closed_at": "2021-07-18T03:20:44Z",
        "merged_at": null,
        "body": "I have created a dashed stroke pattern.\r\nBy now, dashed patterns are made by splitting a curve into many small pieces.\r\nThis patch uses pycairos stroke configuration.\r\nDashedLine() should be patched, too.\r\n\r\nUsing it is very simple:\r\nself.play(\r\n    ShowCreation(Circle(radius=1.0, dash_pattern=DASHED)),\r\n    ShowCreation(Circle(radius=2.0, dash_pattern=[.4, 0.05, 0.1, 0.05])),\r\n)\r\n\r\nReference:\r\nhttps://www.cairographics.org/samples/dash/\r\n\r\n[dashed.py.txt](https://github.com/3b1b/manim/files/4612328/dashed.py.txt)\r\n![Screenshot 2020-05-11 18-59-41](https://user-images.githubusercontent.com/50269481/81616617-332cde00-93ba-11ea-8c04-563d214b0bb8.png)\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-05-10T13:01:19Z",
        "closed_at": "2020-09-30T15:21:06Z",
        "merged_at": "2020-09-30T15:21:06Z",
        "body": "this looks like stray code\r\nget_merged_array is computed recursively on line 701 and appended to the result\r\nthe value computed on line 704 is discarded",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-05-10T12:59:30Z",
        "closed_at": "2021-02-04T01:25:39Z",
        "merged_at": null,
        "body": "be consistent about the usage",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-05-10T10:19:54Z",
        "closed_at": "2021-02-03T20:16:08Z",
        "merged_at": null,
        "body": "Added a note.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2111,
        "deletions": 16,
        "changed_files": 9,
        "created_at": "2020-05-10T09:23:50Z",
        "closed_at": "2020-05-14T05:41:23Z",
        "merged_at": "2020-05-14T05:41:23Z",
        "body": "Manim is in dire need of documentation, as stated in the ReadMe. This is a step in providing full documentation for all of Manim's capabilities.\r\n\r\nDocStrings for all methods in Container, Scene, GraphScene, MovingCameraScene, SceneFileWriter, ThreeDScene, SpecialThreeDScene, ZoomedScene, VectorScene and LinearTransformationScene have been added in their respective files.\r\n\r\nImports for TextMobject and the Write animation have been removed from `scene.py`\r\n\r\nThe changes have been tested by running the example_scenes in `example_scenes.py` which has returned the exact same animations with no warnings or errors.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-05-10T04:47:59Z",
        "closed_at": "2020-09-30T15:19:44Z",
        "merged_at": null,
        "body": "The \"stretch_to_fit_depth\" function is calling \"rescale_to_fit\" with the wrong dimension. Just corrected that.\r\n\r\nThanks for contributing to manim!\r\n\r\n**Please ensure that your pull request works with the latest version of manim.**\r\nYou should also include:\r\n\r\n1. The motivation for making this change (or link the relevant issues)\r\n2. How you tested the new behavior (e.g. a minimal working example, before/after\r\nscreenshots, gifs, commands, etc.) This is rather informal at the moment, but\r\nthe goal is to show us how you know the pull request works as intended.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-05-10T04:43:27Z",
        "closed_at": "2020-09-30T15:19:26Z",
        "merged_at": "2020-09-30T15:19:26Z",
        "body": "The \"stretch_to_fit_depth\" function is calling \"rescale_to_fit\" with the wrong dimension. Just corrected that.\r\n\r\nThanks for contributing to manim!\r\n\r\n**Please ensure that your pull request works with the latest version of manim.**\r\nYou should also include:\r\n\r\n1. The motivation for making this change (or link the relevant issues)\r\n2. How you tested the new behavior (e.g. a minimal working example, before/after\r\nscreenshots, gifs, commands, etc.) This is rather informal at the moment, but\r\nthe goal is to show us how you know the pull request works as intended.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 573,
        "deletions": 17,
        "changed_files": 5,
        "created_at": "2020-05-07T03:54:53Z",
        "closed_at": "2020-05-14T05:19:09Z",
        "merged_at": "2020-05-14T05:19:09Z",
        "body": "## It solves the following problems\r\n1) display code with color highlighted\r\n2) manage to print single '{' or '}'  because of using Text() instead of TextMobject() from https://github.com/3b1b/manim/issues/941#issuecomment-621615699\r\n3) Solved Text( ) transform animation for \" \" space character from https://github.com/3b1b/manim/issues/1017\r\n4) Text() with tabs, indexes not works correctly https://github.com/3b1b/manim/issues/1060\r\n5) Text() don't shows spaces in front of the text and at the end of the text https://github.com/3b1b/manim/issues/1061\r\n\r\n\r\nyou can use it as follow.\r\nif you put file into \"assets/codes\" folder then you don't need to specify full file path, just name of file is enough otherwise specify full file path.\r\n`if generate_html_file==True` it create a html file with color  highlighted and save it to \"assets/codes/generated_html_files/\" \r\n```python\r\nfrom manimlib.imports import *\r\nclass codeExample(Scene):\r\n    def construct(self):\r\n        heading = TextMobject(\"\\\"Hello, World\\\" Program\", stroke_width=0).scale(1.3)\r\n        heading.to_edge(UP)\r\n        helloworldc = Code(\"helloworldc.c\",\r\n                           run_time=1,\r\n                           scale_factor=0.6,\r\n                           line_spacing=0.2,\r\n                           tab_width=4,\r\n                           insert_line_no=False,\r\n                           style=code_styles_list[4],\r\n                           background=\"rectangle\",\r\n                           language=code_languages_list[\"c\"],\r\n                           generate_html_file=True\r\n                           )\r\n        helloworldcpp = Code(\"helloworldcpp.cpp\",\r\n                             run_time=1,\r\n                             scale_factor=0.6,\r\n                             line_spacing=0.2,\r\n                             tab_width=4,\r\n                             margin=0.3,\r\n                             insert_line_no=True,\r\n                             line_no_from=8,\r\n                             line_no_buff=0.4,\r\n                             style=code_styles_list[9],\r\n                             background=\"window\",\r\n                             corner_radius=0.2,\r\n                             language=code_languages_list[\"cpp\"],\r\n                             generate_html_file=True\r\n                             )\r\n        helloworldc.move_to(np.array([-3.6, 0, 0]))\r\n        helloworldcpp.move_to(np.array([3.1, 0, 0]))\r\n        self.play(Write(heading), run_time=0.5)\r\n        self.play(Write(helloworldc), run_time=1.3)\r\n        self.draw_code_all_lines_at_a_time(helloworldcpp)\r\n        self.wait()\r\n\r\n    def draw_code_all_lines_at_a_time(self, Code):\r\n        self.play(Write(Code.background_mobject), run_time=0.3)\r\n        self.play(Write(Code.line_numbers), run_time=0.3)\r\n        self.play(*[Write(Code.code[i]) for i in range(Code.code.__len__())],\r\n                  run_time=Code.run_time)\r\n\r\n```\r\nOutput will be looks like \r\n![ezgif-6-3eb6f393e805](https://user-images.githubusercontent.com/30471072/81246743-fd909980-9035-11ea-91d2-753875a76d96.gif)\r\n\r\n\r\n```Python\r\n'''\r\n1) Code is VGroup() with three things\r\n    1.1) Code[0] is Code.background_mobject\r\n        which can be a \r\n            1.1.1) Rectangle() if background == \"rectangle\" \r\n            1.1.2) VGroup() of Rectangle() and Dot() for three buttons if background == \"window\" \r\n    1.2) Code[1] is Code.line_numbers Which is a Paragraph() object, this mean you can use \r\n                Code.line_numbers[0] or Code[1][0] to access first line number \r\n    1.3) Code[2] is Code.code\r\n        1.3.1) Which is a Paragraph() with color highlighted, this mean you can use \r\n            Code.code[1] or Code[2][1] \r\n                line number 1\r\n            Code.code[1][0] or Code.code[1][0] \r\n                first character of line number 1\r\n            Code.code[1][0:5] or Code.code[1][0:5] \r\n                first five characters of line number 1\r\n'''\r\n```\r\nCreated Paragraph()\r\n```python\r\nclass Test3(Scene):\r\n    def construct(self):\r\n        t = Paragraph('this is a awesome', 'paragraph', 'With \\nNewlines', '\\tWith Tabs', '  With Spaces', 'With Alignments',\r\n                 'center', \"left\", \"right\", line_spacing=0.1, alignment=\"left\", t2c={\"Tabs\": RED})\r\n        t.set_alignment(\"center\", 7)\r\n        t.set_alignment(\"left\", 8)\r\n        t.set_alignment(\"right\", 9)\r\n        #t.set_all_lines_alignment(\"center\")\r\n        t[0][5].set_color(GREEN)\r\n        t[0][6].set_color(GREEN)\r\n        t[1][0:4].set_color(YELLOW)\r\n        rect = SurroundingRectangle(t)\r\n        self.add(t,rect)\r\n        self.wait()\r\n```\r\nOutput \r\n![Test6](https://user-images.githubusercontent.com/30471072/81265334-8b817a00-9060-11ea-93a6-09f130f1447c.png)\r\n\r\n```python\r\nclass Test7(Scene):\r\n    def construct(self):\r\n        t = Paragraph('this is a awesome', 'paragraph', 'With \\nNewlines', '\\tWith Tabs', '  With Spaces',\r\n                  'With Alignments',\r\n                  'center', \"left\", \"right\", line_spacing=0.1, alignment=\"left\", t2c={\"Tabs\": RED})\r\n        #t.set_alignment(\"center\", 7)\r\n        self.add(t)\r\n        self.play(t.shift, RIGHT)\r\n        rect = SurroundingRectangle(t)\r\n        self.add(rect)\r\n        self.play(t.set_alignment, \"right\", 9)\r\n        self.play(t.set_all_lines_alignment, \"center\")\r\n        self.wait()\r\n```\r\nOutput \r\n![ezgif-1-ec983ee94268](https://user-images.githubusercontent.com/30471072/81756790-59499f80-94da-11ea-8883-ebb82d2e6913.gif)\r\n\r\nFixed https://github.com/3b1b/manim/issues/1060 and https://github.com/3b1b/manim/issues/1061\r\n```python\r\nclass Test4(Scene):\r\n    def construct(self):\r\n        t2 = Text(\" a\\ty  \").scale(3)\r\n        t2[3].set_color(GREEN)\r\n        r = SurroundingRectangle(t2)\r\n        self.add(t2,r)\r\n        self.wait()\r\n``` \r\nOutput\r\n![Test4](https://user-images.githubusercontent.com/30471072/81769468-4f846400-94fb-11ea-9a5c-65752c702fd9.png)\r\n\r\n\r\n",
        "comments": 19
    },
    {
        "merged": true,
        "additions": 27,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2020-05-06T09:37:15Z",
        "closed_at": "2020-05-07T08:16:39Z",
        "merged_at": "2020-05-07T08:16:39Z",
        "body": "Related issue #1017\r\n\r\nCode to reproduce the problem\r\n1. character `'\\n'`\r\n```py\r\nfrom manimlib.imports import *\r\n\r\nclass Test(Scene):\r\n    def construct(self):\r\n        t1 = Text('a\\nb').move_to(UP)\r\n        t2 = Text('123').move_to(DOWN)\r\n        self.play(Transform(t1, t2))\r\n        self.wait()\r\n```\r\n![enter](https://user-images.githubusercontent.com/47266984/81162376-ac45c300-8fbf-11ea-97bf-96c3a18eab17.gif)\r\n\r\n2. character `'\\t'`\r\n```py\r\nfrom manimlib.imports import *\r\n\r\nclass Test(Scene):\r\n    def construct(self):\r\n        t1 = Text('a\\tb').move_to(UP)\r\n        t2 = Text('123').move_to(DOWN)\r\n        self.play(Transform(t1, t2))\r\n        self.wait()\r\n```\r\n![tab](https://user-images.githubusercontent.com/47266984/81162609-0d6d9680-8fc0-11ea-81a2-348fe0d7a918.gif)\r\n\r\n3. character `' '`\r\n```py\r\nfrom manimlib.imports import *\r\n\r\nclass Test(Scene):\r\n    def construct(self):\r\n        t1 = Text('a b').move_to(UP)\r\n        t2 = Text('123').move_to(DOWN)\r\n        self.play(Transform(t1, t2))\r\n        self.wait()\r\n```\r\n![space](https://user-images.githubusercontent.com/47266984/81162581-00e93e00-8fc0-11ea-91bf-83b2431ad2f9.gif)\r\n",
        "comments": 17
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2020-05-05T15:03:29Z",
        "closed_at": "2020-11-03T15:54:18Z",
        "merged_at": null,
        "body": "Video consists of frames, and in most cases people don't have to know or realize it. manim library helps us handle it so we don't have to care about lower level details. However, there are a few cases where we want to make videos by continuously adding massive amount of mobjects on the screen(e.g. They are created by some mathematical laws, often in large quantities and in small sizes). Simply using 'self.add(...)' method would requires way more time to produce each frame because they are all added into 'mobjects' attribute. Not only does 'self.add(...)' take time, but also we repaint them on the screen each time we write an animation. We can help user avoid this by providing raw frame operation interface. Users don't have to waste their time on 'self.add(...)' call, and each time they add objects on the frame, manim library doesn't have to repaint them over and over again.\r\n\r\nI actually met this problem when I want to make a video about solitaire waterfall(classic animation on Windows solitaire game).  I was using 'self.add(...)' method and realized the problem: I spent several days and it couldn't finish the animation. So I wrote this 'raw_frame_scene.py', manipulating each frame. And it just took me a few minutes to finish the animation.\r\n\r\nI uploaded the video on 'https://www.bilibili.com/video/BV12a4y1x78t', and the source code is on 'https://github.com/manim-kindergarten/manim_sandbox/tree/master/videos/Solitaire'. It works perfectly. I really wish manim library could also have this special scene because it is really useful on particular cases.",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 27,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-05-05T07:21:28Z",
        "closed_at": "2020-05-07T08:21:43Z",
        "merged_at": "2020-05-07T08:21:43Z",
        "body": "Fixed Three bugs of Text Class.\r\nThis pull request is the same as #1030\r\nWithout this, Text Class wouldn't work in the 'shaders' branch.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-05-04T18:36:53Z",
        "closed_at": "2020-09-30T15:16:12Z",
        "merged_at": null,
        "body": "#Makes it more aesthetically pleasing and the inclusion the gradient coloring lets more people access the feature without having to trudge through the WIP docs.\r\n\r\n[Here's a before and after of the command ](https://imgur.com/a/3K5xcak)\r\n`python ./manim.py example_scenes.py WriteStuff -pl`\r\n\r\nThis is running on Python 3.7.0 and [a straight git clone of the Manim repository as of 5/4/2020](https://github.com/3b1b/manim/tree/af65c9d5d4ecbcffc5e569508053d56d1f7e86eb)\r\n\r\nCloses #806  ",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 577,
        "deletions": 90,
        "changed_files": 6,
        "created_at": "2020-05-01T05:24:55Z",
        "closed_at": "2020-05-07T03:51:23Z",
        "merged_at": null,
        "body": "you can use it as follow.\r\nif you put file into \"assets/codes\" folder then you don't need to specify full file path, just name of file is enough otherwise specify full file path.\r\n`if generate_html_file==True` it create a html file with color  highlighted and save it to \"assets/codes/generated_html_files/\" \r\n```python\r\nfrom manimlib.imports import *\r\nclass codeExample(Scene):\r\n    def construct(self):\r\n        heading = TextMobject(\"\\\"Hello, World\\\" Program\", stroke_width=0).scale(1.3)\r\n        heading.to_edge(UP)\r\n        helloworldc = Code(\"helloworldc.c\",\r\n                           run_time=1,\r\n                           scale_factor=0.6,\r\n                           line_spacing=0.2,\r\n                           tab_spacing=0.6,\r\n                           insert_line_no=False,\r\n                           style=code_styles_list[4],\r\n                           background=\"rectangle\",\r\n                           language=code_languages_list[\"c\"],\r\n                           generate_html_file=True\r\n                           )\r\n        helloworldcpp = Code(\"helloworldcpp.cpp\",\r\n                             run_time=1,\r\n                             scale_factor=0.6,\r\n                             line_spacing=0.2,\r\n                             tab_spacing=0.6,\r\n                             margin=0.3,\r\n                             insert_line_no=True,\r\n                             line_no_from=8,\r\n                             line_no_buff=0.4,\r\n                             style=code_styles_list[9],\r\n                             background=\"window\",\r\n                             corner_radius=0.2,\r\n                             language=code_languages_list[\"cpp\"],\r\n                             generate_html_file=True\r\n                             )\r\n        helloworldc.move_to(np.array([-3.6, 0, 0]))\r\n        helloworldcpp.move_to(np.array([3.1, 0, 0]))\r\n        self.play(Write(heading), run_time=0.5)\r\n        self.play(Write(helloworldc), run_time=1.3)\r\n        self.draw_code_all_lines_at_a_time(helloworldcpp)\r\n        self.wait()\r\n\r\n    def draw_code_all_lines_at_a_time(self, Code):\r\n        self.play(Write(Code.background_mobject), run_time=0.3)\r\n        self.play(Write(Code.line_numbers), run_time=0.3)\r\n        self.play(*[Write(Code.code[i]) for i in range(Code.code.__len__())],\r\n                  run_time=Code.run_time)\r\n\r\n```\r\nOutput will be looks like \r\n![ezgif-6-3eb6f393e805](https://user-images.githubusercontent.com/30471072/81246743-fd909980-9035-11ea-91d2-753875a76d96.gif)\r\n\r\n\r\n```Python\r\n'''\r\ncoordinate point is LEFT+UP corner\r\n\r\nCode is VGroup() with three things\r\nCode[0] is Code.background_mobject\r\n    which can be a \r\n        Rectangle() if background == \"rectangle\" \r\n        VGroup() of Rectangle() and Dot() for three buttons\r\nCode[1] is Code.line_numbers\r\n    Which is a VGroup() of Text() objects with line numbers as a text, this mean you can use \r\n        Code.line_numbers[0] or Code[1][0] to access first line number \r\nCode[2] is Code.code\r\n    Which is a VGroup() of lines with color highlighted, this mean you can use \r\n        Code.code[1] or Code[2][1] \r\n            line number 1\r\n        Code.code[1][0] or Code.code[1][0] \r\n            first character of line number 1\r\n        Code.code[1][0:5] or Code.code[1][0:5] \r\n            first five characters of line number 1\r\n\r\n'''\r\n```\r\nUpdated text_mobject() to use Text() as paragraph.\r\n```python\r\nclass Test3(Scene):\r\n    def construct(self):\r\n        t = Text('this is a awesome', 'paragraph', 'With \\nNewlines', '\\tWith Tabs', '  With Spaces', 'With Alignments',\r\n                 'center', \"left\", \"right\", line_spacing=0.1, alignment=\"left\", t2c={\"Tabs\": RED})\r\n        t.set_alignment(\"center\", 7)\r\n        t.set_alignment(\"left\", 8)\r\n        t.set_alignment(\"right\", 9)\r\n        #t.set_all_lines_alignment(\"center\")\r\n        t[0][0].set_color(GREEN)\r\n        t[1][0:4].set_color(YELLOW)\r\n        self.add(t)\r\n        self.wait()\r\n```\r\nOutput \r\n![Test6](https://user-images.githubusercontent.com/30471072/81251440-e6a37480-9040-11ea-94d0-953037e64b28.png)\r\n\r\n\r\n## It solves the following problems\r\n1) display code with color highlighted\r\n2) manage to print single '{' or '}'  because of using Text() instead of TextMobject() from https://github.com/3b1b/manim/issues/941#issuecomment-621615699\r\n3) Solved Text( ) transform animation for \" \" space character from https://github.com/3b1b/manim/issues/1017\r\n\r\n\r\n",
        "comments": 39
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2020-04-29T19:32:41Z",
        "closed_at": "2020-05-04T09:50:44Z",
        "merged_at": null,
        "body": "\r\n# motivation\r\nwhen `-i` is used with `-p`, the manim script ignores the gif file and opens `.mp4` with the same name\r\nthis pr fixes the bug\r\n\r\n# test\r\n[video](https://www.youtube.com/watch?v=K-OSIek7xkY)\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 277,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2020-04-29T19:16:24Z",
        "closed_at": "2020-05-01T05:09:19Z",
        "merged_at": null,
        "body": "\r\nyou can use it as follow.\r\nformat code from https://codebeautify.org/cpp-formatter-beautifier with select intent = 2 means tab spacing = 2\r\nsave html file from https://tohtml.com/cpp/ select style = 'black'\r\n```python\r\nfrom manimlib.mobject.code_mobject import *\r\ncode = CodeMobject(\"Helloword.html\",\r\n                           coordinates=[-5,3],\r\n                           run_time=3,\r\n                           scale_factor=0.3,\r\n                           line_spacing=0.2,\r\n                           tab_spacing=0.6,\r\n                           font='Monospac821 BT')\r\n        #self.draw_code_all_lines_at_a_time(code)\r\n        code.scale(1)\r\n        self.play(Write(code),run_time=1)\r\n\r\n    def draw_code_all_lines_at_a_time(self, code):\r\n        self.play(*[Write(code[i]) for i in range(code.__len__())],run_time=code.run_time)\r\n```\r\ncoordinate point is LEFT+UP corner. \r\n'code' is a 2d array of characters.\r\nfor example to access first 5 characters from line 2 use `code[2][0:5]`\r\n```python\r\ncode[2][0:5].set_color(RED)\r\n```\r\n\r\nOutput will be looks like \r\n![code](https://user-images.githubusercontent.com/30471072/80675503-3d093400-8ad2-11ea-8445-1bda76339a39.png)\r\n\r\n* It solves the following problems\r\n1) display code with color highlighted\r\n2) manage to print single LaTeX character '{' or '}' because of using Text() instead TextMobject() from https://github.com/3b1b/manim/issues/941#issuecomment-621615699\r\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-04-26T11:20:03Z",
        "closed_at": "2020-06-17T12:04:08Z",
        "merged_at": null,
        "body": "The function rotate_to_match_vector can be useful when making 3D scenes.\r\nCan be used e.g. like this:\r\n```py\r\nclass Test(ThreeDScene):\r\n    def construct(self):\r\n        self.set_camera_orientation(phi=45 * DEGREES)\r\n        self.begin_ambient_camera_rotation(2)\r\n        rect=Rectangle(width= 3,height=3, fill_color= ORANGE, fill_opacity=0.4, stroke_color = BLACK)\r\n        self.add(rect)\r\n        dot_temp = Dot(point=[0,1,3])\r\n        line_to_dot = Line(ORIGIN, dot_temp)\r\n        unit_vector = line_to_dot.get_unit_vector()\r\n        dot = Dot(point=dot_temp.get_center(), radius= 1).set_color(GREEN)\r\n        dot.rotate_to_match_vector(unit_vector)\r\n        self.add(line_to_dot)\r\n        self.add(dot)\r\n        self.wait(5)\r\n```\r\n![output](https://user-images.githubusercontent.com/44469195/80305943-6ec38780-87c0-11ea-8248-3912618839d5.gif)\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-04-20T05:20:04Z",
        "closed_at": "2021-02-04T01:24:23Z",
        "merged_at": null,
        "body": "`SceneFromVideo` apparently doesn't work and also adds the `opencv` dependency unnecessarily. This PR aims to exclude this class from `manimlib.imports` and make the opencv denedency optional.\r\n\r\nThanks for contributing to manim!\r\n\r\n**Please ensure that your pull request works with the latest version of manim.**\r\nYou should also include:\r\n\r\n1. The motivation for making this change (or link the relevant issues)\r\n2. How you tested the new behavior (e.g. a minimal working example, before/after\r\nscreenshots, gifs, commands, etc.) This is rather informal at the moment, but\r\nthe goal is to show us how you know the pull request works as intended.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2020-04-13T23:25:44Z",
        "closed_at": "2020-09-10T22:56:23Z",
        "merged_at": null,
        "body": "> The motivation for making this change (or link the relevant issues)\r\n\r\nI use Anaconda on Windows, and I just tried to install manim, leaving open the possibility of hacking the source. The Anaconda installation instructions seemed a little out of date (maybe `environment.yml` has been updated since they were written?) so I thought I'd update them according to the procedure I needed to follow. I'll explain each change in a self-review.\r\n\r\n> How you tested the new behavior (e.g. a minimal working example, before/after\r\nscreenshots, gifs, commands, etc.) \r\n\r\nOnly by installing manim on my computer and confirming that the example runs.\r\n\r\nFeel free to close if the instructions are fine as they are. I won't be hurt : ) \r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-04-12T20:09:47Z",
        "closed_at": "2020-09-30T15:13:16Z",
        "merged_at": "2020-09-30T15:13:16Z",
        "body": "<!--\r\n\r\nThanks for contributing to manim!\r\n\r\n**Please ensure that your pull request works with the latest version of manim.**\r\nYou should also include:\r\n\r\n1. The motivation for making this change (or link the relevant issues)\r\n2. How you tested the new behavior (e.g. a minimal working example, before/after\r\nscreenshots, gifs, commands, etc.) This is rather informal at the moment, but\r\nthe goal is to show us how you know the pull request works as intended.\r\n\r\n-->",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 137,
        "deletions": 15,
        "changed_files": 3,
        "created_at": "2020-04-12T08:28:02Z",
        "closed_at": "2020-04-25T04:04:09Z",
        "merged_at": "2020-04-25T04:04:09Z",
        "body": "tl;dr: this is a significant performance improvement for many scenes. 1.7x - 2.6x improvement in animation it/s.\r\n\r\nThis is a small change to some of the hotest paths in rendering objects. The biggest win comes from not using np.allclose() to check if two points are close enough. In general, NumPy is awesome at operating on large arrays, but overkill for very tiny questions like this. Created a small function to determine if two points are close using the same algorithm, and limited it to 2D points since that's all we need in set_cairo_context_path().\r\n\r\nA couple of other minor tweaks to reduce or eliminate other uses of NumPy in this path.\r\n\r\nIn general, it is better to avoid wrapping lists in np.array when a real NumPy array isn't actually needed.\r\n\r\nAdded a new file for performance test scenes, with a single scene from the end of a video I've been working on.\r\n\r\nData:\r\n\r\nMacBook Pro (16-inch, 2019)\r\nmacOS Catalina 10.15.4\r\n2.4 GHz 8-Core Intel Core i9\r\n64 GB 2667 MHz DDR4\r\nPython 3.7.3 (default, Mar  6 2020, 22:34:30)\r\n\r\nProfiler: yappi under Pycharm.\r\n\r\nUsing the scene Perf1 from the included perf_scenes.py, averaged over 5 runs and rendered with:\r\nmanim.py perf_scenes.py Perf1 -pl --leave_progress_bars\r\n\r\nBefore:\r\nAnimation 0: FadeInTextMobject, etc.:               8.93it/s\r\nAnimation 1: ShowCreationParametricFunction, etc.: 84.66it/s\r\n\r\nProfiler shows 48.5% of the run spent under Camera.set_cairo_context_path()\r\n\r\nAfter\r\nAnimation 0: FadeInTextMobject, etc.:               23.45it/s  -- 2.63x improvement\r\nAnimation 1: ShowCreationParametricFunction, etc.: 149.62it/s  -- 1.77x improvement\r\n\r\nProfiler shows 19.9% of the run spent under Camera.set_cairo_context_path()\r\n\r\nLess improvement with production-quality renders, and percent improvement varies with scene of course. This appears to be a good win for every scene I'm working on though. I hope it will be for others, too.\r\n\r\nNB: there are more perf improvements to be had, of course, but this is the best one I currently have.\r\n\r\nThanks for contributing to manim!\r\n\r\n**Please ensure that your pull request works with the latest version of manim.**\r\nYou should also include:\r\n\r\n1. The motivation for making this change (or link the relevant issues)\r\n2. How you tested the new behavior (e.g. a minimal working example, before/after\r\nscreenshots, gifs, commands, etc.) This is rather informal at the moment, but\r\nthe goal is to show us how you know the pull request works as intended.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 187,
        "deletions": 26,
        "changed_files": 1,
        "created_at": "2020-04-06T03:46:03Z",
        "closed_at": "2021-02-03T20:21:07Z",
        "merged_at": null,
        "body": "Hi, I loved your Youtube video and thank you for your code. I updated the code to include Hospitalizations as well as Deceased.  This way you can see how scary a virus truly it. The common cold could have lots of infections, but no hospitalizations or deceased.  This way you can apply percentages of infected get hospitalized, and percentage of hospitalized pass away. With this you could add a \"IF hospitals are over crowded death rate increase\" condition (not added yet).\r\n\r\nI also added an \"at risk\" attribute to model the percentage of population that are at higher risk to get hospitalized.\r\n\r\nAnd lastly I added a healthy exposure simulation, where people not at risk can purposely expose themselves (think chicken pox parties) and then quarantine. You would be surprised.\r\n\r\nI played with the models to increase infections time to 14 days, as well as increase time to symptomatic to 4 days, this would be more realistic  to Covid.\r\n\r\nAnd lastly, I have one bug fix. Your last checking broke the multi city models.\r\n\r\nThanks for contributing to manim!\r\n\r\n**Please ensure that your pull request works with the latest version of manim.**\r\nYou should also include:\r\n\r\n1. The motivation for making this change (or link the relevant issues)\r\n2. How you tested the new behavior (e.g. a minimal working example, before/after\r\nscreenshots, gifs, commands, etc.) This is rather informal at the moment, but\r\nthe goal is to show us how you know the pull request works as intended.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2020-04-01T05:45:43Z",
        "closed_at": "2020-04-21T07:41:34Z",
        "merged_at": null,
        "body": "To fix the bug that causes `Type Error: run() missing 1 required positional argument: 'self'`\r\n\r\nThanks for contributing to manim!\r\n\r\n**Please ensure that your pull request works with the latest version of manim.**\r\nYou should also include:\r\n\r\n1. The motivation for making this change (or link the relevant issues)\r\n2. How you tested the new behavior (e.g. a minimal working example, before/after\r\nscreenshots, gifs, commands, etc.) This is rather informal at the moment, but\r\nthe goal is to show us how you know the pull request works as intended.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 65,
        "deletions": 0,
        "changed_files": 7,
        "created_at": "2020-03-30T19:23:19Z",
        "closed_at": "2021-02-04T01:23:13Z",
        "merged_at": null,
        "body": "Create some missing ressources for generation the all the scenes of \"from_3b1b/old/spirals\" \r\n\r\nThis can be used as a tutorials base :)",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2020-03-30T18:26:53Z",
        "closed_at": "2020-04-16T05:17:08Z",
        "merged_at": "2020-04-16T05:17:08Z",
        "body": "Some GLSL compilers are more sensitive to types than others. With this fix, my Intel HD Graphics 5500 (Broadwell GT2) gives no error on this script anymore.\r\n\r\nThanks for contributing to manim!\r\n\r\n**Please ensure that your pull request works with the latest version of manim.**\r\nYou should also include:\r\n\r\n1. The motivation for making this change (or link the relevant issues)\r\n2. How you tested the new behavior (e.g. a minimal working example, before/after\r\nscreenshots, gifs, commands, etc.) This is rather informal at the moment, but\r\nthe goal is to show us how you know the pull request works as intended.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1089,
        "deletions": 4,
        "changed_files": 28,
        "created_at": "2020-03-30T18:24:26Z",
        "closed_at": "2021-02-04T01:22:25Z",
        "merged_at": null,
        "body": "I added some examples and explanations about the content of the file geometry.py and animation.\r\nI tried to be exhaustive about the files I have inspected to write these modifications.\r\nI hosted this branch on readthedocs with links [animation](https://azarzadavila-manim.readthedocs.io/en/latest/animation.html), [geometry](https://azarzadavila-manim.readthedocs.io/en/latest/geometry.html).",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 96,
        "deletions": 15,
        "changed_files": 1,
        "created_at": "2020-03-29T20:55:00Z",
        "closed_at": "2021-02-03T20:19:08Z",
        "merged_at": null,
        "body": "Added a \"Death\" state to the SIR model, that depends on a recovery/death probability.  I have also modelled a dependency on healthcare capacity. I would appreciate permission to put a video together describing the changes made and to publish it as a supplement to your excellent SIR model video.\r\n\r\nI havent yet tested it on all the scenes, but have added it to a few key scenes. \r\n\r\nThanks for contributing to manim!\r\n\r\n**Please ensure that your pull request works with the latest version of manim.**\r\nYou should also include:\r\n\r\n1. The motivation for making this change (or link the relevant issues)\r\n2. How you tested the new behavior (e.g. a minimal working example, before/after\r\nscreenshots, gifs, commands, etc.) This is rather informal at the moment, but\r\nthe goal is to show us how you know the pull request works as intended.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2020-03-28T21:15:23Z",
        "closed_at": "2021-07-18T03:19:23Z",
        "merged_at": "2021-07-18T03:19:23Z",
        "body": "Hi,\r\nThis is my first attempt at a pull request for manim.\r\n\r\nIt fixes some runtime errors when generating counting.py (no issue found on the subject).\r\n\r\n```\r\n    for point in self.get_template_configuration(place)\r\nTypeError: get_template_configuration() takes 1 positional argument but 2 were given\r\n\r\n    it.cycle(new_template)\r\nNameError: name 'it' is not defined\r\n```\r\n\r\nThese errors do not appear anymore after fix.\r\n[![Build Status](https://travis-ci.org/Lalourche/manim.svg?branch=fix-counting)](https://travis-ci.org/Lalourche/manim)\r\n\r\nCheers\r\nLalourche",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2020-03-28T12:33:35Z",
        "closed_at": "2020-04-17T09:45:35Z",
        "merged_at": null,
        "body": "```\r\nfragment_shader\r\n===============\r\n0:179(24): error: `return' with wrong type int, in function `sdf' returning float\r\n```\r\n\r\nThanks for contributing to manim!\r\n\r\n**Please ensure that your pull request works with the latest version of manim.**\r\nYou should also include:\r\n\r\n1. The motivation for making this change (or link the relevant issues)\r\n2. How you tested the new behavior (e.g. a minimal working example, before/after\r\nscreenshots, gifs, commands, etc.) This is rather informal at the moment, but\r\nthe goal is to show us how you know the pull request works as intended.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2020-03-27T07:21:12Z",
        "closed_at": "2020-09-30T15:07:25Z",
        "merged_at": null,
        "body": "Removed pycairo section on Directly (Windows), as its included in requirements.txt\r\nRemoved changing pycairo version number in the same section, version number included in requirements.txt is >= 1.18.1",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 18,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-03-26T11:17:33Z",
        "closed_at": "2020-07-18T16:25:13Z",
        "merged_at": null,
        "body": "Many people face problems while installing manim. This is partly due to the fact that is isn't well documented. I myself had come across so many problems setting up manim. \r\n\r\nSo I have added a .ova file which will help to install manim in a virtual Ubuntu os on the host os. All the requirements and dependencies are pre-installed and the user can directly start making beautiful animations.\r\n\r\nCredits: This .ova file was made by [Purusharth Saxena](https://github.com/purusharths)",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-03-17T18:08:58Z",
        "closed_at": "2021-02-10T06:41:42Z",
        "merged_at": null,
        "body": "Thanks for contributing to manim!\r\n\r\n**Please ensure that your pull request works with the latest version of manim.**\r\nYou should also include:\r\n\r\n1. The motivation for making this change (or link the relevant issues)\r\n\r\nI changed the color of the GraphScene axis but could not change the color of the tick labels to match.  This is a small change to graph_scene.py to provide the correct information to NumberLine.\r\n\r\n2. How you tested the new behavior (e.g. a minimal working example, before/after\r\nscreenshots, gifs, commands, etc.) This is rather informal at the moment, but\r\nthe goal is to show us how you know the pull request works as intended.\r\n\r\nBefore and after screenshots:\r\n<img width=\"628\" alt=\"before\" src=\"https://user-images.githubusercontent.com/1450174/76887507-c59c7f80-6858-11ea-9009-a98f6313bd6e.png\">\r\n<img width=\"697\" alt=\"after\" src=\"https://user-images.githubusercontent.com/1450174/76887510-c6cdac80-6858-11ea-8cdd-b183ef14dabd.png\">\r\n\r\n\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-03-15T21:31:09Z",
        "closed_at": "2021-02-10T06:40:53Z",
        "merged_at": null,
        "body": "This remove the decimal place by default and updates the label positions",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-03-13T23:28:11Z",
        "closed_at": "2021-02-03T20:20:32Z",
        "merged_at": null,
        "body": "updated graph scale factor @ 10:29\r\n\r\njust perfect\r\n\r\nhad lots of fun\r\n\r\ncouldn't test yet!\r\n\r\nThanks for contributing to manim!\r\n\r\n**Please ensure that your pull request works with the latest version of manim.**\r\nYou should also include:\r\n\r\n1. The motivation for making this change (or link the relevant issues)\r\n2. How you tested the new behavior (e.g. a minimal working example, before/after\r\nscreenshots, gifs, commands, etc.) This is rather informal at the moment, but\r\nthe goal is to show us how you know the pull request works as intended.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 328,
        "deletions": 19,
        "changed_files": 2,
        "created_at": "2020-03-12T03:02:42Z",
        "closed_at": "2021-07-18T03:17:39Z",
        "merged_at": null,
        "body": "This is a merging of two pull requests to add better discontinuity detecting functionality and implicit function graphing capabilities in requests #832 and #839. I don't think it would serve much to repeat the rationale and testing again in another PR, so the relevant information is in the separate pull requests. If, however, it would be more conducive to reviewers to include such information here I would be happy to transfer it all over here. \r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-03-08T09:40:32Z",
        "closed_at": "2020-09-30T15:01:50Z",
        "merged_at": "2020-09-30T15:01:50Z",
        "body": "Due to ```move_to``` method, ```NumberPlane``` only works fine when the numberplane is symmetric about its center, which makes it infeasible to generate asymmetric grid, for instance, the first quadrant.\r\n\r\nThe fix is simple: replacing ```move_to``` with ```shift```. Here's an example to test if it works.\r\n```\r\nclass TestNumberplaneFix(Scene):\r\n    def construct(self):\r\n        self.add(NumberPlane(x_min=0, y_min=0))\r\n        self.wait()\r\n```",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-02-19T14:55:49Z",
        "closed_at": "2020-04-24T03:36:58Z",
        "merged_at": "2020-04-24T03:36:58Z",
        "body": "# Motivation\r\nRelevant issues: https://github.com/3b1b/manim/issues/884#issue-564888972 & https://github.com/3b1b/manim/pull/680#issuecomment-552726606\r\nI found that since #748 has merged, the `Text` Mobject was displayed unexpectedly.\r\n\r\n# Behavior\r\nHere is a simple demo reproduce the problem.\r\n```\r\nfrom manimlib.imports import *\r\n\r\nclass Demo(Scene):\r\n    def construct(self):\r\n        text = Text('Hello, world!', font='Open Sans Condensed Light Italic')\r\n        self.play(Write(text))\r\n```\r\n(Noticed that `stroke_width` was set to 1 by default.)\r\n![Before](https://user-images.githubusercontent.com/47266984/74845511-190ad300-536a-11ea-90c0-b39b1a798560.png)\r\nNoticed there are some tiny \"thorn\".\r\n![Mark](https://user-images.githubusercontent.com/47266984/74845818-7e5ec400-536a-11ea-9901-2ed55d88c2e7.jpg)\r\n\r\n# Solution\r\nBy setting `Text` Mobject's `stroke_width` to 0 default.\r\n![After](https://user-images.githubusercontent.com/47266984/74845962-b1a15300-536a-11ea-8a44-1fae0615a0bc.png)\r\nIn order to avoid the similar problem, I also set some params to default.\r\n\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2020-02-10T11:35:14Z",
        "closed_at": "2020-02-10T15:13:11Z",
        "merged_at": null,
        "body": "By changing the configuration of `text_file_writing.py`, manim can compile the latex code invoking package tikz /tikz-circuit. And it needs adding `\\usepackage[options]{tikz}` or `\\usepackage[options]{circuitikz}`. Writing the code of the MObeject in the way like `TikzMobject=(r\"\u2026\u2026\") is convenient.\r\n\r\nWrite:\r\n`class TikzMobject(TextMobject):\r\n    CONFIG = {\r\n        \"stroke_width\": 3,\r\n        \"fill_opacity\": 1,\r\n        \"stroke_opacity\": 1,\r\n    }`\r\nto make the SVG show normally.\r\n\r\n![ExampleTikz](https://user-images.githubusercontent.com/50192406/74147007-4dc9ac80-4c3d-11ea-9eac-06e3a5de81b0.gif)\r\n\r\n\r\nThe modification of the `text_file_writing.py` won't affect other `TextMobject` or `TexMobject` codes to compile(up to now). But I don't know why it compiles twice when invoking cirtcuitikz. Invoking tikz complies once!\r\n\r\nIf setting like this, it won't support Xelatex(it needs some time to mix).\r\n\r\nInspired by https://github.com/Elteoremadebeethoven/AnimationsWithManim/blob/master/English/extra/faqs/tikz.py.\r\n\r\nBTW: there is a better way to compile the TextMobject or TexMobject and support more languages directly.\r\nComplying the tex code with `xelatex`, and use `dvisvgm`  convert the `pdf` into `svg` by `divisvgm --pdf file.pdf` which won't thorough the `.dvi` file.\r\nIf using the latex package `xeCJK`, it will support Chinese, Japanese and Korean, as well as English at the same time.\r\n\r\nThanks for contributing to manim!\r\n\r\n**Please ensure that your pull request works with the latest version of manim.**\r\nYou should also include:\r\n\r\n1. The motivation for making this change (or link the relevant issues)\r\n2. How you tested the new behavior (e.g. a minimal working example, before/after\r\nscreenshots, gifs, commands, etc.) This is rather informal at the moment, but\r\nthe goal is to show us how you know the pull request works as intended.\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-02-09T10:45:00Z",
        "closed_at": "2020-02-13T06:38:22Z",
        "merged_at": "2020-02-13T06:38:22Z",
        "body": "Hello, I believe there was a typo in commit 77acc99.\r\nChanging this allows to run the following example from Todd Zimmerman's tutorial.\r\n```python\r\nclass SimpleField(Scene):\r\n    CONFIG = {\r\n    \"plane_kwargs\" : {\r\n        \"color\" : RED\r\n        },\r\n    }\r\n    def construct(self):\r\n        plane = NumberPlane(**self.plane_kwargs)\r\n        plane.add(plane.get_axis_labels())\r\n        self.add(plane)\r\n\r\n        points = [x*RIGHT+y*UP\r\n            for x in np.arange(-5,5,1)\r\n            for y in np.arange(-5,5,1)\r\n            ]\r\n\r\n        vec_field = []\r\n        for point in points:\r\n            field = 0.5*RIGHT + 0.5*UP\r\n            result = Vector(field).shift(point)\r\n            vec_field.append(result)\r\n\r\n        draw_field = VGroup(*vec_field)\r\n\r\n\r\n        self.play(ShowCreation(draw_field))\r\n\r\n```",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-01-28T17:39:58Z",
        "closed_at": "2020-02-07T11:12:48Z",
        "merged_at": null,
        "body": "Changed from \"python3 manim.py example_scenes.py SquareToCircle -pl\" -> \"py manim.py example_scenes.py SquareToCircle -pl\" as python3 doesn't work on windows and only py works\r\n\r\nThanks for contributing to manim!\r\n\r\n\r\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-01-21T01:23:09Z",
        "closed_at": "2020-05-04T14:45:26Z",
        "merged_at": null,
        "body": "Moved a backtick to the correct place",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-01-05T21:43:57Z",
        "closed_at": "2021-02-04T01:20:03Z",
        "merged_at": null,
        "body": "The file containing dependencies is `requirements.txt` with the missing `s` inserted.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-01-03T11:06:33Z",
        "closed_at": "2021-02-04T01:19:44Z",
        "merged_at": null,
        "body": "The rotation happens in a clockwise direction, because the sign of the argument is negative.\r\n---\r\nI found it confusing and had to check the video to make sure the square was rotating clockwise.\r\n\r\nSo I thought to send a change.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-01-02T06:09:56Z",
        "closed_at": "2020-09-30T15:03:58Z",
        "merged_at": "2020-09-30T15:03:58Z",
        "body": "Thanks for contributing to manim!\r\n\r\n**Please ensure that your pull request works with the latest version of manim.**\r\nYou should also include:\r\n\r\n1. The motivation for making this change (or link the relevant issues)\r\n2. How you tested the new behavior (e.g. a minimal working example, before/after\r\nscreenshots, gifs, commands, etc.) This is rather informal at the moment, but\r\nthe goal is to show us how you know the pull request works as intended.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2020-01-01T01:16:12Z",
        "closed_at": "2020-11-23T21:52:40Z",
        "merged_at": null,
        "body": "When working with relatively large images in manim on my Mac, a BrokenPipeError occurs when FFmpeg tries to write to `file_writer` after stdin is closed.\r\n\r\nThe error shows up at seemingly random times, even with the same input. For instance, the output below shows that the error occurs at 3 different locations with the exact same input.\r\n<img width=\"1243\" alt=\"Screenshot 2019-12-31 19 03 09\" src=\"https://user-images.githubusercontent.com/28768645/71637103-bc5c2900-2c00-11ea-84e7-23a1da851bbd.png\">\r\n<img width=\"1204\" alt=\"Screenshot 2019-12-31 19 02 54\" src=\"https://user-images.githubusercontent.com/28768645/71637104-bc5c2900-2c00-11ea-9df9-b37b8bff3343.png\">\r\n<img width=\"1138\" alt=\"Screenshot 2019-12-31 19 02 42\" src=\"https://user-images.githubusercontent.com/28768645/71637105-bc5c2900-2c00-11ea-9ea6-6c25fcde6080.png\">\r\n\r\n**With my commit, everything works fine, even when a BrokenPipeError is raised.** This can be shown by printing the exceptions that occur at the end of the run, and showing that all the animations still play. In the figure below, it printed [Errno 32] Broken pipe once, however, that error now does not damage the video.\r\n![image](https://user-images.githubusercontent.com/28768645/71637123-24127400-2c01-11ea-9dfa-77a4be6b6d42.png)\r\n\r\n\r\n\r\nNotes:\r\n- If this error **never occurred** on some people's machines, this commit will **not change anything**, since it is simply catching the exception when an error is caused.\r\n- Using `wait(1)` is mostly an arbitrary decision and seems to work well.\r\n- If `sleep` is not called after `wait`, some animations do not show up on the screen.\r\n- The changes in this commit **do not print** all the [Errno 32] Broken pipe exceptions that occur, which was done in the final figure.\r\n\r\nThis error also corresponds to the issue #845.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 96,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2019-12-27T07:05:25Z",
        "closed_at": "2020-01-05T09:52:23Z",
        "merged_at": null,
        "body": "## Motivation\r\nTables are really useful for displaying data concisely, which is really useful when making animations on topics such as statistics and science. Currently, Manim can only generate Tables easily through LaTeX, which results in difficulty when generating tables programmatically.\r\n\r\n## Results Obtained\r\nWith this addition, tables can be made by calling `Table.get_table(<dictionary>)`, where the main, required parameter is a dictionary with the Keys as the field names and Values per Key are the corresponding records.\r\n\r\n```python\r\nfrom manimlib.imports import *\r\nclass Tables(Scene):\r\n    def construct(self):\r\n        tabledict={\r\n            \"Vowels\":[\"\\\\alpha\",\"\\\\epsilon\",\"\\\\iota\",\"\\\\omega\",\"a\",\"e\",\"i\",\"o\"],\r\n            \"Consonants\":[\"\\\\beta\",\"\\\\gamma\",\"\\\\delta\",\"\\\\phi\",\"\\\\eta\",\"\\\\kappa\",\"\\\\lambda\",\"\\\\mu\",\"\\\\nu\",\"\\\\pi\",\"\\\\chi\",\"\\\\zeta\"],\r\n            \"Words\":[\"Must\",\"add\",\"proper\",\"length\",\"checking\",\"for\",\"use\",\"with\",\"LaTeX.\",\"(No\",\"wraparound\",\"currently.)\"],\r\n        }\r\n        table=Table.get_table(tabledict)\r\n        table.scale(0.50)\r\n        table.move_to((0,0,0))\r\n        self.play(Write(table))\r\n        self.wait(2)\r\n\r\n```\r\nThe code above generates the following table:\r\n\r\n![Tables](https://user-images.githubusercontent.com/33193764/71505891-e8944480-28a4-11ea-9f55-789b515c1e00.gif)\r\n\r\n\r\nFurther customisations can be made by passing a `line_color` and `text_color` in the same function like so: `Table.get_table(tabledict,line_color=GREEN,text_color=BLUE)`\r\nBoth of these values default to WHITE.\r\n\r\n## Changes Made:\r\n\r\nA single file named `tables.py` has been added to `manimlib/mobjects`. This file contains the entirety of the logic used.\r\n\r\n`manimlib.imports` has been edited to import the aforementioned file.\r\n\r\nFuture plans for this feature include a wraparound for text and ~~better length measuring of LaTeX strings to ensure proper table column widths, as well as~~ better table element retrieval, since you can only retrieve elements by indexing the resultant VGroup() as of now.\r\n\r\nEDIT: I'm closing this PR, since I feel this would work better as an addon to Manim rather than as a core feature. I added support for Text(), TexMobjects(), TextMobjects() and strings. Those interested can find it [here](https://github.com/Aathish04/sanim/tree/master/anim_tools). An example on how to use all its features are [here](https://gitlab.com/aathish04/manim-projects/tree/master/CustomFeatureExamples).\r\n",
        "comments": 15
    },
    {
        "merged": false,
        "additions": 248,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-12-25T16:43:18Z",
        "closed_at": "2022-02-14T05:00:37Z",
        "merged_at": null,
        "body": "1. I made this pull request because I wanted, for my own personal work, to be able to graph implicit functions that were not parameterizable, and there was no functionality to do so in the current manim library. I coded it up and thought it would, hopefully, be useful enough for other people to use, and so I thought I'd share it in this pull request!\r\n2. Here are various screenshots of various implicit functions that demonstrate this actually works, alone with some videos to demonstrate its runtime efficiency.\r\n\r\nGraphing x^2 + y^2 = 4:\r\n![TestImplicitFuncs](https://user-images.githubusercontent.com/13473097/71448339-6c60fc00-2700-11ea-9c37-328f29251d18.png)\r\n\r\nGraphing y(x-y)^2 = 4x + 8\r\n![TestImplicitFuncs](https://user-images.githubusercontent.com/13473097/71448347-8d295180-2700-11ea-8bac-165d6796dc6a.png)\r\n\r\nGraphing y^2 = x^3 - x\r\n![TestImplicitFuncs](https://user-images.githubusercontent.com/13473097/71448387-dd081880-2700-11ea-86f9-1e118104b27a.png)\r\n\r\nAnimating y^2 = x^3 - x - b for b in [-1,1]\r\n![image](https://user-images.githubusercontent.com/13473097/71448557-fc07aa00-2702-11ea-9130-507a8b0ed06f.png)\r\n\r\nwith runtime at around 4 minutes\r\n<img width=\"1359\" alt=\"image\" src=\"https://user-images.githubusercontent.com/13473097/71448563-1a6da580-2703-11ea-8024-8f6255e3dd12.png\">\r\n\r\nWeirdly, the its/sec seemed to decrease over time for all of them, starting at around 2 its/sec and ending at 1.5 secs/it. I suspect something may be up with my generate_points algorithm, in that it bulks up memory somehow over time, but I haven't been able to find anything yet...\r\n\r\n\r\n\r\n\r\n\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-12-23T16:31:09Z",
        "closed_at": "2020-09-30T14:57:30Z",
        "merged_at": "2020-09-30T14:57:30Z",
        "body": "docs typo mistake mentioned in #806 ",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2019-12-19T09:47:15Z",
        "closed_at": "2021-02-10T06:45:27Z",
        "merged_at": null,
        "body": "## Motivation\r\n\r\nI'm a new manim user and I've wanted to try it out on one of my math exam questions. The question has a curve and a tangent in which we must find the area bounded by the curve. There is no function for `get_graph` to do so.\r\n\r\n## Feature\r\n\r\nFairly simple change: Because the y-axis for rectangles in `get_riemann_rectangles` is fixed to 0, we can change it for the bottom of the rectangles to be placed at another graph. We can pass the other graph with `bounded_graph=` in the function. If it is defined, the rectangles will only stretch to the second curve and not until y=0. For `get_area`, we can add `bounded=` for the second curve.\r\n\r\nAny feedback is welcomed! I'm still a new user so I might do some mistakes.\r\n\r\n## Example\r\n\r\nArea bounded by a straight line (x=2), a curve and a tangent. \r\n\r\n![manim-bound](https://user-images.githubusercontent.com/57790178/71160283-3a741380-2282-11ea-9c66-ec7ab1281087.gif)\r\n\r\nArea bounded by two curves and two straight line. (x=2,3)\r\n\r\n![manim-bound2](https://user-images.githubusercontent.com/57790178/71161540-7f00ae80-2284-11ea-855c-0aff124bfa91.gif)\r\n\r\n```python\r\nfrom manimlib.imports import *\r\nclass area(GraphScene):\r\n    CONFIG = {\r\n        \"x_min\" : 0,\r\n        \"x_max\" : 5,\r\n        \"y_min\" : 0,\r\n        \"y_max\" : 6,\r\n        \"y_tick_frequency\" : 1, \r\n        \"x_tick_frequency\" : 1, \r\n        \"x_labeled_nums\" : [0,2,3]\r\n    }   \r\n    def construct(self):\r\n        self.setup_axes(animate=False)\r\n        curve1 = self.get_graph(lambda x : 4*x-x**2, x_min=0,x_max=4)\r\n        curve2 = self.get_graph(lambda x : 0.8*x**2-3*x+4, x_min=0,x_max=4)\r\n        line1 = self.get_vertical_line_to_graph(2,curve1,DashedLine,color=YELLOW)\r\n        line2 = self.get_vertical_line_to_graph(3,curve1,DashedLine,color=YELLOW)\r\n        \r\n        area = self.get_area(curve2,2,3,bounded=curve1)\r\n\r\n        self.play(ShowCreation(curve1), ShowCreation(curve2), \r\n            ShowCreation(line1), ShowCreation(line2))\r\n        self.play(ShowCreation(area))\r\n        self.wait()\r\n```",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 74,
        "deletions": 19,
        "changed_files": 2,
        "created_at": "2019-12-16T02:15:58Z",
        "closed_at": "2021-07-18T03:17:30Z",
        "merged_at": null,
        "body": "1. The motivation for making this change (or link the relevant issues)\r\n I made this change because I wanted to work with some algebraic curves that have multiple infinite discontinuities and, with the current version of manim, animating them lead to very ugly artifacts appearing on the curve. This fundamentally boils down to the `discontinuities` array appearing in the ParametricFunction class that we needed to \"be smarter about.\" While this isn't a perfect solution (as there are still 'double-tangent' artifacts present in all the examples (without and with the new discontinuities function), this is a little bit smarter.\r\n2. How you tested the new behavior (e.g. a minimal working example, before/after\r\nscreenshots, gifs, commands, etc.) This is rather informal at the moment, but\r\nthe goal is to show us how you know the pull request works as intended.\r\n The image below demonstrates the issue I was attempting to solve.\r\n![ParametricFunctionScene_With_Old_Discont](https://user-images.githubusercontent.com/13473097/70874319-3f318280-1f77-11ea-8ce0-b409493edbe9.png)\r\n With the new `get_discontinuities` function I coded, the image becomes\r\n![ParametricFunctionScene_With_New_Discont](https://user-images.githubusercontent.com/13473097/70874341-52dce900-1f77-11ea-87d1-6d25a7aa818f.png)\r\n And, to test both infinite discontinuities and break discontinuities, I just drew a hyperbola with a step function at the tail end, which looked like:\r\n![ParametricFunctionScene_Inf_And_Break_Discont](https://user-images.githubusercontent.com/13473097/70874365-6c7e3080-1f77-11ea-9de1-58c2e648519a.png)\r\nSo the issue is solved, and everything should _still_ work.\r\n\r\n\r\n\r\n",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 36100,
        "deletions": 223052,
        "changed_files": 519,
        "created_at": "2019-12-09T15:41:32Z",
        "closed_at": "2019-12-19T17:51:09Z",
        "merged_at": null,
        "body": "I just wanna make this animation that fade in flower of life. I'm sure that shape code is not incorrect. Because when \u0131 use self.add(flower) it works perfectly. But when \u0131 make group and put in the self.play(FadeIn(flower)), shape does not appear perfect (\u0131 showed  with red). I'm gonna mad.. And big_circle doesnt appear too. What should \u0131 do? Can you helps me?\r\n\r\n\r\nclass Ya\u015fam\u00c7i\u00e7e\u011fi(Scene):\r\n\r\n    def construct(self):\r\n        rad = TAU / 6\r\n        x = RIGHT\r\n        y = UP / 2\r\n        \u00c7Y = RIGHT * .866 + UP * .5\r\n        \u00c7A = RIGHT * .866 + DOWN * .5\r\n\r\n        yay1 = ArcBetweenPoints(ORIGIN, UP, rad)\r\n        yay2 = ArcBetweenPoints(UP, ORIGIN, rad)\r\n        yaprak1 = Group(yay1, yay2)\r\n\r\n        yay3 = ArcBetweenPoints(ORIGIN, \u00c7Y, rad)\r\n        yay4 = ArcBetweenPoints(\u00c7Y, ORIGIN, rad)\r\n        yaprak2 = Group(yay3, yay4)\r\n\r\n        yay5 = ArcBetweenPoints(ORIGIN, \u00c7A, rad)\r\n        yay6 = ArcBetweenPoints(\u00c7A, ORIGIN, rad)\r\n        yaprak3 = Group(yay5, yay6)\r\n\r\n        yay7 = ArcBetweenPoints(ORIGIN, DOWN, rad)\r\n        yay8 = ArcBetweenPoints(DOWN, ORIGIN, rad)\r\n        yaprak4 = Group(yay7, yay8)\r\n\r\n        yay9 = ArcBetweenPoints(ORIGIN, -\u00c7Y, rad)\r\n        yay10 = ArcBetweenPoints(-\u00c7Y, ORIGIN, rad)\r\n        yaprak5 = Group(yay9, yay10)\r\n\r\n        yay11 = ArcBetweenPoints(ORIGIN, -\u00c7A, rad)\r\n        yay12 = ArcBetweenPoints(-\u00c7A, ORIGIN, rad)\r\n        yaprak6 = Group(yay11, yay12)\r\n\r\n        \u00e7i\u00e7ek1 = Group(yaprak1, yaprak2, yaprak3, yaprak4, yaprak5, yaprak6)\r\n        \u00e7i\u00e7ek1.set_color([PURPLE_E, BLUE_D, YEN\u0130_RENK], False)\r\n        \u00e7i\u00e7ek1.set_color([BLUE_C, WHITE], False)\r\n        \u00e7i\u00e7ek1.set_color([DARK_BLUE, WHITE], False)\r\n        \u00e7i\u00e7ek1.set_color([PURPLE_E, WHITE], False)\r\n\r\n        \u00e7i\u00e7ek21 = \u00e7i\u00e7ek1.copy().move_to(UP)\r\n        \u00e7i\u00e7ek22 = \u00e7i\u00e7ek21.copy().move_to(\u00c7Y)\r\n        \u00e7i\u00e7ek23 = \u00e7i\u00e7ek21.copy().move_to(\u00c7A)\r\n        \u00e7i\u00e7ek24 = \u00e7i\u00e7ek21.copy().move_to(DOWN)\r\n        \u00e7i\u00e7ek25 = \u00e7i\u00e7ek21.copy().move_to(-\u00c7Y)\r\n        \u00e7i\u00e7ek26 = \u00e7i\u00e7ek21.copy().move_to(-\u00c7A)\r\n        orta = Group(\u00e7i\u00e7ek21, \u00e7i\u00e7ek22, \u00e7i\u00e7ek23, \u00e7i\u00e7ek24, \u00e7i\u00e7ek25, \u00e7i\u00e7ek26)\r\n\r\n        \u00e7i\u00e7ek31 = \u00e7i\u00e7ek1.copy().move_to(2 * UP)\r\n        \u00e7i\u00e7ek32 = \u00e7i\u00e7ek31.copy().move_to(UP + \u00c7Y)\r\n        \u00e7i\u00e7ek33 = \u00e7i\u00e7ek31.copy().move_to(2 * \u00c7Y)\r\n        \u00e7i\u00e7ek34 = \u00e7i\u00e7ek31.copy().move_to(1.732 * RIGHT)\r\n        \u00e7i\u00e7ek35 = \u00e7i\u00e7ek31.copy().move_to(2 * \u00c7A)\r\n        \u00e7i\u00e7ek36 = \u00e7i\u00e7ek31.copy().move_to(DOWN + \u00c7A)\r\n        \u00e7i\u00e7ek37 = \u00e7i\u00e7ek31.copy().move_to(2 * DOWN)\r\n        \u00e7i\u00e7ek38 = \u00e7i\u00e7ek31.copy().move_to(DOWN - \u00c7Y)\r\n        \u00e7i\u00e7ek39 = \u00e7i\u00e7ek31.copy().move_to(2 * -\u00c7Y)\r\n        \u00e7i\u00e7ek310 = \u00e7i\u00e7ek31.copy().move_to(1.732 * LEFT)\r\n        \u00e7i\u00e7ek311 = \u00e7i\u00e7ek31.copy().move_to(2 * -\u00c7A)\r\n        \u00e7i\u00e7ek312 = \u00e7i\u00e7ek31.copy().move_to(UP - \u00c7A)\r\n        d\u0131\u015f = Group(\u00e7i\u00e7ek31, \u00e7i\u00e7ek32, \u00e7i\u00e7ek33, \u00e7i\u00e7ek34, \u00e7i\u00e7ek35, \u00e7i\u00e7ek36, \u00e7i\u00e7ek37, \u00e7i\u00e7ek38, \u00e7i\u00e7ek39, \u00e7i\u00e7ek310, \u00e7i\u00e7ek311,\r\n                    \u00e7i\u00e7ek312)\r\n\r\n        hat1 = yaprak3.copy().move_to(UP * 3 + \u00c7A * .5)\r\n        hat2 = yaprak3.copy().move_to(UP * 3 + \u00c7A * 1.5)\r\n        hat3 = yaprak3.copy().move_to(UP * 3 + \u00c7A * 2.5)\r\n        hat4 = yaprak4.copy().move_to(DOWN / 2 + 3 * \u00c7Y)\r\n        hat5 = hat4.copy().move_to(3 * \u00c7Y + DOWN * 1.5)\r\n        hat6 = hat4.copy().move_to(DOWN * 2.5 + 3 * \u00c7Y)\r\n        hat7 = yaprak5.copy().move_to(3 * \u00c7A - \u00c7Y / 2)\r\n        hat8 = hat7.copy().move_to(-1.5 * \u00c7Y + 3 * \u00c7A)\r\n        hat9 = hat7.copy().move_to(-2.5 * \u00c7Y + 3 * \u00c7A)\r\n        hat10 = yaprak6.copy().move_to(DOWN * 3 - .5 * \u00c7A)\r\n        hat11 = hat10.copy().move_to(DOWN * 3 - 1.5 * \u00c7A)\r\n        hat12 = hat10.copy().move_to(DOWN * 3 - 2.5 * \u00c7A)\r\n        hat13 = yaprak1.copy().move_to(.5 * UP + 3 * -\u00c7Y)\r\n        hat14 = hat13.copy().move_to(1.5 * UP - 3 * \u00c7Y)\r\n        hat15 = hat13.copy().move_to(2.5 * UP - 3 * \u00c7Y)\r\n        hat16 = yaprak2.copy().move_to(3 * -\u00c7A + .5 * \u00c7Y)\r\n        hat17 = yaprak2.copy().move_to(1.5 * \u00c7Y - 3 * \u00c7A)\r\n        hat18 = yaprak2.copy().move_to(2.5 * \u00c7Y - 3 * \u00c7A)\r\n\r\n        hat_a = Group(hat1, hat2, hat3, hat4, hat4, hat5, hat6, hat7, hat8)\r\n        hat_b = Group(hat9, hat10, hat11, hat12, hat13, hat14, hat15, hat16, hat17, hat18, )\r\n        hat = Group(hat_a, hat_b)\r\n\r\n        big_circle = Circle(radius=3)\r\n\r\n        flower = Group(\u00e7i\u00e7ek1, orta, d\u0131\u015f, hat, big_circle)\r\n        flower.set_color([PURPLE_E,DARK_BLUE,YEN\u0130_RENK])\r\n        self.play(FadeIn(flower), run_time=3)\r\n        self.wait(2)\r\n\r\nThis is when \u0131 use self.play(FadeIn(flower):\r\n\r\n![Ads\u0131z](https://user-images.githubusercontent.com/58697394/70448141-faa67280-1ab0-11ea-8402-ec5fc722f5aa.png)\r\n\r\nAnd this is when \u0131 use self.add(flower) \r\n![Ads\u0131z](https://user-images.githubusercontent.com/58697394/70448835-fa5aa700-1ab1-11ea-930c-2b01fa1982e0.jpg)\r\n\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 155,
        "deletions": 0,
        "changed_files": 8,
        "created_at": "2019-12-05T14:48:21Z",
        "closed_at": "2020-07-21T06:10:55Z",
        "merged_at": null,
        "body": "I want to play physics engine with manim. So I tried to add a simple wrap of the pymunk library. The test scene is added into the example_scenes.py.\r\n\r\nWith the help of physics engine, I think this library can be more powerful.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-12-05T00:25:58Z",
        "closed_at": "2019-12-08T01:52:37Z",
        "merged_at": "2019-12-08T01:52:37Z",
        "body": "Fixes issue #814 ",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 22,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2019-12-04T21:43:21Z",
        "closed_at": "2021-02-04T00:58:38Z",
        "merged_at": null,
        "body": "1. Added documentation specifying how directories are initialized. Tweaked the help messages to be clearer, and specified that animations are 0 indexed. This was inspired by the readme, which specifies that the project needs better documentation.\r\n\r\n2. This only adds documentation and tweaks help strings, and does not touch any program logic. You can test this by running code where a font is missing, a scene is missing, or choosing a number is required. \r\n\r\nThanks for contributing to manim!\r\n\r\n**Please ensure that your pull request works with the latest version of manim.**\r\nYou should also include:\r\n\r\n1. The motivation for making this change (or link the relevant issues)\r\n2. How you tested the new behavior (e.g. a minimal working example, before/after\r\nscreenshots, gifs, commands, etc.) This is rather informal at the moment, but\r\nthe goal is to show us how you know the pull request works as intended.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 23,
        "changed_files": 3,
        "created_at": "2019-12-03T05:50:25Z",
        "closed_at": "2021-07-18T03:15:46Z",
        "merged_at": null,
        "body": "I want to draw some graphs beneath the graphs which are already previously created. So I add a plot_depth property to the mobject, higher value means higher layers. So I can create a line under two points like:\r\n\r\n```python\r\np1 = Dot(LEFT)\r\np2 = Dot(RIGHT)\r\np1.plot_depth = 1\r\np2.plot_depth = 1\r\nline = Line(LEFT, RIGHT)\r\nself.play(ShowCreation(p1), ShowCreation(p2)\r\nself.play(ShowCreation(line))\r\n```",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2019-11-27T00:16:13Z",
        "closed_at": "2019-11-27T05:58:43Z",
        "merged_at": null,
        "body": "When trying to construct a NumberPlane with asymmetric limits (e.g. x_min = 0) the background lines would be the right length, but centered around the other axis. This change adds a shift that keeps the background lines within the appropriate limits.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-11-23T15:45:18Z",
        "closed_at": "2019-11-28T06:56:22Z",
        "merged_at": "2019-11-28T06:56:22Z",
        "body": "docs typo mistake mentioned in #803 ",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 59,
        "deletions": 53,
        "changed_files": 5,
        "created_at": "2019-11-06T08:46:43Z",
        "closed_at": "2021-02-04T00:56:21Z",
        "merged_at": null,
        "body": "## Motivation\r\nNoticed that the livestreaming option wasn't working as intended, and decided to fix it.\r\nAn issue also exists for it to at #753.\r\n\r\n## Description\r\nSince the addition of `SceneFileWriter` and the refactoring that came with it, live streaming was broken due to:\r\n- configurations moving from `Scene` to `SceneFileWriter` and the streaming configuration remaining the same\r\n- Streaming operations in `SceneFileWriter` stil referring to functions as if it was begin run as `Scene`\r\n- Directory constants in `constants.py` not being pre-populated (calling `initialize_directories` is required)\r\n\r\nSo by fixing all of the above, livestreaming works once more!\r\n\r\n## Testing\r\nBefore my changes, this was the displayed error:\r\n![Screenshot from 2019-11-06 03-35-41](https://user-images.githubusercontent.com/11013166/68281909-a4c05400-0046-11ea-86df-215ad981f197.png)\r\n\r\nBelow is a demo of sending commands in livestream mode and the resulting behavior:\r\n![manim_stream](https://user-images.githubusercontent.com/11013166/68282483-cd951900-0047-11ea-9359-e59bd874986e.gif)\r\n\r\n\r\n\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-10-31T11:40:24Z",
        "closed_at": "2019-11-28T07:10:48Z",
        "merged_at": "2019-11-28T07:10:48Z",
        "body": "Fixes #779 ",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-10-28T22:40:10Z",
        "closed_at": "2020-05-07T18:33:20Z",
        "merged_at": null,
        "body": "Bumps [pillow](https://github.com/python-pillow/Pillow) from 5.2.0 to 6.2.0.\n<details>\n<summary>Release notes</summary>\n\n*Sourced from [pillow's releases](https://github.com/python-pillow/Pillow/releases).*\n\n> ## 6.2.0\n> https://pillow.readthedocs.io/en/stable/releasenotes/6.2.0.html\n> \n> ## 6.1.0\n> https://pillow.readthedocs.io/en/stable/releasenotes/6.1.0.html\n> \n> ## 6.0.0\n> No release notes provided.\n> \n> ## 5.4.1\n> No release notes provided.\n> \n> ## 5.4.0\n> No release notes provided.\n> \n> ## 5.3.0\n> No release notes provided.\n</details>\n<details>\n<summary>Changelog</summary>\n\n*Sourced from [pillow's changelog](https://github.com/python-pillow/Pillow/blob/master/CHANGES.rst).*\n\n> 6.2.0 (2019-10-01)\n> ------------------\n> \n> - Catch buffer overruns [#4104](https://github-redirect.dependabot.com/python-pillow/Pillow/issues/4104)\n>   [radarhere]\n> \n> - Initialize rows_per_strip when RowsPerStrip tag is missing [#4034](https://github-redirect.dependabot.com/python-pillow/Pillow/issues/4034)\n>   [cgohlke, radarhere]\n> \n> - Raise error if TIFF dimension is a string [#4103](https://github-redirect.dependabot.com/python-pillow/Pillow/issues/4103)\n>   [radarhere]\n> \n> - Added decompression bomb checks [#4102](https://github-redirect.dependabot.com/python-pillow/Pillow/issues/4102)\n>   [radarhere]\n> \n> - Fix ImageGrab.grab DPI scaling on Windows 10 version 1607+ [#4000](https://github-redirect.dependabot.com/python-pillow/Pillow/issues/4000)\n>   [nulano, radarhere]\n> \n> - Corrected negative seeks [#4101](https://github-redirect.dependabot.com/python-pillow/Pillow/issues/4101)\n>   [radarhere]\n> \n> - Added argument to capture all screens on Windows [#3950](https://github-redirect.dependabot.com/python-pillow/Pillow/issues/3950)\n>   [nulano, radarhere]\n> \n> - Updated warning to specify when Image.frombuffer defaults will change [#4086](https://github-redirect.dependabot.com/python-pillow/Pillow/issues/4086)\n>   [radarhere]\n> \n> - Changed WindowsViewer format to PNG [#4080](https://github-redirect.dependabot.com/python-pillow/Pillow/issues/4080)\n>   [radarhere]\n> \n> - Use TIFF orientation [#4063](https://github-redirect.dependabot.com/python-pillow/Pillow/issues/4063)\n>   [radarhere]\n> \n> - Raise the same error if a truncated image is loaded a second time [#3965](https://github-redirect.dependabot.com/python-pillow/Pillow/issues/3965)\n>   [radarhere]\n> \n> - Lazily use ImageFileDirectory_v1 values from Exif [#4031](https://github-redirect.dependabot.com/python-pillow/Pillow/issues/4031)\n>   [radarhere]\n> \n> - Improved HSV conversion [#4004](https://github-redirect.dependabot.com/python-pillow/Pillow/issues/4004)\n>   [radarhere]\n> \n> - Added text stroking [#3978](https://github-redirect.dependabot.com/python-pillow/Pillow/issues/3978)\n>   [radarhere, hugovk]\n> \n> - No more deprecated bdist_wininst .exe installers [#4029](https://github-redirect.dependabot.com/python-pillow/Pillow/issues/4029)\n>   [hugovk]\n> \n> - Do not allow floodfill to extend into negative coordinates [#4017](https://github-redirect.dependabot.com/python-pillow/Pillow/issues/4017)\n>   [radarhere]\n></tr></table> ... (truncated)\n</details>\n<details>\n<summary>Commits</summary>\n\n- [`8a30d13`](https://github.com/python-pillow/Pillow/commit/8a30d135378dc6a1c3c08fa4bb9fbc15370feedf) Updated CHANGES.rst [ci skip]\n- [`75602d1`](https://github.com/python-pillow/Pillow/commit/75602d12e1b6f2152ab5bd1acfb62a9c8a4a0432) 6.2.0 version bump\n- [`4756af9`](https://github.com/python-pillow/Pillow/commit/4756af9c1027ae620eaa9538d6b0dd9b0e844fca) Updated CHANGES.rst [ci skip]\n- [`cc16025`](https://github.com/python-pillow/Pillow/commit/cc16025e234b7a7a4dd3a86d2fdc0980698db9cc) Merge pull request [#4104](https://github-redirect.dependabot.com/python-pillow/Pillow/issues/4104) from radarhere/overrun\n- [`fb84701`](https://github.com/python-pillow/Pillow/commit/fb8470187a45043c33b1c75e7dca48b38d5db7a6) Merge pull request [#4034](https://github-redirect.dependabot.com/python-pillow/Pillow/issues/4034) from cgohlke/patch-1\n- [`b9693a5`](https://github.com/python-pillow/Pillow/commit/b9693a51c99c260bd66d1affeeab4a226cf7e5a5) Merge pull request [#4103](https://github-redirect.dependabot.com/python-pillow/Pillow/issues/4103) from radarhere/dimension\n- [`f228d0c`](https://github.com/python-pillow/Pillow/commit/f228d0ccbf6bf9392d7fcd51356ef2cfda80c75a) Merge pull request [#4102](https://github-redirect.dependabot.com/python-pillow/Pillow/issues/4102) from radarhere/decompression\n- [`aaf2c42`](https://github.com/python-pillow/Pillow/commit/aaf2c421564fcf96bd030487f09b648f7feb7b67) Merge pull request [#4000](https://github-redirect.dependabot.com/python-pillow/Pillow/issues/4000) from nulano/dpi_fix\n- [`b36c1bc`](https://github.com/python-pillow/Pillow/commit/b36c1bc943d554ba223086c7efb502d080f73905) Merge pull request [#4101](https://github-redirect.dependabot.com/python-pillow/Pillow/issues/4101) from radarhere/negative_seek\n- [`9a977b9`](https://github.com/python-pillow/Pillow/commit/9a977b975cd871ef9a9128b72414c0de3a292591) Raise error if dimension is a string\n- Additional commits viewable in [compare view](https://github.com/python-pillow/Pillow/compare/5.2.0...6.2.0)\n</details>\n<br />\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=5.2.0&new-version=6.2.0)](https://help.github.com/articles/configuring-automated-security-fixes)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/3b1b/manim/network/alerts).\n\n</details>",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 14,
        "changed_files": 1,
        "created_at": "2019-10-24T04:00:45Z",
        "closed_at": "2019-10-27T05:29:36Z",
        "merged_at": "2019-10-27T05:29:36Z",
        "body": "This makes a couple changes to the README with the goal of standardizing a few things (e.g. putting options in code lines, capitalizing Python, single spaces after periods).",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 17,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2019-10-16T15:56:59Z",
        "closed_at": "2020-05-28T16:59:40Z",
        "merged_at": null,
        "body": "The first commit allows users to set row colors to a matrix mobject. Local tests were successful.\r\n\r\nThe second commit allows easy customization of the left and right bracket of a matrix.\r\n\r\n_Re-creating the pull request, because first version was done on branch master by accident._",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1104,
        "deletions": 3,
        "changed_files": 5,
        "created_at": "2019-10-16T10:29:49Z",
        "closed_at": "2021-07-18T03:15:32Z",
        "merged_at": null,
        "body": "Thanks for contributing to manim!\r\n\r\n**Please ensure that your pull request works with the latest version of manim.**\r\nYou should also include:\r\n\r\n1. The motivation for making this change (or link the relevant issues)\r\n2. How you tested the new behavior (e.g. a minimal working example, before/after\r\nscreenshots, gifs, commands, etc.) This is rather informal at the moment, but\r\nthe goal is to show us how you know the pull request works as intended.\r\n\r\n\r\nHi Grant, really love your work!\r\nCurrently I am an undergraduate student, studying physics.\r\nInspired by your work, I posted a few posts on my blog about some physical phenomena, in which I try expressing the simulation I have in my head using manim, and a lot of written explanations.\r\nYou can flip through my work (which will show examples of the Mobjects I created here) in this link:\r\nharpaz.wordpress.com\r\nor, simply view the videos created here:\r\nhttps://drive.google.com/drive/folders/1cWi8aiqt6DqkelOAv10ZfJt_ZmObR4az?usp=sharing\r\nThe code used to generate these scenes can be found in this fork:\r\nhttps://github.com/dor2727/manim/tree/my_project/my_project\r\n\r\n1) The motivation is to allow for ready-to-use physical objects, mainly in the point of view of particles.\r\nthe classes are:\r\nParticle: the main class. has several ready to use properties, such as beta & gamma (from special relativity), temperature (from thermodynamics, the relation between temperature and velocity)\r\nParticle1D: with an updater function for going back and forth\r\nParticle2D: with an updater function for random walk\r\nChargedParticle: a particle moving by the electromagnetic force\r\nCrystal: a VGroup of particles shown in a crystal structure\r\n\r\nPendulum: your class from differential equations part 1\r\nDoublePendulum\r\n\r\n2) I have several example cases for each class. Those videos and code can be viewed at the google drive folder and the fork I sent, respectively",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2019-10-15T03:10:45Z",
        "closed_at": "2020-09-30T14:53:59Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2019-10-14T15:02:01Z",
        "closed_at": "2021-02-01T14:06:52Z",
        "merged_at": null,
        "body": "minor changes\r\n\r\nThanks for contributing to manim!\r\n\r\n**Please ensure that your pull request works with the latest version of manim.**\r\nYou should also include:\r\n\r\n1. The motivation for making this change (or link the relevant issues)\r\n2. How you tested the new behavior (e.g. a minimal working example, before/after\r\nscreenshots, gifs, commands, etc.) This is rather informal at the moment, but\r\nthe goal is to show us how you know the pull request works as intended.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 14,
        "changed_files": 5,
        "created_at": "2019-10-11T05:26:31Z",
        "closed_at": "2021-02-04T00:55:27Z",
        "merged_at": null,
        "body": "I just made some small improvements:\r\nIn `any` and `all` calls, generators are faster than lists because the loop can break and short cut if the first `True` (in `any`) or `False` (in `all`) is found.\r\nAlso some cleaner code with comprehensions :)",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-10-08T07:36:36Z",
        "closed_at": "2019-10-27T05:31:26Z",
        "merged_at": "2019-10-27T05:31:26Z",
        "body": "Closes: #747\r\n\r\nI've created a separate scene with SVG mobject and after the fix the pins are there.\r\nI'm not sure whether there are scenes depending on the stroke lines to not be drawn.\r\n![Screenshot](https://user-images.githubusercontent.com/10159037/66375926-6fbcd500-e9a6-11e9-95d4-37c433e2f002.png)\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2019-10-07T18:07:20Z",
        "closed_at": "2019-11-07T06:27:27Z",
        "merged_at": null,
        "body": "Closes: #720\r\n\r\nI've tested it by adding an SVG picture to the first scene example. Before the fix, it was just failing.\r\n![Screenshot](https://user-images.githubusercontent.com/10159037/66336746-97c02000-e935-11e9-825c-297d12cd3f00.png)\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1506,
        "deletions": 273122,
        "changed_files": 269,
        "created_at": "2019-10-07T12:00:52Z",
        "closed_at": "2020-05-28T16:59:57Z",
        "merged_at": null,
        "body": "added new command line parameter `--tex_template` in order to allow a custom tex template\r\n\r\nif not specified, default file is used. if specified but not available (file not found or file not readable), an error message is shown and the default is used.\r\n\r\nThis pull request would at least close issues https://github.com/3b1b/manim/pull/745 and https://github.com/3b1b/manim/issues/525 .",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 17,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2019-10-06T15:42:48Z",
        "closed_at": "2019-10-16T15:57:10Z",
        "merged_at": null,
        "body": "The first commit allows users to set row colors to a matrix mobject. Local tests were successful.\r\n\r\nThe second commit allows easy customization of the left and right bracket of a matrix.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2019-09-24T14:26:16Z",
        "closed_at": "2020-05-15T04:13:03Z",
        "merged_at": "2020-05-15T04:13:03Z",
        "body": "Modify path as posix style before transport it to system command to fix issue #505 \r\n\r\nI ran the example_scenes.py and pass all cases.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2019-09-12T18:07:36Z",
        "closed_at": "2019-11-07T00:21:23Z",
        "merged_at": "2019-11-07T00:21:23Z",
        "body": "Fix to interpret subsequent points of absolute MoveTo (M) command as absolute LineTo (L).\r\n\r\n\r\nFor #720, tested with codes and svg files from #720 \r\n\r\nFor MoveTo and absolute LineTo issue, tested with SVGCircleAndSquare scene from https://github.com/zimmermant/manim_tutorial/blob/37efeb93db5a266d92f85ea1f72aec5ba66bb312/manim_tutorial_P37.py#L735",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 28,
        "deletions": 2,
        "changed_files": 4,
        "created_at": "2019-08-28T18:47:15Z",
        "closed_at": "2021-02-04T00:51:35Z",
        "merged_at": null,
        "body": "There is apparently no way to set fps without editing manim source code. This adds a command-line argument frame_rate. I think this is useful, there are many cases where rendering with 60 fps is wasteful and not fitting with the rest of the project outside manim (we use 24 fps).",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2019-08-26T10:40:49Z",
        "closed_at": "2021-07-18T03:13:11Z",
        "merged_at": null,
        "body": "# Testing\r\nThe example from the linked issue compiles and runs as expected. Also this was tested on a more complex scene, where this issue originally was found. \r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-08-21T17:21:27Z",
        "closed_at": "2021-02-04T00:49:39Z",
        "merged_at": null,
        "body": "I just got started with manim, but I found one typo in the documentation so here it is.\r\n\r\nThe `OUTPUT_PATH` for `docker-compose` creates `videos/` directory instead of `media/` and it is confusing for a beginner.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-08-20T06:35:49Z",
        "closed_at": "2019-11-07T00:21:59Z",
        "merged_at": "2019-11-07T00:21:59Z",
        "body": "Change way to remove sound_file_path\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2019-08-18T13:08:26Z",
        "closed_at": "2022-02-14T05:01:57Z",
        "merged_at": null,
        "body": "Using a shallow copy can result in duplicate objects for references in\r\nan mobject that aren't part of the submobjects array, see [1].\r\nDeepcopy fixes this and doesn't seem to have any other adverse\r\ndrawbacks.\r\n\r\nUse it by default, however add a config value allowing this to be\r\noverwritten for backwards compatibility.\r\n\r\n[1]: https://github.com/3b1b/manim/issues/688\r\n\r\nThis has been tested by compiling most of the built-in scenes.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-08-17T07:55:54Z",
        "closed_at": "2020-09-30T14:48:30Z",
        "merged_at": "2020-09-30T14:48:30Z",
        "body": "\r\nI faced the same problem as [#505](https://github.com/3b1b/manim/issues/505) and [#610](https://github.com/3b1b/manim/issues/610) on my Windows 10 machine. After making this change, I passed through **manim** working on scenes with TeX stuff. ",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-08-16T13:06:20Z",
        "closed_at": "2019-08-20T06:32:06Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-08-16T13:06:12Z",
        "closed_at": "2021-07-18T03:08:53Z",
        "merged_at": null,
        "body": "1. The motivation for making this change (or link the relevant issues)\r\nBecause my OS is macOS and I found that when using manim.py directly(through `./manim.py`), it will trigger an error, because the default interpreter on macOS invoked by python is Python 2 rather than Python 3, and by changing the first line of manim.py, after specifying explicitly to use `/usr/bin/env python3` as the interpreter rather than `/usr/bin/env python`, the error is gone.\r\nI think this change is very important for macOS users\r\n2. How you tested the new behavior.\r\nSimply execute manim.py again in terminal after modifying the file and it works as expected.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 252,
        "deletions": 7,
        "changed_files": 4,
        "created_at": "2019-08-12T01:53:27Z",
        "closed_at": "2019-08-16T07:58:59Z",
        "merged_at": "2019-08-16T07:58:59Z",
        "body": "# Motivation\r\n\r\nBecause the `TextMobject` is the subclass of `TexMobject`,\r\n\r\nso it requires some latex-style behaviours in order to add some changes.\r\n\r\n(e.g. other languages, font, slant and weight)\r\n\r\nSo I create `Text` mobject but you can still use `TextMobject`.\r\n\r\n# Introduction\r\n\r\n`Text` is a subclass of `SVGMobject`.\r\n\r\nIt uses `cairo` to generate text svgs.\r\n\r\nIt has a better UTF-8 support, multi-line support, and various options. \r\n\r\nIt doesn't support mathematical formula(latex), \r\n\r\nyou can use `TextMobject` or `TexMobject`.\r\n\r\nYou can create a text in manim like:\r\n```\r\nfrom manimlib.imports import *\r\n\r\nclass Demo(Scene):\r\n    def construct(self):\r\n        text = Text('Hello, world!')\r\n        self.play(Write(text))\r\n```\r\n\r\n![introduction](https://user-images.githubusercontent.com/47266984/62842441-e742f080-bce4-11e9-867f-df340d4351a0.png)\r\n\r\n# Features\r\n\r\n## Params:\r\n\r\n### text\r\nUnlike `TextMobject`, `Text` only receive one `str`.\r\n\r\nWhen there is only one line, the space(`' '`) in front or back will be ignored.\r\n\r\n`'\\t'` is not supported.\r\n\r\n### color\r\n`text = Text('Hello', color=BLUE)`\r\n\r\n![color](https://user-images.githubusercontent.com/47266984/62842460-0a6da000-bce5-11e9-9f88-6d8d74ad8041.png)\r\n\r\n`color` defined in constants.py or a `str` like `'#FFFFFF'`, default is `WHITE`\r\n\r\n### t2c (text2color)\r\n`text = Text('Hello, world!', t2c={'world':BLUE})`\r\n\r\n![t2c](https://user-images.githubusercontent.com/47266984/62842523-5d475780-bce5-11e9-9b8d-31168ba27f65.png)\r\n\r\na `dict` like `{'text':color}` or Accurate mode\r\n\r\n### gradient\r\n`text = Text('Hello', gradient=(BLUE, GREEN))`\r\n\r\n![gradient](https://user-images.githubusercontent.com/47266984/62842527-659f9280-bce5-11e9-8aaa-79560690d633.png)\r\n\r\na `tuple` like `(color1, color2, color3, ...)`\r\n\r\n### t2g (text2gradient)\r\n`text = Text('Hello, world!', t2g={'world':(BLUE, GREEN)})`\r\n\r\n![t2g](https://user-images.githubusercontent.com/47266984/62842552-8c5dc900-bce5-11e9-87e5-8ea5c4d3448f.png)\r\n\r\na `dict` like `{'text':gradient}` or Accurate mode\r\n\r\n### font\r\n`text = Text('Hello', font='Source Han Sans')`\r\n\r\n![font](https://user-images.githubusercontent.com/47266984/62842559-98e22180-bce5-11e9-9b5c-a41b04efcc7f.png)\r\n\r\na `str`, the name of font like `'Source Han Sans'`, default is `CONFIG['font']`, defined in constants.py\r\n\r\nBe sure you have the font installed!\r\n\r\n### t2f (text2font)\r\n`text = Text('Hello, world!', t2f={'world':'Forte'})`\r\n\r\n![t2f](https://user-images.githubusercontent.com/47266984/62842574-a8fa0100-bce5-11e9-9980-32332e3f6e92.png)\r\n\r\na `dict` like `{'text':font}` or Accurate mode\r\n\r\nBe sure you have the font installed!\r\n\r\n### slant\r\n`text = Text('Hello', slant=ITALIC)`\r\n\r\n![slant](https://user-images.githubusercontent.com/47266984/62842580-b0b9a580-bce5-11e9-8bd3-06ad0c7a9bbc.png)\r\n\r\n`NORMAL` or `ITALIC`, default is `NORMAL`, defined in constants.py(a `str` actually)\r\n\r\n### t2s (text2slant)\r\n`text = Text('Hello, world!', t2s={'world':ITALIC})`\r\n\r\n![t2s](https://user-images.githubusercontent.com/47266984/62842584-b616f000-bce5-11e9-84cf-9aaeb2188a87.png)\r\n\r\na `dict` like `{'text':slant}` or Accurate mode\r\n\r\n### weight\r\n`text = Text('Hello', weight=BOLD)`\r\n\r\n![weight](https://user-images.githubusercontent.com/47266984/62842593-be6f2b00-bce5-11e9-9c01-4bd7637b65a4.png)\r\n\r\n`NORMAL` or `BOLD`, default is `NORMAL`, defined in constants.py(a `str` actually)\r\n\r\nother...\r\n\r\n### t2w (text2weight)\r\n`text = Text('Hello, world!', t2w={'world':BOLD})`\r\n\r\n![t2w](https://user-images.githubusercontent.com/47266984/62842598-c4fda280-bce5-11e9-8259-402b71b78dab.png)\r\n\r\na `dict` like `{'text':weight}` or Accurate mode\r\n\r\n### size\r\n`text = Text('Hello', size=5)`\r\n\r\n![size](https://user-images.githubusercontent.com/47266984/62842605-c929c000-bce5-11e9-8ae6-7542d129165b.png)\r\n\r\na number, better larger than 0.1(due to anti-aliasing), irrelevant with MUnit, default is `CONFIG['size']` \r\n\r\n### lsh (line_spacing_height)\r\n`text = Text('Hello\\nWorld', lsh=1.5)`\r\n\r\n![lsh](https://user-images.githubusercontent.com/47266984/62842611-cf1fa100-bce5-11e9-9831-dcf23a5021b3.png)\r\n\r\na number, better larger than 0.1(due to anti-aliasing), irrelevant with MUnit, default is equal with size\r\n\r\n### Accurate mode\r\n```\r\ntext = Text(\r\n    'Google', \r\n    t2c={\r\n        '[:1]':'#3174f0', '[1:2]':'#e53125', \r\n        '[2:3]':'#fbb003', '[3:4]':'#3174f0', \r\n        '[4:5]':'#269a43', '[5:]':'#e53125',\r\n    }\r\n)\r\n```\r\n\r\n![accurate_mode](https://user-images.githubusercontent.com/47266984/62842622-e3639e00-bce5-11e9-9eae-e9c775bf94b3.png)\r\n\r\nThis will help you to choose a specific text just like slicing\r\n\r\n### Mobject params:\r\nlike fill_color, fill_opacity, stroke_color, stroke_width\r\n\r\n## Functions\r\n`text = Text('Hello, world!')`\r\n\r\n### set_color (Mobject function)\r\n\r\n`text.set_color(BLUE)`\r\n\r\n![set_color_1](https://user-images.githubusercontent.com/47266984/62842630-eced0600-bce5-11e9-872d-d0d7101e0abe.png)\r\n\r\nor\r\n\r\n`text[7:12].set_color(BLUE)`\r\n\r\n![set_color_2](https://user-images.githubusercontent.com/47266984/62842634-f24a5080-bce5-11e9-97bd-bc91ba9221c7.png)\r\n\r\n### set_color_by_gradient (Mobject function)\r\n\r\n`text.set_color_by_gradient(BLUE, GREEN)`\r\n\r\n![set_color_by_gradient_1](https://user-images.githubusercontent.com/47266984/62842640-fc6c4f00-bce5-11e9-9166-636cd28ccf1f.png)\r\n\r\nor\r\n\r\n`text[7:12].set_color_by_gradient(BLUE, GREEN)`\r\n\r\n![set_color_by_gradient_2](https://user-images.githubusercontent.com/47266984/62842641-00986c80-bce6-11e9-816b-9a2b31336a41.png)\r\n\r\n### set_color_by_t2c\r\n`text.set_color_by_t2c({'world':BLUE})`\r\n\r\n![set_color_by_t2c](https://user-images.githubusercontent.com/47266984/62842646-05f5b700-bce6-11e9-9255-0f427ade8269.png)\r\n\r\n### set_color_by_t2g\r\n`text.set_color_by_t2g({'world':(BLUE, GREEN)})`\r\n![set_color_by_t2g](https://user-images.githubusercontent.com/47266984/62842650-0c842e80-bce6-11e9-8073-53e5bf27c6fe.png)\r\n\r\n## UTF-8\r\n```\r\nfrom manimlib.imports import *\r\n\r\nscript = '''\r\nHello\r\n\u4f60\u597d\r\n\u3053\u3093\u306b\u3061\u306f\r\n\uc548\ub155\ud558\uc138\uc694\r\n'''\r\n\r\nclass Demo(Scene):\r\n    def construct(self):\r\n        text = Text(script, font='Source Han Sans')\r\n        self.play(Write(text))\r\n```\r\n![utf-8](https://user-images.githubusercontent.com/47266984/62842747-ddba8800-bce6-11e9-84bd-c633ad1d7c4d.png)\r\n\r\nBe sure you have the font that supports those languages!",
        "comments": 16
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-08-06T05:23:35Z",
        "closed_at": "2019-08-16T07:34:01Z",
        "merged_at": "2019-08-16T07:34:01Z",
        "body": "This solves #444\r\n\r\nI never tested this pull request, but I had this error after installing from pip and running the `manim` script:\r\n`ModuleNotFoundError: No module named 'readline'`\r\n\r\nI then ran:\r\n`py -m pip install pyreadline`\r\n\r\nAnd got this:\r\n... `Successfully installed pyreadline-2.1`\r\n\r\nAnd now `manim` prints the help message instead of the above error.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-08-03T17:53:51Z",
        "closed_at": "2019-08-16T07:34:39Z",
        "merged_at": "2019-08-16T07:34:39Z",
        "body": "updated pycairo version for windows\r\n\r\nThanks for contributing to manim!\r\n\r\n**Please ensure that your pull request works with the latest version of manim.**\r\nYou should also include:\r\n\r\n1. The motivation for making this change (or link the relevant issues)\r\n2. How you tested the new behavior (e.g. a minimal working example, before/after\r\nscreenshots, gifs, commands, etc.) This is rather informal at the moment, but\r\nthe goal is to show us how you know the pull request works as intended.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 137,
        "deletions": 1,
        "changed_files": 5,
        "created_at": "2019-08-02T01:42:39Z",
        "closed_at": "2019-08-16T13:05:31Z",
        "merged_at": null,
        "body": "Linux and Mac: `subprocess.call([\"rm\", sound_file_path])`\r\nWindows: `os.remove(sound_file_path)`\r\n\r\nBut, this could works in the three OS?",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2019-08-01T13:45:16Z",
        "closed_at": "2019-08-16T07:37:41Z",
        "merged_at": "2019-08-16T07:37:41Z",
        "body": "Simple fix for no longer available `pyreadline` package. Installed via `pip`.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-07-26T08:53:50Z",
        "closed_at": "2019-07-29T23:53:18Z",
        "merged_at": "2019-07-29T23:53:18Z",
        "body": "This is a compromise solution because this problem is caused by windows its own.\r\nYou can see this problem in [here](https://github.com/tqdm/tqdm/issues/454).\r\nThe problem picture:\r\n<img width=\"665\" alt=\"problem\" src=\"https://user-images.githubusercontent.com/47266984/61939455-e2ccc700-afc5-11e9-91c0-c5e1c537e0ce.png\">\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 28,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2019-07-21T15:01:39Z",
        "closed_at": "2019-07-26T05:31:15Z",
        "merged_at": null,
        "body": "I used pycairo to generate some svgs and found that manim couldn't parse those svgs well.\r\nThe svgs I used(Btw, this svg can be opened by chrome correctly):\r\n```\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"390pt\" height=\"60pt\" viewBox=\"0 0 390 60\" version=\"1.1\">\r\n<defs>\r\n<g>\r\n<symbol overflow=\"visible\" id=\"glyph0-1\">\r\n<path style=\"stroke:none;\" d=\"M 20.566406 -13.046875 C 20.566406 -11.820313 20.46875 -10.648438 20.28125 -9.53125 C 20.089844 -8.410156 19.789063 -7.367188 19.375 -6.40625 C 18.957031 -5.4375 18.417969 -4.5625 17.753906 -3.777344 C 17.089844 -2.988281 16.273438 -2.316406 15.3125 -1.757813 C 14.34375 -1.195313 13.226563 -0.761719 11.953125 -0.457031 C 10.675781 -0.152344 9.222656 0 7.597656 0 L 2.128906 0 L 2.128906 -25.527344 L 8.710938 -25.527344 C 12.691406 -25.523438 15.664063 -24.496094 17.625 -22.449219 C 19.585938 -20.394531 20.566406 -17.261719 20.566406 -13.046875 Z M 16.914063 -12.792969 C 16.910156 -14.597656 16.742188 -16.128906 16.40625 -17.382813 C 16.066406 -18.628906 15.550781 -19.636719 14.863281 -20.410156 C 14.171875 -21.175781 13.304688 -21.734375 12.265625 -22.078125 C 11.21875 -22.421875 9.996094 -22.59375 8.59375 -22.597656 L 5.605469 -22.597656 L 5.605469 -3.007813 L 8.203125 -3.007813 C 14.007813 -3.003906 16.910156 -6.265625 16.914063 -12.792969 Z M 16.914063 -12.792969 \"/>\r\n</symbol>\r\n</g>\r\n</defs>\r\n<g style=\"fill:rgb(0%,0%,0%);fill-opacity:1;\">\r\n  <use xlink:href=\"#glyph0-1\" x=\"10\" y=\"50\"/>\r\n</g>\r\n</svg>\r\n```\r\nThe error is:\r\n`\\UserWarning: glyph0-1 not recognized  warnings.warn(\"%s not recognized\" % ref)`\r\nI think is because manim didn't consider <symbol> and the situation \r\nthat <defs>'s childNodes don't have 'id'(the chidNodes' childNodes have 'id').",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-07-19T19:23:38Z",
        "closed_at": "2019-07-20T21:14:01Z",
        "merged_at": "2019-07-20T21:14:01Z",
        "body": "MiKTeX hasn't been working correctly on macOS, but MacTeX works. ",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 9,
        "changed_files": 1,
        "created_at": "2019-07-18T01:02:00Z",
        "closed_at": "2019-07-20T22:55:05Z",
        "merged_at": null,
        "body": "manual wheel install is no longer needed",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 23,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-07-12T13:20:26Z",
        "closed_at": "2019-07-14T05:28:00Z",
        "merged_at": "2019-07-14T05:28:00Z",
        "body": "Related #629",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-07-12T00:25:10Z",
        "closed_at": "2021-02-04T00:46:08Z",
        "merged_at": null,
        "body": "The installation guide for linux is half-way. It doesnot give the main thing that python3 version should be 3.7 for the manim software to work . It took almost aday for me figureout that. So,I added some commands to complete the installation guide .",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-07-10T17:21:45Z",
        "closed_at": "2019-07-10T21:11:20Z",
        "merged_at": "2019-07-10T21:11:20Z",
        "body": "I think the documentation link  in the readme is outdated. ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-07-09T10:52:40Z",
        "closed_at": "2019-07-20T21:13:24Z",
        "merged_at": "2019-07-20T21:13:24Z",
        "body": "Relevant issues: #627",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2019-07-08T06:05:40Z",
        "closed_at": "2019-07-14T05:43:34Z",
        "merged_at": null,
        "body": "I added more detail to the making_a_scene file for the documentation. No change to manimlib so it should still be just as functional as it was.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-07-07T14:07:01Z",
        "closed_at": "2021-02-04T00:45:13Z",
        "merged_at": null,
        "body": "A minor pull request on visual of README.\r\n\r\nBefore: \r\n![image](https://user-images.githubusercontent.com/31789326/60769523-1620e200-a0fb-11e9-93c4-f11776b22a07.png)\r\n\r\nAfter:\r\n![image](https://user-images.githubusercontent.com/31789326/60769530-1de08680-a0fb-11e9-898c-9ae2073a586a.png)\r\n\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 36,
        "deletions": 36,
        "changed_files": 4,
        "created_at": "2019-07-04T19:32:45Z",
        "closed_at": "2021-02-04T00:44:26Z",
        "merged_at": null,
        "body": "Updated mnist_loader.py to Py3.7, and added very basic instructions to acquiring the files containing text data, replacing a directory link to a file on Sanderson's Computer.\r\n\r\nUpdated playground.py to Py3.7, and uncommitted some test code, mostly for research purposes, but it appears to work.\r\n\r\nUpdated network.py and part1.py to Py3.7, sufficiently that nn/part1.py/PreviewMNistNetwork compiled and rendered successfully. Little to no other work was done on part1.py\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 28237,
        "deletions": 26715,
        "changed_files": 172,
        "created_at": "2019-07-01T11:02:20Z",
        "closed_at": "2021-02-04T00:42:08Z",
        "merged_at": null,
        "body": "ran `autopep8 --in-place --recursive .`\r\n\r\n# Motivation\r\nAll code should be formated consistently and in acordence to [PEP8](https://www.python.org/dev/peps/pep-0008/)\r\n\r\n# Testing\r\nNo semantic code changes",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 7967,
        "deletions": 467,
        "changed_files": 41,
        "created_at": "2019-06-29T22:22:29Z",
        "closed_at": "2019-07-25T03:38:49Z",
        "merged_at": "2019-07-25T03:38:49Z",
        "body": "Final scenes for the Fourier Series video",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 251,
        "deletions": 18,
        "changed_files": 9,
        "created_at": "2019-06-28T00:23:31Z",
        "closed_at": "2021-07-18T03:08:11Z",
        "merged_at": null,
        "body": "The modifications made here are all related to including a new add-on API for Manim. There are a lot of features that could make Manim more useful, but many of those will be quite niche (such as live streaming support, PowerPoint export, timestamps on exported videos). Instead of bloating the Manim with all of these niche features, add-ons can be created and released separately from Manim. The user can decide which additional features they need and download the relevant add-ons.\r\n\r\nThe API is not currently documented, because I don't want to push the API and then have to make a bunch of breaking changes immediately after. If you have any questions, you can comment on this thread, shoot me an email, or message me in the Manim Discord.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-06-19T04:31:31Z",
        "closed_at": "2021-02-04T00:39:28Z",
        "merged_at": null,
        "body": "\"specific_patrons\" misspelt on line 105",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2019-06-18T14:04:53Z",
        "closed_at": "2019-06-20T20:28:00Z",
        "merged_at": null,
        "body": "There is some error in the instruction of how to run manim in Docker.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-06-17T06:41:03Z",
        "closed_at": "2021-02-04T00:38:33Z",
        "merged_at": null,
        "body": "fix for pycairo error based on https://github.com/mesonbuild/meson/issues/2273#issuecomment-420412230\r\n\r\nThanks for contributing to manim!\r\n\r\n**Please ensure that your pull request works with the latest version of manim.**\r\nYou should also include:\r\n\r\n1. The motivation for making this change (or link the relevant issues)\r\n2. How you tested the new behavior (e.g. a minimal working example, before/after\r\nscreenshots, gifs, commands, etc.) This is rather informal at the moment, but\r\nthe goal is to show us how you know the pull request works as intended.\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-06-16T20:49:08Z",
        "closed_at": "2019-06-18T07:19:41Z",
        "merged_at": "2019-06-18T07:19:41Z",
        "body": "__sudo: required__ no longer is...  [Travis are now recommending removing the __sudo__ tag](https://blog.travis-ci.com/2018-11-19-required-linux-infrastructure-migration).\r\n\r\n\"_If you currently specify __sudo:__ in your __.travis.yml__, we recommend removing that configuration_\"\r\n\r\nThanks for contributing to manim!\r\n\r\n**Please ensure that your pull request works with the latest version of manim.**\r\nYou should also include:\r\n\r\n1. The motivation for making this change (or link the relevant issues)\r\n2. How you tested the new behavior (e.g. a minimal working example, before/after\r\nscreenshots, gifs, commands, etc.) This is rather informal at the moment, but\r\nthe goal is to show us how you know the pull request works as intended.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 91,
        "deletions": 70,
        "changed_files": 2,
        "created_at": "2019-06-16T17:16:32Z",
        "closed_at": "2019-06-20T06:18:09Z",
        "merged_at": null,
        "body": "Some people in the manim Discord server pointed out that the readme contained a little too much information. To de-clutter it, I suggest that the installation procedures be moved out of the readme and into their own file.\r\n\r\nThere also a few other minor changes, such as changing every reference of ``python3`` and ``pip3`` to simply ``python`` and ``pip``.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2019-06-15T04:51:03Z",
        "closed_at": "2019-06-15T07:09:33Z",
        "merged_at": "2019-06-15T07:09:33Z",
        "body": "This pull request intends to update the docs. The link to Todd Zimmerman's tutorial is broken, this PR fixes that broken link.\r\n\r\nNote that this PR is likely not ready to merge. Reading the updated tutorial it seems to have comprehensive changes, but I can't find the previous tutorial so I can't say what changed and I don't know what's up to date and what's become outdated since the January 2019 publication. I'm not confident the text describing this tutorial is still accurate, but I'm not sure how to correctly change that description.\r\n\r\n>Todd Zimmerman put together [a very nice tutorial](https://talkingphysics.wordpress.com/2018/06/11/learning-how-to-animate-videos-using-%60%60manim%60%60-series-a-journey/) on getting started with `manim`, but is unfortunately outdated. It\u2019s still useful for understanding how `manim` is used, but the examples won\u2019t run on the latest version of `manim`.\r\n\r\nTesting: I haven't tested this as I'm not sure how to build the docs locally.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 146,
        "deletions": 2,
        "changed_files": 8,
        "created_at": "2019-06-14T05:49:07Z",
        "closed_at": "2021-02-04T00:37:56Z",
        "merged_at": null,
        "body": "New animations\r\n\r\nCreation:\r\n* Write\r\n* DrawBorderThenFill\r\n* ShowCreation\r\n* GrowArrow\r\n\r\nIndication:\r\n* FocusOn\r\n* Indicate",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 19,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2019-06-14T01:01:06Z",
        "closed_at": "2019-06-14T03:28:36Z",
        "merged_at": null,
        "body": "This is only a test of sphinx, you can delete it\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2019-06-11T21:02:59Z",
        "closed_at": "2019-06-13T22:17:52Z",
        "merged_at": null,
        "body": "Thanks for contributing to manim!\r\n\r\n**Please ensure that your pull request works with the latest version of manim.**\r\nYou should also include:\r\n\r\n1. The motivation for making this change (or link the relevant issues)\r\n\r\nMotivation: using the `set_color` function would change both the stroke and fill color, which is not always convenient (one may wish to change one but not the other).\r\n\r\n2. How you tested the new behavior (e.g. a minimal working example, before/after\r\nscreenshots, gifs, commands, etc.) This is rather informal at the moment, but\r\nthe goal is to show us how you know the pull request works as intended.\r\n\r\nIn this case, if an argument is not provided, the color is simply not updated.",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 17,
        "deletions": 7,
        "changed_files": 3,
        "created_at": "2019-06-11T06:00:40Z",
        "closed_at": "2019-06-19T21:46:34Z",
        "merged_at": "2019-06-19T21:46:34Z",
        "body": "Env Var used in the compose.yml is INPUT_DIR and OUTPUT_DIR\r\n\r\nClarify the meaning of both variables and output message.\r\nNote on -p not working.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 179,
        "deletions": 0,
        "changed_files": 6,
        "created_at": "2019-06-10T21:41:20Z",
        "closed_at": "2019-06-15T06:15:02Z",
        "merged_at": "2019-06-15T06:15:02Z",
        "body": "Update index\r\nAdd 4 assets, one of which is an image\r\n\r\nImage uses width 700\r\nVideos uses 700x394\r\nThose dimension are similar to how content is laid out\r\nin sphinx",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 65,
        "deletions": 21,
        "changed_files": 2,
        "created_at": "2019-06-09T20:23:19Z",
        "closed_at": "2019-06-13T07:48:16Z",
        "merged_at": "2019-06-13T07:48:16Z",
        "body": "Add an overview of TipableVMobject's functionality and a few comments, as well as grouping some methods by functionality (roughly).\r\n---------------------------------------------\r\n\r\nJust a bit of documentation :) I'm trying to go through manim's source code and see how it all fits together.\r\n\r\nAs you'd expect, given that I'd only added a few multi-line comments and grouped a few methods together, the scenes in example_scenes.py rendered correctly w/o any dramas.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-06-08T19:19:13Z",
        "closed_at": "2019-06-08T22:33:14Z",
        "merged_at": "2019-06-08T22:33:14Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 97,
        "deletions": 92,
        "changed_files": 2,
        "created_at": "2019-06-08T05:38:25Z",
        "closed_at": "2019-06-08T23:37:54Z",
        "merged_at": "2019-06-08T23:37:54Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 164,
        "deletions": 1,
        "changed_files": 13,
        "created_at": "2019-06-04T18:27:06Z",
        "closed_at": "2019-06-05T03:38:16Z",
        "merged_at": "2019-06-05T03:38:16Z",
        "body": "Animation documentation is not yet complete.\r\nAsset folder contains renders from code snipples.\r\n\r\nUpdate constants.rst to include a ref tag\r\nUpdate index to include the animation doc\r\n\r\nThere is no official policy for video media. I created a asset folder and throw some examples in. \r\nWhile linking youtube video do work, I think that is quite inconvenient for individual examples. ",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 19,
        "deletions": 12,
        "changed_files": 4,
        "created_at": "2019-06-02T23:28:08Z",
        "closed_at": "2019-06-03T01:58:34Z",
        "merged_at": "2019-06-03T01:58:34Z",
        "body": "The dockerfile now installs manim directly into the container, so there is no need to bind mount the library when running it. That said, you will still have to bind mount the places to read the source and write the video.\r\n1080p rendering is now possible by passing the `--high_quality` flag, and I changed the 1080p frame rate from 30fps to 60fps.",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 109,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2019-06-02T01:21:20Z",
        "closed_at": "2019-06-03T01:21:12Z",
        "merged_at": "2019-06-03T01:21:12Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-05-31T15:42:50Z",
        "closed_at": "2019-05-31T17:45:54Z",
        "merged_at": null,
        "body": "This reverts commit 17558a4bd516526ec7f7b20adfb9ed489f5d261e.\r\n\r\nBy using \">=\" in requirements, the package can get broken anytime. This has happened - on linux, 1.18.1 will be installed, resulting in this exception when using manim:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/soeren/anaconda3/envs/manim-gallery/lib/python3.7/site-packages/flask/cli.py\", line 236, in locate_app\r\n    __import__(module_name)\r\n  File \"/home/soeren/Projects/manim-gallery/src/app.py\", line 9, in <module>\r\n    from examples import hello_world\r\n  File \"/home/soeren/Projects/manim-gallery/src/examples/hello_world.py\", line 1, in <module>\r\n    from manimlib.imports import *\r\n  File \"/home/soeren/anaconda3/envs/manim-gallery/lib/python3.7/site-packages/manimlib/__init__.py\", line 3, in <module>\r\n    import manimlib.extract_scene\r\n  File \"/home/soeren/anaconda3/envs/manim-gallery/lib/python3.7/site-packages/manimlib/extract_scene.py\", line 9, in <module>\r\n    from manimlib.scene.scene import Scene\r\n  File \"/home/soeren/anaconda3/envs/manim-gallery/lib/python3.7/site-packages/manimlib/scene/scene.py\", line 11, in <module>\r\n    from manimlib.camera.camera import Camera\r\n  File \"/home/soeren/anaconda3/envs/manim-gallery/lib/python3.7/site-packages/manimlib/camera/camera.py\", line 9, in <module>\r\n    import cairo\r\n  File \"/home/soeren/anaconda3/envs/manim-gallery/lib/python3.7/site-packages/cairo/__init__.py\", line 1, in <module>\r\n    from ._cairo import *  # noqa: F401,F403\r\nImportError: /home/soeren/anaconda3/envs/manim-gallery/lib/python3.7/site-packages/cairo/_cairo.cpython-37m-x86_64-linux-gnu.so: undefined symbol: cairo_svg_surface_set_document_unit\r\n```",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2019-05-30T21:03:58Z",
        "closed_at": "2019-06-02T20:54:04Z",
        "merged_at": "2019-06-02T20:54:04Z",
        "body": "While reading the documentation, I noticed some headings ending with a colon, namely \"Contents:\" and some without any punctuation at the end.\nThe latter is the typographical rule, so I thought we should follow it consistently.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 57,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-05-28T20:32:09Z",
        "closed_at": "2019-05-29T02:08:36Z",
        "merged_at": "2019-05-29T02:08:36Z",
        "body": "The installation is done with a Windows8 machine,\r\nfurther testing are needed for windows10.\r\n\r\nfor example ``python`` will launch just fine, while doing so would result in a command not found in cmd.exe\r\n\r\nAlso I omitted the pypi installtion, for some reasons the pycairo whl install will be removed and force a recompile which #555 is supposed to fix? or just that pypi hasn't get updated yet ?\r\n\r\nInstalling collected packages: pycairo, manimlib\r\n  Found existing installation: pycairo 1.18.0\r\n    Uninstalling pycairo-1.18.0:\r\n      Successfully uninstalled pycairo-1.18.0\r\n  Running setup.py install for pycairo ... error\r\n    ERROR: Complete output from command 'c:\\users\\k\\appdata\\local\\programs\\python\\python37-32\\python.exe' -u -c 'import\r\nsetuptools, tokenize;__file__='\"'\"'C:\\\\Users\\\\K\\\\AppData\\\\Local\\\\Temp\\\\pip-install-302sb5sa\\\\pycairo\\\\setup.py'\"'\"';f=ge\r\ntattr(tokenize, '\"'\"'open'\"'\"', open)(__file__);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compi\r\nle(code, __file__, '\"'\"'exec'\"'\"'))' install --record 'C:\\Users\\K\\AppData\\Local\\Temp\\pip-record-6iskt02e\\install-record.\r\ntxt' --single-version-externally-managed --compile:\r\n    ERROR: running install\r\n    running build\r\n    running build_py\r\n    creating build\r\n    creating build\\lib.win32-3.7\r\n    creating build\\lib.win32-3.7\\cairo\r\n    copying cairo\\__init__.py -> build\\lib.win32-3.7\\cairo\r\n    copying cairo\\__init__.pyi -> build\\lib.win32-3.7\\cairo\r\n    copying cairo\\py.typed -> build\\lib.win32-3.7\\cairo\r\n    running build_ext\r\n    building 'cairo._cairo' extension\r\n    error: Microsoft Visual C++ 14.0 is required. Get it with \"Microsoft Visual C++ Build Tools\": https://visualstudio.m\r\nicrosoft.com/downloads/\r\n\r\n\r\nAnd the buildtool is quite large. manim runs fine using the repo though.\r\n ",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 38,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-05-28T05:54:36Z",
        "closed_at": "2019-05-28T08:09:01Z",
        "merged_at": "2019-05-28T08:09:01Z",
        "body": "The conf.py is broken when eulertour merged his doc fork to master. To test the doc add ``master_doc = \"index\"`` to conf.py  \r\n\r\nI have not test this on a fresh system, the installation process is inferred from my bash history.  ",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2019-05-28T01:39:20Z",
        "closed_at": "2019-05-30T03:25:52Z",
        "merged_at": "2019-05-30T03:25:52Z",
        "body": "The textcomp package was imported twice in the ctex template.\r\n\r\nSee issue #552 ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-05-27T20:47:54Z",
        "closed_at": "2019-05-27T22:52:42Z",
        "merged_at": "2019-05-27T22:52:42Z",
        "body": "Fixed a small typo.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2019-05-22T09:02:24Z",
        "closed_at": "2019-05-24T22:14:22Z",
        "merged_at": "2019-05-24T22:14:22Z",
        "body": "Improved the wording and presentation of the \"Using manim\" section in the README file.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-05-21T09:55:24Z",
        "closed_at": "2019-05-24T22:14:54Z",
        "merged_at": "2019-05-24T22:14:54Z",
        "body": "It is a good option to mention because the current default for a high quality 60fps video is 2560x1440.\r\nSo, if someone wants a 1920x1080 video, they should pass -r 1080.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-05-21T09:45:29Z",
        "closed_at": "2019-05-24T22:15:13Z",
        "merged_at": "2019-05-24T22:15:13Z",
        "body": "Changed `UdatersExample` to `UpdatersExample`.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-05-10T05:50:24Z",
        "closed_at": "2021-02-04T00:34:47Z",
        "merged_at": null,
        "body": "Added `input_file_path: './media/'` option in `CONFIG` dict\r\n\r\n`manim --livestream` was giving the following error:\r\n```\r\n(manimations) [jarwin:~/Documents/envs]$ manim --livestream\r\nMedia will be stored in ./media/. You can change this behavior by writing a different directory to media_dir.txt.\r\nTraceback (most recent call last):\r\n  File \"<console>\", line 1, in <module>\r\n  File \"/home/jarwin/Documents/envs/manimations/lib/python3.7/site-packages/manimlib/stream_starter.py\", line 38, in __new__                                                                                                                \r\n    return Scene(**kwargs)\r\n  File \"/home/jarwin/Documents/envs/manimations/lib/python3.7/site-packages/manimlib/scene/scene.py\", line 37, in __init__                                                                                                                  \r\n    self, **self.file_writer_config,\r\n  File \"/home/jarwin/Documents/envs/manimations/lib/python3.7/site-packages/manimlib/scene/scene_file_writer.py\", line 43, in __init__                                                                                                      \r\n    self.init_output_directories()\r\n  File \"/home/jarwin/Documents/envs/manimations/lib/python3.7/site-packages/manimlib/scene/scene_file_writer.py\", line 48, in init_output_directories                                                                                       \r\n    output_directory = self.output_directory or self.get_default_output_directory()\r\n  File \"/home/jarwin/Documents/envs/manimations/lib/python3.7/site-packages/manimlib/scene/scene_file_writer.py\", line 79, in get_default_output_directory                                                                                  \r\n    filename = os.path.basename(self.input_file_path)\r\nAttributeError: 'SceneFileWriter' object has no attribute 'input_file_path'\r\n\r\nManim is now running in streaming mode. Stream animations by passing\r\nthem to manim.play(), e.g.\r\n>>> c = Circle()\r\n>>> manim.play(ShowCreation(c))\r\n \r\n```\r\nTo avoid the AttributeError, `input_file_path` was defined at the `CONFIG` dictionary.\r\nAfter the changes to the same, no error was observed",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2019-05-08T05:41:10Z",
        "closed_at": "2019-05-09T06:27:32Z",
        "merged_at": "2019-05-09T06:27:32Z",
        "body": "`\\usepackage{textcomp}` was repeated on line 17 in tex_template.tex\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 24,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2019-05-08T05:11:55Z",
        "closed_at": "2019-06-02T19:13:23Z",
        "merged_at": "2019-06-02T19:13:23Z",
        "body": "I added the option to save as gif, however the mp4 or mov file still needs to be saved as well. I'll be trying to find a workaround, but despite that it works. When using the -i option a .gif file will be saved to the output directory",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 74,
        "deletions": 51,
        "changed_files": 7,
        "created_at": "2019-05-05T20:32:06Z",
        "closed_at": "2019-05-08T01:22:20Z",
        "merged_at": "2019-05-08T01:22:20Z",
        "body": "These changes enable **automatic publishing of manim** to http://pypi.org. You just need to set a **git tag** - that's it!\r\n\r\n```\r\ngit tag v0.1.4\r\ngit push --tags\r\n```\r\n(I've created some tags to test while developing this feature, so the version on PyPI is now on v0.1.3)\r\n\r\nIt does so by using the \"deploy\" task of travis. To demonstrate it, I've checked in the credentials of my PyPI account. It probably won't work after merging, since the credentials are encrypted for my travis account. Please, tell me your PyPI user accounts, so I'll give you full owner permissions for https://pypi.org/project/manimlib/ (@eulertour , @3b1b).\r\n\r\nAfter creating your accounts, please install travis-cli and login\r\n\r\n```\r\nsudo gem install travis\r\ntravis login\r\n```\r\n\r\nThen, change the travis section to add your credentials, by executing this inside the project directory:\r\n\r\n```\r\ntravis encrypt your-password-here --add deploy.password\r\n```\r\n\r\n(More exhaustive documentation at https://docs.travis-ci.com/user/deployment/pypi/)\r\n\r\nAlso note that I made some changes to `setup.py`. I'm using [pbr](https://docs.openstack.org/pbr/latest/). It automatically sets the right version of the package by looking at the git tags. Also, it uses the `requirements.txt` file, so we don't need to maintain a second dependency list inside `setup.py`\r\n\r\n<s>The big_ol_pile_of_manim_imports was moved in large parts to `manimlib/shortcuts.py`. The \"scripts\" section in setup.py is meant to be for scripts you can use from the command line and can't be used to import stuff from. So I needed to move the shortcuts inside the manimlib package. To maintain compatibility, I'm importing in the big_ol_pile everything from `manimlib/shortcuts.py`</s>\r\n\r\nJust saw that you created `manimlib/imports.py`. I'm removing my shortcuts, give me a second.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2019-05-01T08:44:36Z",
        "closed_at": "2019-05-01T15:12:42Z",
        "merged_at": "2019-05-01T15:12:42Z",
        "body": "The previous implementation of `get_default_output_directory()` used the relative path to the target module to create the output directory. This caused a problem when the target module resided in a \"sibling\" directory (e.g. `../sibling_dir/scenes.py`), because `get_default_output_directory()` would return an absolute path (`///sibling_dir/scenes`) and manim would attempt to write video there. This is not only unexpected but potentially dangerous, since files can be accidentally overwritten.\r\n\r\nWith this change, the default behavior is to save video in a directory under `VIDEO_DIR` named after the target module.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 25,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2019-04-30T19:47:25Z",
        "closed_at": "2019-05-01T00:25:46Z",
        "merged_at": "2019-05-01T00:25:46Z",
        "body": "Added an `environment.yml` file to create a conda environment. \r\nUpdated README instructions for creating the conda environment and running manim. \r\nThe conda environment was created. Its functioning was tested by running the `example_scenes.py`.  \r\n\r\nCloses #519",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 45,
        "deletions": 7,
        "changed_files": 3,
        "created_at": "2019-04-28T06:12:27Z",
        "closed_at": "2019-04-29T15:47:58Z",
        "merged_at": "2019-04-29T15:47:58Z",
        "body": "I want to package manim for my distribution and made changes here so that it's easier for me and others to package it.\r\n\r\nNow the project supports the standard Python packaging method of setuptools and we can install it using just `python3 -m pip install .` (even without a distribution packaging it). After installing we can use it in any directory - not just the source repository.\r\n\r\nI'm still wondering which are the files that people are supposed to run.\r\n`manim.py` is obviously the main one but does it allow access to all the functionality?\r\n`stage_scenes.py` looks like it does something useful, but I can't figure out exactly what. See: #515 \r\n`manimlib/extract_scene.py` has an `if __name__ == \"__main__\"` but that's broken because it doesn't call `main()` with all its parameters.\r\n\r\nIf you like the idea of it being packaged in distribution's package managers I'd also appreciate if you made a release on GitHub with a version number.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 28,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2019-04-27T15:53:52Z",
        "closed_at": "2019-04-27T17:37:14Z",
        "merged_at": "2019-04-27T17:37:14Z",
        "body": "Thanks for contributing to manim!\r\n\r\n**Please ensure that your pull request works with the latest version of manim.**\r\nYou should also include:\r\n\r\n1. The motivation for making this change (or link the relevant issues)\r\nI wanted to draw a parameterized curve whose 't' goes from -1 to plus infinity\r\n\r\n2. How you tested the new behavior (e.g. a minimal working example, before/after\r\nscreenshots, gifs, commands, etc.) This is rather informal at the moment, but\r\nthe goal is to show us how you know the pull request works as intended.\r\nyep",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-04-22T12:34:08Z",
        "closed_at": "2019-04-22T19:17:55Z",
        "merged_at": "2019-04-22T19:17:55Z",
        "body": "typo fix, I'm the github grammar nazi\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-04-21T10:06:46Z",
        "closed_at": "2019-04-21T21:27:58Z",
        "merged_at": "2019-04-21T21:27:58Z",
        "body": "Output: https://travis-ci.org/3b1b/manim/builds/522690304#L252",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 25,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-04-14T20:01:39Z",
        "closed_at": "2021-02-04T00:32:42Z",
        "merged_at": null,
        "body": "Hi,\r\n\r\nI added some installation guide for linux kernel based system...",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 5218,
        "deletions": 170,
        "changed_files": 25,
        "created_at": "2019-04-11T16:57:45Z",
        "closed_at": "2019-04-22T17:17:47Z",
        "merged_at": "2019-04-22T17:17:47Z",
        "body": "Latest updates while animating the heat equation video.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 25,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-04-10T06:41:26Z",
        "closed_at": "2019-04-11T04:28:52Z",
        "merged_at": null,
        "body": "Hi,\r\n1. I recently installed manim on Linux and I struggled a bit getting everything done right. I wrote a small installation guide for Linux to help newcomers to use your library.\r\n2. When everything was running. I uninstalled everything and registered every command I used. When I was over, I reinstalled everything following my tutorial and it's working:)\r\n\r\nBy the way, I love this project and particularly your youtube channel.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2019-04-08T00:29:08Z",
        "closed_at": "2019-04-08T03:52:19Z",
        "merged_at": null,
        "body": "Purely a mechanical change, should have no visible effect whatsoever. Tested by running a quick animation but I have no guarantee that it actually exercised this code.\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-04-04T23:42:44Z",
        "closed_at": "2019-04-06T18:58:56Z",
        "merged_at": "2019-04-06T18:58:56Z",
        "body": "Just a small README typo fix.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 18,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-04-04T22:13:14Z",
        "closed_at": "2019-04-06T18:58:42Z",
        "merged_at": "2019-04-06T18:58:42Z",
        "body": "Adds a section under \"Installation\" that details all the steps necessary to getting manim to run on Windows. Tested on several Windows 10 machines with unvarying success.\r\n\r\nMany users have found it difficult to get manim working properly on Windows machines (see #483, #444, #369, #359, #353, and countless closed issues). I may write a much more detailed blog post for using manim on Windows in the future.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-03-16T19:24:31Z",
        "closed_at": "2019-04-04T15:54:23Z",
        "merged_at": "2019-04-04T15:54:23Z",
        "body": "Using python3.x,  and there is a problem creating Matrix(). \r\nError:\r\n`TypeError: descriptor 'strip' requires a 'str' object but received a 'numpy.int64'`\r\nAnd it can be solved by modify manimlib/mobject/svg/tex_mobject.py.\r\n\r\nI've tested it, and it seems that it works for now.\r\n\r\nBesides, just ignore the other four Commits...",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2019-03-08T20:49:57Z",
        "closed_at": "2019-03-09T00:56:12Z",
        "merged_at": "2019-03-09T00:56:12Z",
        "body": "This fixes the alignment of the minus sign to negative numbers.\r\n\r\nThe `align_to` method was being called with an optional argument `alignment_vec` that did not do anything.\r\n\r\nThis is a before shot:\r\n\r\n![53990899-f6e35b00-40ee-11e9-907a-1c1f5eef36db](https://user-images.githubusercontent.com/395296/54055032-66218380-41b1-11e9-935e-f6a1de95f1e6.jpg)\r\n\r\nThis is an after shot:\r\n\r\n![Screen Shot 2019-03-08 at 2 46 38 PM](https://user-images.githubusercontent.com/395296/54055047-6d489180-41b1-11e9-830e-9a4eb7df654f.jpg)\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-03-07T21:37:58Z",
        "closed_at": "2019-03-07T23:43:56Z",
        "merged_at": "2019-03-07T23:43:56Z",
        "body": "When I run manim, the position of several things is slightly off.  This fixes the position of the y-axis label.  I am running Python 3.7.0\r\n\r\nThis following is a before shot.\r\n\r\n![yaxislabel](https://user-images.githubusercontent.com/395296/53990819-c4d1f900-40ee-11e9-8e91-209a96a4e065.jpg)\r\n\r\nThe following is an after shot:\r\n\r\n![yaxislabel_after](https://user-images.githubusercontent.com/395296/53990899-f6e35b00-40ee-11e9-907a-1c1f5eef36db.jpg)\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-03-07T16:00:05Z",
        "closed_at": "2019-03-07T23:44:17Z",
        "merged_at": "2019-03-07T23:44:17Z",
        "body": "The reason for this change is to fix a bug in `Ellipse` initialization. Currently it uses `self.width` for both `width and `height`, which creates a circle by  mistake.\r\n\r\nThe following code demonstrates this:\r\n\r\n```\r\n#!/usr/bin/env python\r\n\r\nfrom big_ol_pile_of_manim_imports import *\r\n\r\nclass DrawEllipse(Scene):\r\n    def construct(self):\r\n        ellipse = Ellipse()\r\n        self.play(ShowCreation(ellipse))\r\n```\r\n\r\nWhen run with the current code you get a circle, as shown in the first attachment:\r\n<img width=\"245\" alt=\"screen shot 2019-03-07 at 10 51 39 am\" src=\"https://user-images.githubusercontent.com/308058/53969818-778e6100-40c7-11e9-9bef-cb8e1199d469.png\">\r\n\r\nWhen run with the change you get a proper ellipse:\r\n<img width=\"316\" alt=\"screen shot 2019-03-07 at 10 51 01 am\" src=\"https://user-images.githubusercontent.com/308058/53969852-86751380-40c7-11e9-864d-5f8e654afce1.png\">\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-03-05T03:28:56Z",
        "closed_at": "2019-03-05T05:50:39Z",
        "merged_at": null,
        "body": "",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-02-26T23:49:17Z",
        "closed_at": "2019-02-27T00:52:30Z",
        "merged_at": "2019-02-27T00:52:30Z",
        "body": "1. The motivation for making this change (or link the relevant issues)\r\nI kept getting an error:\r\n`/Users/rodrigo_temp.castellon/Desktop/misc/pi-day/manim/media/videos/example_scenes/480p15/partial_movie_files/SquareToCircle/00000_temp.mp4: No such file or directory`\r\n\r\nNotice how this path doesn't actually exist since `rodrigo_temp.castellon` is not a valid directory, it used to be `rodrigo.castellon`.\r\n\r\nSo, the code used to produce the temp file path didn't take into account the possibility of paths including periods in other places other than right before the file extension.\r\n\r\n2. How you tested the new behavior (e.g. a minimal working example, before/after\r\nscreenshots, gifs, commands, etc.) This is rather informal at the moment, but\r\nthe goal is to show us how you know the pull request works as intended.\r\nIt completely resolved the issue I was having -- manim works perfectly now for me -- and seems to have no other side effects (it's just one line that changes).\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2019-02-24T18:11:02Z",
        "closed_at": "2019-03-03T20:17:22Z",
        "merged_at": "2019-03-03T20:17:22Z",
        "body": "This reverts the commit \"Cleaned Up Arrow Implementation (d489b5df5c77...), which introduced a bug in the CurvedArrow constructor (https://github.com/3b1b/manim/issues/446).  I had to fix one conflict in the imports, making sure to import both libraries rather than only one.\r\n\r\n**Please ensure that your pull request works with the latest version of manim.**\r\n\r\nDone with\r\ngit merge upstream/master\r\n\r\n\r\n1. The motivation for making this change (or link the relevant issues)\r\n\r\nhttps://github.com/3b1b/manim/issues/446\r\n\r\nSince I did not see an obvious fix and no one had addressed the bug in several days, I created a rollback now rather than risk more conflicts as other commits are made on top of the bug.\r\n\r\n2. How you tested the new behavior (e.g. a minimal working example, before/after\r\nscreenshots, gifs, commands, etc.) This is rather informal at the moment, but\r\nthe goal is to show us how you know the pull request works as intended.\r\n\r\nI used https://github.com/zimmermant/manim_tutorial/blob/master/manim_tutorial_P37.py\r\n\r\nBEFORE (at head):\r\npython3 -m manim manim_tutorial_P37.py MoreShapes -pl\r\n<snip>\r\nAttributeError: 'CurvedArrow' object has no attribute 'get_length'\r\n\r\nAFTER (after revert):\r\npython3 -m manim manim_tutorial_P37.py MoreShapes -pl\r\n<animation is generated>\r\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-02-13T08:39:10Z",
        "closed_at": "2019-02-13T19:14:07Z",
        "merged_at": "2019-02-13T19:14:07Z",
        "body": "When I tried to write some Chinese words I found the \"not defined\" error, and I fix it.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 401,
        "deletions": 609,
        "changed_files": 42,
        "created_at": "2019-02-12T00:10:11Z",
        "closed_at": "2019-02-12T02:07:27Z",
        "merged_at": "2019-02-12T02:07:27Z",
        "body": "Retiring ContinualAnimations, since all of these should be handled as mobject updaters.  The main issue here is that there are two ways of doing the same thing, and accounting for ContinualAnimations makes things slightly clunkier and more bug-prone.\r\n\r\nThe only thing left to do is remove/rewrite custom ContinualAnimations from old projects, and to clean up the implementation of Scene so as to not have to maintain a continual_animations list.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-01-27T23:38:20Z",
        "closed_at": "2019-02-12T17:39:41Z",
        "merged_at": null,
        "body": "Calling `ArcBetweenPoints(np.array([-1,0,0]), np.array([1,2,0]))`\r\nresults in:\r\n```\r\nnormal_vector /= distance\r\nTypeError: ufunc 'true_divide' output (typecode 'd')\r\nvided output parameter (typecode 'l') according to t\r\n```\r\n\r\nI was able to fix this by replacing `normal_vector /= distance` with `normal_vector = np.true_divide(normal_vector, distance)` on line 120 of mobject/geometry.py.\r\n\r\nIt works instead of causing the TypeError now:\r\n![Graph. Seems to work.](https://i.imgur.com/QV9FEF0.png)",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 822,
        "deletions": 135,
        "changed_files": 8,
        "created_at": "2019-01-22T23:43:22Z",
        "closed_at": "2019-01-25T06:38:39Z",
        "merged_at": "2019-01-25T06:38:39Z",
        "body": "Final animations for the pi-via-collisions solution video.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2019-01-18T12:43:44Z",
        "closed_at": "2019-01-18T17:02:10Z",
        "merged_at": "2019-01-18T17:02:10Z",
        "body": "Test case:\r\n```python\r\n#!/usr/bin/env python\r\n\r\nfrom big_ol_pile_of_manim_imports import *\r\n\r\nclass TestScene(Scene):\r\n    def construct(self):\r\n        axes = Axes()\r\n        self.play(ShowCreation(axes))\r\n```",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 18,
        "changed_files": 1,
        "created_at": "2019-01-16T10:14:18Z",
        "closed_at": "2019-01-18T17:03:18Z",
        "merged_at": "2019-01-18T17:03:18Z",
        "body": "The final image size should be much smaller. You can squish it down a bit more but the difference in size isn't that big.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2019-01-13T15:43:20Z",
        "closed_at": "2019-01-18T17:06:59Z",
        "merged_at": "2019-01-18T17:06:59Z",
        "body": "Issue: https://github.com/3b1b/manim/issues/401\r\nI use windows platform and when testing the example, ffmpeg cannot find 0.mp4 and the partial_movie_file_list.txt. Moreover, the partial files and directory are not deleted when finished.\r\n\r\nTesting:\r\nBefore:\r\nCommand: python -m manim example_scenes.py SquareToCircle\r\n![tim 20190113234228](https://user-images.githubusercontent.com/3760797/51087334-eb2d8500-178c-11e9-9a5b-10a78ecd7729.png)\r\n\r\nAfter: \r\nSame Command\r\n![tim 20190113234039](https://user-images.githubusercontent.com/3760797/51087311-ac97ca80-178c-11e9-94f3-99fc2419c886.png)\r\n\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-01-09T22:50:46Z",
        "closed_at": "2019-02-12T17:40:20Z",
        "merged_at": "2019-02-12T17:40:20Z",
        "body": "### Motivation\r\nI have faced issues where German \"umlauts\" (such as `\u00e4`, `\u00f6` or `\u00fc`) would not be encoded correctly, since the standard encoding on Windows is `Windows 1252` rather than `UTF-8`.\r\n\r\n### Fix\r\nThis PR changes the TeX file encoding to be explicitly `UTF-8`.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2019-01-09T16:31:12Z",
        "closed_at": "2019-01-09T19:02:10Z",
        "merged_at": "2019-01-09T19:02:10Z",
        "body": "Todd Zimmerman put together a newer tutorial for manim, that works on python 3.7. I thought that putting this on the README might be useful for those who want to get started, since it was the first thing I read about manim. \r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-01-02T14:52:32Z",
        "closed_at": "2019-01-03T21:42:44Z",
        "merged_at": "2019-01-03T21:42:43Z",
        "body": "The latest version of manim was giving a `NameError` in camera.py\r\n```\r\nTraceback (most recent call last):                                                                       \r\n  File \"/home/azazel/Documents/fossee/manim/manimlib/extract_scene.py\", line 138, in main                \r\n    handle_scene(SceneClass(**scene_kwargs), **config)                                                   \r\n  File \"/home/azazel/Documents/fossee/manim/manimlib/scene/scene.py\", line 78, in __init__               \r\n    self.construct(*self.construct_args)                                                                 \r\n  File \"/home/azazel/Documents/fossee/manim/holomorphic.py\", line 33, in construct                       \r\n    self.zoom_in_to_one_plus_half_i()                                                                    \r\n  File \"/home/azazel/Documents/fossee/manim/holomorphic.py\", line 152, in zoom_in_to_one_plus_half_i     \r\n    self.activate_zooming(animate=True)                                                                  \r\n  File \"/home/azazel/Documents/fossee/manim/manimlib/scene/zoomed_scene.py\", line 63, in activate_zooming\r\n    self.play(self.get_zoomed_display_pop_out_animation())                                               \r\n  File \"/home/azazel/Documents/fossee/manim/manimlib/scene/zoomed_scene.py\", line 82, in get_zoomed_displ\r\nay_pop_out_animation                                                                                     \r\n    display.save_state(use_deepcopy=True)                                                                \r\n  File \"/home/azazel/Documents/fossee/manim/manimlib/mobject/mobject.py\", line 664, in save_state        \r\n    self.saved_state = self.deepcopy()                                                                   \r\n  File \"/home/azazel/Documents/fossee/manim/manimlib/mobject/mobject.py\", line 136, in deepcopy          \r\n    return copy.deepcopy(self)                                                                           \r\n  File \"/usr/lib/python3.6/copy.py\", line 180, in deepcopy                                               \r\n    y = _reconstruct(x, memo, *rv)                                                                       \r\n  File \"/usr/lib/python3.6/copy.py\", line 280, in _reconstruct                                           \r\n    state = deepcopy(state, memo)                                                                        \r\n  File \"/usr/lib/python3.6/copy.py\", line 150, in deepcopy                                               \r\n    y = copier(x, memo)                                                                                  \r\n  File \"/usr/lib/python3.6/copy.py\", line 240, in _deepcopy_dict                                         \r\n    y[deepcopy(key, memo)] = deepcopy(value, memo)                                                       \r\n  File \"/usr/lib/python3.6/copy.py\", line 161, in deepcopy                                               \r\n    y = copier(memo)                                                                                     \r\n  File \"/home/azazel/Documents/fossee/manim/manimlib/camera/camera.py\", line 64, in __deepcopy__\r\n    return copy.copy(self)\r\nNameError: name 'copy' is not defined\r\n\r\n```\r\n\r\nSimple fix of adding `import copy` to camera.py did it. The error can be reproduced in commit `9dafb85` by rendering `active_projects/holomorphic.py`'s  `AnalyzeZSquared`. \r\n(OS: Ubuntu 18.04)",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 26,
        "deletions": 14,
        "changed_files": 2,
        "created_at": "2018-12-29T17:27:27Z",
        "closed_at": "2018-12-30T01:37:29Z",
        "merged_at": "2018-12-30T01:37:29Z",
        "body": "## Motivation\r\nPreviously, `manim` would fail when trying to open the finished video on Windows:\r\n\r\n```\r\nWriting to media\\videos\\..\\example_scenes\\480p15\\SquareToCircleTemp.mp4\r\nAnimation 0: ShowCreationSquare: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 15/15 [00:00<00:00, 87.73it/s]\r\nAnimation 1: TransformSquareToCircle: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 15/15 [00:00<00:00, 155.48it/s]\r\nAnimation 2: FadeOutSquareToSquare: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 15/15 [00:00<00:00, 149.59it/s]\r\nPlayed a total of 3 animations\r\n\r\nTraceback (most recent call last):\r\n  File \"D:\\git\\manim\\manimlib\\extract_scene.py\", line 128, in main\r\n    handle_scene(SceneClass(**scene_kwargs), **config)\r\n  File \"D:\\git\\manim\\manimlib\\extract_scene.py\", line 43, in handle_scene\r\n    sp.call(commands, stdout=FNULL, stderr=sp.STDOUT)\r\n  File \"C:\\Users\\fw\\scoop\\apps\\python\\current\\lib\\subprocess.py\", line 317, in call\r\n    with Popen(*popenargs, **kwargs) as p:\r\n  File \"C:\\Users\\fw\\scoop\\apps\\python\\current\\lib\\subprocess.py\", line 769, in __init__\r\n    restore_signals, start_new_session)\r\n  File \"C:\\Users\\fw\\scoop\\apps\\python\\current\\lib\\subprocess.py\", line 1172, in _execute_child\r\n    startupinfo)\r\nFileNotFoundError: [WinError 2] The system cannot find the file specified\r\n\r\nThe system cannot find the path specified.\r\n```\r\n\r\nThe (platform-dependent) [`os.startfile`](https://docs.python.org/3/library/os.html#os.startfile) function fixes this issue.\r\n\r\nFurthermore, the default `media` folder is not used by the repository, so it seemed reasonable to `gitignore` it (together with a few config files used by VSCode, a popular text editor).\r\n\r\n## Changes\r\n\r\nThis PR uses `os.startfile` (instead of a shell command) on Windows while leaving the mechanism on macOS and Linux unchanged.\r\n\r\nAdditionally, it provides a two new \"gitignores\" as mentioned above.\r\n\r\n## Testing\r\n\r\nI have successfully tested this branch on Windows 10 and macOS High Sierra using the `SquareToCircle` scene:\r\n\r\n```bash\r\npython3 -m manim example_scenes.py SquareToCircle -pl\r\n```",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 14,
        "changed_files": 4,
        "created_at": "2018-12-29T12:26:11Z",
        "closed_at": "2018-12-29T17:27:04Z",
        "merged_at": "2018-12-29T17:27:04Z",
        "body": "This `utils.tex_file_writing.get_null()` was added in #47 . It was unnecessary as `os.devnull` does the exact same thing for NT and POSIX.\r\n\r\nTwo places have typos that causes running them failling from SyntaxError in `old_projects`. One is the keyword arguments with parenthesis. The other is somewhere with an extra parenthesis. I followed how 3b1b uses `key=foo` rather than `key = foo` in `sort` functions of `submojects`.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-12-28T12:25:16Z",
        "closed_at": "2018-12-28T19:44:24Z",
        "merged_at": "2018-12-28T19:44:24Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2018-12-27T12:20:55Z",
        "closed_at": "2018-12-27T17:53:49Z",
        "merged_at": null,
        "body": "to be synchronized with the latest modification about manimlib forlder\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 341,
        "deletions": 272,
        "changed_files": 7,
        "created_at": "2018-12-23T18:53:01Z",
        "closed_at": "2018-12-23T20:54:08Z",
        "merged_at": "2018-12-23T20:54:08Z",
        "body": "This pull request handles a few housekeeping changes:\r\n1. Makes manim into a module, so it can be added to `PYTHONPATH` and run from anywhere with `python -m manim`\r\n2. Separates configuration, rendering, and constants into their own modules\r\n3. Adds the `--livestream` flag, which runs manim in streaming mode\r\n4. Replaces the `IS_LIVE_STREAMING`, `IS_STREAMING_TO_TWITCH`, and `TWITCH_STREAM_KEY` constants with flags",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-12-08T03:06:53Z",
        "closed_at": "2018-12-11T05:40:47Z",
        "merged_at": null,
        "body": "Add the shell script tag `sh` to the code block on line 46.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-11-28T22:09:05Z",
        "closed_at": "2018-11-29T04:32:38Z",
        "merged_at": null,
        "body": "The previous link appended `manim.readthedocs.io` to the github url.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-11-28T18:46:06Z",
        "closed_at": "2018-11-29T04:30:57Z",
        "merged_at": "2018-11-29T04:30:57Z",
        "body": "Otherwise GitHub sets the wrong prefix which results in:\r\nhttps://github.com/3b1b/manim/blob/master/manim.readthedocs.io",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2018-11-24T21:38:21Z",
        "closed_at": "2018-12-05T01:01:53Z",
        "merged_at": "2018-12-05T01:01:53Z",
        "body": "Some fonts (like mathpazo) produce svg files which use single scale-factor transform (like `transform=scale(1.3)`). Previously the behavior of this code was to throw an unpacking exception in the try block, which resulted in the font glyphs misrendering. \r\n\r\nI would think that the `about_point` should be `ORIGIN` for the [scale_x, scale_y, 1] block as well, but I only put that change in the `elif` clause so that the proposed change would be non-breaking.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2018-11-24T13:54:48Z",
        "closed_at": "2018-11-24T21:35:12Z",
        "merged_at": null,
        "body": "Some fonts (like mathpazo) result in svg files which use single scale-factor transform (like `transform=scale(1.3)`). Previously the behavior of this code was to throw an unpacking exception in that try block, which resulted in the font glyphs misrendering. \r\n\r\nI would think that the `about_point` should be `ORIGIN` for the `[scale_x, scale_y, 1]` block as well, but I only put that change in the `elif` clause so that the proposed change would be non-breaking.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-11-21T13:44:58Z",
        "closed_at": "2018-12-03T03:18:28Z",
        "merged_at": "2018-12-03T03:18:28Z",
        "body": "the numpy astype method seems to want the argument 'str' rather than 'string'",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-11-16T21:50:53Z",
        "closed_at": "2018-12-03T03:28:03Z",
        "merged_at": null,
        "body": "I have just modified your LaTeX template that is named `tex_template.tex` and added the following two packages:\r\n\r\n```\r\n\\usepackage{arabtex}\r\n\\usepackage{utf8}\r\n```\r\n\r\nAnd before the text you replace I set the encoding to `utf8`:\r\n\r\n```\r\n\\begin{document}\r\n\\setcode{utf8}\r\nYourTextHere\r\n\r\n\\end{document}\r\n```\r\n\r\nSo, now you can easily write in arabic as:\r\n\r\n```Python\r\narabic_text = TextMobject(\"\\<\u0627\u0644\u0633\u064e\u0644\u0627\u0645\u064f \u0639\u064e\u0644\u064a\u0643\u0645 \u0648\u0631\u064e\u062d\u0645\u0629\u064f \u0627\u0644\u0644\u0647 \u0648\u0628\u064e\u0631\u0643\u0627\u062a\u0647  >\")\r\n```",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-11-16T20:00:51Z",
        "closed_at": "2018-11-18T16:34:00Z",
        "merged_at": "2018-11-18T16:34:00Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 42,
        "changed_files": 1,
        "created_at": "2018-11-05T12:44:27Z",
        "closed_at": "2018-11-05T18:08:55Z",
        "merged_at": "2018-11-05T18:08:55Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 121,
        "deletions": 2,
        "changed_files": 6,
        "created_at": "2018-11-01T09:44:34Z",
        "closed_at": "2018-11-18T16:41:36Z",
        "merged_at": "2018-11-18T16:41:36Z",
        "body": "I have implemented a live streaming feature just like I stated in https://github.com/3b1b/manim/issues/335 and added a new section to the README.md.\r\n\r\nThis PR does not change any previous behavior. All the extra blocks that I have added checks for `IS_LIVE_STREAMING = True` condition which can be only changed from inside `constants.py` file.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2018-10-24T10:44:26Z",
        "closed_at": "2018-11-18T16:49:12Z",
        "merged_at": "2018-11-18T16:49:12Z",
        "body": "Basically before if I renamed the `manim` directory, the video can't be stored at the right place. Now this bug is fixed.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2018-10-15T21:24:02Z",
        "closed_at": "2021-07-18T03:07:34Z",
        "merged_at": null,
        "body": "Adds a new option to the constants.py, `TEX_FIX_SVG`. This is False by default, but can be enabled to use cairosvg to fix SVGs automatically. \r\n\r\nThis allows the use of some fonts and shapes that might otherwise be problematic, as per issue #329. ",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 24,
        "deletions": 23,
        "changed_files": 2,
        "created_at": "2018-10-14T18:48:11Z",
        "closed_at": "2019-04-02T01:07:29Z",
        "merged_at": "2019-04-02T01:07:29Z",
        "body": "Thank you for making this tool available to everyone. This is just a tiny thing, the `Dockerfile` can be simplified by removing two packages that are installed anyways. The apt package texlive-full already includes texlive-latex-base and texlive-fonts-extra, so they don't have to installed separately.",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 129,
        "deletions": 143,
        "changed_files": 28,
        "created_at": "2018-10-14T12:12:23Z",
        "closed_at": "2021-02-04T00:29:36Z",
        "merged_at": null,
        "body": "All neural network scenes should be working now on Python 3.7 (I tested about 80% of them).\r\n\r\nAlso fixed a few lines in some other projects.\r\n\r\nA few things that need to be checked:\r\n\r\n- [Changes to mobject.svg.tex_mobject.get_parts_by_tex method](https://github.com/rorik/manim/commit/802de194cbee1926c26434d3b61d4729645d09df#diff-56ab4ca0436da9da7ce94d8557ab647aR191), make sure this doesn't break anything else.\r\n- [This line which might not do the same](https://github.com/rorik/manim/commit/802de194cbee1926c26434d3b61d4729645d09df#diff-fed2a389a6547800df59c13b8126c971R564).\r\n- [Not sure if about_point is correct here](https://github.com/rorik/manim/commit/802de194cbee1926c26434d3b61d4729645d09df#diff-14e11afed910dadaad65fff00142faa0R2947).",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-10-05T03:41:04Z",
        "closed_at": "2018-10-05T16:19:23Z",
        "merged_at": "2018-10-05T16:19:23Z",
        "body": "Added line linking to guide to help new users edit their own Dockerfile, but without the link part...",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2018-10-01T22:08:26Z",
        "closed_at": "2018-10-05T01:24:22Z",
        "merged_at": "2018-10-05T01:24:22Z",
        "body": "PR #301 changed the role of Docker in this project to an interactive shell, which slightly changes instructions. Additionally, since it's interactive I added vim to its build to allow for some lightweight editing inside the environment.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 45,
        "deletions": 4,
        "changed_files": 4,
        "created_at": "2018-09-26T13:13:08Z",
        "closed_at": "2018-10-05T01:26:56Z",
        "merged_at": "2018-10-05T01:26:56Z",
        "body": "Add support for ctex.\r\n\r\n### Usage: \r\nChange TEX_USE_CTEX in constants.py to True.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 25,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2018-09-24T07:38:01Z",
        "closed_at": "2018-10-05T01:27:44Z",
        "merged_at": "2018-10-05T01:27:44Z",
        "body": "Fixes #284\r\n\r\nAnother attempt at #99 \r\n\r\nAdd [flake8](http://flake8.pycqa.org) tests to find Python syntax errors and undefined names.\r\n\r\n__E901,E999,F821,F822,F823__ are the \"_showstopper_\" flake8 issues that can halt the runtime with a SyntaxError, NameError, etc. Most other flake8 issues are merely \"style violations\" -- useful for readability but they do not effect runtime safety.\r\n* F821: undefined name `name`\r\n* F822: undefined name `name` in `__all__`\r\n* F823: local variable name referenced before assignment\r\n* E901: SyntaxError or IndentationError\r\n* E999: SyntaxError -- failed to compile a file into an Abstract Syntax Tree",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2018-09-24T06:44:08Z",
        "closed_at": "2018-10-05T01:28:12Z",
        "merged_at": "2018-10-05T01:28:12Z",
        "body": "__get_norm()__ is called on lines 259 and 265 but it is never imported or defined.\r\n\r\n[flake8](http://flake8.pycqa.org) testing of https://github.com/3b1b/manim on Python 3.7.0\r\n\r\n$ __flake8 . --count --select=E901,E999,F821,F822,F823 --show-source --statistics__\r\n```\r\n./old_projects/bell.py:222:38: E999 SyntaxError: invalid syntax\r\n            for here, x in (here1, 0), (here2, 4)\r\n                                     ^\r\n./old_projects/borsuk.py:217:11: E999 SyntaxError: invalid syntax\r\n         y=lambda m: m1.get\r\n          ^\r\n./old_projects/eoc/chapter6.py:399:35: E999 SyntaxError: invalid syntax\r\n                for i, j in (1, 0), (0, 1)\r\n                                  ^\r\n./old_projects/nn/network.py:258:16: F821 undefined name 'get_norm'\r\n        norm = get_norm(gradient)\r\n               ^\r\n./old_projects/nn/network.py:264:15: F821 undefined name 'get_norm'\r\n        print(get_norm(old_pre_sig_guess - pre_sig_guess))\r\n              ^\r\n3     E999 SyntaxError: invalid syntax\r\n2     F821 undefined name 'get_norm'\r\n5\r\n```",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 77,
        "changed_files": 2,
        "created_at": "2018-09-24T06:29:02Z",
        "closed_at": "2018-10-05T01:28:37Z",
        "merged_at": "2018-10-05T01:28:37Z",
        "body": "Fixes two of the problems below...\r\n\r\n[flake8](http://flake8.pycqa.org) testing of https://github.com/3b1b/manim on Python 3.7.0\r\n\r\n$ __flake8 . --count --select=E901,E999,F821,F822,F823 --show-source --statistics__\r\n```\r\n./old_projects/bell.py:222:38: E999 SyntaxError: invalid syntax\r\n            for here, x in (here1, 0), (here2, 4)\r\n                                     ^\r\n./old_projects/borsuk.py:217:11: E999 SyntaxError: invalid syntax\r\n         y=lambda m: m1.get\r\n          ^\r\n./old_projects/eoc/chapter6.py:399:35: E999 SyntaxError: invalid syntax\r\n                for i, j in (1, 0), (0, 1)\r\n                                  ^\r\n./old_projects/nn/network.py:258:16: F821 undefined name 'get_norm'\r\n        norm = get_norm(gradient)\r\n               ^\r\n./old_projects/nn/network.py:264:15: F821 undefined name 'get_norm'\r\n        print(get_norm(old_pre_sig_guess - pre_sig_guess))\r\n              ^\r\n3     E999 SyntaxError: invalid syntax\r\n2     F821 undefined name 'get_norm'\r\n5\r\n```",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2018-09-22T04:50:16Z",
        "closed_at": "2018-09-23T21:48:42Z",
        "merged_at": "2018-09-23T21:48:42Z",
        "body": "To avoid issues like #308",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 82,
        "deletions": 81,
        "changed_files": 39,
        "created_at": "2018-09-19T03:29:19Z",
        "closed_at": "2018-09-19T17:23:43Z",
        "merged_at": "2018-09-19T17:23:43Z",
        "body": "These changes would fix few(100+) scenes for python 3.x in both old_projects as well as active_projects directory",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 32,
        "deletions": 17,
        "changed_files": 1,
        "created_at": "2018-09-18T02:47:23Z",
        "closed_at": "2018-09-27T22:04:17Z",
        "merged_at": "2018-09-27T22:04:17Z",
        "body": "The current Dockerfile was written for python 2, which is no longer supported. This updates it for python 3.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 32,
        "deletions": 17,
        "changed_files": 1,
        "created_at": "2018-09-15T15:11:15Z",
        "closed_at": "2018-09-17T05:25:23Z",
        "merged_at": null,
        "body": "This is the Dockerfile from my fork, which contains all of the requirements for the python 3 version of manim.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 29,
        "changed_files": 1,
        "created_at": "2018-09-11T19:23:27Z",
        "closed_at": "2018-09-24T06:06:44Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-09-11T17:41:38Z",
        "closed_at": "2018-09-11T18:43:04Z",
        "merged_at": "2018-09-11T18:43:04Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2018-09-11T17:19:08Z",
        "closed_at": "2018-09-11T18:43:25Z",
        "merged_at": "2018-09-11T18:43:25Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-09-11T13:41:49Z",
        "closed_at": "2018-09-11T18:42:45Z",
        "merged_at": "2018-09-11T18:42:45Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-09-08T17:11:06Z",
        "closed_at": "2018-09-10T18:36:44Z",
        "merged_at": "2018-09-10T18:36:44Z",
        "body": "In accordance with Issue #281, this is simply a way to make color changing easier, especially for specific scenes. That said, I'm not sure if @3b1b wants this feature or not, especially since this can already be edited in configs for specific scenes. Nevertheless, it provides a similar method as transparency.\r\n\r\nThis edits the camera config in the same way as the resolution argument or transparency flag. Inputs can either be strings, 3 digit hex strings, or 6 digit hex strings. In a Unix terminal the hex strings will have to be prepended with a '\\'.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 77,
        "changed_files": 3,
        "created_at": "2018-08-13T02:15:01Z",
        "closed_at": "2018-08-13T20:36:00Z",
        "merged_at": "2018-08-13T20:36:00Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 6593,
        "deletions": 2236,
        "changed_files": 17,
        "created_at": "2018-07-27T09:41:53Z",
        "closed_at": "2018-09-11T18:44:42Z",
        "merged_at": null,
        "body": "changes:-\r\n1. sometimes the hash of tex file comes out to be negative that causes some errors.\r\n2. the latex compiler is not working all the time, so pdflatex compiler option is added.\r\n3. fixed some typeos",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-07-27T00:19:35Z",
        "closed_at": "2018-08-16T13:17:08Z",
        "merged_at": null,
        "body": "Relative import was left in example_scenes.py after it had been removed from other files.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2018-07-15T21:17:26Z",
        "closed_at": "2018-07-16T19:37:19Z",
        "merged_at": "2018-07-16T19:37:19Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-07-11T20:19:17Z",
        "closed_at": "2018-09-07T11:10:02Z",
        "merged_at": null,
        "body": "__xrange()__ was removed in Python 3 in favor of __range()__.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-07-09T02:26:44Z",
        "closed_at": "2018-07-11T18:45:45Z",
        "merged_at": "2018-07-11T18:45:44Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-07-04T21:36:48Z",
        "closed_at": "2018-07-11T18:46:00Z",
        "merged_at": "2018-07-11T18:46:00Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-06-30T02:04:49Z",
        "closed_at": "2018-06-30T18:24:29Z",
        "merged_at": "2018-06-30T18:24:29Z",
        "body": "Small thing I noticed.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 773,
        "deletions": 698,
        "changed_files": 121,
        "created_at": "2018-06-02T13:01:29Z",
        "closed_at": "2018-07-11T18:39:27Z",
        "merged_at": "2018-07-11T18:39:27Z",
        "body": "Yet another shot at #183 and #189 \r\n\r\nSome minimal, \"safe\" changes to make the code syntax compatible with both Python 2 and Python 3.\r\n* Run __futurize --stage1 -w .__  # http://python-future.org/futurize_cheatsheet.html",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 33,
        "deletions": 12,
        "changed_files": 2,
        "created_at": "2018-05-24T19:04:49Z",
        "closed_at": "2018-07-11T18:48:50Z",
        "merged_at": "2018-07-11T18:48:50Z",
        "body": "This pull request adds an easy way to reconfigure the media directories:\r\n- You can have the environment variable MEDIA_DIR set, in which case it will use this and remember it\r\n- You can have already set once the MEDIA_DIR environment variable, in which case it will use the last set\r\n- Otherwise, it will defaults to a default directory.\r\nIn all cases, it will remember the choice and write it in a file (which is used in case you don't have the MEDIA_DIR variable set).",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 20,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2018-05-11T18:33:42Z",
        "closed_at": "2018-09-11T18:45:15Z",
        "merged_at": "2018-09-11T18:45:15Z",
        "body": "\u2026nsure what the underlying bug was",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 890,
        "deletions": 210,
        "changed_files": 19,
        "created_at": "2018-05-09T22:01:16Z",
        "closed_at": "2018-05-15T01:42:36Z",
        "merged_at": "2018-05-15T01:42:36Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1188,
        "deletions": 697,
        "changed_files": 5,
        "created_at": "2018-04-20T05:59:44Z",
        "closed_at": "2018-04-23T20:54:52Z",
        "merged_at": "2018-04-23T20:54:52Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 676,
        "deletions": 231,
        "changed_files": 6,
        "created_at": "2018-04-11T20:55:38Z",
        "closed_at": "2018-04-12T22:11:04Z",
        "merged_at": "2018-04-12T22:11:04Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1560,
        "deletions": 168,
        "changed_files": 12,
        "created_at": "2018-04-11T15:05:20Z",
        "closed_at": "2018-04-11T19:11:53Z",
        "merged_at": "2018-04-11T19:11:53Z",
        "body": "- added options to OpeningQuote\n- bugfix for GraphScene name conflict\n- Teacher can now also have another color",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 81,
        "deletions": 5,
        "changed_files": 4,
        "created_at": "2018-04-09T17:28:53Z",
        "closed_at": "2018-04-09T20:48:50Z",
        "merged_at": "2018-04-09T20:48:50Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2018-04-05T09:39:09Z",
        "closed_at": "2018-04-05T16:35:45Z",
        "merged_at": "2018-04-05T16:35:45Z",
        "body": "If one is under Linux, use the command `xdg-open` to open the generated video.\r\n\r\nThis PR fixes the Issue #103.\r\n\r\nIt is also potentially relative to Issue #185.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-04-05T08:45:35Z",
        "closed_at": "2018-04-05T16:36:02Z",
        "merged_at": "2018-04-05T16:36:02Z",
        "body": "All in the title.\r\n\r\nIf I don't install `opencv-python` under Ubuntu, I get the following error:\r\n```\r\n$ python extract_scene.py example_scenes.py SquareToCircle -pl\r\nTraceback (most recent call last):\r\n  File \"extract_scene.py\", line 266, in <module>\r\n    main()\r\n  File \"extract_scene.py\", line 223, in main\r\n    module = get_module(config[\"file\"])\r\n  File \"extract_scene.py\", line 219, in get_module\r\n    return get_module_posix(file_name)\r\n  File \"extract_scene.py\", line 213, in get_module_posix\r\n    last_module = imp.load_module(part, *load_args)\r\n  File \"/home/frozar/wk/manim/./example_scenes.py\", line 3, in <module>\r\n    from big_ol_pile_of_manim_imports import *\r\n  File \"/home/frozar/wk/manim/big_ol_pile_of_manim_imports.py\", line 66, in <module>\r\n    from scene.scene_from_video import *\r\n  File \"/home/frozar/wk/manim/scene/scene_from_video.py\", line 3, in <module>\r\n    import cv2\r\nImportError: No module named cv2\r\n```",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 733,
        "deletions": 663,
        "changed_files": 113,
        "created_at": "2018-04-04T17:31:49Z",
        "closed_at": "2018-06-02T13:03:19Z",
        "merged_at": null,
        "body": "Another shot at #183\r\n\r\nSome minimal, \"safe\" changes to make the code syntax compatible with both Python 2 and Python 3.\r\n* Run __futurize --stage1__ http://python-future.org/futurize_cheatsheet.html\r\n* ~~Adjust adjust some __lambda__ and __tuple__ expressions to be compatible with Python 3.~~\r\n\r\nFixes #182 and helps with  #128\r\n\r\n__Ready for review.__  Python 3 syntax compatibility does _not_ mean that the port is complete.  ",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 2008,
        "deletions": 2428,
        "changed_files": 118,
        "created_at": "2018-04-01T13:08:28Z",
        "closed_at": "2018-04-04T17:28:28Z",
        "merged_at": null,
        "body": "Some minimal, \"safe\" changes to make the code syntax compatible with both Python 2 and Python 3.\r\n* Run __futurize --stage1__ http://python-future.org/futurize_cheatsheet.html\r\n* Adjust adjust some __lambda__ and __tuple__ expressions to be compatible with Python 3.\r\n\r\nFixes #182 and helps with  #128\r\n\r\n__Ready for review.__  Python 3 syntax compatibility does _not_ mean that the port is complete.  ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 26,
        "deletions": 26,
        "changed_files": 1,
        "created_at": "2018-03-25T20:23:18Z",
        "closed_at": "2018-03-31T20:07:41Z",
        "merged_at": "2018-03-31T20:07:41Z",
        "body": "Previously, only one tip was kept as self.tip and was scaled properly. This meant the first part of the solutionw as to create a list of all tips.\r\n\r\nAfter this, the issue was that draw_at_end defaults to True, and is not preserved. So the list is now a tuple of the tip VMobject and its add_at_end property. Since these should be identifical except for position, everything that asked for a property from tip now asks for the same property from the first tip.\r\n\r\nThis isn't pretty, but it should resolve #123 .",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 29,
        "deletions": 5,
        "changed_files": 4,
        "created_at": "2018-03-11T23:54:59Z",
        "closed_at": "2018-06-02T17:43:18Z",
        "merged_at": null,
        "body": "This PR is a follow-up for #160 and contains of 2 parts:\r\n\r\n1) `.travis.yml` that's ready to be used for macOS CI, see https://travis-ci.org/vors/manim to get a sense of how it will look like (and also a proof that it works)\r\n2) Necessary changes to make the build in CI possible (put some reasonable-ish default value for `MEDIA_DIR`). I also opened an issue #161 to follow-up it with a better fix eventually.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-03-08T16:41:33Z",
        "closed_at": "2018-03-10T19:40:20Z",
        "merged_at": null,
        "body": "I needed to install quilt to make things work, so I think it belongs here.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 118,
        "deletions": 32,
        "changed_files": 1,
        "created_at": "2018-03-06T00:54:41Z",
        "closed_at": "2018-03-06T04:33:34Z",
        "merged_at": "2018-03-06T04:33:34Z",
        "body": "While this isn't perfect, it is a way to graph a 3D surface using square approximations. (Also apparently some linting got in, which I can change if necessary.)",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-03-04T05:55:07Z",
        "closed_at": "2018-03-06T03:36:36Z",
        "merged_at": "2018-03-06T03:36:36Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 259,
        "deletions": 55,
        "changed_files": 6,
        "created_at": "2018-02-26T19:50:22Z",
        "closed_at": "2018-02-27T00:23:51Z",
        "merged_at": "2018-02-27T00:23:51Z",
        "body": "Minor fix to camera.py, making SplitScreenCameras work again after some change to background handling made them crash. Fixed small bug in Arc, where end and start were swapped in adding tips. Allowed color arg to be interpreted as setting fill_color in TexMobjects.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1861,
        "deletions": 224,
        "changed_files": 11,
        "created_at": "2018-02-22T19:07:18Z",
        "closed_at": "2018-02-26T20:00:06Z",
        "merged_at": "2018-02-26T20:00:06Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 15,
        "deletions": 11,
        "changed_files": 1,
        "created_at": "2018-02-20T17:44:48Z",
        "closed_at": "2018-02-20T19:26:45Z",
        "merged_at": "2018-02-20T19:26:45Z",
        "body": "Fixed bug where AnimationGroups did not propagate configs correctly under update_config (in particular, this was a problem when nested AnimationGroups were initializing).\r\n\r\nFixed bug where AnimationGroups did not filter out empty animations correctly from their initialization of self.sub_anims (as they digested their configurations before doing this filtering).",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 38,
        "deletions": 30,
        "changed_files": 4,
        "created_at": "2018-02-19T22:34:50Z",
        "closed_at": "2018-02-20T01:25:41Z",
        "merged_at": "2018-02-20T01:25:41Z",
        "body": "Fixed error in Succession which resulted in incompletely drawn animations. Made behavior more intuitive when explicit filenames are provided with extensions already.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-02-16T14:12:21Z",
        "closed_at": "2018-03-31T20:05:03Z",
        "merged_at": "2018-03-31T20:05:03Z",
        "body": "",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 7,
        "changed_files": 3,
        "created_at": "2018-02-15T23:38:29Z",
        "closed_at": "2018-02-16T02:52:44Z",
        "merged_at": "2018-02-16T02:52:44Z",
        "body": "Fixed missing colon in extract_scene.py. Removed redundant range_via_num_steps from helper.py.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 39,
        "deletions": 13,
        "changed_files": 4,
        "created_at": "2018-02-12T21:54:12Z",
        "closed_at": "2018-02-13T23:44:24Z",
        "merged_at": "2018-02-13T23:44:24Z",
        "body": "1) Last time, I have forgotten to import the necessary files for BraceLabel, so I am fixing that.\r\n2) My original solution for SVG transform worked just for spiral similarities. Now, it can handle general matrix transform, and moreover special types: transform = scale(...) and translate(...)\r\n3) coor_mask feature -- it turned to be quite handy for me, so it can help others as well",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1274,
        "deletions": 787,
        "changed_files": 7,
        "created_at": "2018-02-06T10:17:06Z",
        "closed_at": "2018-02-06T17:15:55Z",
        "merged_at": "2018-02-06T17:15:55Z",
        "body": "Transferred changes in lighthouse to this new branch.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 97,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2018-02-02T09:36:52Z",
        "closed_at": "2018-02-13T23:46:21Z",
        "merged_at": "2018-02-13T23:46:21Z",
        "body": "New feature: give the possibility to change the center of rotation.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 237,
        "deletions": 111,
        "changed_files": 5,
        "created_at": "2018-02-02T00:41:26Z",
        "closed_at": "2018-02-02T05:17:30Z",
        "merged_at": "2018-02-02T05:17:30Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1861,
        "deletions": 1079,
        "changed_files": 20,
        "created_at": "2018-02-01T17:11:51Z",
        "closed_at": "2018-02-05T18:39:05Z",
        "merged_at": null,
        "body": "A Transform that projects a mobject onto the plane with given normal vector (and passing through the origin).",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2018-01-31T16:51:44Z",
        "closed_at": "2018-01-31T19:15:18Z",
        "merged_at": "2018-01-31T19:15:18Z",
        "body": "Take into account the camera distance in `get_view_transformation_matrix()`.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-01-31T14:40:19Z",
        "closed_at": "2018-01-31T19:16:39Z",
        "merged_at": "2018-01-31T19:16:39Z",
        "body": "Tiny addon. All is in the title.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 216,
        "deletions": 150,
        "changed_files": 3,
        "created_at": "2018-01-30T18:35:58Z",
        "closed_at": "2018-01-31T05:00:17Z",
        "merged_at": "2018-01-31T05:00:17Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2006,
        "deletions": 2422,
        "changed_files": 116,
        "created_at": "2018-01-30T02:19:39Z",
        "closed_at": "2018-02-16T14:08:22Z",
        "merged_at": null,
        "body": "A second shot at #97",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 199,
        "deletions": 130,
        "changed_files": 8,
        "created_at": "2018-01-29T21:49:32Z",
        "closed_at": "2018-01-30T00:44:59Z",
        "merged_at": "2018-01-30T00:44:59Z",
        "body": "MObject and Scene are now derived from Container. Succession and AnimationGroup have had various bugs fixed. (Also, incremental progress on WindingNumber, unimportant to others, is bundled into this.)",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 27,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-01-29T09:38:46Z",
        "closed_at": "2018-01-30T00:45:52Z",
        "merged_at": null,
        "body": "The Travis Continuous Integration service is free for all open source projects like this one. This configuration will enable Travis CI to run flake8 tests on all pull requests before they are reviewed. This allows contributors and maintainers to make sure no errors are introduced. The owner of this repo would need to go to https://travis-ci.org/profile (log in via GitHub id) and flip the repository switch __on__ to enable free, automated flake8 testing in the cloud of each pull request.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 10,
        "changed_files": 2,
        "created_at": "2018-01-29T09:28:46Z",
        "closed_at": "2018-01-30T00:46:35Z",
        "merged_at": "2018-01-30T00:46:34Z",
        "body": "Fixes #96\r\n\r\nThese are the minimal changes required to fix #96 and define __xrange()__ for Python 3.  All of these fixes are also in #97",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1852,
        "deletions": 2238,
        "changed_files": 115,
        "created_at": "2018-01-29T08:42:43Z",
        "closed_at": "2018-01-30T02:15:44Z",
        "merged_at": null,
        "body": "Fixes #96 \r\n\r\nMake the minimal, safe changes required to convert the repo's code to be syntax compatible with both Python 2 and Python 3.  There are other changes required to complete a port to Python 3 but this PR is a minimal, safe first step.\r\n\r\nRun: [futurize --stage1 -w **/*.py](http://python-future.org/futurize_cheatsheet.html)\r\n\r\n    See Stage 1: \"safe\" fixes http://python-future.org/automatic_conversion.html#stage-1-safe-fixes\r\n\r\nIn Python 3 lambdas can no longer take explicit tuples as parameters so the following issues must be fixed to be Python 3 syntax compatible:\r\n\r\n$ __python3 -m flake8 --count --select=E901,E999,F821,F822,F823 --show-source --statistics__\r\n```\r\n./helpers.py:561:16: E999 SyntaxError: invalid syntax\r\n        lambda (f1, args1), (f2, args2) : (lambda x : f1(f2(x, *args2), *args1)),\r\n               ^\r\n./old_projects/bell.py:2041:20: E999 SyntaxError: invalid syntax\r\n            lambda (x1, y1), (x2, y2) : (x2**2 + y2**2) - (x1**2 + y1**2)\r\n                   ^\r\n2     E999 SyntaxError: invalid syntax\r\n```",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 129,
        "deletions": 25,
        "changed_files": 6,
        "created_at": "2018-01-28T20:33:12Z",
        "closed_at": "2018-01-30T00:59:12Z",
        "merged_at": "2018-01-30T00:59:12Z",
        "body": "The commits describe the changes well.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 478,
        "deletions": 214,
        "changed_files": 4,
        "created_at": "2018-01-26T21:57:30Z",
        "closed_at": "2018-01-27T00:05:51Z",
        "merged_at": "2018-01-27T00:05:51Z",
        "body": "Changed file structure around Camera module, so that camera.py now sits in a folder of its own, just like MObject, Scene, Animation, etc.\r\n\r\n(Also, incremental changes on WindingNumber are of course bundled into this pull, but unimportant to others; the one other library change is the removal of UnsyncedParallel from animations, as I realized it was simply reduplicating functionality already found in AnimationGroup)",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 275,
        "deletions": 55,
        "changed_files": 5,
        "created_at": "2018-01-23T00:02:00Z",
        "closed_at": "2018-01-23T20:08:37Z",
        "merged_at": "2018-01-23T20:08:37Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 255,
        "deletions": 29,
        "changed_files": 2,
        "created_at": "2018-01-22T19:57:35Z",
        "closed_at": "2018-01-22T21:36:51Z",
        "merged_at": "2018-01-22T21:36:51Z",
        "body": "line_to_number_vect -> label_direction",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2018-01-22T18:26:09Z",
        "closed_at": "2018-01-22T19:42:12Z",
        "merged_at": "2018-01-22T19:42:12Z",
        "body": "1. Modified `highlight_by_tex_to_color_map()` so that it's able to accept a dictionary with both string and tuple as keys.\r\nFor example, the following color_map is now valid:\r\n`{\"x\": BLUE, (\"y\", \"z\"): YELLOW}`\r\n2. Also, the keyword argument `substring` should work properly in `highlight_by_tex_to_color_map()`.\r\n3. Added some special characters in `modify_special_strings()`.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 153,
        "deletions": 123,
        "changed_files": 3,
        "created_at": "2018-01-19T21:06:10Z",
        "closed_at": "2018-01-20T01:34:39Z",
        "merged_at": "2018-01-20T01:34:39Z",
        "body": "Having made fixes to the implementation of Succession animations, these fixes should be pulled into master.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2018-01-09T08:22:42Z",
        "closed_at": "2018-01-09T19:12:06Z",
        "merged_at": null,
        "body": "This is a tiny modification. I can't justify it right now \"why does this modification fix the writing of video file (on my computer)\", but I can say that, with the option `shell = True`, I get the following error message in my terminal:\r\n```bash\r\n~/wk/manim $ python extract_scene.py -w example_scenes.py SquareToCircle\r\nWriting to /home/frozar/Dropbox/3b1b_videos/animations/example_scenes/SquareToCircleTemp.mp4\r\n  0%|                                                                                                                                                                                       | 0/60 [00:00<?, ?it/s]ffmpeg version 2.8.11-0ubuntu0.16.04.1 Copyright (c) 2000-2017 the FFmpeg developers\r\n  built with gcc 5.4.0 (Ubuntu 5.4.0-6ubuntu1~16.04.4) 20160609\r\n  configuration: --prefix=/usr --extra-version=0ubuntu0.16.04.1 --build-suffix=-ffmpeg --toolchain=hardened --libdir=/usr/lib/x86_64-linux-gnu --incdir=/usr/include/x86_64-linux-gnu --cc=cc --cxx=g++ --enable-gpl --enable-shared --disable-stripping --disable-decoder=libopenjpeg --disable-decoder=libschroedinger --enable-avresample --enable-avisynth --enable-gnutls --enable-ladspa --enable-libass --enable-libbluray --enable-libbs2b --enable-libcaca --enable-libcdio --enable-libflite --enable-libfontconfig --enable-libfreetype --enable-libfribidi --enable-libgme --enable-libgsm --enable-libmodplug --enable-libmp3lame --enable-libopenjpeg --enable-libopus --enable-libpulse --enable-librtmp --enable-libschroedinger --enable-libshine --enable-libsnappy --enable-libsoxr --enable-libspeex --enable-libssh --enable-libtheora --enable-libtwolame --enable-libvorbis --enable-libvpx --enable-libwavpack --enable-libwebp --enable-libx265 --enable-libxvid --enable-libzvbi --enable-openal --enable-opengl --enable-x11grab --enable-libdc1394 --enable-libiec61883 --enable-libzmq --enable-frei0r --enable-libx264 --enable-libopencv\r\n  libavutil      54. 31.100 / 54. 31.100\r\n  libavcodec     56. 60.100 / 56. 60.100\r\n  libavformat    56. 40.101 / 56. 40.101\r\n  libavdevice    56.  4.100 / 56.  4.100\r\n  libavfilter     5. 40.101 /  5. 40.101\r\n  libavresample   2.  1.  0 /  2.  1.  0\r\n  libswscale      3.  1.101 /  3.  1.101\r\n  libswresample   1.  2.101 /  1.  2.101\r\n  libpostproc    53.  3.100 / 53.  3.100\r\nHyper fast Audio and Video encoder\r\nusage: ffmpeg [options] [[infile options] -i infile]... {[outfile options] outfile}...\r\n\r\nUse -h to get full help or, even better, run 'man ffmpeg'\r\n```\r\n\r\nIt seems like the ffmpeg program is not call correctly. Maybe because it is waiting for some image in the input PIPE and it's possible that this behavior is not compatible with the Popen option `shell = True`. It should be check. Also, I think that this option has been introduce recently and I don't check the reason why it was introduced. Finally, if I remember well, the official python documentation say that this option has some security issue and is depreacated.\r\n\r\nSo in this PR, I propose to remove this `shell = True` option to bring back the great feature: write video output file.",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-01-03T21:46:51Z",
        "closed_at": "2018-01-04T03:24:04Z",
        "merged_at": "2018-01-04T03:24:04Z",
        "body": "In the constant.py script, I propose to use `makedirs()` instead of `mkdir()`. This allow the recursive creation of directories.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 31,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2017-12-22T12:09:05Z",
        "closed_at": "2018-01-04T03:24:23Z",
        "merged_at": "2018-01-04T03:24:23Z",
        "body": "While writing to a movie file, if you specify -f it will export a png\r\nsequence in a folder with the same name like the scene. The ability to\r\nexport transparent PNG sequences adds the ability to change the\r\nbackground afterwards.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 31,
        "deletions": 10,
        "changed_files": 1,
        "created_at": "2017-12-20T12:43:14Z",
        "closed_at": "2018-01-10T01:52:32Z",
        "merged_at": "2018-01-10T01:52:32Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-12-19T14:08:26Z",
        "closed_at": "2018-09-11T18:45:29Z",
        "merged_at": null,
        "body": "Maybe it will help grow the support and the community around this project.",
        "comments": 14
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-11-30T17:49:30Z",
        "closed_at": "2017-12-09T22:04:12Z",
        "merged_at": "2017-12-09T22:04:12Z",
        "body": "An explanation of why I changed this can be found here:\r\n[https://codepen.io/anthonynorthrup314/full/qVLWJY/](https://codepen.io/anthonynorthrup314/full/qVLWJY/)",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 10,
        "changed_files": 1,
        "created_at": "2017-10-16T16:14:48Z",
        "closed_at": "2017-12-09T17:54:29Z",
        "merged_at": null,
        "body": "1.change `apply_matrix` to `apply_transposed_matrix` in class `LinearTransformationScene` \r\n2.change `setup` to `setup_1`. see Issue 53",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 188,
        "deletions": 305,
        "changed_files": 9,
        "created_at": "2017-10-06T02:05:58Z",
        "closed_at": "2017-12-09T22:04:37Z",
        "merged_at": "2017-12-09T22:04:37Z",
        "body": "To help python3 users, I changed all `print *` lines to `print(*)`\r\nAtom also decided to remove some unnecessary spaces and newlines.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2017-09-28T06:49:34Z",
        "closed_at": "2017-09-28T14:41:51Z",
        "merged_at": "2017-09-28T14:41:51Z",
        "body": "Simple modifications to tex templates.\r\nI tested all 6 available fonts in `ctex` package, and they work pretty fine with CJ characters in both `TextMobject` (plain text) and `TexMobject` (formula).\r\n\r\nP.S.: I should've say \"CJK characters\", but for some reason, Korean characters aren't able to display normally on my computer, so I dropped them for now.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2017-09-27T09:50:10Z",
        "closed_at": "2017-09-27T15:55:07Z",
        "merged_at": "2017-09-27T15:55:07Z",
        "body": "1. Added `get_null` function in `mobject/tex_mobject.py` to obtain the correct \"blackhole directory\". Hopefully `tex_to_dvi` and `dvi_to_svg` functions will now work properly on multiple platforms including Windows.\r\n2. Replaced `os.rename` with `shutil.move` to avoid [WindowsError 183].",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-08-12T14:45:05Z",
        "closed_at": "2017-12-09T22:05:04Z",
        "merged_at": "2017-12-09T22:05:04Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-08-12T14:43:51Z",
        "closed_at": "2017-12-09T22:05:23Z",
        "merged_at": "2017-12-09T22:05:23Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-08-12T14:41:14Z",
        "closed_at": "2017-12-09T22:21:16Z",
        "merged_at": "2017-12-09T22:21:16Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-08-12T14:32:31Z",
        "closed_at": "2017-12-09T22:21:38Z",
        "merged_at": "2017-12-09T22:21:38Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 31,
        "changed_files": 1,
        "created_at": "2017-08-02T15:30:55Z",
        "closed_at": "2017-08-05T00:44:49Z",
        "merged_at": "2017-08-05T00:44:49Z",
        "body": "Typesetting the code differently from the plain words makes it stand out and makes the README slightly easier to read.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 18,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2017-06-29T11:59:45Z",
        "closed_at": "2017-08-05T00:46:06Z",
        "merged_at": "2017-08-05T00:46:06Z",
        "body": "Implemented the solution I suggested in issue #28.\r\nThe changes I did were to split `get_module` to two functions: `get_module_windows` and `get_module_posix`.\r\nSo now `get_module` check the OS and directs to the appropriate function.\r\n\r\n(I tested this only on Windows 10).\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3963,
        "deletions": 284,
        "changed_files": 22,
        "created_at": "2017-05-31T22:43:02Z",
        "closed_at": "2018-01-23T06:05:17Z",
        "merged_at": null,
        "body": "Hello!  I'm fairly new to python (and computer stuff in general), so trying to figure out how manim works has been kinda overwhelming.  I've tried to add documentation to lots of the things in helper.py to make it easier for people like me to follow what's going on (although I can't guarantee all of it is accurate---I tried to mark sections I was particularly unsure about with #####), and hopefully make it a little more feasible for us to use manim to make our own _gorgeous_ math animations.  Also, I noticed a couple of what might be typos (streth_array_to_length vs stretch_array_to_length, adjascent_pairs vs. adjacent_pairs, to_cammel_case vs to_camel_case, etc).  Not sure if they were intentional or not, so I didn't change any (I think).  \r\n\r\np.s.\r\nI LOVE your videos!  There's nothing else like them.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-05-24T04:39:47Z",
        "closed_at": "2017-05-29T17:28:45Z",
        "merged_at": "2017-05-29T17:28:45Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 15,
        "deletions": 27,
        "changed_files": 1,
        "created_at": "2017-05-12T15:11:04Z",
        "closed_at": "2017-05-29T17:28:59Z",
        "merged_at": "2017-05-29T17:28:59Z",
        "body": "All is in the title.\r\nMore precisely, an error showed up when trying to use a scene in `old_projects/triangle_of_power/triangle.py`, as the DrawInsideTriangle scene. (Works on Windows and Linux, fix due to @shahar603 in issue #30)",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-05-08T10:24:19Z",
        "closed_at": "2017-05-08T15:35:31Z",
        "merged_at": "2017-05-08T15:35:31Z",
        "body": "Modified sound when done if there is a runtime error (in case of quitting if -p is present)",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-05-04T13:43:54Z",
        "closed_at": "2017-05-08T15:35:58Z",
        "merged_at": "2017-05-08T15:35:58Z",
        "body": "Whenever latex fails (for example due to a missing package) the code\r\ncontinue and ends up failing due to a missing svg file.\r\n\r\nHandle latex non 0 exit code.\r\nPass to latex -halt-on-error so it does not attempt to ask user for a\r\nfile, that is ignored in batch mode anyway.\r\n\r\nWrite the latex output to stderr and raise an exception to abort early.\r\n\r\nSigned-off-by: Antoine Musso <hashar@free.fr>",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 15,
        "changed_files": 2,
        "created_at": "2017-05-04T13:08:05Z",
        "closed_at": "2017-05-08T15:36:27Z",
        "merged_at": "2017-05-08T15:36:27Z",
        "body": "pip is able to install a python module straight from a git repository\r\nand supports pinning a specific commit.\r\n\r\nAdd scottopell/aggdraw-64bits to requirements.txt\r\n\r\nAdjust README.md to drop the manual install step now covered by pip\r\ninstall.\r\n\r\nTest plan\r\n\r\nI have created an empty virtual env on Debian GNU/Linux and ran the demo\r\ncommand:\r\n    python extract_scene.py -p example_scenes.py SquareToCircle\r\n\r\nSigned-off-by: Antoine Musso <hashar@free.fr>",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 36,
        "deletions": 13,
        "changed_files": 3,
        "created_at": "2017-03-17T19:05:01Z",
        "closed_at": "2017-04-15T06:32:47Z",
        "merged_at": "2017-04-15T06:32:47Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 58,
        "deletions": 29,
        "changed_files": 1,
        "created_at": "2016-11-17T07:01:45Z",
        "closed_at": "2017-05-08T15:41:16Z",
        "merged_at": null,
        "body": "* Adjusts the existing `CountingScene` so it is not specific to fixed base number systems.\r\n* Create a new `PowerCounter` for fixed base counters.\r\n* Add a base factorial counter `FactorialBase`.\r\n\r\n#### Base Factorial\r\n\r\n`2021` in base factorial equals `2 * 4! + 0 * 3! + 2 * 2! + 1 * 1!`.\r\n\r\nTo run the factorial counter:\r\n\r\n```\r\npython extract_scene.py -p  hanoi.py FactorialBase\r\n```",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 49,
        "deletions": 16,
        "changed_files": 2,
        "created_at": "2016-09-17T16:42:53Z",
        "closed_at": "2017-05-08T15:47:23Z",
        "merged_at": null,
        "body": "The old stars mobject used polar coords to generate points, so the points were concentrated around the origin. This one uses cartesian coords to make it more uniform. It also inherits from Mobject2D, since I tried that and it made it work, even though I don't know why.\n\nPretty trivial, but hey, I gotta fill up my green square grid!\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-09-08T06:46:43Z",
        "closed_at": "2017-05-08T15:47:57Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 33,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2016-08-18T20:24:11Z",
        "closed_at": "2017-12-09T22:35:53Z",
        "merged_at": "2017-12-09T22:35:53Z",
        "body": "It seems that getting the dependencies installed just right for this project is quite tricky, so I decided to write a Dockerfile to eliminate/standardize that headache.\n\nIt ended up being fairly straightforward with the final usage going from:\n`python extract_scenes.py example_scenes.py WarpSquare`\nto\n`docker run --rm -v \"$PWD\"/files:/app/files manim example_scenes.py WarpSquare`\nwhich, while longer, doesn't add any more work for the user and could be hidden behind an alias or shell script if desired.\n\nAny thoughts on if this is something you'd be interested in?\n\nAlso, I had to revert the requirements.txt changes to using my version of aggdraw and pillow, I couldn't get it to work using your versions.\n\nHow do you setup aggdraw and pillow? I can try to make it work with your versions.\n\nKeep up the great work!\n",
        "comments": 20
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2016-05-26T15:23:35Z",
        "closed_at": "2016-06-01T01:45:10Z",
        "merged_at": "2016-06-01T01:45:10Z",
        "body": "This fixes the issue I mentioned in #1 \n\nI had to patch aggdraw because pillow 3.x broke compatibility with PIL as best I can tell.\nThey discuss the issue [here](https://github.com/python-pillow/Pillow/issues/63), and they seem to revert it, but it seems to be a fatal error in pillow 3.2.0 and this fixes it.\n\nThe usage and install directions should work now without any trouble!\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 49,
        "deletions": 2,
        "changed_files": 4,
        "created_at": "2016-05-26T02:22:13Z",
        "closed_at": "2016-05-26T03:31:03Z",
        "merged_at": "2016-05-26T03:31:03Z",
        "body": "I came across your youtube videos and wanted to figure out how to use this software because its awesome!\n\nI added a `requirements.txt` file with the dependencies that I could find (with notes about `aggdraw` in the readme) and switched the output dir to something within the folder. And added some basic setup notes in the readme.\n\nHowever I'm still getting the following error while trying to run `python extract_scene.py generate_logo.py`\n\n```\nTraceback (most recent call last):\n  File \"extract_scene.py\", line 205, in main\n    handle_scene(SceneClass(**scene_kwargs), **config)\n  File \"/Users/scott/scratch/manim/scene/scene.py\", line 32, in __init__\n    self.construct(*self.construct_args)\n  File \"/Users/scott/scratch/manim/./generate_logo.py\", line 50, in construct\n    self.interpolation_factor\nTypeError: interpolate() takes exactly 5 arguments (4 given)\n```\n\nThis seems to be an import error where its not finding the `helper.py` file in the root dir, but not sure why its happening exactly.\n\nHope this is a help to getting some usage notes up and I'm happy to help with that process if you'd like!\n",
        "comments": 2
    }
]