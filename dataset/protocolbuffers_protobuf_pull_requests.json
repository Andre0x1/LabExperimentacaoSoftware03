[
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-10-20T16:55:55Z",
        "closed_at": "2023-10-21T16:40:40Z",
        "merged_at": null,
        "body": "Update `cc_file_list_aspect` to handle targets with missing `hdrs/textual_hdrs`\n\nOur stale file regeneration logic broke with Bazel 6.4.0, and I suspect it was\ncaused by this change: https://github.com/bazelbuild/bazel/pull/19534 Our logic\nassumed that any target with a `CcInfo` provider must have `hdrs` and\n`textual_hdrs` attributes, but it seems that this is no longer true for\n`cc_proto_library` starting with Bazel 6.4.0. The fix is just to use `getattr`\nand treat the item as an empty list if it's missing.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 17,
        "deletions": 9,
        "changed_files": 2,
        "created_at": "2023-10-20T16:38:35Z",
        "closed_at": "2023-10-20T18:45:20Z",
        "merged_at": null,
        "body": "Use protobuf-ci for staleness infra.\n\nThis will pin our version of Bazel, and avoid non-hermetic breakages from github runner changes\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 190,
        "changed_files": 2,
        "created_at": "2023-10-20T14:14:21Z",
        "closed_at": "2023-10-20T16:03:11Z",
        "merged_at": null,
        "body": "Remove dead code that was only used in aggregate initialization\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-10-20T09:09:50Z",
        "closed_at": "2023-10-20T15:07:04Z",
        "merged_at": null,
        "body": "Update rules_rust usage to match https://github.com/bazelbuild/rules_rust/commit/cd3e53e9b8555543071ea109218baf41fc4b88f7.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-10-19T23:01:19Z",
        "closed_at": "2023-10-20T15:33:57Z",
        "merged_at": null,
        "body": "Cleaned up more cases of NULL -> nullptr\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 8,
        "changed_files": 4,
        "created_at": "2023-10-19T20:47:47Z",
        "closed_at": "2023-10-20T18:33:34Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-10-19T18:29:39Z",
        "closed_at": "2023-10-19T21:06:42Z",
        "merged_at": null,
        "body": "Move `InitializationErrorString` into the secondary vtable, retrieved from `ClassData`.\nThis removes one virtual function from MessageLite with zero per-type increase.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 26,
        "deletions": 26,
        "changed_files": 8,
        "created_at": "2023-10-19T00:11:00Z",
        "closed_at": "2023-10-19T01:37:43Z",
        "merged_at": null,
        "body": "upb: use upb_c_proto_library() instead of upb_proto_library()\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 56,
        "deletions": 29,
        "changed_files": 4,
        "created_at": "2023-10-18T23:46:30Z",
        "closed_at": "2023-10-20T03:12:19Z",
        "merged_at": null,
        "body": "Google3 only\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-10-18T23:31:15Z",
        "closed_at": "2023-10-20T15:03:53Z",
        "merged_at": null,
        "body": "Update CMake install test to use shared libraries\n\nThis should help us catch problems that come up when libprotobuf and libprotoc\nare built as shared libraries. The motivating example was that we recently had\nbuild failures due to `PROTOBUF_EXPORT` being missing from a symbol that needed\nit, but none of our existing tests caught this. (Technically this test wouldn't\ncatch it either since that particular issue affected C++17 only, but at least\nthis should help with similar problems.)\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2023-10-18T22:26:57Z",
        "closed_at": "2023-10-19T01:32:42Z",
        "merged_at": null,
        "body": "Change upb_Arena_IncRefFor to return error when using an initial block.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 159,
        "deletions": 224,
        "changed_files": 1,
        "created_at": "2023-10-18T22:03:03Z",
        "closed_at": "2023-10-19T15:55:30Z",
        "merged_at": null,
        "body": "Replace try-catch Blocks with assertThrows() in GeneratedMessageTest\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 40,
        "deletions": 40,
        "changed_files": 7,
        "created_at": "2023-10-18T21:01:18Z",
        "closed_at": "2023-10-19T16:29:29Z",
        "merged_at": "2023-10-19T16:29:29Z",
        "body": "This PR also backports some fixes to address CI failures:\r\n- Removal of codespell\r\n- Use of large runners for ASAN and MSAN builds\r\n- Increased heap size for Java linkage monitor test",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2023-10-18T18:49:40Z",
        "closed_at": "2023-10-19T16:24:57Z",
        "merged_at": null,
        "body": "cleanup upb.rs\n\nWe shouldn't give easy access to the zeroed block, so let's pass in pbi::private to deter misuse.\nAlso saw that arena wasn't used mutably in a repeatedfield test, so let mut -> let;\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 12,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-10-18T15:42:13Z",
        "closed_at": "2023-10-18T18:33:44Z",
        "merged_at": null,
        "body": "Clarify the preconditions of AddXXX functions.\nAlso, add a debug check to verify this precondition.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 99,
        "deletions": 6,
        "changed_files": 3,
        "created_at": "2023-10-18T14:22:24Z",
        "closed_at": "2023-10-20T16:37:03Z",
        "merged_at": null,
        "body": "Update rules_rust usage to match https://github.com/bazelbuild/rules_rust/commit/cd3e53e9b8555543071ea109218baf41fc4b88f7.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-10-18T03:37:23Z",
        "closed_at": "2023-10-18T14:48:19Z",
        "merged_at": null,
        "body": "Clarify comments on GetResolvedSourceFeatures\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-10-18T01:27:38Z",
        "closed_at": "2023-10-18T20:15:58Z",
        "merged_at": null,
        "body": "Enable conformance tests over editions protos\n\nWe transformed the proto2/proto3 protos to editions, and then run the same set of tests over both.  This will verify that migrating to editions preserves the same proto2/proto3 behavior.  These will not be enabled by default, and require a flag `--maximum_edition=2023`.\n\nFuture changes will:\n- add more targeted editions-specific tests\n- clean up our conformance test framework to allow for more targeted tests\n- add wildcards to failure lists in limited cases to reduce noise\n- add feature resolution conformance tests\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 288,
        "deletions": 201,
        "changed_files": 5,
        "created_at": "2023-10-18T00:11:32Z",
        "closed_at": "2023-10-20T03:14:32Z",
        "merged_at": null,
        "body": "Implement editions support in the python generator\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 572,
        "deletions": 430,
        "changed_files": 16,
        "created_at": "2023-10-17T18:53:17Z",
        "closed_at": "2023-10-19T15:23:44Z",
        "merged_at": null,
        "body": "Move `GetTypeName` implementation into `ClassData`.\nFor LITE messages we append the type name to the data, avoiding an\nindirection and a relocation.\nFor descriptor messages we have a single secondary vtable. This reduces the per-message cost of all the descriptor methods to a single pointer.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 28,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2023-10-17T16:49:46Z",
        "closed_at": "2023-10-17T19:17:09Z",
        "merged_at": "2023-10-17T19:17:09Z",
        "body": "This is a cherry-pick of https://github.com/protocolbuffers/protobuf/commit/b1c4c65658c9f116ad804610c191371f92b9e318, which was committed before the protobuf/upb repo split. The upb portion of that change was already cherry-picked. This PR cherry-picks the tests, and updates the upb dep so that these tests can pass.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 28,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2023-10-17T16:43:49Z",
        "closed_at": "2023-10-17T18:12:02Z",
        "merged_at": "2023-10-17T18:12:02Z",
        "body": "This is a cherry-pick of https://github.com/protocolbuffers/protobuf/commit/b1c4c65658c9f116ad804610c191371f92b9e318, which was committed before the protobuf/upb repo split. The upb portion of that change was already cherry-picked. This PR cherry-picks the tests, and updates the upb dep so that these tests can pass.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-10-17T14:57:32Z",
        "closed_at": "2023-10-17T16:09:38Z",
        "merged_at": null,
        "body": "Bump minimum PHP to 8.0\n\nFixes #14436\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-10-17T01:47:03Z",
        "closed_at": "2023-10-17T16:11:39Z",
        "merged_at": "2023-10-17T16:11:39Z",
        "body": "This function needs to be visible to generated code, so this CL ensures that it's exported on libprotobuf.so.\r\n\r\nPiperOrigin-RevId: 573980166",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-10-16T23:35:52Z",
        "closed_at": "2023-10-17T00:51:38Z",
        "merged_at": null,
        "body": "Set `PROTOBUF_EXPORT` on `InternalOutOfLineDeleteMessageLite()`\n\nThis function needs to be visible to generated code, so this CL ensures that\nit's exported on libprotobuf.so.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 13,
        "changed_files": 13,
        "created_at": "2023-10-16T23:14:11Z",
        "closed_at": "2023-10-17T01:43:35Z",
        "merged_at": "2023-10-17T01:43:35Z",
        "body": "This should fix the postsubmit test failures on 25.x by updating the checked-in files to match the new version number.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-10-16T21:48:40Z",
        "closed_at": "2023-10-18T19:23:34Z",
        "merged_at": null,
        "body": "Open-source editions Bazel rules for embedding defaults.\n\nThese utilities provide a way to embed a FeatureSetDefaults message into generators or runtimes that need to implement feature resolution.  They use protoc to handle the tricky reflection-based algorithm over feature protos, leaving only simple merges to be implemented in other languages.  See docs/design/editions/editions-life-of-a-featureset.md for more information.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 103,
        "deletions": 66,
        "changed_files": 8,
        "created_at": "2023-10-16T21:30:11Z",
        "closed_at": "2023-10-18T20:34:19Z",
        "merged_at": null,
        "body": "Change the behavior of --experimental_editions.\n\nPreviously, this gated all editions access and then further checks were applied.  This removes those checks so that we can incrementally roll out editions support to individual languages.  Anyone using the --experimental_editions flag should be careful not to use it on generators that don't support editions.  As we launch editions support for individual generators, this flag won't be required to use them.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 45,
        "deletions": 45,
        "changed_files": 3,
        "created_at": "2023-10-16T21:04:38Z",
        "closed_at": "2023-10-16T22:10:14Z",
        "merged_at": null,
        "body": "Remove redundant reinterpret_cast<>.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 354,
        "deletions": 328,
        "changed_files": 6,
        "created_at": "2023-10-16T18:41:49Z",
        "closed_at": "2023-10-18T00:28:34Z",
        "merged_at": null,
        "body": "Restructure syntax branches in text format conformance tests.\n\nThis doesn't change the tests at all, but refactors them to be more reusable in different contexts.  Specifically, this will make it easier to add corresponding editions-based tests.  This also splits the concept of \"uses a proto3 message\" and \"runs proto3 tests\", in preparation for that change.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-10-16T18:41:14Z",
        "closed_at": "2023-10-18T00:00:55Z",
        "merged_at": null,
        "body": "Clean up conformance tests warnings and formatting.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-10-16T17:11:47Z",
        "closed_at": "2023-10-17T21:59:23Z",
        "merged_at": null,
        "body": "Enable Arena Enabled Copy Constructor for RepeatedPtrField\n\nBenchmarking has this as a saving of up to 20%:\n\nname                              old cpu/op   new cpu/op   delta\nBM_MergeFromMessage/1              830ns \u00b115%   712ns \u00b116%  -14.22%  (p=0.000 n=20+20)\nBM_MergeFromMessage/10            9.03\u00b5s \u00b113%  7.42\u00b5s \u00b113%  -17.91%  (p=0.000 n=20+18)\nBM_MergeFromMessage/100           93.3\u00b5s \u00b116%  76.5\u00b5s \u00b1 6%  -18.01%  (p=0.000 n=20+17)\nBM_MergeFromMessageWithArena/1     614ns \u00b116%   478ns \u00b1 3%  -22.07%  (p=0.000 n=20+16)\nBM_MergeFromMessageWithArena/10   6.05\u00b5s \u00b114%  4.93\u00b5s \u00b119%  -18.53%  (p=0.000 n=20+20)\nBM_MergeFromMessageWithArena/100  59.7\u00b5s \u00b115%  49.3\u00b5s \u00b120%  -17.51%  (p=0.000 n=20+20)\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 445,
        "changed_files": 11,
        "created_at": "2023-10-16T16:40:00Z",
        "closed_at": "2023-10-17T15:43:23Z",
        "merged_at": null,
        "body": "Remove PROTOBUF_EXPLICIT_CONSTRUCTORS define\n\nThe switch from aggregate initialization to explicit constructors in `Impl_` has been enabled since 09/06, and no issues have been reported or found. This change removes the back-out option and code from the various sources for aggregate initialization.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-10-16T14:24:26Z",
        "closed_at": "2023-10-16T18:10:16Z",
        "merged_at": null,
        "body": "Remove code for handling global dtors\n\ndefault instances are no longer deleted.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 37,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2023-10-16T13:49:20Z",
        "closed_at": "2023-10-16T17:18:22Z",
        "merged_at": null,
        "body": "Added microbenchmarks for RepeatedPtrField construction.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2023-10-16T12:09:35Z",
        "closed_at": "2023-10-20T19:08:42Z",
        "merged_at": null,
        "body": "Bumps [actions/checkout](https://github.com/actions/checkout) from 3.1.0 to 4.1.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/actions/checkout/releases\">actions/checkout's releases</a>.</em></p>\n<blockquote>\n<h2>v4.1.0</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Update README.md for V4 by <a href=\"https://github.com/sivapalan\"><code>@\u200bsivapalan</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1452\">actions/checkout#1452</a></li>\n<li>Add support for partial checkout filters by <a href=\"https://github.com/finleygn\"><code>@\u200bfinleygn</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1396\">actions/checkout#1396</a></li>\n<li>Prepare 4.1.0 release by <a href=\"https://github.com/cory-miller\"><code>@\u200bcory-miller</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1496\">actions/checkout#1496</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/sivapalan\"><code>@\u200bsivapalan</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/checkout/pull/1452\">actions/checkout#1452</a></li>\n<li><a href=\"https://github.com/finleygn\"><code>@\u200bfinleygn</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/checkout/pull/1396\">actions/checkout#1396</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/checkout/compare/v4.0.0...v4.1.0\">https://github.com/actions/checkout/compare/v4.0.0...v4.1.0</a></p>\n<h2>v4.0.0</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Update default runtime to node20 by <a href=\"https://github.com/takost\"><code>@\u200btakost</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1436\">actions/checkout#1436</a></li>\n<li>Support fetching without the --progress option by <a href=\"https://github.com/simonbaird\"><code>@\u200bsimonbaird</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1067\">actions/checkout#1067</a></li>\n<li>Release 4.0.0 by <a href=\"https://github.com/takost\"><code>@\u200btakost</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1447\">actions/checkout#1447</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/takost\"><code>@\u200btakost</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/checkout/pull/1436\">actions/checkout#1436</a></li>\n<li><a href=\"https://github.com/simonbaird\"><code>@\u200bsimonbaird</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/checkout/pull/1067\">actions/checkout#1067</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/checkout/compare/v3...v4.0.0\">https://github.com/actions/checkout/compare/v3...v4.0.0</a></p>\n<h2>v3.6.0</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Mark test scripts with Bash'isms to be run via Bash by <a href=\"https://github.com/dscho\"><code>@\u200bdscho</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1377\">actions/checkout#1377</a></li>\n<li>Add option to fetch tags even if fetch-depth &gt; 0 by <a href=\"https://github.com/RobertWieczoreck\"><code>@\u200bRobertWieczoreck</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/579\">actions/checkout#579</a></li>\n<li>Release 3.6.0 by <a href=\"https://github.com/luketomlinson\"><code>@\u200bluketomlinson</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1437\">actions/checkout#1437</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/RobertWieczoreck\"><code>@\u200bRobertWieczoreck</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/checkout/pull/579\">actions/checkout#579</a></li>\n<li><a href=\"https://github.com/luketomlinson\"><code>@\u200bluketomlinson</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/checkout/pull/1437\">actions/checkout#1437</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/checkout/compare/v3.5.3...v3.6.0\">https://github.com/actions/checkout/compare/v3.5.3...v3.6.0</a></p>\n<h2>v3.5.3</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Fix: Checkout Issue in self hosted runner due to faulty submodule check-ins by <a href=\"https://github.com/megamanics\"><code>@\u200bmegamanics</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1196\">actions/checkout#1196</a></li>\n<li>Fix typos found by codespell by <a href=\"https://github.com/DimitriPapadopoulos\"><code>@\u200bDimitriPapadopoulos</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1287\">actions/checkout#1287</a></li>\n<li>Add support for sparse checkouts by <a href=\"https://github.com/dscho\"><code>@\u200bdscho</code></a> and <a href=\"https://github.com/dfdez\"><code>@\u200bdfdez</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1369\">actions/checkout#1369</a></li>\n<li>Release v3.5.3 by <a href=\"https://github.com/TingluoHuang\"><code>@\u200bTingluoHuang</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1376\">actions/checkout#1376</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/megamanics\"><code>@\u200bmegamanics</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/checkout/pull/1196\">actions/checkout#1196</a></li>\n<li><a href=\"https://github.com/DimitriPapadopoulos\"><code>@\u200bDimitriPapadopoulos</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/checkout/pull/1287\">actions/checkout#1287</a></li>\n<li><a href=\"https://github.com/dfdez\"><code>@\u200bdfdez</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/checkout/pull/1369\">actions/checkout#1369</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/checkout/compare/v3...v3.5.3\">https://github.com/actions/checkout/compare/v3...v3.5.3</a></p>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/actions/checkout/blob/main/CHANGELOG.md\">actions/checkout's changelog</a>.</em></p>\n<blockquote>\n<h1>Changelog</h1>\n<h2>v4.1.0</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1396\">Add support for partial checkout filters</a></li>\n</ul>\n<h2>v4.0.0</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1067\">Support fetching without the --progress option</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1436\">Update to node20</a></li>\n</ul>\n<h2>v3.6.0</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1377\">Fix: Mark test scripts with Bash'isms to be run via Bash</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/579\">Add option to fetch tags even if fetch-depth &gt; 0</a></li>\n</ul>\n<h2>v3.5.3</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1196\">Fix: Checkout fail in self-hosted runners when faulty submodule are checked-in</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1287\">Fix typos found by codespell</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1369\">Add support for sparse checkouts</a></li>\n</ul>\n<h2>v3.5.2</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1289\">Fix api endpoint for GHES</a></li>\n</ul>\n<h2>v3.5.1</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1246\">Fix slow checkout on Windows</a></li>\n</ul>\n<h2>v3.5.0</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1237\">Add new public key for known_hosts</a></li>\n</ul>\n<h2>v3.4.0</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1209\">Upgrade codeql actions to v2</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1210\">Upgrade dependencies</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1225\">Upgrade <code>@\u200bactions/io</code></a></li>\n</ul>\n<h2>v3.3.0</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1045\">Implement branch list using callbacks from exec function</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1050\">Add in explicit reference to private checkout options</a></li>\n<li>[Fix comment typos (that got added in <a href=\"https://redirect.github.com/actions/checkout/issues/770\">#770</a>)](<a href=\"https://redirect.github.com/actions/checkout/pull/1057\">actions/checkout#1057</a>)</li>\n</ul>\n<h2>v3.2.0</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/942\">Add GitHub Action to perform release</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/967\">Fix status badge</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1002\">Replace datadog/squid with ubuntu/squid Docker image</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/964\">Wrap pipeline commands for submoduleForeach in quotes</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1029\">Update <code>@\u200bactions/io</code> to 1.1.2</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1039\">Upgrading version to 3.2.0</a></li>\n</ul>\n<h2>v3.1.0</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/939\">Use <code>@\u200bactions/core</code> <code>saveState</code> and <code>getState</code></a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/922\">Add <code>github-server-url</code> input</a></li>\n</ul>\n<h2>v3.0.2</h2>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/actions/checkout/commit/8ade135a41bc03ea155e62e844d188df1ea18608\"><code>8ade135</code></a> Prepare 4.1.0 release (<a href=\"https://redirect.github.com/actions/checkout/issues/1496\">#1496</a>)</li>\n<li><a href=\"https://github.com/actions/checkout/commit/c533a0a4cfc4962971818edcfac47a2899e69799\"><code>c533a0a</code></a> Add support for partial checkout filters (<a href=\"https://redirect.github.com/actions/checkout/issues/1396\">#1396</a>)</li>\n<li><a href=\"https://github.com/actions/checkout/commit/72f2cec99f417b1a1c5e2e88945068983b7965f9\"><code>72f2cec</code></a> Update README.md for V4 (<a href=\"https://redirect.github.com/actions/checkout/issues/1452\">#1452</a>)</li>\n<li><a href=\"https://github.com/actions/checkout/commit/3df4ab11eba7bda6032a0b82a6bb43b11571feac\"><code>3df4ab1</code></a> Release 4.0.0 (<a href=\"https://redirect.github.com/actions/checkout/issues/1447\">#1447</a>)</li>\n<li><a href=\"https://github.com/actions/checkout/commit/8b5e8b768746b50394015010d25e690bfab9dfbc\"><code>8b5e8b7</code></a> Support fetching without the --progress option (<a href=\"https://redirect.github.com/actions/checkout/issues/1067\">#1067</a>)</li>\n<li><a href=\"https://github.com/actions/checkout/commit/97a652b80035363df47baee5031ec8670b8878ac\"><code>97a652b</code></a> Update default runtime to node20 (<a href=\"https://redirect.github.com/actions/checkout/issues/1436\">#1436</a>)</li>\n<li><a href=\"https://github.com/actions/checkout/commit/f43a0e5ff2bd294095638e18286ca9a3d1956744\"><code>f43a0e5</code></a> Release 3.6.0 (<a href=\"https://redirect.github.com/actions/checkout/issues/1437\">#1437</a>)</li>\n<li><a href=\"https://github.com/actions/checkout/commit/7739b9ba2efcda9dde65ad1e3c2dbe65b41dfba7\"><code>7739b9b</code></a> Add option to fetch tags even if fetch-depth &gt; 0 (<a href=\"https://redirect.github.com/actions/checkout/issues/579\">#579</a>)</li>\n<li><a href=\"https://github.com/actions/checkout/commit/96f53100ba2a5449eb71d2e6604bbcd94b9449b5\"><code>96f5310</code></a> Mark test scripts with Bash'isms to be run via Bash (<a href=\"https://redirect.github.com/actions/checkout/issues/1377\">#1377</a>)</li>\n<li><a href=\"https://github.com/actions/checkout/commit/c85c95e3d7251135ab7dc9ce3241c5835cc595a9\"><code>c85c95e</code></a> Release v3.5.3 (<a href=\"https://redirect.github.com/actions/checkout/issues/1376\">#1376</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/actions/checkout/compare/v3.1.0...8ade135a41bc03ea155e62e844d188df1ea18608\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/checkout&package-manager=github_actions&previous-version=3.1.0&new-version=4.1.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 484,
        "deletions": 7,
        "changed_files": 5,
        "created_at": "2023-10-16T11:40:00Z",
        "closed_at": "2023-10-18T15:36:40Z",
        "merged_at": null,
        "body": "Implement mutators for singular primitive fields with presence\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 6,
        "changed_files": 5,
        "created_at": "2023-10-16T03:59:17Z",
        "closed_at": "2023-10-17T17:22:59Z",
        "merged_at": null,
        "body": null,
        "comments": 6
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-10-15T22:21:49Z",
        "closed_at": "2023-10-16T17:43:14Z",
        "merged_at": null,
        "body": "Incremental migration of message.cc to Emit\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 54,
        "deletions": 53,
        "changed_files": 3,
        "created_at": "2023-10-15T22:21:32Z",
        "closed_at": "2023-10-16T17:13:42Z",
        "merged_at": null,
        "body": "Incremental migration of message.cc to Emit\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 102,
        "deletions": 123,
        "changed_files": 3,
        "created_at": "2023-10-15T22:21:19Z",
        "closed_at": "2023-10-16T17:38:15Z",
        "merged_at": null,
        "body": "Incremental migration of message.cc to Emit\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 115,
        "deletions": 135,
        "changed_files": 3,
        "created_at": "2023-10-15T22:18:26Z",
        "closed_at": "2023-10-16T17:48:42Z",
        "merged_at": null,
        "body": "Incremental migration of message.cc to Emit\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-10-15T15:19:09Z",
        "closed_at": "2023-10-18T18:51:46Z",
        "merged_at": null,
        "body": "Use GetArena() instead of GetOwningArena() #4.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 45,
        "deletions": 45,
        "changed_files": 3,
        "created_at": "2023-10-14T09:30:49Z",
        "closed_at": "2023-10-21T10:01:56Z",
        "merged_at": null,
        "body": "Remove redundant reinterpret_cast<>.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 79,
        "deletions": 79,
        "changed_files": 12,
        "created_at": "2023-10-13T23:05:43Z",
        "closed_at": "2023-10-14T03:04:40Z",
        "merged_at": null,
        "body": "Rename UNVERIFIED utf8 validation option to NONE\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 24,
        "deletions": 48,
        "changed_files": 3,
        "created_at": "2023-10-13T21:59:22Z",
        "closed_at": "2023-10-14T02:08:26Z",
        "merged_at": null,
        "body": "Use GetArena() instead of GetOwningArena() #2\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 47,
        "deletions": 68,
        "changed_files": 7,
        "created_at": "2023-10-13T21:28:41Z",
        "closed_at": "2023-10-15T05:16:01Z",
        "merged_at": null,
        "body": "Use GetArena() instead of GetOwningArena() #3.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-10-13T21:21:16Z",
        "closed_at": "2023-10-13T22:54:38Z",
        "merged_at": null,
        "body": "Late-bind on whether a field type is packable.\n\nThis simplifies the logic when the type of a field is only known at a later time (when the field is resolved).\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 36,
        "deletions": 9,
        "changed_files": 4,
        "created_at": "2023-10-13T21:03:19Z",
        "closed_at": "2023-10-13T22:24:18Z",
        "merged_at": "2023-10-13T22:24:18Z",
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-10-13T17:28:29Z",
        "closed_at": "2023-10-16T14:59:34Z",
        "merged_at": null,
        "body": "Always use src[0] as the prototype in `MergeFrom<MessageLite>`\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-10-13T15:53:30Z",
        "closed_at": "2023-10-20T11:00:35Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-10-13T15:48:47Z",
        "closed_at": "2023-10-20T11:00:37Z",
        "merged_at": null,
        "body": "Remove override for MapEntry::GetTypeName.\nThis override is a leftover from when it potentially inherited from\nMessageLite.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-10-13T14:37:55Z",
        "closed_at": "2023-10-16T22:12:19Z",
        "merged_at": null,
        "body": "TESTING\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-10-13T13:51:00Z",
        "closed_at": "2023-10-13T21:26:55Z",
        "merged_at": null,
        "body": "Multiple typos has been fixed. \r\n- docs/upb/design.md -> line no 291: changed 'newMessageAccesor' to 'newMessageAccessor '\r\n- docs/design/editions/edition-zero-features.md -> line no 149: changed 'implict' to 'implicit'",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-10-13T03:01:21Z",
        "closed_at": "2023-10-13T18:12:48Z",
        "merged_at": null,
        "body": "Add client_streaming and server_streaming in MethodDescriptor for upb python\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 250,
        "deletions": 253,
        "changed_files": 9,
        "created_at": "2023-10-13T02:06:33Z",
        "closed_at": "2023-10-13T20:55:44Z",
        "merged_at": "2023-10-13T20:55:44Z",
        "body": "Use GetArena() instead of GetOwningArena() #1\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-10-12T23:11:43Z",
        "closed_at": "2023-10-18T15:42:29Z",
        "merged_at": null,
        "body": "Perform preliminary migration of accessors_proto3_test to googletest-rust\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 44,
        "deletions": 115,
        "changed_files": 6,
        "created_at": "2023-10-12T22:06:55Z",
        "closed_at": "2023-10-16T16:02:43Z",
        "merged_at": null,
        "body": "Improve fuzz testing of C++ JSON parser and serializer\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 590,
        "deletions": 31,
        "changed_files": 9,
        "created_at": "2023-10-12T21:35:26Z",
        "closed_at": "2023-10-18T18:57:41Z",
        "merged_at": null,
        "body": "Internal changes.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-10-12T21:24:36Z",
        "closed_at": "2023-10-16T20:10:28Z",
        "merged_at": null,
        "body": "Use Editions features in Java, Kotlin, and Java Lite code generators.\n\nThis uses C++ feature resolution. Note that JVM runtimes are not fully Editions compatible yet.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-10-12T19:52:09Z",
        "closed_at": "2023-10-13T18:07:57Z",
        "merged_at": null,
        "body": "Apply PROTOBUF_NOINLINE to declarations of some functions that want it.\n\nClang's ThinLTO does not know to honor __attribute__((noinline)) on the\ndefinition in a .cc file if the declaration in a .h file did not also have the\nattribute.  This can lead to unwanted cross-translation-unit inlining\ncontributing to stack overflow in deeply recursive protobuf parses, but only\nin sufficiently vigorously optimized release builds.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-10-12T18:25:12Z",
        "closed_at": "2023-10-16T19:35:26Z",
        "merged_at": null,
        "body": "Add custom matchers for ProxiedWithPresence.\n\nWe continue our foray into googletest-rust [1], this time with homegrown matchers.\n\nOur unit tests will now be able to check is_unset() and is_set() for all types that implement ProxiedWithPresence. In practice, this boils down to [u8] and ProtoStr.\n\nNote that we've broken out matchers_upb and matchers_cpp, similar to what was done with aliasing here [2]. \n\n[1] https://github.com/google/googletest-rust\n[2] https://github.com/protocolbuffers/protobuf/commit/9a0bc392b3011cabc214f01b41314acab33658c2#diff-08e5182ff36ad340a3bfb628995524a2a36a89b59a514ba027b0f25e048dd5c3R90\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 26,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-10-12T12:32:46Z",
        "closed_at": "2023-10-13T07:30:28Z",
        "merged_at": null,
        "body": "DO NOT SUBMIT\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 62,
        "deletions": 80,
        "changed_files": 3,
        "created_at": "2023-10-12T12:09:48Z",
        "closed_at": "2023-10-19T10:01:48Z",
        "merged_at": null,
        "body": "Dedup `RepeatedPtrField::Add` methods to all use common implementation.\n\nAs a result, `AddWeak` and `AddMessage` get the same perf boost as main `Add` method from 1df8ea4.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-10-12T10:38:10Z",
        "closed_at": "2023-10-12T15:58:23Z",
        "merged_at": null,
        "body": "Disable Bzlmod explicitly in .bazelrc\n\nThis will help make sure [Bazel Downstream Pipeline](https://github.com/bazelbuild/continuous-integration/blob/master/docs/downstream-testing.md) is green after enabling Bzlmod at Bazel@HEAD\n\nSee https://github.com/bazelbuild/bazel/issues/18958#issuecomment-1749058780\n\nRelated https://github.com/protocolbuffers/protobuf/issues/14313\n\nCloses: https://github.com/protocolbuffers/protobuf/pull/14314\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 43,
        "deletions": 3,
        "changed_files": 8,
        "created_at": "2023-10-12T04:54:02Z",
        "closed_at": "2023-10-19T10:01:51Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-10-12T00:03:35Z",
        "closed_at": "2023-10-12T21:36:06Z",
        "merged_at": null,
        "body": "Check-in bootstrapped Java features for Bazel and CMake\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-10-11T22:03:47Z",
        "closed_at": "2023-10-12T21:05:23Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2023-10-11T20:45:32Z",
        "closed_at": "2023-10-13T19:29:34Z",
        "merged_at": "2023-10-13T19:29:34Z",
        "body": "Assert equality between InternalGetArena() and InternalGetOwningArena().\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-10-11T19:40:50Z",
        "closed_at": "2023-10-18T10:01:55Z",
        "merged_at": null,
        "body": "Experiment with Bazel's minimal remote download\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-10-11T17:12:31Z",
        "closed_at": "2023-10-11T18:31:08Z",
        "merged_at": null,
        "body": "`RepeatedPtrField::Add` is ~5% faster.\n\nMoving logic to one place allows to remove a branch on `using_sso()`.\n\nSide effect: `.strtab` section increases in size (to store function names), `.text` section reduces in size (less inlined code).\n\n```\nname                                   old time/op             new time/op             delta\nBM_RepeatedPtrField_Add_Sso            11.0ns \u00b1 4%             10.4ns \u00b1 7%   -5.71%        (p=0.000 n=83+85)\nBM_RepeatedPtrField_Add_FallbackToRep  21.8ns \u00b1 4%             20.8ns \u00b1 5%   -4.55%        (p=0.000 n=80+83)\nBM_RepeatedPtrField_Add_Small          17.3ns \u00b1 4%             15.8ns \u00b1 5%   -8.86%        (p=0.000 n=78+85)\nBM_RepeatedPtrField_Add_Large          22.6ns \u00b112%             21.1ns \u00b110%   -6.62%       (p=0.000 n=100+92)\nBM_RepeatedPtrField_Add_HasCleared     4.15ns \u00b111%             4.43ns \u00b1 6%   +6.67%        (p=0.000 n=82+87)\nBM_RepeatedPtrField_AddAllocated       12.0ns \u00b119%             12.0ns \u00b114%     ~           (p=0.678 n=92+96)\n\nname                                   old INSTRUCTIONS/op     new INSTRUCTIONS/op     delta\nBM_RepeatedPtrField_Add_Sso               101 \u00b1 1%                 88 \u00b1 2%  -13.05%      (p=0.000 n=100+100)\nBM_RepeatedPtrField_Add_FallbackToRep     222 \u00b1 1%                206 \u00b1 1%   -7.35%      (p=0.000 n=100+100)\nBM_RepeatedPtrField_Add_Small             180 \u00b1 0%                164 \u00b1 1%   -8.69%      (p=0.000 n=100+100)\nBM_RepeatedPtrField_Add_Large             110 \u00b1 0%                100 \u00b1 0%   -9.07%       (p=0.000 n=100+99)\nBM_RepeatedPtrField_Add_HasCleared       27.6 \u00b1 1%               36.6 \u00b1 1%  +32.44%      (p=0.000 n=100+100)\nBM_RepeatedPtrField_AddAllocated          114 \u00b1 7%                115 \u00b111%   +0.95%      (p=0.007 n=100+100)\n```\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-10-11T14:59:54Z",
        "closed_at": "2023-10-12T13:11:45Z",
        "merged_at": null,
        "body": "Use protobuf_nowkt as a dependency of the Rust runtime.\n\nIIUC that's what runtimes should depend on.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 85,
        "deletions": 30,
        "changed_files": 2,
        "created_at": "2023-10-11T11:51:15Z",
        "closed_at": "2023-10-18T10:01:57Z",
        "merged_at": null,
        "body": "Extend the static reflection API with field types and is_packed.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 789,
        "deletions": 13,
        "changed_files": 19,
        "created_at": "2023-10-11T09:01:40Z",
        "closed_at": "2023-10-18T10:02:00Z",
        "merged_at": null,
        "body": "WIP repeated fields\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-10-11T05:05:45Z",
        "closed_at": "2023-10-18T10:02:03Z",
        "merged_at": null,
        "body": "Apply clang-tidy fixes to change static_cast to proto2::DownCastToGenerated.\n\nThe changelist was automatically generated using the apply_fixes.sh script:\n  devtools/cymbal/clang_tidy/apply_fixes.sh --allowlist=/tmp/static_cast_sr_deps_20231009.out --build_refactoring_executor --subcategories=google3-runtime-protobuf-typecast-transformer\n\nTrack: live\nFindings source: /cns/yv-d/home/debadribasak/2023_10_09/clang_tidy@*\nSubcategories: google3-runtime-protobuf-typecast-transformer\n\nWARNING: Automatically generated changes should be carefully inspected. For most\nClangTidy warnings multiple alternative fixes are possible and only one of them\nis suggested. There's no guarantee that it will be the best one (or even a right\nfix). The amount of reviewers' attention to automated changes should be at least\nthe same as for manually written code.\n\n#codehealth\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-10-11T04:25:46Z",
        "closed_at": "2023-10-11T06:33:16Z",
        "merged_at": null,
        "body": "Use large runners for ASAN and MSAN builds\n\nThese tests were right near the threshold for disk space on default runners, and recently got pushed over (~18G).  The cheapest large runner has 150G of SSD storage, and won't likely hit this issue again.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-10-11T03:13:06Z",
        "closed_at": "2023-10-12T18:36:03Z",
        "merged_at": null,
        "body": "internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-10-11T02:57:33Z",
        "closed_at": "2023-10-11T16:27:30Z",
        "merged_at": null,
        "body": "Use large runners for ASAN and MSAN builds\n\nThese tests were right near the threshold for disk space on default runners, and recently got pushed over (~18G).  The cheapest large runner has 150G of SSD storage, and won't likely hit this issue again.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 20,
        "changed_files": 8,
        "created_at": "2023-10-11T02:52:50Z",
        "closed_at": "2023-10-12T19:58:15Z",
        "merged_at": "2023-10-12T19:58:14Z",
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 920,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2023-10-10T23:43:52Z",
        "closed_at": "2023-10-16T18:04:44Z",
        "merged_at": null,
        "body": "Add crates_repository support for top-level protobuf WORKSPACE\n\nWe're adding googletest-rust as a dependency for our rust tests, so let's ensure that our opensource build has access to the same crates.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 22,
        "deletions": 8,
        "changed_files": 4,
        "created_at": "2023-10-10T22:23:34Z",
        "closed_at": "2023-10-11T19:46:39Z",
        "merged_at": "2023-10-11T19:46:39Z",
        "body": "Move {child_parent_test, reserved_test, serialization_test} to googletest-rust\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-10-10T20:01:41Z",
        "closed_at": "2023-10-10T21:28:17Z",
        "merged_at": null,
        "body": "Automated rollback of commit 40bed71a88ad4051989c9d14ff0ddae799b2d1e6.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-10-10T19:28:17Z",
        "closed_at": "2023-10-11T09:31:07Z",
        "merged_at": null,
        "body": "upb: s/std::endl/'\\n' in upb_generator\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1187,
        "deletions": 721,
        "changed_files": 56,
        "created_at": "2023-10-10T18:47:37Z",
        "closed_at": "2023-10-11T20:17:32Z",
        "merged_at": "2023-10-11T20:17:32Z",
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 161,
        "deletions": 0,
        "changed_files": 8,
        "created_at": "2023-10-10T18:09:19Z",
        "closed_at": "2023-10-13T16:02:45Z",
        "merged_at": null,
        "body": "Bootstrap Java features for Java compiler\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 44,
        "deletions": 37,
        "changed_files": 6,
        "created_at": "2023-10-10T17:43:59Z",
        "closed_at": "2023-10-10T18:48:40Z",
        "merged_at": "2023-10-10T18:48:40Z",
        "body": "upb: s/NULL/nullptr in C++ unit tests\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-10-10T17:34:56Z",
        "closed_at": "2023-10-11T18:41:55Z",
        "merged_at": null,
        "body": "Make generators explicitly specify their support window for editions.\n\nPlugins should not get automatically bumped to the latest edition until they're ready to support it.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 17,
        "deletions": 9,
        "changed_files": 2,
        "created_at": "2023-10-10T16:46:18Z",
        "closed_at": "2023-10-17T10:01:49Z",
        "merged_at": null,
        "body": "Fix JSON lexer to correctly report error locations in JSON strings.\n\nPreviously parsing UTF16 Escapes, numbers, and bare words would cause a divergence between where we're reading data, and where we report errors.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-10-10T15:44:45Z",
        "closed_at": "2023-10-11T15:12:37Z",
        "merged_at": "2023-10-11T15:12:37Z",
        "body": "Remove synthetic oneofs from Java gencode field accessor tables.\n\nThis is needed to unblock Java editions codegen tests, due to codegen diff for proto3 optionals migrated to editions.\n\nThis is incompatible with runtimes <24.x, but our cross-version support policy explicitly does not guarantee compatibility for new gencode with old runtimes: https://protobuf.dev/support/cross-version-runtime-guarantee/#minor\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-10-10T15:42:09Z",
        "closed_at": "2023-10-13T16:00:23Z",
        "merged_at": "2023-10-13T16:00:25Z",
        "body": "Remove override for MapEntry::GetTypeName.\nThis override is a leftover from when it potentially inherited from\nMessageLite.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 804,
        "deletions": 949,
        "changed_files": 31,
        "created_at": "2023-10-10T15:35:08Z",
        "closed_at": "2023-10-18T17:06:29Z",
        "merged_at": null,
        "body": "Migrate some protobuf internal macros to Abseil public ones.\nThis reduces the size of port_def.inc, and reduces the total input to the preprocessor.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 78,
        "deletions": 74,
        "changed_files": 2,
        "created_at": "2023-10-10T15:24:13Z",
        "closed_at": "2023-10-10T16:47:01Z",
        "merged_at": "2023-10-10T16:47:01Z",
        "body": "Clean up assertions in `DurationsTest` and `TimestampsTest` a bit.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-10-10T14:25:02Z",
        "closed_at": "2023-10-10T18:12:22Z",
        "merged_at": null,
        "body": "Add comment to clarify intended use of EmitPubUseForImportedMessages.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 831,
        "deletions": 18,
        "changed_files": 21,
        "created_at": "2023-10-10T13:34:26Z",
        "closed_at": "2023-10-17T21:19:25Z",
        "merged_at": null,
        "body": "Implement rust repeated scalars for cpp and upb\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-10-10T09:44:48Z",
        "closed_at": "2023-10-10T16:00:52Z",
        "merged_at": null,
        "body": "Timestamps.parse: Add error handling for invalid hours/minutes in the timezone offset.\n\nBefore this CL, bad offsets result in a NumberFormatException (from parseLong) instead of the documented ParseException/IllegalArgumentException.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 15,
        "deletions": 9,
        "changed_files": 3,
        "created_at": "2023-10-09T21:51:37Z",
        "closed_at": "2023-10-10T15:55:59Z",
        "merged_at": null,
        "body": "Add clarifying comments about fields disallowed in Editions\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-10-09T21:45:53Z",
        "closed_at": "2023-10-10T03:13:38Z",
        "merged_at": null,
        "body": "Make JSON UTF-8 boundary check inclusive of the largest possible UTF-8 character.\n\nUTF-8 acceptable codepoints are 0x0000-0x10FFFF, previously we treated this as an inclusive-exclusive bound, but UTF-8 does include it's topmost character.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 20,
        "deletions": 20,
        "changed_files": 2,
        "created_at": "2023-10-09T19:39:00Z",
        "closed_at": "2023-10-19T10:01:53Z",
        "merged_at": null,
        "body": "Reduce PrintUnknownFields stacksize \n\nExtract OutOfLinePrintLiteral, shrunk 80 bytes from 1040 -> 960\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 58,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-10-09T17:39:44Z",
        "closed_at": "2023-10-09T19:39:38Z",
        "merged_at": null,
        "body": "Add additional proto validation to descriptor builds.\n\nThese would normally be caught by the parser, but would be bypassed by dynamic descriptor builds.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 14,
        "deletions": 57,
        "changed_files": 4,
        "created_at": "2023-10-09T15:14:49Z",
        "closed_at": "2023-10-16T21:14:40Z",
        "merged_at": null,
        "body": "Fix handling of Unicode escapes in string data in textproto files.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 14,
        "changed_files": 2,
        "created_at": "2023-10-09T13:25:39Z",
        "closed_at": "2023-10-09T15:28:49Z",
        "merged_at": null,
        "body": "Reduce `Map::size_type` to 32-bits. Protobuf containers can't have more than\n2^32 elements anyway because they are not serializable.\nThis saves 16 bytes for each `map` field.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-10-09T08:35:07Z",
        "closed_at": "2023-10-16T10:01:51Z",
        "merged_at": null,
        "body": "Internal Change\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-10-09T07:14:49Z",
        "closed_at": "2023-10-16T10:01:54Z",
        "merged_at": null,
        "body": "Internal Change\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-10-08T17:40:55Z",
        "closed_at": "2023-10-13T21:21:33Z",
        "merged_at": null,
        "body": "This PR is fixing small inconsistencies in the paths where the protobuf compiler is searched for in the protobuf python setup.py.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 863,
        "deletions": 849,
        "changed_files": 2,
        "created_at": "2023-10-06T23:55:57Z",
        "closed_at": "2023-10-14T10:01:44Z",
        "merged_at": null,
        "body": "Restructure syntax branches in binary conformance tests.\n\nThis doesn't change the tests at all, but refactors them to be more reusable in different contexts.  Specifically, this will make it easier to add corresponding editions-based tests.  This also splits the concept of \"uses a proto3 message\" and \"runs proto3 tests\", in preparation for that change.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-10-06T17:45:16Z",
        "closed_at": "2023-10-06T20:30:38Z",
        "merged_at": null,
        "body": "Ensure generator classes have Context with generator options and pass to field comment helpers.\n\nPreviously, some but not all of these classes stored `Context* context_`.\n\nThese will be used in a followup change to consider strip_nonfunctional_codegen in field comments.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-10-06T14:18:16Z",
        "closed_at": "2023-10-12T15:58:26Z",
        "merged_at": null,
        "body": "This will help make sure [Bazel Downstream Pipeline](https://github.com/bazelbuild/continuous-integration/blob/master/docs/downstream-testing.md) is green after enabling Bzlmod at Bazel@HEAD\r\n\r\nSee https://github.com/bazelbuild/bazel/issues/18958#issuecomment-1749058780\r\n\r\nRelated https://github.com/protocolbuffers/protobuf/issues/14313",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 100,
        "deletions": 100,
        "changed_files": 11,
        "created_at": "2023-10-06T04:28:57Z",
        "closed_at": "2023-10-13T10:01:50Z",
        "merged_at": null,
        "body": "Test flakiness fixes\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-10-05T23:45:31Z",
        "closed_at": "2023-10-10T16:23:12Z",
        "merged_at": null,
        "body": "Migrate accessors_test.rs to googletest-rust\n\nThe flexibility of googletest-rust looks promising:\n```\nassert_that!(msg.oneof_field(), matches_pattern!(not_set(_)));\nassert_that!(msg.oneof_field(), matches_pattern!(OneofUint32(eq(7))));\n\n+nonfatal assertions + custom matchers\n```\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 247,
        "deletions": 206,
        "changed_files": 19,
        "created_at": "2023-10-05T21:46:21Z",
        "closed_at": "2023-10-06T17:41:17Z",
        "merged_at": null,
        "body": "Add strip_nonfunctional_codegen generator option and pass options to WriteFieldDocComment\n\nThis change ensures generator classes have context_ which stores generator options. Previously, most but not all of these classes stored `Context* context_`.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 76,
        "deletions": 81,
        "changed_files": 5,
        "created_at": "2023-10-05T21:33:41Z",
        "closed_at": "2023-10-09T22:18:28Z",
        "merged_at": null,
        "body": "Remove reflection during feature resolution.\n\nInstead, we will hardcode the feature validation using macros and add a reflective test to make sure it stays in sync.  Reflection during descriptor builds is problematic, and in order to migrate proto2/proto3 to editions fully, we'll need to do feature resolution in *all* builds.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-10-05T20:18:18Z",
        "closed_at": "2023-10-09T16:21:58Z",
        "merged_at": "2023-10-09T16:21:59Z",
        "body": "Enable editions support for rust\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 149,
        "deletions": 26,
        "changed_files": 4,
        "created_at": "2023-10-05T20:13:38Z",
        "closed_at": "2023-10-06T00:25:46Z",
        "merged_at": null,
        "body": "Bootstrap C++ edition defaults instead of compiling them at runtime in a static global.\n\nThis removes a large chunk of the reflection we need to do during descriptor builds, and will make it possible to migrate descriptor.proto to editions.  It also removes some special treatment of the C++ runtime, which happens to have easy access to protoc internals today.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 195,
        "deletions": 92,
        "changed_files": 16,
        "created_at": "2023-10-05T18:28:00Z",
        "closed_at": "2023-10-07T23:29:28Z",
        "merged_at": null,
        "body": "upb: first attempt at implementing name mangling for minitable symbols\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 435,
        "changed_files": 1,
        "created_at": "2023-10-05T17:01:12Z",
        "closed_at": "2023-10-05T18:34:16Z",
        "merged_at": null,
        "body": "Put syntax error in python/setup.py to see what breaks\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 160,
        "deletions": 61,
        "changed_files": 3,
        "created_at": "2023-10-05T13:42:43Z",
        "closed_at": "2023-10-05T14:48:19Z",
        "merged_at": null,
        "body": "Automated rollback of commit 17e06c108dc8a3f43ea0f909999d74d7166f9733.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 33,
        "deletions": 12,
        "changed_files": 2,
        "created_at": "2023-10-05T12:47:55Z",
        "closed_at": "2023-10-12T10:02:07Z",
        "merged_at": null,
        "body": "Use switch case in Java oneof building\n\nTo speed up on large protos\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-10-05T09:42:59Z",
        "closed_at": "2023-10-10T10:07:41Z",
        "merged_at": null,
        "body": "Use absl's wrappers around __has_attribute etc rather than polyfilling.\n\nThe goal is to reduce the surface area and size of port_def.inc, as a somewhat\nmagic textual header.\n(Also #defining __reserved_names is a bit of a maintenance risk)\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 173,
        "deletions": 203,
        "changed_files": 8,
        "created_at": "2023-10-05T06:18:46Z",
        "closed_at": "2023-10-11T16:14:25Z",
        "merged_at": "2023-10-11T16:14:25Z",
        "body": "Implement proto2/proto3 with editions\n\nThis change migrates proto2 and proto3 to real editions, without impacting users at all.  While we already had feature defaults set, we weren't really using them outside of editions.  This change introduces InferLegacyProtoFeatures, which infers features from descriptors.  Any language that wants to follow this rollout pattern will need to implement similar transformations.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 503,
        "changed_files": 2,
        "created_at": "2023-10-04T23:14:33Z",
        "closed_at": "2023-10-05T16:02:30Z",
        "merged_at": null,
        "body": "Check test coverage of setup.py files\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 136,
        "deletions": 277,
        "changed_files": 6,
        "created_at": "2023-10-04T21:14:22Z",
        "closed_at": "2023-10-05T16:08:30Z",
        "merged_at": null,
        "body": "Migrate away from distutils\n\nPython 3.12 has removed the `distutils` module, so we need to stop relying on\nit. Most of the parts we were using had a straightforward replacement in\n`setuptools` or elsewhere in the Python standard library. I couldn't find a\ngood replacement for `distutils.command.clean`, though. We were only using it\nto enable `python setup.py clean`, so I just removed that functionality since\ndirectly invoking setup.py is deprecated anyway.\n\nWhile I was looking at this I realized that our python/release.sh script is\nunused, so I also removed that.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 18,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-10-04T19:15:32Z",
        "closed_at": "2023-10-06T12:27:43Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 31,
        "deletions": 16,
        "changed_files": 5,
        "created_at": "2023-10-04T17:36:10Z",
        "closed_at": "2023-10-11T10:01:52Z",
        "merged_at": null,
        "body": "[WIP] Fix segfault in upb pathway in terra rust\n\nWe had previously commented out the upb portion of simple_nested_test.\nThis is because nonmutable getters have submessages being NULL by default.\nThis means that trying to fetch anything, like a simple scalar from that nested message would segfault.\n\nThis CL makes the externC return an Option<RawMessage> since we've discovered that upb can return NULL. This way, we can check for `None` and handle the NULL case appropriately.\n\nWe know that the NULL pathway can only come from terra upb, since\ncpp automagically constructs submsgs if they don't exist.\nWe then opt to create a message in terra rust in order to proceed.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 35,
        "changed_files": 1,
        "created_at": "2023-10-04T16:20:02Z",
        "closed_at": "2023-10-04T18:39:53Z",
        "merged_at": null,
        "body": "Disable flaky test from GHA\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-10-04T16:11:50Z",
        "closed_at": "2023-10-11T10:01:56Z",
        "merged_at": null,
        "body": "Cache ruby dependencies between runs\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 154,
        "deletions": 9,
        "changed_files": 5,
        "created_at": "2023-10-04T14:15:53Z",
        "closed_at": "2023-10-12T10:02:10Z",
        "merged_at": null,
        "body": "Implement mutators for singular primitive fields with presence\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-10-04T12:42:38Z",
        "closed_at": "2023-10-05T08:45:49Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2023-10-04T11:05:37Z",
        "closed_at": "2023-10-05T07:02:36Z",
        "merged_at": null,
        "body": "Update dependencies in C# test project.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 129,
        "deletions": 20,
        "changed_files": 2,
        "created_at": "2023-10-04T05:07:15Z",
        "closed_at": "2023-10-05T23:49:20Z",
        "merged_at": null,
        "body": "Implement FeatureSet caching within descriptor pools.\n\nThis is meant to optimize our editions handling before rolling it out more widely to proto2 and proto3 under the hood.  As it's implemented today, every file descriptor would need to allocate its own duplicate FeatureSet for either proto2 or proto3 (plus additional ones per proto2 group).\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 15,
        "deletions": 9,
        "changed_files": 6,
        "created_at": "2023-10-03T21:26:35Z",
        "closed_at": "2023-10-10T10:01:52Z",
        "merged_at": null,
        "body": "Add support for Python 3.12\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-10-03T19:11:45Z",
        "closed_at": "2023-10-04T18:09:40Z",
        "merged_at": null,
        "body": "Specify proto2/proto3 defaults on feature specs.\n\nThis hooks up legacy proto2/proto3 editions, but prohibits them from being used in proto files.  These will be hooked up directly to `syntax` declarations in a later change.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-10-03T18:21:40Z",
        "closed_at": "2023-10-04T19:15:02Z",
        "merged_at": null,
        "body": "Create the destination map bigger than the source map for MapFieldList.copy().\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 207,
        "deletions": 207,
        "changed_files": 11,
        "created_at": "2023-10-03T17:27:25Z",
        "closed_at": "2023-10-11T10:01:59Z",
        "merged_at": null,
        "body": "Replace CreateMaybeMessage hooks with a `void*` based signature to allow\nreusing the functions in more generic contexts.\nA future change will utilize these generic functions directly.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 67,
        "deletions": 44,
        "changed_files": 3,
        "created_at": "2023-10-03T15:33:20Z",
        "closed_at": "2023-10-10T10:01:55Z",
        "merged_at": null,
        "body": "MapField improvements:\n - Stop storing a second copy of Arena*. The Map already has one.\n - Merge the vtable pointer with the tagged payload field. This reduces the\n size of the class by 8 bytes.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 53,
        "deletions": 21,
        "changed_files": 3,
        "created_at": "2023-10-03T15:15:30Z",
        "closed_at": "2023-10-10T10:01:57Z",
        "merged_at": null,
        "body": "Utilize upb mutable setters to generate default messages in the interim\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-10-03T15:00:54Z",
        "closed_at": "2023-10-04T19:35:24Z",
        "merged_at": null,
        "body": "Drop special case testing for NDK r24 which is no longer supported.\n\nFixes https://github.com/protocolbuffers/protobuf/issues/14211\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-10-03T12:53:22Z",
        "closed_at": "2023-10-05T02:47:58Z",
        "merged_at": null,
        "body": "Reduce visibility of Arena enabled copy constructor\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 19,
        "changed_files": 1,
        "created_at": "2023-10-03T05:47:32Z",
        "closed_at": "2023-10-03T18:05:06Z",
        "merged_at": null,
        "body": "I have a theory that the lock in `JsonFormatter` periodically causes this VS debugging error for Protobuf types:\r\n\r\n![image](https://github.com/protocolbuffers/protobuf/assets/303201/64097805-67ab-43fe-a4a0-77ec4590844d)\r\n\r\nHopefully `ConcurrentDictionary` resolves this issue. Even if it doesn't, this change still resolves the TODO so this is a good improvement.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 24,
        "deletions": 12,
        "changed_files": 5,
        "created_at": "2023-10-03T03:29:47Z",
        "closed_at": "2023-10-04T03:58:28Z",
        "merged_at": null,
        "body": "Introduce legacy edition values.\n\nThese exist so that new features can specify their proto2/proto3 defaults.  This will allow for easier migration to editions, and also allow us to migrate more proto2/proto3 code paths to common editions code.  The latter will provide give us early coverage over a lot more of editions.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 71,
        "deletions": 1,
        "changed_files": 4,
        "created_at": "2023-10-03T03:27:21Z",
        "closed_at": "2023-10-06T23:36:16Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 319,
        "deletions": 425,
        "changed_files": 18,
        "created_at": "2023-10-02T21:29:58Z",
        "closed_at": "2023-10-07T00:11:06Z",
        "merged_at": null,
        "body": "GetArena() instead of GetOwningArena()\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-10-02T21:19:25Z",
        "closed_at": "2023-10-02T23:11:25Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-10-02T19:34:57Z",
        "closed_at": "2023-10-02T20:58:35Z",
        "merged_at": null,
        "body": "Do perfect forwarding to avoid unnecessary extra instances of UntypedMessage,\nreducing runtime costs and stack usage.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 14,
        "changed_files": 1,
        "created_at": "2023-10-02T17:45:00Z",
        "closed_at": "2023-10-06T22:21:10Z",
        "merged_at": null,
        "body": "Optimizations for proto2::Map:\n - Use InternalSwap instead of swap where appropriate. This avoids one arena check, plus the dead code for the fallback.\n - Use move operations instead of copies in the fallback of `swap`. It will avoid one copy if one of the object is a heap object.\n - Use a loop in the fallback of `swap` to reduce binary bloat.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-10-02T16:57:55Z",
        "closed_at": "2023-10-03T20:32:31Z",
        "merged_at": null,
        "body": "Defines Protobuf compiler version strings as macros and separates out suffix string definition.\n\nThis conforms to the Protobuf release process so that suffix \"-main\" will stay in main and not be overwritten.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 11,
        "changed_files": 3,
        "created_at": "2023-10-02T16:28:08Z",
        "closed_at": "2023-10-05T18:33:40Z",
        "merged_at": null,
        "body": "Automated rollback of commit bef5b759f1fa511e3c08380a4e8635832d5d39fd.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 28,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-10-02T15:34:14Z",
        "closed_at": "2023-10-02T17:47:01Z",
        "merged_at": null,
        "body": "Internal change.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 39,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-09-29T21:33:49Z",
        "closed_at": "2023-10-02T16:13:18Z",
        "merged_at": null,
        "body": "Fix integer overflow on extension range parsing when specifying MAX_INT as an extension number.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 61,
        "deletions": 7,
        "changed_files": 2,
        "created_at": "2023-09-29T20:14:03Z",
        "closed_at": "2023-10-06T10:01:51Z",
        "merged_at": null,
        "body": "Internal change.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-09-29T19:18:19Z",
        "closed_at": "2023-10-02T15:42:05Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 32,
        "deletions": 5,
        "changed_files": 6,
        "created_at": "2023-09-29T15:45:53Z",
        "closed_at": "2023-10-06T10:01:54Z",
        "merged_at": null,
        "body": "Use Editions features in Java codegen.\n\nJava codegen should invoke shared C++ feature resolution implementation.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 92,
        "deletions": 22,
        "changed_files": 7,
        "created_at": "2023-09-29T02:48:33Z",
        "closed_at": "2023-10-09T21:31:26Z",
        "merged_at": null,
        "body": "loosen upb for json name conflict check in proto2 between json name and field\nname. Once editions is supported this check should turn into a check on LEGACY_BEST_EFFORT\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 25,
        "changed_files": 1,
        "created_at": "2023-09-29T02:11:49Z",
        "closed_at": "2023-09-29T18:41:42Z",
        "merged_at": null,
        "body": "Migrate PHP extension tests to protobuf-ci\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 550,
        "deletions": 569,
        "changed_files": 19,
        "created_at": "2023-09-28T22:48:00Z",
        "closed_at": "2023-10-02T19:28:18Z",
        "merged_at": null,
        "body": "GetArena() instead of GetArenaForAllocation().\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 258,
        "deletions": 168,
        "changed_files": 6,
        "created_at": "2023-09-28T21:13:22Z",
        "closed_at": "2023-10-03T14:59:55Z",
        "merged_at": null,
        "body": "Move all virtual functions in MapFieldBase to be a manually written vtable.\nThis is preparation work to merge the vtable with the `ReflectionPayload`\nobject to reduce the size of MapField by 8 bytes.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 19,
        "deletions": 60,
        "changed_files": 6,
        "created_at": "2023-09-28T20:03:14Z",
        "closed_at": "2023-09-28T23:12:15Z",
        "merged_at": null,
        "body": "Update Python versions to reflect that we now support 3.8 through 3.11\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-28T19:35:16Z",
        "closed_at": "2023-09-28T20:39:55Z",
        "merged_at": "2023-09-28T20:39:55Z",
        "body": "PiperOrigin-RevId: 569253919\r\n\r\nBackport of https://github.com/protocolbuffers/protobuf/commit/30b6251dea7a0ff1713a97d7e7d29a48e4880f59 for https://github.com/protocolbuffers/protobuf/issues/14245",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 141,
        "deletions": 6,
        "changed_files": 11,
        "created_at": "2023-09-28T18:22:33Z",
        "closed_at": "2023-10-05T10:01:51Z",
        "merged_at": null,
        "body": "Create `RuntimeVersion.java` to prepare version check.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-28T18:08:30Z",
        "closed_at": "2023-09-28T19:20:24Z",
        "merged_at": null,
        "body": "Automated rollback of commit 2a55706f9d36afd1742c97fd0d611ea8af0ac3f8.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-09-28T14:10:58Z",
        "closed_at": "2023-09-28T16:52:06Z",
        "merged_at": "2023-09-28T16:52:06Z",
        "body": "This is a backport of https://github.com/protocolbuffers/protobuf/pull/13593 , so that the next 24.X release can be compatible with cython.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 497,
        "deletions": 371,
        "changed_files": 9,
        "created_at": "2023-09-28T01:33:25Z",
        "closed_at": "2023-09-29T17:32:47Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-09-28T00:50:55Z",
        "closed_at": "2023-10-05T10:01:53Z",
        "merged_at": null,
        "body": "Remove CompileTimeConstant annotation from Timestamps.parseUnchecked(String)\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 27,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2023-09-27T21:19:54Z",
        "closed_at": "2023-10-04T10:01:51Z",
        "merged_at": null,
        "body": "Change protobuf python's print() and str() to preserving UTF-8\n\nUsers that depend on garble UTF-8 can use text_format.MessageToString()\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-09-27T18:38:21Z",
        "closed_at": "2023-09-28T18:33:47Z",
        "merged_at": null,
        "body": "internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 64,
        "deletions": 64,
        "changed_files": 13,
        "created_at": "2023-09-27T17:08:27Z",
        "closed_at": "2023-09-27T19:28:18Z",
        "merged_at": null,
        "body": "Rename NONE enum value to UNVERIFIED\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 95,
        "deletions": 38,
        "changed_files": 3,
        "created_at": "2023-09-27T03:28:45Z",
        "closed_at": "2023-09-27T21:39:32Z",
        "merged_at": null,
        "body": "Build test protos into a common shared library in cmake.\n\nThis will reduce the number of times our test protos are built, and may fix the flakes we're seeing in aarch64.  At the very least, it should reduce them by a factor of 3 and marginally speed up our builds.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-09-27T00:32:40Z",
        "closed_at": "2023-09-28T19:56:11Z",
        "merged_at": null,
        "body": "Rename `upbc` to `upb_generator`\n\nThis makes the file layout a bit more consistent with the `protos ->\nprotos_generator` pattern. I also replaced the `upbc` namespace with\n`upb::generator`.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-27T00:32:21Z",
        "closed_at": "2023-09-27T18:15:52Z",
        "merged_at": null,
        "body": "Disable Arena copy constructor in repeated fields.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 86,
        "changed_files": 6,
        "created_at": "2023-09-26T22:44:49Z",
        "closed_at": "2023-09-27T16:30:53Z",
        "merged_at": null,
        "body": "Clean up a few stray files that ended up in the wrong place\n\nI also deleted some of upb's dotfiles that are either obsolete (like\n`.bazelci/presubmit.yml`) or seem to be superseded by protobuf's dotfiles.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 20,
        "deletions": 89,
        "changed_files": 1,
        "created_at": "2023-09-26T21:33:55Z",
        "closed_at": "2023-10-02T17:05:52Z",
        "merged_at": null,
        "body": "Remove hot-pathing between repeated and packed in fast path.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 32,
        "deletions": 7,
        "changed_files": 8,
        "created_at": "2023-09-26T18:57:58Z",
        "closed_at": "2023-09-29T16:01:55Z",
        "merged_at": null,
        "body": "Add `ABSL_ATTRIBUTE_LIFETIME_BOUND` attribute on generated oneof accessors.\nThis allows the compiler to statically detect use-after-free bugs.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-09-26T18:52:05Z",
        "closed_at": "2023-09-26T20:06:52Z",
        "merged_at": null,
        "body": "Remove <iostream> from the common.h header (#14174)\n\n<iostream> embeds a global constructor (to initialize std::cout and such), typically `static ios_base::Init __ioinit;` in libstdc++).\n\nThis header is not directly necessary in the common header and has a small impact on every compilation unit that includes it.\n\nAs an example, removing that header dependency in turns suppresses 33 global constructors from the firefox core library libxul.\n\nCloses #14174\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/14174 from serge-sans-paille:feature/remove-iostream-from-common d3a6be6ee42d9f4fc5c89126229fdeef4d3687c9\nFUTURE_COPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/14174 from serge-sans-paille:feature/remove-iostream-from-common d3a6be6ee42d9f4fc5c89126229fdeef4d3687c9\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-09-26T18:22:10Z",
        "closed_at": "2023-10-03T10:01:53Z",
        "merged_at": null,
        "body": "fix upb text encode bug: txtenc_string should compare the char with 0xff\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 227,
        "changed_files": 4,
        "created_at": "2023-09-26T17:25:33Z",
        "closed_at": "2023-10-03T10:01:56Z",
        "merged_at": null,
        "body": "Drop MapEntry::_InternalParse and use the reflection based one.\nFix the reflection based parser to handle unknown enum mapped values the way it is for codegen right now.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2023-09-26T17:21:33Z",
        "closed_at": "2023-09-28T13:54:30Z",
        "merged_at": null,
        "body": "Fix bug in reflection based Swap of map fields.\nIt was swapping the arena pointers too when they differed. In that case a full\ncopy must be made instead. The instances can't change arenas.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 100,
        "deletions": 100,
        "changed_files": 11,
        "created_at": "2023-09-26T16:51:35Z",
        "closed_at": "2023-10-05T10:01:56Z",
        "merged_at": null,
        "body": "Test flakiness fixes\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 62,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-09-26T16:51:29Z",
        "closed_at": "2023-09-26T21:10:32Z",
        "merged_at": null,
        "body": "Enable OpenSSF Scorecard Action\n\nHi, I'd like to suggest the adoption of the OpenSSF Scorecard Action.\n\nThe scorecard action runs the OpenSSF Scorecard checks on the repository often to provide feedbacks on how to improve (on the security dashboard) and transparency for the users about the current security posture (shown in the badge).\n\nIt is also a good way to keep track of new security practices and to provide users easy information about it.\n\nSee more about scorecard at [OpenSSF Scorecard](https://github.com/ossf/scorecard) and the [Show off your security score](https://openssf.org/blog/2022/09/08/show-off-your-security-score-announcing-scorecards-badges/)\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-26T15:25:49Z",
        "closed_at": "2023-09-28T13:34:48Z",
        "merged_at": null,
        "body": "Track depth limit in UntypedMessage parsing.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1982,
        "deletions": 0,
        "changed_files": 9,
        "created_at": "2023-09-26T15:24:40Z",
        "closed_at": "2023-10-05T10:01:58Z",
        "merged_at": null,
        "body": "Internal\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 373,
        "deletions": 77,
        "changed_files": 3,
        "created_at": "2023-09-26T14:44:12Z",
        "closed_at": "2023-09-26T17:50:27Z",
        "merged_at": null,
        "body": "Add `ABSL_ATTRIBUTE_LIFETIME_BOUND` attribute on generated extension accessors.\nThis allows the compiler to statically detect use-after-free bugs.\n\nThis change touches a subset of field types. More changes to follow.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 119,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-09-26T06:00:11Z",
        "closed_at": "2023-10-06T06:40:34Z",
        "merged_at": null,
        "body": "Adding a DownCastToGenerated function, similar to DynamicCastToGenerated but without the runtime cost of dynamic_cast. The cast is checked in debug mode.\nAlso, add reference overloads of DynamicCastToGenerated which terminate on failure like dynamic_cast would do on an environment without exceptions.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-09-26T04:49:15Z",
        "closed_at": "2023-09-26T15:58:28Z",
        "merged_at": null,
        "body": "Flip the names of edition_enum and edition.\n\nWe will be using the enum edition from now on, and the string field will be removed ASAP.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 16,
        "changed_files": 2,
        "created_at": "2023-09-26T03:21:05Z",
        "closed_at": "2023-09-26T17:20:04Z",
        "merged_at": null,
        "body": "Do not check required field for upb python MergeFrom\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 634,
        "deletions": 9,
        "changed_files": 17,
        "created_at": "2023-09-25T23:14:27Z",
        "closed_at": "2023-10-03T10:01:59Z",
        "merged_at": null,
        "body": "Prototype rust repeated scalars for cpp and upb\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 14,
        "deletions": 66,
        "changed_files": 13,
        "created_at": "2023-09-25T22:54:53Z",
        "closed_at": "2023-09-27T22:35:25Z",
        "merged_at": null,
        "body": "Remove enforce_utf8 from edition zero test cases.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-09-25T20:09:41Z",
        "closed_at": "2023-09-25T23:28:00Z",
        "merged_at": null,
        "body": "Upgrade Docker image in upb test run for building Python wheels\n\nThis should ensure that we have access to Bazel 6.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-09-25T18:58:17Z",
        "closed_at": "2023-09-25T20:10:39Z",
        "merged_at": null,
        "body": "Increase our continuous tests by 4x to track down more flakes.\n\nThis will be rolled back after a few days.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 40,
        "deletions": 40,
        "changed_files": 11,
        "created_at": "2023-09-25T18:03:43Z",
        "closed_at": "2023-09-25T20:18:48Z",
        "merged_at": null,
        "body": "Update our tests to use a custom checkout action.\n\nThis will retry up to 3 times if we hit networks flakes updating our submodules.  It will also allow us to easily inject other stability fixes to this step in the future.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2023-09-25T17:31:42Z",
        "closed_at": "2023-09-25T19:12:55Z",
        "merged_at": null,
        "body": "Don't check out submodules in tests that don't need them.\n\nThis will help prevent network flakes.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 158,
        "deletions": 61,
        "changed_files": 3,
        "created_at": "2023-09-25T12:49:38Z",
        "closed_at": "2023-09-25T15:07:38Z",
        "merged_at": "2023-09-25T15:07:37Z",
        "body": "Optimize RepeatedPtrField to use copy constructors where possible\n\nThe most common MergeFrom() scenario is that items are newly appended to an existing repeated field that has never been shrunk. For these cases copy constructing new entries is the cheapest option. This change overloads MergeFrom<> for `std::string`, `StringPiece`, `Message` and `MessageLite`, leaving the remaining templated implementation for all concrete message types supporting arena enabled copy construction, which is implemented as an out of line factory functor implementation. \n\nGoing forward we should change `Arena::CreateMaybeMessage()` to return MessageLite* and accept const MessageLite& for copy construction. This will allow us to directly pass Arena::CreateMaybeMessage<T>() into these out of line functions.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-09-25T10:49:15Z",
        "closed_at": "2023-09-27T03:12:52Z",
        "merged_at": null,
        "body": "Using none ASCII chars for protoc on Windows are not handled well.\r\nThis adresses argument file at a location where either directory, or filename contains Unicode chars.\r\n\r\nSpecifically because MsBuild tool saves argument file in with the UserName appended to the .rsp file.\r\nhttps://github.com/dotnet/msbuild/pull/9232\r\n\r\nBut in general we should really handle if none ascii chars are in the path.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-09-25T07:09:20Z",
        "closed_at": "2023-10-02T10:02:03Z",
        "merged_at": null,
        "body": "Automated rollback of commit e699aa601a30add5a4c86844eedb941d49afbbb2.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-09-25T02:13:13Z",
        "closed_at": "2023-09-25T18:47:17Z",
        "merged_at": null,
        "body": "upb: create :grpc_only_hack visibility group\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 386,
        "deletions": 413,
        "changed_files": 52,
        "created_at": "2023-09-25T00:51:25Z",
        "closed_at": "2023-09-29T21:53:36Z",
        "merged_at": null,
        "body": "upb: merge \":collections\" into \":message\"\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-09-23T08:12:40Z",
        "closed_at": "2023-09-25T15:58:56Z",
        "merged_at": null,
        "body": "Proposition to add my own implementation of protobuf for the Zig programming language.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 70,
        "deletions": 313,
        "changed_files": 5,
        "created_at": "2023-09-23T00:08:27Z",
        "closed_at": "2023-09-27T02:20:56Z",
        "merged_at": null,
        "body": "Delete deprecated C++ utf8 validation feature\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 174,
        "deletions": 202,
        "changed_files": 14,
        "created_at": "2023-09-23T00:01:02Z",
        "closed_at": "2023-09-26T23:56:43Z",
        "merged_at": null,
        "body": "Migrate C++ utf8 validation to a global feature.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 310,
        "deletions": 88,
        "changed_files": 10,
        "created_at": "2023-09-22T23:01:40Z",
        "closed_at": "2023-09-26T19:48:44Z",
        "merged_at": null,
        "body": "Add utf8_validation feature back to the global feature set.\n\nThis will replace the language-specific features, with only java requiring a language-level override.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-09-22T22:02:29Z",
        "closed_at": "2023-09-26T21:38:48Z",
        "merged_at": null,
        "body": "Reorganize upb file structure\n\nThis change moves almost everything in the `upb/` directory up one level, so\nthat for example `upb/upb/generated_code_support.h` becomes just\n`upb/generated_code_support.h`. The only exceptions I made to this were that I\nleft `upb/cmake` and `upb/BUILD` where they are, mostly because that avoids\nconflict with other files and the current locations seem reasonable for now.\n\nThe `python/` directory is a little bit of a challenge because we had to merge\nthe existing directory there with `upb/python/`. I made `upb/python/BUILD` into\nthe BUILD file for the merged directory, and it effectively loads the contents\nof the other BUILD file via `python/build_targets.bzl`, but I plan to clean\nthis up soon.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 143,
        "deletions": 42,
        "changed_files": 5,
        "created_at": "2023-09-22T21:44:53Z",
        "closed_at": "2023-09-23T06:34:16Z",
        "merged_at": null,
        "body": "Fix upb_MiniTable_Equals, add test.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 1028,
        "changed_files": 51,
        "created_at": "2023-09-22T18:19:19Z",
        "closed_at": "2023-09-29T10:01:51Z",
        "merged_at": null,
        "body": "Remove internal-only code blocks\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 19,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2023-09-22T18:04:43Z",
        "closed_at": "2023-09-30T10:01:52Z",
        "merged_at": null,
        "body": "Switch extension check to use field number instead of pointer comparison to enable extension access across language implementations.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 26,
        "deletions": 10,
        "changed_files": 2,
        "created_at": "2023-09-22T17:34:50Z",
        "closed_at": "2023-09-23T06:28:50Z",
        "merged_at": null,
        "body": "Make Timestamp.ToDatetime more efficient\n\nThis constructs a datetime from the timestamp in seconds, then replaces dt.microsecond to ensure there's not a loss of precision. This avoids constructing a timedelta in all cases, plus an additional datetime object in the timezone-aware case.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 119,
        "deletions": 58,
        "changed_files": 11,
        "created_at": "2023-09-22T17:03:02Z",
        "closed_at": "2023-09-25T15:47:29Z",
        "merged_at": null,
        "body": "[ObjC] Wire the generation options through all the Field generators.\n\nNothing uses this yet, just gets things wired through.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-09-22T17:02:48Z",
        "closed_at": "2023-09-25T16:27:00Z",
        "merged_at": null,
        "body": "[ObjC] Clean up enum fields when not using fwd decls.\n\nHonor the generation option to create the minimal property for enum fields.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 47,
        "deletions": 32,
        "changed_files": 9,
        "created_at": "2023-09-22T17:02:41Z",
        "closed_at": "2023-09-25T14:59:29Z",
        "merged_at": null,
        "body": "[ObjC] Wire generation options through Enum, Extension, Message, Oneof generators.\n\nSwap out where the bool for stripping custom options was passed for\ndirect access to the generation options.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 193,
        "deletions": 6,
        "changed_files": 4,
        "created_at": "2023-09-22T16:59:44Z",
        "closed_at": "2023-09-26T07:42:46Z",
        "merged_at": null,
        "body": "add C# deterministic serialization (#13160)\n\nhttps://github.com/protocolbuffers/protobuf/issues/12881 \n\n@jskeet  review please :-) as this is my first contrib to protobuf, any design / performance feedback is very sought after\n\nCloses #13160\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/13160 from fmg-lydonchandra:feature/12881_cs_serialization_deterministic ab7e01b8049ec98b78eb9fb6e04e8fe30ecd9a33\nFUTURE_COPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/13160 from fmg-lydonchandra:feature/12881_cs_serialization_deterministic ab7e01b8049ec98b78eb9fb6e04e8fe30ecd9a33\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-09-22T16:59:16Z",
        "closed_at": "2023-09-22T18:41:55Z",
        "merged_at": null,
        "body": "Update upb wheel tests to use ubuntu-latest\n\nIt appears that ubuntu-18 and ubuntu-20 don't exist anymore, and using\nubuntu-latest seems better for consistency anyway.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 138,
        "deletions": 1,
        "changed_files": 10,
        "created_at": "2023-09-22T16:59:03Z",
        "closed_at": "2023-09-26T07:25:09Z",
        "merged_at": null,
        "body": "Add .NET debugging attributes (#14097)\n\nI've been working with a large Protobuf model and noticed debugging issues that can easily be improved.\n\nAdd debugging attributes to collections, `ByteString`, and descriptors. No impact on runtime behavior. Debugger type proxies are what the debugger displays by default, but full data is available by selecting \"Raw View\".\n\n`RepeatedField` and `MapField` now display their item count. This is standard across .NET collections. For example, .NET's list and dictionary both display `Count = {Count}`.\n\nNote that previously, Protobuf collections displayed the result of `ToString`, which returned JSON. The JSON debug view isn't useful when there is too much content to display at once because it's truncated. That experience will be fairly common.\n\nCount benefits:\n* Always useful\n* Makes debugging Protobuf collections feel more like regular .NET collections\n* Collection contents is now easier to access with debugger type proxies\n\nNo dependency between this PR and https://github.com/protocolbuffers/protobuf/pull/13838. Each can be merged independently.\n\n**MapField before:**\n\n![image](https://github.com/protocolbuffers/protobuf/assets/303201/9dd3baa9-4432-446e-9049-1f7268d5be4c)\n\n**MapField after:**\n\n![image](https://github.com/protocolbuffers/protobuf/assets/303201/ac4aea33-e339-49e0-9a67-c174d2608393)\n\n**RepeatedField before:**\n\n![image](https://github.com/protocolbuffers/protobuf/assets/303201/16353785-bef4-4489-a3ab-de2437d51d4e)\n\n**RepeatedField after:**\n\n![image](https://github.com/protocolbuffers/protobuf/assets/303201/f3de7680-ded9-41d8-aac0-84a9e7b65c98)\n\n**ByteString before:**\n\n![image](https://github.com/protocolbuffers/protobuf/assets/303201/4febc400-1eb7-46ee-911e-a7698783a358)\n\n**ByteString after:**\n\n![image](https://github.com/protocolbuffers/protobuf/assets/303201/7635080e-9bb0-4f61-9a39-afbb9e575051)\n\n**Descriptor before:**\n\n![image](https://github.com/protocolbuffers/protobuf/assets/303201/5b89792b-a16a-4641-a50c-5355b5230b5d)\n\n**Descriptor after:**\n\n![image](https://github.com/protocolbuffers/protobuf/assets/303201/5047dc1e-c93b-43d5-bb8c-a6976a9ae6da)\n\n**TypeRegistry before:**\n\n![image](https://github.com/protocolbuffers/protobuf/assets/303201/d4aedf19-22cc-49b5-8717-9299e00abc85)\n\n**TypeRegistry after:**\n\n![image](https://github.com/protocolbuffers/protobuf/assets/303201/4a473595-74b9-40e2-96b8-2b103d5f44b0)\n\nCloses #14097\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/14097 from JamesNK:jamesnk/debugging f0dea3464d471042a59e9c0000a5e65e8c9bc46b\nFUTURE_COPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/14097 from JamesNK:jamesnk/debugging f0dea3464d471042a59e9c0000a5e65e8c9bc46b\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 64,
        "deletions": 220,
        "changed_files": 5,
        "created_at": "2023-09-22T16:40:44Z",
        "closed_at": "2023-09-22T20:38:26Z",
        "merged_at": null,
        "body": "Remove some function overrides from MapEntry and use the ones from Message.\nThis saves on binary size.\nPlus, some other minor fixes to make the object more like normal codegen'd types.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 36,
        "deletions": 106,
        "changed_files": 8,
        "created_at": "2023-09-22T15:37:33Z",
        "closed_at": "2023-09-29T10:01:54Z",
        "merged_at": null,
        "body": "Enforce stricter version checks for Protobuf C++ by removing the notion of \"minimal version of protoc/headers\"; exact version match is required.\n\nAccording to https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp, since there's no guarantees for cross-version support even for the micro/patch versions, we shouldn't allow range of versions that could be backward-compatible with, either, and should detach the corresponding version verifications.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 220,
        "deletions": 216,
        "changed_files": 1,
        "created_at": "2023-09-22T15:28:50Z",
        "closed_at": "2023-09-22T17:50:02Z",
        "merged_at": null,
        "body": "Improve .NET debugging of Protobuf messages (#13838)\n\nGenerated .NET protobuf messages override `ToString` and return JSON. By default, the .NET debugger displays the result from `ToString` and wraps it in curly braces, e.g. `{{ \"Message\": \"Hello world\" }}`. The double curly braces is an ugly result. People expecting JSON here are confused.\n\nThis PR adds a [DebuggerDisplayAttribute](https://learn.microsoft.com/en-us/dotnet/api/system.diagnostics.debuggerdisplayattribute?view=net-7.0) to generated messages. The attribute tells the debugger to not quote the ToString value with `nq`.\n\nBefore:\n![image](https://github.com/protocolbuffers/protobuf/assets/303201/b1cc5f45-4064-4ba0-b266-8894ca0f35c8)\n\nAfter:\n![image](https://github.com/protocolbuffers/protobuf/assets/303201/70f6ffc0-9421-428d-bc22-ead7aa82c37f)\n\nI haven't touched the protoc compiler in a long time. I'm guessing I need to build it and then run it to regenerate the checked-in code. I don't suppose someone else could do that? It would save me a lot of time \ud83d\ude2c \n\nCloses #13838\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/13838 from JamesNK:jamesnk/csharp-message-debuggerdisplay 5222b82cf96a4cbfb9ab0dcc2b815dccc5b309a0\nFUTURE_COPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/13838 from JamesNK:jamesnk/csharp-message-debuggerdisplay 5222b82cf96a4cbfb9ab0dcc2b815dccc5b309a0\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-22T08:25:16Z",
        "closed_at": "2023-09-26T20:06:55Z",
        "merged_at": null,
        "body": "<iostream> embeds a global constructor (to initialize std::cout and such), typically `static ios_base::Init __ioinit;` in libstdc++).\r\n\r\nThis header is not directly necessary in the common header and has a small impact on every compilation unit that includes it.\r\n\r\nAs an example, removing that header dependency in turns suppresses 33 global constructors from the firefox core library libxul.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 184,
        "deletions": 38,
        "changed_files": 8,
        "created_at": "2023-09-22T04:51:07Z",
        "closed_at": "2023-09-29T10:01:56Z",
        "merged_at": null,
        "body": "Field property support in upb python\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 118,
        "deletions": 18,
        "changed_files": 2,
        "created_at": "2023-09-22T02:34:14Z",
        "closed_at": "2023-09-28T01:02:57Z",
        "merged_at": null,
        "body": "Ensure Timestamp.ToDatetime(tz) has correct offset\n\nThe previous code did not work because timedelta arithmetic does not do timezone conversions. The result of adding a timedelta to a datetime has the same fixed UTC offset as the original datetime. This resulted in the correct timezone not being applied by `Timestamp.ToDatetime(tz)` whenever the UTC offset for the timezone at the represented moment was not the same as the UTC offset for that timezone at the epoch.\n\nInstead, construct the datetime directly from the seconds part of the timestamp. It would be nice to include the nanoseconds as well (truncated to datetime's millisecond precision, but without unnecessary loss of precision). However, that doesn't work, since there isn't a way to construct a datetime from an integer-milliseconds timestamp, just float-seconds, which doesn't allow some datetime values to round-trip correctly. (This does assume that `tzinfo.utcoffset(dt).microseconds` is always zero, and that the value returned by `tzinfo.utcoffset(dt)` doesn't change mid-second. Neither of these is necessarily the case (see https://github.com/python/cpython/issues/49538), though I'd hope they hold in practice.)\n\nThis does take some care to still handle non-standard Timestamps where nanos is more than 1,000,000,000 (i.e. more than a second), since previously ToDatetime handled that, as do the other To* conversion methods.\n\nThe bug doesn't manifest for UTC (or any fixed-offset timezone), so it can be worked around in a way that will be correct before and after the fix by replacing `ts.ToDatetime(tz)` with `ts.ToDatetime(datetime.timezone.utc).astimezone(tz)`.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 19,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-09-21T23:36:05Z",
        "closed_at": "2023-09-28T10:01:53Z",
        "merged_at": null,
        "body": "Manually unroll the loop in CodedOutputStream.ArrayEncoder.writeUInt32NoTag.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-09-21T22:45:38Z",
        "closed_at": "2023-09-25T16:22:20Z",
        "merged_at": null,
        "body": "Shorten our license headers into an abbreviated form that references LICENSE instead of including it in full.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 41,
        "deletions": 55,
        "changed_files": 3,
        "created_at": "2023-09-21T21:42:28Z",
        "closed_at": "2023-09-28T10:01:55Z",
        "merged_at": null,
        "body": "Factored logic for whether to serialize a value or not into a shared place.\n\nIt is currently only used by the serializer, but will soon be used to implement `MergeFrom()` also.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 51,
        "deletions": 49,
        "changed_files": 34,
        "created_at": "2023-09-21T21:41:33Z",
        "closed_at": "2023-09-22T17:54:59Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-09-21T20:53:06Z",
        "closed_at": "2023-09-26T15:53:44Z",
        "merged_at": null,
        "body": "Allocate the Cord element in the arena, instead of allocating on the heap and\nthen passing ownership to the arena.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 31,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2023-09-21T18:26:55Z",
        "closed_at": "2023-09-22T18:26:54Z",
        "merged_at": null,
        "body": "[ObjC] Handle transtive public imports in minimal imports mode\n\nIf using minimal imports, a non direct import might be needed because\nit is a public import of an other wise not required header; ensure\nthe import makes it into the generated code to type definitions can\nbe found.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-09-21T18:06:37Z",
        "closed_at": "2023-09-28T10:01:57Z",
        "merged_at": null,
        "body": "Add missing debugging version info to Protobuf Java gencode when multiple files are generated.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2023-09-21T17:17:25Z",
        "closed_at": "2023-09-28T10:02:00Z",
        "merged_at": null,
        "body": "internal change\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 60,
        "deletions": 60,
        "changed_files": 10,
        "created_at": "2023-09-21T16:49:19Z",
        "closed_at": "2023-09-28T10:02:02Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-21T16:26:56Z",
        "closed_at": "2023-09-28T10:02:04Z",
        "merged_at": null,
        "body": "clean up spacing near message.cc::new_thunk\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 263,
        "deletions": 215,
        "changed_files": 8,
        "created_at": "2023-09-21T14:29:03Z",
        "closed_at": "2023-09-21T20:24:25Z",
        "merged_at": null,
        "body": "Fix several ClangTidy warnings in the codegen.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 14,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2023-09-21T09:26:05Z",
        "closed_at": "2023-09-21T16:46:36Z",
        "merged_at": null,
        "body": "upb: fix most of the ClangTidy warnings in util/required_fields.h\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 34,
        "deletions": 8,
        "changed_files": 2,
        "created_at": "2023-09-21T02:28:27Z",
        "closed_at": "2023-09-21T19:10:29Z",
        "merged_at": null,
        "body": "Faster swap.\n\nArena never changes, so no need to swap it.\n\nAlso explicitly instantiated memswap template to reduce code size.\n\n```\nname                              old INSTRUCTIONS/op     new INSTRUCTIONS/op     delta\nBM_ProtoSwap<TestAllTypes>           356 \u00b1 0%                300 \u00b1 0%  -15.73%      (p=0.000 n=100+100)\nBM_ProtoSwap<NestedTestAllTypes>    67.0 \u00b1 0%               63.0 \u00b1 0%   -5.97%      (p=0.000 n=100+100)\nBM_ProtoSwap<ForeignMessage>        31.0 \u00b1 0%               31.0 \u00b1 0%     ~     (all samples are equal)\nBM_ProtoSwap<TestAllExtensions>     52.0 \u00b1 0%               52.0 \u00b1 0%     ~     (all samples are equal)\n```\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 55,
        "deletions": 468,
        "changed_files": 18,
        "created_at": "2023-09-20T22:51:36Z",
        "closed_at": "2023-09-21T16:23:04Z",
        "merged_at": null,
        "body": "Shorten our license headers into an abbreviated form that references LICENSE instead of including it in full.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2023-09-20T22:41:54Z",
        "closed_at": "2023-09-21T17:19:30Z",
        "merged_at": null,
        "body": "upb: clean up the headers in upb/mini_table/\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 491,
        "deletions": 541,
        "changed_files": 7,
        "created_at": "2023-09-20T21:33:15Z",
        "closed_at": "2023-09-21T00:03:18Z",
        "merged_at": null,
        "body": "Prepare to reorganize upb file structure\n\nI am getting ready to move almost everything under the upb/ directory up one\nlevel to integrate upb better into its new location in the protobuf repo. This\nchange makes a few tweaks to prepare for that:\n- Delete upb's LICENSE and CONTRIBUTING.md files since we already have similar\n  files at the top level.\n- Rename `//python:python_version` so that it won't conflict later with\n  `//upb/python:python_version`.\n- Move the contents of python/BUILD.bazel out to a Bazel macro to facilitate\n  merging that BUILD.bazel file with upb/python/BUILD.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-09-20T21:19:45Z",
        "closed_at": "2023-09-21T18:09:20Z",
        "merged_at": null,
        "body": "Add missing debugging version info to Protobuf Java gencode when multiple files are generated.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 38,
        "deletions": 33,
        "changed_files": 1,
        "created_at": "2023-09-20T19:41:22Z",
        "closed_at": "2023-09-21T13:22:01Z",
        "merged_at": null,
        "body": "Move some processing off to a secondary noinline function. This significantly\nreduces the stack usage of the recursive function.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2023-09-20T18:20:55Z",
        "closed_at": "2023-09-22T19:42:47Z",
        "merged_at": null,
        "body": "Require Python >=3.8 and add 3.11 to test matrix\n\nDropping 3.7 support was already announced in https://protobuf.dev/news/2023-07-06/ and meant to be dropped in \nhttps://github.com/protocolbuffers/protobuf/pull/13219 but tests / setup.py were missed.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 40,
        "deletions": 6,
        "changed_files": 4,
        "created_at": "2023-09-20T18:05:14Z",
        "closed_at": "2023-09-28T10:02:07Z",
        "merged_at": null,
        "body": "Properly untrack Python GC objects during deallocation.\n\nAdd PyObject_GC_UnTrack() in deallocation functions for Python types that\nhave PyTPFLAGS_HAVE_GC set, either explicitly or by inheriting from a type\nwith GC set. Not untracking before clearing instance data introduces\npotential race conditions (if GC happens to run between the partial clearing\nand the actual deallocation) and produces a warning under Python 3.11.\n\n(The warning then triggered an assertion failure, which only showed up when\nbuilding in Py_DEBUG mode; this therefor also fixes that assertion failure.)\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 114,
        "deletions": 134,
        "changed_files": 7,
        "created_at": "2023-09-20T17:09:55Z",
        "closed_at": "2023-09-27T20:29:37Z",
        "merged_at": null,
        "body": "Migrated upb rules to use proto_common.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 5,
        "changed_files": 3,
        "created_at": "2023-09-20T17:07:49Z",
        "closed_at": "2023-09-21T03:29:17Z",
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 5,
        "changed_files": 3,
        "created_at": "2023-09-20T16:01:56Z",
        "closed_at": "2023-09-21T14:58:20Z",
        "merged_at": null,
        "body": null,
        "comments": 1
    },
    {
        "merged": false,
        "additions": 66,
        "deletions": 573,
        "changed_files": 22,
        "created_at": "2023-09-20T15:59:15Z",
        "closed_at": "2023-09-20T18:20:47Z",
        "merged_at": null,
        "body": "Shorten our license headers into an abbreviated form that references LICENSE instead of including it in full.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-20T13:52:31Z",
        "closed_at": "2023-09-21T03:01:07Z",
        "merged_at": null,
        "body": "Removed unused variable.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-09-20T12:33:19Z",
        "closed_at": "2023-09-21T05:01:31Z",
        "merged_at": null,
        "body": "Internal Code Change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-19T21:42:17Z",
        "closed_at": "2023-09-21T16:33:36Z",
        "merged_at": null,
        "body": "clean up spacing near message.cc::new_thunk\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-09-19T21:24:40Z",
        "closed_at": "2023-09-28T20:58:03Z",
        "merged_at": null,
        "body": "Move Java features proto to Java runtime and bootstrap compiler with cpp gencode.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 111,
        "deletions": 14,
        "changed_files": 7,
        "created_at": "2023-09-19T21:09:11Z",
        "closed_at": "2023-09-27T10:01:49Z",
        "merged_at": null,
        "body": "Skip generating ArenaDtor if there is only one field that needs to be destroyed. Instead, register the field directly.\n\nThis change saves on binary size because we can avoid per-message ArenaDtor functions. It can also save on runtime memory costs because we have custom support in the arena for certain low level types like absl::Cord. Those types cost half as much when registering for destruction.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 118,
        "deletions": 210,
        "changed_files": 8,
        "created_at": "2023-09-19T18:08:31Z",
        "closed_at": "2023-09-21T13:54:10Z",
        "merged_at": null,
        "body": "InternalSwap does not need two arenas, since they are required to be the same\none.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-09-19T17:30:46Z",
        "closed_at": "2023-09-19T18:53:06Z",
        "merged_at": null,
        "body": "Shorten our license headers into an abbreviated form that references LICENSE instead of including it in full.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 239,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2023-09-19T15:45:51Z",
        "closed_at": "2023-09-26T10:01:48Z",
        "merged_at": null,
        "body": "[ObjC] Add utility for getting the ObjC type for a file.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-19T06:57:23Z",
        "closed_at": "2023-09-26T10:01:51Z",
        "merged_at": null,
        "body": "Apply clang-tidy fixes to change static_cast to proto2::DynamicCastToGenerated.\n\nDowncast using any built-in cast operator (like static_cast, dynamic_cast) from proto2::Message* to any derived type may result undefined behaviour after the launch of go/protobuf-weak-speed-messages. This cl removes such usages of static_cast and replaces them with proto2::DynamicCastToGenerated.\n\nThe changelist was automatically generated using the apply_fixes.sh script:\n  devtools/cymbal/clang_tidy/apply_fixes.sh --allowlist=/tmp/clang_violations_allowlist.txt --subcategories=google3-runtime-protobuf-typecast-check\n\nTrack: live\nFindings source: /cns/yv-d/home/debadribasak/2023-09-14/clang_tidy@*\nSubcategories: google3-runtime-protobuf-typecast-check\n\n#codehealth\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 79,
        "deletions": 52,
        "changed_files": 2,
        "created_at": "2023-09-19T01:26:05Z",
        "closed_at": "2023-09-26T10:01:53Z",
        "merged_at": null,
        "body": "`RepeatedPtrField::Add` is ~5% faster.\n\nMoving logic to one place allows to remove a branch on `using_sso()`.\n\nSide effect: `.strtab` section increases in size (to store function names), `.text` section reduces in size (less inlined code).\n\n```\nname                                   old time/op             new time/op             delta\nBM_RepeatedPtrField_Add_Sso            11.0ns \u00b1 4%             10.4ns \u00b1 7%   -5.71%        (p=0.000 n=83+85)\nBM_RepeatedPtrField_Add_FallbackToRep  21.8ns \u00b1 4%             20.8ns \u00b1 5%   -4.55%        (p=0.000 n=80+83)\nBM_RepeatedPtrField_Add_Small          17.3ns \u00b1 4%             15.8ns \u00b1 5%   -8.86%        (p=0.000 n=78+85)\nBM_RepeatedPtrField_Add_Large          22.6ns \u00b112%             21.1ns \u00b110%   -6.62%       (p=0.000 n=100+92)\nBM_RepeatedPtrField_Add_HasCleared     4.15ns \u00b111%             4.43ns \u00b1 6%   +6.67%        (p=0.000 n=82+87)\nBM_RepeatedPtrField_AddAllocated       12.0ns \u00b119%             12.0ns \u00b114%     ~           (p=0.678 n=92+96)\n\nname                                   old INSTRUCTIONS/op     new INSTRUCTIONS/op     delta\nBM_RepeatedPtrField_Add_Sso               101 \u00b1 1%                 88 \u00b1 2%  -13.05%      (p=0.000 n=100+100)\nBM_RepeatedPtrField_Add_FallbackToRep     222 \u00b1 1%                206 \u00b1 1%   -7.35%      (p=0.000 n=100+100)\nBM_RepeatedPtrField_Add_Small             180 \u00b1 0%                164 \u00b1 1%   -8.69%      (p=0.000 n=100+100)\nBM_RepeatedPtrField_Add_Large             110 \u00b1 0%                100 \u00b1 0%   -9.07%       (p=0.000 n=100+99)\nBM_RepeatedPtrField_Add_HasCleared       27.6 \u00b1 1%               36.6 \u00b1 1%  +32.44%      (p=0.000 n=100+100)\nBM_RepeatedPtrField_AddAllocated          114 \u00b1 7%                115 \u00b111%   +0.95%      (p=0.007 n=100+100)\n```\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-09-18T21:29:11Z",
        "closed_at": "2023-09-18T23:30:09Z",
        "merged_at": null,
        "body": "Shorten our license headers into an abbreviated form that references LICENSE instead of including it in full.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 36,
        "deletions": 22,
        "changed_files": 3,
        "created_at": "2023-09-18T20:23:07Z",
        "closed_at": "2023-09-25T10:02:20Z",
        "merged_at": null,
        "body": "Add toolchain targets next to proto_lang_toolchain\n\nSetting toolchain_type causes proto_lang_toolchain macro to add additional targets.\n\nThis needs rules_proto, rules_java, rules_cc and rules_python release.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 335,
        "deletions": 3,
        "changed_files": 10,
        "created_at": "2023-09-18T20:01:17Z",
        "closed_at": "2023-09-19T15:23:28Z",
        "merged_at": null,
        "body": "Added field-level control over UTF-8 enforcement, and started respecting `enforce_utf8` in google3.\n\nPrior to this CL, upb MiniDescriptors only allowed per-message control over UTF-8.  This CL adds a new field-level modifier to upb MiniDescriptors that can flip a field to the opposite of the message default, like we already have for packed, allowing per-field control over UTF-8 validation.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 33,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-09-18T19:11:30Z",
        "closed_at": "2023-09-18T23:51:37Z",
        "merged_at": null,
        "body": "Ban packed option in editions.\n\nThis has been replaced with a feature in edition 2023, and we shouldn't allow both to be specified.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-09-18T18:54:42Z",
        "closed_at": "2023-09-18T20:51:59Z",
        "merged_at": null,
        "body": "Add support accessing simple scalars (int32s, bools, and floats) in submessages\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 18,
        "deletions": 12,
        "changed_files": 1,
        "created_at": "2023-09-18T16:57:49Z",
        "closed_at": "2023-09-25T10:02:22Z",
        "merged_at": null,
        "body": "Merge branches for message split.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 28,
        "deletions": 67,
        "changed_files": 6,
        "created_at": "2023-09-18T16:25:50Z",
        "closed_at": "2023-09-19T18:41:51Z",
        "merged_at": null,
        "body": "[ObjC] Move the property decls over to the new api.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 239,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2023-09-18T16:25:22Z",
        "closed_at": "2023-09-19T15:44:47Z",
        "merged_at": null,
        "body": "[ObjC] Add utility for getting the ObjC type for a file.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 25,
        "deletions": 171,
        "changed_files": 5,
        "created_at": "2023-09-18T15:50:58Z",
        "closed_at": "2023-09-19T19:55:11Z",
        "merged_at": null,
        "body": "[ObjC] Move storage type info over to the new helper.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2023-09-18T15:19:51Z",
        "closed_at": "2023-09-27T10:01:52Z",
        "merged_at": null,
        "body": "Change bytes accessors to expose only List<int>, making Bytes an internal implementation detail.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-18T12:18:19Z",
        "closed_at": "2023-10-13T21:10:33Z",
        "merged_at": null,
        "body": "Bumps [shivammathur/setup-php](https://github.com/shivammathur/setup-php) from 2.24.0 to 2.26.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/shivammathur/setup-php/releases\">shivammathur/setup-php's releases</a>.</em></p>\n<blockquote>\n<h2>2.26.0</h2>\n<h2>Changelog</h2>\n<h3>Microsoft SQL Server extensions. (<a href=\"https://redirect.github.com/shivammathur/setup-php/issues/758\">#758</a>, <a href=\"https://redirect.github.com/shivammathur/setup-php/issues/766\">#766</a>)</h3>\n<p>The latest supported version of <code>sqlsrv</code> and <code>pdo_sqlsrv</code> for the PHP version will be installed.\nAlso, on Windows, these extensions will be installed from <a href=\"https://github.com/microsoft/msphpsql\"><code>microsoft/msphpsql</code></a> GitHub releases and will fallback to <code>pecl</code>.</p>\n<pre lang=\"yaml\"><code>- name: Setup PHP\n  uses: shivammathur/setup-php@v2\n  with:\n    php-version: '8.2'\n    extensions: sqlsrv, pdo_sqlsrv\n</code></pre>\n<h3>PHP 8.4 Support (<a href=\"https://redirect.github.com/shivammathur/setup-php/issues/762\">#762</a>)</h3>\n<p>Added support for PHP <code>8.4.0-dev</code> from the master branch of <a href=\"https://github.com/php/php-src\"><code>php/php-src</code></a> for all supported OS.\n<strong>Note</strong>: PHP <code>8.3.0-dev</code> is now built from the new <a href=\"https://github.com/php/php-src/tree/PHP-8.3\"><code>PHP-8.3</code></a> branch.</p>\n<pre lang=\"yaml\"><code>- name: Setup PHP\n  uses: shivammathur/setup-php@v2\n  with:\n    php-version: '8.4'\n</code></pre>\n<h2>Fixes</h2>\n<h3>Blackfire Player</h3>\n<p>Resolved issues affecting the <code>blackfire-player</code> on Linux and macOS. It now installs the <code>uuid</code> extension that is required for the tool.\nDropped support for it on Windows as <code>uuid</code> extension is not available for the OS.</p>\n<pre lang=\"yaml\"><code>- name: Setup PHP\n  uses: shivammathur/setup-php@v2\n  with:\n    tools: blackfire-player\n</code></pre>\n<h2>Updates</h2>\n<h3>Update actions/checkout</h3>\n<p>Updated the use of <code>actions/checkout</code> to v4 in the documentation and workflows.</p>\n<pre lang=\"yaml\"><code>- name: Checkout\n  uses: actions/checkout@v4\n</code></pre>\n<h3>Update Node.js Version</h3>\n<p><strong>Note</strong>: Node.js 16 reached End-of-Life on 2023-09-11 (<a href=\"https://nodejs.dev/en/about/releases/\">Ref</a>).</p>\n<p>Updated <code>action.yml</code> to use the <code>node20</code> binary. If you use <code>setup-php</code> on a self-hosted runner, please make sure it is <a href=\"https://github.com/actions/runner/releases/tag/v2.308.0\">v2.308.0</a> or newer to use this release or the major version tag <code>v2</code>.</p>\n<h3>Node.js Dependencies</h3>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/shivammathur/setup-php/commit/7fdd3ece872ec7ec4c098ae5ab7637d5e0a96067\"><code>7fdd3ec</code></a> Fix blackfire-player on Linux and macOS</li>\n<li><a href=\"https://github.com/shivammathur/setup-php/commit/0de5aa91400e2db529648700b926d7aadd90e9fa\"><code>0de5aa9</code></a> Bump version to 2.26.0</li>\n<li><a href=\"https://github.com/shivammathur/setup-php/commit/a6e0b1404f31fa05f9b714a9a22fdff096e0a9ea\"><code>a6e0b14</code></a> Bump Node.js dependencies</li>\n<li><a href=\"https://github.com/shivammathur/setup-php/commit/5d259c66b1a041c1f8f934fb0e75bfaed72edd03\"><code>5d259c6</code></a> Bump node version to 20 in action.yml</li>\n<li><a href=\"https://github.com/shivammathur/setup-php/commit/62078293612f15211cd9f3e4fb2c36776c1d8742\"><code>6207829</code></a> Update use of actions/checkout to v4</li>\n<li><a href=\"https://github.com/shivammathur/setup-php/commit/319feb83c2cac73226f628f88f3871021be36bbd\"><code>319feb8</code></a> Add support to install sqlsrv and pdo_sqlsrv from GitHub releases</li>\n<li><a href=\"https://github.com/shivammathur/setup-php/commit/661ad4bf75a922a7dace4e84776dc0666997484b\"><code>661ad4b</code></a> Fix enabling latest pecl extensions</li>\n<li><a href=\"https://github.com/shivammathur/setup-php/commit/04c15e2314eb2fe14d9c72a4980e5de39bbe586c\"><code>04c15e2</code></a> Remove hardcoded latest version for sqlsrv and pdo_sqlsrv</li>\n<li><a href=\"https://github.com/shivammathur/setup-php/commit/5aa416d77b0ac6a16af87d8bfc23819288844fd0\"><code>5aa416d</code></a> Merge pull request <a href=\"https://redirect.github.com/shivammathur/setup-php/issues/766\">#766</a> from GrahamCampbell/patch-1</li>\n<li><a href=\"https://github.com/shivammathur/setup-php/commit/a9a661ccd431b88b57d08869e0f11f98ecd63033\"><code>a9a661c</code></a> Use sqlsvr 5.11.1 on PHP 8</li>\n<li>Additional commits viewable in <a href=\"https://github.com/shivammathur/setup-php/compare/d30ad8b1843ace22e6698ab99bbafaa747b6bd0d...7fdd3ece872ec7ec4c098ae5ab7637d5e0a96067\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=shivammathur/setup-php&package-manager=github_actions&previous-version=2.24.0&new-version=2.26.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 52,
        "deletions": 33,
        "changed_files": 7,
        "created_at": "2023-09-17T23:01:06Z",
        "closed_at": "2023-09-25T10:02:25Z",
        "merged_at": null,
        "body": "Internal Change\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 21,
        "deletions": 21,
        "changed_files": 1,
        "created_at": "2023-09-17T12:39:44Z",
        "closed_at": "2023-09-24T10:01:57Z",
        "merged_at": null,
        "body": "Use unsafe.getByte() instead of array access\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 52,
        "deletions": 26,
        "changed_files": 6,
        "created_at": "2023-09-15T22:26:16Z",
        "closed_at": "2023-09-19T15:25:54Z",
        "merged_at": null,
        "body": "Move `InitializationErrorString` into the secondary descriptor based vtable.\nThis saves one virtual function for each message type.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-09-15T20:34:41Z",
        "closed_at": "2023-09-18T22:18:06Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 16,
        "changed_files": 3,
        "created_at": "2023-09-15T20:32:45Z",
        "closed_at": "2023-09-22T10:02:17Z",
        "merged_at": null,
        "body": "Breaking change: Make deprecated Java gencode PARSER variable private.\n\nThis was marked deprecated ~8 years ago.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 129,
        "deletions": 110,
        "changed_files": 4,
        "created_at": "2023-09-15T18:34:16Z",
        "closed_at": "2023-09-15T20:46:53Z",
        "merged_at": null,
        "body": "#include foo.upb_minitable.h instead of having foo.upb.h forward-declare MiniTables.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 38,
        "deletions": 54,
        "changed_files": 2,
        "created_at": "2023-09-15T17:17:03Z",
        "closed_at": "2023-09-19T14:44:39Z",
        "merged_at": null,
        "body": "Reserve/InternalExtend use capacity instead of size as input.\n\nThis allows to remove branch from `InternalExtend` which is beneficial for small fields.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-09-15T16:53:04Z",
        "closed_at": "2023-09-22T10:02:19Z",
        "merged_at": null,
        "body": "Refactor pb_runtime to split the public and private apis.\n\nThe public api consists of two build targets: pb_runtime and pb_runtime_types; they are necessarily split because the pb_runtime deps onto the kernel which needs to transitively dep onto the exported types.\n\nThe types themselves are split into the public interface and the internal one\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 14,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2023-09-15T16:14:20Z",
        "closed_at": "2023-09-22T10:02:22Z",
        "merged_at": null,
        "body": "Debug why bazelisk cache isn't getting used\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 61,
        "deletions": 37,
        "changed_files": 18,
        "created_at": "2023-09-15T15:55:08Z",
        "closed_at": "2023-09-15T21:32:32Z",
        "merged_at": null,
        "body": "[ObjC] ClangTidy fixes, no functional changes.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 6,
        "changed_files": 3,
        "created_at": "2023-09-15T15:19:01Z",
        "closed_at": "2023-09-15T16:32:41Z",
        "merged_at": null,
        "body": "Optimized google3 build by not including the empty .upb.c file.\n\nThis should hopefully resolve the Build Doctor issue (extra file count) reported by Superroot in b/300547532.\n\nUnfortunately in OSS with Bazel it appears that we must include this empty file, otherwise we get compile errors.  More info in: b/300637173\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 138,
        "deletions": 1,
        "changed_files": 10,
        "created_at": "2023-09-15T14:43:15Z",
        "closed_at": "2023-09-26T07:25:08Z",
        "merged_at": null,
        "body": "I've been working with a large Protobuf model and noticed debugging issues that can easily be improved.\r\n\r\nAdd debugging attributes to collections, `ByteString`, and descriptors. No impact on runtime behavior. Debugger type proxies are what the debugger displays by default, but full data is available by selecting \"Raw View\".\r\n\r\n`RepeatedField` and `MapField` now display their item count. This is standard across .NET collections. For example, .NET's list and dictionary both display `Count = {Count}`.\r\n\r\nNote that previously, Protobuf collections displayed the result of `ToString`, which returned JSON. The JSON debug view isn't useful when there is too much content to display at once because it's truncated. That experience will be fairly common.\r\n\r\nCount benefits:\r\n* Always useful\r\n* Makes debugging Protobuf collections feel more like regular .NET collections\r\n* Collection contents is now easier to access with debugger type proxies\r\n\r\nNo dependency between this PR and https://github.com/protocolbuffers/protobuf/pull/13838. Each can be merged independently.\r\n\r\n**MapField before:**\r\n\r\n![image](https://github.com/protocolbuffers/protobuf/assets/303201/9dd3baa9-4432-446e-9049-1f7268d5be4c)\r\n\r\n**MapField after:**\r\n\r\n![image](https://github.com/protocolbuffers/protobuf/assets/303201/ac4aea33-e339-49e0-9a67-c174d2608393)\r\n\r\n**RepeatedField before:**\r\n\r\n![image](https://github.com/protocolbuffers/protobuf/assets/303201/16353785-bef4-4489-a3ab-de2437d51d4e)\r\n\r\n**RepeatedField after:**\r\n\r\n![image](https://github.com/protocolbuffers/protobuf/assets/303201/f3de7680-ded9-41d8-aac0-84a9e7b65c98)\r\n\r\n**ByteString before:**\r\n\r\n![image](https://github.com/protocolbuffers/protobuf/assets/303201/4febc400-1eb7-46ee-911e-a7698783a358)\r\n\r\n**ByteString after:**\r\n\r\n![image](https://github.com/protocolbuffers/protobuf/assets/303201/7635080e-9bb0-4f61-9a39-afbb9e575051)\r\n\r\n**Descriptor before:**\r\n\r\n![image](https://github.com/protocolbuffers/protobuf/assets/303201/5b89792b-a16a-4641-a50c-5355b5230b5d)\r\n\r\n**Descriptor after:**\r\n\r\n![image](https://github.com/protocolbuffers/protobuf/assets/303201/5047dc1e-c93b-43d5-bb8c-a6976a9ae6da)\r\n\r\n**TypeRegistry before:**\r\n\r\n![image](https://github.com/protocolbuffers/protobuf/assets/303201/d4aedf19-22cc-49b5-8717-9299e00abc85)\r\n\r\n**TypeRegistry after:**\r\n\r\n![image](https://github.com/protocolbuffers/protobuf/assets/303201/4a473595-74b9-40e2-96b8-2b103d5f44b0)",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-09-15T13:27:22Z",
        "closed_at": "2023-09-15T15:06:17Z",
        "merged_at": null,
        "body": "Forward-declare extension minitables in the header file generated by the `upb_minitable_proto_library()` rule\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-15T08:58:39Z",
        "closed_at": "2023-09-22T10:02:24Z",
        "merged_at": null,
        "body": "Try max small capacity to be lower\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 50,
        "deletions": 1,
        "changed_files": 4,
        "created_at": "2023-09-15T06:47:11Z",
        "closed_at": "2023-09-15T18:34:47Z",
        "merged_at": null,
        "body": "On demand create message meta class for upb python\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-09-15T00:36:35Z",
        "closed_at": "2023-09-15T02:16:45Z",
        "merged_at": null,
        "body": "Include wire_format_verify.h\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 144,
        "deletions": 20,
        "changed_files": 10,
        "created_at": "2023-09-14T23:15:10Z",
        "closed_at": "2023-09-21T18:33:33Z",
        "merged_at": null,
        "body": "Add CI runs for testing upb Python wheels\n\nThis restores the Python wheel CI runs from the old upb repo with only minor\nchanges. I had to update a path in one of the `py_wheel` rules and also make a\nslight tweak to ensure that the `descriptor.upb_minitable.{h,c}` files make it\ninto the source wheels. The change in text_format_test.py is not strictly\nnecessary but is a small simplification I made while I was trying to debug an\nissue with CRLF newlines.\n\nI had to update test_util.py to use `importlib` to access the golden files from\nthe installed `protobuftests` package. I suspect the previous incarnation of\nthse test runs was somehow reading the goldens from the repo checkout, but I\nthink the intention is to read them from `protobuftests` instead. This was a\nbit tricky to get working because Python versions before 3.9 do not support\n`importlib.resources.files()`. I set up the code to fall back on\n`importlib.resources.open_binary()` in that case, but that function does not\nsupport subdirectories, so this required putting an `__init__.py` file inside\nthe `testdata` directory to make sure it is treated as a Python package.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 90,
        "deletions": 16,
        "changed_files": 6,
        "created_at": "2023-09-14T19:43:29Z",
        "closed_at": "2023-09-22T18:03:29Z",
        "merged_at": null,
        "body": "Verify closed enums rather than fallback to eager parsing.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 62,
        "deletions": 27,
        "changed_files": 12,
        "created_at": "2023-09-14T18:53:26Z",
        "closed_at": "2023-09-15T22:12:04Z",
        "merged_at": null,
        "body": "upb: refactor and relocate message_value.h (and make it public)\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 18,
        "deletions": 5,
        "changed_files": 5,
        "created_at": "2023-09-14T17:28:30Z",
        "closed_at": "2023-09-21T10:02:04Z",
        "merged_at": null,
        "body": "Add missing Protobuf Java versions when multiple files are generated.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1053,
        "deletions": 671,
        "changed_files": 16,
        "created_at": "2023-09-14T16:00:43Z",
        "closed_at": "2023-09-15T00:08:25Z",
        "merged_at": null,
        "body": "Added new, split upb rules for MiniTables and the C API.\n\nThe new rules are:\n- `upb_minitable_proto_library()`: contains the MiniTables only\n- `upb_c_proto_library()`: Contains the C API.  Depends on the MiniTables\n\nThis involved splitting upb code generation into two separate aspects, one for MiniTables and one for the C API.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 28,
        "deletions": 33,
        "changed_files": 1,
        "created_at": "2023-09-14T14:34:42Z",
        "closed_at": "2023-09-15T13:51:56Z",
        "merged_at": null,
        "body": "Improve loops in RepeatedPtrField.\n\nWe do not want to repeatedly check `using_sso` when iterating over an array. Hence instead of using `Get(i) / Mutable(i)` from base class, we request a pointer to the underlying array (thus, reducing number of checks from N to 1).\n\nAdditionally, there is a loop with a `Delete` call - updated it to use `CommonHandler`, so that it reduces code bloat.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-09-14T05:03:27Z",
        "closed_at": "2023-09-21T04:24:04Z",
        "merged_at": null,
        "body": "Internal\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-09-14T04:07:39Z",
        "closed_at": "2023-09-21T10:02:07Z",
        "merged_at": null,
        "body": "upb: DO NOT SUBMIT\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 54,
        "deletions": 468,
        "changed_files": 18,
        "created_at": "2023-09-13T22:34:20Z",
        "closed_at": "2023-09-14T16:14:00Z",
        "merged_at": null,
        "body": "Shorten our license headers into an abbreviated form that references LICENSE instead of including it in full.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2023-09-13T21:11:05Z",
        "closed_at": "2023-09-13T22:35:05Z",
        "merged_at": null,
        "body": "Update CI to test everything in `//rust/...`\n\nThis should help keep everything in the rust directory building successfully.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 38,
        "deletions": 6,
        "changed_files": 4,
        "created_at": "2023-09-13T18:53:39Z",
        "closed_at": "2023-09-20T10:02:43Z",
        "merged_at": null,
        "body": "Properly untrack Python GC objects during deallocation.\n\nAdd PyObject_GC_UnTrack() in deallocation functions for Python types that\nhave PyTPFLAGS_HAVE_GC set, either explicitly or by inheriting from a type\nwith GC set. Not untracking before clearing instance data introduces\npotential race conditions (if GC happens to run between the partial clearing\nand the actual deallocation) and produces a warning under Python 3.11.\n\n(The warning then triggered an assertion failure, which only showed up when\nbuilding in Py_DEBUG mode; this therefor also fixes that assertion failure.)\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-09-13T18:45:58Z",
        "closed_at": "2023-09-14T19:08:37Z",
        "merged_at": null,
        "body": "Expose alias to protobuf_nowkt runtime\n\nThis will allow users such as Kythe to use the same runtime as the default toolchain in their own proto_lang_toolchain definitions.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 45,
        "deletions": 20,
        "changed_files": 10,
        "created_at": "2023-09-13T18:39:33Z",
        "closed_at": "2023-09-14T21:18:51Z",
        "merged_at": null,
        "body": "upb: promote upb_MessageValue to be a public definition\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1232,
        "deletions": 1231,
        "changed_files": 295,
        "created_at": "2023-09-13T17:37:37Z",
        "closed_at": "2023-09-20T10:02:45Z",
        "merged_at": null,
        "body": "Move `upb/upb/*` to just `upb/`\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 50,
        "deletions": 45,
        "changed_files": 2,
        "created_at": "2023-09-13T15:42:52Z",
        "closed_at": "2023-09-20T10:02:47Z",
        "merged_at": null,
        "body": "Further reducing template code bloat.\n\nThe change is a combination of:\n - reusing `CommonHandler` from 3ae5a07\n - removing `using_sso` from loops (not using Mutable)\n - replacing loops with memcpy call\n - making functions out of line\n - reduced inlined part of `void Add(Element&&)` to match `Element* Add()`\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 109,
        "deletions": 24,
        "changed_files": 3,
        "created_at": "2023-09-13T12:53:06Z",
        "closed_at": "2023-09-13T21:10:56Z",
        "merged_at": null,
        "body": "Initial skeleton towards oneof's Mut accessor, and clarify oneof the View accessor to use View<> instead of the raw primitive type.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-09-13T12:49:44Z",
        "closed_at": "2023-09-13T18:59:49Z",
        "merged_at": null,
        "body": "Fix string setter thunk to use PtrAndLen instead of two args.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 15,
        "changed_files": 3,
        "created_at": "2023-09-13T07:40:29Z",
        "closed_at": "2023-09-13T15:29:54Z",
        "merged_at": null,
        "body": "upb: clean up upb/hash/ a bit\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 417,
        "deletions": 211,
        "changed_files": 17,
        "created_at": "2023-09-13T07:05:30Z",
        "closed_at": "2023-09-20T10:02:50Z",
        "merged_at": null,
        "body": "upb: refactor upb/hash/\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2023-09-13T05:24:21Z",
        "closed_at": "2023-09-14T17:35:30Z",
        "merged_at": null,
        "body": "Use PyImport_ImportModuleLevel() instead of PyImport_Import() for descriptor_pb2. PyImport_ImportModuleLevel() custom globals and locals pointing to some namespace we control, not normal-looking __builtins__\n\nChange PYUPB_DESCRIPTOR_MODULE to \"google.protobuf.descriptor_pb2\" because protobuf python is using google.protobuf.descriptor_pb2 everywhere\n\nAlso check import result of PYUPB_DESCRIPTOR_MODULE\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2023-09-13T04:39:51Z",
        "closed_at": "2023-09-13T16:34:31Z",
        "merged_at": null,
        "body": "upb: remove def_builder.h as an export from :reflection_internal\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 593,
        "deletions": 495,
        "changed_files": 9,
        "created_at": "2023-09-12T23:00:28Z",
        "closed_at": "2023-09-13T15:41:11Z",
        "merged_at": null,
        "body": "Refactored `upb_proto*_library()` rules to make future splitting of rules easier.\n\nThis is in preparation for splitting MiniTables out of `upb_c_proto_library()`.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2023-09-12T22:46:07Z",
        "closed_at": "2023-09-13T00:02:27Z",
        "merged_at": null,
        "body": "Automated rollback of commit 3f1bf2e18e7681c3b8115c1dfcd79a1fdfed1a4d.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 121,
        "deletions": 24,
        "changed_files": 11,
        "created_at": "2023-09-12T22:13:57Z",
        "closed_at": "2023-09-13T04:46:57Z",
        "merged_at": null,
        "body": "upb: move upb_strdup2() into upb/reflection/\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 116,
        "deletions": 983,
        "changed_files": 39,
        "created_at": "2023-09-12T20:34:39Z",
        "closed_at": "2023-09-13T17:42:13Z",
        "merged_at": null,
        "body": "Shorten our license headers into an abbreviated form that references LICENSE instead of including it in full.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-09-12T20:14:21Z",
        "closed_at": "2023-09-12T21:43:18Z",
        "merged_at": "2023-09-12T21:43:18Z",
        "body": "No need to touch Bazel/CMake files, as they already depend on Abseil strings.\r\n\r\nPiperOrigin-RevId: 564640299",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 450,
        "deletions": 380,
        "changed_files": 16,
        "created_at": "2023-09-12T19:38:12Z",
        "closed_at": "2023-09-15T21:16:28Z",
        "merged_at": null,
        "body": "Move `GetTypeName` implementation into `ClassData`.\nFor LITE messages we append the type name to the data, avoiding an\nindirection and a relocation.\nFor descriptor messages we mark them as such and have a secondary vtable. This\nway we avoid having to put those pointers on each message ClassData. We save in\ndata size and relocations. If in the future we determine that the extra jump is\ncostly we can inline the relevant descriptor method pointers into `ClassData`.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 112,
        "deletions": 14,
        "changed_files": 2,
        "created_at": "2023-09-12T18:43:36Z",
        "closed_at": "2023-09-13T19:02:28Z",
        "merged_at": null,
        "body": "Move CC WKT generation from cc_proto_library to custom rule\n\nKythe uses a custom proto_lang_toolchain when performing extraction on repositories. This proto_lang_toolchain blocks the protos for well known types, which causes the existing cc_proto_library target to effectively compile nothing during a build. Moving to a custom rule brings CC in line with what is done for other languages in protobuf.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-09-12T18:12:02Z",
        "closed_at": "2023-09-13T19:10:18Z",
        "merged_at": null,
        "body": "Migrate to sccache for better CMake caching\n\nThis hooks up to the changes in https://github.com/protocolbuffers/protobuf-ci/pull/26.  We see a speedup of up to 50% in no-op runs of our slowest CI builds.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-09-12T15:27:57Z",
        "closed_at": "2023-09-12T17:06:46Z",
        "merged_at": null,
        "body": "Update Abseil dependency in cmake docker images\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 204,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-09-12T13:31:15Z",
        "closed_at": "2023-09-13T20:11:21Z",
        "merged_at": null,
        "body": "Adds \"Edition Feature Visibility\" to the GitHub code repository.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-09-12T13:00:13Z",
        "closed_at": "2023-09-12T16:11:24Z",
        "merged_at": null,
        "body": "Internal Code Change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-12T06:31:18Z",
        "closed_at": "2023-09-19T23:13:57Z",
        "merged_at": null,
        "body": "compilation error occurs when compiling on Android system.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 175,
        "deletions": 110,
        "changed_files": 2,
        "created_at": "2023-09-11T23:55:29Z",
        "closed_at": "2023-09-21T10:02:10Z",
        "merged_at": null,
        "body": "Support floats from Duration and Timestamp conversions\n\nThe type definitions say that `FromSeconds`, `FromMilliseconds`, `FromMicroseconds`, and `FromNanoseconds` supports floats. Currently none of these do. This code change updates the type definitions to make `FromNanoseconds` as only supporting nanoseconds (as this results in a truncation of the user's provided time) and adds support for passing floats into the remaining `FromXXX` time functions. All conversions now internally call `FromNanoseconds` and convert their passed time to nanoseconds.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-09-11T21:53:24Z",
        "closed_at": "2023-09-11T23:22:06Z",
        "merged_at": "2023-09-11T23:22:06Z",
        "body": "This header was transitively included from (deprecated) absl cord includes.\r\n\r\nPiperOrigin-RevId: 562008066",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 57,
        "deletions": 19,
        "changed_files": 4,
        "created_at": "2023-09-11T21:52:50Z",
        "closed_at": "2023-09-12T18:12:35Z",
        "merged_at": null,
        "body": "Add `ABSL_ATTRIBUTE_LIFETIME_BOUND` attribute on generated repeated and map field accessors.\nThis allows the compiler to statically detect use-after-free bugs.\n\nThis change touches a subset of field types. More changes to follow.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 187,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-09-11T21:40:54Z",
        "closed_at": "2023-09-13T20:06:49Z",
        "merged_at": null,
        "body": "Adds \"Edition Tooling\" to the GitHub code repository.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 557,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-09-11T20:42:08Z",
        "closed_at": "2023-09-13T20:02:05Z",
        "merged_at": null,
        "body": "Adds \"Prototiller Requirements for Edition Zero\" to the GitHub code repository.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 15,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-09-11T20:40:09Z",
        "closed_at": "2023-09-11T21:54:44Z",
        "merged_at": null,
        "body": "Fix a NPE in put<X>BuilderIfAbsent due to using the result of put() directly (which is null if it currently has no value)\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 3,
        "changed_files": 4,
        "created_at": "2023-09-11T18:58:52Z",
        "closed_at": "2023-09-11T21:45:01Z",
        "merged_at": null,
        "body": "Fixed pre-existing formatting problems.\n\nThe presubmit complains about these if you try to modify any of these files.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 44,
        "deletions": 366,
        "changed_files": 14,
        "created_at": "2023-09-11T18:49:53Z",
        "closed_at": "2023-09-18T10:01:57Z",
        "merged_at": null,
        "body": "Shorten our license headers into an abbreviated form that references LICENSE instead of including it in full.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 55,
        "deletions": 12,
        "changed_files": 5,
        "created_at": "2023-09-11T18:22:44Z",
        "closed_at": "2023-09-12T18:37:39Z",
        "merged_at": null,
        "body": "Return the correct view type for messages\n\n$Msg$View is incorrect, we need to actually invoke the getter_thunks. We'll use void* to get us off to the races.\n\nSprinkled in TODOs as appropriate; and we'll tackle imports in another CL. For now, its important to return the actual raw message, and that's what this CL does for our base uses.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1978,
        "deletions": 2170,
        "changed_files": 341,
        "created_at": "2023-09-11T18:13:29Z",
        "closed_at": "2023-09-12T20:10:05Z",
        "merged_at": null,
        "body": "Merge the protobuf and upb Bazel repos\n\nA couple weeks ago we moved upb into the protobuf Git repo, and this change\ncontinues the merger of the two repos by making them into a single Bazel repo.\nThis was mostly a matter of deleting upb's WORKSPACE file and fixing up a bunch\nof references to reflect the new structure.\n\nMost of the changes are pretty mechanical, but one thing that needed more\ninvasive changes was the Python script for generating CMakeLists.txt,\nmake_cmakelists.py. The WORKSPACE file it relied on no longer exists with this\nchange, so I updated it to hardcode the information it needed from that file.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2023-09-11T17:43:44Z",
        "closed_at": "2023-09-13T17:49:33Z",
        "merged_at": null,
        "body": "Move copy above clone inside vtable.rs\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-09-11T17:20:22Z",
        "closed_at": "2023-09-12T17:49:24Z",
        "merged_at": null,
        "body": "Reduce code bloat for messages - use virtual methods for Merge/Clear/Delete.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2187,
        "deletions": 0,
        "changed_files": 24,
        "created_at": "2023-09-11T14:19:30Z",
        "closed_at": "2023-09-18T10:02:00Z",
        "merged_at": null,
        "body": "Open-source upb.js\n\nupb.js is an experimental low-level JavaScript API for creating, parsing, and serializing protobuf objects.  It is not intended to be used directly by users, rather it is an API that can be targeted by generated code.\n\nThe implementation uses WASM internally, which gives very good parsing performance, but this fact is not exposed to the JavaScript API.  The only way the WASM-based nature leaks into the API is that users must await on an async `getUpb()` function before the library can be used.  This is necessary because it is not possible to load a WASM module synchronously.\n\nThe API uses MiniDescriptors to load schema data into the runtime.  Normally these MiniDescriptors would be embedded into the generated code.  MiniDescriptors are a upb-specific wire format that can be generated using upb functions like `upb_MessageDef_MiniDescriptorEncode()`.\n\nThe vision is that upb.js (along with its backing WASM module) could eventually be served from CDNs as an externalized dependency that is small and cacheable.  The current size footprint of upb.js is around 10kb of JS and about 60kb of WASM.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 232,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-09-11T11:56:05Z",
        "closed_at": "2023-09-13T13:15:30Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-09-11T08:48:14Z",
        "closed_at": "2023-10-13T22:39:50Z",
        "merged_at": null,
        "body": "I cannot build on MSVC 2022 without this change \ud83d\ude12",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-09-11T08:14:33Z",
        "closed_at": "2023-10-13T21:15:23Z",
        "merged_at": null,
        "body": "The current logic of finding a suitable include path relies on CMake to always return a meaningful relative path. On Windows, however, if the two paths reside on different drives (e.g. `c:/Users/Me` and `d:/project/`) the absolute path gets returned unaltered. This yields the invalid final path `c:/Users/Me/d:/project/`.\r\n\r\nThis case is now detected and the corresponding include path is deemed unsuitable.\r\n\r\n(fixes #9290)",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-09-11T08:08:15Z",
        "closed_at": "2023-10-13T21:16:40Z",
        "merged_at": null,
        "body": "I aligned the indent of one option with the others.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-09-11T07:44:31Z",
        "closed_at": "2023-09-12T08:26:15Z",
        "merged_at": null,
        "body": "`Printer`: Include Abseil's `str_cat.h` for `absl::AlphaNum`\n\nNot need to touch Bazel/CMake files, as they already depend on Abseil strings.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 26,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-09-11T04:26:00Z",
        "closed_at": "2023-09-21T10:02:13Z",
        "merged_at": null,
        "body": "Internal\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 597,
        "deletions": 5174,
        "changed_files": 199,
        "created_at": "2023-09-09T15:50:42Z",
        "closed_at": "2023-09-11T20:47:04Z",
        "merged_at": null,
        "body": "Shorten our license headers into an abbreviated form that references LICENSE instead of including it in full.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-09-09T15:46:45Z",
        "closed_at": "2023-09-11T14:41:18Z",
        "merged_at": null,
        "body": "Added missing PROTOBUF_MUSTTAIL, to fix presubmit check.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 54,
        "deletions": 468,
        "changed_files": 18,
        "created_at": "2023-09-08T22:10:49Z",
        "closed_at": "2023-09-11T18:57:08Z",
        "merged_at": null,
        "body": "Shorten our license headers into an abbreviated form that references LICENSE instead of including it in full.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-09-08T22:07:33Z",
        "closed_at": "2023-09-09T07:12:15Z",
        "merged_at": null,
        "body": "Shorten our license headers into an abbreviated form that references LICENSE instead of including it in full.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 57,
        "deletions": 399,
        "changed_files": 19,
        "created_at": "2023-09-08T22:07:21Z",
        "closed_at": "2023-09-09T00:36:37Z",
        "merged_at": null,
        "body": "Shorten our license headers into an abbreviated form that references LICENSE instead of including it in full.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 57,
        "deletions": 414,
        "changed_files": 19,
        "created_at": "2023-09-08T22:07:13Z",
        "closed_at": "2023-09-09T01:06:41Z",
        "merged_at": null,
        "body": "Shorten our license headers into an abbreviated form that references LICENSE instead of including it in full.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 54,
        "deletions": 468,
        "changed_files": 18,
        "created_at": "2023-09-08T22:07:07Z",
        "closed_at": "2023-09-09T00:45:01Z",
        "merged_at": null,
        "body": "Shorten our license headers into an abbreviated form that references LICENSE instead of including it in full.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 132,
        "deletions": 1144,
        "changed_files": 44,
        "created_at": "2023-09-08T22:07:06Z",
        "closed_at": "2023-09-09T00:48:17Z",
        "merged_at": null,
        "body": "Shorten our license headers into an abbreviated form that references LICENSE instead of including it in full.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 387,
        "deletions": 3354,
        "changed_files": 129,
        "created_at": "2023-09-08T22:07:05Z",
        "closed_at": "2023-09-09T01:49:08Z",
        "merged_at": null,
        "body": "Shorten our license headers into an abbreviated form that references LICENSE instead of including it in full.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 51,
        "deletions": 442,
        "changed_files": 17,
        "created_at": "2023-09-08T22:07:03Z",
        "closed_at": "2023-09-09T01:51:59Z",
        "merged_at": null,
        "body": "Shorten our license headers into an abbreviated form that references LICENSE instead of including it in full.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 66,
        "deletions": 572,
        "changed_files": 22,
        "created_at": "2023-09-08T22:07:01Z",
        "closed_at": "2023-09-09T00:23:09Z",
        "merged_at": null,
        "body": "Shorten our license headers into an abbreviated form that references LICENSE instead of including it in full.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 204,
        "deletions": 1768,
        "changed_files": 68,
        "created_at": "2023-09-08T22:06:58Z",
        "closed_at": "2023-09-09T01:24:32Z",
        "merged_at": null,
        "body": "Shorten our license headers into an abbreviated form that references LICENSE instead of including it in full.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 51,
        "deletions": 441,
        "changed_files": 17,
        "created_at": "2023-09-08T22:06:58Z",
        "closed_at": "2023-09-09T00:15:48Z",
        "merged_at": null,
        "body": "Shorten our license headers into an abbreviated form that references LICENSE instead of including it in full.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 45,
        "deletions": 390,
        "changed_files": 15,
        "created_at": "2023-09-08T22:06:56Z",
        "closed_at": "2023-09-09T00:43:21Z",
        "merged_at": null,
        "body": "Shorten our license headers into an abbreviated form that references LICENSE instead of including it in full.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 57,
        "deletions": 494,
        "changed_files": 19,
        "created_at": "2023-09-08T22:06:53Z",
        "closed_at": "2023-09-09T16:06:45Z",
        "merged_at": null,
        "body": "Shorten our license headers into an abbreviated form that references LICENSE instead of including it in full.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 117,
        "deletions": 1014,
        "changed_files": 39,
        "created_at": "2023-09-08T22:06:53Z",
        "closed_at": "2023-09-09T00:38:20Z",
        "merged_at": null,
        "body": "Shorten our license headers into an abbreviated form that references LICENSE instead of including it in full.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 234,
        "deletions": 2028,
        "changed_files": 78,
        "created_at": "2023-09-08T22:06:52Z",
        "closed_at": "2023-09-09T01:46:03Z",
        "merged_at": null,
        "body": "Shorten our license headers into an abbreviated form that references LICENSE instead of including it in full.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 111,
        "deletions": 962,
        "changed_files": 37,
        "created_at": "2023-09-08T22:06:51Z",
        "closed_at": "2023-09-09T01:04:59Z",
        "merged_at": null,
        "body": "Shorten our license headers into an abbreviated form that references LICENSE instead of including it in full.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 93,
        "deletions": 806,
        "changed_files": 31,
        "created_at": "2023-09-08T22:06:48Z",
        "closed_at": "2023-09-09T00:59:41Z",
        "merged_at": null,
        "body": "Shorten our license headers into an abbreviated form that references LICENSE instead of including it in full.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 162,
        "deletions": 1404,
        "changed_files": 54,
        "created_at": "2023-09-08T22:06:46Z",
        "closed_at": "2023-09-09T01:50:36Z",
        "merged_at": null,
        "body": "Shorten our license headers into an abbreviated form that references LICENSE instead of including it in full.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 57,
        "deletions": 494,
        "changed_files": 19,
        "created_at": "2023-09-08T22:06:44Z",
        "closed_at": "2023-09-09T00:41:41Z",
        "merged_at": null,
        "body": "Shorten our license headers into an abbreviated form that references LICENSE instead of including it in full.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 78,
        "deletions": 676,
        "changed_files": 26,
        "created_at": "2023-09-08T22:06:44Z",
        "closed_at": "2023-09-09T00:53:13Z",
        "merged_at": null,
        "body": "Shorten our license headers into an abbreviated form that references LICENSE instead of including it in full.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 42,
        "deletions": 364,
        "changed_files": 14,
        "created_at": "2023-09-08T22:06:42Z",
        "closed_at": "2023-09-09T00:34:53Z",
        "merged_at": null,
        "body": "Shorten our license headers into an abbreviated form that references LICENSE instead of including it in full.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 60,
        "deletions": 520,
        "changed_files": 20,
        "created_at": "2023-09-08T22:06:40Z",
        "closed_at": "2023-09-09T01:44:25Z",
        "merged_at": null,
        "body": "Shorten our license headers into an abbreviated form that references LICENSE instead of including it in full.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 54,
        "deletions": 468,
        "changed_files": 18,
        "created_at": "2023-09-08T22:06:40Z",
        "closed_at": "2023-09-09T16:01:39Z",
        "merged_at": null,
        "body": "Shorten our license headers into an abbreviated form that references LICENSE instead of including it in full.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 48,
        "deletions": 416,
        "changed_files": 16,
        "created_at": "2023-09-08T22:06:39Z",
        "closed_at": "2023-09-09T07:37:23Z",
        "merged_at": null,
        "body": "Shorten our license headers into an abbreviated form that references LICENSE instead of including it in full.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 129,
        "deletions": 1118,
        "changed_files": 43,
        "created_at": "2023-09-08T22:06:39Z",
        "closed_at": "2023-09-09T01:47:34Z",
        "merged_at": null,
        "body": "Shorten our license headers into an abbreviated form that references LICENSE instead of including it in full.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 91,
        "deletions": 781,
        "changed_files": 30,
        "created_at": "2023-09-08T22:06:39Z",
        "closed_at": "2023-09-09T01:23:18Z",
        "merged_at": null,
        "body": "Shorten our license headers into an abbreviated form that references LICENSE instead of including it in full.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1961,
        "deletions": 16660,
        "changed_files": 646,
        "created_at": "2023-09-08T22:06:39Z",
        "closed_at": "2023-09-09T03:25:08Z",
        "merged_at": null,
        "body": "Shorten our license headers into an abbreviated form that references LICENSE instead of including it in full.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 39,
        "deletions": 338,
        "changed_files": 13,
        "created_at": "2023-09-08T22:06:39Z",
        "closed_at": "2023-09-09T00:25:54Z",
        "merged_at": null,
        "body": "Shorten our license headers into an abbreviated form that references LICENSE instead of including it in full.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 66,
        "deletions": 572,
        "changed_files": 22,
        "created_at": "2023-09-08T22:06:37Z",
        "closed_at": "2023-09-09T00:46:39Z",
        "merged_at": null,
        "body": "Shorten our license headers into an abbreviated form that references LICENSE instead of including it in full.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 45,
        "deletions": 390,
        "changed_files": 15,
        "created_at": "2023-09-08T22:06:35Z",
        "closed_at": "2023-09-09T00:49:57Z",
        "merged_at": null,
        "body": "Shorten our license headers into an abbreviated form that references LICENSE instead of including it in full.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 84,
        "deletions": 728,
        "changed_files": 28,
        "created_at": "2023-09-08T22:06:34Z",
        "closed_at": "2023-09-09T00:54:53Z",
        "merged_at": null,
        "body": "Shorten our license headers into an abbreviated form that references LICENSE instead of including it in full.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 50,
        "deletions": 393,
        "changed_files": 16,
        "created_at": "2023-09-08T22:06:30Z",
        "closed_at": "2023-09-11T23:33:28Z",
        "merged_at": null,
        "body": "Shorten our license headers into an abbreviated form that references LICENSE instead of including it in full.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 36,
        "deletions": 312,
        "changed_files": 12,
        "created_at": "2023-09-08T22:06:29Z",
        "closed_at": "2023-09-09T00:24:32Z",
        "merged_at": null,
        "body": "Shorten our license headers into an abbreviated form that references LICENSE instead of including it in full.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 36,
        "deletions": 312,
        "changed_files": 12,
        "created_at": "2023-09-08T22:06:27Z",
        "closed_at": "2023-09-11T22:29:12Z",
        "merged_at": null,
        "body": "Shorten our license headers into an abbreviated form that references LICENSE instead of including it in full.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 111,
        "deletions": 962,
        "changed_files": 37,
        "created_at": "2023-09-08T22:06:26Z",
        "closed_at": "2023-09-09T01:01:21Z",
        "merged_at": null,
        "body": "Shorten our license headers into an abbreviated form that references LICENSE instead of including it in full.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 102,
        "deletions": 884,
        "changed_files": 34,
        "created_at": "2023-09-08T22:06:25Z",
        "closed_at": "2023-09-09T01:29:29Z",
        "merged_at": null,
        "body": "Shorten our license headers into an abbreviated form that references LICENSE instead of including it in full.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 54,
        "deletions": 468,
        "changed_files": 18,
        "created_at": "2023-09-08T22:06:23Z",
        "closed_at": "2023-09-09T00:58:06Z",
        "merged_at": null,
        "body": "Shorten our license headers into an abbreviated form that references LICENSE instead of including it in full.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 42,
        "deletions": 364,
        "changed_files": 14,
        "created_at": "2023-09-08T22:06:20Z",
        "closed_at": "2023-09-09T00:28:35Z",
        "merged_at": null,
        "body": "Shorten our license headers into an abbreviated form that references LICENSE instead of including it in full.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 87,
        "deletions": 754,
        "changed_files": 29,
        "created_at": "2023-09-08T22:06:20Z",
        "closed_at": "2023-09-09T00:27:17Z",
        "merged_at": null,
        "body": "Shorten our license headers into an abbreviated form that references LICENSE instead of including it in full.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 51,
        "deletions": 442,
        "changed_files": 17,
        "created_at": "2023-09-08T22:06:14Z",
        "closed_at": "2023-09-09T00:40:00Z",
        "merged_at": null,
        "body": "Shorten our license headers into an abbreviated form that references LICENSE instead of including it in full.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 60,
        "deletions": 520,
        "changed_files": 20,
        "created_at": "2023-09-08T22:06:13Z",
        "closed_at": "2023-09-09T16:15:06Z",
        "merged_at": null,
        "body": "Shorten our license headers into an abbreviated form that references LICENSE instead of including it in full.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 33,
        "deletions": 286,
        "changed_files": 11,
        "created_at": "2023-09-08T22:06:09Z",
        "closed_at": "2023-09-09T00:21:39Z",
        "merged_at": null,
        "body": "Shorten our license headers into an abbreviated form that references LICENSE instead of including it in full.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 33,
        "deletions": 286,
        "changed_files": 11,
        "created_at": "2023-09-08T22:06:07Z",
        "closed_at": "2023-09-09T00:51:35Z",
        "merged_at": null,
        "body": "Shorten our license headers into an abbreviated form that references LICENSE instead of including it in full.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 42,
        "deletions": 364,
        "changed_files": 14,
        "created_at": "2023-09-08T22:05:51Z",
        "closed_at": "2023-09-09T00:56:29Z",
        "merged_at": null,
        "body": "Shorten our license headers into an abbreviated form that references LICENSE instead of including it in full.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-09-08T22:05:11Z",
        "closed_at": "2023-09-11T16:16:31Z",
        "merged_at": null,
        "body": "Make upb workspace load protobuf deps before upb deps\n\nThis should ensure that the upb workspace uses the same version of absl that\nthe protobuf workspace does. Soon this will be irrelevant since we will be\ndeleting the upb workspace, but this will help keep everything building\nsuccessfully until then.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 21,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2023-09-08T21:27:50Z",
        "closed_at": "2023-09-12T22:43:38Z",
        "merged_at": null,
        "body": "Small optimization/cleanup for message split.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-09-08T21:23:13Z",
        "closed_at": "2023-09-08T22:24:54Z",
        "merged_at": null,
        "body": "Update upb absl.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 105,
        "deletions": 1,
        "changed_files": 6,
        "created_at": "2023-09-08T20:39:22Z",
        "closed_at": "2023-09-12T15:14:32Z",
        "merged_at": null,
        "body": "Create initial Rust conformance test.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-09-08T20:16:41Z",
        "closed_at": "2023-09-13T01:58:16Z",
        "merged_at": null,
        "body": "Add CI run for building upb Python wheels\n\nThis restores a CI run that used to exist in the upb repo. I still need to add\ntest runs to exercise the wheels, but this change adds the functionality for\nbuilding and uploading them.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-08T20:06:58Z",
        "closed_at": "2023-09-08T22:03:28Z",
        "merged_at": null,
        "body": "Remove global -Werror from build_defs.bzl open-source\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-09-08T19:23:42Z",
        "closed_at": "2023-09-08T20:34:18Z",
        "merged_at": null,
        "body": "Added upb_c_proto_library() as an alias for upb_proto_library().\n\nThis is the first step of a migration to split apart upb_proto_library() into upb_c_proto_library() and upb_minitable_proto_library().\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 25,
        "deletions": 25,
        "changed_files": 2,
        "created_at": "2023-09-08T18:56:54Z",
        "closed_at": "2023-09-15T10:02:12Z",
        "merged_at": null,
        "body": "Test ccache fix\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 306,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-09-08T18:44:28Z",
        "closed_at": "2023-09-15T10:02:14Z",
        "merged_at": null,
        "body": "Adds \"Edition Zero Feature: Enum Field Closedness\" to the GitHub code repository.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-09-08T18:31:24Z",
        "closed_at": "2023-09-08T19:56:28Z",
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 75,
        "deletions": 59,
        "changed_files": 10,
        "created_at": "2023-09-08T17:20:43Z",
        "closed_at": "2023-09-08T20:01:24Z",
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 74,
        "deletions": 11,
        "changed_files": 4,
        "created_at": "2023-09-08T16:38:53Z",
        "closed_at": "2023-09-13T15:45:39Z",
        "merged_at": null,
        "body": "Add prefetching to arena allocations.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 104,
        "deletions": 45,
        "changed_files": 8,
        "created_at": "2023-09-08T14:24:12Z",
        "closed_at": "2023-09-12T13:45:46Z",
        "merged_at": null,
        "body": "Move `GetClassData` into `MessageLite`. This table will be used to replace several\nvirtual functions to reduce binary size and code duplication.\nIn this same change we replace `OnDemandRegisterArenaDtor` with an entry on the\ntable to keep the number of virtual functions in `MessageLite` the same to\navoid growth in space constrained systems. We will migrate other functions in\nfuture changes.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-09-08T09:43:45Z",
        "closed_at": "2023-09-08T16:28:21Z",
        "merged_at": null,
        "body": "Updates with the latest rules_kotlin 1.8.1.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-08T08:07:00Z",
        "closed_at": "2023-09-12T06:32:19Z",
        "merged_at": null,
        "body": "Unalign ThreadSafeArena::ThreadCache\n\nThreadSafeArena::ThreadCache does not need to be aligned.\nIf anything, the alignment increases TLS and working set size.\nUnalign it.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 34,
        "deletions": 33,
        "changed_files": 2,
        "created_at": "2023-09-08T07:56:18Z",
        "closed_at": "2023-09-08T10:21:57Z",
        "merged_at": null,
        "body": "protobuf: remove double ptr_ load in arena allocation\n\nCurrently the generated code contains 2 loads of ptr_ b/c it's an atomic:\none in HasSize and one in AllocateFromExisting.\nCombine these to be a single load.\n\nname                           old cpu/op   new cpu/op   delta\nBM_ArenaAlloc/100              250ns \u00b1 2%   229ns \u00b1 1%  -8.20%  (p=0.000 n=54+47)\nBM_ArenaAllocWithCleanup/100   865ns \u00b1 1%   812ns \u00b1 2%  -6.15%  (p=0.000 n=57+56)\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 17,
        "deletions": 14,
        "changed_files": 4,
        "created_at": "2023-09-07T22:30:22Z",
        "closed_at": "2023-09-08T17:14:52Z",
        "merged_at": null,
        "body": "I merged a handful of PRs on the upb repo after upb moved into the protobuf repo. This PR cherry-picks them here so that they will not be lost.\r\n\r\n```\r\ncommit 7afb426a5ace6f6e76ac2144960363379a1be08d\r\nAuthor: Keith Smiley <keithbsmiley@gmail.com>\r\nDate:   Thu Sep 7 11:36:01 2023 -0700\r\n\r\n    [bazel] Fix disallowing dylibs on darwin (#1180)\r\n    \r\n    Since this bazel commit\r\n    https://github.com/bazelbuild/bazel/commit/ec5553352f2f661d39ac4cf665dd9b3c779e614c\r\n    building dylibs like the ones in this rule on darwin platforms has been\r\n    unsupported. This feature is a default C++ toolchain feature to indicate\r\n    this. In bazel 7.x these dylibs will fail to link if they are still\r\n    built. As far as I can tell in the tests even if they are built they are\r\n    never used on macOS.\r\n    \r\n    Co-authored-by: Adam Cozzette <acozzette@google.com>\r\n\r\ncommit 72decab5eca0110548b0c805275fffab562aebde\r\nAuthor: Keith Smiley <keithbsmiley@gmail.com>\r\nDate:   Thu Sep 7 09:42:20 2023 -0700\r\n\r\n    Add missing darwin_x86_64 CPU (#1181)\r\n    \r\n    This CPU is often used when cross compiling from M1 machines. I'm also\r\n    hoping we can remove the legacy 'darwin' CPU.\r\n\r\ncommit ccadaf3196bda975dec5ed2aac8a78e75ab51c1b\r\nAuthor: messense <messense@icloud.com>\r\nDate:   Fri Sep 8 00:28:54 2023 +0800\r\n\r\n    Fix `PyUpb_Message_MergeInternal` segfault (#1338)\r\n    \r\n    when `PyUpb_Message_MergeFromString` returns `NULL`, currently\r\n    `PyUpb_Message_MergeInternal` will call `Py_DECREF` on `NULL`\r\n    which results in a segmentation fault.\r\n    \r\n    This patch switches to `Py_XDECREF` to fix the segfault.\r\n\r\ncommit 2a5724d86ea81e0c2a0f8d10db274821c8bb6656\r\nAuthor: Kevin Greene <kgreenek@gmail.com>\r\nDate:   Wed Sep 6 16:46:35 2023 -0700\r\n\r\n    Fix lambda capture compiler error with c++20 (#1502)\r\n    \r\n    When compiling with C++20, the following error is produced:\r\n    \r\n    ```\r\n    upb/mini_table.hpp:63:22: note: add explicit 'this' or '*this' capture\r\n    upb/mini_table.hpp: In lambda function:\r\n    upb/mini_table.hpp:71:22: error: implicit capture of 'this' via '[=]' is deprecated in C++20 [-Werror=deprecated]\r\n       71 |     return appender_([=](char* buf) {\r\n    ```\r\n    \r\n    In C++20, it is no longer allowed to implicitly capture 'this' in a\r\n    lambda using [=].\r\n    \r\n    This commit explicitly captures required values in the appropriate\r\n    lambdas and removes all uses of [=] with lambdas.\r\n```",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 75,
        "deletions": 59,
        "changed_files": 10,
        "created_at": "2023-09-07T20:34:55Z",
        "closed_at": "2023-09-08T17:16:06Z",
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 158,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-09-07T19:33:49Z",
        "closed_at": "2023-09-14T10:01:57Z",
        "merged_at": null,
        "body": "Adds \"Prototiller Requirements for Editions\" to the GitHub code repository.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 80,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-09-07T19:16:18Z",
        "closed_at": "2023-09-08T19:17:24Z",
        "merged_at": null,
        "body": "Adds \"C++ APIs for Edition Zero\" to the GitHub code repository.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 94,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-09-07T19:02:57Z",
        "closed_at": "2023-09-08T18:49:42Z",
        "merged_at": null,
        "body": "Adds \"Edition Evolution\" to the GitHub code repository.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 306,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-09-07T18:24:43Z",
        "closed_at": "2023-09-08T18:45:05Z",
        "merged_at": null,
        "body": "Adds \"Edition Zero Feature: Enum Field Closedness\" to the GitHub code repository.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2230,
        "deletions": 192,
        "changed_files": 14,
        "created_at": "2023-09-07T17:47:36Z",
        "closed_at": "2023-09-08T17:39:56Z",
        "merged_at": null,
        "body": "Stop setting edition strings in FeatureSets.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 149,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-09-07T17:07:11Z",
        "closed_at": "2023-09-08T18:40:28Z",
        "merged_at": null,
        "body": "Adds \"Edition Zero: JSON Handling\" to the GitHub code repository.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 144,
        "deletions": 58,
        "changed_files": 3,
        "created_at": "2023-09-07T15:50:38Z",
        "closed_at": "2023-09-19T10:02:10Z",
        "merged_at": null,
        "body": "Optimize RepeatedPtrField to use copy constructors where possible\n\nThe most common MergeFrom() scenario is that items are newly appended to an existing repeated field that has never been shrunk. For these cases copy constructing new entries is the cheapest option. This change overloads MergeFrom<> for `std::string`, `StringPiece`, `Message` and `MessageLite`, leaving the remaining templated implementation for all concrete message types supporting arena enabled copy construction, which is implemented as an out of line factory functor implementation. \n\nGoing forward we should change `Arena::CreateMaybeMessage()` to return MessageLite* and accept const MessageLite& for copy construction. This will allow us to directly pass Arena::CreateMaybeMessage<T>() into these out of line functions.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 52,
        "deletions": 52,
        "changed_files": 36,
        "created_at": "2023-09-07T15:43:08Z",
        "closed_at": "2023-09-07T16:45:43Z",
        "merged_at": "2023-09-07T16:45:43Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-07T15:14:56Z",
        "closed_at": "2023-09-07T16:33:04Z",
        "merged_at": null,
        "body": "Devirtualize `Message::MergeFrom`. It is never overriden.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-09-07T15:08:10Z",
        "closed_at": "2023-09-08T18:30:04Z",
        "merged_at": null,
        "body": "Adds \"Edition Zero: Converged Semantics\" to the GitHub code repository.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 420,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-09-07T14:48:43Z",
        "closed_at": "2023-09-11T20:26:47Z",
        "merged_at": null,
        "body": "Adds \"Java Lite for Editions\" to the GitHub code repository.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 190,
        "deletions": 202,
        "changed_files": 8,
        "created_at": "2023-09-07T13:18:55Z",
        "closed_at": "2023-09-07T15:12:34Z",
        "merged_at": null,
        "body": "Remove `copy_to_from` from `ClassData`. It only ever has one useful value and\nwe can just hardcode that logic in `Message::CopyFrom`.\nAlso, move the implementation of `GetClassData` to the base class for zero field messages.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2157,
        "deletions": 90,
        "changed_files": 9,
        "created_at": "2023-09-07T05:26:00Z",
        "closed_at": "2023-09-07T18:11:21Z",
        "merged_at": null,
        "body": "Migrate upb from edition strings to enums\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2142,
        "deletions": 63,
        "changed_files": 4,
        "created_at": "2023-09-07T05:02:18Z",
        "closed_at": "2023-09-14T10:01:59Z",
        "merged_at": null,
        "body": "Update bootstrap files.\n\nGenerated with:\n\n```\n$ blaze run third_party/upb:descriptor_upb_proto_staleness_test --fix\n$ blaze run third_party/upb/upbc:plugin_upb_proto_staleness_test -- --fix\n```\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 998,
        "deletions": 1000,
        "changed_files": 19,
        "created_at": "2023-09-07T00:11:42Z",
        "closed_at": "2023-09-15T10:02:16Z",
        "merged_at": null,
        "body": "Flip the names of edition_enum and edition.\n\nWe will be using the enum edition from now on, and the string field will be removed ASAP.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 101,
        "deletions": 49,
        "changed_files": 15,
        "created_at": "2023-09-06T23:10:13Z",
        "closed_at": "2023-09-14T00:56:19Z",
        "merged_at": null,
        "body": "upb: tag wire/types.h as an export for (only) wire/reader.h\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 48,
        "deletions": 7,
        "changed_files": 4,
        "created_at": "2023-09-06T20:51:38Z",
        "closed_at": "2023-09-13T10:01:59Z",
        "merged_at": null,
        "body": "Python Protobuf: Allow users of custom `DescriptorPool` to control the pool for `.GetOptions()`\n\nCurrently, the `.GetOptions()` method on a `DescriptorPool` always\nreturns a message created from the default descriptor pool, rather\nthan that descriptor's pool.\n\nHowever, in some cases, callers may need to deserialize descriptors\nusing the pool that created them (e.g. if they use proto reflection to\naccess fields).\n\nTo support this use-case, a new `create_options_from_default_pool=False`\nargument can be passed to the `descriptor_pool.DescriptorPool()` object\nconstructor that will cause protos to be created from the target pool\ninstead.\n\nEventually, I hope to make this behavior the default.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 447,
        "deletions": 367,
        "changed_files": 17,
        "created_at": "2023-09-06T19:08:44Z",
        "closed_at": "2023-09-06T21:28:39Z",
        "merged_at": null,
        "body": "Editions: Migrate edition strings to enum in C++ code.\n\nThe edition specification in proto files will remain unchanged, but it will be immediately converted to an enum by the parser.  This gives us more control over the valid set of editions and simplifies ordering (just an integer comparison now).  We plan to release exactly one edition per year.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 367,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2023-09-06T19:08:18Z",
        "closed_at": "2023-09-13T10:02:01Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 448,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-09-06T18:20:38Z",
        "closed_at": "2023-09-07T14:39:46Z",
        "merged_at": null,
        "body": "Adds \"Prototiller Project Roadmap\" to the GitHub code repository.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-09-06T17:53:44Z",
        "closed_at": "2023-09-08T15:06:25Z",
        "merged_at": null,
        "body": "upb: clean up ClangTidy warnings in upb/reflection/\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 14,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-09-06T17:42:12Z",
        "closed_at": "2023-09-06T19:09:39Z",
        "merged_at": null,
        "body": "Add python test for deprecated syntax\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 246,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-09-06T17:10:44Z",
        "closed_at": "2023-09-06T18:55:48Z",
        "merged_at": null,
        "body": "Adds \"Stricter Schemas with Editions\" to the GitHub code repository.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-09-06T16:42:24Z",
        "closed_at": "2023-09-11T20:48:53Z",
        "merged_at": null,
        "body": "Exposes enum and field mini-descriptor reflection to friends.\n\nExposes enum and field mini-descriptor reflection to friends.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 91,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-09-06T16:41:55Z",
        "closed_at": "2023-09-14T10:02:01Z",
        "merged_at": null,
        "body": "Adds \"The Road to Edition Zero\" to the GitHub code repository.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 36,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2023-09-06T15:11:56Z",
        "closed_at": "2023-09-13T10:02:04Z",
        "merged_at": null,
        "body": "Soft-deprecate, via Javadoc, {Durations,Timestamps}#{add,subtract}.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 43,
        "deletions": 43,
        "changed_files": 3,
        "created_at": "2023-09-06T13:26:36Z",
        "closed_at": "2023-09-13T14:08:42Z",
        "merged_at": null,
        "body": "Return Optional instead of Option in getter_opt\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-09-06T13:20:58Z",
        "closed_at": "2023-10-13T21:28:44Z",
        "merged_at": null,
        "body": "detected not accessed by pylance",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 266,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-09-06T12:44:23Z",
        "closed_at": "2023-09-13T10:02:06Z",
        "merged_at": null,
        "body": "Adds \"Edition Naming\" to the GitHub code repository.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2023-09-06T09:14:51Z",
        "closed_at": "2023-09-09T15:33:12Z",
        "merged_at": null,
        "body": "Addresses partially https://github.com/protocolbuffers/protobuf/issues/13833",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2023-09-06T08:30:45Z",
        "closed_at": "2023-09-06T17:46:22Z",
        "merged_at": null,
        "body": "upb: tag message/types.h as an export\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 48,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-09-06T04:11:05Z",
        "closed_at": "2023-09-06T16:21:12Z",
        "merged_at": null,
        "body": "Added malloc_trim() calls to Python allocator so RSS will decrease when memory is freed\n\nThis partially fixes https://github.com/protocolbuffers/protobuf/issues/10088.  The test case from that bug significantly improves with this change.  However we still have a global map that does not shrink, which can still create the appearance of leaking memory, as it will not be freed until the module is unloaded.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 73,
        "deletions": 6,
        "changed_files": 4,
        "created_at": "2023-09-05T23:41:02Z",
        "closed_at": "2023-09-06T17:02:35Z",
        "merged_at": null,
        "body": "Change upb python to keep the meta class ref on message descriptor. Also add Garbage Collection on meta class and message descriptor.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 35,
        "deletions": 30,
        "changed_files": 5,
        "created_at": "2023-09-05T22:19:05Z",
        "closed_at": "2023-09-06T15:12:44Z",
        "merged_at": null,
        "body": "Use the TcParseFunction enum instead of strings when generating the table\ninstructions.\nThis avoids the string creation in the reflection case altogether, as well\nas the map lookups.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-09-05T21:48:26Z",
        "closed_at": "2023-09-14T10:02:04Z",
        "merged_at": null,
        "body": "Exposes enum and field mini-descriptor reflection to friends.\n\nExposes enum and field mini-descriptor reflection to friends.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 84,
        "deletions": 3,
        "changed_files": 4,
        "created_at": "2023-09-05T21:43:47Z",
        "closed_at": "2023-09-07T13:21:48Z",
        "merged_at": null,
        "body": "Add iteration to proxies for repeated message fields.\nIteration will return Ptr<T>/Ptr<const T> objects.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-09-05T21:31:37Z",
        "closed_at": "2023-09-09T15:55:28Z",
        "merged_at": null,
        "body": "Ignores warning: extra ';' inside a struct [-Wextra-semi] in generated proto files.\r\n\r\nAmends #13492",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 340,
        "deletions": 260,
        "changed_files": 3,
        "created_at": "2023-09-05T19:09:30Z",
        "closed_at": "2023-09-12T10:01:48Z",
        "merged_at": null,
        "body": "Add edition enum to FileDescriptorProto\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2237,
        "deletions": 2206,
        "changed_files": 7,
        "created_at": "2023-09-05T16:56:48Z",
        "closed_at": "2023-09-06T13:40:26Z",
        "merged_at": null,
        "body": "Enable explicit constructors for internal implementation classes.\n\nThis changes the code to use explicit constructors instead of aggregate initialization, which allows optimizations when creating and copying messages.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 47,
        "deletions": 43,
        "changed_files": 8,
        "created_at": "2023-09-05T15:57:53Z",
        "closed_at": "2023-09-05T17:01:18Z",
        "merged_at": null,
        "body": "Add restrict on unsafe swap methods.\n\nThese have preconditions around not self-swapping, so restrict is safe here.\nComparison of generated code for methods used by message_unittest,\nvectorization improves.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2023-09-05T15:29:59Z",
        "closed_at": "2023-09-05T18:56:57Z",
        "merged_at": null,
        "body": "Remove dependabot setup.\n\nThis ended up being more trouble than it was worth because the PRs it sends are from a forked repo.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 266,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-09-05T15:13:35Z",
        "closed_at": "2023-09-06T12:43:52Z",
        "merged_at": null,
        "body": "Adds \"Edition Naming\" to the GitHub code repository.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-09-05T12:33:21Z",
        "closed_at": "2023-09-05T14:40:55Z",
        "merged_at": null,
        "body": "Escape trigraphs when emitting string literals.\n\nThe EscapeTrigraphs function is copied from Google Protobuf.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-09-05T06:37:31Z",
        "closed_at": "2023-09-05T14:21:38Z",
        "merged_at": null,
        "body": "Internal Code Change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-09-05T06:33:22Z",
        "closed_at": "2023-09-22T17:50:01Z",
        "merged_at": null,
        "body": "Generated .NET protobuf messages override `ToString` and return JSON. By default, the .NET debugger displays the result from `ToString` and wraps it in curly braces, e.g. `{{ \"Message\": \"Hello world\" }}`. The double curly braces is an ugly result. People expecting JSON here are confused.\r\n\r\nThis PR adds a [DebuggerDisplayAttribute](https://learn.microsoft.com/en-us/dotnet/api/system.diagnostics.debuggerdisplayattribute?view=net-7.0) to generated messages. The attribute tells the debugger to not quote the ToString value with `nq`.\r\n\r\nBefore:\r\n![image](https://github.com/protocolbuffers/protobuf/assets/303201/b1cc5f45-4064-4ba0-b266-8894ca0f35c8)\r\n\r\nAfter:\r\n![image](https://github.com/protocolbuffers/protobuf/assets/303201/70f6ffc0-9421-428d-bc22-ead7aa82c37f)\r\n\r\nI haven't touched the protoc compiler in a long time. I'm guessing I need to build it and then run it to regenerate the checked-in code. I don't suppose someone else could do that? It would save me a lot of time \ud83d\ude2c ",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-04T13:03:40Z",
        "closed_at": "2023-09-18T12:18:27Z",
        "merged_at": null,
        "body": "Bumps [shivammathur/setup-php](https://github.com/shivammathur/setup-php) from 2.24.0 to 2.25.5.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/shivammathur/setup-php/releases\">shivammathur/setup-php's releases</a>.</em></p>\n<blockquote>\n<h2>2.25.5</h2>\n<h2>Changelog</h2>\n<ul>\n<li>Added support for <code>castor</code> in tools input. <a href=\"https://redirect.github.com/shivammathur/setup-php/issues/746\">#746</a></li>\n</ul>\n<pre lang=\"yml\"><code>- name: Setup PHP\n  uses: shivammathur/setup-php@v2\n  with:\n    php-version: '8.2'\n    tools: castor\n</code></pre>\n<ul>\n<li>\n<p>Fixed support for self-hosted Debian 12 environments.</p>\n</li>\n<li>\n<p>Fixed support for self-hosted environments using DEB822-STYLE .sources files.</p>\n</li>\n<li>\n<p>Fixed re-enabling opcache extension on macOS. <a href=\"https://redirect.github.com/shivammathur/setup-php/issues/749\">#749</a></p>\n</li>\n<li>\n<p>Updated Node.js dependencies.</p>\n</li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/pyrech\"><code>@\u200bpyrech</code></a> made their first contribution in <a href=\"https://redirect.github.com/shivammathur/setup-php/pull/746\">shivammathur/setup-php#746</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/shivammathur/setup-php/compare/2.25.4...2.25.5\">https://github.com/shivammathur/setup-php/compare/2.25.4...2.25.5</a></p>\n<!-- raw HTML omitted -->\n<h2>2.25.4</h2>\n<h2>Changelog</h2>\n<ul>\n<li>\n<p>Fixed regression in 2.25.3 in PHPUnit installation by specifying <code>major</code> or <code>major.minor</code> version in the <code>tools</code> input. <a href=\"https://redirect.github.com/shivammathur/setup-php/issues/743\">#743</a></p>\n</li>\n<li>\n<p>Fixed <code>fs</code> import in <code>utls.test.ts</code>.</p>\n</li>\n<li>\n<p>Updated Node.js dependencies.</p>\n</li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/shivammathur/setup-php/compare/2.25.3...2.25.4\">https://github.com/shivammathur/setup-php/compare/2.25.3...2.25.4</a></p>\n<!-- raw HTML omitted -->\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/shivammathur/setup-php/commit/72ae4ccbe57f82bbe08411e84e2130bd4ba1c10f\"><code>72ae4cc</code></a> Update Node.js dependenices</li>\n<li><a href=\"https://github.com/shivammathur/setup-php/commit/5b2015e8fefd9b9f5fade844978da626bfd7fe2f\"><code>5b2015e</code></a> Link opcache to ext_dir on macOS</li>\n<li><a href=\"https://github.com/shivammathur/setup-php/commit/9c77701ae57b0c47f6732beebfbdec76e4e5c90a\"><code>9c77701</code></a> Remove workaround of Debian 12 in ppa.sh</li>\n<li><a href=\"https://github.com/shivammathur/setup-php/commit/394503cb8a4f9a285aedd6b16bbe172e7c0f9e88\"><code>394503c</code></a> Override semver version to 7.5.3 GHSA-c2qf-rxjj-qqgw/CVE-2022-25883</li>\n<li><a href=\"https://github.com/shivammathur/setup-php/commit/f1cc14e3d5baeef2f4bbb238688a6ac68b94ed3f\"><code>f1cc14e</code></a> Fix grep call in ppa.sh</li>\n<li><a href=\"https://github.com/shivammathur/setup-php/commit/9d529a72e0c2137020367b2d8d3f74b7b8411ed2\"><code>9d529a7</code></a> Only check castor version if castor.php is present</li>\n<li><a href=\"https://github.com/shivammathur/setup-php/commit/c63f07d82e27c3a9ef6dc2c614c840ce9508530c\"><code>c63f07d</code></a> Fix version prefix for castor</li>\n<li><a href=\"https://github.com/shivammathur/setup-php/commit/e40aa32c04a796c054f1a6a18fa67f541e8f269f\"><code>e40aa32</code></a> Update Node.js dependencies</li>\n<li><a href=\"https://github.com/shivammathur/setup-php/commit/a683e803070bce37d70a2574d6dcb07a3ee95493\"><code>a683e80</code></a> Merge pull request <a href=\"https://redirect.github.com/shivammathur/setup-php/issues/746\">#746</a> from pyrech/support-castor</li>\n<li><a href=\"https://github.com/shivammathur/setup-php/commit/7ce22e0264b6c4bb45f88456d0d5dc64c75b77d9\"><code>7ce22e0</code></a> Add support for jolicode/castor</li>\n<li>Additional commits viewable in <a href=\"https://github.com/shivammathur/setup-php/compare/d30ad8b1843ace22e6698ab99bbafaa747b6bd0d...72ae4ccbe57f82bbe08411e84e2130bd4ba1c10f\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=shivammathur/setup-php&package-manager=github_actions&previous-version=2.24.0&new-version=2.25.5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 118,
        "deletions": 203,
        "changed_files": 4,
        "created_at": "2023-09-04T12:10:47Z",
        "closed_at": "2023-09-11T10:02:18Z",
        "merged_at": null,
        "body": "Reserve/InternalExtend use capacity instead of size as input.\n\nThis allows to remove branch from `InternalExtend` which is beneficial for small fields.\n\nAlso refactored `UnsafeArenaAddAllocated` - it looks like it had an outdated comment. The function no longer deletes already allocated elements and hence does not need to be a template.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 91,
        "deletions": 160,
        "changed_files": 2,
        "created_at": "2023-09-04T10:53:26Z",
        "closed_at": "2023-09-11T10:02:21Z",
        "merged_at": null,
        "body": "Swap allocated_size and total_size to prevent cache misses on fast path.\n\nNote: I don't know how to simulate cache miss reliably in a microbenchmark, so the change does not show any significant diff on the added BMs.\n\nMotivation:\n 1. It's more aligned with class design: total_size is the capacity of Rep, so it makes more sense to store it there.\n 2. On the fast path, we check allocated_size, and with this change we do not to dereference Rep to read it (slow path is unchanged, as it needs both capacity and allocated size).\n 3. fast path is inlined and as a result we reduce code bloat.\n\nAlso added removed redundant check with MaybeExtend in some methods: these methods already know that call to extend is necessary, so no need to go through `Reserve` route.\n\nnit: deduped code by reusing AddAllocatedForParse in other Add functions.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-09-04T07:44:45Z",
        "closed_at": "2023-09-04T09:58:19Z",
        "merged_at": null,
        "body": "Internal Code Change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-09-04T04:37:59Z",
        "closed_at": "2023-09-11T05:23:28Z",
        "merged_at": null,
        "body": "Updated to latest rules_kotlin ",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 44,
        "deletions": 28,
        "changed_files": 1,
        "created_at": "2023-09-02T00:30:40Z",
        "closed_at": "2023-09-09T10:01:43Z",
        "merged_at": null,
        "body": "Reduce code bloat for messages - use virtual methods for Merge/Clear/Delete.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 115,
        "deletions": 9,
        "changed_files": 11,
        "created_at": "2023-09-01T21:45:12Z",
        "closed_at": "2023-09-13T21:21:06Z",
        "merged_at": null,
        "body": "Setting up version updater to prepare for poison pills and embedding version info into C++, Python and Java gencode.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-09-01T19:50:59Z",
        "closed_at": "2023-09-01T22:57:02Z",
        "merged_at": null,
        "body": "Clarify staleness tests\n\n- They will now output the regen command on failure\n- On fork presubmits, they won't be named by branch\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 153,
        "deletions": 22,
        "changed_files": 7,
        "created_at": "2023-09-01T18:26:54Z",
        "closed_at": "2023-09-06T22:41:55Z",
        "merged_at": null,
        "body": "Editions: Expand validation in feature resolution\n\n- Check that the maximum edition is always after the minimum\n- Make sure that the minimum edition gets included in the default mapping when it's necessary\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 520,
        "deletions": 23,
        "changed_files": 9,
        "created_at": "2023-09-01T17:40:33Z",
        "closed_at": "2023-09-06T23:22:22Z",
        "merged_at": null,
        "body": "Editions: Introduce functionality to protoc for generating edition feature set defaults.\n\nThis can be used by non-C++ runtimes and generators to seed feature resolution.  The output binary proto message will contain a mapping from edition to the default feature set, including whichever generator feature extensions are passed to protoc.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-09-01T17:23:42Z",
        "closed_at": "2023-09-08T10:02:11Z",
        "merged_at": null,
        "body": "Remove CordRepRing experiment.\n\nWe have no intention to use it instead of the CordRepBtree implementation, so cleanup up and remove all code and references.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-09-01T16:56:12Z",
        "closed_at": "2023-09-01T18:41:49Z",
        "merged_at": null,
        "body": "Add dependency on absl::layout, and explicitly include absl layout includes\n\nThis header was transitively included from (deprecated) absl cord includes.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 179,
        "deletions": 130,
        "changed_files": 20,
        "created_at": "2023-09-01T16:15:48Z",
        "closed_at": "2023-09-01T19:54:16Z",
        "merged_at": "2023-09-01T19:54:16Z",
        "body": "Fixes https://github.com/protocolbuffers/protobuf/issues/13787\r\n\r\nPiperOrigin-RevId: 561528198\r\n\r\nBackport of 0cf3b66",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-09-01T13:32:28Z",
        "closed_at": "2023-09-08T10:02:13Z",
        "merged_at": null,
        "body": "Properly untrack Python GC objects during deallocation.\n\nAdd PyObject_GC_UnTrack() in deallocation functions for Python types that\nhave PyTPFLAGS_HAVE_GC set, either explicitly or by inheriting from a type\nwith GC set. Not untracking before clearing instance data introduces\npotential race conditions (if GC happens to run between the partial clearing\nand the actual deallocation) and produces a warning under Python 3.11.\n\n(The warning then triggered an assertion failure, which only showed up when\nbuilding in Py_DEBUG mode; this therefor also fixes that assertion failure.)\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 7,
        "changed_files": 2,
        "created_at": "2023-09-01T06:55:52Z",
        "closed_at": "2023-09-05T14:46:07Z",
        "merged_at": null,
        "body": "Delete dead Message::GetInvariantPerBuild\n\nThis is a protected member function and not part of the public interface.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 4,
        "changed_files": 5,
        "created_at": "2023-08-31T22:17:20Z",
        "closed_at": "2023-09-01T16:38:43Z",
        "merged_at": null,
        "body": "Remove redundant option: profile_driven_inline_string.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 109,
        "deletions": 30,
        "changed_files": 10,
        "created_at": "2023-08-31T21:22:52Z",
        "closed_at": "2023-09-13T10:02:09Z",
        "merged_at": null,
        "body": "Internal Change\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 80,
        "deletions": 8,
        "changed_files": 3,
        "created_at": "2023-08-31T21:12:19Z",
        "closed_at": "2023-09-19T10:02:12Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 83,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2023-08-31T21:05:50Z",
        "closed_at": "2023-09-01T21:15:20Z",
        "merged_at": null,
        "body": "Add lock to pure python's field decoders\n\nFix data race that may increase flake rate of some tests.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 8,
        "changed_files": 4,
        "created_at": "2023-08-31T19:16:17Z",
        "closed_at": "2023-09-06T13:33:26Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 17,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-31T17:00:28Z",
        "closed_at": "2023-09-01T15:56:22Z",
        "merged_at": "2023-09-01T15:56:22Z",
        "body": "\u2026ne with a\r\n\r\nconst_cast.\r\n\r\nFixes https://github.com/protocolbuffers/protobuf/issues/13715\r\n\r\nPiperOrigin-RevId: 561660761\r\n\r\nBackport of https://github.com/protocolbuffers/protobuf/commit/0522054f3ee5e32c9df15af7c11f046e91e77998",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 49,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2023-08-31T14:57:28Z",
        "closed_at": "2023-09-07T10:01:53Z",
        "merged_at": null,
        "body": "`Repeated(Ptr)Field`: Add `back()`\n\nAdds a convenience method get the last element of a repeated field\nto use instead of the more verbose `field[field.size() - 1]`.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 242,
        "deletions": 164,
        "changed_files": 4,
        "created_at": "2023-08-31T11:19:32Z",
        "closed_at": "2023-09-07T10:01:56Z",
        "merged_at": null,
        "body": "RepeatedPtrField layout is optimized.\n\nOn common builds, the new size is 16 bytes (down from 24).\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2023-08-31T01:16:27Z",
        "closed_at": "2023-08-31T17:03:39Z",
        "merged_at": null,
        "body": "Address -Wint-conversion issues.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 69,
        "deletions": 69,
        "changed_files": 6,
        "created_at": "2023-08-30T21:52:54Z",
        "closed_at": "2023-08-31T03:40:33Z",
        "merged_at": null,
        "body": "Silence warnings about extra semicolon in non-TSAN builds.\n\nFixes https://github.com/protocolbuffers/protobuf/issues/13787\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-30T21:38:11Z",
        "closed_at": "2023-08-31T17:42:33Z",
        "merged_at": null,
        "body": "Squelch snake case warnings for modules\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 17,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-30T21:09:14Z",
        "closed_at": "2023-08-31T15:25:15Z",
        "merged_at": null,
        "body": "Workaround ICE on gcc 7.5 by not having one overload call the other one with a\nconst_cast.\n\nFixes https://github.com/protocolbuffers/protobuf/issues/13715\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 621,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-08-30T20:38:34Z",
        "closed_at": "2023-09-06T10:02:10Z",
        "merged_at": null,
        "body": "Adds \"Edition Zero Features\" to the GitHub code repository.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 124,
        "deletions": 35,
        "changed_files": 5,
        "created_at": "2023-08-30T20:04:49Z",
        "closed_at": "2023-09-01T02:58:57Z",
        "merged_at": null,
        "body": "Fix SetExtension value semantics.\nMove SetExtension common code out of header to protos.cc.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 68,
        "deletions": 36,
        "changed_files": 5,
        "created_at": "2023-08-30T19:44:02Z",
        "closed_at": "2023-08-30T22:47:39Z",
        "merged_at": null,
        "body": "Add upb python Py_mp_subscript for descriptor sequences.\n\nA behavior diff that between upb and the other two implementations.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 19,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2023-08-30T19:16:57Z",
        "closed_at": "2023-09-05T16:48:01Z",
        "merged_at": null,
        "body": "Change SkipRestOfBlock to be iterative instead of recursive to avoid stack\noverflows on invalid input with many unbalanced `{` characters.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-30T18:55:12Z",
        "closed_at": "2023-08-30T21:12:16Z",
        "merged_at": null,
        "body": "Set top and job level permissions for janitor.yml\n\nIt seems that the janitor.yml workflow only needs pull-requests: write permission -- to close the PRs. I've also granted the contents: read just in case.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 63,
        "deletions": 69,
        "changed_files": 10,
        "created_at": "2023-08-30T18:47:39Z",
        "closed_at": "2023-09-06T10:02:12Z",
        "merged_at": null,
        "body": "Test new protobuf-ci version\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 605,
        "deletions": 171,
        "changed_files": 7,
        "created_at": "2023-08-30T17:36:52Z",
        "closed_at": "2023-09-06T10:02:15Z",
        "merged_at": null,
        "body": "Migrate SDL proto bundles to use the new Edition enum.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 32,
        "deletions": 10,
        "changed_files": 3,
        "created_at": "2023-08-30T17:19:04Z",
        "closed_at": "2023-09-05T15:58:48Z",
        "merged_at": null,
        "body": "Add a PrintToStringOrDie version of PrintToString.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 638,
        "deletions": 0,
        "changed_files": 6,
        "created_at": "2023-08-30T17:17:30Z",
        "closed_at": "2023-09-06T10:02:17Z",
        "merged_at": null,
        "body": "Adds \"Protobuf Design: Options Attributes\" to the GitHub code repository.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 10,
        "changed_files": 1,
        "created_at": "2023-08-30T15:50:01Z",
        "closed_at": "2023-08-30T19:09:21Z",
        "merged_at": null,
        "body": "Delete obsolete code that searches the pool for \"proto2.FeatureSet\".\n\nFeature resolution has been refactored in a way that made this dead code.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-30T09:41:58Z",
        "closed_at": "2023-09-06T10:02:19Z",
        "merged_at": null,
        "body": "Test\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-08-30T06:10:48Z",
        "closed_at": "2023-08-31T09:14:49Z",
        "merged_at": null,
        "body": "Internal Code Change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 25,
        "deletions": 41,
        "changed_files": 2,
        "created_at": "2023-08-30T05:19:49Z",
        "closed_at": "2023-08-30T06:58:12Z",
        "merged_at": null,
        "body": "protobuf: fix data race on SerialArena::string_block_\n\nSpaceUsed reads string_block_ while AllocateFromStringBlockFallback\ncan be changing it concurrently. Make it an atomic.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 21,
        "changed_files": 1,
        "created_at": "2023-08-30T05:19:40Z",
        "closed_at": "2023-08-30T09:54:50Z",
        "merged_at": null,
        "body": "proto: remove debug logging from opt build\n\nThe debug logging call makes SerialArena::AllocateFromExistingWithCleanupFallback  function non-leaf and significantly worsens codegen (stack frame allocation + register spills). As the result it's also not inlined into ThreadSafeArena::AllocateAlignedWithCleanup.\n\nWith this change SerialArena::AllocateFromExistingWithCleanupFallback\nbecomes frame-less leaf function and is inlined into ThreadSafeArena::AllocateAlignedWithCleanup.\n\nCodegen before:\n\n00000000007b1820 <proto2::internal::ThreadSafeArena::AllocateAlignedWithCleanup(unsigned long, unsigned long, void (*)(void*))>:\n  7b1820:       48 c7 c0 40 fb ff ff    mov    $0xfffffffffffffb40,%rax\n  7b1827:       64 4c 8b 40 08          mov    %fs:0x8(%rax),%r8\n...\n  7b189f:       e9 5c eb ff ff          jmp    7b0400 <proto2::internal::SerialArena::AllocateFromExistingWithCleanupFallback(unsigned long, unsigned long, void (*)(void*))>\n  \n  00000000007b0400 <proto2::internal::SerialArena::AllocateFromExistingWithCleanupFallback(unsigned long, unsigned long, void (*)(void*))>:\n  7b0400:\t55                   \tpush   %rbp\n  7b0401:\t48 89 e5             \tmov    %rsp,%rbp\n  7b0404:\t41 56                \tpush   %r14\n  7b0406:\t53                   \tpush   %rbx\n  7b0407:\t48 83 ec 10          \tsub    $0x10,%rsp\n  ...\n  7b04c3:\t48 83 c4 10          \tadd    $0x10,%rsp\n  7b04c7:\t5b                   \tpop    %rbx\n  7b04c8:\t41 5e                \tpop    %r14\n  7b04ca:\t5d                   \tpop    %rbp\n  7b04cb:\tc3                   \tret\n  7b04cc:\t48 8d 35 44 a4 a9 ff \tlea    -0x565bbc(%rip),%rsi        # 24a917 <absl::debugging_internal::IdentifierIsAnonymousNamespace(absl::debugging_internal::State*, unsigned long)::anon_prefix+0x2e19e>\n  7b04d3:\t4c 8d 75 e0          \tlea    -0x20(%rbp),%r14\n  7b04d7:\t4c 89 f7             \tmov    %r14,%rdi\n  7b04da:\tba f3 00 00 00       \tmov    $0xf3,%edx\n  7b04df:\te8 9c 05 1e 00       \tcall   990a80 <absl::log_internal::LogMessageFatal::LogMessageFatal(char const*, int)>\n  7b04e4:\t48 8d 35 3e 43 a6 ff \tlea    -0x59bcc2(%rip),%rsi        # 214829 <absl::Symbolize(void const*, char*, int)::kEllipsis+0xba26>\n  7b04eb:\t4c 89 f7             \tmov    %r14,%rdi\n  7b04ee:\te8 cd f6 d0 ff       \tcall   4bfbc0 <absl::log_internal::LogMessage& absl::log_internal::LogMessage::operator<< <24>(char const (&) [24])>\n  7b04f3:\t48 89 c7             \tmov    %rax,%rdi\n  7b04f6:\t89 de                \tmov    %ebx,%esi\n  7b04f8:\te8 c3 a0 c9 ff       \tcall   44a5c0 <absl::log_internal::LogMessage::operator<<(int)>\n  7b04fd:\t4c 89 f7             \tmov    %r14,%rdi\n  7b0500:\te8 1b e9 0c 00       \tcall   87ee20 <absl::log_internal::LogMessageFatal::~LogMessageFatal()>\n\nCodegen after:\n\n00000000007b1680 <proto2::internal::ThreadSafeArena::AllocateAlignedWithCleanup(unsigned long, unsigned long, void (*)(void*))>:\n  7b1680:\t49 c7 c0 40 fb ff ff \tmov    $0xfffffffffffffb40,%r8\n  7b1687:\t64 49 8b 40 08       \tmov    %fs:0x8(%r8),%rax\n...\n  7b17a5:\tc3                   \tret\n\nname                           old cpu/op   new cpu/op   delta\nBM_ArenaAllocWithCleanup/100   957ns \u00b1 3%   868ns \u00b1 1%  -9.27%  (p=0.000 n=54+48)\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 27,
        "deletions": 16,
        "changed_files": 3,
        "created_at": "2023-08-30T05:19:34Z",
        "closed_at": "2023-09-06T10:02:22Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-08-30T05:19:12Z",
        "closed_at": "2023-08-30T09:53:17Z",
        "merged_at": null,
        "body": "protobuf: add arena allocation with cleanup benchmark\n\nAllocation with cleanup is quite different from the normal allocation.\nAdd a synthetic benchmark for it.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 22,
        "changed_files": 2,
        "created_at": "2023-08-30T05:14:43Z",
        "closed_at": "2023-08-30T10:32:54Z",
        "merged_at": null,
        "body": "protobuf: mark unlikely branch as so\n\nDon't leave things to chance. We generally mark likely/unlikely\nbranches on hot paths as such.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2078,
        "deletions": 1177,
        "changed_files": 24,
        "created_at": "2023-08-30T02:14:35Z",
        "closed_at": "2023-09-06T10:02:24Z",
        "merged_at": null,
        "body": "Editions: Migrate edition strings to enum in Java code.\n\nThe edition specification in proto files will remain unchanged, but it will be immediately converted to an enum by the parser.  This gives us more control over the valid set of editions and simplifies ordering (just an integer comparison now).  We plan to release exactly one edition per year.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 23,
        "deletions": 11,
        "changed_files": 2,
        "created_at": "2023-08-29T22:26:44Z",
        "closed_at": "2023-08-30T20:04:59Z",
        "merged_at": null,
        "body": "Move SetExtension common code out of header to protos.cc.\nFix GetInternalArena() call for extension_arena.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-29T20:30:10Z",
        "closed_at": "2023-08-30T19:30:46Z",
        "merged_at": null,
        "body": "Bump actions/setup-python from 4.5.0 to 4.7.0 (#13766)\n\nBumps [actions/setup-python](https://github.com/actions/setup-python) from 4.5.0 to 4.7.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/actions/setup-python/releases\">actions/setup-python's releases</a>.</em></p>\n<blockquote>\n<h2>v4.7.0</h2>\n<p>In scope of this release, the support for reading python version from pyproject.toml was added (<a href=\"https://redirect.github.com/actions/setup-python/pull/669\">actions/setup-python#669</a>).</p>\n<pre lang=\"yaml\"><code>      - name: Setup Python\n        uses: actions/setup-python@v4\n        with:\n          python-version-file: pyproject.toml\n</code></pre>\n<h3>Besides, it includes such changes as:</h3>\n<ul>\n<li>Bump tough-cookie and <code>@\u200bazure/ms-rest-js</code> by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/actions/setup-python/pull/697\">actions/setup-python#697</a></li>\n<li>Bump semver from 7.3.8 to 7.5.2 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/actions/setup-python/pull/692\">actions/setup-python#692</a></li>\n<li>Fix typos found by codespell by <a href=\"https://github.com/DimitriPapadopoulos\"><code>@\u200bDimitriPapadopoulos</code></a> in <a href=\"https://redirect.github.com/actions/setup-python/pull/650\">actions/setup-python#650</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/dariocurr\"><code>@\u200bdariocurr</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/setup-python/pull/669\">actions/setup-python#669</a></li>\n<li><a href=\"https://github.com/DimitriPapadopoulos\"><code>@\u200bDimitriPapadopoulos</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/setup-python/pull/650\">actions/setup-python#650</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/setup-python/compare/v4...v4.7.0\">https://github.com/actions/setup-python/compare/v4...v4.7.0</a></p>\n<h2>v4.6.1</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Fix <code>allow-prereleases</code> sample configuration by <a href=\"https://github.com/mayeut\"><code>@\u200bmayeut</code></a> in <a href=\"https://redirect.github.com/actions/setup-python/pull/615\">actions/setup-python#615</a></li>\n<li>Fix a incorrect link advanced-usage.md by <a href=\"https://github.com/siyuan0322\"><code>@\u200bsiyuan0322</code></a> in <a href=\"https://redirect.github.com/actions/setup-python/pull/657\">actions/setup-python#657</a></li>\n<li>Remove implicit dependency by <a href=\"https://github.com/nikolai-laevskii\"><code>@\u200bnikolai-laevskii</code></a> in <a href=\"https://redirect.github.com/actions/setup-python/pull/668\">actions/setup-python#668</a></li>\n<li>Automatic update of configuration files from 05/23/2023 by <a href=\"https://github.com/github-actions\"><code>@\u200bgithub-actions</code></a> in <a href=\"https://redirect.github.com/actions/setup-python/pull/671\">actions/setup-python#671</a></li>\n<li>Add warning for python 2.7 on release/v4 by <a href=\"https://github.com/dmitry-shibanov\"><code>@\u200bdmitry-shibanov</code></a> in <a href=\"https://redirect.github.com/actions/setup-python/pull/673\">actions/setup-python#673</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/siyuan0322\"><code>@\u200bsiyuan0322</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/setup-python/pull/657\">actions/setup-python#657</a></li>\n<li><a href=\"https://github.com/nikolai-laevskii\"><code>@\u200bnikolai-laevskii</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/setup-python/pull/668\">actions/setup-python#668</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/setup-python/compare/v4...v4.6.1\">https://github.com/actions/setup-python/compare/v4...v4.6.1</a></p>\n<h2>Add allow-prereleases input</h2>\n<p>In scope of this release we added a new input (<code>allow-prereleases</code>) to allow <a href=\"https://redirect.github.com/actions/setup-python/pull/414\">falling back to pre-release versions of Python when a matching GA version of Python is not available</a></p>\n<pre lang=\"yaml\"><code>steps:\n  - uses: actions/checkout@v3\n  - uses: actions/setup-python@v4\n    with:\n      python-version: 3.12\n      allow-prereleases: true\n</code></pre>\n<p>Besides, we added such changes as:</p>\n<ul>\n<li>Fix bug to trim new line for PyPy version: <a href=\"https://redirect.github.com/actions/setup-python/pull/610\">actions/setup-python#610</a></li>\n<li>Added pip dependency file to generate hash from it: <a href=\"https://redirect.github.com/actions/setup-python/pull/604\">actions/setup-python#604</a></li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/actions/setup-python/commit/61a6322f88396a6271a6ee3565807d608ecaddd1\"><code>61a6322</code></a> Fix typos found by codespell (<a href=\"https://redirect.github.com/actions/setup-python/issues/650\">#650</a>)</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/ea5b57fccc93aea0d77e6225efa19adaec3fce0d\"><code>ea5b57f</code></a> Bump semver from 7.3.8 to 7.5.2 (<a href=\"https://redirect.github.com/actions/setup-python/issues/692\">#692</a>)</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/014d32a83013b439dd2a147051d855831576a3ef\"><code>014d32a</code></a> Bump tough-cookie and <code>@\u200bazure/ms-rest-js</code> (<a href=\"https://redirect.github.com/actions/setup-python/issues/697\">#697</a>)</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/c16c4b8d1828103eda022b2cade091238fe08311\"><code>c16c4b8</code></a> Fix pipenv jobs (<a href=\"https://redirect.github.com/actions/setup-python/issues/699\">#699</a>)</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/0d5da6a89a3aa5b4dbd48e38b0c9d678b0caa0e5\"><code>0d5da6a</code></a> Read python version from pyproject.toml (fix <a href=\"https://redirect.github.com/actions/setup-python/issues/542\">#542</a>) (<a href=\"https://redirect.github.com/actions/setup-python/issues/669\">#669</a>)</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/3f824b7ca6388f5e27e362d31352e6456c8e3bfb\"><code>3f824b7</code></a> remove python 2.7 from the tests (<a href=\"https://redirect.github.com/actions/setup-python/issues/687\">#687</a>)</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/bd6b4b6205c4dbad673328db7b31b7fab9e241c0\"><code>bd6b4b6</code></a> Add warning for python 2.7 (<a href=\"https://redirect.github.com/actions/setup-python/issues/673\">#673</a>)</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/0cbcb9a3d7c0b228a2c4fbde82b6e8855233cd92\"><code>0cbcb9a</code></a> Merge pull request <a href=\"https://redirect.github.com/actions/setup-python/issues/668\">#668</a> from akv-platform/disallow-implicit-dependencies</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/669664dac1a46a4bb872089e1a90e4ad5dc232a6\"><code>669664d</code></a> Merge branch 'tool-config-auto-update' into disallow-implicit-dependencies</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/9cbf792a3cbbd9c37749da21d3b171b927451bb0\"><code>9cbf792</code></a> Update configuration files</li>\n<li>Additional commits viewable in <a href=\"https://github.com/actions/setup-python/compare/d27e3f3d7c64b4bbf8e4abfb9b63b83e846e0435...61a6322f88396a6271a6ee3565807d608ecaddd1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/setup-python&package-manager=github_actions&previous-version=4.5.0&new-version=4.7.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>\n\nCloses #13766\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/13766 from protocolbuffers:dependabot/github_actions/actions/setup-python-4.7.0 5e427982474c6dfb5304e50662f45d585acad73d\nFUTURE_COPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/13766 from protocolbuffers:dependabot/github_actions/actions/setup-python-4.7.0 5e427982474c6dfb5304e50662f45d585acad73d\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 41,
        "deletions": 8,
        "changed_files": 3,
        "created_at": "2023-08-29T20:24:08Z",
        "closed_at": "2023-08-30T17:27:03Z",
        "merged_at": null,
        "body": "Fix SetExtension to fuse the right arenas.\nAlso, make sure the operation has no side effects if the arenas can't be fused.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 55,
        "deletions": 28,
        "changed_files": 8,
        "created_at": "2023-08-29T19:43:01Z",
        "closed_at": "2023-08-30T01:05:47Z",
        "merged_at": null,
        "body": "Update PHP and Ruby amalgamations in regenerate_stale_files.sh\n\nThis removes the need for us to manually rebuild these amalgamation files. I\nadded the \"manual\" tag to the corresponding staleness tests so that we won't\nget presubmit errors if the amalgamation files are out of date. I also had to\ntweak the Ruby BUILD.bazel file to make sure it uses Bazel-generated\namalgamations instead of relying on the checked-in files.\n\nI added deliberate errors to the Ruby and PHP amalgamation files to test that\neverything is working. We should not see any CI errors, and the files should\nquickly be auto-updated after the change lands on main.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 248,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-08-29T18:11:51Z",
        "closed_at": "2023-09-05T10:02:29Z",
        "merged_at": null,
        "body": "Adds \"Protobuf Design: Options Attributes\" to the GitHub code repository.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 106,
        "deletions": 32,
        "changed_files": 4,
        "created_at": "2023-08-29T17:50:00Z",
        "closed_at": "2023-09-05T16:42:12Z",
        "merged_at": null,
        "body": "Do not expose mutable methods in the CProxy.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 90,
        "deletions": 60,
        "changed_files": 10,
        "created_at": "2023-08-29T17:06:01Z",
        "closed_at": "2023-09-05T21:28:55Z",
        "merged_at": null,
        "body": "upb: Remove the mirrored definitions in upb_MapEntry and upb_MessageInternal\n\nCreate message/internal/types.h as a new leaf header\nMove map_entry.h from message/internal/ to collections/internal/ where it belongs\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 295,
        "deletions": 303,
        "changed_files": 16,
        "created_at": "2023-08-29T15:20:55Z",
        "closed_at": "2023-08-29T16:30:01Z",
        "merged_at": null,
        "body": "Replace GetCachedSize+SetCachedSize with a single AccessCachedSize function.\nRemoves 1 virtual function from each Message type.\n\nWe keep the codegen for GetCachedSize+SetCachedSize to allow for non-virtual dispatch for those calls, but they are not overriding a virtual function.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-29T14:08:54Z",
        "closed_at": "2023-08-30T19:30:46Z",
        "merged_at": null,
        "body": "Bumps [actions/setup-python](https://github.com/actions/setup-python) from 4.5.0 to 4.7.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/actions/setup-python/releases\">actions/setup-python's releases</a>.</em></p>\n<blockquote>\n<h2>v4.7.0</h2>\n<p>In scope of this release, the support for reading python version from pyproject.toml was added (<a href=\"https://redirect.github.com/actions/setup-python/pull/669\">actions/setup-python#669</a>).</p>\n<pre lang=\"yaml\"><code>      - name: Setup Python\n        uses: actions/setup-python@v4\n        with:\n          python-version-file: pyproject.toml\n</code></pre>\n<h3>Besides, it includes such changes as:</h3>\n<ul>\n<li>Bump tough-cookie and <code>@\u200bazure/ms-rest-js</code> by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/actions/setup-python/pull/697\">actions/setup-python#697</a></li>\n<li>Bump semver from 7.3.8 to 7.5.2 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/actions/setup-python/pull/692\">actions/setup-python#692</a></li>\n<li>Fix typos found by codespell by <a href=\"https://github.com/DimitriPapadopoulos\"><code>@\u200bDimitriPapadopoulos</code></a> in <a href=\"https://redirect.github.com/actions/setup-python/pull/650\">actions/setup-python#650</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/dariocurr\"><code>@\u200bdariocurr</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/setup-python/pull/669\">actions/setup-python#669</a></li>\n<li><a href=\"https://github.com/DimitriPapadopoulos\"><code>@\u200bDimitriPapadopoulos</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/setup-python/pull/650\">actions/setup-python#650</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/setup-python/compare/v4...v4.7.0\">https://github.com/actions/setup-python/compare/v4...v4.7.0</a></p>\n<h2>v4.6.1</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Fix <code>allow-prereleases</code> sample configuration by <a href=\"https://github.com/mayeut\"><code>@\u200bmayeut</code></a> in <a href=\"https://redirect.github.com/actions/setup-python/pull/615\">actions/setup-python#615</a></li>\n<li>Fix a incorrect link advanced-usage.md by <a href=\"https://github.com/siyuan0322\"><code>@\u200bsiyuan0322</code></a> in <a href=\"https://redirect.github.com/actions/setup-python/pull/657\">actions/setup-python#657</a></li>\n<li>Remove implicit dependency by <a href=\"https://github.com/nikolai-laevskii\"><code>@\u200bnikolai-laevskii</code></a> in <a href=\"https://redirect.github.com/actions/setup-python/pull/668\">actions/setup-python#668</a></li>\n<li>Automatic update of configuration files from 05/23/2023 by <a href=\"https://github.com/github-actions\"><code>@\u200bgithub-actions</code></a> in <a href=\"https://redirect.github.com/actions/setup-python/pull/671\">actions/setup-python#671</a></li>\n<li>Add warning for python 2.7 on release/v4 by <a href=\"https://github.com/dmitry-shibanov\"><code>@\u200bdmitry-shibanov</code></a> in <a href=\"https://redirect.github.com/actions/setup-python/pull/673\">actions/setup-python#673</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/siyuan0322\"><code>@\u200bsiyuan0322</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/setup-python/pull/657\">actions/setup-python#657</a></li>\n<li><a href=\"https://github.com/nikolai-laevskii\"><code>@\u200bnikolai-laevskii</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/setup-python/pull/668\">actions/setup-python#668</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/setup-python/compare/v4...v4.6.1\">https://github.com/actions/setup-python/compare/v4...v4.6.1</a></p>\n<h2>Add allow-prereleases input</h2>\n<p>In scope of this release we added a new input (<code>allow-prereleases</code>) to allow <a href=\"https://redirect.github.com/actions/setup-python/pull/414\">falling back to pre-release versions of Python when a matching GA version of Python is not available</a></p>\n<pre lang=\"yaml\"><code>steps:\n  - uses: actions/checkout@v3\n  - uses: actions/setup-python@v4\n    with:\n      python-version: 3.12\n      allow-prereleases: true\n</code></pre>\n<p>Besides, we added such changes as:</p>\n<ul>\n<li>Fix bug to trim new line for PyPy version: <a href=\"https://redirect.github.com/actions/setup-python/pull/610\">actions/setup-python#610</a></li>\n<li>Added pip dependency file to generate hash from it: <a href=\"https://redirect.github.com/actions/setup-python/pull/604\">actions/setup-python#604</a></li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/actions/setup-python/commit/61a6322f88396a6271a6ee3565807d608ecaddd1\"><code>61a6322</code></a> Fix typos found by codespell (<a href=\"https://redirect.github.com/actions/setup-python/issues/650\">#650</a>)</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/ea5b57fccc93aea0d77e6225efa19adaec3fce0d\"><code>ea5b57f</code></a> Bump semver from 7.3.8 to 7.5.2 (<a href=\"https://redirect.github.com/actions/setup-python/issues/692\">#692</a>)</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/014d32a83013b439dd2a147051d855831576a3ef\"><code>014d32a</code></a> Bump tough-cookie and <code>@\u200bazure/ms-rest-js</code> (<a href=\"https://redirect.github.com/actions/setup-python/issues/697\">#697</a>)</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/c16c4b8d1828103eda022b2cade091238fe08311\"><code>c16c4b8</code></a> Fix pipenv jobs (<a href=\"https://redirect.github.com/actions/setup-python/issues/699\">#699</a>)</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/0d5da6a89a3aa5b4dbd48e38b0c9d678b0caa0e5\"><code>0d5da6a</code></a> Read python version from pyproject.toml (fix <a href=\"https://redirect.github.com/actions/setup-python/issues/542\">#542</a>) (<a href=\"https://redirect.github.com/actions/setup-python/issues/669\">#669</a>)</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/3f824b7ca6388f5e27e362d31352e6456c8e3bfb\"><code>3f824b7</code></a> remove python 2.7 from the tests (<a href=\"https://redirect.github.com/actions/setup-python/issues/687\">#687</a>)</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/bd6b4b6205c4dbad673328db7b31b7fab9e241c0\"><code>bd6b4b6</code></a> Add warning for python 2.7 (<a href=\"https://redirect.github.com/actions/setup-python/issues/673\">#673</a>)</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/0cbcb9a3d7c0b228a2c4fbde82b6e8855233cd92\"><code>0cbcb9a</code></a> Merge pull request <a href=\"https://redirect.github.com/actions/setup-python/issues/668\">#668</a> from akv-platform/disallow-implicit-dependencies</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/669664dac1a46a4bb872089e1a90e4ad5dc232a6\"><code>669664d</code></a> Merge branch 'tool-config-auto-update' into disallow-implicit-dependencies</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/9cbf792a3cbbd9c37749da21d3b171b927451bb0\"><code>9cbf792</code></a> Update configuration files</li>\n<li>Additional commits viewable in <a href=\"https://github.com/actions/setup-python/compare/d27e3f3d7c64b4bbf8e4abfb9b63b83e846e0435...61a6322f88396a6271a6ee3565807d608ecaddd1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/setup-python&package-manager=github_actions&previous-version=4.5.0&new-version=4.7.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-29T14:08:49Z",
        "closed_at": "2023-09-11T12:22:14Z",
        "merged_at": null,
        "body": "Bumps [actions/cache](https://github.com/actions/cache) from 3.2.4 to 3.3.1.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/actions/cache/releases\">actions/cache's releases</a>.</em></p>\n<blockquote>\n<h2>v3.3.1</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Reduced download segment size to 128 MB and timeout to 10 minutes by <a href=\"https://github.com/kotewar\"><code>@\u200bkotewar</code></a> in <a href=\"https://redirect.github.com/actions/cache/pull/1129\">actions/cache#1129</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/cache/compare/v3...v3.3.1\">https://github.com/actions/cache/compare/v3...v3.3.1</a></p>\n<h2>v3.3.0</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Bug: Permission is missing in cache delete example by <a href=\"https://github.com/kotokaze\"><code>@\u200bkotokaze</code></a> in <a href=\"https://redirect.github.com/actions/cache/pull/1123\">actions/cache#1123</a></li>\n<li>Add <code>lookup-only</code> option by <a href=\"https://github.com/cdce8p\"><code>@\u200bcdce8p</code></a> in <a href=\"https://redirect.github.com/actions/cache/pull/1041\">actions/cache#1041</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/kotokaze\"><code>@\u200bkotokaze</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/cache/pull/1123\">actions/cache#1123</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/cache/compare/v3...v3.3.0\">https://github.com/actions/cache/compare/v3...v3.3.0</a></p>\n<h2>v3.2.6</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Updated branch in Force deletion of caches by <a href=\"https://github.com/t-dedah\"><code>@\u200bt-dedah</code></a> in <a href=\"https://redirect.github.com/actions/cache/pull/1108\">actions/cache#1108</a></li>\n<li>Fix zstd not being used after zstd version upgrade to 1.5.4 on hosted runners by <a href=\"https://github.com/pdotl\"><code>@\u200bpdotl</code></a> in <a href=\"https://redirect.github.com/actions/cache/pull/1118\">actions/cache#1118</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/cache/compare/v3...v3.2.6\">https://github.com/actions/cache/compare/v3...v3.2.6</a></p>\n<h2>v3.2.5</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Rewrite readmes by <a href=\"https://github.com/jsoref\"><code>@\u200bjsoref</code></a> in <a href=\"https://redirect.github.com/actions/cache/pull/1085\">actions/cache#1085</a></li>\n<li>Fixed typos and formatting in docs by <a href=\"https://github.com/kotewar\"><code>@\u200bkotewar</code></a> in <a href=\"https://redirect.github.com/actions/cache/pull/1076\">actions/cache#1076</a></li>\n<li>Fixing paths for OSes by <a href=\"https://github.com/kotewar\"><code>@\u200bkotewar</code></a> in <a href=\"https://redirect.github.com/actions/cache/pull/1101\">actions/cache#1101</a></li>\n<li>Release patch version update by <a href=\"https://github.com/Phantsure\"><code>@\u200bPhantsure</code></a> in <a href=\"https://redirect.github.com/actions/cache/pull/1105\">actions/cache#1105</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/jsoref\"><code>@\u200bjsoref</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/cache/pull/1085\">actions/cache#1085</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/cache/compare/v3...v3.2.5\">https://github.com/actions/cache/compare/v3...v3.2.5</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/actions/cache/blob/main/RELEASES.md\">actions/cache's changelog</a>.</em></p>\n<blockquote>\n<h1>Releases</h1>\n<h3>3.0.0</h3>\n<ul>\n<li>Updated minimum runner version support from node 12 -&gt; node 16</li>\n</ul>\n<h3>3.0.1</h3>\n<ul>\n<li>Added support for caching from GHES 3.5.</li>\n<li>Fixed download issue for files &gt; 2GB during restore.</li>\n</ul>\n<h3>3.0.2</h3>\n<ul>\n<li>Added support for dynamic cache size cap on GHES.</li>\n</ul>\n<h3>3.0.3</h3>\n<ul>\n<li>Fixed avoiding empty cache save when no files are available for caching. (<a href=\"https://redirect.github.com/actions/cache/issues/624\">issue</a>)</li>\n</ul>\n<h3>3.0.4</h3>\n<ul>\n<li>Fixed tar creation error while trying to create tar with path as <code>~/</code> home folder on <code>ubuntu-latest</code>. (<a href=\"https://redirect.github.com/actions/cache/issues/689\">issue</a>)</li>\n</ul>\n<h3>3.0.5</h3>\n<ul>\n<li>Removed error handling by consuming actions/cache 3.0 toolkit, Now cache server error handling will be done by toolkit. (<a href=\"https://redirect.github.com/actions/cache/pull/834\">PR</a>)</li>\n</ul>\n<h3>3.0.6</h3>\n<ul>\n<li>Fixed <a href=\"https://redirect.github.com/actions/cache/issues/809\">#809</a> - zstd -d: no such file or directory error</li>\n<li>Fixed <a href=\"https://redirect.github.com/actions/cache/issues/833\">#833</a> - cache doesn't work with github workspace directory</li>\n</ul>\n<h3>3.0.7</h3>\n<ul>\n<li>Fixed <a href=\"https://redirect.github.com/actions/cache/issues/810\">#810</a> - download stuck issue. A new timeout is introduced in the download process to abort the download if it gets stuck and doesn't finish within an hour.</li>\n</ul>\n<h3>3.0.8</h3>\n<ul>\n<li>Fix zstd not working for windows on gnu tar in issues <a href=\"https://redirect.github.com/actions/cache/issues/888\">#888</a> and <a href=\"https://redirect.github.com/actions/cache/issues/891\">#891</a>.</li>\n<li>Allowing users to provide a custom timeout as input for aborting download of a cache segment using an environment variable <code>SEGMENT_DOWNLOAD_TIMEOUT_MINS</code>. Default is 60 minutes.</li>\n</ul>\n<h3>3.0.9</h3>\n<ul>\n<li>Enhanced the warning message for cache unavailablity in case of GHES.</li>\n</ul>\n<h3>3.0.10</h3>\n<ul>\n<li>Fix a bug with sorting inputs.</li>\n<li>Update definition for restore-keys in README.md</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/actions/cache/commit/88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8\"><code>88522ab</code></a> Reduced download segment size to 128 MB and timeout to 10 minutes (<a href=\"https://redirect.github.com/actions/cache/issues/1129\">#1129</a>)</li>\n<li><a href=\"https://github.com/actions/cache/commit/940f3d7cf195ba83374c77632d1e2cbb2f24ae68\"><code>940f3d7</code></a> Add <code>lookup-only</code> option (<a href=\"https://redirect.github.com/actions/cache/issues/1041\">#1041</a>)</li>\n<li><a href=\"https://github.com/actions/cache/commit/e0d62270e20d6eeecf2fd6397a1b8871b6269e38\"><code>e0d6227</code></a> docs: Add missing permission in cache delete example (<a href=\"https://redirect.github.com/actions/cache/issues/1123\">#1123</a>)</li>\n<li><a href=\"https://github.com/actions/cache/commit/69d9d449aced6a2ede0bc19182fadc3a0a42d2b0\"><code>69d9d44</code></a> Merge pull request <a href=\"https://redirect.github.com/actions/cache/issues/1118\">#1118</a> from actions/pdotl/zstd-hotfix</li>\n<li><a href=\"https://github.com/actions/cache/commit/8d3a1e02aa504540dff5000c782b8263e3b411fb\"><code>8d3a1e0</code></a> Fix license</li>\n<li><a href=\"https://github.com/actions/cache/commit/b1db4b48979ec1f6d6142513d9448c4288d05ec4\"><code>b1db4b4</code></a> Fix zstd breaking after new version release</li>\n<li><a href=\"https://github.com/actions/cache/commit/7d4d6f7ffd301005e7fac90369bb90ae1d547974\"><code>7d4d6f7</code></a> Update package-lock.json</li>\n<li><a href=\"https://github.com/actions/cache/commit/8f7fa5d715f6773b40e9fbf9cb77bcb5d914d0dc\"><code>8f7fa5d</code></a> Bump <code>@\u200bactions/cache</code> version</li>\n<li><a href=\"https://github.com/actions/cache/commit/95b455a0fba5a5e1770cc10ded51e5fe99a6737b\"><code>95b455a</code></a> 3.2.6</li>\n<li><a href=\"https://github.com/actions/cache/commit/81b728193625a15a55fcce4c6eb6187358533785\"><code>81b7281</code></a> Updated branch in Force deletion of caches (<a href=\"https://redirect.github.com/actions/cache/issues/1108\">#1108</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/actions/cache/compare/627f0f41f6904a5b1efbaed9f96d9eb58e92e920...88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=3.2.4&new-version=3.3.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 318,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-08-29T13:58:27Z",
        "closed_at": "2023-09-05T10:02:31Z",
        "merged_at": null,
        "body": "Adds \"Protobuf Editions Design: Features\" to the GitHub code repository.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-08-29T13:20:57Z",
        "closed_at": "2023-08-29T15:58:58Z",
        "merged_at": null,
        "body": "Migrate Automatic Exec Groups by adding a toolchain parameter to the affected actions\n\nThis is a step forward for the full migration of Automatic Exec Groups (AEGs). This change will be effective once AEGs are enabled.\n\nIn this CL I've added a toolchain_type to `toolchain` attribute of ctx.actions.{run, run_shell} since the Execution platform is selected on a toolchain type level, not on a rule level like before AEGs.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 60,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-08-29T13:12:48Z",
        "closed_at": "2023-08-30T08:43:43Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 30,
        "deletions": 14,
        "changed_files": 2,
        "created_at": "2023-08-29T06:33:11Z",
        "closed_at": "2023-08-29T17:55:52Z",
        "merged_at": null,
        "body": "Make upb python FieldDescriptor able to access the constant cpp type attributes\n\nTo match the same behavior with pure python and cpp extension\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2065,
        "deletions": 1174,
        "changed_files": 22,
        "created_at": "2023-08-29T02:17:29Z",
        "closed_at": "2023-09-05T10:02:34Z",
        "merged_at": null,
        "body": "Editions: Migrate edition strings to an enum\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 49,
        "deletions": 17,
        "changed_files": 5,
        "created_at": "2023-08-29T00:45:19Z",
        "closed_at": "2023-09-05T10:02:36Z",
        "merged_at": null,
        "body": "Change upb python to keep the meta class ref on message descriptor\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 14,
        "deletions": 6,
        "changed_files": 3,
        "created_at": "2023-08-28T23:55:57Z",
        "closed_at": "2023-08-29T01:30:09Z",
        "merged_at": null,
        "body": "upb: fix a Python memory leak in ByteSize()\n\nhttps://github.com/protocolbuffers/upb/issues/1243\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-08-28T23:46:14Z",
        "closed_at": "2023-08-29T16:46:52Z",
        "merged_at": null,
        "body": "Add test ensuring that rust keywords can be message names\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 14,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-08-28T21:09:24Z",
        "closed_at": "2023-08-29T14:58:01Z",
        "merged_at": null,
        "body": "Fix read of uninitialized data on invalid input in the first token.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-08-28T19:24:18Z",
        "closed_at": "2023-09-01T17:48:44Z",
        "merged_at": null,
        "body": "Editions: Introduce an Edition enum and setup migration from strings\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-08-28T18:47:09Z",
        "closed_at": "2023-08-29T17:50:55Z",
        "merged_at": null,
        "body": "fix python code generation compatibility with Cython\n\nraised by https://github.com/protocolbuffers/protobuf/pull/13593\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-08-28T17:55:15Z",
        "closed_at": "2023-08-28T19:58:31Z",
        "merged_at": null,
        "body": "Register required arena dtor in arena enabled constructor\n\nThis change fixes the ctor where for types with a required arena dtor, the dtor was not register in the ctor.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-08-28T17:12:31Z",
        "closed_at": "2023-08-29T16:04:06Z",
        "merged_at": null,
        "body": "Expunge Copy and Clone from MsgMut\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-28T15:47:46Z",
        "closed_at": "2023-08-28T17:05:39Z",
        "merged_at": null,
        "body": "Remove extra semicolon\n\nFixes https://github.com/protocolbuffers/protobuf/issues/13616\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-28T14:59:43Z",
        "closed_at": "2023-09-02T03:32:38Z",
        "merged_at": null,
        "body": "https://github.com/tanmaykm/ProtoBuf.jl now redirects to the JuliaIO organisation.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-28T14:20:20Z",
        "closed_at": "2023-08-29T13:05:46Z",
        "merged_at": null,
        "body": "Update stale file regeneration to handle upb's CMakeLists.txt\n\nThe auto-updating of upb's CMakeLists.txt file broke with the upb merge but\nwill be fixed by this change.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 261,
        "deletions": 14,
        "changed_files": 10,
        "created_at": "2023-08-28T09:41:25Z",
        "closed_at": "2023-09-06T09:53:10Z",
        "merged_at": null,
        "body": "Implement mutators for singular primitive fields without presence\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 69,
        "deletions": 69,
        "changed_files": 3,
        "created_at": "2023-08-28T00:02:42Z",
        "closed_at": "2023-09-04T10:01:58Z",
        "merged_at": null,
        "body": "Remove not needed cast operations\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 14,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2023-08-26T14:54:53Z",
        "closed_at": "2023-08-28T12:35:54Z",
        "merged_at": null,
        "body": "Apply patch from upb repo to test_util.py\n\nUpb has been carrying a\n[patch](https://github.com/protocolbuffers/upb/blob/57636ce03ac1e2aab3a362a61a6664981e21cda5/bazel/protobuf.patch)\nto this file, so let's upstream it so that we can delete the patch file.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 47,
        "changed_files": 3,
        "created_at": "2023-08-26T14:37:49Z",
        "closed_at": "2023-08-28T17:50:33Z",
        "merged_at": null,
        "body": "Update protobuf and upb pinned Bazel versions\n\nThese cross dependencies will be going away soon when we merge protobuf and upb\ninto a single Bazel repo, but I thought it would be good to update these just\nin case we need to do a release before that merge happens.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-08-26T00:45:43Z",
        "closed_at": "2023-09-04T10:02:01Z",
        "merged_at": null,
        "body": "Add java_proto_library for cpp features\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 40,
        "deletions": 18,
        "changed_files": 7,
        "created_at": "2023-08-25T23:25:24Z",
        "closed_at": "2023-08-30T23:24:05Z",
        "merged_at": null,
        "body": "Create a reflection helper for ExtensionIdentifier.\n\nThis will allow easy access to the FieldDescriptor of a generated extension.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-25T20:10:12Z",
        "closed_at": "2023-08-25T21:43:19Z",
        "merged_at": null,
        "body": "Update upb GCC test run to use upb's workspace\n\nCurrently all our upb CI coverage is running from within the protobuf workspace\nand referring to upb as the external repo `@upb`. This change makes the GCC\ntest run cd into upb and use its workspace instead, just to make sure that\nbuilds in the upb workspace have some coverage.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-08-25T19:52:29Z",
        "closed_at": "2023-08-25T21:12:08Z",
        "merged_at": null,
        "body": "Make upb's `WORKSPACE` point to local protobuf in the same Git repo\n\nWe plan to unify protobuf and upb into a single Bazel repo, but for now they\nare separate repos as far as Bazel is concerned. This change will make upb's\nworkspace depend on the local copy of protobuf so that protobuf changes take\neffect immediately for builds inside upb's workspace. This also mimicks the way\nthat the protobuf workspace depends on upb.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-08-25T19:33:26Z",
        "closed_at": "2023-08-25T21:38:25Z",
        "merged_at": null,
        "body": "Internal change.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-08-25T16:49:58Z",
        "closed_at": "2023-08-25T18:09:06Z",
        "merged_at": null,
        "body": "Update upb README.md to point to the new location on GitHub\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 83156,
        "deletions": 0,
        "changed_files": 420,
        "created_at": "2023-08-25T15:46:43Z",
        "closed_at": "2023-08-25T18:52:27Z",
        "merged_at": null,
        "body": "Test change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 23,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-25T15:41:08Z",
        "closed_at": "2023-08-25T17:09:41Z",
        "merged_at": null,
        "body": "Add a script for cleaning up stale copybara PRs\n\nThis was tested locally over a smaller set of PRs, resulting in:\nhttps://github.com/protocolbuffers/protobuf/pull/13557\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 91759,
        "deletions": 0,
        "changed_files": 426,
        "created_at": "2023-08-25T13:27:30Z",
        "closed_at": "2023-08-25T15:20:12Z",
        "merged_at": "2023-08-25T15:20:12Z",
        "body": "This merges the contents of the upb repo into a new upb/ subdirectory and preserves the full commit history. All upb development will happen here going forward.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-08-25T11:29:58Z",
        "closed_at": "2023-08-28T15:40:01Z",
        "merged_at": null,
        "body": "Use virtual destructor for Protobuf Messages.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2023-08-24T23:47:47Z",
        "closed_at": "2023-08-27T23:42:29Z",
        "merged_at": null,
        "body": "Emit __slots__ in pyi output as a tuple rather than a list for --pyi_out.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-24T23:33:38Z",
        "closed_at": "2023-08-28T16:41:03Z",
        "merged_at": null,
        "body": "Add TODO for debug print redaction\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 417,
        "deletions": 46,
        "changed_files": 16,
        "created_at": "2023-08-24T23:15:20Z",
        "closed_at": "2023-08-30T21:16:48Z",
        "merged_at": null,
        "body": "Editions: Provide an API for C++ generators to specify their features.\n\nThis works for both built-in generators and plugins written in C++.  Any feature extensions specified by this virtual method will end up fully resolved in the descriptors.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 23,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-24T23:08:17Z",
        "closed_at": "2023-08-25T17:21:43Z",
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 54,
        "deletions": 92,
        "changed_files": 10,
        "created_at": "2023-08-24T21:59:27Z",
        "closed_at": "2023-08-28T15:53:48Z",
        "merged_at": null,
        "body": "Remove Opaque Ptr macro: define_opaque_nonnulls\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 350,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-08-24T21:50:32Z",
        "closed_at": "2023-08-25T20:27:38Z",
        "merged_at": null,
        "body": "Creates a directory, a README, and a design doc for Editions.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 91756,
        "deletions": 0,
        "changed_files": 426,
        "created_at": "2023-08-24T21:16:06Z",
        "closed_at": "2023-08-25T13:26:27Z",
        "merged_at": null,
        "body": "This pull request will merge upb into the protobuf repo and put it in the new upb/ directory. The full commit history will be preserved, and all upb development will happen here going forward.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 57,
        "deletions": 19,
        "changed_files": 4,
        "created_at": "2023-08-24T21:12:17Z",
        "closed_at": "2023-09-07T10:01:58Z",
        "merged_at": null,
        "body": "Add `ABSL_ATTRIBUTE_LIFETIME_BOUND` attribute on generated repeated and map field accessors.\nThis allows the compiler to statically detect use-after-free bugs.\n\nThis change touches a subset of field types. More changes to follow.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 541,
        "deletions": 38,
        "changed_files": 11,
        "created_at": "2023-08-24T19:29:25Z",
        "closed_at": "2023-08-30T19:58:04Z",
        "merged_at": null,
        "body": "Implement v0.6 string fields\n\nThis is predominantly a wrapper around `BytesMut`, for simplicity.\nBytes and string fields are mostly the same, except for possible UTF-8 handling.\n\nThis also implements some minor parts of `ProtoStr` that were missed.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-08-24T19:24:00Z",
        "closed_at": "2023-08-28T10:25:57Z",
        "merged_at": null,
        "body": "Add explanation of mutator invariants\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 19,
        "deletions": 28,
        "changed_files": 1,
        "created_at": "2023-08-24T19:21:35Z",
        "closed_at": "2023-08-28T21:04:21Z",
        "merged_at": null,
        "body": "Move shared protobuf runtime files to a list\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 114,
        "deletions": 64,
        "changed_files": 5,
        "created_at": "2023-08-24T19:20:29Z",
        "closed_at": "2023-08-24T20:41:09Z",
        "merged_at": null,
        "body": "Move common macros to a shared location\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 25,
        "deletions": 12,
        "changed_files": 3,
        "created_at": "2023-08-24T18:57:10Z",
        "closed_at": "2023-08-24T20:51:24Z",
        "merged_at": null,
        "body": "Internal change.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-08-24T18:06:14Z",
        "closed_at": "2023-08-25T15:47:50Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2212,
        "deletions": 2189,
        "changed_files": 7,
        "created_at": "2023-08-24T17:12:22Z",
        "closed_at": "2023-08-31T10:02:15Z",
        "merged_at": null,
        "body": "Enable explicit constructors for internal implementation classes.\n\nThis changes the code to use explicit constructors instead of aggregate initialization, allow for optimizations when creating and copying messages. One of such optimizations is coalescing initializing and copying adjacent trivial members, which can not be mixed with aggregate initialization.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 21,
        "deletions": 26,
        "changed_files": 1,
        "created_at": "2023-08-24T15:05:38Z",
        "closed_at": "2023-08-28T14:29:36Z",
        "merged_at": null,
        "body": "Remove redundant check.\n\nThis branch is only for `!using_sso()`. That means that:\n\n - `old_tagged_ptr` has low bit is set to 1\n - `old_tagged_ptr` points to allocated `Rep` structure\n\nBoth facts suggest that `old_tagged_ptr` cannot be equal to nullptr.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 167,
        "deletions": 180,
        "changed_files": 2,
        "created_at": "2023-08-24T11:14:20Z",
        "closed_at": "2023-08-31T17:23:01Z",
        "merged_at": null,
        "body": "LET ME RUN PRESUBMIT!!!\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-24T05:21:05Z",
        "closed_at": "2023-09-01T10:02:13Z",
        "merged_at": null,
        "body": "upb CopyFrom the default empty message should just clear instead of deep copy\nfrom memory\n\nfix https://github.com/protocolbuffers/protobuf/issues/13485\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-08-24T00:17:24Z",
        "closed_at": "2023-08-24T18:26:22Z",
        "merged_at": null,
        "body": "Internal change.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-08-24T00:01:17Z",
        "closed_at": "2023-09-01T10:02:15Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 86,
        "deletions": 97,
        "changed_files": 5,
        "created_at": "2023-08-23T21:25:18Z",
        "closed_at": "2023-08-28T17:01:00Z",
        "merged_at": null,
        "body": "Fix a bug that strips options from descriptor.proto in Pure Python.\n\nGetOptions on fields (which parse the _serialized_options) will be called for the first time of parse or serialize instead of Build time.\n\nNote: GetOptions on messages are still called in Build time because of message_set_wire_format. If message options are needed in descriptor.proto, a parse error will be raised in GetOptions(). We can check the file to not invoke GetOptions() for descriptor.proto as long as message_set_wire_format not needed in descriptor.proto. \n\nOther options except message options do not invoke GetOptions() in Build time\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 24,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-23T19:52:45Z",
        "closed_at": "2023-09-01T10:02:17Z",
        "merged_at": null,
        "body": "Add CI run for building and testing upb Python wheels\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 21,
        "deletions": 43,
        "changed_files": 4,
        "created_at": "2023-08-23T19:51:10Z",
        "closed_at": "2023-08-23T22:27:18Z",
        "merged_at": "2023-08-23T22:27:18Z",
        "body": "This handles a known alignment bug in MSVC and adds tests to cover the environment",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 13,
        "changed_files": 2,
        "created_at": "2023-08-23T18:53:08Z",
        "closed_at": "2023-08-30T10:02:17Z",
        "merged_at": null,
        "body": "Fixes for 32-bit MSVC.\n\nDisable the alignment check in 32-bit msvc.\nThis toolchain has a difference between \"natural\" and \"required\" alignment of\ntypes and it can have the alignment of members of type `T` to be smaller than\n`alignof(T)`.\n\nAlso, disable AnyTest.TestPackFromSerializationExceedsSizeLimit there because it can't allocate that much memory.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 13,
        "changed_files": 2,
        "created_at": "2023-08-23T18:53:01Z",
        "closed_at": "2023-08-30T10:02:19Z",
        "merged_at": null,
        "body": "Fixes for 32-bit MSVC.\n\nDisable the alignment check in 32-bit msvc.\nThis toolchain has a difference between \"natural\" and \"required\" alignment of\ntypes and it can have the alignment of members of type `T` to be smaller than\n`alignof(T)`.\n\nAlso, disable AnyTest.TestPackFromSerializationExceedsSizeLimit there because it can't allocate that much memory.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 13,
        "changed_files": 2,
        "created_at": "2023-08-23T18:49:41Z",
        "closed_at": "2023-08-30T10:02:21Z",
        "merged_at": null,
        "body": "Fixes for 32-bit MSVC.\n\nDisable the alignment check in 32-bit msvc.\nThis toolchain has a difference between \"natural\" and \"required\" alignment of\ntypes and it can have the alignment of members of type `T` to be smaller than\n`alignof(T)`.\n\nAlso, disable AnyTest.TestPackFromSerializationExceedsSizeLimit there because it can't allocate that much memory.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 9,
        "changed_files": 1,
        "created_at": "2023-08-23T18:18:16Z",
        "closed_at": "2023-08-24T19:54:54Z",
        "merged_at": null,
        "body": "Reduce the cost of the synthetic TSan races.\n\nOn the read side avoid writing to memory via volatile. The volatile access will generate its own tsan checks because it is touching memory.\nOn the write side also avoid the volatile access by unconditionally writing to the memory. The address used for the tsan validation is dedicated for it so it doesn't matter if we write arbitrary values to it.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-08-23T18:13:23Z",
        "closed_at": "2023-08-24T11:41:33Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-08-23T17:04:52Z",
        "closed_at": "2023-08-24T19:26:49Z",
        "merged_at": null,
        "body": "Add `ABSL_ATTRIBUTE_LIFETIME_BOUND` attribute on generated string field accessors.\nThis allows the compiler to statically detect use-after-free bugs.\n\nThis change touches a subset of field types. More changes to follow.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 97,
        "deletions": 102,
        "changed_files": 5,
        "created_at": "2023-08-23T15:50:16Z",
        "closed_at": "2023-09-06T10:02:26Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-08-23T15:44:57Z",
        "closed_at": "2023-08-23T18:58:04Z",
        "merged_at": null,
        "body": "Fixes for 32-bit MSVC.\n\nDisable the alignment check in 32-bit msvc.\nThis toolchain has a difference between \"natural\" and \"required\" alignment of\ntypes and it can have the alignment of members of type `T` to be smaller than\n`alignof(T)`.\n\nAlso, disable AnyTest.TestPackFromSerializationExceedsSizeLimit there because it can't allocate that much memory.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 15,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-08-23T13:32:27Z",
        "closed_at": "2023-08-24T15:38:45Z",
        "merged_at": null,
        "body": "Add proto services to Java generated descriptor pool.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2023-08-22T23:43:05Z",
        "closed_at": "2023-08-23T16:58:17Z",
        "merged_at": null,
        "body": "Internal change.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 14,
        "deletions": 14,
        "changed_files": 14,
        "created_at": "2023-08-22T22:49:16Z",
        "closed_at": "2023-08-23T00:10:27Z",
        "merged_at": null,
        "body": "Internal change.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 166,
        "deletions": 122,
        "changed_files": 6,
        "created_at": "2023-08-22T19:54:18Z",
        "closed_at": "2023-08-23T19:20:26Z",
        "merged_at": null,
        "body": "Add upb \"No System Python\" test run\n\nThis test validates that upb Python targets can be built successfully even if\nPython is not installed locally.\n\nI also updated our pinned upb version to pull in some recent fixes needed for\nthis test run.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 28,
        "deletions": 10,
        "changed_files": 2,
        "created_at": "2023-08-22T19:22:50Z",
        "closed_at": "2023-08-29T10:02:13Z",
        "merged_at": null,
        "body": "Do not take references to 8-byte objects via `uint64_t&`.\n`uint64_t` and `double` do not have the same alignment on all platforms.\nInstead, use memcpy to write to these locations which does not care about\nalignment.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 37,
        "deletions": 39,
        "changed_files": 4,
        "created_at": "2023-08-22T18:14:48Z",
        "closed_at": "2023-08-29T10:02:15Z",
        "merged_at": null,
        "body": "Do not take references to 8-byte objects via `uint64_t&`.\n`uint64_t` and `double` do not have the same alignment on all platforms.\nInstead, use memcpy to write to these locations which does not care about\nalignment.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 23,
        "deletions": 11,
        "changed_files": 2,
        "created_at": "2023-08-22T17:50:05Z",
        "closed_at": "2023-08-23T15:15:47Z",
        "merged_at": null,
        "body": "Do not take references to 8-byte objects via `uint64_t&`.\n`uint64_t` and `double` do not have the same alignment on all platforms.\nInstead, use memcpy to write to these locations which does not care about\nalignment.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 14,
        "deletions": 10,
        "changed_files": 1,
        "created_at": "2023-08-22T17:20:42Z",
        "closed_at": "2023-08-22T19:37:30Z",
        "merged_at": null,
        "body": "Add windows 32-bit tests and re-enable 2022\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-08-22T17:15:16Z",
        "closed_at": "2023-08-29T10:02:17Z",
        "merged_at": null,
        "body": "Update utf8_range to the latest version (#13469)\n\nPicks up an OSS build fix for unused function CodepointSkipBackwards: https://github.com/protocolbuffers/utf8_range/commit/d863bc33e15cba6d873c878dcca9e6fe52b2f8cb\n\nCloses #13469\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/13469 from martijneken:utf8-range-bump f52ea9d7dd5950539d8e913cf0b938d4506563d6\nFUTURE_COPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/13469 from martijneken:utf8-range-bump f52ea9d7dd5950539d8e913cf0b938d4506563d6\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 460,
        "deletions": 40,
        "changed_files": 9,
        "created_at": "2023-08-22T15:57:45Z",
        "closed_at": "2023-08-25T13:15:12Z",
        "merged_at": null,
        "body": "Implement initial oneof support in Rust pb.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 58,
        "deletions": 71,
        "changed_files": 1,
        "created_at": "2023-08-22T11:41:16Z",
        "closed_at": "2023-08-24T14:56:40Z",
        "merged_at": null,
        "body": "Reduced TypeHandler boilerplate.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 101,
        "deletions": 97,
        "changed_files": 1,
        "created_at": "2023-08-22T08:32:56Z",
        "closed_at": "2023-08-24T11:52:22Z",
        "merged_at": null,
        "body": "Re-arranged names in RepeatedPtrField to align with the declaration order in the style guide.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 80,
        "deletions": 94,
        "changed_files": 64,
        "created_at": "2023-08-22T06:16:00Z",
        "closed_at": "2023-08-22T15:05:23Z",
        "merged_at": null,
        "body": "Internal change.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-08-22T02:54:13Z",
        "closed_at": "2023-08-24T02:45:17Z",
        "merged_at": null,
        "body": "Editions: Refactor feature resolution to use an intermediate message.\n\nThis places all of the tricky reflection logic of feature resolution into a single location that outputs a portable protobuf message.  With this message, feature resolution becomes drastically simpler and easy to reimplement in other languages.\n\nFollow-up changes will provide:\n- An API to specify generator features from the CodeGenerator class for C++ plugins\n- A CLI for building these default mappings\n- Bazel/CMake rules to help embed these mappings in target languages (i.e. for runtimes and non-C++ plugins)\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 73,
        "deletions": 77,
        "changed_files": 47,
        "created_at": "2023-08-22T01:04:07Z",
        "closed_at": "2023-08-22T14:46:01Z",
        "merged_at": null,
        "body": "Internal change.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 10,
        "changed_files": 2,
        "created_at": "2023-08-21T20:29:37Z",
        "closed_at": "2023-08-24T13:48:14Z",
        "merged_at": null,
        "body": "[ObjC] Flip the default for two generation options.\n\n- `generate_minimal_imports` is now `yes`, this reduces the imports generated\ninto the generated source.\n\n- `headers_use_forward_declarations` is now `no`; this causes the generated\n.pbobj.h files to directly import all the headers needed to define types used by\nthis types defined in the file. This provides better compatibility for Swift\ninterop especially when the ObjC protos are used in multiple libraries as\nforward declarations can cause issues for importing into Swift.\n\nIf you need to override either options, please open an issue on github to report\nthe reason. A future release of the library will remove these options locking in\nthe new behaviors.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 33,
        "deletions": 37,
        "changed_files": 2,
        "created_at": "2023-08-21T20:04:26Z",
        "closed_at": "2023-08-22T18:03:10Z",
        "merged_at": null,
        "body": "[ObjC] Skip MessageGenerator for the map entry Descriptors.\n\nMeans all the generation calls don't have to also repeat this check.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2126,
        "deletions": 107,
        "changed_files": 8,
        "created_at": "2023-08-21T19:46:33Z",
        "closed_at": "2023-08-23T00:40:22Z",
        "merged_at": null,
        "body": "Editions: Add FeatureSetDefaults type for communicating default feature set data.\n\nThis will be used to seed feature resolution, which becomes just an edition lookup followed by proto merges.  Runtime and generators that need to resolve their own features will be able to leverage this to avoid reimplementing all of the reflective logic that goes into the default calculation.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 189,
        "deletions": 188,
        "changed_files": 3,
        "created_at": "2023-08-21T19:24:28Z",
        "closed_at": "2023-08-29T10:02:20Z",
        "merged_at": null,
        "body": "Make extension declaration verification field source retention.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 35,
        "deletions": 14,
        "changed_files": 4,
        "created_at": "2023-08-21T18:13:17Z",
        "closed_at": "2023-08-22T15:28:30Z",
        "merged_at": null,
        "body": "[ObjC] Enable generation of .proto files using editions.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 79,
        "deletions": 77,
        "changed_files": 1,
        "created_at": "2023-08-21T18:08:47Z",
        "closed_at": "2023-08-21T19:49:30Z",
        "merged_at": null,
        "body": "Re-arranged names in RepeatedField to align with the declaration order in the style guide.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 213,
        "deletions": 13,
        "changed_files": 17,
        "created_at": "2023-08-21T18:05:42Z",
        "closed_at": "2023-08-21T19:30:09Z",
        "merged_at": null,
        "body": "[ObjC] add \"generate_minimal_imports\" generation option\n\nThis new option will cause only the files that provide types to\nbe imported into the generated code. This helps reduce the inputs\nthat aren't needed (folks ignoring the protoc warnings) and for\nthings imported only for custom options as the objc generated code\ndoesn't capture those and thus the imports aren't needed in the\ngenerated code.\n\nAlso do some general import cleanups.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 6,
        "changed_files": 5,
        "created_at": "2023-08-21T17:01:06Z",
        "closed_at": "2023-08-29T10:02:22Z",
        "merged_at": null,
        "body": "Add restrict on unsafe swap methods.\n\nThese have preconditions around not self-swapping, so restrict is safe here.\nComparison of generated code for methods used by message_unittest,\nvectorization improves.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 9,
        "changed_files": 2,
        "created_at": "2023-08-21T15:50:36Z",
        "closed_at": "2023-08-29T10:02:24Z",
        "merged_at": null,
        "body": "Remove unused specialization.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3038,
        "deletions": 2103,
        "changed_files": 20,
        "created_at": "2023-08-21T14:41:36Z",
        "closed_at": "2023-08-27T16:13:30Z",
        "merged_at": null,
        "body": "[EXPERIMENTAL ENABLED] Add arena enabled copy construction.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-21T12:34:11Z",
        "closed_at": "2023-08-29T10:02:26Z",
        "merged_at": null,
        "body": "Test\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 102,
        "deletions": 111,
        "changed_files": 5,
        "created_at": "2023-08-21T05:41:04Z",
        "closed_at": "2023-08-29T10:02:29Z",
        "merged_at": null,
        "body": "Claim ThreadSafeArena::first_arena_ lazily\n\nIn some RPC scenarios Arena may be created on another thread\nthen the one that actually uses the Arena for response parsing.\nAs the result we don't use the first serial arena and need\nto create additional blocks and serial arenas.\nClaim the first serial arena lazily on the first allocation.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 95,
        "deletions": 106,
        "changed_files": 5,
        "created_at": "2023-08-21T05:36:14Z",
        "closed_at": "2023-08-29T10:02:31Z",
        "merged_at": null,
        "body": "Unalign ThreadSafeArena::ThreadCache\n\nThreadSafeArena::ThreadCache does not need to be aligned.\nIf anything, the alignment increases TLS and working set size.\nUnalign it.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 67,
        "deletions": 68,
        "changed_files": 5,
        "created_at": "2023-08-21T05:32:28Z",
        "closed_at": "2023-08-29T10:02:33Z",
        "merged_at": null,
        "body": "Make SerialArena::ptr_ to be always non-nullptr\n\nCurrnetly ptr_ is nullptr when sentry block is used.\nIt makes it impossible to do speculative additions to ptr_\n(ptr_ + size) before doing limit_ check (UBSan reports\naddition to nullptr). Such additions may be useful to optimize\nsome of the allocation functions and prefetching.\nSo make ptr_ to always be non-nullptr to prevent UBSan-reported UB.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 62,
        "deletions": 64,
        "changed_files": 5,
        "created_at": "2023-08-21T05:28:12Z",
        "closed_at": "2023-08-29T10:02:35Z",
        "merged_at": null,
        "body": "Fix arenaz wasted space reporting\n\nCurrently wasted space includes ArenaBlock header (24 bytes),\nand never can be 0 even if blocks are used optimally.\nReport 0 wasted space if blocks are used optimally.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 20,
        "changed_files": 1,
        "created_at": "2023-08-19T00:00:50Z",
        "closed_at": "2023-08-21T18:14:44Z",
        "merged_at": null,
        "body": "Remove a flaky test with very high memory requirements.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 760,
        "deletions": 112,
        "changed_files": 17,
        "created_at": "2023-08-18T21:20:27Z",
        "closed_at": "2023-08-26T10:01:48Z",
        "merged_at": null,
        "body": "[EXPERIMENTAL] Extend MessageLite::New() with a `NewOp op` argument to allow direct copies\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 61,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2023-08-18T21:01:37Z",
        "closed_at": "2023-08-22T19:56:10Z",
        "merged_at": null,
        "body": "Add upb test runs\n\nThis change adds test runs for GCC, Windows, and Mac. The 32-bit ASAN test\nturned out to be somewhat difficult to migrate, so I left a TODO for that one.\n\nI made sure to give each build environment its own cache prefix, so that we\ndon't end up with artifacts built by different toolchains conflicting with each\nother in the same cache.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 625,
        "deletions": 608,
        "changed_files": 17,
        "created_at": "2023-08-18T20:59:18Z",
        "closed_at": "2023-08-18T22:22:40Z",
        "merged_at": null,
        "body": "Formatted the Protobuf PHP extension with clang-format, with clang-format comments added as necessary\n\nThis is a no-op change.  Since Copybara will automatically format PRs with ClangFormat, this can lead to spurious changes that make CLs harder to review, as in cl/549058046.  To avoid this, we format everything with clang-format in a single no-op change.\n\nThis CL also forces all pointer alignment to left pointers, for consistency (clang-format would normally deduce based on existing style in each file).\n\nAlso added `// clang-format off` comments in some places where PHP conventions lead to badly formatted code.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 52,
        "deletions": 52,
        "changed_files": 36,
        "created_at": "2023-08-18T19:43:16Z",
        "closed_at": "2023-08-18T21:01:11Z",
        "merged_at": "2023-08-18T21:01:11Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-08-18T18:08:59Z",
        "closed_at": "2023-08-22T16:31:16Z",
        "merged_at": null,
        "body": "Export the constants in protobuf's any.h to support DLL builds.\n\nThe issue is that if another component (MediaPipe in this case) calls PackFrom, there'll be linker errors because kTypeGoogleApisComPrefix wasn't found.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-18T17:48:51Z",
        "closed_at": "2023-08-21T17:12:18Z",
        "merged_at": null,
        "body": "Remove redundant option: profile_driven_split.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-08-18T17:48:45Z",
        "closed_at": "2023-08-23T16:34:47Z",
        "merged_at": null,
        "body": "Fix a bug that strips options from descriptor.proto in Python.\n\nThis fixes Python/C++ and upb, and pushes the buggy behavior to pure python.  There, it's very difficult to handle options on the bootstrapped proto with the current architecture.  Future changes will attempt to address this more isolated issue.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 78,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-08-18T17:37:47Z",
        "closed_at": "2023-08-21T18:54:35Z",
        "merged_at": null,
        "body": "Implement AbslStringify for the Descriptor family of types.\n\nImplementing this method allows descriptors to be used in contexts that support\nABSL's formatting, most notably gunit's PrintToString and absl's StrFormat. The\nimplementations are done on the concrete descriptor type, which appears to be more\nidiomatic for AbslStringify. Implementing them on pointers-to-descriptors would be\nnicer for users who typically interact with pointers, but that would conflict with\nAbslStringify's built-in support for pointers.\n\nThe implementation simply forwards to DebugString for simplicity.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 61,
        "deletions": 77,
        "changed_files": 4,
        "created_at": "2023-08-18T10:37:58Z",
        "closed_at": "2023-08-25T21:05:04Z",
        "merged_at": null,
        "body": "protobuf: mark unlikely branch as so\n\nDon't leave things to chance. We generally mark likely/unlikely\nbranches on hot paths as such.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-08-18T09:59:52Z",
        "closed_at": "2023-08-29T18:01:27Z",
        "merged_at": null,
        "body": "This is a follow-up to https://github.com/protocolbuffers/protobuf/pull/11011/\r\n\r\nThe generation is still not compatible with Cython when maps are used.\r\n\r\nFor example, this protobuf file:\r\n\r\n```proto\r\nsyntax = \"proto3\";\r\n\r\nmessage Foo {\r\n    map<string, string> bar = 1;\r\n}\r\n```\r\n\r\nWill generate:\r\n\r\n```py\r\n...\r\n_globals = globals()\r\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)\r\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'a_pb2', _globals)\r\nif _descriptor._USE_C_DESCRIPTORS == False:\r\n\r\n  DESCRIPTOR._options = None\r\n  _FOO_BARENTRY._options = None\r\n  _FOO_BARENTRY._serialized_options = b'8\\001'\r\n  _globals['_FOO']._serialized_start=11\r\n  _globals['_FOO']._serialized_end=88\r\n  _globals['_FOO_BARENTRY']._serialized_start=46\r\n  _globals['_FOO_BARENTRY']._serialized_end=88\r\n```\r\n\r\nThe `_FOO_BARENTRY` variable is not defined anywhere and confuses cython. We can see the `_globals` used below, it is simply missing for the first two lines using `_FOO_BARENTRY`.\r\n\r\nIf possible, i would love to have this fix in the next 24 release, instead of having to wait for the 25 release.",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 59,
        "deletions": 76,
        "changed_files": 4,
        "created_at": "2023-08-18T09:20:21Z",
        "closed_at": "2023-08-25T21:05:07Z",
        "merged_at": null,
        "body": "protobuf: remove double ptr_ load in arena allocation\n\nCurrently the generated code contains 2 loads of ptr_ b/c it's an atomic:\none in HasSize and one in AllocateFromExisting.\nCombine these to be a single load.\n\nname                           old cpu/op   new cpu/op   delta\nBM_ArenaAlloc/100              254ns \u00b1 3%   229ns \u00b1 5%  -9.91%  (p=0.000 n=54+48)\nBM_ArenaAllocWithCleanup/100   869ns \u00b1 1%   845ns \u00b1 1%  -2.70%  (p=0.000 n=59+57)\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 34,
        "deletions": 43,
        "changed_files": 4,
        "created_at": "2023-08-18T09:07:56Z",
        "closed_at": "2023-08-25T21:05:09Z",
        "merged_at": null,
        "body": "proto: remove debug logging from opt build\n\nThe debug logging call makes SerialArena::AllocateFromExistingWithCleanupFallback  function non-leaf and significantly worsens codegen (stack frame allocation + register spills). As the result it's also not inlined into ThreadSafeArena::AllocateAlignedWithCleanup.\n\nWith this change SerialArena::AllocateFromExistingWithCleanupFallback\nbecomes frame-less leaf function and is inlined into ThreadSafeArena::AllocateAlignedWithCleanup.\n\nCodegen before:\n\n00000000007b1820 <proto2::internal::ThreadSafeArena::AllocateAlignedWithCleanup(unsigned long, unsigned long, void (*)(void*))>:\n  7b1820:       48 c7 c0 40 fb ff ff    mov    $0xfffffffffffffb40,%rax\n  7b1827:       64 4c 8b 40 08          mov    %fs:0x8(%rax),%r8\n...\n  7b189f:       e9 5c eb ff ff          jmp    7b0400 <proto2::internal::SerialArena::AllocateFromExistingWithCleanupFallback(unsigned long, unsigned long, void (*)(void*))>\n  \n  00000000007b0400 <proto2::internal::SerialArena::AllocateFromExistingWithCleanupFallback(unsigned long, unsigned long, void (*)(void*))>:\n  7b0400:\t55                   \tpush   %rbp\n  7b0401:\t48 89 e5             \tmov    %rsp,%rbp\n  7b0404:\t41 56                \tpush   %r14\n  7b0406:\t53                   \tpush   %rbx\n  7b0407:\t48 83 ec 10          \tsub    $0x10,%rsp\n  ...\n  7b04c3:\t48 83 c4 10          \tadd    $0x10,%rsp\n  7b04c7:\t5b                   \tpop    %rbx\n  7b04c8:\t41 5e                \tpop    %r14\n  7b04ca:\t5d                   \tpop    %rbp\n  7b04cb:\tc3                   \tret\n  7b04cc:\t48 8d 35 44 a4 a9 ff \tlea    -0x565bbc(%rip),%rsi        # 24a917 <absl::debugging_internal::IdentifierIsAnonymousNamespace(absl::debugging_internal::State*, unsigned long)::anon_prefix+0x2e19e>\n  7b04d3:\t4c 8d 75 e0          \tlea    -0x20(%rbp),%r14\n  7b04d7:\t4c 89 f7             \tmov    %r14,%rdi\n  7b04da:\tba f3 00 00 00       \tmov    $0xf3,%edx\n  7b04df:\te8 9c 05 1e 00       \tcall   990a80 <absl::log_internal::LogMessageFatal::LogMessageFatal(char const*, int)>\n  7b04e4:\t48 8d 35 3e 43 a6 ff \tlea    -0x59bcc2(%rip),%rsi        # 214829 <absl::Symbolize(void const*, char*, int)::kEllipsis+0xba26>\n  7b04eb:\t4c 89 f7             \tmov    %r14,%rdi\n  7b04ee:\te8 cd f6 d0 ff       \tcall   4bfbc0 <absl::log_internal::LogMessage& absl::log_internal::LogMessage::operator<< <24>(char const (&) [24])>\n  7b04f3:\t48 89 c7             \tmov    %rax,%rdi\n  7b04f6:\t89 de                \tmov    %ebx,%esi\n  7b04f8:\te8 c3 a0 c9 ff       \tcall   44a5c0 <absl::log_internal::LogMessage::operator<<(int)>\n  7b04fd:\t4c 89 f7             \tmov    %r14,%rdi\n  7b0500:\te8 1b e9 0c 00       \tcall   87ee20 <absl::log_internal::LogMessageFatal::~LogMessageFatal()>\n\nCodegen after:\n\n00000000007b1680 <proto2::internal::ThreadSafeArena::AllocateAlignedWithCleanup(unsigned long, unsigned long, void (*)(void*))>:\n  7b1680:\t49 c7 c0 40 fb ff ff \tmov    $0xfffffffffffffb40,%r8\n  7b1687:\t64 49 8b 40 08       \tmov    %fs:0x8(%r8),%rax\n...\n  7b17a5:\tc3                   \tret\n\nname                           old cpu/op   new cpu/op   delta\nBM_ArenaAllocWithCleanup/100   957ns \u00b1 3%   868ns \u00b1 1%  -9.27%  (p=0.000 n=54+48)\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 33,
        "deletions": 42,
        "changed_files": 3,
        "created_at": "2023-08-18T09:04:36Z",
        "closed_at": "2023-08-25T21:05:11Z",
        "merged_at": null,
        "body": "protobuf: add arena allocation with cleanup benchmark\n\nAllocation with cleanup is quite different from the normal allocation.\nAdd a synthetic benchmark for it.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 33,
        "deletions": 42,
        "changed_files": 3,
        "created_at": "2023-08-18T09:02:36Z",
        "closed_at": "2023-08-25T21:05:14Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 25,
        "deletions": 41,
        "changed_files": 2,
        "created_at": "2023-08-18T08:58:08Z",
        "closed_at": "2023-08-25T21:10:10Z",
        "merged_at": null,
        "body": "protobuf: fix data race on SerialArena::string_block_\n\nSpaceUsed reads string_block_ while AllocateFromStringBlockFallback\ncan be changing it concurrently. Make it an atomic.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 26,
        "changed_files": 1,
        "created_at": "2023-08-18T08:56:15Z",
        "closed_at": "2023-08-25T21:10:12Z",
        "merged_at": null,
        "body": "protobuf: remove unused MaybeAllocateWithCleanup<T>\n\nThe function is only used for strings,\nthe generic version is dead code. Remove it.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 39,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-08-18T08:33:59Z",
        "closed_at": "2023-08-25T21:10:14Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 39,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-08-18T06:44:40Z",
        "closed_at": "2023-08-25T21:10:16Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 469,
        "deletions": 113,
        "changed_files": 16,
        "created_at": "2023-08-18T02:02:15Z",
        "closed_at": "2023-08-25T21:10:18Z",
        "merged_at": null,
        "body": "[EXPERIMENTAL] proto New with Copy\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 30,
        "changed_files": 3,
        "created_at": "2023-08-17T22:45:28Z",
        "closed_at": "2023-08-24T15:04:03Z",
        "merged_at": null,
        "body": "Stop using atomic for fast entry target function.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1125,
        "deletions": 1,
        "changed_files": 5,
        "created_at": "2023-08-17T21:44:48Z",
        "closed_at": "2023-08-22T20:06:05Z",
        "merged_at": null,
        "body": "Publish extension declarations with declaration verifications.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-08-17T19:21:58Z",
        "closed_at": "2023-08-31T11:00:41Z",
        "merged_at": null,
        "body": "Also tweaked the \"simple wrapper\" language since the implementation does not appear to delegate to JsonToBinaryStream() directly.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 971,
        "deletions": 160,
        "changed_files": 19,
        "created_at": "2023-08-17T16:49:43Z",
        "closed_at": "2023-08-23T18:08:49Z",
        "merged_at": null,
        "body": "Implement v0.6 Optional Bytes\n\nThis makes a few changes:\n - It changes generated messages to reference message innards as a type in `__runtime` instead of branching on what fields should be there. That results in much less bifurcation in gencode and lets runtime-agnostic code reference raw message innards.\n- It adds a generic mechanism for creating vtable-based mutators. These vtables point to thunks generated for interacting with C++ or upb fields. Right now, the design results in 2-word (msg+vtable) mutators for C++ and 3-word mutators (msg+arena+vtable) for UPB. See upb.rs for an explanation of the design options. I chose the `RawMessage+&Arena` design for mutator data as opposed to a `&MessageInner` design because it did not result in extra-indirection layout changes for message mutators. We could revisit this in the future with performance data, since this results in all field mutators being 3 words large instead of the register-friendly 2 words.\n- And lastly, as a nearby change that touches on many of the same topics, it adds some extra SAFETY comments for Send/Sync in message gencode.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-08-17T05:09:27Z",
        "closed_at": "2023-08-18T13:12:53Z",
        "merged_at": null,
        "body": "Internal Code Change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-16T23:02:21Z",
        "closed_at": "2023-08-17T18:20:30Z",
        "merged_at": null,
        "body": "DiscardRemainingTag should check lower 4 bits against zero if it's 5th varint byte.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-08-16T22:49:23Z",
        "closed_at": "2023-08-18T15:11:44Z",
        "merged_at": null,
        "body": "Add missing newline to end of test_rust.yml\n\nMy editor reformatted this file to add a missing newline, and this ended up\nbreaking the test. The added newline caused there to be a newline in the middle\nof the Bazel command. So this change adds the missing newline and fixes up the\nBazel command by using the `>-` syntax to treat this as a multiline string\nwithout adding any newlines.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 5,
        "changed_files": 3,
        "created_at": "2023-08-16T22:14:32Z",
        "closed_at": "2023-08-18T15:32:05Z",
        "merged_at": null,
        "body": "Upgrade our `emulation` and `tcmalloc` Docker images\n\nThis will pull in a change allowing us to exclude Bazel targets using the\n`-//foo:bar` syntax.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 437,
        "deletions": 574,
        "changed_files": 17,
        "created_at": "2023-08-16T21:30:43Z",
        "closed_at": "2023-08-24T23:16:23Z",
        "merged_at": null,
        "body": "Remove MapEntryLite.\nTDP replaced most of the class' use. MapFieldLite does not need it anymore.\nWe can also simplify MapFieldLite by removing some now unused template parameters.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 142,
        "deletions": 29,
        "changed_files": 2,
        "created_at": "2023-08-16T20:06:30Z",
        "closed_at": "2023-08-24T23:16:26Z",
        "merged_at": null,
        "body": "Expand global feature validation to cover some edge cases that were initially missed.\n\nNotably, @jhump identified the following holes:\n- Non-messages can have message_encoding set\n- Extensions can have implicit presence set\n- Repeated fields can have explicit presence set\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 142,
        "deletions": 29,
        "changed_files": 2,
        "created_at": "2023-08-16T20:03:45Z",
        "closed_at": "2023-08-24T23:16:28Z",
        "merged_at": null,
        "body": "Expand global feature validation to cover some edge cases that were initially missed.\n\nNotably, @jhump identified the following holes:\n- Non-messages can have message_encoding set\n- Extensions can have implicit presence set\n- Repeated fields can have explicit presence set\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 142,
        "deletions": 29,
        "changed_files": 2,
        "created_at": "2023-08-16T19:45:30Z",
        "closed_at": "2023-08-24T23:16:30Z",
        "merged_at": null,
        "body": "Expand global feature validation to cover some edge cases that were initially missed.\n\nNotably, @jhump identified the following holes:\n- Non-messages can have message_encoding set\n- Extensions can have implicit presence set\n- Repeated fields can have explicit presence set\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 12,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2023-08-16T19:43:11Z",
        "closed_at": "2023-08-18T13:31:15Z",
        "merged_at": null,
        "body": "Use a glob import in protobuf.rs\n\nThis removes the need to duplicate individual imports\nfrom shared.rs and possibly forget something.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 232,
        "deletions": 0,
        "changed_files": 6,
        "created_at": "2023-08-16T17:45:37Z",
        "closed_at": "2023-08-18T13:04:36Z",
        "merged_at": null,
        "body": "Add default arena enabled copy constructor\n\nThis version is a light-weight, inlined version implemented in terms of `MergeFrom` that extends the protocol buffer API with arena enabled copy construction, but without any explicit (optimized) implementation.\n\nGoing forward the protocol compiler will provide an optimized implementation that is expected to save a non trivial amount of compute.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-16T16:51:14Z",
        "closed_at": "2023-08-18T18:49:08Z",
        "merged_at": null,
        "body": "Add more upb test runs to the protobuf repo\n\nThere are still a bunch more test runs to migrate, but this change adds a few\nmore that were unblocked by the `exclude-targets` flag.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 668,
        "deletions": 505,
        "changed_files": 5,
        "created_at": "2023-08-16T14:55:33Z",
        "closed_at": "2023-08-18T17:32:05Z",
        "merged_at": null,
        "body": "Add `ABSL_ATTRIBUTE_LIFETIME_BOUND` attribute on generated message field accessors.\nThis allows the compiler to statically detect use-after-free bugs.\n\nThis change touches a subset of field types. More changes to follow.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 142,
        "deletions": 29,
        "changed_files": 2,
        "created_at": "2023-08-15T23:09:48Z",
        "closed_at": "2023-08-16T20:17:10Z",
        "merged_at": null,
        "body": "Expand global feature validation to cover some edge cases that were initially missed.\n\nNotably, @jhump identified the following holes:\n- Non-messages can have message_encoding set\n- Extensions can have implicit presence set\n- Repeated fields can have explicit presence set\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 61,
        "deletions": 45,
        "changed_files": 4,
        "created_at": "2023-08-15T22:10:41Z",
        "closed_at": "2023-08-19T00:20:43Z",
        "merged_at": null,
        "body": "Editions: Refactor feature API for C++ generators.\n\nThe new naming will use our new vocabulary, and restrict feature access:\n\nUnresolved source features - source-retention features that generators need to validate their own features.  These should not be sent to the runtime or used for any decision-making.\n\nResolved source features - fully resolved source-retention features.  These should be used to make codegen decisions, but shouldn't be sent to runtimes.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 236,
        "deletions": 1003,
        "changed_files": 15,
        "created_at": "2023-08-15T21:14:19Z",
        "closed_at": "2023-08-17T23:55:51Z",
        "merged_at": null,
        "body": "Editions: Remove raw_features field in FeatureSet.\n\nProtoc will only ever expose unresolved feature sets, so there's no longer any ambiguity.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 191,
        "deletions": 654,
        "changed_files": 14,
        "created_at": "2023-08-15T20:48:47Z",
        "closed_at": "2023-08-17T23:46:43Z",
        "merged_at": null,
        "body": "Editions: Stop propagating partially resolved feature sets to plugins.\n\nSince protoc can't know the full set of features that matter to a plugin, sending partially resolved features is unnecessarily confusing.  Plugins written in C++ will have automatic access to the fully resolved features via previous enhancements.  Plugins written in other languages will need to reimplement feature resolution logic.  Future changes will document this algorithm and provide conformance testing.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 46,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2023-08-15T19:52:42Z",
        "closed_at": "2023-08-24T23:16:33Z",
        "merged_at": null,
        "body": "ruby: Fix object cache lookups on 32-bit platforms (#13494)\n\nhttps://github.com/protocolbuffers/protobuf/pull/13204 refactored the Ruby object cache to use a key of `LL2NUM(key_val)` instead of `LL2NUM(key_val >> 2)`. On 32-bit systems, `LL2NUM(key_val)` returns inconsistent results because a large value has to be stored as a Bignum on the heap. This causes cache lookups to fail.\n\nThis commit restores the previous behavior of using `ObjectCache_GetKey`, which discards the lower 2 bits, which are zero. This enables a key to be stored as a Fixnum on both 32 and 64-bit platforms.\n\nAs https://patshaughnessy.net/2014/1/9/how-big-is-a-bignum describes, a Fixnum uses:\n\n* 1 bit for the `FIXNUM_FLAG`.\n* 1 bit for the sign flag.\n \nTherefore the largest possible Fixnum value on a 64-bit value is 4611686018427387903 (2^62 - 1). On a 32-bit system, the largest value  is 1073741823 (2^30 - 1).\n\nFor example, a possible VALUE pointer address on a 32-bit system:\n\n0xff5b4af8 => 4284173048\n\nDropping the lower 2 bits makes up for the loss of range to these flags. In the example above, we see that shifting by 2 turns the value into a 30-bit number, which can be represented as a Fixnum:\n\n(0xff5b4af8 >> 2) => 1071043262\n\nThis bug can also manifest on a 64-bit system if the upper bits are 0xff.\n\nCloses #13481\n\nCloses #13494\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/13494 from stanhu:sh-fix-ruby-protobuf-32bit d63122a6fc6eb21b81cc37412d4c4f8730f46125\nFUTURE_COPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/13494 from stanhu:sh-fix-ruby-protobuf-32bit d63122a6fc6eb21b81cc37412d4c4f8730f46125\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 181,
        "deletions": 443,
        "changed_files": 7,
        "created_at": "2023-08-15T19:47:33Z",
        "closed_at": "2023-08-17T23:37:09Z",
        "merged_at": null,
        "body": "Editions: Remove string_field_validation feature.\n\nThis has been replaced with language-specific features and will not be included in Edition 2023.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 37,
        "changed_files": 1,
        "created_at": "2023-08-15T19:44:04Z",
        "closed_at": "2023-08-15T20:52:42Z",
        "merged_at": "2023-08-15T20:52:42Z",
        "body": "CI shows this part of legacy release infrastructure is no longer working as expected due to failing keyserver request.\r\n\r\nC# has already exited support window for 19.x so we are removing this artifact from releases on this line.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 37,
        "changed_files": 1,
        "created_at": "2023-08-15T19:41:48Z",
        "closed_at": "2023-08-15T20:52:28Z",
        "merged_at": "2023-08-15T20:52:28Z",
        "body": "CI shows this part of legacy release infrastructure is no longer working as expected due to failing keyserver request.\r\n\r\nC# has already exited support window for 21.x so we are removing this artifact from releases on this line.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 251,
        "deletions": 242,
        "changed_files": 21,
        "created_at": "2023-08-15T19:07:26Z",
        "closed_at": "2023-08-15T22:13:34Z",
        "merged_at": null,
        "body": "Editions: Migrate string_field_validation to a C++ feature\n\nEvery language has very different handling of utf8 validation.  Any with proto2/proto3 differences will receive language-specific features for edition zero to better model these subtle differences.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-15T19:00:31Z",
        "closed_at": "2023-08-15T20:21:21Z",
        "merged_at": null,
        "body": "port_def: Ignore -Wpedantic warnings (#13492)\n\nFixes `extra ';' [-Wpedantic]` warnings in generated `.pb` headers.\n\nCloses #13492\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/13492 from jonaski:pedantic_extra_semicolon a226328af677de44cab3fe7d71f70d091af4061a\nFUTURE_COPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/13492 from jonaski:pedantic_extra_semicolon a226328af677de44cab3fe7d71f70d091af4061a\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-08-15T18:23:35Z",
        "closed_at": "2023-08-15T19:54:42Z",
        "merged_at": null,
        "body": "ruby: Fix object cache lookups on 32-bit platforms (#13494)\n\nhttps://github.com/protocolbuffers/protobuf/pull/13204 refactored the Ruby object cache to use a key of `LL2NUM(key_val)` instead of `LL2NUM(key_val >> 2)`. On 32-bit systems, `LL2NUM(key_val)` returns inconsistent results because a large value has to be stored as a Bignum on the heap. This causes cache lookups to fail.\n\nThis commit restores the previous behavior of using `ObjectCache_GetKey`, which discards the lower 2 bits, which are zero. This enables a key to be stored as a Fixnum on both 32 and 64-bit platforms.\n\nAs https://patshaughnessy.net/2014/1/9/how-big-is-a-bignum describes, a Fixnum uses:\n\n* 1 bit for the `FIXNUM_FLAG`.\n* 1 bit for the sign flag.\n \nTherefore the largest possible Fixnum value on a 64-bit value is 4611686018427387903 (2^62 - 1). On a 32-bit system, the largest value  is 1073741823 (2^30 - 1).\n\nFor example, a possible VALUE pointer address on a 32-bit system:\n\n0xff5b4af8 => 4284173048\n\nDropping the lower 2 bits makes up for the loss of range to these flags. In the example above, we see that shifting by 2 turns the value into a 30-bit number, which can be represented as a Fixnum:\n\n(0xff5b4af8 >> 2) => 1071043262\n\nThis bug can also manifest on a 64-bit system if the upper bits are 0xff.\n\nCloses #13481\n\nCloses #13494\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/13494 from stanhu:sh-fix-ruby-protobuf-32bit d63122a6fc6eb21b81cc37412d4c4f8730f46125\nFUTURE_COPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/13494 from stanhu:sh-fix-ruby-protobuf-32bit d63122a6fc6eb21b81cc37412d4c4f8730f46125\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-15T17:27:01Z",
        "closed_at": "2023-08-25T21:10:21Z",
        "merged_at": null,
        "body": "Internal\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 6,
        "created_at": "2023-08-15T16:02:24Z",
        "closed_at": "2023-08-15T19:35:13Z",
        "merged_at": null,
        "body": "Update compare_codegen_test to be paramaterizable per language.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 370,
        "deletions": 295,
        "changed_files": 11,
        "created_at": "2023-08-15T15:20:31Z",
        "closed_at": "2023-08-21T13:36:44Z",
        "merged_at": null,
        "body": "Clean up of rust messagegenerator and accessor generators.\n\nIt ended up being odd to construct the AccessorGenerators ahead of time given some specific Context<>: since each of the three methods on AccessorGenerators demands a different Context than the initial one so they shouldn't hold that Context anyway. It ended up just being a spooky parallel array to the Fields with an unenforced invariant that all methods would be called with a new Context<> but the same underlying FieldDescriptor later.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-08-15T15:17:26Z",
        "closed_at": "2023-08-25T19:23:27Z",
        "merged_at": null,
        "body": "Remove stip annotations that were not working\n\nhttps://github.com/protocolbuffers/protobuf/blob/c7119e6d56ea8e29f32ce5eb84fca82799095239/src/google/protobuf/port_def.inc#L341\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 437,
        "deletions": 574,
        "changed_files": 17,
        "created_at": "2023-08-15T14:40:02Z",
        "closed_at": "2023-08-16T21:35:45Z",
        "merged_at": null,
        "body": "Remove MapEntryLite.\nTDP replaced most of the class' use. MapFieldLite does not need it anymore.\nWe can also simplify MapFieldLite by removing some now unused template parameters.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3037,
        "deletions": 1937,
        "changed_files": 20,
        "created_at": "2023-08-15T12:37:54Z",
        "closed_at": "2023-08-25T21:10:23Z",
        "merged_at": null,
        "body": "Enable Proto explicit constructor\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 231,
        "deletions": 27,
        "changed_files": 3,
        "created_at": "2023-08-15T02:44:24Z",
        "closed_at": "2023-08-15T03:46:59Z",
        "merged_at": null,
        "body": "Introduce C++ feature for UTF8 validation.\n\nThis will replace the frontend string_field_validation field, which we've discovered can't accurately model all of the unique behaviors in each language.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 498,
        "deletions": 132,
        "changed_files": 11,
        "created_at": "2023-08-15T02:44:20Z",
        "closed_at": "2023-08-15T20:50:02Z",
        "merged_at": null,
        "body": "Editions: Include defaults for any features in the generated pool.\n\nThis helps make the API more complete, since the FeatureSet object will always be fully resolved on any accessible features.  This specifically targets C++ plugins though, which will now have their features filled in by default.  Before, any proto files that didn't include the language-specific features would result in unresolved extensions in the generators.\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/13494 from stanhu:sh-fix-ruby-protobuf-32bit d63122a6fc6eb21b81cc37412d4c4f8730f46125\nFUTURE_COPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/13494 from stanhu:sh-fix-ruby-protobuf-32bit d63122a6fc6eb21b81cc37412d4c4f8730f46125\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 40,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-14T19:43:30Z",
        "closed_at": "2023-08-25T21:10:25Z",
        "merged_at": null,
        "body": "Do not submit\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 930,
        "deletions": 17,
        "changed_files": 13,
        "created_at": "2023-08-14T19:03:01Z",
        "closed_at": "2023-08-21T18:43:54Z",
        "merged_at": null,
        "body": "Add arena enabled copy construction.\n\nArena enabled copy construction provides efficiency gains for the rather common construct where a message is currently copied by first creating a default initialized instance through the regular (arena) constructor, and then recursively filled from the source message using 'MergeFrom' or 'CopyFrom'.\n\nArena enabled copy construction is feature gated in port_def.inc and currently not enabled by default.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-14T16:41:48Z",
        "closed_at": "2023-08-22T16:27:41Z",
        "merged_at": null,
        "body": "Change the protobuf compiler to always for instantiation of TcParseTable template.\n\nThis will ensure that protobuf pretty printers are always available for debugging, even when building using -fstandalong debug and mixed levels of optimizations and debug information. Causes trivial (< 1%) increase in binary sizes.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 597,
        "deletions": 85,
        "changed_files": 14,
        "created_at": "2023-08-14T16:26:08Z",
        "closed_at": "2023-08-25T21:10:27Z",
        "merged_at": null,
        "body": "Inline small messages\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 8,
        "changed_files": 5,
        "created_at": "2023-08-14T15:27:35Z",
        "closed_at": "2023-08-14T16:27:52Z",
        "merged_at": "2023-08-14T16:27:51Z",
        "body": "Backports fixes for https://github.com/protocolbuffers/protobuf/issues/13499 and https://github.com/protocolbuffers/protobuf/issues/13501 to 24.x branch",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 15,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-08-14T14:34:58Z",
        "closed_at": "2023-08-15T00:22:31Z",
        "merged_at": null,
        "body": "Add InternalVisibility arena enabled constructors to MapField\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 105,
        "deletions": 122,
        "changed_files": 1,
        "created_at": "2023-08-12T20:57:44Z",
        "closed_at": "2023-08-25T21:10:29Z",
        "merged_at": null,
        "body": "Incremental migration of message.cc to Emit\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 27,
        "deletions": 29,
        "changed_files": 1,
        "created_at": "2023-08-12T19:53:21Z",
        "closed_at": "2023-08-14T21:49:22Z",
        "merged_at": null,
        "body": "Incremental migration of message.cc to Emit\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 53,
        "deletions": 24,
        "changed_files": 3,
        "created_at": "2023-08-12T18:21:34Z",
        "closed_at": "2023-08-15T02:11:15Z",
        "merged_at": null,
        "body": "protoc: validate that reserved range start is before end (#13474)\n\nThis addresses #13442. This also backfills the tests to add tests for the two checks that were already implemented as well as one for the newly added check.\n\nFinally, this fixes the location information so that positions for reserved ranges are correctly reported. (The previous check that already existed, for enums, failed to show line and column info.)\n\nCloses #13474\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/13474 from jhump:jh/validate-msg-reserved-range-order 661adc745ac9069201f55e312ff34a4dd86d2a33\nFUTURE_COPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/13474 from jhump:jh/validate-msg-reserved-range-order 661adc745ac9069201f55e312ff34a4dd86d2a33\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 32,
        "deletions": 8,
        "changed_files": 3,
        "created_at": "2023-08-12T17:19:29Z",
        "closed_at": "2023-08-15T18:55:04Z",
        "merged_at": null,
        "body": "protoc: parser rejects explicit use of map_entry option (#13479)\n\nThis addresses #13441.  Second try, now with more internal fixes.\n\nThis preserves the similar check at the _point of use_ of invalid messages in `DescriptorBuilder` (and there's an existing test that verifies that check still works).\n\nBut it adds another check in the parser, to catch this error at the _point of definition_ of an invalid message. And the corresponding test is updated: we no longer need a usage of the message to catch the error, and the reported position is the definition of the option, not the usage site of the message.\n\nThe way this works feels kinda gross, but I wasn't sure of a better way to do it. The only place we know for certain that it was an explicit option (vs. auto-added by the parser when synthesizing a map entry message) is when after processing the message body, we can look at the uninterpreted options. So that's what this does. If you have ideas on better/cleaner approaches, I'd be happy to revise.\n\nCloses #13479\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 139,
        "deletions": 77,
        "changed_files": 21,
        "created_at": "2023-08-11T20:29:24Z",
        "closed_at": "2023-08-14T17:06:55Z",
        "merged_at": null,
        "body": "[ObjC] Simplify root registry generation.\n\nThe the distinction in the output isn't worth it.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 115,
        "deletions": 46,
        "changed_files": 11,
        "created_at": "2023-08-11T20:12:52Z",
        "closed_at": "2023-08-14T16:14:43Z",
        "merged_at": null,
        "body": "[ObjC] Add generation control for descriptor custom options.\n\nThere is a new boolean ObjC Generator Option called\n`strip_custom_options` that defaults to `True` that causes all\nextensions for the descriptor custom options to not generated.\nSee https://protobuf.dev/programming-guides/proto2/#customoptions\nfor more information on these. Since the ObjC runtime doesn't\ncapture this data, we're not aware of any reason they would be need.\nIf you do enable this option, please open an issue and let us know\nas we'd rather remove this option and have this be the only\nbehavior.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 106,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2023-08-11T16:49:07Z",
        "closed_at": "2023-08-11T19:58:29Z",
        "merged_at": null,
        "body": "Add conformance test for Dart UPB VM\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 40,
        "changed_files": 4,
        "created_at": "2023-08-10T20:35:13Z",
        "closed_at": "2023-08-11T17:53:56Z",
        "merged_at": null,
        "body": "Internal Code Change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2023-08-10T20:34:22Z",
        "closed_at": "2023-08-10T22:44:21Z",
        "merged_at": null,
        "body": "Remove editions test proto from setup.py.\n\nThis proto is only used in C++ tests, and doesn't need to be built in python.  Python doesn't support editions yet, so we should just remove it for now.  This also fixes some other issues with setup.py where tests fail.\n\nCloses #13501\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2023-08-10T19:58:57Z",
        "closed_at": "2023-08-10T21:45:00Z",
        "merged_at": "2023-08-10T21:45:00Z",
        "body": "Fixes https://github.com/protocolbuffers/protobuf/issues/13499\r\n\r\nNeeds to be backported to 24.x",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-10T19:43:55Z",
        "closed_at": "2023-08-10T22:21:17Z",
        "merged_at": null,
        "body": "DO NOT SUBMIT\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 33,
        "deletions": 48,
        "changed_files": 10,
        "created_at": "2023-08-10T18:35:22Z",
        "closed_at": "2023-08-11T16:15:20Z",
        "merged_at": null,
        "body": "[ObjC] Scrub \"syntax\" references and editions prep\n\nScrub all the objc related sources for references to \"syntax\"\nand update them to no longer tie things accordingly.\n\nThe ObjC Protos `GPBFileDescriptor` concept still exposes the\n`syntax`, but it was already marked as deprecated. This will be\nremoved in the future as nothing should need to look at the value.\n\nValidate that all generation calls are on the helpers to get the\neditions support from the C++ code.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-08-10T18:15:55Z",
        "closed_at": "2023-08-30T15:25:08Z",
        "merged_at": null,
        "body": "Fixes https://github.com/protocolbuffers/protobuf/issues/13500",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 847,
        "changed_files": 10,
        "created_at": "2023-08-10T16:35:47Z",
        "closed_at": "2023-08-14T19:20:37Z",
        "merged_at": null,
        "body": "Remove option to disable the table-driven parser in protoc.\nIt is now the default and only codegen parser implementation.\n\nAlso, remove the newly dead code.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 282,
        "deletions": 26,
        "changed_files": 9,
        "created_at": "2023-08-10T15:35:01Z",
        "closed_at": "2023-08-11T22:11:44Z",
        "merged_at": null,
        "body": "Use a table-driven destructor for LITE messages to reduce code size.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 14713,
        "deletions": 14656,
        "changed_files": 8,
        "created_at": "2023-08-09T23:47:02Z",
        "closed_at": "2023-08-16T15:29:40Z",
        "merged_at": null,
        "body": "Start adding upb test runs to CI for protobuf repo\n\nThis change moves the upb Fastbuild, Optimized, and FastTable test runs over to\nthe protobuf repo CI in preparation for moving the upb codebase itself. There\nare a bunch more test runs to move, but this initial change handles the easy\nones first.\n\nI also updated our pinned upb version to the current head to pick up some\nrecent fixes.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 6,
        "changed_files": 6,
        "created_at": "2023-08-09T23:38:37Z",
        "closed_at": "2023-08-10T01:22:34Z",
        "merged_at": null,
        "body": "Fixes #13490",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-08-09T23:03:12Z",
        "closed_at": "2023-08-25T21:10:31Z",
        "merged_at": null,
        "body": "python CopyFrom segmentation fault on version 4.24.0\nhttps://github.com/protocolbuffers/protobuf/issues/13485\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 17,
        "deletions": 13,
        "changed_files": 2,
        "created_at": "2023-08-09T21:35:31Z",
        "closed_at": "2023-08-25T21:10:33Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 46,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2023-08-09T20:37:31Z",
        "closed_at": "2023-08-15T19:54:44Z",
        "merged_at": null,
        "body": "https://github.com/protocolbuffers/protobuf/pull/13204 refactored the Ruby object cache to use a key of `LL2NUM(key_val)` instead of `LL2NUM(key_val >> 2)`. On 32-bit systems, `LL2NUM(key_val)` returns inconsistent results because a large value has to be stored as a Bignum on the heap. This causes cache lookups to fail.\r\n\r\nThis commit restores the previous behavior of using `ObjectCache_GetKey`, which discards the lower 2 bits, which are zero. This enables a key to be stored as a Fixnum on both 32 and 64-bit platforms.\r\n\r\nAs https://patshaughnessy.net/2014/1/9/how-big-is-a-bignum describes, a Fixnum uses:\r\n\r\n* 1 bit for the `FIXNUM_FLAG`.\r\n* 1 bit for the sign flag.\r\n \r\nTherefore the largest possible Fixnum value on a 64-bit value is 4611686018427387903 (2^62 - 1). On a 32-bit system, the largest value  is 1073741823 (2^30 - 1).\r\n\r\nFor example, a possible VALUE pointer address on a 32-bit system:\r\n\r\n0xff5b4af8 => 4284173048\r\n\r\nDropping the lower 2 bits makes up for the loss of range to these flags. In the example above, we see that shifting by 2 turns the value into a 30-bit number, which can be represented as a Fixnum:\r\n\r\n(0xff5b4af8 >> 2) => 1071043262\r\n\r\nThis bug can also manifest on a 64-bit system if the upper bits are 0xff.\r\n\r\nCloses #13481",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 91,
        "deletions": 67,
        "changed_files": 25,
        "created_at": "2023-08-09T19:57:31Z",
        "closed_at": "2023-08-09T23:02:21Z",
        "merged_at": null,
        "body": "Main 202308091812 (#13489)\n\nCloses #13489\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/13489 from protocolbuffers:main-202308091812 e729f0bf5a01effb402bf3c83dd1d36538d347d8\nFUTURE_COPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/13489 from protocolbuffers:main-202308091812 e729f0bf5a01effb402bf3c83dd1d36538d347d8\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-09T19:40:44Z",
        "closed_at": "2023-08-15T20:21:20Z",
        "merged_at": null,
        "body": "Fixes `extra ';' [-Wpedantic]` warnings in generated `.pb` headers.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 6,
        "changed_files": 6,
        "created_at": "2023-08-09T18:45:16Z",
        "closed_at": "2023-08-10T13:13:22Z",
        "merged_at": null,
        "body": "Fixed unused variable warning on Ruby gencode.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 62,
        "deletions": 63,
        "changed_files": 36,
        "created_at": "2023-08-09T18:18:53Z",
        "closed_at": "2023-08-09T19:30:18Z",
        "merged_at": "2023-08-09T19:30:18Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 30,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2023-08-09T00:23:33Z",
        "closed_at": "2023-08-10T18:27:47Z",
        "merged_at": null,
        "body": "This addresses #13441.\r\n\r\nThis preserves the similar check at the _point of use_ of invalid messages in `DescriptorBuilder` (and there's an existing test that verifies that check still works).\r\n\r\nBut it adds another check in the parser, to catch this error at the _point of definition_ of an invalid message. And the corresponding test is updated: we no longer need a usage of the message to catch the error, and the reported position is the definition of the option, not the usage site of the message.\r\n\r\nThe way this works feels kinda gross, but I wasn't sure of a better way to do it. The only place we know for certain that it was an explicit option (vs. auto-added by the parser when synthesizing a map entry message) is when after processing the message body, we can look at the uninterpreted options. So that's what this does. If you have ideas on better/cleaner approaches, I'd be happy to revise.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-08-09T00:08:49Z",
        "closed_at": "2023-08-09T15:41:29Z",
        "merged_at": null,
        "body": "Disable Ruby FFI tests until flakes are resolved\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 53,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-08-08T22:06:25Z",
        "closed_at": "2023-08-10T18:46:37Z",
        "merged_at": null,
        "body": "Set up for verified lazy extensions. (Disabled by default.)\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 33,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2023-08-08T21:17:42Z",
        "closed_at": "2023-08-15T02:11:16Z",
        "merged_at": null,
        "body": "This addresses #13442. This also backfills the tests to add tests for the two checks that were already implemented as well as one for the newly added check.\r\n\r\nFinally, this fixes the location information so that positions for reserved ranges are correctly reported. (The previous check that already existed, for enums, failed to show line and column info.)",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 179,
        "deletions": 78,
        "changed_files": 6,
        "created_at": "2023-08-08T20:24:59Z",
        "closed_at": "2023-08-09T12:48:40Z",
        "merged_at": null,
        "body": "Support without-presence scalars better.\n\nOnly emit has_field() if the field support presence. Only emit field_opt() getter if the field is both optional and supports presence.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 27,
        "deletions": 6,
        "changed_files": 3,
        "created_at": "2023-08-08T20:10:11Z",
        "closed_at": "2023-08-09T19:21:26Z",
        "merged_at": null,
        "body": "Do eager parsing when building descriptors.\n\nLazy parsing can use reflection to verify consistency, and reflection while building descriptors causes deadlock.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 150,
        "deletions": 6,
        "changed_files": 3,
        "created_at": "2023-08-08T19:51:18Z",
        "closed_at": "2023-08-10T19:43:12Z",
        "merged_at": null,
        "body": "This addresses #13440.\r\n\r\n@mkruskal-google, I saw you are assigned the above issue. I hope it's okay that I took a stab at it.",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 61,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-08-08T17:08:49Z",
        "closed_at": "2023-08-09T15:01:38Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-08-08T04:53:20Z",
        "closed_at": "2023-08-22T17:23:40Z",
        "merged_at": null,
        "body": "Picks up an OSS build fix for unused function CodepointSkipBackwards: https://github.com/protocolbuffers/utf8_range/commit/d863bc33e15cba6d873c878dcca9e6fe52b2f8cb",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2023-08-07T22:24:16Z",
        "closed_at": "2023-08-07T23:43:49Z",
        "merged_at": null,
        "body": "Fix wrong warning message info\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 27,
        "deletions": 3,
        "changed_files": 5,
        "created_at": "2023-08-07T21:09:29Z",
        "closed_at": "2023-08-10T16:29:01Z",
        "merged_at": null,
        "body": "Add support for EDITIONS in Java and Java Lite syntax enum / bits.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-08-07T19:59:44Z",
        "closed_at": "2023-08-07T23:34:32Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-07T15:09:05Z",
        "closed_at": "2023-08-07T16:12:26Z",
        "merged_at": null,
        "body": "Add dummy return statements to silence false positive\n\"control reaches end of non-void function\" warnings.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-07T14:58:02Z",
        "closed_at": "2023-08-07T17:50:20Z",
        "merged_at": null,
        "body": "[ObjC] Mark NSOutputStream helper as not inlinable.\n\nWith some optimizer flags, GPBCodedOutputStream results in a lot of\ncode bloat, for now just prevent the new helper related to\nNSOutputStream from being inlined to keep that in check.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 186,
        "deletions": 205,
        "changed_files": 13,
        "created_at": "2023-08-04T22:01:03Z",
        "closed_at": "2023-08-25T20:37:51Z",
        "merged_at": null,
        "body": "Use the new int set encoding for enum validation.\nThis change significantly reduces the code size for large enums and improves\nperformance by reducing cache misses and branch mispredictions.\nChange the table-driven parser to use these tables instead of going through the _IsValid functions. This avoids indirect function calls in the parser.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5175,
        "deletions": 4731,
        "changed_files": 9,
        "created_at": "2023-08-04T20:10:21Z",
        "closed_at": "2023-08-11T18:23:06Z",
        "merged_at": null,
        "body": "Topologically sort message declarations\n\nThis is needed so that some child messages may be inlined in their parents.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 69,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-04T18:38:38Z",
        "closed_at": "2023-08-25T21:10:35Z",
        "merged_at": null,
        "body": "internal change\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 165,
        "deletions": 99,
        "changed_files": 2,
        "created_at": "2023-08-04T16:45:44Z",
        "closed_at": "2023-08-04T20:48:35Z",
        "merged_at": null,
        "body": "Hoist the checks on `xform_val` out of the Mp varint parsing loops. That way we\ndo them only once at the beginning instead of for each element.\nIn the past we hoisted the `rep` checks. This change continues that pattern.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 32,
        "deletions": 13,
        "changed_files": 2,
        "created_at": "2023-08-03T20:54:30Z",
        "closed_at": "2023-08-07T16:52:44Z",
        "merged_at": null,
        "body": "Make NamespaceOpener track source locations\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-08-03T18:31:06Z",
        "closed_at": "2023-08-03T19:45:47Z",
        "merged_at": null,
        "body": "Fix typos.\n\nThey got noticed after the previous change was being submitted.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 32,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-08-03T15:43:38Z",
        "closed_at": "2023-08-03T17:23:28Z",
        "merged_at": null,
        "body": "[ObjC] Handle interruptions when writing to NSOutputStreams.\n\nA write succeed but only write out a subset of the requested amount\nof data, handle that via a helper that will loop and advance as need\nto completely write out the data.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-03T06:50:21Z",
        "closed_at": "2023-08-04T23:42:09Z",
        "merged_at": null,
        "body": "`cmake --build` This command needs to specify the directory.\r\n\r\n```\r\nUsage: cmake --build <dir>             [options] [-- [native-options]]\r\n       cmake --build --preset <preset> [options] [-- [native-options]]\r\nOptions:\r\n  <dir>          = Project binary directory to be built.\r\n```",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 32,
        "changed_files": 4,
        "created_at": "2023-08-03T01:05:57Z",
        "closed_at": "2023-08-03T18:32:26Z",
        "merged_at": null,
        "body": "Add sfixed32 & 64 support\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 21,
        "deletions": 14,
        "changed_files": 3,
        "created_at": "2023-08-02T23:04:01Z",
        "closed_at": "2023-08-04T23:01:24Z",
        "merged_at": null,
        "body": "Flesh out Proxied impls for $Msg$View and $Msg$Mut :: v0.6 SingularMessageField \n\nThis CL adds function bodies for: {as_view, into_view, as_mut, into_mut, set_on} [1].\n\nOur prior cl/552609955 didn't have `RawMessage` inside $Msg$Mut, so that's also been rectified in this CL.\n\n[1] Everything in this set is a part of the Proxied trait, except set_on, which belongs to the SettableValue trait.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-08-02T20:35:49Z",
        "closed_at": "2023-08-07T16:31:34Z",
        "merged_at": null,
        "body": "Update protobuf's upb dependency to current main HEAD.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-02T20:03:25Z",
        "closed_at": "2023-08-25T21:10:37Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-08-02T17:31:25Z",
        "closed_at": "2023-08-05T00:24:33Z",
        "merged_at": null,
        "body": "Change the pack/unpack format codes 'f' -> 'g' and 'd' -> 'e' which ensure little endian format is used on the wire regardless of machine endianness. This allows the php composer and conformance tests to pass on big endian platforms and should not change any behavior on little endian platforms.\r\n\r\nAccording to the PHP documentation, 'g' and 'e' were added in PHP versions 7.0.15 and 7.1.1.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 25,
        "deletions": 6,
        "changed_files": 3,
        "created_at": "2023-08-02T17:24:56Z",
        "closed_at": "2023-08-05T00:46:31Z",
        "merged_at": null,
        "body": "Add some missing endian conversions so that the conformance tests can be run on big endian platforms.\r\n\r\nThe message length value created by the conformance test runner is little endian according to the comments in the file but actually was sent in the native endianness of the host. I was able to run the java, python, ruby, php and csharp test executables and they all expect little endian length values so those tests would hang on big endian machines. Only the cpp test executable was using native endian so it has been changed to expect little endian too.\r\n\r\nAlso change the fixed32 and fixed64 functions in binary_json_conformance_test_suite.cc to send the data as little endian which fixes some failures in the python conformance tests on big endian platforms.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-02T13:13:35Z",
        "closed_at": "2023-08-02T17:23:27Z",
        "merged_at": null,
        "body": "Improve javadocs of `Timestamps.now()`.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 12,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-08-02T05:28:47Z",
        "closed_at": "2023-08-04T20:59:15Z",
        "merged_at": null,
        "body": "Always missing required field if a message has required/closed enum.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-08-01T22:47:43Z",
        "closed_at": "2023-08-02T17:32:33Z",
        "merged_at": null,
        "body": "Add a release flag to disambiguate between release and local config_settings.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-01T21:11:09Z",
        "closed_at": "2023-08-25T21:10:39Z",
        "merged_at": null,
        "body": "Fix TAP failure.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 147,
        "deletions": 152,
        "changed_files": 6,
        "created_at": "2023-08-01T20:20:16Z",
        "closed_at": "2023-08-02T01:39:15Z",
        "merged_at": null,
        "body": "upb: fix broken Rust build\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2023-08-01T19:40:59Z",
        "closed_at": "2023-08-01T22:45:36Z",
        "merged_at": null,
        "body": "Fix pyi top level messages/enums in public imports\n\nPorted from https://github.com/protocolbuffers/protobuf/pull/13424\nAccording to PEP 484 https://peps.python.org/pep-0484/#stub-files\nModules and variables imported into the stub are not considered exported from the stub unless the import uses the import ... as ... form or the equivalent from ... import ... as ... form.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 30,
        "deletions": 30,
        "changed_files": 23,
        "created_at": "2023-08-01T18:42:22Z",
        "closed_at": "2023-08-01T19:53:20Z",
        "merged_at": "2023-08-01T19:53:20Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 591,
        "deletions": 0,
        "changed_files": 4,
        "created_at": "2023-08-01T18:29:57Z",
        "closed_at": "2023-08-03T16:05:22Z",
        "merged_at": null,
        "body": "Add a new enum validation format. The format is compact for sequential and\nalmost sequential enums. Uses Eytzinger layout for a fallback binary search.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-08-01T15:36:42Z",
        "closed_at": "2023-08-02T16:21:09Z",
        "merged_at": null,
        "body": "Refactor std::marker::PhantomData to $phantom$\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 110,
        "deletions": 41,
        "changed_files": 6,
        "created_at": "2023-08-01T15:36:12Z",
        "closed_at": "2023-08-07T21:53:11Z",
        "merged_at": null,
        "body": "Migrate protobuf toolchains to use platforms instead of cpu after upgrade to Bazel 6.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-08-01T12:23:16Z",
        "closed_at": "2023-08-02T05:35:10Z",
        "merged_at": null,
        "body": "According to PEP 484 https://peps.python.org/pep-0484/#stub-files\r\n> Modules and variables imported into the stub are not considered exported from the stub unless the import uses the import ... as ... form or the equivalent from ... import ... as ... form.\r\n\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 79,
        "deletions": 39,
        "changed_files": 7,
        "created_at": "2023-07-31T23:10:04Z",
        "closed_at": "2023-08-01T23:23:26Z",
        "merged_at": "2023-08-01T23:23:25Z",
        "body": "Replace `NonNull<u8>` for raw messages with a dedicated opaque pointer\n\nThese are more type safe, and more clearly distinguish between a\nraw message and serialized data.\n\nThis also defines a macro to create new opaque pointer types, and\nswitches `RawArena` to using it.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 12,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-07-31T19:42:59Z",
        "closed_at": "2023-07-31T22:08:23Z",
        "merged_at": null,
        "body": "Fixes a class of flaky test failures observed only in the FFI implementation due to garbage collection in between calls to an accessors for a frozen field.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2023-07-31T18:34:36Z",
        "closed_at": "2023-07-31T20:17:44Z",
        "merged_at": null,
        "body": "Lower default Java text format recursion limit down to 100\n\nThis makes the limit consistent with how we handle this in binary format and in\nother languages.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 168,
        "deletions": 100,
        "changed_files": 15,
        "created_at": "2023-07-31T17:49:11Z",
        "closed_at": "2023-07-31T19:48:02Z",
        "merged_at": "2023-07-31T19:48:02Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-07-31T17:09:27Z",
        "closed_at": "2023-07-31T18:36:30Z",
        "merged_at": null,
        "body": "Introduce recursion limit in Java text format parsing\n\nThis will make the text format parser reject inputs that have a nesting depth\ngreater than 150. We will soon lower this number down to 100 for consistency\nwith other implementations.\n\nFor use cases that rely on parsing deeply nested text protos, it is possible to\ncreate a Parser with a custom recursion limit like this:\n`TextFormat.Parser.newBuilder().setRecursionLimit(i).build()`.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 27,
        "changed_files": 1,
        "created_at": "2023-07-31T17:08:09Z",
        "closed_at": "2023-07-31T18:27:45Z",
        "merged_at": null,
        "body": "Simplify Java text format parser\n\n`ConsumeFieldValue()` has some special logic for handling Any fields, but this\ndoes not seem to be necessary since `mergeField` can handle Any fields on its\nown. This CL therefore deletes the Any-related logic from\n`ConsumeFieldValue()`.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-07-31T13:26:45Z",
        "closed_at": "2023-07-31T18:18:47Z",
        "merged_at": null,
        "body": "Update MessageDifferencer to respect ignored fields combined with force compare no presence.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 170,
        "deletions": 102,
        "changed_files": 12,
        "created_at": "2023-07-29T00:07:41Z",
        "closed_at": "2023-08-25T21:10:41Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-07-28T20:45:57Z",
        "closed_at": "2023-07-29T00:11:07Z",
        "merged_at": null,
        "body": "Drop support for Bazel 5.\n\nThis moves all our CI to Bazel 6 and drops the additional parameterization we had on Bazel version.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-07-28T17:44:14Z",
        "closed_at": "2023-07-31T15:08:49Z",
        "merged_at": null,
        "body": "bazel: Get rid of exec_tools. (#13401)\n\nBazel has removed this attribute in bazelbuild/bazel@c061e57a7004a88eeb2f84d094d9a88b56c146b6.\n\nCloses #13401\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/13401 from benjaminp:exec_tools 9e718ff0fd11ff1fe70ed3e2536373792504c9c5\nFUTURE_COPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/13401 from benjaminp:exec_tools 9e718ff0fd11ff1fe70ed3e2536373792504c9c5\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-07-28T02:53:53Z",
        "closed_at": "2023-08-25T21:10:43Z",
        "merged_at": null,
        "body": "Turn off any warning message produced by descriptor_data by default.\n\nAdd a verbose flag that is False by default that turns off any warnings emitted by \ndescriptor_database.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-07-28T01:48:47Z",
        "closed_at": "2023-08-02T20:03:13Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 151,
        "deletions": 0,
        "changed_files": 8,
        "created_at": "2023-07-28T00:02:06Z",
        "closed_at": "2023-07-31T22:36:08Z",
        "merged_at": null,
        "body": "Sketch of v0.6 SingularMessageField\n\nThis CL sets up the basic plumbing end-to-end for singular message fields.\nWe add skeletonized support for `Proxied` messages. This is done\nby creating structs for $Msg$View and $Msg$Mut, and providing \nstubbed impls.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-07-27T22:22:31Z",
        "closed_at": "2023-08-25T21:10:45Z",
        "merged_at": null,
        "body": "Create observability_manager for observability response validation\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2023-07-27T22:15:09Z",
        "closed_at": "2023-07-31T15:08:51Z",
        "merged_at": null,
        "body": "Bazel has removed this attribute in bazelbuild/bazel@c061e57a7004a88eeb2f84d094d9a88b56c146b6.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 297,
        "deletions": 159,
        "changed_files": 4,
        "created_at": "2023-07-27T18:57:18Z",
        "closed_at": "2023-08-02T15:48:24Z",
        "merged_at": null,
        "body": "Overload the void* in RepeatedPtrFieldBase to point directly to the first element if Capacity()==1, or to point to an allocated Rep if Capacity()>1.\nThis avoids allocating memory for 1 element containers, and avoids indirection costs like extra cache misses.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 31,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2023-07-26T22:46:34Z",
        "closed_at": "2023-08-07T17:24:53Z",
        "merged_at": null,
        "body": "Add test when type is missing when build FileDescriptorProto\n\nWhen build a FileDescriptorProto into pool, FieldDescriptorProto.type may not set if type_name is set. This only add tests. UPB python Fix has been submit in other change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 231,
        "deletions": 27,
        "changed_files": 3,
        "created_at": "2023-07-26T18:40:34Z",
        "closed_at": "2023-08-15T02:41:23Z",
        "merged_at": null,
        "body": "Introduce C++ feature for UTF8 validation.\n\nThis will replace the frontend string_field_validation field, which we've discovered can't accurately model all of the unique behaviors in each language.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 348,
        "deletions": 96,
        "changed_files": 13,
        "created_at": "2023-07-25T21:46:43Z",
        "closed_at": "2023-08-15T14:56:45Z",
        "merged_at": null,
        "body": "Avoid creating split repeated fields for operations such as Clear()\n\nThis avoids a call to mutable(), and results in smaller code, branching on the field being not default, which should be a well predicted, rarely taken branch as the probability of a split being instantiated with more than 1 field is very low.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 528,
        "deletions": 259,
        "changed_files": 19,
        "created_at": "2023-07-25T20:57:41Z",
        "closed_at": "2023-08-25T21:10:47Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 41,
        "deletions": 16,
        "changed_files": 4,
        "created_at": "2023-07-25T19:21:58Z",
        "closed_at": "2023-07-28T20:31:26Z",
        "merged_at": null,
        "body": "Unify LazyParseMode and LazyVerifyOption to ensure eager parsing on\nverification failure.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 391,
        "deletions": 125,
        "changed_files": 7,
        "created_at": "2023-07-25T16:42:03Z",
        "closed_at": "2023-09-01T10:02:20Z",
        "merged_at": null,
        "body": "Add MapFieldBuilder and change codegen to generate it and the put{field}BuilderIfAbsent method.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2023-07-25T13:55:54Z",
        "closed_at": "2023-07-25T22:16:16Z",
        "merged_at": null,
        "body": "Remove unnecessary branch.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 27,
        "deletions": 9,
        "changed_files": 1,
        "created_at": "2023-07-24T22:37:09Z",
        "closed_at": "2023-07-31T23:58:31Z",
        "merged_at": null,
        "body": "Replace a subset of .format calls with Emit inside MessageGenerator::GenerateOffsets\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-07-24T22:34:10Z",
        "closed_at": "2023-07-25T17:04:31Z",
        "merged_at": null,
        "body": "Unpoison memory in destructor\n\nAsan is designed with assumption that by default, stack is unpoisoned.\nWhat ever is poisoned by instrumentation in the stack frame, will be unpoisoned on return.\n\nThis assumption applies to user poisoned regions. If it left unpoisoned\nit may cause false reports in unrelated stack frames.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 30,
        "deletions": 20,
        "changed_files": 3,
        "created_at": "2023-07-24T22:27:01Z",
        "closed_at": "2023-08-01T23:41:11Z",
        "merged_at": null,
        "body": "Copy-construct (kSpawn) ParseContext rather than construct a new one and copy.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 5,
        "changed_files": 4,
        "created_at": "2023-07-24T21:29:15Z",
        "closed_at": "2023-08-25T21:10:49Z",
        "merged_at": null,
        "body": "Serialize FileDescriptorProto with raw and resolved features in Java.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-07-24T17:44:03Z",
        "closed_at": "2023-08-25T21:10:51Z",
        "merged_at": null,
        "body": "Internal Code Change\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 15,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-07-24T17:18:31Z",
        "closed_at": "2023-08-01T16:58:36Z",
        "merged_at": null,
        "body": "Add ByteString.isNotEmpty Kotlin extension function.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 226,
        "deletions": 145,
        "changed_files": 8,
        "created_at": "2023-07-24T16:42:40Z",
        "closed_at": "2023-07-24T19:01:03Z",
        "merged_at": null,
        "body": "Precompute the most common field properties in FieldGeneratorBase\n\nThis is a cleanup that is intended to reduce the noise in current and planned protocol compiler code, and improve readability of the code.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-07-24T15:49:27Z",
        "closed_at": "2023-07-27T21:27:07Z",
        "merged_at": null,
        "body": "Add debug out-of-bound checks to descriptor array accessors.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 25,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2023-07-22T23:43:47Z",
        "closed_at": "2023-08-07T16:44:06Z",
        "merged_at": null,
        "body": "Fix MessageDifferencer and MessagePatch to support the case where the two messages store different payload types in an Any field. Before this CL, MessageDifferencer::Compare would report false without producing any diff.\nAfter this CL, it will compute a diff by without interpreting the payloads.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 22,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-07-21T23:05:05Z",
        "closed_at": "2023-08-02T21:16:56Z",
        "merged_at": null,
        "body": "Annotate C++ oneof clear functions with set semantics.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 5,
        "changed_files": 3,
        "created_at": "2023-07-21T21:15:58Z",
        "closed_at": "2023-07-24T06:08:57Z",
        "merged_at": null,
        "body": "Remove unverified_lazy_message_sets option.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 35,
        "deletions": 23,
        "changed_files": 1,
        "created_at": "2023-07-21T19:07:30Z",
        "closed_at": "2023-07-21T20:26:00Z",
        "merged_at": null,
        "body": "Remove all lambdas from MapFieldBuilder\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 302,
        "changed_files": 4,
        "created_at": "2023-07-21T18:46:06Z",
        "closed_at": "2023-07-21T20:32:48Z",
        "merged_at": null,
        "body": "Automated rollback of commit 3ee67038e52a1398bdb5dd36304482f5615079e9.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-07-21T18:14:41Z",
        "closed_at": "2023-07-21T20:32:43Z",
        "merged_at": null,
        "body": "Fix Java Maven tests by making sure to use Java 8\n\nWe have two failing CI tests that exercise Maven and report this error: `lambda\nexpressions are not supported in -source 1.7` This change tweaks some versions\nin pom.xml to hopefully fix the tests. This also makes the Maven build more\nconsistent with the Bazel build, which is already on Java 8.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 28,
        "deletions": 383,
        "changed_files": 29,
        "created_at": "2023-07-21T15:49:06Z",
        "closed_at": "2023-07-21T17:53:04Z",
        "merged_at": "2023-07-21T17:53:04Z",
        "body": "\u2026eports of\r\n\r\ncompilers falling over due to the size of translation units.\r\n\r\nPiperOrigin-RevId: 549653990",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 33,
        "changed_files": 1,
        "created_at": "2023-07-21T09:03:43Z",
        "closed_at": "2023-07-22T09:36:35Z",
        "merged_at": null,
        "body": "Internal Code Change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-07-20T21:02:55Z",
        "closed_at": "2023-08-07T14:59:43Z",
        "merged_at": null,
        "body": "testing\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 78,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-07-20T17:17:14Z",
        "closed_at": "2023-08-25T21:10:54Z",
        "merged_at": null,
        "body": "Add streaming bytes read support to CodedInputStream\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 28,
        "deletions": 221,
        "changed_files": 9,
        "created_at": "2023-07-20T16:31:59Z",
        "closed_at": "2023-08-25T21:10:55Z",
        "merged_at": null,
        "body": "In OSS mode omit some extern template specializations. We have seen reports of\ncompilers falling over due to the size of translation units.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-07-20T09:34:23Z",
        "closed_at": "2023-08-02T03:18:04Z",
        "merged_at": null,
        "body": null,
        "comments": 3
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-07-19T22:45:36Z",
        "closed_at": "2023-07-20T19:59:40Z",
        "merged_at": null,
        "body": "Ensure `FileDescriptor::edition_` is correctly initialized when built from `FileDescriptorProto`\n\nWhen `DescriptorBuilder::BuildFileImpl` is called, `alloc.AllocateArray` appears to be allocating an uninitialized object. This means every field inside FileDescriptor should be initialized, and edition_ may be ignored if not present. This can then lead to a SEGFAULT later in `FileDescriptor::edition()`, with a check of `edition_ == nullptr ? anti_hyrum_string : *edition_;` potentially dereferencing `edition_` when it's uninitialized.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-07-19T20:12:04Z",
        "closed_at": "2023-07-19T21:23:19Z",
        "merged_at": null,
        "body": "wire_format_unittest for optimize_for = CODE_SIZE\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 302,
        "deletions": 10,
        "changed_files": 4,
        "created_at": "2023-07-19T15:37:57Z",
        "closed_at": "2023-07-20T19:50:23Z",
        "merged_at": null,
        "body": "Add MapFieldBuilder to support a later change to codegen.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 12,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-07-19T12:54:20Z",
        "closed_at": "2023-07-24T11:29:46Z",
        "merged_at": null,
        "body": "Consider the protobuf.Any invalid if typeUrl.split(\"/\") returns an empty array.\n\nCurrently that this case is not considered, the code throws `ArrayIndexOutOfBoundsException` which can escape `protobuf.toString()` method.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 136,
        "deletions": 9,
        "changed_files": 45,
        "created_at": "2023-07-19T04:24:01Z",
        "closed_at": "2023-08-25T21:10:57Z",
        "merged_at": null,
        "body": "Allow clients to enable unsigned integer overflow sanitizer.\n\nProtobuf uses unsigned overflow extensively as well-defined behavior in line with the C++ standard, but client code may want to enable it to catch unexpected overflows. Disable the sanitizer for Protobuf code.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 134,
        "deletions": 91,
        "changed_files": 4,
        "created_at": "2023-07-18T20:21:04Z",
        "closed_at": "2023-07-26T16:47:41Z",
        "merged_at": null,
        "body": "Minor cleanups for TDP:\n - Separate per message options out of PerFieldOptions. We don't need to query\nthese once per field, and they might be useful even when no fields exist.\n - Move FastEv check for !uses_codegen into generated_message_tctable_gen.cc\ninstead of checking for function names. It is more robust this way.\n - Use a variant in FastFieldInfo to make it clear which fields belong to each alternative, and add accessors to easily check for the alternatives.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-07-18T18:48:02Z",
        "closed_at": "2023-07-19T20:59:20Z",
        "merged_at": null,
        "body": "Move AccessorGenerator destructor to class declaration\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-07-18T18:35:41Z",
        "closed_at": "2023-07-19T17:43:33Z",
        "merged_at": null,
        "body": "nested_messages_test typo fix: accesible -> accessible\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-07-18T14:49:32Z",
        "closed_at": "2023-07-18T17:22:57Z",
        "merged_at": "2023-07-18T17:22:57Z",
        "body": "Amalgamation staleness tests did not identify any updates.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 15,
        "changed_files": 1,
        "created_at": "2023-07-18T14:29:46Z",
        "closed_at": "2023-07-18T17:19:37Z",
        "merged_at": null,
        "body": "Derive Debug for ProxyVTable\n\nThis is now possible since we use the latest Rust toolchain.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4396,
        "deletions": 185,
        "changed_files": 42,
        "created_at": "2023-07-18T14:09:48Z",
        "closed_at": "2023-07-25T06:18:00Z",
        "merged_at": null,
        "body": "Supersedes #11483.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 740,
        "deletions": 40,
        "changed_files": 17,
        "created_at": "2023-07-18T12:57:07Z",
        "closed_at": "2023-07-20T07:36:09Z",
        "merged_at": null,
        "body": "Add support for proto_library with more than one srcs\n\nIf a proto_library has more than one srcs, we designate the first one as the primary (that file will be passed to rustc as the crate root). All other files will represent (internal) submodules of the crate.\n\nIn general, Rust users won't see which .proto file a message came from, they will only see a crate corresponding to the entire proto_library, and in it public submodules for all `package` statements in all .proto files in the proto_library sources. Therefore in this CL we reexport all messages from non primary sources into their corresponding public modules (= packages declared in their owning .proto files).\n\nBesides the common case this CL also handles .proto files without package statement, and a subset of behaviors needed for public import functionality.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-07-18T08:56:22Z",
        "closed_at": "2023-07-18T13:36:45Z",
        "merged_at": null,
        "body": "Prepare `osgi.bzl` for `java_output.source_jars` API change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-07-18T07:20:40Z",
        "closed_at": "2023-07-18T08:47:50Z",
        "merged_at": null,
        "body": "Update rules_rust\n\nThe side-effect of this change is that we get the most recent Rust toolchain on the CI.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-07-18T05:48:13Z",
        "closed_at": "2023-07-19T17:30:37Z",
        "merged_at": null,
        "body": "Only handles proto2 syntax atm, but I couldn't find any other implementation of something that seemed rather simple and sometimes useful, to integrate with third-party tools meant to run directly on .proto files.\r\n\r\nExample usage: `protoc Example.proto --descriptor_set_in file_descriptor_set.pb --proto_out .`",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 329,
        "deletions": 24,
        "changed_files": 4,
        "created_at": "2023-07-18T01:02:30Z",
        "closed_at": "2023-08-25T21:11:00Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-07-18T01:01:13Z",
        "closed_at": "2023-07-18T02:39:57Z",
        "merged_at": null,
        "body": "Remove stale comment about subclasses.\n\nMessage types have been marked as final for some time.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 36,
        "deletions": 23,
        "changed_files": 3,
        "created_at": "2023-07-17T19:13:51Z",
        "closed_at": "2023-07-20T20:10:05Z",
        "merged_at": null,
        "body": "Add protobuf python keyword support in path for stub generator. Also added tests for\nkeywords in path\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-07-17T16:01:16Z",
        "closed_at": "2023-08-25T21:11:02Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 14,
        "changed_files": 1,
        "created_at": "2023-07-17T14:47:14Z",
        "closed_at": "2023-08-25T21:11:05Z",
        "merged_at": null,
        "body": "Invoke the pddm validations via bazel\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 14,
        "changed_files": 1,
        "created_at": "2023-07-17T13:22:36Z",
        "closed_at": "2023-07-17T14:51:12Z",
        "merged_at": null,
        "body": "Invoke the pddm validations via bazel\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2023-07-16T05:58:08Z",
        "closed_at": "2023-07-16T22:15:44Z",
        "merged_at": null,
        "body": "Internal change.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-07-14T20:25:58Z",
        "closed_at": "2023-07-17T21:05:40Z",
        "merged_at": null,
        "body": "Closes https://github.com/protocolbuffers/protobuf/issues/13250",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 62,
        "deletions": 179,
        "changed_files": 9,
        "created_at": "2023-07-14T19:03:49Z",
        "closed_at": "2023-08-21T21:58:13Z",
        "merged_at": null,
        "body": "Now that we have dropped support for old PHP, we can remove this compatibility layer, which will simplify the code.\r\n\r\nThis PR supersedes https://github.com/protocolbuffers/protobuf/pull/13289. I had to move the PR to be based on a branch of this repo, since it modifies workflow files.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 215,
        "deletions": 3,
        "changed_files": 5,
        "created_at": "2023-07-14T18:50:24Z",
        "closed_at": "2023-07-20T01:12:37Z",
        "merged_at": null,
        "body": "Add Arena enabled constructors to ArenaStringPtr\n\nThis optimizes non const and copy initialization of arena string values. String hardening is automatically performed on as needed by the ArenaStringPtr class, removing the need for extra clutter or set operations added by the protocol compiler in generated code.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 74,
        "deletions": 187,
        "changed_files": 3,
        "created_at": "2023-07-14T17:40:06Z",
        "closed_at": "2023-07-31T16:49:45Z",
        "merged_at": "2023-07-31T16:49:45Z",
        "body": "Cherry-pick to avoid potential stack overflow.\r\n\r\nPiperOrigin-RevId: 548128917",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-07-14T15:41:40Z",
        "closed_at": "2023-07-14T18:07:10Z",
        "merged_at": null,
        "body": "Add Arena enabled copy constructor to InlinedStringField\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-07-14T15:23:37Z",
        "closed_at": "2023-07-17T14:09:33Z",
        "merged_at": null,
        "body": "gcc is complaining that MapFieldBase has virtual methods but non-virtual destructor.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2023-07-14T00:16:19Z",
        "closed_at": "2023-07-17T16:20:26Z",
        "merged_at": null,
        "body": "Cleanup ZeroCopyInputStream and ZeroCopyOutputStream\n\n- Expunge unnecessary forward declarations\n- Delete move constructor and move assignment\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 41,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2023-07-13T23:46:57Z",
        "closed_at": "2023-07-17T16:39:29Z",
        "merged_at": null,
        "body": "Add V0 support for fixed ints (32 and 64)\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1487,
        "deletions": 420,
        "changed_files": 45,
        "created_at": "2023-07-13T23:44:33Z",
        "closed_at": "2023-07-15T01:07:29Z",
        "merged_at": "2023-07-15T01:07:29Z",
        "body": "This collection of changes should provide all of the information plugin owners need to start implementing editions support",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 74,
        "deletions": 187,
        "changed_files": 3,
        "created_at": "2023-07-13T23:15:49Z",
        "closed_at": "2023-07-14T15:09:23Z",
        "merged_at": null,
        "body": "Automated rollback of commit adb2c4b415c35cda3e4394384ec579ea8dd8ec92.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 122,
        "deletions": 51,
        "changed_files": 13,
        "created_at": "2023-07-13T21:49:35Z",
        "closed_at": "2023-07-13T23:29:05Z",
        "merged_at": null,
        "body": "Allow code generators to specify whether or not they support editions.\n\nEditions are still flag-guarded by the `--experimental_editions` flag for now, but once that's removed in a later release generators will need to explicitly specify that their support.  This will avoid cases where generators may happen to work for editions but produce incorrect code.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 107,
        "deletions": 40,
        "changed_files": 6,
        "created_at": "2023-07-13T20:40:12Z",
        "closed_at": "2023-07-18T18:53:17Z",
        "merged_at": null,
        "body": "Improve overall `unsafe` hygiene\n\nThis adds `#![deny(unsafe_op_in_unsafe_fn)]` which removes the\nimplicit `unsafe` block that `unsafe fn` does.\n\nIt also adds many more `SAFETY` docs, corrects some incomplete\nones, and catches a null pointer returned by `upb_Arena_New`.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-07-13T19:48:06Z",
        "closed_at": "2023-07-13T22:05:06Z",
        "merged_at": null,
        "body": "Make Arena a friend class as it needs to be able to use InternalVisibility\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 4,
        "changed_files": 4,
        "created_at": "2023-07-13T19:36:51Z",
        "closed_at": "2023-09-11T20:20:23Z",
        "merged_at": null,
        "body": "The current Kotlin code generator creates code which fails to compile with imports like:\r\n\r\n```\r\nsyntax = \"proto3\";\r\npackage net.example.v1;\r\nmessage Sample {\r\n  string net = 1;\r\n}\r\n```\r\n\r\nThis results in a condition where 'net' is ambiguous in some cases (could refer to the field or the package). To avoid these issues, the code generator should enclose package paths in backticks:\r\n\r\n```\r\nnet.example.v1.SampleKt => `net.example.v1`.SampleKt\r\n```\r\n\r\nFixes #13182.",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-07-13T18:55:52Z",
        "closed_at": "2023-07-13T20:09:14Z",
        "merged_at": "2023-07-13T20:09:14Z",
        "body": "PiperOrigin-RevId: 542579832",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-07-13T16:54:29Z",
        "closed_at": "2023-08-25T21:11:07Z",
        "merged_at": null,
        "body": "Add `Copy()` virtual function to MessageLite\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 88,
        "deletions": 7,
        "changed_files": 3,
        "created_at": "2023-07-13T16:38:21Z",
        "closed_at": "2023-07-13T19:30:54Z",
        "merged_at": null,
        "body": "Protobuf's Linakge Monitor check to use a local test BOM rather than google-cloud-shared-dependencies\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-07-13T16:02:51Z",
        "closed_at": "2023-08-25T21:11:09Z",
        "merged_at": null,
        "body": "Put a 4k limit on preallocation to prevent OOM from malformed inputs.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 20,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-07-13T13:44:12Z",
        "closed_at": "2023-07-13T16:19:11Z",
        "merged_at": null,
        "body": "The `unittest_proto3_bad_macros.proto` test is failing on FreeBSD due to the GID_MAX/UID_MAX macros. This is because `port_def.inc` is missing these entries (as well as TRUE/FALSE) for FreeBSD. This PR adds those missing macros.\r\nSee compile errors below:\r\n\r\n```\r\n[ 87%] Building CXX object CMakeFiles/tests.dir/src/google/protobuf/unittest_preserve_unknown_enum2.pb.cc.o\r\n[ 87%] Building CXX object CMakeFiles/tests.dir/src/google/protobuf/unittest_proto3.pb.cc.o\r\n[ 87%] Building CXX object CMakeFiles/tests.dir/src/google/protobuf/unittest_proto3_arena.pb.cc.o\r\n[ 87%] Building CXX object CMakeFiles/tests.dir/src/google/protobuf/unittest_proto3_arena_lite.pb.cc.o\r\n[ 88%] Building CXX object CMakeFiles/tests.dir/src/google/protobuf/unittest_proto3_bad_macros.pb.cc.o\r\nIn file included from /usr/home/jpb/protobuf/src/google/protobuf/unittest_proto3_bad_macros.pb.cc:4:\r\n/usr/home/jpb/protobuf/src/google/protobuf/unittest_proto3_bad_macros.pb.h:71:15: error: expected unqualified-id\r\nconstexpr GID GID_MAX = static_cast<GID>(0);\r\n              ^\r\n/usr/include/sys/limits.h:85:18: note: expanded from macro 'GID_MAX'\r\n#define GID_MAX         UINT_MAX        /* max value for a gid_t */\r\n                        ^\r\n/usr/include/sys/limits.h:59:18: note: expanded from macro 'UINT_MAX'\r\n#define UINT_MAX        __UINT_MAX      /* max value for an unsigned int */\r\n                        ^\r\n/usr/include/x86/_limits.h:58:20: note: expanded from macro '__UINT_MAX'\r\n#define __UINT_MAX      0xffffffff      /* max value for an unsigned int */\r\n                        ^\r\nIn file included from /usr/home/jpb/protobuf/src/google/protobuf/unittest_proto3_bad_macros.pb.cc:4:\r\n/usr/home/jpb/protobuf/src/google/protobuf/unittest_proto3_bad_macros.pb.h:102:15: error: expected unqualified-id\r\nconstexpr UID UID_MAX = static_cast<UID>(0);\r\n              ^\r\n/usr/include/sys/limits.h:86:18: note: expanded from macro 'UID_MAX'\r\n#define UID_MAX         UINT_MAX        /* max value for a uid_t */\r\n                        ^\r\n/usr/include/sys/limits.h:59:18: note: expanded from macro 'UINT_MAX'\r\n#define UINT_MAX        __UINT_MAX      /* max value for an unsigned int */\r\n                        ^\r\n/usr/include/x86/_limits.h:58:20: note: expanded from macro '__UINT_MAX'\r\n#define __UINT_MAX      0xffffffff      /* max value for an unsigned int */\r\n                        ^\r\n2 errors generated.\r\ngmake[2]: *** [CMakeFiles/tests.dir/build.make:2038: CMakeFiles/tests.dir/src/google/protobuf/unittest_proto3_bad_macros.pb.cc.o] Error 1\r\ngmake[1]: *** [CMakeFiles/Makefile2:1178: CMakeFiles/tests.dir/all] Error 2\r\ngmake: *** [Makefile:146: all] Error 2\r\n```",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 184,
        "deletions": 172,
        "changed_files": 3,
        "created_at": "2023-07-13T13:15:43Z",
        "closed_at": "2023-07-13T20:23:23Z",
        "merged_at": null,
        "body": "Sync UPB. (#13286)\n\nCloses #13286\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/13286 from JasonLunn:upd-update-for-ffi bac21239825744a51cf6de7921c95b0874373c59\nFUTURE_COPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/13286 from JasonLunn:upd-update-for-ffi bac21239825744a51cf6de7921c95b0874373c59\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 240,
        "deletions": 1,
        "changed_files": 9,
        "created_at": "2023-07-13T01:07:38Z",
        "closed_at": "2023-08-25T21:11:11Z",
        "merged_at": null,
        "body": "Implement singular message fields for V0 - checkpoint 1\n\nAdd plumbing for upb tests, as we'll tackle the cpp side once we get that going.\nAdd `GetRsQualifiedName` to convert from our underscored classes to `_::` when appropriate.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 580,
        "deletions": 11,
        "changed_files": 3,
        "created_at": "2023-07-13T00:31:13Z",
        "closed_at": "2023-07-26T16:18:09Z",
        "merged_at": null,
        "body": "Add UTF-8 handling to ProtoStr\n\nThis mostly uses a copied `Utf8Chunks` utility from nightly Rust.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 257,
        "deletions": 110,
        "changed_files": 18,
        "created_at": "2023-07-12T23:52:53Z",
        "closed_at": "2023-07-13T21:38:07Z",
        "merged_at": null,
        "body": "Send full feature sets to plugins.\n\nThere are 4 different feature sets for every descriptor:\n* Runtime/resolved - Used to make runtime decisions\n* Source/resolved - Used to make codegen decisions\n* Runtime/unresolved - Used to reason about the original proto file during runtime\n* Source/unresolved - Used to validate features during codegen\n\nPlugins will receive all 4 of these.  Unresolved features will show up in the `raw_features` fields nested inside `features`.  The runtime features will be in the `proto_file` field of the request, while the source features will be in the unstripped `source_file_descriptors` field.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 30,
        "deletions": 15,
        "changed_files": 5,
        "created_at": "2023-07-12T22:16:58Z",
        "closed_at": "2023-07-15T03:12:11Z",
        "merged_at": null,
        "body": "Prepare for 9.2 to be removed.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 512,
        "deletions": 16,
        "changed_files": 10,
        "created_at": "2023-07-12T22:11:08Z",
        "closed_at": "2023-07-13T17:52:28Z",
        "merged_at": null,
        "body": "Implement helpers for exporting all FeatureSets to generators.\n\nThere are 4 different feature sets for every descriptor:\n* Runtime/resolved - Used to make runtime decisions\n* Source/resolved - Used to make codegen decisions\n* Runtime/raw - Used to reason about the original proto file during runtime\n* Source/raw - Used to validate features during codegen\n\nAll of these will need to be shipped to code generators.  While C++ generators can use the C++ runtime to reconstruct these, they won't end up in the FileDescriptorProtos we send to runtimes.  Similarly, non-C++ generators wouldn't be able to get them without duplicating our feature resolution logic.  This change adds a helper that allows us to bundle all of these into the protos we send to generators.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 34,
        "deletions": 12,
        "changed_files": 2,
        "created_at": "2023-07-12T21:17:39Z",
        "closed_at": "2023-07-12T22:18:13Z",
        "merged_at": null,
        "body": "Unblocks execution of these tests on JRuby FFI.\r\n\r\nAutomated reformatting of WORKSPACE with documentary comment to ease future debugging of JRuby tests locally.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 189,
        "deletions": 53,
        "changed_files": 6,
        "created_at": "2023-07-12T19:21:53Z",
        "closed_at": "2023-07-13T00:41:40Z",
        "merged_at": null,
        "body": "Cluster table driven parsing tables into hot/lukewarm sections.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 202,
        "deletions": 9,
        "changed_files": 2,
        "created_at": "2023-07-12T19:19:02Z",
        "closed_at": "2023-07-13T18:49:28Z",
        "merged_at": null,
        "body": "Define the shape of ProtoStr as a DST\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 40,
        "deletions": 141,
        "changed_files": 6,
        "created_at": "2023-07-12T19:09:00Z",
        "closed_at": "2023-07-31T15:53:21Z",
        "merged_at": null,
        "body": "Now that we have dropped support for old PHP, we can remove this compatibility layer, which will simplify the code.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-07-12T18:18:51Z",
        "closed_at": "2023-07-12T19:34:49Z",
        "merged_at": "2023-07-12T19:34:49Z",
        "body": "MSVC compilers generate warnings that the default destructor is implicitly deleted, which causes errors on /W1. While this is a pedantic warning (error), we can easily make the deletion explicit to avoid these warnings.\r\n\r\nPiperOrigin-RevId: 547548886",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-07-12T16:51:38Z",
        "closed_at": "2023-07-12T18:16:10Z",
        "merged_at": null,
        "body": "Explicitly delete the destructor for the internal `Rep` structure.\n\nMSVC compilers generate warnings that the default destructor is implicitly deleted, which causes errors on /W1. While this is a pedantic warning (error), we can easiuly make the deletion explicit to avoid these warnings.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 184,
        "deletions": 172,
        "changed_files": 3,
        "created_at": "2023-07-12T16:33:26Z",
        "closed_at": "2023-07-13T20:23:22Z",
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-07-12T16:31:27Z",
        "closed_at": "2023-07-13T16:02:05Z",
        "merged_at": null,
        "body": "Put a 4k limit on preallocation to prevent OOM from malformed inputs.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 28,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-07-12T15:23:20Z",
        "closed_at": "2023-07-12T18:02:27Z",
        "merged_at": null,
        "body": "Add InternalVisbility constructors to ImplicitWeakMessage classes\n\nThis CLs adds internally visible arena enabled constructors and copy constructors to ImplicitWeakMessage and WeakRepeatedPtrField.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 14,
        "deletions": 13,
        "changed_files": 2,
        "created_at": "2023-07-12T13:10:17Z",
        "closed_at": "2023-07-12T17:16:08Z",
        "merged_at": null,
        "body": "Add InternalVisibility arena constructor to ExtensionSet\n\nThis change adds an arena enabled constructor guarded by `InternalVisibility`. It also moves the existing constructor inline as it's trivial, and implements the default constructor in terms of the (future private) arena constructor.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 58,
        "deletions": 20,
        "changed_files": 4,
        "created_at": "2023-07-12T07:58:37Z",
        "closed_at": "2023-08-29T10:02:37Z",
        "merged_at": null,
        "body": "Comparing a proto message with an object of unknown returns NotImplemented\n\nThe Python comparison protocol requires that if an object doesn't know how to\ncompare itself to an object of a different type, it returns NotImplemented\nrather than False. The interpreter will then try performing the comparison using\nthe other operand. This translates, for protos, to:\nIf a proto message doesn't know how to compare itself to an object of\nnon-message type, it returns NotImplemented. This way, the interpreter will then\ntry performing the comparison using the comparison methods of the other object,\nwhich may know how to compare itself to a message. If not, then Python will\nreturn the combined result (e.g., if both objects don't know how to perform\n__eq__, then the equality operator `==` return false).\nThis change allows one to compare a proto with custom matchers such as mock.ANY\nthat the message doesn't know how to compare to, regardless of whether\nmock.ANY is on the right-hand side or left-hand side of the equality (prior to\nthis change, it only worked with mock.ANY on the left-hand side).\n\nFixes https://github.com/protocolbuffers/protobuf/issues/9173\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-07-12T00:30:19Z",
        "closed_at": "2023-07-12T12:23:17Z",
        "merged_at": null,
        "body": "Add tuple support to set Struct\n\nfixes https://github.com/protocolbuffers/protobuf/issues/13205\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 40,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2023-07-11T23:32:54Z",
        "closed_at": "2023-07-12T15:34:56Z",
        "merged_at": null,
        "body": "Add V0 support for floats and doubles\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 10,
        "changed_files": 1,
        "created_at": "2023-07-11T23:30:23Z",
        "closed_at": "2023-07-12T19:16:23Z",
        "merged_at": "2023-07-12T19:16:23Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 528,
        "deletions": 224,
        "changed_files": 8,
        "created_at": "2023-07-11T22:47:49Z",
        "closed_at": "2023-07-12T22:04:13Z",
        "merged_at": null,
        "body": "Add a `raw_features` field to FeatureSet.\n\nThis will be used for tracking the unresolved feature sets from the original proto file.  Notable use-cases for this include:\n* Code generators that need to validate their own features\n* Runtimes that need to be able to accurately round-trip the original protos\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 37,
        "deletions": 7,
        "changed_files": 2,
        "created_at": "2023-07-11T22:05:54Z",
        "closed_at": "2023-07-12T02:49:49Z",
        "merged_at": null,
        "body": "Add internally visible Arena enabled copy constructor\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-07-11T20:13:16Z",
        "closed_at": "2023-07-13T07:02:45Z",
        "merged_at": null,
        "body": "Don't miss end_group_tag when counting try_num_fast_fields.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-07-11T18:07:53Z",
        "closed_at": "2023-07-11T22:37:03Z",
        "merged_at": null,
        "body": "Add protected `internal_visibility()` for Message derived classes.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 26,
        "deletions": 22,
        "changed_files": 7,
        "created_at": "2023-07-11T18:04:03Z",
        "closed_at": "2023-07-11T20:44:05Z",
        "merged_at": null,
        "body": "Move the two bools for EmitComment to a flags enum\n\nMakes call sites easier to ready and should make things safer\nif this ever needs some other support in the future.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 50,
        "deletions": 66,
        "changed_files": 9,
        "created_at": "2023-07-11T16:15:26Z",
        "closed_at": "2023-07-11T18:32:13Z",
        "merged_at": null,
        "body": "Updated Ruby min version to 2.7, and removed some compat code\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 293,
        "deletions": 1,
        "changed_files": 4,
        "created_at": "2023-07-11T00:58:16Z",
        "closed_at": "2023-07-11T18:13:51Z",
        "merged_at": null,
        "body": "Define the shape of BytesMut with stubbed methods\n\nThis is the primary mutator for `bytes` fields, which proxy `[u8]`.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 21588,
        "deletions": 21163,
        "changed_files": 5,
        "created_at": "2023-07-10T22:55:46Z",
        "closed_at": "2023-07-11T16:11:45Z",
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 40,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2023-07-10T21:29:24Z",
        "closed_at": "2023-07-11T15:41:03Z",
        "merged_at": null,
        "body": "Add V0 support for signed ints\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 11,
        "changed_files": 3,
        "created_at": "2023-07-10T21:02:37Z",
        "closed_at": "2023-07-11T16:11:47Z",
        "merged_at": null,
        "body": "Clearify that ExtensionGenerator gets a message or root class.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 20,
        "deletions": 21,
        "changed_files": 5,
        "created_at": "2023-07-10T20:27:46Z",
        "closed_at": "2023-07-11T21:50:37Z",
        "merged_at": null,
        "body": "Use Printer::Emit formatting to remove optional args from GetOptionalDeprecatedAttribute.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 45,
        "changed_files": 2,
        "created_at": "2023-07-10T20:25:24Z",
        "closed_at": "2023-07-11T15:49:09Z",
        "merged_at": null,
        "body": "Remove no longer needed comment helper.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 285,
        "deletions": 264,
        "changed_files": 11,
        "created_at": "2023-07-10T19:53:33Z",
        "closed_at": "2023-07-11T14:54:45Z",
        "merged_at": null,
        "body": "Move MessageGenerator::GenerateSource over to Printer::Emit\n\nThere are whatespace changes because I couldn't get some of the\ngenerated CPreProcessor things to line up in the exact same way.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 725,
        "deletions": 756,
        "changed_files": 6,
        "created_at": "2023-07-10T18:03:04Z",
        "closed_at": "2023-07-10T20:48:19Z",
        "merged_at": null,
        "body": "Clean up macros related to the phased rollout of TSan validation.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 899,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2023-07-10T17:08:30Z",
        "closed_at": "2023-07-31T17:47:21Z",
        "merged_at": null,
        "body": "This PR has the changes for parsing array of varints. Most of the changes originate in the `ReadPackedVarint` and `ReadPackedVarintArray` functions. The core of optimizations is to break the one-at-a-time parsing in the original code into a series of steps to leverage SIMD instructions.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 117,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-07-10T17:08:16Z",
        "closed_at": "2023-07-31T17:48:07Z",
        "merged_at": null,
        "body": "This PR has the changes for parsing variable-length integers. These changes are based on the BMI2 instruction. This instruction may not be available on all the CPUs so a check is added to consider the implementation based on the available instruction set.  ",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 76,
        "deletions": 69,
        "changed_files": 1,
        "created_at": "2023-07-10T17:06:44Z",
        "closed_at": "2023-07-10T18:25:46Z",
        "merged_at": null,
        "body": "Move MessageGenerator::GenerateMessageHeader over to Printer::Emit\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 105,
        "deletions": 107,
        "changed_files": 7,
        "created_at": "2023-07-10T15:10:11Z",
        "closed_at": "2023-07-10T17:57:26Z",
        "merged_at": null,
        "body": "Move *FieldGeneator over to Printer::Emit.\n\nMinor updates to how comments are output to have a method\nso folks can directly call Emit to handle multline things correctly.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 9,
        "changed_files": 1,
        "created_at": "2023-07-09T16:37:02Z",
        "closed_at": "2023-07-10T14:09:10Z",
        "merged_at": null,
        "body": "Migrate hash_map<bool, T> to std::array<T, 2>\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2023-07-09T03:06:52Z",
        "closed_at": "2023-07-10T09:59:46Z",
        "merged_at": null,
        "body": "Improve doc comments\n\nNo need to say \"represents\" when describing a type (all types represent\nsomething in real world, they are not the real thing), and \"ABI-compatible\"\nneeds a dash.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-07-07T23:26:55Z",
        "closed_at": "2023-07-11T14:45:21Z",
        "merged_at": null,
        "body": "This option will be used by extensions to the [Digital Twins Definition Language](https://github.com/Azure/opendigitaltwins-dtdl) to support Protobuf serialization.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 70,
        "deletions": 22,
        "changed_files": 2,
        "created_at": "2023-07-07T23:18:31Z",
        "closed_at": "2023-07-12T23:03:35Z",
        "merged_at": null,
        "body": "Expand VisitDescriptor to support mutable access to the proto.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 165,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2023-07-07T22:04:10Z",
        "closed_at": "2023-07-12T02:37:27Z",
        "merged_at": null,
        "body": "Implement HasBits in terms of std::array<>\n\nThis gives us initialization, value semantics and diagnostics benefits of std::array<>. Notably, it provides easy constant / default initialization of donated string bit masks\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2380,
        "deletions": 721,
        "changed_files": 8,
        "created_at": "2023-07-07T22:02:53Z",
        "closed_at": "2023-08-25T21:11:13Z",
        "merged_at": null,
        "body": "Add a `raw_features` field to FeatureSet.\n\nThis will be used for tracking the unresolved feature sets from the original proto file.  Notable use-cases for this include:\n* Code generators that need to validate their own features\n* Runtimes that need to be able to accurately round-trip the original protos\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-07-07T19:59:14Z",
        "closed_at": "2023-08-25T21:11:15Z",
        "merged_at": null,
        "body": "Fields in the same chunk should have the same rareness.\n\nIn `CollectFields`, it groups `equivalent` fields into the same chunk, and use the first field's rareness as the chunk's rareness ([code](https://source.corp.google.com/piper///depot/google3/third_party/protobuf/compiler/cpp/message.cc;rcl=545840566;l=403)).\nBut the `equivalent` lambdas don't consider rareness, so a mixture of rare and non-rare fields can end up in the same chunk, in which case it's incorrect to use the one field's rareness to represent the whole chunk's.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 7,
        "changed_files": 6,
        "created_at": "2023-07-07T16:48:02Z",
        "closed_at": "2023-07-08T16:00:47Z",
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4047,
        "deletions": 197,
        "changed_files": 27,
        "created_at": "2023-07-07T02:08:32Z",
        "closed_at": "2023-08-25T21:11:17Z",
        "merged_at": null,
        "body": "Experimental\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 40,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2023-07-06T23:33:37Z",
        "closed_at": "2023-07-10T14:00:40Z",
        "merged_at": null,
        "body": "In this CL, we add V0 support for unsigned ints (32 and 64).\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4608,
        "deletions": 299,
        "changed_files": 33,
        "created_at": "2023-07-06T23:17:45Z",
        "closed_at": "2023-07-12T20:30:47Z",
        "merged_at": null,
        "body": "Nothing to see here\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 14,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-07-06T21:46:11Z",
        "closed_at": "2023-07-12T15:43:57Z",
        "merged_at": null,
        "body": "Mark `FieldDescriptor.hasOptionalKeyword()` as deprecated.\n\nThis API will be removed in a future breaking change.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-07-06T21:38:01Z",
        "closed_at": "2023-07-06T23:36:54Z",
        "merged_at": null,
        "body": "Automated rollback of commit 0275e516229daca19d29b5915ec78fe19e317e43.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 50,
        "deletions": 50,
        "changed_files": 25,
        "created_at": "2023-07-06T20:53:43Z",
        "closed_at": "2023-07-10T14:37:16Z",
        "merged_at": null,
        "body": "Internal Change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 21,
        "deletions": 3,
        "changed_files": 6,
        "created_at": "2023-07-06T18:03:15Z",
        "closed_at": "2023-07-07T17:19:32Z",
        "merged_at": null,
        "body": "Internal change.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 46,
        "deletions": 35,
        "changed_files": 2,
        "created_at": "2023-07-06T16:55:50Z",
        "closed_at": "2023-07-07T17:20:40Z",
        "merged_at": null,
        "body": "Reverse the dependency between message.h and reflection.h.\nOtherwise we would have undefined templates in message.h.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 48,
        "deletions": 74,
        "changed_files": 1,
        "created_at": "2023-07-06T16:01:18Z",
        "closed_at": "2023-07-06T17:50:43Z",
        "merged_at": null,
        "body": "Move ExtensionGenerator over to Printer::Emit.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 138,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2023-07-06T14:51:41Z",
        "closed_at": "2023-07-06T16:48:53Z",
        "merged_at": null,
        "body": "Add InternalVisibility class\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 126,
        "deletions": 0,
        "changed_files": 4,
        "created_at": "2023-07-06T14:36:13Z",
        "closed_at": "2023-07-10T17:15:18Z",
        "merged_at": null,
        "body": "Add test that ensures rust protos build with reserved keywords\n\nAlso confirmed that this fails to build without the `r#` inside singular_scalar.cc\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 25,
        "deletions": 15,
        "changed_files": 1,
        "created_at": "2023-07-06T01:58:25Z",
        "closed_at": "2023-07-06T21:25:38Z",
        "merged_at": null,
        "body": "Use the default generated pool for some message factory tests.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 82,
        "deletions": 12,
        "changed_files": 3,
        "created_at": "2023-07-06T01:39:25Z",
        "closed_at": "2023-07-06T23:29:41Z",
        "merged_at": null,
        "body": "Add InternalVisibility and Arena enabled copy constructor to RepeatedField\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 13,
        "changed_files": 2,
        "created_at": "2023-07-05T22:32:04Z",
        "closed_at": "2023-07-06T19:09:28Z",
        "merged_at": null,
        "body": "Require PHP version >=8.0, Ruby >=2.7, and Python >=3.8\n\nIf you are running an older version of PHP, you can install a previous release\nof the protobuf PHP extension by running pecl install protobuf-3.23.3.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 30,
        "deletions": 33,
        "changed_files": 1,
        "created_at": "2023-07-05T21:38:38Z",
        "closed_at": "2023-07-06T18:08:51Z",
        "merged_at": null,
        "body": "Move EnumFieldGenerator over to Printer::Print\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 47,
        "deletions": 51,
        "changed_files": 1,
        "created_at": "2023-07-05T21:26:28Z",
        "closed_at": "2023-07-06T15:14:22Z",
        "merged_at": null,
        "body": "Move OneofGenerator over to Printer::Emit\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 17,
        "deletions": 51,
        "changed_files": 3,
        "created_at": "2023-07-05T20:15:01Z",
        "closed_at": "2023-08-02T12:46:48Z",
        "merged_at": null,
        "body": "Optimize `RepeatedPtrField`'s swap.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2023-07-05T20:04:56Z",
        "closed_at": "2023-07-05T21:18:19Z",
        "merged_at": "2023-07-05T21:18:19Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 255,
        "deletions": 30,
        "changed_files": 7,
        "created_at": "2023-07-05T19:30:53Z",
        "closed_at": "2023-07-06T17:25:55Z",
        "merged_at": null,
        "body": "Add InternalVisibility and Arena enabled copy constructor to Map\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 255,
        "deletions": 201,
        "changed_files": 3,
        "created_at": "2023-07-05T19:02:06Z",
        "closed_at": "2023-07-06T14:37:39Z",
        "merged_at": null,
        "body": "Move EnumGenerator over to Emit.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 90,
        "deletions": 48,
        "changed_files": 3,
        "created_at": "2023-07-05T16:51:06Z",
        "closed_at": "2023-08-25T21:11:19Z",
        "merged_at": null,
        "body": "Internal change.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 17,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2023-07-05T16:14:06Z",
        "closed_at": "2023-07-06T16:05:38Z",
        "merged_at": null,
        "body": "Mark OneofDescriptor.isSynthetic() deprecated.\n\nThis API will be removed in a future breaking change.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-07-05T14:49:34Z",
        "closed_at": "2023-07-05T20:32:21Z",
        "merged_at": null,
        "body": "Internal change.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 242,
        "deletions": 158,
        "changed_files": 11,
        "created_at": "2023-07-04T19:23:04Z",
        "closed_at": "2023-07-08T23:18:59Z",
        "merged_at": null,
        "body": "Supersedes  #13075",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 207,
        "deletions": 155,
        "changed_files": 2,
        "created_at": "2023-07-03T16:42:17Z",
        "closed_at": "2023-08-25T21:11:21Z",
        "merged_at": null,
        "body": "Use Abseil's Layout instead of dynamically sized `struct`\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2023-07-03T12:42:57Z",
        "closed_at": "2023-08-25T21:11:23Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 5,
        "changed_files": 3,
        "created_at": "2023-07-03T11:48:43Z",
        "closed_at": "2023-07-03T15:15:51Z",
        "merged_at": null,
        "body": "Clean usages of grep_includes\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-07-03T08:03:48Z",
        "closed_at": "2023-07-04T19:24:24Z",
        "merged_at": null,
        "body": "Issue #13143 Changed from size_t to int to avoid compiler size warnings. I do not expect that has bits needs to support more the 2^31 bits\r\n\r\nsee https://github.com/protocolbuffers/protobuf/issues/13143",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 273,
        "deletions": 19,
        "changed_files": 4,
        "created_at": "2023-07-03T07:38:59Z",
        "closed_at": "2023-07-05T19:07:27Z",
        "merged_at": null,
        "body": "Improve feature propagation on map fields.\n\nGenerated map messages should inherit features from the original field, not the containing message.  To do this, we copy *all* features from the original field to the generated ones, and disable explicit feature validation for them.\n\nAdditionally, this change fixes some bugs in the error handling of explicitly set features.  String map fields should be allowed to use `string_field_validation`, and uninterpreted feature options in the proto should still be recognized for validation.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 512,
        "deletions": 21,
        "changed_files": 18,
        "created_at": "2023-07-03T05:51:40Z",
        "closed_at": "2023-07-06T00:11:07Z",
        "merged_at": null,
        "body": "Editions test enhancements to cover utf8 handling.\n\nThis replaces the cc_utf8_verification and enforce_utf8 options with the corresponding feature values, consistent with C++ behavior.  Further runtimes will be supported by refactoring the string_field_validation feature in a later change.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 279,
        "deletions": 6,
        "changed_files": 4,
        "created_at": "2023-07-03T04:31:16Z",
        "closed_at": "2023-08-25T21:11:25Z",
        "merged_at": null,
        "body": "Improve feature propagation for map fields.\n\nGenerated map messages should inherit features from the original field, not the containing message.  Additionally, this change fixes bugs in the error handling of explicitly set features.  String map fields should be allowed to use `string_field_validation`, and uninterpreted feature options in the proto should still be recognized.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 68,
        "deletions": 60,
        "changed_files": 2,
        "created_at": "2023-07-01T16:58:06Z",
        "closed_at": "2023-07-02T01:32:00Z",
        "merged_at": null,
        "body": "Group PDProto related helper code.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-07-01T02:55:23Z",
        "closed_at": "2023-07-01T14:42:29Z",
        "merged_at": null,
        "body": "Avoid running staleness tests in scheduled CI.\n\nThese are designed to only run once daily in \"quiet\" hours to avoid race conditions.  While isn't very harmful, it does cause our monitoring to show an artificial increase in flakes.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 512,
        "deletions": 21,
        "changed_files": 18,
        "created_at": "2023-06-30T23:58:26Z",
        "closed_at": "2023-08-25T21:11:27Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 68,
        "deletions": 41,
        "changed_files": 14,
        "created_at": "2023-06-30T23:43:46Z",
        "closed_at": "2023-07-06T20:28:29Z",
        "merged_at": null,
        "body": "Migrate internal C++-only test protos to editions.\n\nThis is some low hanging fruit that can increase our test coverage of editions.  Since only the C++ backend is implemented today, we can't yet migrate any protos that are public, are used outside C++, or are depended on by any proto outside C++.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 25,
        "deletions": 338,
        "changed_files": 17,
        "created_at": "2023-06-30T23:14:48Z",
        "closed_at": "2023-07-14T01:04:11Z",
        "merged_at": null,
        "body": "Remove PROTOBUF_FUTURE_EDITIONS guards.\n\nThis is just cruft used for selectively rolling out the editions changes.  Since it's not tested, it would be dangerous to keep it in place.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 10,
        "changed_files": 2,
        "created_at": "2023-06-30T20:58:48Z",
        "closed_at": "2023-06-30T22:34:42Z",
        "merged_at": null,
        "body": "Remove code for the paused linker-guided field stripping (go/lgpfs-paused).\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 712,
        "deletions": 939,
        "changed_files": 7,
        "created_at": "2023-06-30T18:27:16Z",
        "closed_at": "2023-07-05T19:41:08Z",
        "merged_at": null,
        "body": "Delete extension declaration `is_repeated` (in favor of `repeated`) and `target_obsolete_do_not_use`.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-06-30T17:41:45Z",
        "closed_at": "2023-06-30T19:02:28Z",
        "merged_at": null,
        "body": "Fix up comment to use public api.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-06-30T17:25:05Z",
        "closed_at": "2023-06-30T22:27:04Z",
        "merged_at": null,
        "body": "Remove excess C++14 flag in our CMake tests.\n\nIt's not clear what happens if both C++17/C++20 and C++14 are specified, so it's possible this was effectively disabling those tests.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 30,
        "deletions": 32,
        "changed_files": 1,
        "created_at": "2023-06-30T15:38:07Z",
        "closed_at": "2023-06-30T19:24:22Z",
        "merged_at": null,
        "body": "Move the rest of FileGenerator over to Emit\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 96,
        "deletions": 94,
        "changed_files": 2,
        "created_at": "2023-06-30T15:08:15Z",
        "closed_at": "2023-06-30T18:54:27Z",
        "merged_at": null,
        "body": "Move over some more of FileGenerator to Emit.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 178,
        "deletions": 165,
        "changed_files": 2,
        "created_at": "2023-06-30T14:26:40Z",
        "closed_at": "2023-06-30T17:24:55Z",
        "merged_at": null,
        "body": "Start conversion to use Printer::Emit()\n\nMove ImportWriter over and some of FileGenerator.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 36,
        "deletions": 15,
        "changed_files": 7,
        "created_at": "2023-06-30T04:05:51Z",
        "closed_at": "2023-06-30T23:01:09Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 118,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2023-06-29T23:10:23Z",
        "closed_at": "2023-07-11T01:25:51Z",
        "merged_at": null,
        "body": "Add remaining helper functions for Optional v0.6\n\nNone of these methods are necessary for users to use Optional, but they\nare particularly useful and mirror the methods inside of\nstd::collections::hash_map::Entry.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 72,
        "deletions": 23,
        "changed_files": 2,
        "created_at": "2023-06-29T18:58:49Z",
        "closed_at": "2023-08-25T21:11:30Z",
        "merged_at": null,
        "body": "Static reflection differencer compile test\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 56,
        "deletions": 0,
        "changed_files": 4,
        "created_at": "2023-06-29T18:11:45Z",
        "closed_at": "2023-08-25T21:11:32Z",
        "merged_at": null,
        "body": "internal changes to extensions.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 56,
        "deletions": 0,
        "changed_files": 4,
        "created_at": "2023-06-29T18:11:27Z",
        "closed_at": "2023-08-25T21:11:34Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2023-06-29T12:43:05Z",
        "closed_at": "2023-08-25T21:11:36Z",
        "merged_at": null,
        "body": "Clean grep_includes\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 90,
        "deletions": 18,
        "changed_files": 11,
        "created_at": "2023-06-29T03:44:29Z",
        "closed_at": "2023-08-25T21:11:38Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 477,
        "deletions": 54,
        "changed_files": 4,
        "created_at": "2023-06-28T23:38:29Z",
        "closed_at": "2023-07-10T18:53:02Z",
        "merged_at": null,
        "body": "Implement the rest of the v0.6 Optional design\n\nThis introduces a new OptionalProxied trait in order to support the needed trait methods.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 15598,
        "deletions": 1663,
        "changed_files": 85,
        "created_at": "2023-06-28T23:07:49Z",
        "closed_at": "2023-07-01T03:19:00Z",
        "merged_at": null,
        "body": "Release prototype of Protobuf Editions.\n\nThis represents the future direction of protobuf, replacing proto2/proto3 syntax with editions.  These will enable more incremental evolution of protobuf APIs through features, which are individual behaviors (such as whether field presence is explicit or implicit).  For more details see https://protobuf.dev/editions/overview/.\n\nThis PR contains a working implementation of editions for the protoc frontend and C++ code generation, along with various infrastructure improvements to support it.  It gives early access for anyone who wants to a preview of editions, but has no effect on proto2/proto3 syntax.  It is flag-guarded behind the `--experimental_editions` flag, and is an experimental feature with no guarantees.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-06-28T22:55:20Z",
        "closed_at": "2023-06-29T18:18:35Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 21,
        "deletions": 71,
        "changed_files": 2,
        "created_at": "2023-06-28T22:10:30Z",
        "closed_at": "2023-06-28T23:12:51Z",
        "merged_at": null,
        "body": "Automated rollback of commit 57702831f99cfb5ec86d480894d6e39c70df05ad.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 89077,
        "deletions": 59,
        "changed_files": 441,
        "created_at": "2023-06-28T21:41:12Z",
        "closed_at": "2023-08-07T22:35:40Z",
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 21,
        "deletions": 71,
        "changed_files": 2,
        "created_at": "2023-06-28T21:33:51Z",
        "closed_at": "2023-06-29T14:57:42Z",
        "merged_at": null,
        "body": "Automated rollback of commit 57702831f99cfb5ec86d480894d6e39c70df05ad.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2023-06-28T21:11:43Z",
        "closed_at": "2023-06-29T18:42:48Z",
        "merged_at": null,
        "body": "Migrate away from `OneofDescriptor.isSynthetic()`\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2023-06-28T19:50:17Z",
        "closed_at": "2023-06-30T17:30:44Z",
        "merged_at": null,
        "body": "Migrate away from `OneofDescriptor.isSynthetic()`\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 19,
        "deletions": 10,
        "changed_files": 1,
        "created_at": "2023-06-28T18:41:51Z",
        "closed_at": "2023-07-06T22:16:30Z",
        "merged_at": null,
        "body": "Specify stacklevel=2 to these warnings.warn calls, so that users can actually see where these deprecated methods are called, instead of a trace in message_factory.py file itself.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 71,
        "deletions": 21,
        "changed_files": 2,
        "created_at": "2023-06-28T17:51:49Z",
        "closed_at": "2023-06-28T20:52:33Z",
        "merged_at": null,
        "body": "Do not store the default instance in the ExtensionIdentifier for message types.\nIt is wasteful because we can materialize it for free from the type already.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-06-28T17:45:21Z",
        "closed_at": "2023-07-05T16:18:24Z",
        "merged_at": null,
        "body": "Enable TSan validation to detect when a mutable accessor of a message is called concurrently with another accessor on the same message, which is a data race.\n\nThis is the third phase, in which we enable validation for string fields.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-06-28T16:43:32Z",
        "closed_at": "2023-06-30T13:48:48Z",
        "merged_at": null,
        "body": "Internal cleanup\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 49,
        "deletions": 15,
        "changed_files": 2,
        "created_at": "2023-06-28T09:55:42Z",
        "closed_at": "2023-06-28T17:07:28Z",
        "merged_at": null,
        "body": "Fix hazzer emission of Optional\n\nWe were always emitting Optional<T> for accessors, when they should've been behind `_opt`.\n\nWe've refactored our previous accessor into `getter` and `getter_opt`. We'll only emit `getter_opt` when we're dealing with optional fields.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 193,
        "deletions": 6,
        "changed_files": 4,
        "created_at": "2023-06-28T06:42:19Z",
        "closed_at": "2023-09-26T07:42:45Z",
        "merged_at": null,
        "body": "https://github.com/protocolbuffers/protobuf/issues/12881 \r\n\r\n@jskeet  review please :-) as this is my first contrib to protobuf, any design / performance feedback is very sought after",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 34,
        "deletions": 18,
        "changed_files": 7,
        "created_at": "2023-06-28T05:09:17Z",
        "closed_at": "2023-06-29T04:13:46Z",
        "merged_at": null,
        "body": "Make sure lazily initialized descriptors are loaded before any reflection\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 95,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-06-28T04:08:46Z",
        "closed_at": "2023-06-28T21:28:50Z",
        "merged_at": null,
        "body": "It speeds up parsing var int for x86 platform.\r\n\r\nTo enable it, the \"-mbmi2\" needs to passed to GCC.",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 1018,
        "deletions": 1219,
        "changed_files": 12,
        "created_at": "2023-06-27T22:10:06Z",
        "closed_at": "2023-06-29T03:32:05Z",
        "merged_at": null,
        "body": "Influenced by https://minitest.rubystyle.guide/",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 43,
        "deletions": 28,
        "changed_files": 3,
        "created_at": "2023-06-27T21:29:46Z",
        "closed_at": "2023-06-28T19:36:51Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-06-27T16:00:36Z",
        "closed_at": "2023-06-27T17:24:58Z",
        "merged_at": null,
        "body": "Fix case of locality optimizer being wrong for split repeated fields and add a check that the optimized order has the same size as the unoptimized order.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2023-06-27T15:14:49Z",
        "closed_at": "2023-06-27T20:22:26Z",
        "merged_at": null,
        "body": "Add some extra MUSTTAIL annotations.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-06-27T00:21:20Z",
        "closed_at": "2023-06-27T05:07:15Z",
        "merged_at": null,
        "body": "Mark DynamicMessage as final\n\nThis is to lower the number of vtable accesses.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-06-26T22:25:18Z",
        "closed_at": "2023-06-27T14:38:36Z",
        "merged_at": null,
        "body": "Fix `-Wsign-compare` issue\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 152,
        "deletions": 200,
        "changed_files": 2,
        "created_at": "2023-06-26T21:18:47Z",
        "closed_at": "2023-06-29T15:10:54Z",
        "merged_at": null,
        "body": "Unify DescriptorMessageInfoFactory.convert proto2 and proto3 codepaths \n\nThis handles conversion from descriptors to MessageInfo in a single generic codepath that handles the following differences across syntaxes:\n- Enum closedness (proto2)\n- Explicit (proto2) vs implicit (proto3) presence\n- Required field initialization (proto2)\n- UTF8 (proto2/3 specific options)\n\nThis also fixes proto3 non-optional messages to encode hasbit, which was updated in cl/542744002\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-06-26T19:02:20Z",
        "closed_at": "2023-06-26T20:53:58Z",
        "merged_at": null,
        "body": "Allow safety tag removal from GHA.\n\nThis was broken by a recent lockdown of GHA permissions.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-06-26T17:51:42Z",
        "closed_at": "2023-06-28T16:28:30Z",
        "merged_at": null,
        "body": "Enable TSan validation to detect when a mutable accessor of a message is called concurrently with another accessor on the same message, which is a data race.\n\nThis is the third phase, in which we enable validation for string fields.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 50,
        "deletions": 21,
        "changed_files": 3,
        "created_at": "2023-06-26T17:05:45Z",
        "closed_at": "2023-06-27T17:16:22Z",
        "merged_at": null,
        "body": "Fix issues involving const_cast and repeated fields in reflection.\n\nThe motivation is to fix correctness issues seen in split repeated fields.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-06-25T06:14:23Z",
        "closed_at": "2023-06-26T19:27:20Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-06-25T01:56:30Z",
        "closed_at": "2023-07-07T17:11:04Z",
        "merged_at": null,
        "body": "Adding composer config to allow the native protobuf extension to provide ext-protobuf.\r\n\r\nThis allows libraries to require at least one protobuf implementation. If the extension is not available, it can be provided by the native package. If the extension is available but the native package is required, the native will be installed.\r\n\r\nImportantly, for libraries which require at least one of them to be installed, composer will complain if neither is available.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 762,
        "deletions": 338,
        "changed_files": 14,
        "created_at": "2023-06-23T23:58:10Z",
        "closed_at": "2023-07-12T20:30:10Z",
        "merged_at": null,
        "body": "Add Arena Ctors to Protocol Buffer Messages\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-06-23T23:21:04Z",
        "closed_at": "2023-06-30T16:41:04Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 75,
        "deletions": 80,
        "changed_files": 7,
        "created_at": "2023-06-23T20:01:07Z",
        "closed_at": "2023-06-29T16:43:53Z",
        "merged_at": null,
        "body": "Refactor repeated field generators with noop changes related to split repeated fields. Also add TSan validation in _internal_mutable_weak_$name$() for weak message fields, which was missing.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-06-23T19:43:04Z",
        "closed_at": "2023-06-26T17:26:06Z",
        "merged_at": null,
        "body": "Enable TSan validation to detect when a mutable accessor of a message is called concurrently with another accessor on the same message, which is a data race.\n\nThis is the second phase, in which we enable validation for enum/primitive fields.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 59,
        "deletions": 53,
        "changed_files": 1,
        "created_at": "2023-06-23T17:58:40Z",
        "closed_at": "2023-06-23T22:31:39Z",
        "merged_at": null,
        "body": "Follow-up changes to repeated field parsing path.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 41,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2023-06-23T16:12:34Z",
        "closed_at": "2023-06-23T17:46:47Z",
        "merged_at": null,
        "body": "Limit how much memory we'll reserve for repeated enum fields.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-06-22T22:24:26Z",
        "closed_at": "2023-06-23T18:05:17Z",
        "merged_at": null,
        "body": "In Arena::AllocateInternal, avoid instantiating arena_destruct_object<T> in the trivial case and make RepeatedPtrFieldBase arena-compatible.\n\nThe motivation is that in the case of split repeated fields, we end up calling Arena::CreateMessage<RepeatedPtrFieldBase>, and RepeatedPtrFieldBase has a protected destructor.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 14,
        "deletions": 7,
        "changed_files": 5,
        "created_at": "2023-06-22T22:19:00Z",
        "closed_at": "2023-06-23T20:12:07Z",
        "merged_at": null,
        "body": "Miscellaneous fixes for split repeated fields:\n- Add an empty() accessor to WeakRepeatedPtrField.\n- Don't assume ShouldSplit is false for repeated fields.\n- For repeated field tracker generated code, call field internal accessors instead of accessing fields by name.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 219,
        "deletions": 0,
        "changed_files": 4,
        "created_at": "2023-06-22T22:13:49Z",
        "closed_at": "2023-06-26T16:53:12Z",
        "merged_at": null,
        "body": "Add the RawPtr class, which is used to enable easily keeping a raw pointer to an object that is by default all zero bytes.\n\nThis class enables storing all such default objects in the same default zero buffer.\n\nThe motivation for this is usage in split repeated fields.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 738,
        "deletions": 139,
        "changed_files": 12,
        "created_at": "2023-06-22T21:33:21Z",
        "closed_at": "2023-08-25T21:11:40Z",
        "merged_at": null,
        "body": "Nothing to see here\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 7,
        "changed_files": 2,
        "created_at": "2023-06-22T19:55:45Z",
        "closed_at": "2023-06-23T03:37:20Z",
        "merged_at": null,
        "body": "Automated rollback of commit 3e188b7c04cfdaec134cb59831f009c1ce1d7f12.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-06-22T14:40:19Z",
        "closed_at": "2023-06-22T17:37:49Z",
        "merged_at": null,
        "body": "Automated rollback of commit caf1ce3b35ea0c3d0b1221346100e0d345807b92.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 104,
        "deletions": 48,
        "changed_files": 3,
        "created_at": "2023-06-22T00:07:02Z",
        "closed_at": "2023-08-15T21:50:25Z",
        "merged_at": null,
        "body": "Add to local array when parsing repeated strings to minimize growth\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2023-06-21T22:56:32Z",
        "closed_at": "2023-06-22T18:34:05Z",
        "merged_at": null,
        "body": "Let ParseRepeatedStringOnce call AllocateFromStringBlock().\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 674,
        "deletions": 643,
        "changed_files": 5,
        "created_at": "2023-06-21T20:09:26Z",
        "closed_at": "2023-06-21T21:12:22Z",
        "merged_at": null,
        "body": "Change TSan validation to run in phases to reduce risks of roll backs.\n\nTSan validation is currently disabled so this should be a no-op.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 422,
        "deletions": 56,
        "changed_files": 10,
        "created_at": "2023-06-21T19:50:54Z",
        "closed_at": "2023-06-23T21:00:08Z",
        "merged_at": null,
        "body": "Add `source_file_descriptors` to `CodeGeneratorRequest`\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 38,
        "deletions": 277,
        "changed_files": 3,
        "created_at": "2023-06-21T02:07:16Z",
        "closed_at": "2023-06-23T16:12:15Z",
        "merged_at": null,
        "body": "Unify MessageSchema.parseMessage proto2 and proto3 codepaths\n\nThis handles the following proto2/3 differences in single parseMessage codepath that works for proto2, proto3, and editions\n- Groups (proto2)\n- Open (proto3) vs closed (proto2) enums, incl closed enums in unknown fields\n- Extensions (proto2)\n- No presence (proto3)\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 290,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2023-06-21T00:31:03Z",
        "closed_at": "2023-06-22T16:16:05Z",
        "merged_at": null,
        "body": "Add Optional, FieldEntry stubs for v0.6\n\nThis should get basic usage unblocked.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1781,
        "deletions": 199,
        "changed_files": 32,
        "created_at": "2023-06-20T22:26:24Z",
        "closed_at": "2023-08-25T21:11:42Z",
        "merged_at": null,
        "body": "Add CheckTypeAndCopyFrom()\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 61,
        "deletions": 32,
        "changed_files": 2,
        "created_at": "2023-06-20T21:31:29Z",
        "closed_at": "2023-06-21T17:49:17Z",
        "merged_at": null,
        "body": "Check next tag in MpRepeatedMessage.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 26,
        "deletions": 21,
        "changed_files": 1,
        "created_at": "2023-06-20T20:25:14Z",
        "closed_at": "2023-06-21T21:11:17Z",
        "merged_at": null,
        "body": "compiler: Correct depfile generation when there are no outputs\n\nPrevents the compiler from generating a malformed depfile if an inpout file did not lead to any meaningful generation. This is an edge case that is not exercised often.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1367,
        "deletions": 169,
        "changed_files": 30,
        "created_at": "2023-06-20T19:47:45Z",
        "closed_at": "2023-08-25T21:11:44Z",
        "merged_at": null,
        "body": "Add CheckTypeAndCopyFrom()\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 33,
        "deletions": 7,
        "changed_files": 2,
        "created_at": "2023-06-20T17:50:19Z",
        "closed_at": "2023-06-20T21:27:54Z",
        "merged_at": null,
        "body": "Enable extra fields for TSan validation in TSan mode.\n\nNote that TSan validation is currently disabled, but this will prevent regressions of code depending on message sizes being the same with/without TSan mode.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 40,
        "deletions": 40,
        "changed_files": 3,
        "created_at": "2023-06-20T17:18:37Z",
        "closed_at": "2023-06-20T21:27:37Z",
        "merged_at": "2023-06-20T21:27:37Z",
        "body": "Backport of #13099 \r\n\r\n---\r\nFollow-up from #13002 to update to `32.0.1` to fix an issue on windows:\r\n\r\nhttps://github.com/google/guava/releases/tag/v32.0.1\r\n\r\nThe underlying issue likely does not affect protobuf as it does not appear to (directly) use the affected `Files.createTempDir` or `FileBackedOutputStream` code which was apparently broken on Windows in `32.0.0`.\r\n\r\nSeems best to update anyway.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-06-20T13:28:05Z",
        "closed_at": "2023-06-22T09:06:32Z",
        "merged_at": null,
        "body": "Refine proxied traits instead of using bounds\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 69,
        "deletions": 15,
        "changed_files": 4,
        "created_at": "2023-06-19T07:32:47Z",
        "closed_at": "2023-06-22T16:54:36Z",
        "merged_at": null,
        "body": "Add SettableValue for generic field setting\n\nThis is a prerequisite for optional types to have proper setters.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 40,
        "deletions": 40,
        "changed_files": 3,
        "created_at": "2023-06-19T01:56:54Z",
        "closed_at": "2023-06-20T16:59:49Z",
        "merged_at": null,
        "body": "Follow-up from #12953 to update to `32.0.1` to fix an issue on windows:\r\n\r\nhttps://github.com/google/guava/releases/tag/v32.0.1\r\n\r\nThe underlying issue likely does not affect protobuf as it does not appear to (directly) use the affected `Files.createTempDir` or `FileBackedOutputStream` code which was apparently broken on Windows in `32.0.0`.\r\n\r\nSeems best to update anyway.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 15,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-06-17T20:28:30Z",
        "closed_at": "2023-06-20T21:35:52Z",
        "merged_at": null,
        "body": "This PR adds a config.w32 for the PHP extension and includes it in the tgz for PECL.\r\nI used this to build php_protobuf.dll for PHP 8.2.7. \r\nSee https://github.com/phalcon/cphalcon/issues/16318#issuecomment-1592534432 for the request to build the extension and the result.\r\n\r\nPlease review and merge.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 41,
        "deletions": 17,
        "changed_files": 6,
        "created_at": "2023-06-17T06:43:49Z",
        "closed_at": "2023-06-21T18:16:17Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-06-17T05:52:44Z",
        "closed_at": "2023-06-20T16:19:05Z",
        "merged_at": null,
        "body": "Internal Code Change\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/12936 from be-hase:issue-12810 f4df5b5efd2bf2a947bb01bd60bf5309005e9260\nFUTURE_COPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/12936 from be-hase:issue-12810 f4df5b5efd2bf2a947bb01bd60bf5309005e9260\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 477,
        "deletions": 287,
        "changed_files": 5,
        "created_at": "2023-06-17T00:06:14Z",
        "closed_at": "2023-06-22T20:32:59Z",
        "merged_at": null,
        "body": "Split out shared infrastructure from code generator unittest.\n\nThis will allow us to easily expand it to be used for generator unit-tests.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 126,
        "deletions": 0,
        "changed_files": 6,
        "created_at": "2023-06-17T00:06:13Z",
        "closed_at": "2023-06-22T21:54:36Z",
        "merged_at": null,
        "body": "Add unit-tests for the C++ generator\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 466,
        "deletions": 0,
        "changed_files": 6,
        "created_at": "2023-06-16T21:26:30Z",
        "closed_at": "2023-06-20T16:11:50Z",
        "merged_at": null,
        "body": "Update TSan validation of concurrent mutations of fields to include non-repeated primitive, enum, string, and message fields.\n\nNote that TSan validation is currently disabled so this should be a no-op.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 61,
        "deletions": 61,
        "changed_files": 13,
        "created_at": "2023-06-16T18:22:46Z",
        "closed_at": "2023-06-16T21:35:38Z",
        "merged_at": "2023-06-16T21:35:38Z",
        "body": "Fixes #13084\r\n\r\nCloses #13085\r\n\r\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/13085 from owent:add_dllexport_decl_for_generated_default_instance a46d4e81c206785510c61c1ce7638a11e0d6dc6d PiperOrigin-RevId: 540938351",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 20,
        "deletions": 12,
        "changed_files": 2,
        "created_at": "2023-06-16T17:35:28Z",
        "closed_at": "2023-06-23T20:07:10Z",
        "merged_at": null,
        "body": "Make RepeatedPtrFieldBase trivially copyable so that we can keep a local copy in RepeatedParseMessageAuxImpl in order to allow the compiler to see that there's no aliasing.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-06-16T15:34:32Z",
        "closed_at": "2023-06-16T17:26:09Z",
        "merged_at": "2023-06-16T17:26:09Z",
        "body": "Closes #13037\r\n\r\nCloses #13059\r\n\r\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/13059 from 4kangjc:main 71b2fc5ada3abf1250c69568dddc23bfecd1427f PiperOrigin-RevId: 540886449",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-06-16T15:22:35Z",
        "closed_at": "2023-07-07T15:36:52Z",
        "merged_at": null,
        "body": "Update comment for why templated function for Grow<> does not work here\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 20,
        "changed_files": 1,
        "created_at": "2023-06-16T14:47:33Z",
        "closed_at": "2023-06-26T16:18:07Z",
        "merged_at": null,
        "body": "Use absl::popcount for obtaining a popcount of set bits.\n\nPopcount instructions are widely available on most architectures.  Conditioning\nthe codepath on __POPCNT__ limits the optimization to x86.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-06-16T13:26:01Z",
        "closed_at": "2023-06-16T18:12:13Z",
        "merged_at": null,
        "body": "Fixes #13084 ",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1327,
        "deletions": 153,
        "changed_files": 27,
        "created_at": "2023-06-16T12:56:00Z",
        "closed_at": "2023-08-25T21:11:46Z",
        "merged_at": null,
        "body": "Add CheckTypeAndCopyFrom() V3\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2023-06-15T22:10:15Z",
        "closed_at": "2023-06-20T21:45:11Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 198,
        "deletions": 92,
        "changed_files": 3,
        "created_at": "2023-06-15T20:46:20Z",
        "closed_at": "2023-06-21T03:21:41Z",
        "merged_at": null,
        "body": "When parsing repeated primitives, append to a tmp array on stack.\n\nAdding to a temporary array of values on stack, then merging it to RepeatedField\nminimizes dynamic growth of RepeatedField.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 27,
        "deletions": 17,
        "changed_files": 1,
        "created_at": "2023-06-15T19:53:15Z",
        "closed_at": "2023-06-15T23:23:26Z",
        "merged_at": null,
        "body": "Use ToTagDispatch, unless we know for sure that we don't have more data\navailable.\nThis prevents flushing hasbits unnecessarily, and enables the fast dispatch to the next field instead of returning back to ParseLoop to do it.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 19,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-06-15T19:36:32Z",
        "closed_at": "2023-06-16T00:48:00Z",
        "merged_at": null,
        "body": "Add method to create a new ProtobufList for the given element type.\nAdd method to make a mutable copy with a capacity hint.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-06-15T16:58:41Z",
        "closed_at": "2023-06-16T18:22:54Z",
        "merged_at": null,
        "body": "Put default_instance into a local variable so the compiler can see that it doesn't need to reload from aux.table due to potential aliasing.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 383,
        "deletions": 87,
        "changed_files": 7,
        "created_at": "2023-06-15T12:35:44Z",
        "closed_at": "2023-08-25T21:11:48Z",
        "merged_at": null,
        "body": "Add CheckTypeAndCopyFrom()\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 122,
        "deletions": 158,
        "changed_files": 7,
        "created_at": "2023-06-15T09:58:14Z",
        "closed_at": "2023-07-12T14:11:32Z",
        "merged_at": null,
        "body": "Superseeds: https://github.com/protocolbuffers/protobuf/pull/13054\r\n\r\nThe object cache is fundamentally subject to race conditions. Objects must be created before they are registered into the cache, so if two threads try to create the same object, we'll inevitably end up with two instances mapping to the same underlying memory.\r\n\r\nTo entirely prevent that we'd need a lot of extra locking which I don't think is really worth it compared to a few useless allocations.\r\n\r\nInstead we can replace `ObjectCache_Add` by a `getset` type of operation, the extra instance is still created, but the later threads will receive the \"canonical\" instance and will be able to abandon their duplicated instance.\r\n\r\nAdditionally, this PR moves the ObjectCache implementation in Ruby, as it's much easier to debug there, and the performance difference is negligible. The `ObjectCache` instance is also exposed as `Google::Protobuf::OBJECT_CACHE` to better allow to debug potential memory issues.\r\n\r\ncc @haberman @fowles ",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2023-06-15T04:18:56Z",
        "closed_at": "2023-06-15T16:45:26Z",
        "merged_at": null,
        "body": "`TextFormat::ParseFieldValueFromString` now takes `absl::string_view` as `input` instead of `const std::string &`\n\n`TextFormat::ParseFieldValueFromString` would take `const std::string &` as the input, but it's a read-only string and immediately passed to `ArrayInputStream`. This CL will change it to `absl::string_view`.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 26,
        "deletions": 9,
        "changed_files": 2,
        "created_at": "2023-06-15T00:04:34Z",
        "closed_at": "2023-06-22T18:15:54Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-06-14T22:05:23Z",
        "closed_at": "2023-06-15T03:56:36Z",
        "merged_at": null,
        "body": "typo fix: Javascript -> JavaScript in protobuf readme\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 18,
        "deletions": 8,
        "changed_files": 2,
        "created_at": "2023-06-14T21:48:17Z",
        "closed_at": "2023-06-23T15:27:11Z",
        "merged_at": null,
        "body": "Make protobuf camelCase name conflicts resolve deterministically.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-06-14T19:51:09Z",
        "closed_at": "2023-06-23T20:06:55Z",
        "merged_at": null,
        "body": "Try memcpy to stack.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-06-14T19:44:16Z",
        "closed_at": "2023-06-15T17:28:56Z",
        "merged_at": null,
        "body": "Fixes the following compiler warning:\r\n\r\n```\r\nexternal/com_google_protobuf/src/google/protobuf/compiler/retention.cc:236:21: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<google::protobuf::SourceCodeInfo_Location*>::size_type' {aka 'long unsigned int'} [-Wsign-compare]\r\n```",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-06-14T18:13:31Z",
        "closed_at": "2023-06-26T15:35:06Z",
        "merged_at": null,
        "body": "Mark single arg ctor explicit in DynamicMessageFactory.\n\nThis is in line with best practices since implicit conversion in not necessary nor desired for this class.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-06-14T18:12:59Z",
        "closed_at": "2023-06-14T19:41:00Z",
        "merged_at": null,
        "body": "Fix a typo\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-06-14T17:41:34Z",
        "closed_at": "2023-06-16T15:31:20Z",
        "merged_at": null,
        "body": "Closes #13037",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 51,
        "deletions": 51,
        "changed_files": 35,
        "created_at": "2023-06-14T16:54:34Z",
        "closed_at": "2023-06-14T18:22:34Z",
        "merged_at": "2023-06-14T18:22:34Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 71,
        "deletions": 591,
        "changed_files": 1,
        "created_at": "2023-06-14T16:28:13Z",
        "closed_at": "2023-06-20T15:10:15Z",
        "merged_at": null,
        "body": "Unify MessageSchema.getSerializedSize proto2 and proto3 methods.\n\nThis unifies proto2 and proto3 (and later editions) implementations to incorporate performance optimizations directly referencing unsafe and caching presence field (and offset) originally added in cl/187404278 for proto2 only. This is similar to cl/539189318 which incorporates similar changes for writeFieldsInAscendingOrder().\n\nThis change also handles possible extensions for all syntaxes and clarifies when presenceFieldOffset may actually be storing cachedSizeOffset.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-06-14T15:30:44Z",
        "closed_at": "2023-06-15T16:54:10Z",
        "merged_at": null,
        "body": "Automated rollback of commit c4bc23782e31d1a8c6010048e33aee1ce104908a.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-06-14T14:09:21Z",
        "closed_at": "2023-06-16T17:12:33Z",
        "merged_at": null,
        "body": "Fix: https://github.com/protocolbuffers/protobuf/issues/11968\r\n\r\nSince calling a method on WeakMap allow the RubyVM to switch threads, adding a non-fully initialized object into the cache allow another thread from using it.\r\n\r\nNote: with this fix, the other two thread may create their own wrapper for the same underlying Array. We don't know if it's a big deal or not.\r\n\r\nCo-Authored-By: @peterzhu2118 \r\n\r\ncc @haberman ",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-06-14T08:28:56Z",
        "closed_at": "2023-06-16T08:38:39Z",
        "merged_at": null,
        "body": "Do not pass dangling pointers to C++\n\nThis is the reverse direction of cl/539924021.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2023-06-14T04:27:18Z",
        "closed_at": "2023-06-14T16:24:24Z",
        "merged_at": null,
        "body": "Internal Code Change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 221,
        "deletions": 0,
        "changed_files": 6,
        "created_at": "2023-06-13T23:53:09Z",
        "closed_at": "2023-08-25T21:11:50Z",
        "merged_at": null,
        "body": "Internal change.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 23,
        "deletions": 16,
        "changed_files": 1,
        "created_at": "2023-06-13T23:10:35Z",
        "closed_at": "2023-06-14T19:24:03Z",
        "merged_at": "2023-06-14T19:24:03Z",
        "body": "Our automation can't currently update release branches, so we need to enable staleness tests as presubmits to force manual regeneration.\r\n\r\nPiperOrigin-RevId: 540094169",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 23,
        "deletions": 16,
        "changed_files": 1,
        "created_at": "2023-06-13T23:10:22Z",
        "closed_at": "2023-06-14T19:24:12Z",
        "merged_at": "2023-06-14T19:24:11Z",
        "body": "Our automation can't currently update release branches, so we need to enable staleness tests as presubmits to force manual regeneration.\r\n\r\nPiperOrigin-RevId: 540094169",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 19,
        "changed_files": 2,
        "created_at": "2023-06-13T22:45:45Z",
        "closed_at": "2023-06-14T21:06:08Z",
        "merged_at": null,
        "body": "Remove workaround for whole-archive linker behavior.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 10,
        "changed_files": 2,
        "created_at": "2023-06-13T20:41:01Z",
        "closed_at": "2023-06-15T15:13:40Z",
        "merged_at": null,
        "body": "Internal Change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 62,
        "deletions": 54,
        "changed_files": 10,
        "created_at": "2023-06-13T19:51:21Z",
        "closed_at": "2023-08-25T21:11:52Z",
        "merged_at": null,
        "body": "Hash pin github workflows\n\n## Description\n\nI would like to suggest a security practice recommended by the [OpenSSF Scorecard][scorecard-repo] which is to hash pin dependencies to prevent typosquatting and tag renaming attacks.\n\nThe change would only be applied to GitHub workflows.\n\nThis means hash pinning GitHub Workflow actions.\n\nAlong with hash-pinning dependencies, I also recommend adopting dependabot (or other dependency update tool) to help keep the dependencies up to date. Most tools can update hashes and associated semantic version comments.\n\nAny questions or concerns just let me know.\nThanks!\n\n## Additional Context\n\nA tag renaming attack is a type of attack whereby an attacker:\n- Hijack an action.\n- Upload a malicious version.\n- Replace existing tags with malicious versions.\n\nA [typosquatting attack][typosquatting] is a type of attack whereby an attacker:\n- Create a malicious package\n- Publish it with a similar name of a known package (example: numpi instead of numpy)\n\nFor more informations about the dependency-update tools:\n- [Dependabot][dependabot]\n\n[scorecard-repo]: https://github.com/ossf/scorecard\n[deps-confusion]: https://www.websecuritylens.org/how-dependency-confusion-attack-works-and-how-to-prevent-it/\n[typosquatting]: https://snyk.io/blog/typosquatting-attacks/\n[dependabot]: https://github.blog/2020-06-01-keep-all-your-packages-up-to-date-with-dependabot/\n[renovatebot]:https://www.mend.io/renovate/\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 38,
        "deletions": 15,
        "changed_files": 5,
        "created_at": "2023-06-13T17:48:48Z",
        "closed_at": "2023-06-16T23:27:32Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 232,
        "deletions": 191,
        "changed_files": 6,
        "created_at": "2023-06-13T16:22:14Z",
        "closed_at": "2023-06-16T20:12:26Z",
        "merged_at": null,
        "body": "Update TSan validation to use a new field in _impl_ for validation.\n\nUsing _impl_ makes this trigger on mutations of the first field in _impl_, which makes the triggering change arbitrarily based on field order. Also, if we do TSan validation using the address of a particular field, then there will be false positive data races detected in cases where that field is mutated concurrently with a call to an accessor for another field in the message.\n\nNote that TSan validation is currently disabled so this should be a no-op.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-06-13T12:02:07Z",
        "closed_at": "2023-06-16T08:44:47Z",
        "merged_at": null,
        "body": "Delete stale TODO\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-06-13T10:09:49Z",
        "closed_at": "2023-06-13T11:43:27Z",
        "merged_at": null,
        "body": "Do not pass nullptr to slice::from_raw_parts\n\nPass dangling, but well-aligned pointer instead as per\nhttps://doc.rust-lang.org/std/slice/fn.from_raw_parts.html#safety.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 39,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-06-13T03:51:51Z",
        "closed_at": "2023-08-25T21:11:54Z",
        "merged_at": null,
        "body": "Try https://github.com/protocolbuffers/protobuf/issues/12047\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-06-13T03:25:16Z",
        "closed_at": "2023-08-25T21:11:56Z",
        "merged_at": null,
        "body": "Automated rollback of commit aa8fadc5cc1737b0dc71927effbe80676cee6c21.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 221,
        "deletions": 0,
        "changed_files": 6,
        "created_at": "2023-06-13T00:27:26Z",
        "closed_at": "2023-06-14T00:30:15Z",
        "merged_at": null,
        "body": "Internal change.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 19,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-06-12T21:37:45Z",
        "closed_at": "2023-06-13T02:00:21Z",
        "merged_at": null,
        "body": "internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 24,
        "deletions": 18,
        "changed_files": 1,
        "created_at": "2023-06-12T21:35:12Z",
        "closed_at": "2023-06-13T18:39:06Z",
        "merged_at": null,
        "body": "Make ViewFor/MutFor use assoc. type instead of generic, rename to match\n\nThis implements the associated type change suggested by dmitrig@.\n\nI don't foresee use cases that would make `ViewFor` allowing multiple `T` to be\nuseful, rather than confusing.\n\nThis also implements some suggested wording changes that I agree with.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 20,
        "changed_files": 3,
        "created_at": "2023-06-12T21:27:14Z",
        "closed_at": "2023-06-14T20:20:53Z",
        "merged_at": null,
        "body": "Remove explicit syntax check on open enum zero value validation.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-06-12T19:02:44Z",
        "closed_at": "2023-06-12T20:15:34Z",
        "merged_at": null,
        "body": "Fix a bug in which we call Reflection::ClearField() on a default message instance.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-06-12T15:44:06Z",
        "closed_at": "2023-06-13T10:23:12Z",
        "merged_at": null,
        "body": "Copy-edit comments in shared.rs\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2023-06-12T15:39:08Z",
        "closed_at": "2023-06-13T09:39:04Z",
        "merged_at": null,
        "body": "Copy-edit comments in the BUILD file\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-06-12T03:55:55Z",
        "closed_at": "2023-06-12T14:12:27Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 25,
        "deletions": 8,
        "changed_files": 2,
        "created_at": "2023-06-10T01:34:20Z",
        "closed_at": "2023-07-13T20:28:25Z",
        "merged_at": null,
        "body": "Improve protobuf_cpp::SerializedData\n\nNo longer use the allocator manually: use Box and raw slice pointers.\nAdd additional documentation, safety and otherwise.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 113,
        "deletions": 55,
        "changed_files": 8,
        "created_at": "2023-06-10T01:34:18Z",
        "closed_at": "2023-06-14T17:31:30Z",
        "merged_at": null,
        "body": "Move internal-only but kernel-agnostic paths into an `__internal` module\n\nAdd some documentation along the way.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 63,
        "deletions": 487,
        "changed_files": 1,
        "created_at": "2023-06-09T22:19:21Z",
        "closed_at": "2023-06-14T17:58:19Z",
        "merged_at": null,
        "body": "Unify MessageSchema.writeFieldsInAscendingOrder proto2 and proto3 methods.\n\nThis unifies proto2 and proto3 (and later editions) implementations to incorporate performance optimizations directly referencing unsafe and caching reflection presence field (and offset) to all syntaxes. These optimizations were originally added in cl/187404278 for proto2 only.\n\nThese optimizations do not seem to be meaningfully proto2/3-specific. The UnsafeUtil methods simply wrap the corresponding Unsafe methods. Presence bit fields are used in the same way for proto3, but this optimization seems to predate proto3 optional.\n\nWhile in there, better document how the buffer encoding and mask/offsets work.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 191,
        "deletions": 339,
        "changed_files": 1,
        "created_at": "2023-06-09T21:31:04Z",
        "closed_at": "2023-07-31T18:32:40Z",
        "merged_at": null,
        "body": "Unify MessageSchema.writeFieldsInAscendingOrder proto2 and proto3 methods.\n\nThis also updates code and related code to use more readable helper methods (e.g. isFieldPresent)  and variables (e.g. offset, unsafe) where possible.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 580,
        "deletions": 582,
        "changed_files": 14,
        "created_at": "2023-06-09T18:32:18Z",
        "closed_at": "2023-08-25T21:11:58Z",
        "merged_at": null,
        "body": "Performance and code size improvements for types with only scalar fields:\n - Improve `ImplHasCopyCtor` to handle more cases correctly. It was returning\nfalse in some cases it could return true.\n - Implement `CopyFrom` differently for these types to avoid `Clear`+`Merge`. This\nmakes the code smaller and significantly faster.\n - The move constructor copies the _impl_ directly instead of \"default construct + swap\". Similar improvements in the move assignment.\n - Make the destructor inline.\n - Improve InternalSwap.\n - Use a function in `MessageLite` to copy the unknown fields. Using `MessageLite`\nas the arguments avoids pointer adjustments in the caller.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 208,
        "deletions": 90,
        "changed_files": 7,
        "created_at": "2023-06-09T18:31:27Z",
        "closed_at": "2023-06-09T21:07:24Z",
        "merged_at": null,
        "body": "Update TSan validation to not trigger on `mutable_repeated(int)`/`set_repeated(int, value)` accessors and also change to use _impl_ instead of _internal_metadata_ for validation.\n\nNote that this is a no-op because TSan validation is currently disabled.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 41,
        "deletions": 12,
        "changed_files": 4,
        "created_at": "2023-06-09T17:36:39Z",
        "closed_at": "2023-06-09T18:49:05Z",
        "merged_at": "2023-06-09T18:49:04Z",
        "body": "PiperOrigin-RevId: 539109983",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 43,
        "deletions": 12,
        "changed_files": 4,
        "created_at": "2023-06-09T17:36:35Z",
        "closed_at": "2023-06-09T18:49:08Z",
        "merged_at": "2023-06-09T18:49:08Z",
        "body": "PiperOrigin-RevId: 539109983",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 243,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2023-06-09T16:56:23Z",
        "closed_at": "2023-08-25T21:12:00Z",
        "merged_at": null,
        "body": "Use pext_u64 when parsing packed varints on Intel and AMD Zen3.\n\nTODO: Long description, DO NOT SUBMIT\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-06-09T05:21:19Z",
        "closed_at": "2023-06-09T19:02:36Z",
        "merged_at": null,
        "body": "internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-06-08T21:24:35Z",
        "closed_at": "2023-06-09T17:01:50Z",
        "merged_at": null,
        "body": "Force push auto-commits to bypass branch protection status checks\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 51,
        "deletions": 10,
        "changed_files": 1,
        "created_at": "2023-06-08T20:37:37Z",
        "closed_at": "2023-08-25T21:12:03Z",
        "merged_at": null,
        "body": "Try msvc 2022 workaround\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 72,
        "deletions": 17,
        "changed_files": 3,
        "created_at": "2023-06-08T18:30:45Z",
        "closed_at": "2023-06-12T16:49:15Z",
        "merged_at": null,
        "body": "Move linkage monitor check as part of Bazel build (#12980)\n\nFixes https://github.com/protocolbuffers/protobuf/issues/12912\n\nMoving the Linkage Monitor check to Bazel, so that the result is cached.\n\nCloses #12980\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/12980 from suztomo:bazelize_linkage_monitor 51c00949badb04e7ad94c1671bdd289f939989c7\nFUTURE_COPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/12980 from suztomo:bazelize_linkage_monitor 51c00949badb04e7ad94c1671bdd289f939989c7\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 30,
        "deletions": 7,
        "changed_files": 2,
        "created_at": "2023-06-08T17:06:42Z",
        "closed_at": "2023-08-25T21:12:05Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 68,
        "deletions": 18,
        "changed_files": 4,
        "created_at": "2023-06-08T16:51:31Z",
        "closed_at": "2023-08-25T21:12:08Z",
        "merged_at": null,
        "body": "Move linkage monitor check as part of Bazel build (#12980)\n\nFixes https://github.com/protocolbuffers/protobuf/issues/12912\n\nMoving the Linkage Monitor check to Bazel, so that the result is cached.\n\nCloses #12980\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/12980 from suztomo:bazelize_linkage_monitor 6a6e9dfdb8bac41898c81153637aca22c4339ea4\nFUTURE_COPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/12980 from suztomo:bazelize_linkage_monitor 6a6e9dfdb8bac41898c81153637aca22c4339ea4\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-06-08T16:50:03Z",
        "closed_at": "2023-08-25T21:12:10Z",
        "merged_at": null,
        "body": "Fix staleness test branching logic\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2023-06-08T04:29:55Z",
        "closed_at": "2023-06-08T23:39:04Z",
        "merged_at": null,
        "body": "Making the logs friendly and useful.\n\nReducing the volume of repeating warning.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 77,
        "deletions": 77,
        "changed_files": 4,
        "created_at": "2023-06-08T03:49:19Z",
        "closed_at": "2023-06-08T16:12:19Z",
        "merged_at": "2023-06-08T16:12:19Z",
        "body": "Updates Guava to [32.0.0](https://github.com/google/guava/releases/tag/v32.0.0) to include fixes for CVE-2020-8908 and CVE-2023-2976 (https://github.com/google/guava/issues/2575) which affects certain builds with shaded usage, e.g ruby via jruby/java platform such as https://rubygems.org/gems/google-protobuf/versions/3.23.2-java\r\n\r\n- Protobuf does not appear to (directly) use the affected `Files.createTempDir` or `FileBackedOutputStream` code which might behave differently on Windows.\r\n- Referred to #9707 and #9757 for reference\r\n- Updated transitive dependency versions match https://mvnrepository.com/artifact/com.google.guava/guava/32.0.0-jre (note major version change for `j2objc-annotations` from `1.3` --> `2.8`)\r\n\r\nBackport of #12953 \r\n\r\nPiperOrigin-RevId: 538666552",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 127,
        "changed_files": 11,
        "created_at": "2023-06-08T01:40:57Z",
        "closed_at": "2023-06-08T15:11:25Z",
        "merged_at": null,
        "body": "Automated rollback of commit d800c5f08b184d261e6c47662035d554f109eb3b.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-06-07T22:37:26Z",
        "closed_at": "2023-06-08T16:53:11Z",
        "merged_at": null,
        "body": "Fix staleness test branching logic\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 30,
        "deletions": 7,
        "changed_files": 2,
        "created_at": "2023-06-07T22:10:42Z",
        "closed_at": "2023-06-08T17:07:54Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 15,
        "deletions": 13,
        "changed_files": 5,
        "created_at": "2023-06-07T17:00:26Z",
        "closed_at": "2023-06-07T18:19:43Z",
        "merged_at": "2023-06-07T18:19:43Z",
        "body": null,
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-06-07T16:56:01Z",
        "closed_at": "2023-06-08T13:20:45Z",
        "merged_at": null,
        "body": "Update the minimum macos to match cl/537907016\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 283,
        "deletions": 242,
        "changed_files": 7,
        "created_at": "2023-06-06T21:36:37Z",
        "closed_at": "2023-06-06T23:38:06Z",
        "merged_at": null,
        "body": "Automated rollback of commit 026da8ee9a2726996c989b8521687c1320252577.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 48,
        "changed_files": 3,
        "created_at": "2023-06-06T13:49:52Z",
        "closed_at": "2023-06-06T21:45:29Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 36,
        "deletions": 51,
        "changed_files": 7,
        "created_at": "2023-06-06T11:12:12Z",
        "closed_at": "2023-06-06T15:26:11Z",
        "merged_at": null,
        "body": "Put shared.rs and cpp.rs/upb.rs into the same crate.\n\nThe motivation is to make the setup simpler and more flexible.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 32,
        "deletions": 11,
        "changed_files": 2,
        "created_at": "2023-06-06T04:09:16Z",
        "closed_at": "2023-06-28T17:51:34Z",
        "merged_at": null,
        "body": "internal change\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 138,
        "deletions": 17,
        "changed_files": 7,
        "created_at": "2023-06-05T23:23:49Z",
        "closed_at": "2023-06-06T15:58:35Z",
        "merged_at": "2023-06-06T15:58:35Z",
        "body": "I don't know what the procedure is on backporting to maintenance branches, but I thought I'd try by opening a PR.\r\n\r\nIn conda-forge, we'd definitely need:\r\n* https://github.com/protocolbuffers/protobuf/pull/12903 by @coryan (because google-cloud-cpp will otherwise [not compile](https://github.com/googleapis/google-cloud-cpp/issues/8125) with the 23.x series)\r\n* https://github.com/protocolbuffers/protobuf/pull/12978 by @traversaro (because now protobuf requires abseil and all consumers need to link to it + the fact that we build everything based on shared abseil libraries, including on windows)\r\n* we also need https://github.com/protocolbuffers/protobuf/commit/fc1c5512e524e0c00a276aa9a38b2cdb8fdf45c7 for https://github.com/protocolbuffers/protobuf/issues/12932\r\n\r\nCC @fowles @mkruskal-google \r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 24,
        "deletions": 24,
        "changed_files": 12,
        "created_at": "2023-06-05T23:20:56Z",
        "closed_at": "2023-06-07T15:30:05Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-06-05T22:09:58Z",
        "closed_at": "2023-08-25T21:12:12Z",
        "merged_at": null,
        "body": "CMake: Fix abseil_dll target name when using find_package(absl) (#12978)\n\nThis additional if  is necessary as of abseil 20230125.3 when abseil is consumed via add_subdirectory,\nthe abseil_dll target  is named abseil_dll, while if abseil is consumed via find_package, the target is called `absl::abseil_dll` . \n\nOnce https://github.com/abseil/abseil-cpp/pull/1466 is merged and released in the minimum version of  abseil required by protobuf, it is possible to always link `absl::abseil_dll` and `absl::abseil_test_dll` and remove the if.\n\nYou may wonder how linking worked at all before when `protobuf_ABSL_PROVIDER STREQUAL \"package\"`, as `abseil_dll` was not an imported target defined by `find_package(absl)`. The reason behind this is that if a name that is not an imported target is passed to `target_link_libraries`, it is just regarded as a C++ library name. So, in the end the `abseil_dll` library was correctly linked, simply all the transitive usage requirements defined by the `absl::abseil_dll` target were not propagated, that could lead to compilation errors if abseil was compiled with the `ABSL_PROPAGATE_CXX_STD` CMake option enabled.\n\nCloses #12978\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/12978 from traversaro:patch-1 39dd074281161fa0c4be69035d33b41a50e048c2\nFUTURE_COPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/12978 from traversaro:patch-1 39dd074281161fa0c4be69035d33b41a50e048c2\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 8,
        "changed_files": 3,
        "created_at": "2023-06-05T21:03:24Z",
        "closed_at": "2023-06-20T21:35:38Z",
        "merged_at": null,
        "body": null,
        "comments": 1
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 9,
        "changed_files": 4,
        "created_at": "2023-06-05T20:40:58Z",
        "closed_at": "2023-06-06T17:55:34Z",
        "merged_at": null,
        "body": "Hi,\r\n\r\nIt seems that until last year, the logic behind `PROTOBUF_USE_DLLS` was for Windows (MSCV) only. It was changed to all platforms here in https://github.com/protocolbuffers/protobuf/commit/5a0887fc6529596eff5c0f72febc602a9d494cc2\r\n\r\nLast month, the generated pkg config files were updated to reflect the protobuf build-time value of `PROTOBUF_USE_DLLS` as it was indeed noted that it changes the ABI. This was done in https://github.com/protocolbuffers/protobuf/pull/12700 In the commit message it is mentionned that most likely we shall rather have a stable ABI.\r\n\r\nFinally in https://github.com/protocolbuffers/protobuf/issues/12746 which at some point mentions https://issuetracker.google.com/issues/283987730#comment7 where a Google employee hits the linker issue:\r\n```\r\nundefined reference to `google::protobuf::internal::ThreadSafeArena::thread_cache_'\r\n```\r\nwhich denotes a mix of some .o or libs built `PROTOBUF_USE_DLLS` defined and some others build with `PROTOBUF_USE_DLLS` undefined, resulting in ABI incompatibilities.\r\n\r\nI also hit this issue while trying to include protobuf in a corporate environment using it's own proprietary build system in which it is expected that .a and .so use a compatible ABI.\r\n\r\nFrom my own understanding, ideally we should always use `thread_local` variables, but experience has shown that:\r\n - old iOS (iOS < 9) didn't seem to accept `thread_local`, leading to the `GOOGLE_PROTOBUF_NO_THREADLOCAL` macro later renamed `PROTOBUF_NO_THREADLOCAL` which allowed to disable this, but it is not set anywhere in the protobuf code base. Also I doubt you still want to support such old iOS now, so maybe you should consider removing all `PROTOBUF_NO_THREADLOCAL` related code paths (this pull request doesn't do this).\r\n  - MSVC's DLL interface doesn't seem to accept exporting thread local variables (at least from what I understood, I know absolutely nothing about the Windows ecosystem), yet we can \"hide\" a thread local variable in a static function using a thread local variable. However in that case the access to TLS variable is not inlined, leading to worse performances, this hack shall be done only for Windows (actually when using MSVC) *AND* we build a shared library.\r\n  - In all other cases, a classical `thread_local` shall be used, no matter if we build a static or a shared library. In particular on Linux which I guess is the target Google cares the more about for its own production. This pull request achieves this.\r\n\r\nAm I right in my conclusion ?",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 36,
        "deletions": 0,
        "changed_files": 11,
        "created_at": "2023-06-05T18:29:58Z",
        "closed_at": "2023-06-05T20:56:42Z",
        "merged_at": null,
        "body": "Set top level permissions to read only on GitHub Workflows (#12971)\n\nHi, here is Joyce from Google again.\n\nI'd like starting suggesting the [Token-Permission check](https://github.com/ossf/scorecard/blob/main/docs/checks.md#token-permissions) fix.\n\nLet me know if I might be missing any permission. Thanks!\n\n### Security Reason\n\nThis is needed because, by default, github grants write-all permission to all workflows, which could be exploit by an attacker in case of a compromised workflow. Limiting permissions is a simple and effective way to also limit the impact of an eventual compromised workflow.\n\nThus, it is both a recommendation from [OpenSSF Scorecard](https://github.com/ossf/scorecard/blob/main/docs/checks.md#token-permissions) and the [Github](https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions) to always use credentials that are minimally scoped.\n\nCloses #12971\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/12971 from joycebrum:main 6d6dac5678956c6172831dd54dbda063f452380c\nFUTURE_COPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/12971 from joycebrum:main 6d6dac5678956c6172831dd54dbda063f452380c\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 72,
        "deletions": 17,
        "changed_files": 3,
        "created_at": "2023-06-05T17:12:46Z",
        "closed_at": "2023-06-12T16:49:16Z",
        "merged_at": null,
        "body": "Fixes https://github.com/protocolbuffers/protobuf/issues/12912\r\n\r\nMoving the Linkage Monitor check to Bazel, so that the result is cached.",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 448,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2023-06-05T12:46:39Z",
        "closed_at": "2023-06-12T10:29:38Z",
        "merged_at": null,
        "body": "Implement Proxied for v0.6\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-06-04T11:17:02Z",
        "closed_at": "2023-06-05T22:09:03Z",
        "merged_at": null,
        "body": "This additional if  is necessary as of abseil 20230125.3 when abseil is consumed via add_subdirectory,\r\nthe abseil_dll target  is named abseil_dll, while if abseil is consumed via find_package, the target is called `absl::abseil_dll` . \r\n\r\nOnce https://github.com/abseil/abseil-cpp/pull/1466 is merged and released in the minimum version of  abseil required by protobuf, it is possible to always link `absl::abseil_dll` and `absl::abseil_test_dll` and remove the if.\r\n\r\nYou may wonder how linking worked at all before when `protobuf_ABSL_PROVIDER STREQUAL \"package\"`, as `abseil_dll` was not an imported target defined by `find_package(absl)`. The reason behind this is that if a name that is not an imported target is passed to `target_link_libraries`, it is just regarded as a C++ library name. So, in the end the `abseil_dll` library was correctly linked, simply all the transitive usage requirements defined by the `absl::abseil_dll` target were not propagated, that could lead to compilation errors if abseil was compiled with the `ABSL_PROPAGATE_CXX_STD` CMake option enabled.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 429,
        "deletions": 432,
        "changed_files": 6,
        "created_at": "2023-06-03T04:03:15Z",
        "closed_at": "2023-06-07T22:15:52Z",
        "merged_at": null,
        "body": "Directly refer to member variable instead of internal accessors: step 2.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 39,
        "deletions": 23,
        "changed_files": 1,
        "created_at": "2023-06-03T03:47:44Z",
        "closed_at": "2023-06-07T08:43:58Z",
        "merged_at": null,
        "body": "Don't use macros to specify 64-bit literals in WireFormatTest.\n\nThe previous way of defining them is not compatible with unsigned integer overflow sanitizer, which complains about the conversion from uint64_t to int64_t in the macro LL().\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 242,
        "deletions": 283,
        "changed_files": 7,
        "created_at": "2023-06-02T23:12:02Z",
        "closed_at": "2023-06-05T00:05:13Z",
        "merged_at": null,
        "body": "Directly refer to member variable instead of internal accessors.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-06-02T21:09:40Z",
        "closed_at": "2023-08-25T21:12:14Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 35,
        "deletions": 2,
        "changed_files": 11,
        "created_at": "2023-06-02T19:18:48Z",
        "closed_at": "2023-06-05T20:56:42Z",
        "merged_at": null,
        "body": "Hi, here is Joyce from Google again.\r\n\r\nI'd like starting suggesting the [Token-Permission check](https://github.com/ossf/scorecard/blob/main/docs/checks.md#token-permissions) fix.\r\n\r\nLet me know if I might be missing any permission. Thanks!\r\n\r\n### Security Reason\r\n\r\nThis is needed because, by default, github grants write-all permission to all workflows, which could be exploit by an attacker in case of a compromised workflow. Limiting permissions is a simple and effective way to also limit the impact of an eventual compromised workflow.\r\n\r\nThus, it is both a recommendation from [OpenSSF Scorecard](https://github.com/ossf/scorecard/blob/main/docs/checks.md#token-permissions) and the [Github](https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions) to always use credentials that are minimally scoped.\r\n\r\n\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-06-02T18:29:11Z",
        "closed_at": "2023-06-05T21:54:40Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-06-02T18:17:39Z",
        "closed_at": "2023-06-05T16:56:59Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 29,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2023-06-02T15:52:13Z",
        "closed_at": "2023-06-05T19:42:55Z",
        "merged_at": null,
        "body": "Cleanup scheduled staleness tests.\n\n- Do some minimal sanity testing on every PR\n- Only run the staleness tests on a daily schedule or explicit runs.\n- Add 23.x to the checks\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-06-02T13:20:51Z",
        "closed_at": "2023-06-05T17:04:34Z",
        "merged_at": null,
        "body": "Sync up the min os versions between the C++ and ObjC CocoaPods support.\n\nFixes #12944\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 19,
        "deletions": 25,
        "changed_files": 4,
        "created_at": "2023-06-02T01:47:48Z",
        "closed_at": "2023-06-20T20:49:45Z",
        "merged_at": null,
        "body": "Raise warinings when extend repeated field with none iterable in OSS. OSS will raise errors soon\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 10,
        "changed_files": 1,
        "created_at": "2023-06-01T23:26:54Z",
        "closed_at": "2023-08-14T23:26:03Z",
        "merged_at": null,
        "body": "Rename local variable type to qualified_type\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 18,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2023-06-01T18:01:14Z",
        "closed_at": "2023-06-02T18:53:16Z",
        "merged_at": null,
        "body": "Expose `Reserve` from `MutableRepeatedFieldRef`\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 295,
        "deletions": 288,
        "changed_files": 3,
        "created_at": "2023-06-01T17:45:47Z",
        "closed_at": "2023-06-02T01:58:40Z",
        "merged_at": null,
        "body": "Replace ColdChunkSkipper with iterator-based approach.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 153,
        "changed_files": 7,
        "created_at": "2023-06-01T17:34:28Z",
        "closed_at": "2023-06-06T16:15:12Z",
        "merged_at": null,
        "body": "Refactor to remove the arena_config.h library.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 189,
        "deletions": 561,
        "changed_files": 20,
        "created_at": "2023-06-01T16:06:12Z",
        "closed_at": "2023-08-25T21:12:16Z",
        "merged_at": null,
        "body": "Remove MapEntry.\nTDP replaced most of the class' use. MapField does not need it anymore.\nWe still generate the DoNotUse class, but mostly to have a type->name map for reflection to keep working.\n\nNow the message used in reflection is generated at runtime via DynamicMessage. The descriptors still include the DoNotUse entry.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 219,
        "deletions": 242,
        "changed_files": 12,
        "created_at": "2023-06-01T15:05:17Z",
        "closed_at": "2023-06-02T14:04:35Z",
        "merged_at": null,
        "body": "Simplify Protobuf Rust runtime build setup\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-06-01T14:39:59Z",
        "closed_at": "2023-06-01T16:16:39Z",
        "merged_at": null,
        "body": "fix: missing `PROTOBUF_EXPORT` for public symbols\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-06-01T11:42:55Z",
        "closed_at": "2023-06-02T09:32:34Z",
        "merged_at": null,
        "body": "Fix staleness test workflow\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-06-01T09:35:54Z",
        "closed_at": "2023-06-13T18:04:27Z",
        "merged_at": null,
        "body": "Update rules_java to the latest version\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 77,
        "deletions": 77,
        "changed_files": 4,
        "created_at": "2023-06-01T08:51:07Z",
        "closed_at": "2023-06-08T03:33:06Z",
        "merged_at": null,
        "body": "Updates Guava to [32.0.0](https://github.com/google/guava/releases/tag/v32.0.0) to include fixes for CVE-2020-8908 and CVE-2023-2976 (https://github.com/google/guava/issues/2575) which affects certain builds with shaded usage, e.g ruby via jruby/java platform such as https://rubygems.org/gems/google-protobuf/versions/3.23.2-java\r\n\r\n- Protobuf does not appear to (directly) use the affected `Files.createTempDir` or `FileBackedOutputStream` code which might behave differently on Windows.\r\n- Referred to #9707 and #9757 for reference\r\n- Updated transitive dependency versions match https://mvnrepository.com/artifact/com.google.guava/guava/32.0.0-jre (note major version change for `j2objc-annotations` from `1.3` --> `2.8`)\r\n\r\nMay need backporting to `23.x` branch if sufficiently compatible.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-05-31T23:47:04Z",
        "closed_at": "2023-06-02T18:45:29Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-05-31T22:14:55Z",
        "closed_at": "2023-06-01T17:04:13Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 12,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2023-05-31T20:24:56Z",
        "closed_at": "2023-06-09T15:59:48Z",
        "merged_at": null,
        "body": "Mark some variables as unused.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-05-31T19:21:51Z",
        "closed_at": "2023-05-31T23:12:55Z",
        "merged_at": null,
        "body": "Clarify is_packed comments.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 54,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2023-05-31T18:55:56Z",
        "closed_at": "2023-08-25T21:12:18Z",
        "merged_at": null,
        "body": "Separate the varint write functions in two: a fast path and a tail called slow\npath.\nThis removes the overhead of stack management from the fast path.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-05-31T18:51:51Z",
        "closed_at": "2023-06-01T06:38:39Z",
        "merged_at": null,
        "body": "Update file reference for compiler/cpp/file.cc\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-05-31T17:20:43Z",
        "closed_at": "2023-06-01T15:53:29Z",
        "merged_at": null,
        "body": "Change indent the indent to try and stabilize the export/import.\n\nNot really sure why things changed and started having this problem, but\ncl/536414905 & cl/536708284 just keep swapping this so hopefully changing\nthe formatting to avoid this going forward.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 23,
        "deletions": 8,
        "changed_files": 3,
        "created_at": "2023-05-31T17:04:37Z",
        "closed_at": "2023-05-31T23:49:30Z",
        "merged_at": null,
        "body": "Check invalid type_id after casting it to uint32_t.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 30,
        "deletions": 17,
        "changed_files": 6,
        "created_at": "2023-05-31T16:56:05Z",
        "closed_at": "2023-06-02T00:30:26Z",
        "merged_at": null,
        "body": "Add a flag in the C++ generator for stripping non-functional bits.\n\nThe resulting code won't have functional reflection, but allows us to compare the functionality between two sets of gencode.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 36,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-05-31T14:46:52Z",
        "closed_at": "2023-06-02T21:30:45Z",
        "merged_at": null,
        "body": "ci: add java showcase binary compatibility check in bazel-docker\n\nThis check regenerates the Showcase Java client, and verifies that the proposed changes do not break Java binary compatibility.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 42,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-05-31T13:49:11Z",
        "closed_at": "2023-08-25T21:12:20Z",
        "merged_at": null,
        "body": "ci: add java showcase binary compatibility check without bazel cache\n\nThis check regenerates the Showcase Java client, and verifies that the proposed changes do not break Java binary compatibility.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-05-31T01:57:09Z",
        "closed_at": "2023-06-20T14:44:15Z",
        "merged_at": null,
        "body": "Close: #12810 ",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-05-30T23:07:17Z",
        "closed_at": "2023-06-09T16:21:42Z",
        "merged_at": null,
        "body": "Clean up warnings from switch statements missing cases.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 670,
        "deletions": 148,
        "changed_files": 16,
        "created_at": "2023-05-30T21:41:31Z",
        "closed_at": "2023-08-25T21:12:22Z",
        "merged_at": null,
        "body": "Internal change.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-05-30T20:56:14Z",
        "closed_at": "2023-08-25T21:12:24Z",
        "merged_at": null,
        "body": "Fix jruby encoding in new thread (#12919)\n\nIn jruby `runtime.evalScriptlet('Encoding::UTF_8')` can be broken under a newly created thread, which can cause protobuf encoding to fail. For example: https://github.com/ntkme/sass-embedded-host-ruby/actions/runs/5108602231/jobs/9182569583#step:5:544\n\nIt real issue seems to be in jruby itself. A bug report with minimal reproduction has been filed at https://github.com/jruby/jruby/issues/7820\n\nThis PR fixes the problem by effectively replacing `runtime.evalScriptlet('Encoding::UTF_8')` with `runtime.getEncodingService().convertEncodingToRubyEncoding(org.jcodings.specific.UTF8Encoding.INSTANCE)`, which works on all threads.\n\nCloses #12919\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/12919 from ntkme:fix-jruby-encoding 345680ea91e1cb73f66f023a50d4a4c30f170071\nFUTURE_COPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/12919 from ntkme:fix-jruby-encoding 345680ea91e1cb73f66f023a50d4a4c30f170071\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-05-30T20:50:01Z",
        "closed_at": "2023-08-25T21:12:27Z",
        "merged_at": null,
        "body": "Fix jruby encoding in new thread (#12919)\n\nIn jruby `runtime.evalScriptlet('Encoding::UTF_8')` can be broken under a newly created thread, which can cause protobuf encoding to fail. For example: https://github.com/ntkme/sass-embedded-host-ruby/actions/runs/5108602231/jobs/9182569583#step:5:544\n\nIt real issue seems to be in jruby itself. A bug report with minimal reproduction has been filed at https://github.com/jruby/jruby/issues/7820\n\nThis PR fixes the problem by effectively replacing `runtime.evalScriptlet('Encoding::UTF_8')` with `runtime.getEncodingService().convertEncodingToRubyEncoding(org.jcodings.specific.UTF8Encoding.INSTANCE)`, which works on all threads.\n\nCloses #12919\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/12919 from ntkme:fix-jruby-encoding 345680ea91e1cb73f66f023a50d4a4c30f170071\nFUTURE_COPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/12919 from ntkme:fix-jruby-encoding 345680ea91e1cb73f66f023a50d4a4c30f170071\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-05-30T19:47:12Z",
        "closed_at": "2023-05-30T21:04:58Z",
        "merged_at": null,
        "body": "Remove AddHelpersToExtenions() back as no-op\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 84,
        "deletions": 49,
        "changed_files": 5,
        "created_at": "2023-05-30T17:32:00Z",
        "closed_at": "2023-05-30T21:57:01Z",
        "merged_at": null,
        "body": "cleanup(cmake): prefer target over global options (#12916)\n\nIn CMake >= 3.0 it is more idiomatic to set per-target compiler options than global compiler settings. I have kept these options and defines as `PRIVATE` so they won't be exported with the target.\n\nCloses #12916\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/12916 from coryan:cleanup-cmake-avoid-global-compile-settings 3d586dc0e889ea195433f84a31d16409fb84c5d6\nFUTURE_COPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/12916 from coryan:cleanup-cmake-avoid-global-compile-settings 3d586dc0e889ea195433f84a31d16409fb84c5d6\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 47,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-05-30T16:00:19Z",
        "closed_at": "2023-06-02T21:30:36Z",
        "merged_at": null,
        "body": "ci: add java showcase binary compatibility check\n\nThis check regenerates the Showcase Java client, and verifies that the proposed changes do not break Java binary compatibility.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 60,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-05-30T14:07:59Z",
        "closed_at": "2023-05-30T15:58:59Z",
        "merged_at": null,
        "body": "This PR adds a check to regenerate the Showcase Java client, and verify that the proposed changes do not break binary compatibility.\r\n\r\nFor the generation step, the PR is currently using a fresh bazel cache: https://github.com/protocolbuffers/protobuf/compare/main...burkedavison:protobuf:binary-compatibility-check?expand=1#diff-768f07ae5ae002ce203fc8bafc379c9f97a1ebace521a592f3f9f095f322a527R165-R177\r\n\r\nHowever, we may want to use protobuf's `bazel-docker` instead:\r\nhttps://github.com/protocolbuffers/protobuf/compare/main...burkedavison:protobuf:binary-compatibility-check?expand=1#diff-768f07ae5ae002ce203fc8bafc379c9f97a1ebace521a592f3f9f095f322a527R152-R164",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-05-29T22:46:50Z",
        "closed_at": "2023-05-30T20:56:49Z",
        "merged_at": null,
        "body": "In jruby `runtime.evalScriptlet('Encoding::UTF_8')` can be broken under a newly created thread, which can cause protobuf encoding to fail. For example: https://github.com/ntkme/sass-embedded-host-ruby/actions/runs/5108602231/jobs/9182569583#step:5:544\r\n\r\nIt real issue seems to be in jruby itself. A bug report with minimal reproduction has been filed at https://github.com/jruby/jruby/issues/7820\r\n\r\nThis PR fixes the problem by effectively replacing `runtime.evalScriptlet('Encoding::UTF_8')` with `runtime.getEncodingService().convertEncodingToRubyEncoding(org.jcodings.specific.UTF8Encoding.INSTANCE)`, which works on all threads.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 142,
        "deletions": 109,
        "changed_files": 1,
        "created_at": "2023-05-26T18:19:16Z",
        "closed_at": "2023-05-27T04:26:40Z",
        "merged_at": null,
        "body": "Internal change.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 84,
        "deletions": 49,
        "changed_files": 5,
        "created_at": "2023-05-26T15:00:35Z",
        "closed_at": "2023-05-30T21:57:00Z",
        "merged_at": null,
        "body": "In CMake >= 3.0 it is more idiomatic to set per-target compiler options than global compiler settings. I have kept these options and defines as `PRIVATE` so they won't be exported with the target.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 113,
        "deletions": 14,
        "changed_files": 5,
        "created_at": "2023-05-26T14:43:27Z",
        "closed_at": "2023-05-26T17:12:26Z",
        "merged_at": null,
        "body": "feat: workaround for `DOMAIN` macro (#12903)\n\nThis is a macro on some (older) versions of GCC, and macOS, and Windows. Sigh. I moved the `#undef` block to a common section. I also took the opportunity to add a regression test for all these macros that need to be `#undef`'d.\n\nPart of the work for googleapis/google-cloud-cpp#8125\n\nCloses #12903\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/12903 from coryan:feat-workaround-for-domain-macro 2ff5979799750c4618fbbce489cce0d27574de08\nFUTURE_COPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/12903 from coryan:feat-workaround-for-domain-macro 2ff5979799750c4618fbbce489cce0d27574de08\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 17,
        "deletions": 55,
        "changed_files": 6,
        "created_at": "2023-05-26T00:40:21Z",
        "closed_at": "2023-05-30T17:21:14Z",
        "merged_at": null,
        "body": "Remove AddHelpersToExtenions() in generated code\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 38,
        "deletions": 10,
        "changed_files": 1,
        "created_at": "2023-05-25T21:07:58Z",
        "closed_at": "2023-06-01T15:24:32Z",
        "merged_at": null,
        "body": "Minor refactor to MapSorter to avoid putting the value_type/mapped_type in the std::sort instantiation.\nThis allows making only a few instantiations of std::sort (one per key type) instead of one for each key-value pair.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 150,
        "deletions": 65,
        "changed_files": 3,
        "created_at": "2023-05-25T20:43:51Z",
        "closed_at": "2023-05-30T22:05:21Z",
        "merged_at": null,
        "body": "Internal feature.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 125,
        "deletions": 52,
        "changed_files": 11,
        "created_at": "2023-05-25T17:52:05Z",
        "closed_at": "2023-05-25T19:36:17Z",
        "merged_at": "2023-05-25T19:36:17Z",
        "body": "PiperOrigin-RevId: 535306235\r\n\r\nThis breaks the java ABI in 23.x",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 73,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-05-25T16:21:33Z",
        "closed_at": "2023-05-25T17:44:45Z",
        "merged_at": null,
        "body": "Automated rollback of commit 4d76f12a82bc53cc2d846e65dd8c4bce6c1d4645.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 113,
        "deletions": 14,
        "changed_files": 5,
        "created_at": "2023-05-25T13:36:04Z",
        "closed_at": "2023-05-26T17:12:25Z",
        "merged_at": null,
        "body": "This is a macro on some (older) versions of GCC, and macOS, and Windows. Sigh. I moved the `#undef` block to a common section. I also took the opportunity to add a regression test for all these macros that need to be `#undef`'d.\r\n\r\nPart of the work for googleapis/google-cloud-cpp#8125 ",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2023-05-25T13:30:55Z",
        "closed_at": "2023-05-25T16:23:36Z",
        "merged_at": null,
        "body": "Ruby: Implement write barrier for DescriptorPool (#12883)\n\nFollowup: https://github.com/protocolbuffers/protobuf/pull/11793\n\nCloses #12883\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/12883 from casperisfine:ruby-missing-write-barrier 990e4fd3ecdd1810c5145268b21bb0ccfd771b97\nFUTURE_COPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/12883 from casperisfine:ruby-missing-write-barrier 990e4fd3ecdd1810c5145268b21bb0ccfd771b97\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2023-05-25T12:36:14Z",
        "closed_at": "2023-05-26T11:19:37Z",
        "merged_at": null,
        "body": "This will require C++14 (or higher) for the `libproto*` targets **and** anything that links them.  If multiple dependencies have different C++ requirements, CMake will use the maximum version.  It does not work with pkg-config, and does not work if the downstream dependency forcibly downgrades the compiler to C++11 (or lower).  But prevents many problems.  Note that if Abseil was compiled with C++17 it will require C++17 and that will propagate through Protobuf.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 322,
        "deletions": 334,
        "changed_files": 43,
        "created_at": "2023-05-25T08:49:42Z",
        "closed_at": "2023-09-15T15:46:11Z",
        "merged_at": null,
        "body": "This change removes code that was needed in older versions of python and it also updates existing code to make use of new language features.\r\n\r\npyupgrade was run with the --py3-only --py37-plus flags to ensure that the code still works on our oldest supported python version.\r\n\r\nThe IOError was changed to OSError (also by pyupgrade), because the in python3.3 many exception classes have been merged into OSError. See https://github.com/asottile/pyupgrade/issues/141.\r\n\r\nCloses: #12896",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 14,
        "deletions": 12,
        "changed_files": 7,
        "created_at": "2023-05-25T02:50:01Z",
        "closed_at": "2023-05-25T20:19:31Z",
        "merged_at": null,
        "body": "Respect NDEBUG for asserts even though Ruby 3+ pollutes it.\n\nPrior to this CL, asserts have no effect for Ruby 3+, because Ruby unconditionally defines `NDEBUG`: https://bugs.ruby-lang.org/issues/18777\n\nWe work around this by doing `#undef NDEBUG` right after including Ruby, if `NDEBUG` was not previously defined.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-05-24T20:54:50Z",
        "closed_at": "2023-08-25T21:12:29Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2023-05-24T18:11:48Z",
        "closed_at": "2023-05-25T19:58:17Z",
        "merged_at": null,
        "body": "Strengthen assertions on reflection methods.\n\nThis will ensure that the message is using the correct reflection object, rather than just the correct descriptor.  This distinction only matters with dynamic messages, where multiple reflection objects can exist for the same descriptor. \nFailing to pass this check can lead to UB and crashes.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 79,
        "deletions": 46,
        "changed_files": 2,
        "created_at": "2023-05-24T18:03:49Z",
        "closed_at": "2023-06-09T14:04:27Z",
        "merged_at": null,
        "body": "Handle clear for Java proto3 optionals (synthetic oneofs) using field descriptor instead of clear method.\n\nThis treats clear similarly to has and get to avoids issues from missing clear method for escaped synthetic oneofs (e.g. field _underscore -> oneof X_underscore). Previously, `clear` was using the clear method of the field (which has the same camel-cased name outside of the underscore case).\n\nWe also remove synthetic oneof camelCase names from the gencode for FieldAccesorTable since these should not be used / exposed.\n\nFixes #12880\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-05-24T01:20:18Z",
        "closed_at": "2023-05-24T21:16:13Z",
        "merged_at": null,
        "body": "Internal Change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2023-05-23T22:08:42Z",
        "closed_at": "2023-05-24T16:41:22Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-05-23T21:26:36Z",
        "closed_at": "2023-05-24T20:30:32Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 150,
        "deletions": 65,
        "changed_files": 3,
        "created_at": "2023-05-23T18:45:18Z",
        "closed_at": "2023-08-25T21:12:31Z",
        "merged_at": null,
        "body": "Internal feature.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-05-23T17:52:13Z",
        "closed_at": "2023-05-24T20:52:07Z",
        "merged_at": null,
        "body": "Persist COMPOSER_HOME so that we don't continue to query remote servers\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-05-23T13:28:49Z",
        "closed_at": "2023-05-25T16:23:35Z",
        "merged_at": null,
        "body": "Followup: https://github.com/protocolbuffers/protobuf/pull/11793",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-05-22T23:32:39Z",
        "closed_at": "2023-05-24T20:22:17Z",
        "merged_at": null,
        "body": "Fix broken ccache setup in windows builds\n\nPolicy CMP0141 broke our hack to remove /Zi, and there doesn't seem to be a way to strip debug symbols with this policy enabled.  We can disable the policy when it exists to get ccache working again and speed up our tests.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 31,
        "deletions": 3,
        "changed_files": 4,
        "created_at": "2023-05-22T23:14:10Z",
        "closed_at": "2023-05-23T19:28:25Z",
        "merged_at": null,
        "body": "Fail to parse message sets if type_id is zero.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-05-22T22:27:45Z",
        "closed_at": "2023-08-25T21:12:33Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 50,
        "deletions": 52,
        "changed_files": 2,
        "created_at": "2023-05-22T21:15:15Z",
        "closed_at": "2023-05-23T16:42:47Z",
        "merged_at": null,
        "body": "Reduce stack usage of MessageDifferencer recursion by almost half:\n - Stop using FixedArray. Memory allocators have improved since then, so the wins are smaller.\n - Prevent allocating SpecificField object in the stack. It is 96 bytes and stays in the stack frame even if used temporarily in the function.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 34,
        "deletions": 13,
        "changed_files": 1,
        "created_at": "2023-05-22T20:38:15Z",
        "closed_at": "2023-05-22T23:54:25Z",
        "merged_at": null,
        "body": "Use composer action for dependency caching.\n\nThis will reduce the flakes we've seen in PHP tests.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 227,
        "deletions": 281,
        "changed_files": 4,
        "created_at": "2023-05-22T18:21:19Z",
        "closed_at": "2023-05-30T20:39:41Z",
        "merged_at": null,
        "body": "Move more methods into MapFieldBase using the type-erased iteration functions.\nThis further reduces code duplication and binary size.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 52,
        "deletions": 52,
        "changed_files": 10,
        "created_at": "2023-05-22T17:11:48Z",
        "closed_at": "2023-08-25T21:12:35Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-05-22T15:32:51Z",
        "closed_at": "2023-05-23T22:09:58Z",
        "merged_at": null,
        "body": "Avoid int32 overflow in PackedEnumSmallRange.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2023-05-22T15:05:47Z",
        "closed_at": "2023-05-24T07:16:52Z",
        "merged_at": null,
        "body": "Closes #12869",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 71,
        "deletions": 115,
        "changed_files": 2,
        "created_at": "2023-05-21T18:00:08Z",
        "closed_at": "2023-06-21T21:03:23Z",
        "merged_at": null,
        "body": "Use ProtobufArrayList for repeated bytes field. Presize primitive arrays for fixed-length primitives.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 227,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2023-05-21T17:48:59Z",
        "closed_at": "2023-06-15T03:00:28Z",
        "merged_at": null,
        "body": "Runtime changes to adapt LazyStringArrayList for repeated bytes field.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 73,
        "deletions": 81,
        "changed_files": 11,
        "created_at": "2023-05-20T05:09:42Z",
        "closed_at": "2023-05-22T18:07:01Z",
        "merged_at": null,
        "body": "fix: keep same ABI in asan and non-asan builds (#12831)\n\nfixes: #12830\n\nCloses #12831\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 7,
        "changed_files": 2,
        "created_at": "2023-05-19T22:10:37Z",
        "closed_at": "2023-05-20T04:26:09Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 23,
        "deletions": 8,
        "changed_files": 2,
        "created_at": "2023-05-19T20:08:52Z",
        "closed_at": "2023-05-19T23:33:18Z",
        "merged_at": null,
        "body": "Mark empty private constructors as deleted instead.\n\nWhen building in debug mode, clang uses constructor type homing as an\noptimization for debug info size. This means the debug info for types is\nemitted at the same time as the constructor definition.\n\nSome `*Descriptor` types in this file only have an inline constructor which is\nnever called (by design). Instead of properly constructing these objects, it\nlooks like memory is allocated elsewhere and then cast to the needed type. This\ncauses the compiler to never emit neither the inline constructor definition nor\nthe debug info for these types, which harms the debugger experience (it is also\ntechnically undefined behavior).\n\nThis change moves their definitions out of line to the .cc file. This doesn't\nsolve the UB but it makes the compiler emit the definitions for the\nconstructors somewhere, and thus the debug info too.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-05-19T20:04:30Z",
        "closed_at": "2023-08-25T21:12:37Z",
        "merged_at": null,
        "body": "Automated rollback of changelist 533520578.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 237,
        "deletions": 69,
        "changed_files": 18,
        "created_at": "2023-05-19T18:47:06Z",
        "closed_at": "2023-05-22T20:42:02Z",
        "merged_at": null,
        "body": "Automated rollback of commit b55b834d5a7ea019bd04544f3d675ab0fc742210.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-05-19T17:29:37Z",
        "closed_at": "2023-08-25T21:12:39Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-05-19T00:15:51Z",
        "closed_at": "2023-05-19T18:02:28Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-05-18T22:07:30Z",
        "closed_at": "2023-05-23T19:21:08Z",
        "merged_at": null,
        "body": "Removed message._extensions_by_number\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-05-18T20:03:25Z",
        "closed_at": "2023-05-18T21:04:20Z",
        "merged_at": "2023-05-18T21:04:20Z",
        "body": "Fix for unknown type `int32_t` in `src/google/protobuf/compiler/objectivec/text_format_decode_data.h`\r\n\r\nIssue encountered when building with GCC 13 (MinGW-w64 on Windows 64-bit).\r\n\r\nError:\r\n```\r\nIn file included from R:/winlibs-gcc13-64/protobuf-22.3/src/google/protobuf/compiler/objectivec/text_format_decode_data.cc:31:\r\nR:/winlibs-gcc13-64/protobuf-22.3/src/google/protobuf/compiler/objectivec/text_format_decode_data.h:59:18: error: 'int32_t' has not been declared\r\n   59 |   void AddString(int32_t key, const std::string& input_for_decode,\r\n      |                  ^~~~~~~\r\nR:/winlibs-gcc13-64/protobuf-22.3/src/google/protobuf/compiler/objectivec/text_format_decode_data.h:68:21: error: 'int32_t' was not declared in this scope\r\n   68 |   typedef std::pair<int32_t, std::string> DataEntry;\r\n      |                     ^~~~~~~\r\nR:/winlibs-gcc13-64/protobuf-22.3/src/google/protobuf/compiler/objectivec/text_format_decode_data.h:40:1: note: 'int32_t' is defined in header '<cstdint>'; did you forget to '#include <cstdint>'?\r\n   39 | #include \"google/protobuf/port_def.inc\"\r\n  +++ |+#include <cstdint>\r\n   40 |\r\n```\r\n\r\nCloses #12554\r\n\r\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/12554 from brechtsanders:patch-1 0ab04b43b6c0172fee9e15669fe1aea7e351129f PiperOrigin-RevId: 527667592",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-05-18T17:51:24Z",
        "closed_at": "2023-05-19T18:10:32Z",
        "merged_at": null,
        "body": "Removed message._extensions_by_name\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 426,
        "deletions": 186,
        "changed_files": 5,
        "created_at": "2023-05-17T23:42:08Z",
        "closed_at": "2023-05-18T22:19:26Z",
        "merged_at": null,
        "body": "Expose a common helper for visiting descriptors.\n\nThis can be used immediately to simplify some of our options logic during DescriptorPool builds.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 959,
        "deletions": 717,
        "changed_files": 9,
        "created_at": "2023-05-17T19:40:09Z",
        "closed_at": "2023-05-19T18:51:55Z",
        "merged_at": null,
        "body": "Add `ABSL_ATTRIBUTE_LIFETIME_BOUND` attribute on generated message field accessors.\nThis allows the compiler to statically detect use-after-free bugs.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 37,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-05-17T18:02:02Z",
        "closed_at": "2023-05-18T18:02:11Z",
        "merged_at": null,
        "body": "Fixes false negatives in unused dependency checker.\n\nDon't mark a dependency as used just because it defines a package that's used, since many files can define the same package.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-05-17T16:00:13Z",
        "closed_at": "2023-05-17T18:48:09Z",
        "merged_at": null,
        "body": "Internal Code Change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 80,
        "deletions": 89,
        "changed_files": 5,
        "created_at": "2023-05-17T15:24:09Z",
        "closed_at": "2023-05-18T15:51:41Z",
        "merged_at": null,
        "body": "Move more methods into MapFieldBase using the untyped map/iterator types.\nThis further reduces code duplication and binary size.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 656,
        "deletions": 656,
        "changed_files": 227,
        "created_at": "2023-05-17T15:01:53Z",
        "closed_at": "2023-08-25T21:12:41Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 68,
        "deletions": 19,
        "changed_files": 2,
        "created_at": "2023-05-16T22:13:47Z",
        "closed_at": "2023-05-23T21:00:54Z",
        "merged_at": null,
        "body": "Add assertions to reflection methods.\n\nThis will ensure that the message is the appropriate type.  Failing to pass this check can lead to UB and crashes.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 28,
        "deletions": 10,
        "changed_files": 2,
        "created_at": "2023-05-16T21:47:08Z",
        "closed_at": "2023-05-19T17:27:00Z",
        "merged_at": null,
        "body": "Call RepeatedField::Reserve for small packed enums.\n\nIt's a pretty good guess that if all enum values are in [0, 128), that all the\nvarint values will be one byte long.  So we can call Reserve() on the\nRepeatedField, saving some malloc's while parsing.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 29,
        "changed_files": 1,
        "created_at": "2023-05-16T20:51:12Z",
        "closed_at": "2023-05-16T21:56:33Z",
        "merged_at": null,
        "body": "Refactor weak message field code generation to avoid code duplication by adding a \"_weak\" field variable.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2023-05-16T20:34:27Z",
        "closed_at": "2023-06-20T21:36:39Z",
        "merged_at": null,
        "body": null,
        "comments": 2
    },
    {
        "merged": false,
        "additions": 17,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-05-16T20:11:10Z",
        "closed_at": "2023-05-23T17:41:47Z",
        "merged_at": null,
        "body": "Expose a replacement for the deprecated `.RegisterExtension()` method\n\nIn the near future, `.RegisterExtension()` will begin returning an error\nwhen used with the new upb runtime.\n\nHowever, some code using that method needs to support both the upb and\npure-Python runtimes, so let's introduce a new function:\n\n```\nfrom google.protobuf import reflection\nreflection.RegisterExtensionsIfNecessary(some_file_desc)\n```\n\nThis hides the internal implementation details that would otherwise need\nto be imported by such callers to keep working.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 657,
        "deletions": 657,
        "changed_files": 227,
        "created_at": "2023-05-16T20:08:09Z",
        "closed_at": "2023-05-16T22:01:45Z",
        "merged_at": null,
        "body": "internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 25,
        "changed_files": 1,
        "created_at": "2023-05-16T19:05:51Z",
        "closed_at": "2023-05-18T18:26:49Z",
        "merged_at": null,
        "body": "fixes: #12830",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 135,
        "deletions": 96,
        "changed_files": 4,
        "created_at": "2023-05-16T16:53:24Z",
        "closed_at": "2023-08-25T21:12:43Z",
        "merged_at": null,
        "body": "Use LazyStringArrayList for repeated bytes field.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 112,
        "deletions": 9,
        "changed_files": 10,
        "created_at": "2023-05-15T23:49:33Z",
        "closed_at": "2023-05-16T15:34:54Z",
        "merged_at": "2023-05-16T15:34:54Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 17,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2023-05-15T23:42:36Z",
        "closed_at": "2023-05-16T15:34:49Z",
        "merged_at": "2023-05-16T15:34:49Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 9,
        "changed_files": 1,
        "created_at": "2023-05-15T23:28:22Z",
        "closed_at": "2023-08-25T21:12:45Z",
        "merged_at": null,
        "body": "Avoid unnecessary string copies.\nAlso, start the lookup on the smallest scope to find missing names faster.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 9,
        "changed_files": 1,
        "created_at": "2023-05-15T21:24:49Z",
        "closed_at": "2023-05-16T02:25:34Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 127,
        "deletions": 87,
        "changed_files": 14,
        "created_at": "2023-05-15T20:32:47Z",
        "closed_at": "2023-05-27T04:18:43Z",
        "merged_at": null,
        "body": "Update Java lite MessageInfo encoding to store ProtoSyntax enum instead of boolean and set/check bit for enum closeness.\n\nThis updates kMapWithProto2EnumValue -> kLegacyEnumIsClosedBit s.t. this bit now indicates closedness for enum fields as well, not just maps with enum values.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 9,
        "changed_files": 1,
        "created_at": "2023-05-15T20:27:20Z",
        "closed_at": "2023-05-15T23:29:24Z",
        "merged_at": null,
        "body": "Avoid unnecessary string copies.\nAlso, start the lookup on the smallest scope to find missing names faster.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-05-15T19:11:00Z",
        "closed_at": "2023-05-15T21:55:37Z",
        "merged_at": null,
        "body": "Add a check for minimum supported Abseil version.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 63,
        "deletions": 58,
        "changed_files": 5,
        "created_at": "2023-05-15T18:18:01Z",
        "closed_at": "2023-05-15T20:20:34Z",
        "merged_at": null,
        "body": "Add semantic annotations for field accessors in java proto lite\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 78,
        "deletions": 2,
        "changed_files": 6,
        "created_at": "2023-05-15T17:14:05Z",
        "closed_at": "2023-05-15T23:14:02Z",
        "merged_at": null,
        "body": "Add a workaround for GCC constexpr bug\n\nThis turns the constexpr constructors into templates to silence errors when constexpr isn't valid.  We are also switching to 12.2 for GCC/cmake tests to prevent regressions (9.5 and 13.1 are already tested by GCC/bazel tests).\n\nFixes #12807\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-05-15T15:34:46Z",
        "closed_at": "2023-07-31T15:55:42Z",
        "merged_at": null,
        "body": null,
        "comments": 1
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-05-15T15:18:15Z",
        "closed_at": "2023-05-29T22:54:04Z",
        "merged_at": null,
        "body": "See #12809",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 66,
        "deletions": 41,
        "changed_files": 1,
        "created_at": "2023-05-15T02:17:02Z",
        "closed_at": "2023-05-16T04:36:12Z",
        "merged_at": null,
        "body": "Incremental migration of message.cc to Emit\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 139,
        "deletions": 93,
        "changed_files": 3,
        "created_at": "2023-05-15T02:00:55Z",
        "closed_at": "2023-05-16T04:10:23Z",
        "merged_at": null,
        "body": "Incremental migration of message.cc to Emit\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 98,
        "deletions": 68,
        "changed_files": 3,
        "created_at": "2023-05-15T01:27:21Z",
        "closed_at": "2023-05-16T03:43:19Z",
        "merged_at": null,
        "body": "Incremental migration of message.cc to Emit\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 29,
        "deletions": 43,
        "changed_files": 2,
        "created_at": "2023-05-15T00:55:15Z",
        "closed_at": "2023-05-16T01:21:58Z",
        "merged_at": null,
        "body": "Incremental migration of message.cc to Emit\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 274,
        "deletions": 268,
        "changed_files": 3,
        "created_at": "2023-05-15T00:48:28Z",
        "closed_at": "2023-05-15T22:24:46Z",
        "merged_at": null,
        "body": "Incremental migration of message.cc to Emit\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 26,
        "changed_files": 2,
        "created_at": "2023-05-15T00:47:40Z",
        "closed_at": "2023-05-16T00:56:15Z",
        "merged_at": null,
        "body": "Incremental migration of message.cc to Emit\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 74,
        "deletions": 108,
        "changed_files": 3,
        "created_at": "2023-05-14T21:40:50Z",
        "closed_at": "2023-05-15T22:11:11Z",
        "merged_at": null,
        "body": "Incremental migration of message.cc to Emit\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 31,
        "deletions": 30,
        "changed_files": 9,
        "created_at": "2023-05-14T01:54:08Z",
        "closed_at": "2023-05-15T18:18:23Z",
        "merged_at": null,
        "body": "Migrate call-sites of ExtensionRangeOption fields.\n\nThese are being migrated to accessor methods of the new descriptor-like class.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2023-05-13T23:27:14Z",
        "closed_at": "2023-05-15T17:29:44Z",
        "merged_at": null,
        "body": "Internal Code Change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 115,
        "deletions": 64,
        "changed_files": 5,
        "created_at": "2023-05-13T22:43:42Z",
        "closed_at": "2023-06-05T22:08:04Z",
        "merged_at": null,
        "body": "internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 46,
        "changed_files": 3,
        "created_at": "2023-05-13T19:53:45Z",
        "closed_at": "2023-05-15T22:10:09Z",
        "merged_at": null,
        "body": "Incremental migration of message.cc to Emit\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 373,
        "deletions": 501,
        "changed_files": 6,
        "created_at": "2023-05-13T19:41:20Z",
        "closed_at": "2023-05-14T02:00:02Z",
        "merged_at": null,
        "body": "Incremental migration of message.cc to Emit\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 110,
        "changed_files": 3,
        "created_at": "2023-05-13T19:16:18Z",
        "closed_at": "2023-05-15T21:24:24Z",
        "merged_at": null,
        "body": "Remove dedicated fast path for required fields in ByteSizeLong.\n\nFormerly, they had their own fast path.  Now they share the chunked processing of all fields.  This makes chunked processing more effective as an optimization and also eliminates replicated code for repeated fields.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-05-13T18:37:39Z",
        "closed_at": "2023-05-14T03:17:13Z",
        "merged_at": null,
        "body": "Move has bit machinations from field to message in prep for switching to emit calls.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 147,
        "deletions": 122,
        "changed_files": 2,
        "created_at": "2023-05-13T18:08:40Z",
        "closed_at": "2023-05-14T02:58:01Z",
        "merged_at": null,
        "body": "Incremental migration of message.cc to Emit\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 132,
        "deletions": 107,
        "changed_files": 2,
        "created_at": "2023-05-13T18:00:03Z",
        "closed_at": "2023-05-14T02:57:07Z",
        "merged_at": null,
        "body": "Incremental migration of message.cc to Emit\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 46,
        "deletions": 39,
        "changed_files": 1,
        "created_at": "2023-05-13T17:36:25Z",
        "closed_at": "2023-05-14T02:56:09Z",
        "merged_at": null,
        "body": "Incremental migration of message.cc to Emit\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 45,
        "deletions": 39,
        "changed_files": 1,
        "created_at": "2023-05-13T17:11:40Z",
        "closed_at": "2023-08-25T21:12:47Z",
        "merged_at": null,
        "body": "Incremental migration of message.cc to Emit\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 45,
        "deletions": 39,
        "changed_files": 1,
        "created_at": "2023-05-13T16:55:20Z",
        "closed_at": "2023-05-14T02:40:47Z",
        "merged_at": null,
        "body": "Incremental migration of message.cc to Emit\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 72,
        "deletions": 82,
        "changed_files": 3,
        "created_at": "2023-05-13T16:31:41Z",
        "closed_at": "2023-05-14T01:54:33Z",
        "merged_at": null,
        "body": "Incremental migration of message.cc to Emit\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-05-12T21:24:48Z",
        "closed_at": "2023-08-15T02:14:51Z",
        "merged_at": null,
        "body": "undef the stderr, stdin, and stdout macros on windows\n\nfixes #12774\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-05-12T20:46:09Z",
        "closed_at": "2023-08-25T21:12:49Z",
        "merged_at": null,
        "body": "internal change\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 55,
        "deletions": 5,
        "changed_files": 3,
        "created_at": "2023-05-12T20:31:16Z",
        "closed_at": "2023-08-25T21:12:51Z",
        "merged_at": null,
        "body": "Update MessageDifferencer to collect the name of no presence fields that were forced into the compare list and which have caused the comparison to fail.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 168,
        "deletions": 114,
        "changed_files": 3,
        "created_at": "2023-05-12T18:59:32Z",
        "closed_at": "2023-05-15T22:32:36Z",
        "merged_at": null,
        "body": "Add `ABSL_ATTRIBUTE_LIFETIME_BOUND` attribute on Map, RepeatedField and RepeatedPtrField.\nThis allows the compiler to statically detect use-after-free bugs.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 46,
        "deletions": 58,
        "changed_files": 6,
        "created_at": "2023-05-12T18:51:42Z",
        "closed_at": "2023-05-15T15:41:03Z",
        "merged_at": null,
        "body": "Remove DeleteReturnArena.  It can be entirely replaced with Delete.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 36,
        "deletions": 69,
        "changed_files": 1,
        "created_at": "2023-05-12T18:01:39Z",
        "closed_at": "2023-05-13T03:12:43Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-05-12T16:57:50Z",
        "closed_at": "2023-05-15T18:05:41Z",
        "merged_at": null,
        "body": "The documentation for the well-known `Any` type spends quite a bit of time describing the behavior of a \"type server,\" which is effectively a schema registry. Readers can easily walk away with the impression that type servers, and the associated `Type`, `Field`, `Enum`, etc. messages, are widely used within Google. From talking to @fowles, this impression is incorrect.\r\n\r\nThis PR preserves the original documentation, but adds a note that no widely-used type servers (as described on `Any`) exist within Google or in open-source.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-05-12T15:45:50Z",
        "closed_at": "2023-05-15T15:15:17Z",
        "merged_at": null,
        "body": "Updates supported PHP versions.\n\nThis update addresses the issue raised in [GitHub Issue #12760](https://github.com/protocolbuffers/protobuf/issues/12760).\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 17,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2023-05-12T00:06:15Z",
        "closed_at": "2023-05-12T23:52:36Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 60,
        "deletions": 25,
        "changed_files": 2,
        "created_at": "2023-05-11T23:04:28Z",
        "closed_at": "2023-05-12T17:50:00Z",
        "merged_at": null,
        "body": "Tweak ExtensionRange to look more like other descriptors.\n\nThis implements some cross-linking for traversing back up the tree, and some uniformity to aid templatized descriptor helpers.  Later changes will make the previously public fields private\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 21,
        "deletions": 9,
        "changed_files": 2,
        "created_at": "2023-05-11T22:28:57Z",
        "closed_at": "2023-05-12T23:29:32Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 18,
        "changed_files": 2,
        "created_at": "2023-05-11T21:22:16Z",
        "closed_at": "2023-05-15T17:37:49Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 55,
        "deletions": 5,
        "changed_files": 3,
        "created_at": "2023-05-11T19:33:05Z",
        "closed_at": "2023-05-12T21:37:48Z",
        "merged_at": null,
        "body": "Update MessageDifferencer to collect the name of no presence fields that were forced into the compare list and which have caused the comparison to fail.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 259,
        "deletions": 236,
        "changed_files": 4,
        "created_at": "2023-05-11T19:05:25Z",
        "closed_at": "2023-05-24T00:58:35Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 14,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2023-05-11T18:55:38Z",
        "closed_at": "2023-05-12T23:01:30Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 38,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2023-05-11T18:51:38Z",
        "closed_at": "2023-05-16T00:21:22Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 127,
        "deletions": 0,
        "changed_files": 11,
        "created_at": "2023-05-11T18:46:12Z",
        "closed_at": "2023-06-07T20:19:50Z",
        "merged_at": null,
        "body": "In TSan mode, detect concurrent mutations of repeated/map fields.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 27,
        "deletions": 17,
        "changed_files": 5,
        "created_at": "2023-05-11T16:54:55Z",
        "closed_at": "2023-05-11T18:19:21Z",
        "merged_at": null,
        "body": "Rollback the behavior of using `constexpr` on `_table_` instances for all types except for the types in descriptor.proto\nDLLs get in the way of making these tables constexpr in the general case because cross-DLL references are not constant.\nHowever, we need descriptor.proto tables to be constexpr so we make those constexpr. They do not reference other DLLs.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2023-05-11T11:01:57Z",
        "closed_at": "2023-05-12T15:17:32Z",
        "merged_at": null,
        "body": "In both cases a `size_t` was being converted to a `uint32_t`. These headers are used from application code, or at least from generated code, and the application may be compiling with more warnings enabled than normal.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-05-11T10:05:15Z",
        "closed_at": "2023-05-11T15:24:19Z",
        "merged_at": null,
        "body": "Internal Change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-05-11T04:32:59Z",
        "closed_at": "2023-05-16T03:11:03Z",
        "merged_at": null,
        "body": "Hello! I'm looking to reserve an option for a project I'm calling proto-telemetry. It will create open-telemetry compatible functions that add attributes to a span. Once this is accepted I'll update the project to use the reserved option number.\r\n\r\nThanks so much!",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 55,
        "deletions": 5,
        "changed_files": 3,
        "created_at": "2023-05-11T00:54:14Z",
        "closed_at": "2023-05-11T15:30:03Z",
        "merged_at": null,
        "body": "Update MessageDifferencer to collect the name of no presence fields that were forced into the compare list and which have caused the comparison to fail.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 527,
        "deletions": 321,
        "changed_files": 5,
        "created_at": "2023-05-10T22:10:57Z",
        "closed_at": "2023-05-16T22:44:37Z",
        "merged_at": null,
        "body": "Make the fallback tree use a variant key.\nThis allows moving most of the tree logic into the .cc instead of having it duplicated on each template instantiation.\nThis reduces code size of the cold paths, making the hot paths more inlineable.\n\nMake the iterator base completely untyped now that the tree fallback is untyped. More code duplication reduction, and it will allow further improvements on MapField in followup changes.\n\nMove clearing logic to the .cc and optimize it. Having a single copy of it allows adding more logic to it without bloating the template instantiations:\n - The map destructor will no longer reset the table before deleting it. That was wasted work.\n - Use prefetching to load the nodes ahead of time. Even for trivially destructible nodes we need to read the `next` pointer.\n - Start the clearing on index_of_first_non_null_ instead of 0.\n - Check for arena==nullptr only once for the whole call instead of once per element.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 44,
        "deletions": 18,
        "changed_files": 4,
        "created_at": "2023-05-10T21:39:10Z",
        "closed_at": "2023-05-11T16:28:11Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 686,
        "deletions": 215,
        "changed_files": 18,
        "created_at": "2023-05-10T19:22:14Z",
        "closed_at": "2023-07-20T17:38:22Z",
        "merged_at": null,
        "body": "Support split repeated fields.\n\nDesign details:\n- We store the split repeated fields inline in the Split struct by pointer. We use pointers so that we can save memory when the fields are absent and so that the split struct will still be trivially copyable.\n- If we had instead stored the repeated fields by value, then we would need to add virtual functions to each Message that would call the constructors of the repeated fields which we would call during parsing after allocating non-default split structs.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 20,
        "deletions": 8,
        "changed_files": 3,
        "created_at": "2023-05-10T18:26:44Z",
        "closed_at": "2023-05-11T21:24:35Z",
        "merged_at": null,
        "body": "Add proto hooks for unknown fields.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 50,
        "deletions": 54,
        "changed_files": 3,
        "created_at": "2023-05-10T17:05:19Z",
        "closed_at": "2023-05-16T18:57:59Z",
        "merged_at": null,
        "body": "Refactor repeated cord to have internal_$name$() and simplify $name$_size() definition.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 814,
        "deletions": 842,
        "changed_files": 10,
        "created_at": "2023-05-10T03:23:06Z",
        "closed_at": "2023-05-11T19:16:22Z",
        "merged_at": null,
        "body": "Incremental migration of message.cc to Emit\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 51,
        "deletions": 51,
        "changed_files": 35,
        "created_at": "2023-05-09T23:18:59Z",
        "closed_at": "2023-05-10T03:49:04Z",
        "merged_at": "2023-05-10T03:49:04Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-05-09T22:15:23Z",
        "closed_at": "2023-05-10T15:01:47Z",
        "merged_at": null,
        "body": "Add missing `PROTOBUF_EXPORT` to `_table_` static data members for MSVC shared library builds.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 88,
        "deletions": 35,
        "changed_files": 2,
        "created_at": "2023-05-09T21:09:37Z",
        "closed_at": "2023-05-12T20:31:45Z",
        "merged_at": null,
        "body": "Migrate repeated numeric fields to use bit field to track presence instead of using it to indicate the field mutability to potentially skip work on the field during build operations.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 27,
        "deletions": 9,
        "changed_files": 2,
        "created_at": "2023-05-09T20:54:56Z",
        "closed_at": "2023-05-09T23:21:54Z",
        "merged_at": "2023-05-09T23:21:54Z",
        "body": "This also adds tests for C++17 and C++20 to prevent further regressions.\r\n\r\nPiperOrigin-RevId: 530693318",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 21,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2023-05-09T20:54:06Z",
        "closed_at": "2023-05-09T23:22:09Z",
        "merged_at": "2023-05-09T23:22:09Z",
        "body": "This also adds tests for C++17 and C++20 to prevent further regressions.\r\n\r\nPiperOrigin-RevId: 530693318",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1005,
        "deletions": 1132,
        "changed_files": 10,
        "created_at": "2023-05-09T19:52:59Z",
        "closed_at": "2023-05-11T17:21:02Z",
        "merged_at": null,
        "body": "Incremental migration of message.cc to Emit\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 156,
        "deletions": 87,
        "changed_files": 6,
        "created_at": "2023-05-09T16:43:32Z",
        "closed_at": "2023-05-10T15:42:47Z",
        "merged_at": null,
        "body": "Improve map tests:\n - Make sure the hash flooding test actually does hash flooding. The technique used to choose the inputs stopped working when random seeding was added. Now we assert trees are used in the test so it won't silently break again.\n - Improve test coverage for tree buckets.\n - Update the hash flood test to use absl::Time/Duration.\n - Improve the map tests to use long strings. This way we can test that the values are being properly destroyed. Small strings could be leaked without side effects because of SSO.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 40,
        "deletions": 40,
        "changed_files": 25,
        "created_at": "2023-05-09T16:29:57Z",
        "closed_at": "2023-05-09T18:28:41Z",
        "merged_at": null,
        "body": "Merge to main after 23.0 release (#12721)\n\nCloses #12721\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/12721 from protocolbuffers:main-202305082101 36482b4c68601de6a2784e7a316e7679f3817728\nFUTURE_COPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/12721 from protocolbuffers:main-202305082101 36482b4c68601de6a2784e7a316e7679f3817728\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-05-09T15:09:11Z",
        "closed_at": "2023-05-10T16:20:09Z",
        "merged_at": null,
        "body": "When building protobuf with BUILD_SHARED_LIBS disabled, conformance_test_runner should link jsoncpp_static but not jsoncpp_lib.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 60,
        "deletions": 52,
        "changed_files": 3,
        "created_at": "2023-05-09T12:53:11Z",
        "closed_at": "2023-05-09T18:22:28Z",
        "merged_at": null,
        "body": "Incremental migration of message.cc to Emit\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-05-09T12:45:33Z",
        "closed_at": "2023-05-09T16:29:12Z",
        "merged_at": null,
        "body": "Incremental migration of message.cc to Emit\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 30,
        "deletions": 12,
        "changed_files": 4,
        "created_at": "2023-05-09T05:27:30Z",
        "closed_at": "2023-05-11T16:21:05Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-05-09T01:42:49Z",
        "closed_at": "2023-05-09T21:19:41Z",
        "merged_at": null,
        "body": "When field tracking is enabled, use the normal base class.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-05-08T23:44:45Z",
        "closed_at": "2023-05-09T15:41:06Z",
        "merged_at": "2023-05-09T15:41:06Z",
        "body": "This crash was due to the fact that we were passing `nullptr` as a `const char*` parameter and relying on that implicitly converting into an empty `absl::string_view`. `absl::string_view` supports that functionality, but starting with C++17 its behavior changes since it's just a type alias for `std::string_view`. `std::string_view` does not have any special conversion for nullptr and so we were just getting crashes.\r\n\r\nPiperOrigin-RevId: 530431663",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-05-08T23:43:13Z",
        "closed_at": "2023-05-09T15:51:18Z",
        "merged_at": "2023-05-09T15:51:18Z",
        "body": "This crash was due to the fact that we were passing `nullptr` as a `const char*` parameter and relying on that implicitly converting into an empty `absl::string_view`. `absl::string_view` supports that functionality, but starting with C++17 its behavior changes since it's just a type alias for `std::string_view`. `std::string_view` does not have any special conversion for nullptr and so we were just getting crashes.\r\n\r\nPiperOrigin-RevId: 530431663",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 27,
        "deletions": 10,
        "changed_files": 2,
        "created_at": "2023-05-08T23:02:45Z",
        "closed_at": "2023-05-09T20:15:54Z",
        "merged_at": null,
        "body": "Fix C++17 gcc issues.\n\nThis also adds tests for C++17 and C++20 to prevent further regressions.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-05-08T22:05:11Z",
        "closed_at": "2023-08-25T21:12:52Z",
        "merged_at": null,
        "body": "internal\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 60,
        "deletions": 61,
        "changed_files": 36,
        "created_at": "2023-05-08T21:07:26Z",
        "closed_at": "2023-05-09T16:08:36Z",
        "merged_at": "2023-05-09T16:08:36Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 3,
        "changed_files": 4,
        "created_at": "2023-05-08T20:09:16Z",
        "closed_at": "2023-07-06T23:35:45Z",
        "merged_at": null,
        "body": "`find_dependency()` is designed to be used in `*-config.cmake` files. It is a thin wrapper around `find_package()` that propagates any `QUIET` or `REQUIRED` parameters:\r\n\r\n  https://cmake.org/cmake/help/latest/module/CMakeFindDependencyMacro.html\r\n\r\nIn general, the error messages from `find_dependency()` are easier to grok.  Without them it may be hard to find out why a `find_package(Protobuf CONFIG REQUIRED)` failed, or to understand why `find_package(Protobuf CONFIG QUIET)` is generating noise Protobuf's dependencies.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 662,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2023-05-08T19:09:48Z",
        "closed_at": "2023-10-17T12:30:48Z",
        "merged_at": null,
        "body": "addresses https://github.com/protocolbuffers/protobuf/issues/12714 by dumping more concise debug info for protobuf messages and repeated fields via the `serializeToJsonString` function. Additionally, message types which serialize into something other than an array (e.g. `Google\\Protobuf\\Value`, `Google\\Protobuf\\Timestamp`, etc) are handled in a special way to make their output consistent with other messages.\r\n\r\n```php\r\n$m = new Google\\Protobuf\\DoubleValue();\r\n$m->setValue(1.5);\r\nvar_dump($m);\r\n```\r\nwill output \r\n```\r\nobject(Google\\Protobuf\\DoubleValue)#12 (1) {\r\n  [\"value\"]=>\r\n  float(1.5)\r\n}\r\n```",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 39,
        "deletions": 39,
        "changed_files": 23,
        "created_at": "2023-05-08T17:52:25Z",
        "closed_at": "2023-05-08T20:00:01Z",
        "merged_at": "2023-05-08T20:00:01Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 75,
        "deletions": 55,
        "changed_files": 4,
        "created_at": "2023-05-08T17:01:15Z",
        "closed_at": "2023-05-08T21:07:29Z",
        "merged_at": null,
        "body": "Refactor weak repeated message field code in order to support split repeated fields.\n\n- Make WeakRepeatedPtrField arena constructible/destructor skippable.\n- Add _internal_weak_$name$()/_internal_mutable_weak_$name$().\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 69,
        "deletions": 66,
        "changed_files": 1,
        "created_at": "2023-05-08T16:30:16Z",
        "closed_at": "2023-05-09T00:56:05Z",
        "merged_at": null,
        "body": "Incremental migration of message.cc to Emit\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 56,
        "deletions": 53,
        "changed_files": 1,
        "created_at": "2023-05-08T15:35:11Z",
        "closed_at": "2023-05-09T00:40:00Z",
        "merged_at": null,
        "body": "Incremental migration of message.cc to Emit\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 14,
        "changed_files": 1,
        "created_at": "2023-05-08T15:34:34Z",
        "closed_at": "2023-05-08T19:30:23Z",
        "merged_at": null,
        "body": "CMake has fairly strict backwards compatibility behavior. Saying `cmake_minimum_required(VERSION 3.10)` has two effects:\r\n\r\n- It requires CMake to be version 3.10 or higher\r\n- It configures CMake to behave exactly as it did in version 3.10\r\n\r\nThe code used to override some policies to get newer behavior if it was available. The alternative syntax in this PR says \"require at least 3.10, and use the behavior (when available) up to 3.26\". We can omit policy overrides by doing so. It does not seem like any other policies are important, so we can use the simpler syntax.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 40,
        "deletions": 34,
        "changed_files": 1,
        "created_at": "2023-05-08T14:31:28Z",
        "closed_at": "2023-05-09T00:33:46Z",
        "merged_at": null,
        "body": "Incremental migration of message.cc to Emit\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 22,
        "deletions": 24,
        "changed_files": 1,
        "created_at": "2023-05-07T22:12:58Z",
        "closed_at": "2023-05-08T20:28:17Z",
        "merged_at": null,
        "body": "Incremental migration of message.cc to Emit\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 14,
        "deletions": 14,
        "changed_files": 1,
        "created_at": "2023-05-07T22:12:53Z",
        "closed_at": "2023-05-08T19:59:25Z",
        "merged_at": null,
        "body": "Incremental migration of message.cc to Emit\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 46,
        "deletions": 39,
        "changed_files": 1,
        "created_at": "2023-05-07T22:11:22Z",
        "closed_at": "2023-05-08T21:31:47Z",
        "merged_at": null,
        "body": "Incremental migration of message.cc to Emit\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 15,
        "deletions": 9,
        "changed_files": 5,
        "created_at": "2023-05-07T20:41:19Z",
        "closed_at": "2023-05-08T17:01:37Z",
        "merged_at": "2023-05-08T17:01:37Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 15,
        "deletions": 9,
        "changed_files": 5,
        "created_at": "2023-05-07T20:39:27Z",
        "closed_at": "2023-05-08T16:20:57Z",
        "merged_at": "2023-05-08T16:20:57Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-05-06T22:00:58Z",
        "closed_at": "2023-05-07T19:46:33Z",
        "merged_at": null,
        "body": "On Wndows, `size_t` is 64-bits, and `int` is 32-bits. That makes conversions from `size_t` to `int` potentially lossy, and they generate warnings.  In this case an `int` variable was assigned to `size_t` and then passed to functions consuming `int`. Seems simpler to use `auto` and avoid these problems altogether.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2023-05-06T21:58:15Z",
        "closed_at": "2023-05-07T16:24:45Z",
        "merged_at": null,
        "body": "When the protobuf libraries have been compiled as shared libraries the users of the library need to add `-DPROTOBUF_USE_DLLS` to their build line. Otherwise some symbols are missing.\r\n\r\nFixes #12699 \r\n\r\nFWIW, I am not sure this is an ideal fix.  It may be better to fix the headers such that no macros change the ABI.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-05-06T21:45:47Z",
        "closed_at": "2023-05-07T16:31:36Z",
        "merged_at": null,
        "body": "My sketch to fix #12672 was wrong.  This works for realsies.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-05-06T21:43:06Z",
        "closed_at": "2023-05-07T20:13:55Z",
        "merged_at": null,
        "body": "Warnings in header files can be a problem for consumers that enable `/WX` (or `-Werror`).  In this case, using `... & -align` produces a warning (C4146) with MSVC. The fix is to use equivalent expression `...  & ~(align - 1)`, which was already used in the same file.\r\n\r\nFixes #12675 ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 72,
        "deletions": 12,
        "changed_files": 5,
        "created_at": "2023-05-06T03:23:26Z",
        "closed_at": "2023-05-06T05:43:38Z",
        "merged_at": "2023-05-06T05:43:38Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 80,
        "deletions": 12,
        "changed_files": 6,
        "created_at": "2023-05-06T03:23:03Z",
        "closed_at": "2023-05-06T06:03:59Z",
        "merged_at": "2023-05-06T06:03:59Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 63,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-05-05T22:13:40Z",
        "closed_at": "2023-05-26T22:30:10Z",
        "merged_at": null,
        "body": "Update retention logic to remove empty options messages\n\nThis way the retention stripping will not leave empty options messages lying\naround.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-05-05T21:55:10Z",
        "closed_at": "2023-05-08T16:06:21Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-05-05T21:41:08Z",
        "closed_at": "2023-05-05T23:24:11Z",
        "merged_at": null,
        "body": "Deprecated APIs that add non top descriptors to pool will be removed soon\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-05-05T21:36:50Z",
        "closed_at": "2023-05-05T22:41:14Z",
        "merged_at": null,
        "body": "Incremental migration of message.cc to Emit\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 58,
        "deletions": 2,
        "changed_files": 4,
        "created_at": "2023-05-05T20:54:17Z",
        "closed_at": "2023-05-06T04:27:20Z",
        "merged_at": null,
        "body": "Add tests for GCC support window.\n\nNote: gcc only supports docker images down to 9.5, and the 7.3 image is very old and problematic.  A follow-up change might enable testing for GCC 7.3, which is our minimal supported version\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 14,
        "deletions": 10,
        "changed_files": 2,
        "created_at": "2023-05-05T20:33:54Z",
        "closed_at": "2023-05-05T23:33:09Z",
        "merged_at": null,
        "body": "Avoid using string(JOIN..., which requires cmake 3.12\n\nThis also downgrades our tests to use cmake 3.10, compatible with our support window.\n\nCloses #12672\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 26,
        "deletions": 15,
        "changed_files": 4,
        "created_at": "2023-05-05T19:56:31Z",
        "closed_at": "2023-05-09T14:19:11Z",
        "merged_at": null,
        "body": "Internal Change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 45,
        "deletions": 45,
        "changed_files": 4,
        "created_at": "2023-05-05T18:17:28Z",
        "closed_at": "2023-05-09T00:32:44Z",
        "merged_at": null,
        "body": "Remove RegisterExtension() in python generated code\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-05-05T17:47:45Z",
        "closed_at": "2023-05-05T22:34:32Z",
        "merged_at": null,
        "body": "Incremental migration of message.cc to Emit\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-05-05T17:39:13Z",
        "closed_at": "2023-05-08T23:28:31Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 33,
        "deletions": 24,
        "changed_files": 1,
        "created_at": "2023-05-05T17:07:07Z",
        "closed_at": "2023-05-05T22:02:31Z",
        "merged_at": null,
        "body": "Incremental migration of message.cc to Emit\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-05-05T16:46:18Z",
        "closed_at": "2023-05-09T16:48:51Z",
        "merged_at": null,
        "body": "Do on-demand initialization of global default instances for FileDescriptorProto in MSVC. MSVC will not properly constant initialize them, and they are needed during registration for parsing, which could happen before FileDescriptorProto TU's dynamic initializers run.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2411,
        "deletions": 2953,
        "changed_files": 10,
        "created_at": "2023-05-05T16:39:59Z",
        "closed_at": "2023-05-05T19:34:56Z",
        "merged_at": null,
        "body": "MSVC will not properly constant initialize the default message instances.\nWe need the defaults during registration for parsing, so we have to dynamically initialize them.\nWe only do this dynamic initialization for FileDescriptorProto's file.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-05-05T14:00:03Z",
        "closed_at": "2023-05-06T03:30:52Z",
        "merged_at": null,
        "body": "easy-menu-add has always been a no-op in GNU emacs. It did something in XEmacs, but XEmacs is dead.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 20,
        "deletions": 101,
        "changed_files": 5,
        "created_at": "2023-05-04T21:12:42Z",
        "closed_at": "2023-05-04T22:22:35Z",
        "merged_at": null,
        "body": "Automated rollback of commit bc94b4b8d0b6e2d5b0600a4c8a1dc31217660f40.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 79,
        "deletions": 33,
        "changed_files": 6,
        "created_at": "2023-05-04T20:03:36Z",
        "closed_at": "2023-05-04T21:07:36Z",
        "merged_at": "2023-05-04T21:07:36Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2300,
        "deletions": 1815,
        "changed_files": 9,
        "created_at": "2023-05-04T18:13:48Z",
        "closed_at": "2023-06-12T07:39:57Z",
        "merged_at": null,
        "body": "Remove RegisterExtension in message class\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 51,
        "deletions": 51,
        "changed_files": 35,
        "created_at": "2023-05-04T18:03:40Z",
        "closed_at": "2023-05-04T19:32:06Z",
        "merged_at": "2023-05-04T19:32:06Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-05-04T17:04:12Z",
        "closed_at": "2023-05-04T18:14:07Z",
        "merged_at": null,
        "body": "Remove --remote argument in cmake tests.\n\nThis will prevent non-hermetic breakages from changes to the Abseil release branch we're pinned to.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2023-05-04T16:48:37Z",
        "closed_at": "2023-05-04T17:54:33Z",
        "merged_at": "2023-05-04T17:54:33Z",
        "body": "This partially addresses https://github.com/protocolbuffers/protobuf/issues/12201",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-05-04T16:19:11Z",
        "closed_at": "2023-05-04T22:45:00Z",
        "merged_at": "2023-05-04T22:45:00Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 22,
        "changed_files": 5,
        "created_at": "2023-05-04T08:10:43Z",
        "closed_at": "2023-05-04T12:10:11Z",
        "merged_at": null,
        "body": "Delete unnecessary TODO\n\nWe don't use todos to remind us that V0 needs to be replaced with V1.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 20,
        "changed_files": 4,
        "created_at": "2023-05-04T08:05:06Z",
        "closed_at": "2023-05-04T11:37:06Z",
        "merged_at": null,
        "body": "Enable sanitizers\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2023-05-04T07:58:20Z",
        "closed_at": "2023-05-04T09:36:41Z",
        "merged_at": null,
        "body": "Delete unnecessary TODO\n\nWe don't use todos to remind us that V0 needs to be replaced with V1.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-05-04T07:54:50Z",
        "closed_at": "2023-05-04T09:29:48Z",
        "merged_at": null,
        "body": "Cleanup references to b/270125787\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 63,
        "deletions": 60,
        "changed_files": 3,
        "created_at": "2023-05-03T22:40:34Z",
        "closed_at": "2023-05-04T19:59:11Z",
        "merged_at": null,
        "body": "Define a new set of cmake tests.\n\nThese more closely follow the standard practices of our users, where dependencies are pre-installed instead of using our provided sub-modules.  This will prevent issues such as #12201 from reoccuring.\n\nAdditionally, this cl bumps our Abseil dependency to the latest release, and fixes a GTest issue that went previously unnoticed.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 7,
        "changed_files": 6,
        "created_at": "2023-05-03T19:57:13Z",
        "closed_at": "2023-05-08T19:07:12Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 234,
        "deletions": 134,
        "changed_files": 9,
        "created_at": "2023-05-03T19:30:25Z",
        "closed_at": "2023-05-03T20:50:04Z",
        "merged_at": null,
        "body": "Automated rollback of commit a2c5ea614cd5330de4b56a9937377f65309a31f8.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 155,
        "deletions": 25,
        "changed_files": 6,
        "created_at": "2023-05-03T17:09:36Z",
        "closed_at": "2023-05-05T22:26:55Z",
        "merged_at": null,
        "body": "Move more allowlists into the new directory.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-05-03T16:13:36Z",
        "closed_at": "2023-05-03T17:15:40Z",
        "merged_at": "2023-05-03T17:15:40Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 51,
        "deletions": 6,
        "changed_files": 3,
        "created_at": "2023-05-03T15:27:32Z",
        "closed_at": "2023-05-03T19:34:48Z",
        "merged_at": null,
        "body": "Fix handling of Cord fields in the table-driven parser.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 12,
        "deletions": 7,
        "changed_files": 2,
        "created_at": "2023-05-03T14:44:59Z",
        "closed_at": "2023-05-03T20:03:55Z",
        "merged_at": null,
        "body": "make Context::Emit pass SourceLocation\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3855,
        "deletions": 3863,
        "changed_files": 24,
        "created_at": "2023-05-03T03:10:40Z",
        "closed_at": "2023-05-04T15:16:41Z",
        "merged_at": null,
        "body": "Delete PROTOBUF_NAMESPACE_* macros.\n\nThese are no longer needed thanks to how our OSS sync works.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 105,
        "changed_files": 1,
        "created_at": "2023-05-02T22:15:26Z",
        "closed_at": "2023-05-03T19:28:31Z",
        "merged_at": null,
        "body": "Remove unreferenced file\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-05-02T22:14:49Z",
        "closed_at": "2023-05-03T15:22:13Z",
        "merged_at": null,
        "body": "Implement option retention for Ruby\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-05-02T21:40:07Z",
        "closed_at": "2023-05-04T18:51:58Z",
        "merged_at": null,
        "body": "Use function pointers instead of instance defaults for MSVC. The instance defaults are not constant initialized and are not ready to use during registration.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-05-02T18:22:34Z",
        "closed_at": "2023-05-02T20:10:33Z",
        "merged_at": null,
        "body": "\u2026e version specified in protobuf_deps.\r\n\r\nPiperOrigin-RevId: 528838071",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-05-02T17:33:10Z",
        "closed_at": "2023-05-02T19:43:39Z",
        "merged_at": "2023-05-02T19:43:39Z",
        "body": "We found last week that Clang's support for `musttail` on 32-bit Linux does not seem to work reliably, so let's disable it for now.\r\n\r\nPiperOrigin-RevId: 528817403",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-05-02T17:31:36Z",
        "closed_at": "2023-05-02T19:43:21Z",
        "merged_at": "2023-05-02T19:43:21Z",
        "body": "We found last week that Clang's support for `musttail` on 32-bit Linux does not seem to work reliably, so let's disable it for now.\r\n\r\nPiperOrigin-RevId: 528817403",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 20,
        "deletions": 10,
        "changed_files": 3,
        "created_at": "2023-05-02T17:28:16Z",
        "closed_at": "2023-05-02T21:10:32Z",
        "merged_at": "2023-05-02T21:10:32Z",
        "body": "Cherrypick of https://github.com/protocolbuffers/protobuf/commit/99529a22092fd2b06bfddc3d0af702ff7a1b39bf and https://github.com/protocolbuffers/protobuf/commit/859410bccc59aeeef1c48e34960fe93827767bac",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-05-02T15:35:23Z",
        "closed_at": "2023-05-02T17:12:16Z",
        "merged_at": null,
        "body": "Turn off `clang::musttail` on i386\n\nWe found last week that Clang's support for `musttail` on 32-bit Linux does not\nseem to work reliably, so let's disable it for now.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 104,
        "deletions": 32,
        "changed_files": 5,
        "created_at": "2023-05-02T12:09:17Z",
        "closed_at": "2023-05-03T12:38:55Z",
        "merged_at": null,
        "body": "Zhuzh up the C++/Rust interop test to demonstrate more uses.\n\nTaking over the work done by mcyoung@\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-05-01T23:28:00Z",
        "closed_at": "2023-05-03T15:06:41Z",
        "merged_at": null,
        "body": "Make the TcParser tables constexpr.\nWithout it some compilers will not constant initialize the tables and cause\nruntime failures during registration. We must be able to parse descriptors\nduring dynamic initialization.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2023-05-01T22:50:31Z",
        "closed_at": "2023-05-02T18:21:11Z",
        "merged_at": null,
        "body": "Update abseil dependency and reorder dependencies to ensure we use the version specified in protobuf_deps.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2023-05-01T22:40:17Z",
        "closed_at": "2023-05-02T16:11:02Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-05-01T18:18:39Z",
        "closed_at": "2023-05-01T22:13:28Z",
        "merged_at": null,
        "body": "Fix bug in _internal_copy_files where the rule would fail in downstream repositories.\n\nTaken from https://github.com/protocolbuffers/upb/blob/main/bazel/protobuf.patch#L42\n\nFixes https://github.com/protocolbuffers/protobuf/issues/12620.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 23,
        "deletions": 22,
        "changed_files": 2,
        "created_at": "2023-05-01T17:47:07Z",
        "closed_at": "2023-05-01T19:41:43Z",
        "merged_at": "2023-05-01T19:41:43Z",
        "body": "Cherrypick of https://github.com/protocolbuffers/protobuf/pull/12619",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 23,
        "deletions": 22,
        "changed_files": 2,
        "created_at": "2023-05-01T14:08:50Z",
        "closed_at": "2023-05-01T17:41:24Z",
        "merged_at": "2023-05-01T17:41:24Z",
        "body": "Part of the work for #12618 ",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 212,
        "deletions": 259,
        "changed_files": 1,
        "created_at": "2023-04-29T21:01:33Z",
        "closed_at": "2023-05-02T01:50:05Z",
        "merged_at": null,
        "body": "Refactor map_field.cc to use Emit().\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 605,
        "deletions": 832,
        "changed_files": 7,
        "created_at": "2023-04-29T21:01:31Z",
        "closed_at": "2023-05-02T01:10:15Z",
        "merged_at": null,
        "body": "Convert about a third of message_field.cc to use multi-line string literals.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 15,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-04-29T00:23:46Z",
        "closed_at": "2023-05-02T00:06:57Z",
        "merged_at": null,
        "body": "Add option retention test for C#\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-04-28T20:59:18Z",
        "closed_at": "2023-05-01T19:19:19Z",
        "merged_at": null,
        "body": "Remove redaction flag from DebugString.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 30,
        "deletions": 30,
        "changed_files": 23,
        "created_at": "2023-04-28T18:41:21Z",
        "closed_at": "2023-04-28T19:57:09Z",
        "merged_at": "2023-04-28T19:57:09Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-04-28T00:34:24Z",
        "closed_at": "2023-04-29T06:35:22Z",
        "merged_at": null,
        "body": "-Make message __deepcopy__ call UPB code instead of default implementation for python UPB (splitted change 1)\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-04-28T00:28:21Z",
        "closed_at": "2023-08-25T21:12:54Z",
        "merged_at": null,
        "body": "Upgrade to ccache 4.8 for VS 2022 support\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 5,
        "changed_files": 4,
        "created_at": "2023-04-27T23:51:37Z",
        "closed_at": "2023-04-28T15:57:46Z",
        "merged_at": "2023-04-28T15:57:46Z",
        "body": "Without this, certain failures will be silently ignored.\r\n\r\nPiperOrigin-RevId: 527718574",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-04-27T23:22:43Z",
        "closed_at": "2023-04-28T15:57:36Z",
        "merged_at": "2023-04-28T15:57:36Z",
        "body": "PiperOrigin-RevId: 527711840\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-04-27T22:24:53Z",
        "closed_at": "2023-05-01T21:36:17Z",
        "merged_at": null,
        "body": null,
        "comments": 2
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 645,
        "changed_files": 50,
        "created_at": "2023-04-27T22:07:39Z",
        "closed_at": "2023-05-01T19:07:08Z",
        "merged_at": null,
        "body": "3.19.x is no longer supported by ruby and the tests are flaky",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 152,
        "deletions": 38,
        "changed_files": 9,
        "created_at": "2023-04-27T21:54:20Z",
        "closed_at": "2023-04-28T00:07:14Z",
        "merged_at": "2023-04-28T00:07:14Z",
        "body": null,
        "comments": 2
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 5,
        "changed_files": 4,
        "created_at": "2023-04-27T20:57:13Z",
        "closed_at": "2023-04-27T23:48:39Z",
        "merged_at": null,
        "body": "Add -ex switch to all docker bash commands.\n\nWithout this, certain failures will be silently ignored.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-04-27T20:15:10Z",
        "closed_at": "2023-05-15T07:57:05Z",
        "merged_at": null,
        "body": "Fixes compile errors with GCC 13\r\n\r\n../protobuf-22.3/src/google/protobuf/compiler/objectivec/text_format_decode_data.h:59:18: error: 'int32_t' has not been declared",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 374,
        "deletions": 212,
        "changed_files": 3,
        "created_at": "2023-04-27T18:27:00Z",
        "closed_at": "2023-08-25T21:12:57Z",
        "merged_at": null,
        "body": "DO_NOT_SUBMIT\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 51,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2023-04-27T17:45:48Z",
        "closed_at": "2023-04-27T18:58:57Z",
        "merged_at": null,
        "body": "Remove osgi dependency from main java libraries.\n\n//java:core, //java:lite, and //java:util shouldn't have this extra dependency. For now, we just add a separate version but we will look into using the java_library in protobuf_versioned_java_library in the future.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 124,
        "deletions": 124,
        "changed_files": 4,
        "created_at": "2023-04-27T17:26:31Z",
        "closed_at": "2023-05-03T22:48:08Z",
        "merged_at": null,
        "body": "Rename `target` field to `target_obsolete_do_not_use`\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-04-27T16:28:00Z",
        "closed_at": "2023-04-27T17:28:43Z",
        "merged_at": "2023-04-27T17:28:43Z",
        "body": "Closes #12439",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 9,
        "changed_files": 2,
        "created_at": "2023-04-27T15:42:40Z",
        "closed_at": "2023-05-02T18:34:10Z",
        "merged_at": null,
        "body": "Add support for option retention in PHP\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 10,
        "changed_files": 1,
        "created_at": "2023-04-27T00:13:28Z",
        "closed_at": "2023-08-25T21:12:59Z",
        "merged_at": null,
        "body": "Add RegisterExtension() for UPB python which does nothing but can make message_factory work with extensions.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 24,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-04-27T00:08:25Z",
        "closed_at": "2023-05-01T15:59:21Z",
        "merged_at": null,
        "body": "Forbid embedded nulls in `json_name`.\n\nWhile embedded nulls are technically allowed in JSON strings (and thus as object keys), they put undesirable constraints on implementations.  Embedded nulls require that string length is stored explicitly, which wastes memory to accommodate a case that virtually nobody wants or needs.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 22,
        "deletions": 12,
        "changed_files": 2,
        "created_at": "2023-04-27T00:07:11Z",
        "closed_at": "2023-05-01T16:38:15Z",
        "merged_at": null,
        "body": "Allows the use of an external `jsoncpp` library to be used. Replicates the model used by `abseil-cpp` as a \"package\" or \"module\" to the `protobuf_JSONCPP_PROVIDER` option.\r\n\r\nResolves: #11827",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 38,
        "deletions": 30,
        "changed_files": 4,
        "created_at": "2023-04-26T23:49:00Z",
        "closed_at": "2023-08-25T21:13:01Z",
        "merged_at": null,
        "body": "Remove osgi dependency from //java:core, //java:lite, and //java:util\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 92,
        "deletions": 27,
        "changed_files": 4,
        "created_at": "2023-04-26T23:06:39Z",
        "closed_at": "2023-04-27T00:37:48Z",
        "merged_at": null,
        "body": "Replace previous breaking changes with deprecation warnings.\n\nThese changes hid public APIs that are deprecated in advance of protobuf editions.  They will be fully removed in a future release.  Any uses of them should be migrated to the future-facing feature helpers we provide on descriptor classes.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 12,
        "deletions": 7,
        "changed_files": 3,
        "created_at": "2023-04-26T22:27:58Z",
        "closed_at": "2023-04-29T00:21:02Z",
        "merged_at": null,
        "body": "Implement option retention for C#\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-04-26T22:00:08Z",
        "closed_at": "2023-04-27T16:18:39Z",
        "merged_at": null,
        "body": "Force `Rep` size to be at least 8 bytes when running under a sanitizer\n\nSanitizers are picky for container start addresses to be aligned at 8 byte aligned offsets, which causes issues under 32 bit compilations as we lay out the internal layout as {arena*, elements[...]}. This change forces the minimum header size to be at least 8 bytes, adding padding as needed.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-04-26T20:14:44Z",
        "closed_at": "2023-04-27T00:28:50Z",
        "merged_at": null,
        "body": "Fix homebrew issue on Mac runners causing PHP CI failures\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-04-26T19:38:39Z",
        "closed_at": "2023-04-26T20:47:51Z",
        "merged_at": null,
        "body": "Remove unused Emit variable.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 14,
        "changed_files": 1,
        "created_at": "2023-04-26T17:25:39Z",
        "closed_at": "2023-08-25T21:13:03Z",
        "merged_at": null,
        "body": "Try changing Arena::Create.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 208,
        "deletions": 341,
        "changed_files": 5,
        "created_at": "2023-04-26T15:14:33Z",
        "closed_at": "2023-05-08T19:22:59Z",
        "merged_at": null,
        "body": "Reduce code bloat related to MapField:\n - Move several operations from MapField/DynamicMapField into TypeDefinedMapFieldBase.\n - Change MapIterator to keep an iterator inline instead of new/delete.\n - Change RepeatedPtrField usage to always be RepeatedPtrField<Message>.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 31,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2023-04-26T09:51:25Z",
        "closed_at": "2023-07-25T17:23:45Z",
        "merged_at": null,
        "body": null,
        "comments": 18
    },
    {
        "merged": false,
        "additions": 307,
        "deletions": 29,
        "changed_files": 11,
        "created_at": "2023-04-26T06:26:31Z",
        "closed_at": "2023-08-25T21:13:05Z",
        "merged_at": null,
        "body": "Implement the interop test for Protobuf Rust and UPB.\n\nAdditionally, this change moves the interop test to the test/shared directory, so the same test code is used for the C++ and UPB kernels.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 164,
        "deletions": 17,
        "changed_files": 7,
        "created_at": "2023-04-25T23:34:58Z",
        "closed_at": "2023-05-17T21:52:40Z",
        "merged_at": null,
        "body": "Internal Change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 79,
        "deletions": 28,
        "changed_files": 4,
        "created_at": "2023-04-25T22:44:57Z",
        "closed_at": "2023-04-26T20:54:23Z",
        "merged_at": null,
        "body": "Replace previous breaking changes with deprecation warnings.\n\nThese changes hid public APIs that are deprecated in advance of protobuf editions.  They will be fully removed in a future release.  Any uses of them should be migrated to the future-facing feature helpers we provide on descriptor classes.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 11,
        "changed_files": 1,
        "created_at": "2023-04-25T21:57:18Z",
        "closed_at": "2023-04-26T16:31:30Z",
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 27,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-04-25T21:38:36Z",
        "closed_at": "2023-04-27T19:06:02Z",
        "merged_at": null,
        "body": "-Make message CopyFrom() call UPB code instead of default implementation for python UPB\n-Add upb_Message_Clear() in UPB accessors\n-Add upb_Message_CopyFrom() in UPB copy\n-Fix UPB upb_Message_DeepClone() bug for repeated extensions\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 88,
        "deletions": 179,
        "changed_files": 3,
        "created_at": "2023-04-25T21:29:31Z",
        "closed_at": "2023-05-02T16:15:24Z",
        "merged_at": null,
        "body": "Remove deprecated `target` field from descriptor.proto\n\nWe have not used this field for anything yet, so let's go ahead and delete it\nin favor of the `targets` field.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 206,
        "deletions": 7,
        "changed_files": 3,
        "created_at": "2023-04-25T19:28:52Z",
        "closed_at": "2023-08-16T20:56:25Z",
        "merged_at": null,
        "body": "Move certain low level operations to their own header to gather\ncompiler/platform specific implementations.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1304,
        "deletions": 10,
        "changed_files": 5,
        "created_at": "2023-04-25T19:16:35Z",
        "closed_at": "2023-04-25T20:38:35Z",
        "merged_at": null,
        "body": "Update protobuf's UPB dep in preparation for the 23.0-rc1 release.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-04-25T18:55:59Z",
        "closed_at": "2023-04-27T20:31:31Z",
        "merged_at": null,
        "body": "Fix for unknown type `int32_t` in `src/google/protobuf/compiler/objectivec/text_format_decode_data.h`\r\n\r\nIssue encountered when building with GCC 13 (MinGW-w64 on Windows 64-bit).\r\n\r\nError:\r\n```\r\nIn file included from R:/winlibs-gcc13-64/protobuf-22.3/src/google/protobuf/compiler/objectivec/text_format_decode_data.cc:31:\r\nR:/winlibs-gcc13-64/protobuf-22.3/src/google/protobuf/compiler/objectivec/text_format_decode_data.h:59:18: error: 'int32_t' has not been declared\r\n   59 |   void AddString(int32_t key, const std::string& input_for_decode,\r\n      |                  ^~~~~~~\r\nR:/winlibs-gcc13-64/protobuf-22.3/src/google/protobuf/compiler/objectivec/text_format_decode_data.h:68:21: error: 'int32_t' was not declared in this scope\r\n   68 |   typedef std::pair<int32_t, std::string> DataEntry;\r\n      |                     ^~~~~~~\r\nR:/winlibs-gcc13-64/protobuf-22.3/src/google/protobuf/compiler/objectivec/text_format_decode_data.h:40:1: note: 'int32_t' is defined in header '<cstdint>'; did you forget to '#include <cstdint>'?\r\n   39 | #include \"google/protobuf/port_def.inc\"\r\n  +++ |+#include <cstdint>\r\n   40 |\r\n```",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-04-25T18:32:25Z",
        "closed_at": "2023-04-25T20:05:59Z",
        "merged_at": "2023-04-25T20:05:59Z",
        "body": "Cherrypick #12543",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 68,
        "deletions": 35,
        "changed_files": 3,
        "created_at": "2023-04-25T13:53:52Z",
        "closed_at": "2023-04-27T07:31:31Z",
        "merged_at": null,
        "body": "Implement Msg.deserialize() for the UPB kernel\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 453,
        "deletions": 36,
        "changed_files": 4,
        "created_at": "2023-04-24T23:23:05Z",
        "closed_at": "2023-04-28T21:45:09Z",
        "merged_at": null,
        "body": "Implement enforcement of target constraints\n\nThis is a new feature allowing fields to be annotated with a `targets` option\nspecifying what kinds of entities that field may be applied to when used in an\noption.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 775,
        "deletions": 631,
        "changed_files": 6,
        "created_at": "2023-04-24T21:29:26Z",
        "closed_at": "2023-08-25T21:13:07Z",
        "merged_at": null,
        "body": "Convert about a third of message_field.cc to use multi-line string literals.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 79,
        "deletions": 2,
        "changed_files": 6,
        "created_at": "2023-04-24T20:22:58Z",
        "closed_at": "2023-04-26T21:52:08Z",
        "merged_at": null,
        "body": "Make RepeatedField and RepeatedPtrField be destructor skippable for proto arenas.\n\nThis way, when e.g. `Arena::CreateMessage<RepeatedPtrField<Msg>>` is called with a non-null arena, we won't end up calling the destructor of the repeated field later.\n\nAlso add some missing includes in unittest.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-04-24T20:20:10Z",
        "closed_at": "2023-04-25T18:27:25Z",
        "merged_at": null,
        "body": "Fix btree issue in map tests.\n\nWithout any weak ordering, btree_map fails to compile on windows 2022.\n\nCloses #12289\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2023-04-24T18:26:27Z",
        "closed_at": "2023-04-24T19:59:15Z",
        "merged_at": "2023-04-24T19:59:15Z",
        "body": "Backport of #12518",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 14,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-04-24T14:06:14Z",
        "closed_at": "2023-05-10T21:16:18Z",
        "merged_at": null,
        "body": "Fixes issue #12505.\r\n\r\nAlso add a regression test.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-04-21T23:13:39Z",
        "closed_at": "2023-08-25T21:13:09Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-04-21T21:59:02Z",
        "closed_at": "2023-05-01T17:22:08Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 60,
        "deletions": 77,
        "changed_files": 15,
        "created_at": "2023-04-21T21:02:53Z",
        "closed_at": "2023-04-21T23:23:10Z",
        "merged_at": null,
        "body": "Remove PROTOBUF_DEPRECATED in favor of [[deprecated]].\n\nThis appears to have been already broken for enum values on MSVC, and is completely unnecessary now that we required C++14.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 323,
        "changed_files": 3,
        "created_at": "2023-04-21T20:56:31Z",
        "closed_at": "2023-04-21T21:56:35Z",
        "merged_at": null,
        "body": "Automated rollback of commit 1e67de4ed5a52b52b0fd0aba22db531ac0edfb8e.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 242,
        "deletions": 590,
        "changed_files": 10,
        "created_at": "2023-04-21T19:21:47Z",
        "closed_at": "2023-04-26T20:29:11Z",
        "merged_at": null,
        "body": "Remove the _internal_$name$(index)/_internal_add_$name$() from repeated fields generated code.\n\nAlso fix some issues with missing and unused headers.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 124,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2023-04-21T18:41:58Z",
        "closed_at": "2023-04-24T21:43:37Z",
        "merged_at": null,
        "body": "Add better fallback behavior for retention stripping with invalid descriptors\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-04-21T15:27:25Z",
        "closed_at": "2023-04-21T21:04:31Z",
        "merged_at": null,
        "body": "Automated rollback of commit 57d5ede3ec807851ed9293f96aff8651b64f1e4d.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-04-21T00:32:22Z",
        "closed_at": "2023-04-21T13:54:54Z",
        "merged_at": null,
        "body": "Should use \\_\\_NEWLIB__",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-04-20T22:30:55Z",
        "closed_at": "2023-04-21T23:34:45Z",
        "merged_at": null,
        "body": "Add GitHub actions workflow for testing CMake build of examples directory\n\nI confirmed that this test would catch the problem from #12450.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 37,
        "deletions": 2,
        "changed_files": 7,
        "created_at": "2023-04-20T22:05:17Z",
        "closed_at": "2023-04-24T17:44:20Z",
        "merged_at": null,
        "body": "Closes #12439",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 49,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-04-20T21:40:15Z",
        "closed_at": "2023-04-24T22:53:05Z",
        "merged_at": null,
        "body": "[WIP] Java BOM check with generated pom.xml files (#12502)\n\nThis check aims to address issues like https://github.com/protocolbuffers/protobuf/issues/12170 \"Java 3.22.1: broken pom.xml\".\n\nCloses #12502\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/12502 from suztomo:bom_check c69e2af597b1098c4e34b85e6940dcf03da631b8\nFUTURE_COPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/12502 from suztomo:bom_check c69e2af597b1098c4e34b85e6940dcf03da631b8\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 928,
        "deletions": 525,
        "changed_files": 8,
        "created_at": "2023-04-20T19:46:56Z",
        "closed_at": "2023-04-22T01:14:40Z",
        "merged_at": null,
        "body": "Add a field to ExtensionRangeOptions to mark an extension range is verified or not.\n\nAn extension range is either of verification state \"UNVERIFIED\" or \"DECLARATION\". If \"DECLARATION\", all extension fields of the range must be declared, or build error otherwise. The current default is \"UNVERIFIED\", but we will flip the default later.\n\nDeprecate `is_repeated` in favor of `repeated`.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 20,
        "changed_files": 3,
        "created_at": "2023-04-20T19:21:10Z",
        "closed_at": "2023-04-21T15:17:45Z",
        "merged_at": null,
        "body": "Remove unused proto3 field from UnknownFieldSetSchema.\n\nThis should reduce some unnecessary branching off of syntax for ManifestSchemaFactory for CODE_SIZE optimization for full using schemas.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 505,
        "deletions": 565,
        "changed_files": 1,
        "created_at": "2023-04-20T17:22:44Z",
        "closed_at": "2023-04-20T20:30:06Z",
        "merged_at": null,
        "body": "Partially convert message_field.cc to use Emit().\n\nThis CL does not change the formatting of any of the string templates;\nit \"only\" reorganizes the file and updates the names of everything to match\nother migrated files. Followup CLs will update the string templates.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 21,
        "deletions": 82,
        "changed_files": 6,
        "created_at": "2023-04-20T16:32:44Z",
        "closed_at": "2023-04-24T10:34:24Z",
        "merged_at": null,
        "body": "Implement 'bytes' accessors for UPB :)\n\nMove the 'accessors_test.rs' to shared/ as both kernels now support the same accessor types.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 147,
        "deletions": 62,
        "changed_files": 1,
        "created_at": "2023-04-20T16:08:13Z",
        "closed_at": "2023-08-25T21:13:11Z",
        "merged_at": null,
        "body": "Change the loading of imports to use an iterative approach to avoid stack overflows.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 275,
        "changed_files": 3,
        "created_at": "2023-04-20T13:17:11Z",
        "closed_at": "2023-04-24T10:11:23Z",
        "merged_at": null,
        "body": "Delete the UPB kernel.\n\nIt's been made obsolete by cl/524903073.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 20,
        "deletions": 10,
        "changed_files": 3,
        "created_at": "2023-04-20T12:54:39Z",
        "closed_at": "2023-04-20T13:56:35Z",
        "merged_at": null,
        "body": "Test nested messages support for UPB.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 448,
        "deletions": 1311,
        "changed_files": 6,
        "created_at": "2023-04-19T21:38:50Z",
        "closed_at": "2023-04-20T17:32:27Z",
        "merged_at": null,
        "body": "Delete old numpy_test.py file and replace references with the new one.\n\nThis is the final step to make numpy/pip_deps a test-only dependency.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 45,
        "changed_files": 1,
        "created_at": "2023-04-19T17:23:26Z",
        "closed_at": "2023-04-19T19:22:07Z",
        "merged_at": null,
        "body": "Disable extension declarations validations in open source.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 77,
        "deletions": 11,
        "changed_files": 2,
        "created_at": "2023-04-19T15:46:48Z",
        "closed_at": "2023-04-21T23:12:48Z",
        "merged_at": null,
        "body": "Adds `Timestamps.now()`.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-04-19T15:39:52Z",
        "closed_at": "2023-04-20T01:32:24Z",
        "merged_at": null,
        "body": "Add `assert` to the list of keywords for C++.\n\nCloses #12010\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 43,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-04-19T14:59:50Z",
        "closed_at": "2023-04-24T22:53:04Z",
        "merged_at": null,
        "body": "This check aims to address issues like https://github.com/protocolbuffers/protobuf/issues/12170 \"Java 3.22.1: broken pom.xml\".\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-04-19T08:22:03Z",
        "closed_at": "2023-04-20T03:24:03Z",
        "merged_at": null,
        "body": "Fix includes for newlib",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 7,
        "changed_files": 2,
        "created_at": "2023-04-18T23:06:14Z",
        "closed_at": "2023-04-19T18:16:15Z",
        "merged_at": null,
        "body": "Add numpy test to python_test_srcs target so that the python test wheel will have access to it.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 669,
        "deletions": 337,
        "changed_files": 5,
        "created_at": "2023-04-18T21:34:37Z",
        "closed_at": "2023-04-20T22:14:34Z",
        "merged_at": null,
        "body": "Refactor RepeatedMessageFieldGenerator code to use \"_internal_$name$()\" and \"_internal_mutable_$name$()\" rather than \"$field$\" to access fields in preparation for split repeated fields.\n\nMotivation: we are planning to store split repeated fields in the split struct as pointers to repeated fields, which requires not accessing \"$field$\" directly.\n\nWe avoid using \"_internal_$name$()\" and \"_internal_mutable_$name$()\" in the implicit weak field case so that we can avoid linking in the message (as tested in implicit_weak_fields_test).\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 74,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2023-04-18T19:31:53Z",
        "closed_at": "2023-08-25T21:13:13Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 77,
        "deletions": 3,
        "changed_files": 4,
        "created_at": "2023-04-18T19:23:28Z",
        "closed_at": "2023-04-19T19:39:46Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 43,
        "deletions": 43,
        "changed_files": 34,
        "created_at": "2023-04-18T19:14:57Z",
        "closed_at": "2023-04-18T21:48:36Z",
        "merged_at": "2023-04-18T21:48:36Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2023-04-18T15:58:27Z",
        "closed_at": "2023-04-18T17:09:51Z",
        "merged_at": null,
        "body": "Expose __builtin_mul_overflow via port_def.inc/port_undef.inc\n\nFollow up to commit b9e056f779f1c6cbf07a7a11be6f5ee6a4d433b8\n\nNot all supported compilers support __has_builtin, so define a protobuf flag\nand check that it is defined before trying to use it.\n\nFound on: https://github.com/apple/swift-protobuf/actions/runs/4733817439/jobs/8401873649\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-04-18T00:13:13Z",
        "closed_at": "2023-04-20T17:57:15Z",
        "merged_at": null,
        "body": "release notes: no\r\n\r\nSupports https://github.com/square/wire/pull/2433",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 116,
        "deletions": 47,
        "changed_files": 9,
        "created_at": "2023-04-17T22:04:46Z",
        "closed_at": "2023-08-25T21:13:15Z",
        "merged_at": null,
        "body": "Update protobuf repository to use bazel 6.\n\nThis requires us to migrate our toolchains to use platforms instead of cpu.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 12,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-04-17T20:46:13Z",
        "closed_at": "2023-04-18T13:56:53Z",
        "merged_at": null,
        "body": "Set up C++ macOS bazel coverage for Apple Silicon\n\nThis is inspired by https://github.com/protocolbuffers/protobuf/issues/12306,\nbut does not show those failures, so clearly it doesn't catch everything, but\nfigured some coverage is better than none.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-04-17T20:32:28Z",
        "closed_at": "2023-04-17T22:34:11Z",
        "merged_at": "2023-04-17T22:34:11Z",
        "body": "Github doesn't currently have Apple Silicon runners, but we can build for the target to atleast ensure things are building.\r\n\r\nPiperOrigin-RevId: 524929865",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 245,
        "deletions": 143,
        "changed_files": 5,
        "created_at": "2023-04-17T19:58:49Z",
        "closed_at": "2023-04-19T20:40:32Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 61,
        "deletions": 33,
        "changed_files": 3,
        "created_at": "2023-04-17T19:16:14Z",
        "closed_at": "2023-08-25T21:13:17Z",
        "merged_at": null,
        "body": "Zhuzh up the C++/Rust interop test to demonstrate more uses.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 127,
        "deletions": 88,
        "changed_files": 7,
        "created_at": "2023-04-17T18:23:07Z",
        "closed_at": "2023-04-18T21:00:29Z",
        "merged_at": null,
        "body": "Actually run destructors of C++ messages.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 323,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2023-04-17T18:22:21Z",
        "closed_at": "2023-04-20T17:06:18Z",
        "merged_at": null,
        "body": "Add a new enum validation format. The format is compact for sequential and almost sequential enums. Uses Eytzinger layout for a fallback binary search.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 181,
        "deletions": 58,
        "changed_files": 6,
        "created_at": "2023-04-17T18:05:48Z",
        "closed_at": "2023-04-20T16:57:42Z",
        "merged_at": null,
        "body": "Make protobuf_upb::Arena into a proper Rust RAII type.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 31,
        "deletions": 20,
        "changed_files": 3,
        "created_at": "2023-04-17T17:13:29Z",
        "closed_at": "2023-04-18T20:28:09Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 25,
        "deletions": 16,
        "changed_files": 2,
        "created_at": "2023-04-17T16:43:08Z",
        "closed_at": "2023-04-17T18:10:17Z",
        "merged_at": null,
        "body": "Make sure to use the whole capacity when growing the underlying string in the\nStringOutputStream.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 931,
        "deletions": 326,
        "changed_files": 13,
        "created_at": "2023-04-17T15:31:09Z",
        "closed_at": "2023-04-17T18:33:12Z",
        "merged_at": null,
        "body": "Factor out different codegen parts of the Rust backend.\n\nThe intent of this change is to take the best ideas from the C++ backend, such as having generator objects that can cache pre-computed state, while minimizing duplication.\n\nWhere possible, we take the approach of making the C++ and UPB kernel-specific code as similar as possible, since this reduces the number of templates we need to keep in sync.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 118,
        "deletions": 26,
        "changed_files": 8,
        "created_at": "2023-04-17T09:16:31Z",
        "closed_at": "2023-04-19T07:58:05Z",
        "merged_at": null,
        "body": "Implement nested messages for v0 API for cpp kernel\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 59,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2023-04-14T23:25:10Z",
        "closed_at": "2023-04-18T16:29:19Z",
        "merged_at": null,
        "body": "Make retention stripping code tolerant of parsing/serialization errors\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 250,
        "deletions": 124,
        "changed_files": 9,
        "created_at": "2023-04-14T22:18:08Z",
        "closed_at": "2023-08-25T21:13:19Z",
        "merged_at": null,
        "body": "Move version macros/functions from src/google/protobuf/common to src/version\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 768,
        "deletions": 620,
        "changed_files": 6,
        "created_at": "2023-04-14T22:11:56Z",
        "closed_at": "2023-04-15T00:24:54Z",
        "merged_at": null,
        "body": "Update UPB dependency\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 158,
        "deletions": 120,
        "changed_files": 5,
        "created_at": "2023-04-14T21:19:21Z",
        "closed_at": "2023-05-03T19:35:50Z",
        "merged_at": null,
        "body": "Shrink code size of generated protocol buffer code via a few\nchanges.\n\n(1) Use PROTOBUF_NOINLINE attributes to avoid inlining of\nClear(), ByteSizeLong() and IsInitialized() routines\nwithin the same .pb.cc file\n\n(2) If the tag number is less than 16 and the type is one of\na handful of common types, call a non-inlined templated\nroutine specialized for that tag number that handles both\nthe EnsureSpace call and the encoding of the tag and the\nvalue into the array.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 116,
        "deletions": 22,
        "changed_files": 11,
        "created_at": "2023-04-14T21:04:49Z",
        "closed_at": "2023-04-21T15:42:56Z",
        "merged_at": null,
        "body": "Internal change.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 24,
        "changed_files": 4,
        "created_at": "2023-04-14T20:41:36Z",
        "closed_at": "2023-04-17T07:46:01Z",
        "merged_at": null,
        "body": "Enable sanitized CI builds\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 234,
        "deletions": 10,
        "changed_files": 5,
        "created_at": "2023-04-14T16:45:12Z",
        "closed_at": "2023-04-17T19:12:52Z",
        "merged_at": null,
        "body": "Make numpy a test-only dependency.\n\nCreate an isolated build file so the test is separate from runtime.\n\nThis also includes a UPB update to get https://github.com/protocolbuffers/upb/commit/e6dd5bfefe4829ff105b02e335520d4e35b888d2 in to unblock tests.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 31,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-04-14T09:41:14Z",
        "closed_at": "2023-05-04T10:47:24Z",
        "merged_at": null,
        "body": "Document the BUILD file setup\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 321,
        "deletions": 308,
        "changed_files": 8,
        "created_at": "2023-04-13T20:36:45Z",
        "closed_at": "2023-08-25T21:13:21Z",
        "merged_at": null,
        "body": "Move python bazel test targets to python/google/protobuf/internal/BUILD.bazel\n\nThis is more consistent with our internal file structure.\n\nKeeping tests separate allows numpy (and any future tools needed) to be test-only dependencies. This will resolve an error when dependents don't have a \"pip_deps\" target.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 57,
        "deletions": 38,
        "changed_files": 3,
        "created_at": "2023-04-13T20:28:47Z",
        "closed_at": "2023-04-17T18:04:33Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 11,
        "changed_files": 5,
        "created_at": "2023-04-13T19:47:15Z",
        "closed_at": "2023-04-13T21:02:46Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-04-13T19:15:59Z",
        "closed_at": "2023-04-14T20:09:59Z",
        "merged_at": null,
        "body": "Factor out common helpers in the Rust backend.\n\nThis CL introduces two new files, names.h and context.h.\n\nThe former is intended to hold functions that generate the stringified names of things to splat into text templates. The latter holds per-invocation options, and a Context struct that makes it easy to thread extra information throughout the codegen backend.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 203,
        "deletions": 527,
        "changed_files": 9,
        "created_at": "2023-04-13T18:53:50Z",
        "closed_at": "2023-04-13T23:10:00Z",
        "merged_at": null,
        "body": "Change the Ruby code generator to emit a serialized proto instead of the DSL (#12319)\n\nThis PR removes the DSL from the code generator, in anticipation of splitting the DSL out into a separate package.\n\nGiven a .proto file like:\n\n```proto\nsyntax = \"proto3\";\n\npackage pkg;\n\nmessage TestMessage {\n  optional int32 i32 = 1;\n  optional TestMessage msg = 2;\n}\n```\n\nGenerated code before:\n\n```ruby\n# Generated by the protocol buffer compiler.  DO NOT EDIT!\n# source: protoc_explorer/main.proto\n\nrequire 'google/protobuf'\n\nGoogle::Protobuf::DescriptorPool.generated_pool.build do\n  add_file(\"test.proto\", :syntax => :proto3) do\n    add_message \"pkg.TestMessage\" do\n      proto3_optional :i32, :int32, 1\n      proto3_optional :msg, :message, 2, \"pkg.TestMessage\"\n    end\n  end\nend\n\nmodule Pkg\n  TestMessage = ::Google::Protobuf::DescriptorPool.generated_pool.lookup(\"pkg.TestMessage\").msgclass\nend\n```\n\nGenerated code after:\n\n```ruby\n# frozen_string_literal: true\n# Generated by the protocol buffer compiler.  DO NOT EDIT!\n# source: test.proto\n\nrequire 'google/protobuf'\n  \ndescriptor_data = \"\\n\\ntest.proto\\x12\\x03pkg\\\"S\\n\\x0bTestMessage\\x12\\x10\\n\\x03i32\\x18\\x01 \\x01(\\x05H\\x00\\x88\\x01\\x01\\x12\\\"\\n\\x03msg\\x18\\x02 \\x01(\\x0b\\x32\\x10.pkg.TestMessageH\\x01\\x88\\x01\\x01\\x42\\x06\\n\\x04_i32B\\x06\\n\\x04_msgb\\x06proto3\"\nbegin\n  Google::Protobuf::DescriptorPool.generated_pool.add_serialized_file(descriptor_data)\nrescue TypeError => e\n  # <compatibility code, see below>\nend\n\nmodule Pkg\n  TestMessage = ::Google::Protobuf::DescriptorPool.generated_pool.lookup(\"pkg.TestMessage\").msgclass\nend\n```\n\nThis change fixes nearly all remaining conformance problems that existed previously. This is a side effect of moving from the DSL (which is lossy) to a serialized descriptor (which preserves all information).\n\n## Backward Compatibility\n\nThis change should be 100% compatible with Ruby Protobuf >= 3.18.0, released in Sept 2021. Additionally, it should be compatible with all existing users and deployments. However there is some special compatibility code I inserted to achieve this level of backward compatibility.\n\nWithout the compatibility code, there is an edge case that could break backward compatibility. The existing code is lax in a way that the new code would be more strict.\n \nWhen we use a full serialized descriptor, it will contain a list of all `.proto` files imported by this file (whereas the DSL never added dependencies properly): https://github.com/protocolbuffers/protobuf/blob/dfb71558a2226718dc3bcf5df27cbc11c1f72382/src/google/protobuf/descriptor.proto#L65-L66\n\n`add_serialized_file` will verify that all dependencies listed in the descriptor were previously added with `add_serialized_file`.  Generally that should be fine, because the generated code will contain Ruby `require` statements for all dependencies, and the descriptor will fail to load anyway if the types we depend on were not previously defined in the DescriptorPool.\n\nBut there is a potential for problems if there are ambiguities around file paths. For example, consider the following scenario:\n\n```proto\n// foo/bar.proto\n\nsyntax = \"proto2\";\n\nmessage Bar {}\n```\n\n```proto\n// foo/baz.proto\n\nsyntax = \"proto2\";\n\nimport \"bar.proto\";\n\nmessage Baz {\n  optional Bar bar = 1;\n}\n```\n\nIf you invoke `protoc` like so, it will work correctly:\n\n```\n$ protoc --ruby_out=. -Ifoo foo/bar.proto foo/baz.proto\n$ RUBYLIB=. ruby baz_pb.rb\n```\n\nHowever if you invoke `protoc` like so, and didn't have any compatibility code, it would fail to load:\n\n```\n$ protoc --ruby_out=. -I. -Ifoo foo/baz.proto\n$ protoc --ruby_out=. -I. -Ifoo foo/bar.proto\n$ RUBYLIB=foo ruby foo/baz_pb.rb\nfoo/baz_pb.rb:10:in `add_serialized_file': Unable to build file to DescriptorPool: Depends on file 'bar.proto', but it has not been loaded (Google::Protobuf::TypeError)\n\tfrom foo/baz_pb.rb:10:in `<main>'\n```\n\nThe problem is that `bar.proto` is being referred to by two different canonical names: `bar.proto` and `foo/bar.proto`. This is a user error: each import should always be referred to by a consistent full path. Hopefully user errors of this sort are rare, but it is hard to know without trying.\n\nThe code in this PR prints a warning using `warn` if we detect that this edge case has occurred. We will plan to remove this compatibility code in the next major version.\n\nCloses #12319\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/12319 from haberman:ruby-gencode-binary 5c0e8f20b10ef8cee4c885138a31e6054bfaf6e6\nFUTURE_COPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/12319 from haberman:ruby-gencode-binary 5c0e8f20b10ef8cee4c885138a31e6054bfaf6e6\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-04-13T15:46:52Z",
        "closed_at": "2023-04-13T17:43:50Z",
        "merged_at": null,
        "body": "restore pypy support broken when adding 3.11 support (from GH)\n\nThis is a copy of https://github.com/protocolbuffers/protobuf/pull/12431\nbut with the ifdef logic reversed. The original PR could not kick off our\nCI tests because it wasn't branched directly from repo main.\n\nThanks to Tom Gillespie for the original PR.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 296,
        "deletions": 371,
        "changed_files": 6,
        "created_at": "2023-04-13T15:02:12Z",
        "closed_at": "2023-04-25T20:03:05Z",
        "merged_at": null,
        "body": "Move all the reflection related data of MapField into a separate structure.\nThis saves 24 bytes on each `map` field when reflection is not used.\nIt also delays constructing a Mutex until reflection is needed. This means we do\nnot have to register the mutex for destruction in the arena for normal\noperation.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2052,
        "deletions": 2847,
        "changed_files": 5,
        "created_at": "2023-04-12T22:47:45Z",
        "closed_at": "2023-05-12T15:10:17Z",
        "merged_at": null,
        "body": "Turn on the table driven parser by default.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 61,
        "changed_files": 6,
        "created_at": "2023-04-12T20:19:59Z",
        "closed_at": "2023-04-13T15:10:44Z",
        "merged_at": null,
        "body": "Remove macro based guard for the table-driven parser.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 10,
        "changed_files": 1,
        "created_at": "2023-04-12T17:07:59Z",
        "closed_at": "2023-04-13T17:30:44Z",
        "merged_at": null,
        "body": "Enable code generation of custom options in C++ lite\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 123,
        "deletions": 16,
        "changed_files": 5,
        "created_at": "2023-04-12T14:27:21Z",
        "closed_at": "2023-08-25T21:13:23Z",
        "merged_at": null,
        "body": "Implement 'optional bytes' field for UPB per v0 API spec.\n\nThis change also factors out the accessor codegen into the generic 'GetAccessorsForField' which we use to build GetBytesAccessors and GetScalarAccessors on top.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 505,
        "deletions": 255,
        "changed_files": 7,
        "created_at": "2023-04-12T13:08:30Z",
        "closed_at": "2023-04-17T07:50:39Z",
        "merged_at": null,
        "body": "Extract CppKernel from generator.cc\n\nThis is in symmetry with UpbKernel extracted previously.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 35,
        "deletions": 8,
        "changed_files": 2,
        "created_at": "2023-04-12T09:18:47Z",
        "closed_at": "2023-04-12T11:57:09Z",
        "merged_at": null,
        "body": "Implement 'optional int64' accessors per v0 API spec.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 10,
        "changed_files": 1,
        "created_at": "2023-04-11T23:38:40Z",
        "closed_at": "2023-04-13T22:15:50Z",
        "merged_at": null,
        "body": "Makes extension declaration field name and type optional if `reserved: true` is present. Revert the support of declaration with only number is set; this used to indicate that a number is already in use by multiple extensions.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 39,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2023-04-11T18:47:55Z",
        "closed_at": "2023-04-12T17:24:40Z",
        "merged_at": "2023-04-12T17:24:40Z",
        "body": "Change made manually, since the various changes were spread over several commits and the cherry pick was not clean.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 26,
        "deletions": 9,
        "changed_files": 3,
        "created_at": "2023-04-11T17:28:27Z",
        "closed_at": "2023-04-12T22:48:29Z",
        "merged_at": null,
        "body": "Fix abseil gitmodule date and add a step in tests to update the subrepo to catch errors like this in the future.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 280,
        "deletions": 18,
        "changed_files": 13,
        "created_at": "2023-04-11T15:42:15Z",
        "closed_at": "2023-04-14T09:25:19Z",
        "merged_at": null,
        "body": "Generate bindings under the correct package.\n\nBefore this CL all messages were generated in the top-level crate module. With\nthis change we generate messages under the module specified by the package\ndeclaration in the .proto file.\n\nDots are interpreted as submodule separator in consistency with how C++\nnamespaces are handled.\n\nNote that name of the proto_library target still remains to be used as the crate name. This CL only adds crate submodules dependeing on the specified package.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 320,
        "deletions": 58,
        "changed_files": 6,
        "created_at": "2023-04-11T14:35:28Z",
        "closed_at": "2023-04-12T10:07:17Z",
        "merged_at": null,
        "body": "Implement accessors for 'optional bool' per v0 API spec\n\nSee 'accessors_test.rs' for the generated Rust API.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-04-10T20:36:43Z",
        "closed_at": "2023-04-10T21:40:41Z",
        "merged_at": null,
        "body": "Make the PROTOBUF_VERSION* macros public\n\nIn OSS-land the \"One Version Rule\" may not apply. Libraries that depend on\nProtobuf may need to support multiple Protobuf versions and use #if blocks\nto enable workarounds for old Protobuf versions, or disable code for older\nversions.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-04-10T17:55:21Z",
        "closed_at": "2023-04-13T16:16:16Z",
        "merged_at": null,
        "body": "Use builtin multiplication for intentional overflow\nClang's unsigned integer overflow sanitizer is flagging BucketNumber as having\nan overflow. This is intentional behavior, so we should mark it as such.\nRather than disabling the sanitizer, this uses __builtin_mul_overflow to\nindicate the overflow is intentional.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-04-10T09:08:17Z",
        "closed_at": "2023-04-17T16:19:14Z",
        "merged_at": null,
        "body": "I encountered a compilation error while developing in c++, and the following is part of the error:\r\n```\r\nonnx.pb.cc:(.text._ZN4absl12lts_2023012512log_internal10LogMessagelsILi59EEERS2_RAT__Kc[_ZN4absl12lts_2023012512log_internal10LogMessagelsILi59EEERS2_RAT__Kc]+0x58): undefined reference to `absl::Lts_20230125::log_internal::LogMessage::CopyToEncodedBuffer(std::basic_string_view<char, std::char_traits<char>>, absl::lts_20230125::log_internal::LogMessage::StringType)'\r\n```\r\n\r\nThe abseil-cpp dependency declared in third_party [`third_party`](https://github.com/protocolbuffers/protobuf/tree/main/third_party) is commit [78be636](https://github.com/abseil/abseil-cpp/commit/78be63686ba732b25052be15f8d6dee891c05749). In absl/base/options.hz in this commit set the absl_lst version to 20230125 as follows:\r\n```cpp\r\n#define ABSL_LTS_RELEASE_VERSION 20230125\r\n```\r\n\r\nThe branch lts_2023_01_24 has now been removed from abseil-cpp, and the .gitmodules still depend on that branch.\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-04-09T08:53:01Z",
        "closed_at": "2023-04-13T17:58:13Z",
        "merged_at": null,
        "body": "da973aff2adab60a9e516d3202c111dbdde1a50f did not correctly handle endif and else needed when PYPY_VERSION is set",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-04-08T00:43:07Z",
        "closed_at": "2023-04-10T21:35:25Z",
        "merged_at": null,
        "body": "Automated rollback of changelist 520827894.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 436,
        "deletions": 90,
        "changed_files": 2,
        "created_at": "2023-04-08T00:11:50Z",
        "closed_at": "2023-04-26T14:43:58Z",
        "merged_at": null,
        "body": "Add support for programmatically retrieving unknown fields in text format.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2023-04-07T21:57:55Z",
        "closed_at": "2023-04-10T16:49:43Z",
        "merged_at": null,
        "body": "internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-04-07T07:23:16Z",
        "closed_at": "2023-04-25T15:49:57Z",
        "merged_at": null,
        "body": "`CodeGeneratorResponse.File.content` holds the data for a plugin generated file.  For languages that enforce UTF-8 encoding on protobuf string fields, like Java and Python, there is no easy way to write binary data to this field.   Most plugins don't face any issue here because the files they write are source code, which is UTF-8 compatible.   \r\n\r\nHowever, a plugin that wants to write binary data it's force to choose a workaround:\r\n - Clone the .proto file and modify the type of the field \r\n - Modify the descriptor at runtime and generate a compatible Message\r\n - Use a different programming language (eg, C++)\r\n\r\nNone of these are desirable, especially when this can easily be resolved by a one line change to the original `plugin.proto` file.\r\n\r\nI'm proposing we simply change this type from `string` to `bytes`. This change is wire compatible but it will break any existing code that relies on the field type as a String, where the language makes a distinction (Java, Python, etc).",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2023-04-07T06:56:08Z",
        "closed_at": "2023-04-07T20:09:40Z",
        "merged_at": null,
        "body": "Automated rollback of commit 6038e9b9fe1162813191e25193bd8ca38264a6ce.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 16,
        "changed_files": 1,
        "created_at": "2023-04-07T02:06:12Z",
        "closed_at": "2023-04-07T14:44:06Z",
        "merged_at": null,
        "body": "Remove unnecessary leading + sign\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 11,
        "changed_files": 1,
        "created_at": "2023-04-07T00:42:07Z",
        "closed_at": "2023-04-19T21:17:03Z",
        "merged_at": null,
        "body": "protoc java: add missing annotation to clearField() for messages\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 98,
        "deletions": 77,
        "changed_files": 7,
        "created_at": "2023-04-06T23:26:45Z",
        "closed_at": "2023-05-15T17:22:11Z",
        "merged_at": null,
        "body": "Add semantic annotations for proto field accessors in java\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 49,
        "deletions": 44,
        "changed_files": 8,
        "created_at": "2023-04-06T21:22:14Z",
        "closed_at": "2023-04-06T22:34:10Z",
        "merged_at": "2023-04-06T22:34:10Z",
        "body": "Closes #12406\r\n\r\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/12406 from mkruskal-google:wkt 1c6748e6aabf55da929558c56b1314c52932153b PiperOrigin-RevId: 522418175",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-04-06T16:35:45Z",
        "closed_at": "2023-04-06T18:18:39Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 159,
        "deletions": 24,
        "changed_files": 4,
        "created_at": "2023-04-06T13:58:02Z",
        "closed_at": "2023-04-13T20:40:17Z",
        "merged_at": null,
        "body": "Implement bytes field accessors for v0 Rust API\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 575,
        "deletions": 395,
        "changed_files": 1,
        "created_at": "2023-04-06T00:01:11Z",
        "closed_at": "2023-04-06T06:47:15Z",
        "merged_at": null,
        "body": "Adjust API and use lambdas to reduce stack space usage.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 206,
        "deletions": 217,
        "changed_files": 2,
        "created_at": "2023-04-05T20:51:55Z",
        "closed_at": "2023-04-10T17:04:13Z",
        "merged_at": null,
        "body": "Refactor ARM-optimized varint parsing.\n\nThis change improves deserialization performance by in two ways:\n\n1) VarintParseSlowArm32 and VarintParseSlowArm64 return a pair for the updated buffer pointer and parsing result instead of storing the result and returning just the pointer. This allows the parsed result to be returned to higher level code in x1 rather than via the stack.\n\n2) Remove prohibition on inlining VarintParseSlowArm32 and VarintParseSlowArm64. This prohibition was originally included to avoid bloating non-TDP code. Now that TDP is enabled the impact on code size is small.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-04-05T18:36:08Z",
        "closed_at": "2023-04-05T23:17:37Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 857,
        "deletions": 76,
        "changed_files": 14,
        "created_at": "2023-04-05T14:55:47Z",
        "closed_at": "2023-04-06T18:23:56Z",
        "merged_at": null,
        "body": "Add BytesRef type\n\nThis type is going to be returned by `bytes` getters.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 813,
        "deletions": 76,
        "changed_files": 14,
        "created_at": "2023-04-05T14:26:33Z",
        "closed_at": "2023-04-06T18:23:51Z",
        "merged_at": null,
        "body": "Rename SerializedData to Bytes\n\nThe plan is to use the same type as the result of serialization and as a\nparameter to setter of `bytes` fields.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 599,
        "deletions": 458,
        "changed_files": 8,
        "created_at": "2023-04-05T01:53:19Z",
        "closed_at": "2023-04-11T02:02:10Z",
        "merged_at": null,
        "body": "Implement \"reserved\" for extension declaration.\n\nThis can be useful when an extension field/declaration is deleted in schema to avoid data corruption.\n\nIt also adds a check for duplicate numbers in the declarations.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 49,
        "deletions": 44,
        "changed_files": 8,
        "created_at": "2023-04-05T00:37:09Z",
        "closed_at": "2023-04-06T20:20:01Z",
        "merged_at": null,
        "body": null,
        "comments": 1
    },
    {
        "merged": false,
        "additions": 184,
        "deletions": 184,
        "changed_files": 4,
        "created_at": "2023-04-04T23:32:26Z",
        "closed_at": "2023-04-07T19:30:07Z",
        "merged_at": null,
        "body": "Internal change to extensions\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2023-04-04T21:08:12Z",
        "closed_at": "2023-04-25T21:33:19Z",
        "merged_at": null,
        "body": "Internal protobuf changes\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 31317,
        "deletions": 93,
        "changed_files": 79,
        "created_at": "2023-04-04T20:13:31Z",
        "closed_at": "2023-08-25T21:13:25Z",
        "merged_at": null,
        "body": "Make bootstrapping work with cc_proto_library()\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 246,
        "deletions": 1,
        "changed_files": 5,
        "created_at": "2023-04-04T13:13:13Z",
        "closed_at": "2023-04-12T12:22:41Z",
        "merged_at": null,
        "body": "Implement bool and int64 field accessors for v0 Rust API\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 14,
        "deletions": 14,
        "changed_files": 14,
        "created_at": "2023-04-04T10:44:50Z",
        "closed_at": "2023-04-04T17:29:36Z",
        "merged_at": null,
        "body": "Update copyright year\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2023-04-04T06:40:27Z",
        "closed_at": "2023-04-04T16:12:44Z",
        "merged_at": null,
        "body": "Switch to docker image for protoc build in java linkage test\n\nThis will prevent non-hermetic outages and better unify our test infrastructure.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2023-04-03T19:08:02Z",
        "closed_at": "2023-04-18T21:27:17Z",
        "merged_at": null,
        "body": "Remove synchronization when retrieving extension registries.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 65,
        "deletions": 7,
        "changed_files": 5,
        "created_at": "2023-04-03T14:19:11Z",
        "closed_at": "2023-04-12T11:41:43Z",
        "merged_at": null,
        "body": "Implement Msg::parse(&mut self) for V0 API.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-04-02T09:45:39Z",
        "closed_at": "2023-04-10T13:43:19Z",
        "merged_at": null,
        "body": "\u2026h it.\r\nFixes a build issue, where the typename is now specified.\r\n\r\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-04-01T17:20:29Z",
        "closed_at": "2023-08-25T21:13:27Z",
        "merged_at": null,
        "body": "Allow filling the Empty proto with an Any so that applications can add data to it.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2023-04-01T00:56:34Z",
        "closed_at": "2023-05-23T18:49:00Z",
        "merged_at": null,
        "body": "Automated rollback of commit 02cdbd72021dbe883fb28991187151c3820579f5.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-03-31T21:56:40Z",
        "closed_at": "2023-08-25T21:13:29Z",
        "merged_at": null,
        "body": "Fix inefficient pattern of buffers returned by `StringOutputStream::Next()`\n\nIf the underlying string has extra capacity then `Next()` will use the excess\nbytes for the returned buffer, otherwise it will double the string size and\nreturn a buffer pointing to the newly allocated space. However, std::string is\npermitted to allocate extra bytes when resizing (e.g. for alignment purposes).\nIf this happens then capacity() will be greater than size() by a few bytes, and\nthe next call to `Next()` will return a small buffer containing these excess\nbytes.  When writing a large amount of data into a `StringOutputStream` this\ncan cause a pattern where `Next()` alternates returning large buffers and small\n(typically 1-3 byte) buffers.\n\nThe fix here is to check if there's excess capacity after resizing the string,\nand if so increase the string size to match the new capacity. When writing a\nlarge amount of data into a `StringOutputStream` this will result in about half\nas many calls to `Next()`.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2023-03-31T21:11:29Z",
        "closed_at": "2023-04-03T19:36:52Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-03-31T20:01:11Z",
        "closed_at": "2023-03-31T22:40:25Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-03-31T19:20:51Z",
        "closed_at": "2023-04-14T21:17:13Z",
        "merged_at": null,
        "body": "Update usage disclaimer on FieldOptions.ctype\n\nFieldOptions.ctype is public and CORD support is implemented for [ctype=CORD] on \"bytes\" fields. Include a public comment for CORD about use and supported types.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 21,
        "deletions": 15,
        "changed_files": 2,
        "created_at": "2023-03-31T19:08:07Z",
        "closed_at": "2023-08-25T21:13:31Z",
        "merged_at": null,
        "body": "Internal changes to extensions.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-03-31T17:01:11Z",
        "closed_at": "2023-03-31T19:08:33Z",
        "merged_at": null,
        "body": "Edit READMEs to include new cmake instructions and remove references to language specific source distributions.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 227,
        "changed_files": 1,
        "created_at": "2023-03-31T17:01:07Z",
        "closed_at": "2023-03-31T19:02:41Z",
        "merged_at": null,
        "body": "Delete unused bazel distribution rules.\n\nWe intended to use these for our release page, but we instead removed language-specific source files and use github commands to generate the full zip/tar file we release.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 41,
        "deletions": 48,
        "changed_files": 1,
        "created_at": "2023-03-31T16:22:26Z",
        "closed_at": "2023-03-31T17:56:37Z",
        "merged_at": null,
        "body": "Internal change.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 22,
        "deletions": 22,
        "changed_files": 13,
        "created_at": "2023-03-31T14:43:32Z",
        "closed_at": "2023-04-10T20:28:53Z",
        "merged_at": null,
        "body": " What's changed?\r\n- Update some nuget packages (for test projects)\r\n- Run unit tests for supported platforms: .NET 6 + .NET Framework 4.6.2\r\n\r\nNotes:\r\n.NET Framework 4.6.1 is out of support, .NET Framework 4.6.2 is the older version that is still supported\r\nhttps://devblogs.microsoft.com/dotnet/net-framework-4-5-2-4-6-4-6-1-will-reach-end-of-support-on-april-26-2022/\r\n\r\n.NET 5 is out of support\r\nhttps://devblogs.microsoft.com/dotnet/dotnet-5-end-of-support-update/\r\n\r\n.NET Core 3.1 is out of support\r\nhttps://devblogs.microsoft.com/dotnet/net-core-3-1-will-reach-end-of-support-on-december-13-2022/\r\n\r\nVisual studio 2012 is out of support\r\nhttps://devblogs.microsoft.com/visualstudio/support-ends-for-older-versions-of-visual-studio-feb2022\r\n\r\n",
        "comments": 15
    },
    {
        "merged": false,
        "additions": 280,
        "deletions": 48,
        "changed_files": 12,
        "created_at": "2023-03-31T13:36:08Z",
        "closed_at": "2023-04-04T20:31:25Z",
        "merged_at": null,
        "body": "Add initial end-to-end test directory structure.\n\nThis turns out to be quite of a yak shave to be able to perfectly test both kernels without having to pass extra Blaze flags.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 43,
        "deletions": 35,
        "changed_files": 2,
        "created_at": "2023-03-31T10:52:12Z",
        "closed_at": "2023-04-14T17:34:41Z",
        "merged_at": null,
        "body": "Mark sequence containers as Py_TPFLAGS_SEQUENCE, enabling pattern matching\n\nPEP634 introduces structural pattern matching. This works out of the box for most parts of protobuf messages, but fails for sequence matching (defined in https://peps.python.org/pep-0634/#sequence-patterns). This is caused by the underlying containers missing the newly introduced Py_TPFLAGS_SEQUENCE flag (see https://github.com/python/cpython/commit/069e81ab3da46c441335ca762c4333b7bd91861d).\n\nThis simply adds the flag, making the following fall into the first case:\n```\n  message = test_pb2.TestMessage(int_sequence=(1, 2, 3))\n  match message:\n    case test_pb2.TestMessage(int_sequence=(1, *rest)):\n      print(f\"message.int_sequence is a seq starting with 1, ending in {rest}\")\n    case _:\n      print(f\"No case on 'int_sequence' matched! Value: {message.int_sequence}\")\n```\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 124,
        "deletions": 50,
        "changed_files": 3,
        "created_at": "2023-03-30T02:49:52Z",
        "closed_at": "2023-03-30T07:08:20Z",
        "merged_at": null,
        "body": "Implement a retain_options flag in protoc.\n\nThis will allow users to force the retention of RETENTION_SOURCE options, which get stripped out by default.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 9,
        "changed_files": 1,
        "created_at": "2023-03-29T22:25:52Z",
        "closed_at": "2023-08-25T21:13:33Z",
        "merged_at": null,
        "body": "internal changes to extensions.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 44,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2023-03-29T21:18:10Z",
        "closed_at": "2023-04-11T20:25:20Z",
        "merged_at": null,
        "body": "Update the error message when a duplicate enum number is used to provide the\nnext available enum number in addition to mentioning the option to allow\naliasing.\n\nFor enums that are large but are not sorted numerically it can be difficult to\nfind the correct enum number to use.\n\nWe use \"next available\" as the next number larger than the number that was\nduplicatively used which is not assigned a value. For sparse enums, there may\nbe other enums past the suggested number.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-03-29T20:04:02Z",
        "closed_at": "2023-04-05T05:20:03Z",
        "merged_at": null,
        "body": "internal changes to extensions.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 638,
        "deletions": 81,
        "changed_files": 5,
        "created_at": "2023-03-29T19:40:29Z",
        "closed_at": "2023-03-30T04:15:27Z",
        "merged_at": null,
        "body": "Expand retention stripping API, and improve test coverage\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-03-29T17:46:51Z",
        "closed_at": "2023-03-29T19:52:14Z",
        "merged_at": null,
        "body": "Extension declaration: Enforce that if the extension range has a declaration then all extensions in that range must be declared. This should prevent non-declared extensions from being added.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-03-29T17:23:16Z",
        "closed_at": "2023-03-29T18:45:56Z",
        "merged_at": null,
        "body": "Fix exhaustive switch issue in Rust generator\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 77,
        "deletions": 59,
        "changed_files": 1,
        "created_at": "2023-03-29T17:04:15Z",
        "closed_at": "2023-03-29T18:07:01Z",
        "merged_at": null,
        "body": "Add optimizations to extension declaration validation.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 80,
        "deletions": 85,
        "changed_files": 1,
        "created_at": "2023-03-29T15:49:45Z",
        "closed_at": "2023-03-29T16:52:41Z",
        "merged_at": null,
        "body": "Automated rollback of commit b72eb3f2337599b0e91cadbeeec4e17bdcfcb4b6.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 46,
        "deletions": 31,
        "changed_files": 1,
        "created_at": "2023-03-29T15:44:16Z",
        "closed_at": "2023-03-30T08:36:58Z",
        "merged_at": null,
        "body": "Refactor Rust UPB codegen to prepare for field accessors\n\nThe idea is that after this refactoring we implement the codegen for field accessors by adding another template variable, like\n\np.Emit(\n  ...\n  $ImplMessageFunctions$;\n  $ImplFieldAccessors$;\n  ...\n)\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 544,
        "deletions": 75,
        "changed_files": 14,
        "created_at": "2023-03-29T14:30:44Z",
        "closed_at": "2023-04-11T19:58:44Z",
        "merged_at": null,
        "body": "Generate C++ thunks for Rust protos\n\nIn this CL I'd like to call existing C++ Protobuf API from the V0 Rust API. Since parts of the C++ API are defined inline and using (obviously) C++ name mangling, we need to create a \"thunks.cc\" file that:\n\n1) Generates code for C++ API function we use from Rust\n2) Exposes these functions without any name mangling (meaning using `extern \"C\"`)\n\nIn this CL we add Bazel logic to generate \"thunks\" file, compile it, and propagate its object to linking. We also add logic to protoc to generate this \"thunks\" file.\n\nThe protoc logic is rather rudimentary still. I hope to focus on protoc code quality in my followup work on V0 Rust API using C++ kernel.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 21,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-03-29T13:58:30Z",
        "closed_at": "2023-03-30T07:39:30Z",
        "merged_at": null,
        "body": "Visibility restrict targets generated by rust_proto_library macro\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-03-29T11:26:21Z",
        "closed_at": "2023-03-29T13:38:39Z",
        "merged_at": null,
        "body": "Enable bzl visibility for Protobuf Rust rules\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-03-28T18:02:40Z",
        "closed_at": "2023-03-28T20:11:50Z",
        "merged_at": "2023-03-28T20:11:50Z",
        "body": "Closes https://github.com/protocolbuffers/protobuf/issues/12313\r\n\r\nPiperOrigin-RevId: 520066451",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-03-28T17:29:25Z",
        "closed_at": "2023-08-25T21:13:35Z",
        "merged_at": null,
        "body": "internal changes to extensions.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 27,
        "deletions": 11,
        "changed_files": 3,
        "created_at": "2023-03-28T14:05:12Z",
        "closed_at": "2023-03-29T13:12:09Z",
        "merged_at": null,
        "body": "Enable support for rust_upb_proto_library and rust_cc_proto_library within the same build\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 44,
        "deletions": 40,
        "changed_files": 1,
        "created_at": "2023-03-28T10:19:25Z",
        "closed_at": "2023-03-28T11:59:46Z",
        "merged_at": null,
        "body": "Small style guide, naming and formatting fixes\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 85,
        "deletions": 80,
        "changed_files": 1,
        "created_at": "2023-03-27T23:42:20Z",
        "closed_at": "2023-03-28T23:03:56Z",
        "merged_at": null,
        "body": "Add optimizations to extension declaration validation.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 31,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-03-27T18:35:03Z",
        "closed_at": "2023-03-30T16:46:03Z",
        "merged_at": null,
        "body": "Fix IsEagerSerializeSafe() and kParseError behavior\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 39,
        "deletions": 4,
        "changed_files": 4,
        "created_at": "2023-03-27T17:53:43Z",
        "closed_at": "2023-03-30T18:12:13Z",
        "merged_at": null,
        "body": "Add wire format cord support for singular bytes\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 47,
        "deletions": 6,
        "changed_files": 7,
        "created_at": "2023-03-27T17:06:07Z",
        "closed_at": "2023-03-27T18:13:50Z",
        "merged_at": null,
        "body": "Internal Code Change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 17,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-03-27T16:25:40Z",
        "closed_at": "2023-03-28T18:01:09Z",
        "merged_at": null,
        "body": "Internal Code Change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-03-27T03:24:22Z",
        "closed_at": "2023-03-28T16:30:40Z",
        "merged_at": null,
        "body": "Internal Code Change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2006,
        "deletions": 521,
        "changed_files": 8,
        "created_at": "2023-03-26T20:16:05Z",
        "closed_at": "2023-03-27T16:57:37Z",
        "merged_at": null,
        "body": "Open-source extension declaration definition.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 163,
        "deletions": 17,
        "changed_files": 6,
        "created_at": "2023-03-25T17:53:45Z",
        "closed_at": "2023-03-27T21:36:47Z",
        "merged_at": null,
        "body": "Update source code info when stripping source-retention options\n\nWhen we invoke protoc with `--include_source_info --descriptor_set_out`, we\ncurrently strip out source-retention options but without doing the\ncorresponding stripping of the source code info. This CL fixes that problem by\nmaking sure to strip the same entities from source code info that we stripped\nfrom the main part of the descriptors.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-03-25T02:04:25Z",
        "closed_at": "2023-03-28T20:39:33Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-03-24T18:48:59Z",
        "closed_at": "2023-03-24T23:05:38Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2023-03-24T16:19:39Z",
        "closed_at": "2023-03-24T17:24:58Z",
        "merged_at": null,
        "body": "Automated rollback of commit 1d7bda4a78e1f9f7001df3378e38827666f6cdd8.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-03-23T23:27:42Z",
        "closed_at": "2023-03-24T19:23:02Z",
        "merged_at": null,
        "body": "Fixes compile errors with GCC 13.\r\n\r\nport.h:186:67: error: \u2018uint32_t\u2019 was not declared in this scope\r\nport.h:187:67: error: \u2018uint64_t\u2019 was not declared in this scope",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 73,
        "deletions": 33,
        "changed_files": 3,
        "created_at": "2023-03-23T20:49:03Z",
        "closed_at": "2023-04-11T16:54:54Z",
        "merged_at": null,
        "body": "Fix reserializing of nodes for `map<uint32, Enum>` when the enum value is\nunknown and the key has the high bit on.\nIt was being serialized as signed, which caused it to be sign extended. The\nvalue is equivalent after parsing as 32-bit, but it is inconsistent with other forms of\nserialization.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 8,
        "changed_files": 2,
        "created_at": "2023-03-23T17:55:34Z",
        "closed_at": "2023-03-23T20:12:01Z",
        "merged_at": null,
        "body": "Small optimization: move TcParser::Error() out of line\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 61,
        "changed_files": 6,
        "created_at": "2023-03-23T17:01:24Z",
        "closed_at": "2023-04-12T20:17:13Z",
        "merged_at": null,
        "body": "Remove macro based guard for the table-driven parser.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 15,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2023-03-23T16:35:08Z",
        "closed_at": "2023-03-24T17:01:55Z",
        "merged_at": null,
        "body": "Automated rollback of commit 1d7bda4a78e1f9f7001df3378e38827666f6cdd8.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 10,
        "changed_files": 5,
        "created_at": "2023-03-23T16:27:50Z",
        "closed_at": "2023-03-29T20:56:32Z",
        "merged_at": null,
        "body": "Breaking change: Lock down visibility for FileDescriptor.getSyntax().\n\nSyntax will become meaningless once we migrate to editions.  In the meantime, we've implemented APIs to expose the differences between proto2 and proto3 in terms of the features we plan to release in edition 2023.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-03-23T08:48:35Z",
        "closed_at": "2023-03-24T02:07:19Z",
        "merged_at": null,
        "body": "Hello.\r\n\r\nWe want to make our protobuf repository public which contains a custom extension.\r\nOur code is already available at https://github.com/cybozu/protobuf.\r\n\r\nPlease let us use extension number 1179.\r\n\r\nRegards,",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-03-23T08:20:57Z",
        "closed_at": "2023-03-23T14:51:16Z",
        "merged_at": null,
        "body": "One-Line Change Description (used as GitHub Pull Request title)\n\nDetailed description...\n...text exposed to open source public git repo...\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 15,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2023-03-23T05:47:00Z",
        "closed_at": "2023-08-25T21:13:37Z",
        "merged_at": null,
        "body": "Automated rollback of changelist 490646729.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-03-23T02:47:13Z",
        "closed_at": "2023-04-25T03:18:55Z",
        "merged_at": null,
        "body": "Depending on how the local cc toolchain is setup on macos, the core\nfoundation framework might not be available while linking protoc_nowkt.\n\nThis results in a few _CF symbols being interpreted as dynamic load and\nis set to the binary's flat-namespace, causing runtime errors during\nsusequent actions such as gen_wkt_cc_sources.\n\n```bash\n> otool -dyld_info bazel-out/darwin_arm64-opt-exec-2B5CBBC6/bin/external/com_google_protobuf/src/google/protobuf/compiler/protoc_nowkt | grep '_CF'\n__DATA_CONST __got         0x10035C038 0x8010000000000007 bind   0x0      flat-namespace _CFRelease\n__DATA_CONST __got         0x10035C040 0x8010000000000008 bind   0x0      flat-namespace _CFStringGetCString\n__DATA_CONST __got         0x10035C048 0x8010000000000009 bind   0x0      flat-namespace _CFStringGetLength\n__DATA_CONST __got         0x10035C050 0x801000000000000A bind   0x0      flat-namespace _CFStringGetMaximumSizeForEncoding\n__DATA_CONST __got         0x10035C058 0x801000000000000B bind   0x0      flat-namespace _CFTimeZoneCopyDefault\n__DATA_CONST __got         0x10035C060 0x801000000000000C bind   0x0      flat-namespace _CFTimeZoneGetName\n```\n\nTell the linker to use CoreFoundation framework explicitly fixes this\nissue.\n\n```bash\n> otool -dyld_info bazel-out/darwin_arm64-opt-exec-2B5CBBC6/bin/external/com_google_protobuf/src/google/protobuf/compiler/protoc_nowkt | grep '_CF'\n__DATA_CONST __got         0x10035C038 0x8010000000000007 bind   0x0      CoreFoundation _CFRelease\n__DATA_CONST __got         0x10035C040 0x8010000000000008 bind   0x0      CoreFoundation _CFStringGetCString\n__DATA_CONST __got         0x10035C048 0x8010000000000009 bind   0x0      CoreFoundation _CFStringGetLength\n__DATA_CONST __got         0x10035C050 0x801000000000000A bind   0x0      CoreFoundation _CFStringGetMaximumSizeForEncoding\n__DATA_CONST __got         0x10035C058 0x801000000000000B bind   0x0      CoreFoundation _CFTimeZoneCopyDefault\n__DATA_CONST __got         0x10035C060 0x801000000000000C bind   0x0      CoreFoundation _CFTimeZoneGetName\n```\n\ncloses #12173\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 198,
        "deletions": 524,
        "changed_files": 9,
        "created_at": "2023-03-23T00:42:51Z",
        "closed_at": "2023-04-13T23:10:01Z",
        "merged_at": null,
        "body": "This PR removes the DSL from the code generator, in anticipation of splitting the DSL out into a separate package.\r\n\r\nGiven a .proto file like:\r\n\r\n```proto\r\nsyntax = \"proto3\";\r\n\r\npackage pkg;\r\n\r\nmessage TestMessage {\r\n  optional int32 i32 = 1;\r\n  optional TestMessage msg = 2;\r\n}\r\n```\r\n\r\nGenerated code before:\r\n\r\n```ruby\r\n# Generated by the protocol buffer compiler.  DO NOT EDIT!\r\n# source: protoc_explorer/main.proto\r\n\r\nrequire 'google/protobuf'\r\n\r\nGoogle::Protobuf::DescriptorPool.generated_pool.build do\r\n  add_file(\"test.proto\", :syntax => :proto3) do\r\n    add_message \"pkg.TestMessage\" do\r\n      proto3_optional :i32, :int32, 1\r\n      proto3_optional :msg, :message, 2, \"pkg.TestMessage\"\r\n    end\r\n  end\r\nend\r\n\r\nmodule Pkg\r\n  TestMessage = ::Google::Protobuf::DescriptorPool.generated_pool.lookup(\"pkg.TestMessage\").msgclass\r\nend\r\n```\r\n\r\nGenerated code after:\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n# Generated by the protocol buffer compiler.  DO NOT EDIT!\r\n# source: test.proto\r\n\r\nrequire 'google/protobuf'\r\n  \r\ndescriptor_data = \"\\n\\ntest.proto\\x12\\x03pkg\\\"S\\n\\x0bTestMessage\\x12\\x10\\n\\x03i32\\x18\\x01 \\x01(\\x05H\\x00\\x88\\x01\\x01\\x12\\\"\\n\\x03msg\\x18\\x02 \\x01(\\x0b\\x32\\x10.pkg.TestMessageH\\x01\\x88\\x01\\x01\\x42\\x06\\n\\x04_i32B\\x06\\n\\x04_msgb\\x06proto3\"\r\nbegin\r\n  Google::Protobuf::DescriptorPool.generated_pool.add_serialized_file(descriptor_data)\r\nrescue TypeError => e\r\n  # <compatibility code, see below>\r\nend\r\n\r\nmodule Pkg\r\n  TestMessage = ::Google::Protobuf::DescriptorPool.generated_pool.lookup(\"pkg.TestMessage\").msgclass\r\nend\r\n```\r\n\r\nThis change fixes nearly all remaining conformance problems that existed previously. This is a side effect of moving from the DSL (which is lossy) to a serialized descriptor (which preserves all information).\r\n\r\n## Backward Compatibility\r\n\r\nThis change should be 100% compatible with Ruby Protobuf >= 3.18.0, released in Sept 2021. Additionally, it should be compatible with all existing users and deployments. However there is some special compatibility code I inserted to achieve this level of backward compatibility.\r\n\r\nWithout the compatibility code, there is an edge case that could break backward compatibility. The existing code is lax in a way that the new code would be more strict.\r\n \r\nWhen we use a full serialized descriptor, it will contain a list of all `.proto` files imported by this file (whereas the DSL never added dependencies properly): https://github.com/protocolbuffers/protobuf/blob/dfb71558a2226718dc3bcf5df27cbc11c1f72382/src/google/protobuf/descriptor.proto#L65-L66\r\n\r\n`add_serialized_file` will verify that all dependencies listed in the descriptor were previously added with `add_serialized_file`.  Generally that should be fine, because the generated code will contain Ruby `require` statements for all dependencies, and the descriptor will fail to load anyway if the types we depend on were not previously defined in the DescriptorPool.\r\n\r\nBut there is a potential for problems if there are ambiguities around file paths. For example, consider the following scenario:\r\n\r\n```proto\r\n// foo/bar.proto\r\n\r\nsyntax = \"proto2\";\r\n\r\nmessage Bar {}\r\n```\r\n\r\n```proto\r\n// foo/baz.proto\r\n\r\nsyntax = \"proto2\";\r\n\r\nimport \"bar.proto\";\r\n\r\nmessage Baz {\r\n  optional Bar bar = 1;\r\n}\r\n```\r\n\r\nIf you invoke `protoc` like so, it will work correctly:\r\n\r\n```\r\n$ protoc --ruby_out=. -Ifoo foo/bar.proto foo/baz.proto\r\n$ RUBYLIB=. ruby baz_pb.rb\r\n```\r\n\r\nHowever if you invoke `protoc` like so, and didn't have any compatibility code, it would fail to load:\r\n\r\n```\r\n$ protoc --ruby_out=. -I. -Ifoo foo/baz.proto\r\n$ protoc --ruby_out=. -I. -Ifoo foo/bar.proto\r\n$ RUBYLIB=foo ruby foo/baz_pb.rb\r\nfoo/baz_pb.rb:10:in `add_serialized_file': Unable to build file to DescriptorPool: Depends on file 'bar.proto', but it has not been loaded (Google::Protobuf::TypeError)\r\n\tfrom foo/baz_pb.rb:10:in `<main>'\r\n```\r\n\r\nThe problem is that `bar.proto` is being referred to by two different canonical names: `bar.proto` and `foo/bar.proto`. This is a user error: each import should always be referred to by a consistent full path. Hopefully user errors of this sort are rare, but it is hard to know without trying.\r\n\r\nThe code in this PR prints a warning using `warn` if we detect that this edge case has occurred. We will plan to remove this compatibility code in the next major version.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 353,
        "deletions": 204,
        "changed_files": 7,
        "created_at": "2023-03-22T20:59:00Z",
        "closed_at": "2023-08-25T21:13:39Z",
        "merged_at": null,
        "body": "Rewrite the table-driven parser to provide debug tracing.\nThis allows for tests to inspect the code paths taken.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-03-22T17:07:06Z",
        "closed_at": "2023-08-25T21:13:41Z",
        "merged_at": null,
        "body": "Breaking change: Fix JsonFormat default value handling to correctly handle proto3 optionals and optionals that are not set.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 40,
        "deletions": 141,
        "changed_files": 6,
        "created_at": "2023-03-22T15:47:14Z",
        "closed_at": "2023-03-23T16:42:39Z",
        "merged_at": null,
        "body": "Internal change.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 712,
        "deletions": 264,
        "changed_files": 6,
        "created_at": "2023-03-22T14:51:38Z",
        "closed_at": "2023-03-22T19:37:01Z",
        "merged_at": null,
        "body": "sync to current upb and enable new unit test on upb\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 55,
        "deletions": 158,
        "changed_files": 2,
        "created_at": "2023-03-22T06:46:50Z",
        "closed_at": "2023-03-22T15:18:34Z",
        "merged_at": null,
        "body": "Automated rollback of commit f7e6c46824510e12dbaa49bcd7dada5b3c6e0420.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 202,
        "deletions": 109,
        "changed_files": 6,
        "created_at": "2023-03-22T03:36:21Z",
        "closed_at": "2023-04-29T01:55:34Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 18,
        "deletions": 35,
        "changed_files": 1,
        "created_at": "2023-03-22T00:13:42Z",
        "closed_at": "2023-03-24T00:44:08Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 392,
        "deletions": 52,
        "changed_files": 12,
        "created_at": "2023-03-21T21:06:00Z",
        "closed_at": "2023-03-24T22:02:53Z",
        "merged_at": null,
        "body": "Added Reflection::GetCord() method in C++\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 43,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-03-21T20:28:42Z",
        "closed_at": "2023-05-05T22:05:39Z",
        "merged_at": null,
        "body": "Add tests for generated ctype=CORD singular bytes field\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 73,
        "deletions": 73,
        "changed_files": 3,
        "created_at": "2023-03-21T20:24:18Z",
        "closed_at": "2023-03-21T22:16:29Z",
        "merged_at": null,
        "body": "Mark singular `target` field option deprecated.\n\nThis was always designed to be repeated, and the singular one should never be used.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 44,
        "deletions": 47,
        "changed_files": 10,
        "created_at": "2023-03-21T18:39:59Z",
        "closed_at": "2023-03-22T18:09:13Z",
        "merged_at": null,
        "body": "Fix build errors in Protobuf Rust\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 12,
        "deletions": 1,
        "changed_files": 5,
        "created_at": "2023-03-21T18:07:31Z",
        "closed_at": "2023-03-21T20:49:58Z",
        "merged_at": null,
        "body": "Add license rules\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 10,
        "changed_files": 3,
        "created_at": "2023-03-21T17:37:23Z",
        "closed_at": "2023-03-21T20:16:41Z",
        "merged_at": null,
        "body": "Only include utf8_range if it hasn't been included already\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 10,
        "changed_files": 2,
        "created_at": "2023-03-21T17:17:21Z",
        "closed_at": "2023-03-22T03:27:51Z",
        "merged_at": null,
        "body": "This fixes https://github.com/protocolbuffers/protobuf/issues/12263, but we will not cherrypick to 22.x since it could be breaking.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-03-21T15:14:06Z",
        "closed_at": "2023-03-22T15:25:17Z",
        "merged_at": null,
        "body": "Internal change.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-03-21T15:02:19Z",
        "closed_at": "2023-03-22T16:00:04Z",
        "merged_at": null,
        "body": "Internal change.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 73,
        "deletions": 73,
        "changed_files": 3,
        "created_at": "2023-03-21T06:22:12Z",
        "closed_at": "2023-06-12T20:18:15Z",
        "merged_at": null,
        "body": "Deprecate singular target field option.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 35,
        "deletions": 77,
        "changed_files": 3,
        "created_at": "2023-03-21T03:53:40Z",
        "closed_at": "2023-03-21T20:44:09Z",
        "merged_at": null,
        "body": "Create a helper for converting ErrorLocation to a string\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 688,
        "deletions": 8,
        "changed_files": 8,
        "created_at": "2023-03-21T03:05:16Z",
        "closed_at": "2023-03-21T14:36:07Z",
        "merged_at": null,
        "body": "Re-attach OSGI headers to lite,core, and util. This information was dropped in the move from maven to bazel.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-03-21T01:55:59Z",
        "closed_at": "2023-03-22T14:27:32Z",
        "merged_at": null,
        "body": "fix Python bug with required fields\n\nhttps://github.com/protocolbuffers/upb/issues/1220\n\nThere were two bugs here: Python was incorrectly mandating that a required\nfield be set during assignment, and it was also incorrectly assuming a non-NULL\nreturn from an internal function call.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-03-20T23:14:44Z",
        "closed_at": "2023-03-22T22:37:40Z",
        "merged_at": null,
        "body": "Internal changes to extensions.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 158,
        "deletions": 55,
        "changed_files": 2,
        "created_at": "2023-03-20T22:37:23Z",
        "closed_at": "2023-03-21T17:54:44Z",
        "merged_at": null,
        "body": "Reduce stack usage of MessageDifferencer in two ways:\n - Replace uses of stack-based FixedArray instances with a heap-based stack.\nThis new stack amortizes memory allocations.\n - Remove local variables of SpecificField. These are quite large and we only\nuse them temporarily to push into the vector. Better to push early and use the\nvalue from the vector directly.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 293,
        "deletions": 374,
        "changed_files": 7,
        "created_at": "2023-03-20T20:36:02Z",
        "closed_at": "2023-03-21T06:00:57Z",
        "merged_at": null,
        "body": "Automated rollback of commit 0c121398936f813060c533aaf38e670cc6bb94c2.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-03-20T20:31:24Z",
        "closed_at": "2023-08-25T21:13:43Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2023-03-20T19:05:02Z",
        "closed_at": "2023-03-20T22:03:29Z",
        "merged_at": null,
        "body": "Remove ABSL_DCHECK header and dep now that port_def.inc is fixed\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-03-20T18:47:03Z",
        "closed_at": "2023-03-20T19:53:37Z",
        "merged_at": null,
        "body": "[PHP] Run tests on PHP 8.2 too , check for startup warnings (#10596)\n\nPHP 8.2 is around the corner, and they've just published 8.2.0RC2.\nSo, what about testing protobuf with it?\n\nAlso: even if everything compiles and the PHP extension can be used, we may have that PHP throws some warnings at startup.\nFor example, if we install protobuf 3.18.3 with PHP 8.1, we have these warnings:\n\n```\n$ php -r 'echo \"This is just a test.\\n\";'\n\nDeprecated: Return type of Google\\Protobuf\\Internal\\RepeatedField::offsetExists($index) should either be compatible with ArrayAccess::offsetExists(mixed $offset): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice in Unknown on line 0\n\n[...omissis... ]\n\nDeprecated: Return type of Google\\Protobuf\\Internal\\MapFieldIter::rewind() should either be compatible with Iterator::rewind(): void, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice in Unknown on line 0\n\nThis is just a test.\n```\n\nSo: what about letting the `php-ext.yml` GitHub Action fail in case we have such startup errors?\n\nCloses #10596\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/10596 from mlocati:php-8.2-warnings 6383242b149b8804a6f17d38751b0a7fbaa4d934\nFUTURE_COPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/10596 from mlocati:php-8.2-warnings 6383242b149b8804a6f17d38751b0a7fbaa4d934\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 73,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-03-20T17:52:55Z",
        "closed_at": "2023-08-25T21:13:45Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-03-20T17:14:43Z",
        "closed_at": "2023-03-20T18:40:07Z",
        "merged_at": "2023-03-20T18:40:07Z",
        "body": "\u2026_google_googletest//:gtest_main from //src/google/protobuf/json:parser (#12267)\r\n\r\nDownstream bazel projects that depend on protoc would need to provide googletest dependencies when it should not be necessary to do so.\r\n\r\nFixes #11409\r\n\r\nCloses #12267\r\n\r\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/12267 from prestonvanloon:remove-erroneous-googletest-dep 09fd163094b5138ad4512a19bf0331bf2cf6db2b PiperOrigin-RevId: 517974450",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 370,
        "deletions": 235,
        "changed_files": 7,
        "created_at": "2023-03-20T16:21:04Z",
        "closed_at": "2023-03-20T22:10:26Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 73,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-03-20T16:07:53Z",
        "closed_at": "2023-03-20T18:36:13Z",
        "merged_at": null,
        "body": "Introduce a legacy utility for Descriptors.java to hide FileDescriptor.getSyntax().\n\nThis will be used to make the method and enum to package-private and later to visibility-restrict other deprecated APIs for editions to prevent backslide.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-03-20T10:03:57Z",
        "closed_at": "2023-03-21T06:43:09Z",
        "merged_at": null,
        "body": "The minimum required CMake version is 3.5. Thus, this message type is supported.\r\n\r\nRef.:\r\nhttps://cmake.org/cmake/help/v3.5/command/message.html",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 374,
        "deletions": 293,
        "changed_files": 7,
        "created_at": "2023-03-17T21:25:48Z",
        "closed_at": "2023-03-18T07:07:24Z",
        "merged_at": null,
        "body": "Automated rollback of commit 9e8435ac40054899f24536584844130ea222bbe8.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-03-17T18:47:05Z",
        "closed_at": "2023-03-20T14:23:55Z",
        "merged_at": null,
        "body": "Create a real_oneof_decl helper for limiting queries to only non-synthetic oneofs.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-03-17T18:42:36Z",
        "closed_at": "2023-03-20T15:25:51Z",
        "merged_at": null,
        "body": "Downstream bazel projects that depend on protoc would need to provide googletest dependencies when it should not be necessary to do so.\r\n\r\nFixes #11409\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-03-17T18:11:39Z",
        "closed_at": "2023-03-20T17:28:38Z",
        "merged_at": null,
        "body": "At the moment, `protoc` ignores `option deprecated = true` for these entities.\r\n\r\nIt seems good to add the tag `@deprecated` to highlight the deprecation in the client code. It works for fields bot not for messages/service/method.\r\n\r\nI wanted to add the test for this change, but I couldn't find any test for the generator. I will be happy if you can guide me in the right direction",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1460,
        "deletions": 861,
        "changed_files": 6,
        "created_at": "2023-03-17T15:21:01Z",
        "closed_at": "2023-03-20T15:17:38Z",
        "merged_at": null,
        "body": "Bump upb version\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 295,
        "deletions": 6,
        "changed_files": 5,
        "created_at": "2023-03-17T14:59:15Z",
        "closed_at": "2023-03-21T06:54:52Z",
        "merged_at": null,
        "body": "Fixes #11987\r\n\r\n(testprotos.pb and UnittestIssues.pb.cs are both generated; no need to review.)",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-03-17T14:18:58Z",
        "closed_at": "2023-03-21T06:04:14Z",
        "merged_at": null,
        "body": "Note that the error only affects users trying to build Google.Protobuf directly using C# 11. It doesn't affect users who are compiling code against the pre-built library (which is likely to be basically everyone).\r\n\r\nFixes #11004.\r\n\r\n(This is code I'm less familiar with than most of the library, and I'd be nervous of making any more wide-ranging changes. This seems pretty safe though.)\r\n\r\ncc @JamesNK who first noticed this.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 37,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-03-17T14:00:25Z",
        "closed_at": "2023-03-23T19:32:17Z",
        "merged_at": null,
        "body": "Add GHA workflow for Rust\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 35,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2023-03-17T13:57:12Z",
        "closed_at": "2023-03-17T16:20:56Z",
        "merged_at": null,
        "body": "Enable GHA for Rust\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-03-17T13:56:22Z",
        "closed_at": "2023-03-17T16:16:37Z",
        "merged_at": null,
        "body": "Internal Code Change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-03-17T06:14:05Z",
        "closed_at": "2023-03-21T06:17:50Z",
        "merged_at": null,
        "body": "https://docs.python.org/3.12/whatsnew/3.12.html#removed . `assertRaisesRegexp` was removed in favor of `assertRaisesRegex`",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 367,
        "deletions": 288,
        "changed_files": 7,
        "created_at": "2023-03-17T03:55:54Z",
        "closed_at": "2023-03-17T17:53:01Z",
        "merged_at": null,
        "body": "Switch option target to a repeated field\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 120,
        "deletions": 119,
        "changed_files": 2,
        "created_at": "2023-03-17T02:52:10Z",
        "closed_at": "2023-08-25T21:13:47Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 120,
        "deletions": 119,
        "changed_files": 2,
        "created_at": "2023-03-17T02:47:19Z",
        "closed_at": "2023-08-25T21:13:49Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 22,
        "deletions": 9,
        "changed_files": 1,
        "created_at": "2023-03-17T02:43:55Z",
        "closed_at": "2023-03-17T16:38:58Z",
        "merged_at": null,
        "body": "Breaking change: lock down visibility for FileDescriptor syntax APIs.\n\nThese will become meaningless once we migrate to editions.  In the meantime, we've implemented APIs to expose the differences between proto2 and proto3 in terms of the features we plan to release in edition 2023.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 16,
        "changed_files": 1,
        "created_at": "2023-03-16T18:06:38Z",
        "closed_at": "2023-03-16T20:52:09Z",
        "merged_at": null,
        "body": "Update dependency on com_google_googletest to use the newly added googletest_deps to install transitive dependencies.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 11,
        "changed_files": 7,
        "created_at": "2023-03-16T17:32:27Z",
        "closed_at": "2023-03-16T20:29:48Z",
        "merged_at": null,
        "body": "Undo the external contributions we have accepted to the well-known types\n\nFor legal reasons we unfortunately cannot accept any external contributions to\nthe well-known type protos, so this change reverts the small number of changes\nwe have received so far.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 186,
        "deletions": 41,
        "changed_files": 7,
        "created_at": "2023-03-16T15:19:42Z",
        "closed_at": "2023-03-20T18:23:26Z",
        "merged_at": null,
        "body": "Fix absl log and check headers and deps for port_def.inc\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 134,
        "deletions": 27,
        "changed_files": 3,
        "created_at": "2023-03-16T14:39:16Z",
        "closed_at": "2023-03-21T14:07:05Z",
        "merged_at": null,
        "body": "Update proto parsing to keep track of parsed fields that have no presence and were parsed to their default value, hence had no effect on the result proto.\nUpdate the Partially proto matcher to cause proto parsing to check fail if the above condition was triggered.\nThis is to address a known issue where test are silently passing when proto3 protos are the arguments to Partially(EqualsProto) and have some of the fields ignored by the EqualsProto matcher since they were set to their default value in the expected proto.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 559,
        "deletions": 161,
        "changed_files": 4,
        "created_at": "2023-03-16T03:24:11Z",
        "closed_at": "2023-03-17T19:49:32Z",
        "merged_at": null,
        "body": "Introduce ShiftMixParseVarint Shuffle function\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 14,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2023-03-15T22:14:29Z",
        "closed_at": "2023-03-16T16:23:54Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 36,
        "deletions": 26,
        "changed_files": 4,
        "created_at": "2023-03-15T13:10:06Z",
        "closed_at": "2023-03-16T04:22:30Z",
        "merged_at": null,
        "body": "Fix absl log and check headers and deps for port_def.inc\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 87,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-03-15T11:57:09Z",
        "closed_at": "2023-06-13T08:35:43Z",
        "merged_at": null,
        "body": "As per https://github.com/protocolbuffers/protobuf/issues/12017#issuecomment-1469334478, add basic\r\ntesting functionality for whatever is supposed to be present in the generated `META-INF/MANIFEST.MF`;  at\r\nthe moment, this currently successfully completes for `main` during a maven build, but doesn't seem to be\r\npicked up by `bazel` at all.\r\n\r\nAs I'm completely unfamiliar with `bazel`, some guidance would be appreciated.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-03-15T00:31:55Z",
        "closed_at": "2023-03-15T19:20:49Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-03-14T21:41:22Z",
        "closed_at": "2023-03-17T22:31:38Z",
        "merged_at": null,
        "body": "internal change to extensions\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 42,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-03-14T20:40:57Z",
        "closed_at": "2023-03-14T23:04:46Z",
        "merged_at": null,
        "body": "Fix `FieldSet#writeMessageSetTo` to delegate to LazyFields when appropriate.\n\nThis fixes the following issue:\n- In `FieldSet#getMessageSetSerializedSize` we delegate to `LazyField` for getting its size.\n- Before this change, in `FieldSet#writeMessageTo` we do not delegate to LazyField's `byteString` method. Instead, we call `getValue` on the `FieldSet`.\n- It's not guaranteed that `fieldSet.getSerializedSize() == fieldSet.getValue().getSerializedSize()`.\n\nIn particular, this can lead us to run into the message \"Serializing com.google.protobuf.DynamicMessage to a byte array threw an IOException (should never happen)\" because of mispredicted output size. \n\nWe fix the issue by following similar logic to `MessageSetSchema`- if \"getSerializedSize\" delegates to the LazyField, then the serializer should as well.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 115,
        "deletions": 48,
        "changed_files": 17,
        "created_at": "2023-03-14T19:30:47Z",
        "closed_at": "2023-03-14T23:35:13Z",
        "merged_at": null,
        "body": "Internal Code Change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 66,
        "deletions": 32,
        "changed_files": 18,
        "created_at": "2023-03-14T18:58:57Z",
        "closed_at": "2023-03-14T22:51:08Z",
        "merged_at": null,
        "body": "Internal Code Change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 32,
        "deletions": 54,
        "changed_files": 6,
        "created_at": "2023-03-14T18:51:53Z",
        "closed_at": "2023-04-04T19:44:43Z",
        "merged_at": null,
        "body": "Refactor MapField arena destruction to avoid destroying the Map unnecessarily and make sure to destroy the mutex in MapFieldBase.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 45,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-03-14T15:19:40Z",
        "closed_at": "2023-03-14T21:34:29Z",
        "merged_at": null,
        "body": "Add Java FileDescriptor.copyHeadingTo() which copies file-level settings (e.g. syntax, package, file options) to FileDescriptorProto.Builder\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 604,
        "deletions": 290,
        "changed_files": 14,
        "created_at": "2023-03-14T15:08:12Z",
        "closed_at": "2023-03-17T16:23:03Z",
        "merged_at": null,
        "body": "Configure build for the C++ backend\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 356,
        "deletions": 62,
        "changed_files": 13,
        "created_at": "2023-03-14T13:21:33Z",
        "closed_at": "2023-03-16T11:59:04Z",
        "merged_at": null,
        "body": "Configure the build for the Rust UPB backend\n\nIn this CL we're adding the barebones infrastructure to generate Rust proto messages using UPB as a backend. The API is what we call a V0, not yet production-quality, not yet rigorously designed, just something to enable parallel work.\n\nThe interesting part of switching backend between UPB and C++ will come in a followup.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-03-14T07:18:18Z",
        "closed_at": "2023-03-15T05:46:26Z",
        "merged_at": null,
        "body": "Fix lint warnings for protobuf GeneratedMessage.java\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-03-14T04:14:11Z",
        "closed_at": "2023-03-14T15:53:16Z",
        "merged_at": null,
        "body": "Pull after committing regenerated files\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 20,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-03-13T23:33:27Z",
        "closed_at": "2023-03-14T03:31:34Z",
        "merged_at": null,
        "body": "Provide proto3 optional APIs in visibility-scoped wrapper.\n\nThese will be made private in a later change.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 22,
        "deletions": 2,
        "changed_files": 4,
        "created_at": "2023-03-13T12:05:31Z",
        "closed_at": "2023-04-03T10:09:06Z",
        "merged_at": null,
        "body": "It should be present from Ruby 2.7 onwards.\r\n\r\nThe advantage over a raw `assert` is that it will trigger MRI's crash report on failure, making it much easier to debug at a glance.\r\n\r\nFor context I'm trying to debug an assertion failure we've been seeing on Ruby nigthly builds:\r\n\r\n```\r\nruby: protobuf.c:404: ObjectCache_Add: Assertion `ObjectCache_Get(key) == val' failed.\r\n```",
        "comments": 21
    },
    {
        "merged": false,
        "additions": 657,
        "deletions": 7,
        "changed_files": 8,
        "created_at": "2023-03-13T00:19:43Z",
        "closed_at": "2023-03-21T16:08:14Z",
        "merged_at": null,
        "body": "This is the beginning of a fix for https://github.com/protocolbuffers/protobuf/issues/12017",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 17,
        "deletions": 24,
        "changed_files": 2,
        "created_at": "2023-03-12T18:27:20Z",
        "closed_at": "2023-03-16T19:54:39Z",
        "merged_at": null,
        "body": "Remove loop when skipping string field values.\n\nNo need for a loop that that calls tryConsumeString or tryConsumeByteString repeatedly, since ConsumeByteString already loops itself.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 103,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-03-11T06:53:35Z",
        "closed_at": "2023-03-13T22:11:44Z",
        "merged_at": null,
        "body": "Introduce a legacy wrapper around descriptor to begin hiding APIs for editions.\n\nFor now, we'll just be hiding syntax getters on FileDescriptor.  Later on this will likely grow to include other APIs that distinguish between proto2/proto3.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-03-11T06:18:38Z",
        "closed_at": "2023-03-13T14:45:36Z",
        "merged_at": null,
        "body": "Internal Code Change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 51,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-03-11T02:14:31Z",
        "closed_at": "2023-03-13T19:37:36Z",
        "merged_at": null,
        "body": "Add support for usage of MessageDifferencer::RepeatedFieldComparison as an Abseil flag type.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-03-11T00:28:44Z",
        "closed_at": "2023-03-13T13:48:21Z",
        "merged_at": null,
        "body": "Fix syntax error in enum docs\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 15,
        "changed_files": 2,
        "created_at": "2023-03-11T00:20:39Z",
        "closed_at": "2023-03-15T01:30:35Z",
        "merged_at": null,
        "body": "Add hasbit to proto3 fields even when 'optional' is missing.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 78,
        "deletions": 13,
        "changed_files": 7,
        "created_at": "2023-03-11T00:14:58Z",
        "closed_at": "2023-08-10T19:56:40Z",
        "merged_at": null,
        "body": "Lock down ctype=CORD in proto file.\n\nctype can not be used for none string/bytes fields. ctye=CORD can not be used for extensions. A new macro PROTOBUF_FUTURE_REMOVE_WRONG_CTYPE is added that will be flipped for our next breaking release.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 84,
        "deletions": 27,
        "changed_files": 5,
        "created_at": "2023-03-10T22:19:46Z",
        "closed_at": "2023-03-14T21:04:05Z",
        "merged_at": null,
        "body": "Add config option to print 64-bit integers in JSON as unquoted ints if they can be losslessly converted into a 64-bit float.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 64,
        "deletions": 53,
        "changed_files": 39,
        "created_at": "2023-03-10T19:18:42Z",
        "closed_at": "2023-03-10T21:05:51Z",
        "merged_at": "2023-03-10T21:05:51Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 51,
        "deletions": 51,
        "changed_files": 35,
        "created_at": "2023-03-10T17:52:01Z",
        "closed_at": "2023-03-10T18:53:31Z",
        "merged_at": "2023-03-10T18:53:31Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-03-10T16:16:02Z",
        "closed_at": "2023-03-17T18:11:12Z",
        "merged_at": null,
        "body": "At the moment, `protoc` ignores `option deprecated = true` for these entities.\r\n\r\nIt seems good to add the tag `@deprecated` to highlight the deprecation in the client code. It works for fields bot not for messages/service/method.\r\n\r\nI wanted to add the test for this change, but I couldn't find any test for the generator. I will be happy if you can guide me in the right direction",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 42,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-03-10T14:27:19Z",
        "closed_at": "2023-03-16T18:20:00Z",
        "merged_at": null,
        "body": "WIP\nerror: integer literal is too large to be represented in a signed integer type, interpreting as unsigned [-Werror,-Wimplicitly-unsigned-literal]\n  int64_t default_val = (int64_t)-9223372036854775808ll;\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2023-03-10T14:07:01Z",
        "closed_at": "2023-08-25T21:13:51Z",
        "merged_at": null,
        "body": "Add support for thunks to upb_proto_aspect.\n\n\"Thunks\" are .c files with definitions for the inline functions in the gencode C\nAPI. They are meant to be used from statically compiled languages that cannot\nuse inline C functions such as Rust.\n\nExperimental, do not use. Our current plan is to delete this code in the order\nof months. Without any prior warning.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2023-03-10T08:21:42Z",
        "closed_at": "2023-03-10T15:10:21Z",
        "merged_at": null,
        "body": "Rename a test\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2023-03-10T00:14:27Z",
        "closed_at": "2023-03-10T15:48:57Z",
        "merged_at": "2023-03-10T15:48:57Z",
        "body": "This should be the last of the PRs to fix https://github.com/protocolbuffers/protobuf/issues/12170.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 61,
        "deletions": 52,
        "changed_files": 3,
        "created_at": "2023-03-09T23:08:54Z",
        "closed_at": "2023-03-25T00:38:45Z",
        "merged_at": null,
        "body": "Minor readability improvements and cleanups.\n\n- Dropping unnecessary includes.\n- Adding missing consts\n- Adding using declarations for symbols under `::testing`.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2023-03-09T22:35:39Z",
        "closed_at": "2023-03-30T23:50:19Z",
        "merged_at": null,
        "body": "Change naming of the TryFindSymbolInFallbackDatabase function to IsSymbolInFallbackDatabase.\n\nThis naming makes the other if statements a lot easier to read.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 41,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2023-03-09T20:32:43Z",
        "closed_at": "2023-08-25T21:13:53Z",
        "merged_at": null,
        "body": "Deduplicate aux entries for submessages and enums\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-03-09T19:15:43Z",
        "closed_at": "2023-03-09T21:34:18Z",
        "merged_at": null,
        "body": "Automated rollback of commit cfea0399181b2b213aa65cf3d28d3ac523a6c5ed.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2023-03-09T17:21:39Z",
        "closed_at": "2023-03-09T19:06:45Z",
        "merged_at": "2023-03-09T19:06:45Z",
        "body": "https://github.com/protocolbuffers/protobuf/pull/12177 removed all the `$` qualifiers too eagerly, they should still be here in this plugin to match https://repo1.maven.org/maven2/com/google/protobuf/protobuf-java-util/3.21.12/protobuf-java-util-3.21.12.pom",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 182,
        "deletions": 1,
        "changed_files": 4,
        "created_at": "2023-03-09T16:49:44Z",
        "closed_at": "2023-04-17T18:36:53Z",
        "merged_at": null,
        "body": "Add Rust FFI definitions for UPB accessor functions.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 20,
        "changed_files": 5,
        "created_at": "2023-03-08T23:12:24Z",
        "closed_at": "2023-03-09T23:24:48Z",
        "merged_at": null,
        "body": "Migrate syntax reflection to new feature-based system.\n\nAs part of go/protobuf-editions, we will be abandoning `syntax` in place of the new editions framework.  The first edition will turn each difference between proto2 and proto3 into a more targeted *feature* placed on proto descriptors.  In preparation for this, we want to migrate everyone off direct inspection of `syntax`.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 118,
        "deletions": 63,
        "changed_files": 44,
        "created_at": "2023-03-08T20:31:28Z",
        "closed_at": "2023-03-08T23:38:28Z",
        "merged_at": null,
        "body": "Merge 22.x back to main (#12169)\n\nCloses #12169\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/12169 from protocolbuffers:main-202303072257 3304c89726e3e4c5494dfab92ac02f8ca8755397\nFUTURE_COPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/12169 from protocolbuffers:main-202303072257 3304c89726e3e4c5494dfab92ac02f8ca8755397\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 171,
        "deletions": 149,
        "changed_files": 2,
        "created_at": "2023-03-08T17:52:26Z",
        "closed_at": "2023-08-25T21:13:55Z",
        "merged_at": null,
        "body": "[EXPERIMENTAL] Varint Dispatch - Add optimized Shift mix function for large varints\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 132,
        "deletions": 98,
        "changed_files": 2,
        "created_at": "2023-03-08T17:50:48Z",
        "closed_at": "2023-08-25T21:13:58Z",
        "merged_at": null,
        "body": "[EXPERIMENTAL] Varint Dispatch - restructure parsing into FastVarint struct\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 6,
        "changed_files": 5,
        "created_at": "2023-03-08T17:30:40Z",
        "closed_at": "2023-03-08T18:52:17Z",
        "merged_at": "2023-03-08T18:52:17Z",
        "body": "Fixes https://github.com/protocolbuffers/protobuf/issues/12170",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 17,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2023-03-08T12:17:21Z",
        "closed_at": "2023-05-15T20:40:47Z",
        "merged_at": null,
        "body": "This PR replaces the descriptor name validation regex with a validation method. This change allows the `System.Text.RegularExpressions` engine to be trimmed away in published apps that do standard protobuf serialization.\r\n\r\nThere are some other usages of `Regex` in Google.Protobuf, but they in `JsonParser`. They are only included in a published app if `JsonParser` is used.\r\n\r\nAnother benefit is a slightly faster app startup time. The removed regex was compiled, which has a high-ish fixed cost.\r\n\r\ncc @jskeet @jtattermusch ",
        "comments": 13
    },
    {
        "merged": false,
        "additions": 28,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2023-03-08T01:23:48Z",
        "closed_at": "2023-03-08T21:39:20Z",
        "merged_at": null,
        "body": "Add ParseFromCord to TextFormat\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 112,
        "deletions": 59,
        "changed_files": 44,
        "created_at": "2023-03-07T23:40:19Z",
        "closed_at": "2023-03-08T23:38:29Z",
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 61,
        "deletions": 392,
        "changed_files": 18,
        "created_at": "2023-03-07T19:39:49Z",
        "closed_at": "2023-03-22T22:41:11Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 20,
        "changed_files": 5,
        "created_at": "2023-03-07T19:13:00Z",
        "closed_at": "2023-03-08T18:27:14Z",
        "merged_at": null,
        "body": "Internal Code Change\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 21,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-03-07T19:03:53Z",
        "closed_at": "2023-03-07T20:19:34Z",
        "merged_at": "2023-03-07T20:19:34Z",
        "body": "Windows executables should have a `.exe` suffix.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2023-03-07T11:04:20Z",
        "closed_at": "2023-07-17T14:46:36Z",
        "merged_at": null,
        "body": "Using standard C++ attribute to remove compiler-based switch.\r\n\r\nThis continues #12026.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2023-03-07T06:37:27Z",
        "closed_at": "2023-03-07T07:44:21Z",
        "merged_at": null,
        "body": "Internal Code Change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-03-07T05:28:40Z",
        "closed_at": "2023-03-10T21:24:45Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 159,
        "deletions": 19,
        "changed_files": 6,
        "created_at": "2023-03-07T01:43:37Z",
        "closed_at": "2023-08-25T21:14:00Z",
        "merged_at": null,
        "body": "[EXPERIMENTAL] Varint Dispatch\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 331,
        "deletions": 167,
        "changed_files": 8,
        "created_at": "2023-03-07T01:30:36Z",
        "closed_at": "2023-08-25T21:14:02Z",
        "merged_at": null,
        "body": "[EXPERIMENTAL] Varint Dispatch - add varint_counters\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 159,
        "deletions": 19,
        "changed_files": 6,
        "created_at": "2023-03-06T23:11:47Z",
        "closed_at": "2023-03-07T02:55:06Z",
        "merged_at": null,
        "body": "[EXPERIMENTAL] Varint Dispatch - add varint_counters\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-03-06T22:33:39Z",
        "closed_at": "2023-03-08T17:51:51Z",
        "merged_at": null,
        "body": "Internal changes to extensions.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-03-06T21:37:29Z",
        "closed_at": "2023-03-06T23:55:36Z",
        "merged_at": null,
        "body": "Fix released protoc path\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-03-06T17:37:08Z",
        "closed_at": "2023-03-28T19:40:27Z",
        "merged_at": null,
        "body": "Annotate `com.google.protobuf.util.Durations` and `Timestamps` with `@Internal.ProtoNonnullApi`.\n\n#nullness\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2023-03-06T13:59:21Z",
        "closed_at": "2023-03-09T06:38:10Z",
        "merged_at": null,
        "body": "Fix lint warnings for protobuf GeneratedMessage.java\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 12,
        "changed_files": 1,
        "created_at": "2023-03-06T07:32:16Z",
        "closed_at": "2023-03-06T18:20:54Z",
        "merged_at": null,
        "body": "Automated rollback of commit 8f3ae17b3d248456691334de7a3901003acae387.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 206,
        "deletions": 217,
        "changed_files": 2,
        "created_at": "2023-03-06T00:43:18Z",
        "closed_at": "2023-03-31T19:29:05Z",
        "merged_at": null,
        "body": "Refactor ARM-optimized varint parsing.\n\nThis change improves deserialization performance by in two ways:\n\n1) VarintParseSlowArm32 and VarintParseSlowArm64 return a pair for the updated buffer pointer and parsing result instead of storing the result and returning just the pointer. This allows the parsed result to be returned to higher level code in x1 rather than via the stack.\n\n2) Remove prohibition on inlining VarintParseSlowArm32 and VarintParseSlowArm64. This prohibition was originally included to avoid bloating non-TDP code. Now that TDP is enabled the impact on code size is small.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1058,
        "deletions": 195,
        "changed_files": 29,
        "created_at": "2023-03-04T16:41:59Z",
        "closed_at": "2023-08-25T21:14:04Z",
        "merged_at": null,
        "body": "Automated rollback of changelist 513956259.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1058,
        "deletions": 195,
        "changed_files": 29,
        "created_at": "2023-03-04T02:46:00Z",
        "closed_at": "2023-03-06T15:15:20Z",
        "merged_at": null,
        "body": "Automated rollback of changelist 513956259.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 94,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-03-04T01:01:09Z",
        "closed_at": "2023-03-06T16:55:32Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 70,
        "deletions": 4,
        "changed_files": 4,
        "created_at": "2023-03-03T22:47:47Z",
        "closed_at": "2023-03-13T23:28:32Z",
        "merged_at": null,
        "body": "Move the empty package allowlist into the new allowlists directory.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-03-03T22:05:50Z",
        "closed_at": "2023-03-06T15:10:21Z",
        "merged_at": null,
        "body": "Parallelize the build of the PHP extension\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 58,
        "deletions": 15,
        "changed_files": 5,
        "created_at": "2023-03-03T20:32:50Z",
        "closed_at": "2023-08-25T21:14:06Z",
        "merged_at": null,
        "body": "Make protoc --descriptor_set_out respect option retention\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 55,
        "deletions": 11,
        "changed_files": 7,
        "created_at": "2023-03-03T20:01:22Z",
        "closed_at": "2023-03-06T18:26:29Z",
        "merged_at": null,
        "body": "Add release tests for statically linked binaries\n\nFor now, this only covers linux on the two architectures we have testing support for.  However, it serves as a good sanity check and can be expanded in the future.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 29,
        "changed_files": 2,
        "created_at": "2023-03-03T19:57:55Z",
        "closed_at": "2023-03-06T20:27:43Z",
        "merged_at": null,
        "body": "Mark proto2::Arena::GetArena as deprecated.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 207,
        "deletions": 189,
        "changed_files": 18,
        "created_at": "2023-03-03T19:57:54Z",
        "closed_at": "2023-03-06T15:13:24Z",
        "merged_at": null,
        "body": "add hasbit to proto3 fields even when 'optional' is missing\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 81,
        "deletions": 113,
        "changed_files": 9,
        "created_at": "2023-03-03T19:50:25Z",
        "closed_at": "2023-03-07T17:27:07Z",
        "merged_at": null,
        "body": "Remove unnecessary has bits from proto2 Java.\n\nMessage fields in oneofs generate has bits in their parent message, but these are never used.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2023-03-03T18:29:34Z",
        "closed_at": "2023-03-06T15:02:02Z",
        "merged_at": null,
        "body": "Automated rollback of commit bf0d8e238480bdbe5d0136bd3a6186b2569f8f2f.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 148,
        "deletions": 162,
        "changed_files": 13,
        "created_at": "2023-03-03T18:10:13Z",
        "closed_at": "2023-03-06T15:08:52Z",
        "merged_at": null,
        "body": "Migrate syntax reflection to new feature-based system.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2023-03-03T06:01:29Z",
        "closed_at": "2023-03-03T17:54:16Z",
        "merged_at": null,
        "body": "Expand LazySerializerEmitter to cover proto3 cases.\n\nThis should provide some performance wins for proto3, similar to the ones added years ago for proto2.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 12,
        "deletions": 11,
        "changed_files": 7,
        "created_at": "2023-03-03T04:06:47Z",
        "closed_at": "2023-03-07T05:19:41Z",
        "merged_at": null,
        "body": "Deprecate SupportsUnknownEnumValues on Message reflection.  Use FieldDescriptor or EnumDescriptor instead.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 635,
        "deletions": 192,
        "changed_files": 25,
        "created_at": "2023-03-03T03:12:16Z",
        "closed_at": "2023-03-06T15:12:40Z",
        "merged_at": null,
        "body": "Internal Code Change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 420,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-03-03T02:55:25Z",
        "closed_at": "2023-03-06T15:11:53Z",
        "merged_at": null,
        "body": "Add compiler/cpp/field_generators/cord_field.cc\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 51,
        "deletions": 6,
        "changed_files": 5,
        "created_at": "2023-03-03T02:28:27Z",
        "closed_at": "2023-03-06T15:05:38Z",
        "merged_at": null,
        "body": "Release tests\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 41,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2023-03-03T00:34:08Z",
        "closed_at": "2023-03-03T15:31:15Z",
        "merged_at": null,
        "body": "Release tests\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 23,
        "changed_files": 2,
        "created_at": "2023-03-02T23:52:03Z",
        "closed_at": "2023-03-07T02:51:15Z",
        "merged_at": null,
        "body": "Add C# presence methods to proto3 oneof fields.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 470,
        "deletions": 15,
        "changed_files": 10,
        "created_at": "2023-03-02T23:51:26Z",
        "closed_at": "2023-03-06T15:09:36Z",
        "merged_at": null,
        "body": "Create a new, central, OSS-sync-friendly place for our allowlists to live.\n\nThis will create some mysteriously empty lists in open source; that means they only contain Google-private names.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-03-02T21:14:30Z",
        "closed_at": "2023-03-02T23:13:29Z",
        "merged_at": null,
        "body": "Fix false negative in the verifier where it was accepting a non-canonical zero\nfield number.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 41,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2023-03-02T19:40:03Z",
        "closed_at": "2023-03-03T15:31:05Z",
        "merged_at": null,
        "body": "Release tests\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 39,
        "deletions": 12,
        "changed_files": 3,
        "created_at": "2023-03-02T18:39:27Z",
        "closed_at": "2023-03-02T21:40:39Z",
        "merged_at": null,
        "body": "Reduce stack frame size of `TextFormat::Printer::PrintUnknownFields` by offloading `std::string` temporaries into a separate function.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 9,
        "changed_files": 2,
        "created_at": "2023-03-02T17:16:59Z",
        "closed_at": "2023-03-06T17:29:12Z",
        "merged_at": null,
        "body": "We need the name of the published executable to be `protoc`",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-03-02T01:31:17Z",
        "closed_at": "2023-03-02T18:58:27Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1059,
        "deletions": 207,
        "changed_files": 29,
        "created_at": "2023-03-01T22:05:15Z",
        "closed_at": "2023-03-06T15:14:22Z",
        "merged_at": null,
        "body": "Internal changes to extensions.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 22,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2023-03-01T21:53:14Z",
        "closed_at": "2023-03-01T23:38:43Z",
        "merged_at": "2023-03-01T23:38:43Z",
        "body": "PiperOrigin-RevId: 513329841",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 24,
        "changed_files": 3,
        "created_at": "2023-03-01T20:38:44Z",
        "closed_at": "2023-03-01T23:32:56Z",
        "merged_at": null,
        "body": "Migrate syntax reflection to new feature-based system.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 251,
        "deletions": 74,
        "changed_files": 6,
        "created_at": "2023-03-01T18:16:34Z",
        "closed_at": "2023-03-01T21:03:28Z",
        "merged_at": null,
        "body": "Roll-forward of change to add Python support for retention attribute\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2023-03-01T18:04:30Z",
        "closed_at": "2023-03-01T19:29:17Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 665,
        "deletions": 329,
        "changed_files": 7,
        "created_at": "2023-03-01T04:35:23Z",
        "closed_at": "2023-03-07T19:03:24Z",
        "merged_at": null,
        "body": "Expand google.protobuf.Type handling to cover editions.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 17,
        "deletions": 16,
        "changed_files": 3,
        "created_at": "2023-03-01T01:25:17Z",
        "closed_at": "2023-03-01T19:32:47Z",
        "merged_at": null,
        "body": "Automated rollback of commit 7cc46f50de7bdf6fff20e47afa6dc9964f7c6411.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 52,
        "deletions": 7,
        "changed_files": 4,
        "created_at": "2023-03-01T00:50:26Z",
        "closed_at": "2023-03-06T15:07:57Z",
        "merged_at": null,
        "body": "Make protoc --descriptor_set_out respect option retention\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 15,
        "changed_files": 2,
        "created_at": "2023-03-01T00:27:00Z",
        "closed_at": "2023-03-01T18:06:21Z",
        "merged_at": "2023-03-01T18:06:22Z",
        "body": "Unconditionally generate unknown field accessors.\n\nThis moves us closer to unifying proto2 and proto3 into editions.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-03-01T00:22:55Z",
        "closed_at": "2023-03-01T19:02:16Z",
        "merged_at": "2023-03-01T19:02:16Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 70,
        "deletions": 73,
        "changed_files": 1,
        "created_at": "2023-02-28T23:20:23Z",
        "closed_at": "2023-08-25T21:14:08Z",
        "merged_at": null,
        "body": "Add lazy field information for static reflection FieldInfo of message type fields.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2023-02-28T22:05:20Z",
        "closed_at": "2023-03-03T15:27:07Z",
        "merged_at": null,
        "body": "Internal Change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 156,
        "deletions": 18,
        "changed_files": 14,
        "created_at": "2023-02-28T21:57:09Z",
        "closed_at": "2023-03-21T17:37:43Z",
        "merged_at": null,
        "body": "Support C++ protobuf ctype=CORD for bytes field (generated code).\nReflection::SetString() can take CORD as input.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 40,
        "deletions": 11,
        "changed_files": 2,
        "created_at": "2023-02-28T21:15:17Z",
        "closed_at": "2023-02-28T22:51:49Z",
        "merged_at": null,
        "body": "Fix trailing comment attribution when file has no final newline (#12082)\n\nFixes #12081.\n\nThe issue was the call to `MaybeDetachComment`: the conditional assumed that there was a next token, which was on the same line as the previous one, making attribution unclear. However, if there is no next token, we should not detach.\n\nThe actual fix is a one-liner. The rest of this PR is updates to the tests to verify this behavior under a handful of scenarios.\n\nCloses #12082\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/12082 from jhump:jh/fix-trailing-comment-attribution 767e41cb05ba6e176977e86fe33e9aad090f83f6\nFUTURE_COPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/12082 from jhump:jh/fix-trailing-comment-attribution 767e41cb05ba6e176977e86fe33e9aad090f83f6\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 54,
        "deletions": 61,
        "changed_files": 17,
        "created_at": "2023-02-28T20:26:17Z",
        "closed_at": "2023-08-25T21:14:11Z",
        "merged_at": null,
        "body": "Change all `typedef`s to the modern `using`s.\n\nAlso, delete unused aliases.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 49,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-02-28T19:53:35Z",
        "closed_at": "2023-03-01T16:58:31Z",
        "merged_at": null,
        "body": "Fix parsing/serialization of packed proto3 custom options\n\nWe have an obscure bug where packed-by-default repeated custom options defined\nin proto3 files are not correctly treated as packed when dynamic extensions are\nused. This CL introduces a simple fix and adds a test verifying the correct\nbehavior.\n\nThe bug was not a major problem in most cases, since parsers will accept both\nthe packed and unpacked encodings. It is useful to fix this to ensure that\ndescriptors are serialized in a consistent way, though.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 134,
        "deletions": 0,
        "changed_files": 4,
        "created_at": "2023-02-28T19:07:18Z",
        "closed_at": "2023-08-25T21:14:13Z",
        "merged_at": null,
        "body": "Add AbslStringify to proto enums that print the label if available.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 18,
        "changed_files": 4,
        "created_at": "2023-02-28T18:30:33Z",
        "closed_at": "2023-02-28T21:14:18Z",
        "merged_at": "2023-02-28T21:14:18Z",
        "body": "This is a fix for https://github.com/protocolbuffers/protobuf/issues/12056\r\n\r\nPiperOrigin-RevId: 512960332",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 283,
        "changed_files": 2,
        "created_at": "2023-02-28T16:57:59Z",
        "closed_at": "2023-08-25T21:14:15Z",
        "merged_at": null,
        "body": "Dump repository cache\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-02-28T16:39:46Z",
        "closed_at": "2023-02-28T18:21:36Z",
        "merged_at": null,
        "body": "Avoid running release branch staleness tests on forked repos\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 39,
        "deletions": 11,
        "changed_files": 2,
        "created_at": "2023-02-28T16:22:09Z",
        "closed_at": "2023-02-28T22:51:50Z",
        "merged_at": null,
        "body": "Fixes #12081.\r\n\r\nThe issue was the call to `MaybeDetachComment`: the conditional assumed that there was a next token, which was on the same line as the previous one, making attribution unclear. However, if there is no next token, we should not detach.\r\n\r\nThe actual fix is a one-liner. The rest of this PR is updates to the tests to verify this behavior under a handful of scenarios.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-02-28T15:55:25Z",
        "closed_at": "2023-03-01T06:01:20Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-02-28T13:41:47Z",
        "closed_at": "2023-02-28T19:38:31Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 34,
        "deletions": 29,
        "changed_files": 1,
        "created_at": "2023-02-28T08:04:25Z",
        "closed_at": "2023-03-02T23:55:42Z",
        "merged_at": null,
        "body": "Migrate PHP Extension tests to shared CI infrastructure.\n\nThis will reduce most of the flakes we've seen from these tests.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 105,
        "deletions": 130,
        "changed_files": 1,
        "created_at": "2023-02-28T00:52:01Z",
        "closed_at": "2023-03-03T16:58:21Z",
        "merged_at": null,
        "body": "Updated obsolete Python README.md\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 40,
        "deletions": 37,
        "changed_files": 12,
        "created_at": "2023-02-27T23:11:05Z",
        "closed_at": "2023-02-28T22:13:55Z",
        "merged_at": null,
        "body": "Modify release artifacts for protoc to statically link system libraries.\n\nCloses #12063\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-02-27T22:43:36Z",
        "closed_at": "2023-03-01T00:42:10Z",
        "merged_at": null,
        "body": "Internal change.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-02-27T20:13:37Z",
        "closed_at": "2023-08-25T21:14:17Z",
        "merged_at": null,
        "body": "Internal changes to extensions.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-02-27T20:01:27Z",
        "closed_at": "2023-02-27T21:01:35Z",
        "merged_at": null,
        "body": "Make public FieldDescriptor.legacyEnumFieldTreatedAsClosed()\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 18,
        "changed_files": 4,
        "created_at": "2023-02-27T18:52:59Z",
        "closed_at": "2023-02-28T17:44:46Z",
        "merged_at": null,
        "body": "Remove errorprone dependency from kotlin protos.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 132,
        "deletions": 46,
        "changed_files": 7,
        "created_at": "2023-02-27T17:14:45Z",
        "closed_at": "2023-03-09T18:14:19Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-02-27T12:16:25Z",
        "closed_at": "2023-03-01T19:56:10Z",
        "merged_at": null,
        "body": "This partially reverts changes made in #4579.\r\n\r\nAt the time protoc binary changes its filename with every new protobuf version being released.",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-02-25T02:39:59Z",
        "closed_at": "2023-08-25T21:14:19Z",
        "merged_at": null,
        "body": "Breaking Change: Mark syntax accessor deprecated in python.\n\nThis has been replaced with feature-based helpers for querying specific aspects of proto2/proto3 that are relevant (e.g. closed/open enums, field presence, etc).\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 54,
        "deletions": 54,
        "changed_files": 10,
        "created_at": "2023-02-25T00:36:19Z",
        "closed_at": "2023-08-25T21:14:21Z",
        "merged_at": null,
        "body": "Test version propagation in protobuf-ci\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 42,
        "deletions": 15,
        "changed_files": 5,
        "created_at": "2023-02-24T21:20:13Z",
        "closed_at": "2023-02-27T17:09:42Z",
        "merged_at": "2023-02-27T17:09:42Z",
        "body": "- Adds a java_opts.bzl file that creates a set of common java options and creates macros for `protobuf_java_library` and `protobuf_java_export` that automatically use those options\r\n- Adds a java8 test\r\n- Updates docker images for other java tests",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 12,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-02-24T21:14:35Z",
        "closed_at": "2023-03-07T16:00:08Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 30,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-02-24T18:00:01Z",
        "closed_at": "2023-02-27T20:41:50Z",
        "merged_at": null,
        "body": "Update maven and bazel build files to use -target 8 -source 8 and error prone Java8ApiChecker to enforce Java 8 compatibility.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-02-24T06:17:20Z",
        "closed_at": "2023-02-28T13:35:26Z",
        "merged_at": null,
        "body": "Introduce proto filter for inject_field_listener_events.\n\nBy default all protos are included in proto instrumentation when inject_field_listener_events option is set. Adding proto instrumentation callbacks for every proto in the binary adds codesize and runtime performance penalties. This cl introduces 'protos_for_field_listener_events' option where a list of proto files can be provided (seperated by ':') for which field listener events will be injected.\n\nFor example :-\n\nprotos_for_field_listener_events=foo/bar/foo.proto:foo/bar.proto\n\nThe field listener event will only be sent for 'foo/bar/foo.proto' and 'foo/bar.proto'.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-02-24T05:37:15Z",
        "closed_at": "2023-02-24T17:15:36Z",
        "merged_at": null,
        "body": "Expand lifetime of repository cache.\n\nThese are not growing fast at all, but are taking a long time to asymptotically fill out.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-02-24T01:01:52Z",
        "closed_at": "2023-02-24T15:49:08Z",
        "merged_at": "2023-02-24T15:49:08Z",
        "body": "Cherry-pick the fix for #11996 into 22.x to make sure it's included in the 22.1 release.\r\n\r\nPiperOrigin-RevId: 511917449",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 13,
        "changed_files": 1,
        "created_at": "2023-02-24T00:31:51Z",
        "closed_at": "2023-02-28T01:41:27Z",
        "merged_at": null,
        "body": "Raise warnings for MessageFactory class usages\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 35,
        "deletions": 746,
        "changed_files": 21,
        "created_at": "2023-02-23T23:15:41Z",
        "closed_at": "2023-02-24T19:19:36Z",
        "merged_at": null,
        "body": "Migrate our shared github actions to a separate repository.\n\nThis will make PRs from forked repositories significantly less painful, since they'll agree on which version of each action to use.  OTOH, we'll have a separate repo that needs to be maintained, and changes to it will need to be coordinated and versioned carefully.  This will likely need to be done less often though now that our infrastructure is stable.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 18,
        "deletions": 119,
        "changed_files": 2,
        "created_at": "2023-02-23T22:59:09Z",
        "closed_at": "2023-02-24T21:36:48Z",
        "merged_at": null,
        "body": "Use X MACRO for generated_message_reflection.cc lookup, and pass FieldInfo\n\nThis allows swapping the \"name\" for the enum value, which means we can make a cheap indexed table instead.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 140,
        "deletions": 50,
        "changed_files": 16,
        "created_at": "2023-02-23T20:07:41Z",
        "closed_at": "2023-02-24T17:02:55Z",
        "merged_at": "2023-02-24T17:02:55Z",
        "body": "Patch Java lite mutability fix and Java 8 compatibility fix into 19.x",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 143,
        "deletions": 53,
        "changed_files": 16,
        "created_at": "2023-02-23T19:56:58Z",
        "closed_at": "2023-02-24T17:03:10Z",
        "merged_at": "2023-02-24T17:03:10Z",
        "body": "Patch Java lite mutability fix and Java 8 compatibility fix into 21.x",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 142,
        "deletions": 53,
        "changed_files": 15,
        "created_at": "2023-02-23T19:51:26Z",
        "closed_at": "2023-02-24T16:28:21Z",
        "merged_at": "2023-02-24T16:28:21Z",
        "body": "Patch Java lite mutability fix and Java 8 compatibility fix into 22.x",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 84,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-02-23T19:35:08Z",
        "closed_at": "2023-02-25T03:48:50Z",
        "merged_at": null,
        "body": "Implement helper function FieldDescriptor::legacy_enum_field_treated_as_closed to support legacy enum field behavior.\n\nProto2 fields with types corresponding to proto3 enums are treated as closed today, despite the EnumDescriptor reporting that they're open.  This will allow syntax users to depend on this non-conformant behavior which will be getting it's own feature in Edition zero.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 159,
        "deletions": 15,
        "changed_files": 5,
        "created_at": "2023-02-23T19:29:00Z",
        "closed_at": "2023-02-27T16:00:48Z",
        "merged_at": null,
        "body": "Replace FileDescriptor.supportsUnknownEnumValues() with FieldDescriptor.legacyEnumFieldTreatedAsClosed().\n\nThis documents Java's non-conformant behavior where closedness is determined by the field rather than the enum definition.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-02-23T17:33:22Z",
        "closed_at": "2023-02-24T00:31:27Z",
        "merged_at": null,
        "body": "Ensure VarintParseSlowArm{32,64} are exported with PROTOBUF_EXPORT\n\nThis should fix issue #11996.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 58,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2023-02-23T17:11:03Z",
        "closed_at": "2023-02-23T23:06:25Z",
        "merged_at": "2023-02-23T23:06:25Z",
        "body": "This is a cherrypick of https://github.com/protocolbuffers/protobuf/commit/d3ceff3def7b8ed88fe118cfb4766462bfeb811f and addresses https://github.com/protocolbuffers/protobuf/issues/12017.\r\n\r\nPiperOrigin-RevId: 511587640",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 13,
        "changed_files": 3,
        "created_at": "2023-02-23T16:02:41Z",
        "closed_at": "2023-02-24T16:10:37Z",
        "merged_at": null,
        "body": "[ObjC] Small cleanups to package level headers\n\n- Reduce what headers the runtime import needs.\n- Remove stale function prototype.\n- Move one function to be full scoped to a single file.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 8,
        "changed_files": 2,
        "created_at": "2023-02-23T15:03:47Z",
        "closed_at": "2023-02-23T19:08:52Z",
        "merged_at": null,
        "body": "Automated rollback of commit 47b5f81c7f944b23a59b6ee9b0f0d2e9a517e10b.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 273,
        "deletions": 1,
        "changed_files": 10,
        "created_at": "2023-02-23T12:54:24Z",
        "closed_at": "2023-03-07T14:52:20Z",
        "merged_at": null,
        "body": "Add support for proto dependencies to rust_proto_library\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 14,
        "changed_files": 4,
        "created_at": "2023-02-23T12:27:59Z",
        "closed_at": "2023-03-06T19:58:23Z",
        "merged_at": null,
        "body": "At the time the way of marking some stuff `deprecated` is overcomplicated taken into account that protobuf mandates C++11 to be built.\r\n\r\nParticularly, PROTOBUF_DEPRECATED_ENUM references gcc-6 release notes and the compiler is almost 4.5 years old as of today.\r\nI believe it should be possible to simplify the definitions.",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2023-02-23T04:01:14Z",
        "closed_at": "2023-08-25T21:14:24Z",
        "merged_at": null,
        "body": "Fix lint warnings for protobuf GeneratedMessage.java\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 118,
        "deletions": 46,
        "changed_files": 12,
        "created_at": "2023-02-23T01:25:42Z",
        "closed_at": "2023-02-23T17:30:56Z",
        "merged_at": null,
        "body": "Add casts to make protobuf compatible with Java 1.8 runtime.\nFix for: https://github.com/protocolbuffers/protobuf/issues/11393\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 127,
        "deletions": 75,
        "changed_files": 1,
        "created_at": "2023-02-22T22:46:57Z",
        "closed_at": "2023-02-23T21:31:45Z",
        "merged_at": null,
        "body": "[ObjC] Ensure objects aren't leaked on extension parsing failures.\n\nFor PODs, parse the data before making the NSNumber used for extension\nfields.\n\nFor messages/groups, create the message first, add it to the object graph,\nand balance the retain count before doing the parsing. This ensure if an\nerror is hit (and a throw happens), the object(s) won't be leaked.\n\nParsing will always mutates the graph, so yes this includes more mutations\nin failure cases, but other fields could always be modified before the\nbad data is encountered. But even then, that edge case *only* apples to api\nusers that are explicitly *merge* (-mergeFrom...), the majority of the calls\nare to +parseFromData:error:, so the entire graph is released on failure.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-02-22T19:32:01Z",
        "closed_at": "2023-02-22T21:51:03Z",
        "merged_at": null,
        "body": "Add OSGi headers to pom files.\n\nThis addresses https://github.com/protocolbuffers/protobuf/issues/12017.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 24,
        "deletions": 7,
        "changed_files": 3,
        "created_at": "2023-02-22T17:08:46Z",
        "closed_at": "2023-02-22T22:31:08Z",
        "merged_at": null,
        "body": "Fix mutability bug in Java proto lite: sub-messages inside of oneofs were not\nbeing set as immutable. This would allow code to get a builder for a\nsub-message and modify the original (supposedly immutable) copy.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2023-02-22T15:46:58Z",
        "closed_at": "2023-02-23T16:26:44Z",
        "merged_at": null,
        "body": "Migrate away from examining the syntax of a proto file via reflection.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-02-22T00:29:49Z",
        "closed_at": "2023-02-23T17:23:23Z",
        "merged_at": null,
        "body": "Migrate away from examining the syntax of a proto file via reflection.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2023-02-21T22:01:04Z",
        "closed_at": "2023-02-27T19:34:38Z",
        "merged_at": null,
        "body": "Internal change to extensions.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 23,
        "deletions": 7,
        "changed_files": 2,
        "created_at": "2023-02-21T21:57:13Z",
        "closed_at": "2023-02-27T16:10:27Z",
        "merged_at": null,
        "body": "Custom `protoc` plugins may use this method to look up the framework name for a given file if they want to generate code not related to `import`s.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-02-21T21:12:42Z",
        "closed_at": "2023-02-21T23:08:51Z",
        "merged_at": null,
        "body": "Document that hasField is only semantically meaningful when hasPresence == True.\n\nNote that this is already documented in hasPresence as well.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-02-21T19:05:55Z",
        "closed_at": "2023-02-23T17:40:47Z",
        "merged_at": "2023-02-23T17:40:47Z",
        "body": "Fix exit code on git commit which was preventing force-push and tagging from running even though these should work without a new commit. An empty commit is probably clearer anyways to show that sync has happened.\r\n\r\nPiperOrigin-RevId: 511248097",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-02-21T18:39:07Z",
        "closed_at": "2023-02-24T00:42:24Z",
        "merged_at": null,
        "body": "This patch fixes two unexported symbols in `libprotoc` on aarch64 / arm64, which led to an \"undefined symbols\" build failure as reported in #11996.\r\n\r\nResolves #11996.\r\n\r\nCc: @acozzette\r\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 204,
        "deletions": 178,
        "changed_files": 2,
        "created_at": "2023-02-21T18:34:03Z",
        "closed_at": "2023-08-25T21:14:26Z",
        "merged_at": null,
        "body": "Optimize Varint Parsing\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 74,
        "deletions": 7,
        "changed_files": 3,
        "created_at": "2023-02-21T17:40:10Z",
        "closed_at": "2023-02-22T20:48:56Z",
        "merged_at": null,
        "body": "Add regression test for invalid inline string code generation.\nA bug was found during code review that didn't trigger any test failure\nThe fast TDP entry did not have the index in the aux_idx field.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 93,
        "deletions": 12,
        "changed_files": 5,
        "created_at": "2023-02-21T16:31:48Z",
        "closed_at": "2023-02-22T13:56:03Z",
        "merged_at": null,
        "body": "[ObjC] Enforce the max message size when serializing to binary form.\n\nThe validation is done at the highest point so if a sub message is what\ngoes over the limit it is caught at the outer message, thus reducing the\nimpact on the serialization code.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 453,
        "deletions": 15,
        "changed_files": 13,
        "created_at": "2023-02-21T15:49:48Z",
        "closed_at": "2023-03-06T22:11:38Z",
        "merged_at": null,
        "body": "Implement a minimal, internal, experimental rust_proto_library rule.\n\nThe internal design is consistent with other <lang>_proto_library rules. rust_proto_library attaches rust_proto_library_aspect on its `deps` attribute. The aspect traverses the dependency, and when it visits proto_library (detected by ProtoInfo provider) it registers 2 actions:\n\n1) to run protoc with Rust backend to emit gencode\n2) to compile the gencode using Rustc\n\nAction (2) gets the Rust proto runtime as an input as well.\n\nComing in a followup is support and test coverage for proto_library.deps.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-02-20T19:06:32Z",
        "closed_at": "2023-02-22T05:15:55Z",
        "merged_at": null,
        "body": "Internal change.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2023-02-19T01:25:21Z",
        "closed_at": "2023-02-22T00:53:34Z",
        "merged_at": null,
        "body": "Correctly handle lazy message sets in InternalSerializeMessageSetItem.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 289,
        "deletions": 234,
        "changed_files": 5,
        "created_at": "2023-02-18T00:35:39Z",
        "closed_at": "2023-08-25T21:14:28Z",
        "merged_at": null,
        "body": "Rename string parse functions and utilize TcParseFunction X macros in reflection\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 153,
        "deletions": 53,
        "changed_files": 19,
        "created_at": "2023-02-17T21:59:16Z",
        "closed_at": "2023-03-01T18:44:09Z",
        "merged_at": null,
        "body": "This is a fix for https://github.com/protocolbuffers/protobuf/issues/11393.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-02-17T21:53:27Z",
        "closed_at": "2023-02-28T17:47:21Z",
        "merged_at": null,
        "body": "Make releases compatible with JRE 8.\n\nAdd a build flag to fix https://github.com/protocolbuffers/protobuf/issues/11393.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-02-17T21:33:15Z",
        "closed_at": "2023-02-21T19:01:08Z",
        "merged_at": "2023-02-21T19:01:08Z",
        "body": "In 21.x, depending on \"//python:well_known_types_py_pb2\" provided a transitive dependency to `compiler/plugin.proto`. That dependency was incorrectly removed for 22.x.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-02-17T21:27:13Z",
        "closed_at": "2023-02-21T19:00:55Z",
        "merged_at": "2023-02-21T19:00:55Z",
        "body": "In 22.x, we accidentally omitted stripping the \"src\" import prefix for plugin.proto. We stripped the prefix in 21.x and for all other well known types in 22.x.\r\n\r\nThis reverts that unintentional change.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 25,
        "deletions": 24,
        "changed_files": 1,
        "created_at": "2023-02-17T21:07:42Z",
        "closed_at": "2023-02-21T19:42:18Z",
        "merged_at": null,
        "body": "[ObjC] Enforcement of the 2GB limit when parsing messages.\n\nAdd a helper to put the logic in one place in the file.\n\nEnsure all places that read messages also do the 2GB check for message size.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-02-17T03:35:16Z",
        "closed_at": "2023-02-22T21:56:42Z",
        "merged_at": null,
        "body": "Allow AbstractProtoList to be created in an immutable state rather than using static blocks to call makeImmutable.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 241,
        "deletions": 84,
        "changed_files": 2,
        "created_at": "2023-02-17T02:23:21Z",
        "closed_at": "2023-02-23T20:44:40Z",
        "merged_at": null,
        "body": "Add TcParseFunction enumeration\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-02-17T00:57:44Z",
        "closed_at": "2023-02-17T17:01:24Z",
        "merged_at": null,
        "body": "Remove recursive checkout for purely Bazel tests\n\nThis will prevent unnecessary network access.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-02-17T00:28:06Z",
        "closed_at": "2023-02-17T17:59:10Z",
        "merged_at": null,
        "body": "Use correct wireformat type for repeated group fields.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 34,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-02-16T21:07:44Z",
        "closed_at": "2023-02-16T22:19:49Z",
        "merged_at": null,
        "body": "Open-source some of our string_view tests.\n\nThis support was added in 22.x, but we don't have any tests locking it down.\n\nCloses https://github.com/protocolbuffers/protobuf/issues/8096\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 71,
        "deletions": 4,
        "changed_files": 5,
        "created_at": "2023-02-16T20:58:43Z",
        "closed_at": "2023-02-16T22:33:39Z",
        "merged_at": "2023-02-16T22:33:39Z",
        "body": "These will reduce flakiness on our release branch",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 17,
        "deletions": 8,
        "changed_files": 2,
        "created_at": "2023-02-16T19:51:20Z",
        "closed_at": "2023-02-17T14:36:26Z",
        "merged_at": null,
        "body": "[ObjC] Ensure objects aren't leaked on parsing failures.\n\nAdd the objects to the object graph and balance the retain count before\ndoing the parsing. This ensure if an error is hit (and a throw happens),\nthe object(s) won't be leaked.\n\nParsing will always mutate the graph, so yes this includes more mutations\nin failure cases, but other fields could always be modified before the\nbad data is encountered. But even then, that edge case *only* apples to api\nusers that are explicitly *merge* (-mergeFrom...), the majority of the calls\nare to +parseFromData:error:, so the entire graph is released on failure.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 63,
        "deletions": 63,
        "changed_files": 35,
        "created_at": "2023-02-16T19:26:59Z",
        "closed_at": "2023-02-16T21:13:10Z",
        "merged_at": "2023-02-16T21:13:10Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 39,
        "deletions": 39,
        "changed_files": 23,
        "created_at": "2023-02-16T18:04:57Z",
        "closed_at": "2023-02-16T19:17:16Z",
        "merged_at": "2023-02-16T19:17:16Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-02-16T17:30:20Z",
        "closed_at": "2023-02-16T19:27:02Z",
        "merged_at": null,
        "body": "Discard remaining tag but check against non canonical encoding.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 34,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-02-16T16:34:52Z",
        "closed_at": "2023-02-16T19:43:50Z",
        "merged_at": null,
        "body": "Cache our ccache download to avoid network flakes from choco.\n\nChocolatey doesn't support any caching, so we're moving back to downloading the exe directly.  This issue is responsible for a 5-10% flake rate in our windows cmake builds\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 24,
        "deletions": 32,
        "changed_files": 2,
        "created_at": "2023-02-16T16:07:44Z",
        "closed_at": "2023-02-17T14:23:43Z",
        "merged_at": null,
        "body": "[ObjC] Inline the logic of parseDelimited...\n\nThe last attempted (rolled back) resulted in changes in visible behavior:\n- It consumed a recursion depth on the input stream (wrong)\n- It resulted in different error codes for some malformed/truncated data.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-02-16T09:43:59Z",
        "closed_at": "2023-02-17T09:22:49Z",
        "merged_at": null,
        "body": "protobuf: fix a data race in AbstractProtobufList\n\nUnconditional update of isMutable causes data races for\nLazyStringArrayList::EMPTY_LIST that is used as the default value\nfor protobuf fields.\n\nNot writing to it unconditionally may also improve performance\nby reducing contention for the presumably widely shared EMPTY_LIST object.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 20,
        "changed_files": 2,
        "created_at": "2023-02-16T06:37:56Z",
        "closed_at": "2023-02-28T22:08:42Z",
        "merged_at": null,
        "body": "Internal change only\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 15,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-02-16T04:59:29Z",
        "closed_at": "2023-08-25T21:14:30Z",
        "merged_at": null,
        "body": "Enable ccache for cocoapod tests\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 33,
        "deletions": 14,
        "changed_files": 3,
        "created_at": "2023-02-16T00:16:12Z",
        "closed_at": "2023-02-16T15:21:05Z",
        "merged_at": null,
        "body": "Automated rollback of commit 0c013ec412468e21ea68b234935e7490eb28f8ce.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-02-15T21:21:04Z",
        "closed_at": "2023-02-21T19:47:41Z",
        "merged_at": null,
        "body": "[ObjC] mark mergeFromData:extensionRegistry: as deprecated.\n\nSince it really isn't safe in Swift, point folks at the new api that uses errors.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-02-15T21:13:50Z",
        "closed_at": "2023-02-24T20:47:44Z",
        "merged_at": null,
        "body": "Change the C++ parsers to be consistent on how they handle unknown enum values.\nThey now consistently parse the varint and then push the int32 representation into the unknown field set. Previously the behavior was sometimes pushing the original varint, sometimes pushing a uint32_t truncated value, and sometimes an int32_t truncated value.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 26,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-02-15T18:25:38Z",
        "closed_at": "2023-02-15T23:13:57Z",
        "merged_at": null,
        "body": "Implement a workaround for macOS/Bazel flakes.\n\nBazel has a 2 minute timeout for their internal `xcrun` call, which can be exceeded on our github runners about 5% of the time.  This leads to flakes and opaque errors, but is a one-time cost.  Subsequent xcruns finish in seconds, so we can just do an initial call w/o a timeout before running Bazel.\n\nWith this change our total flake rate drops from ~30% to nearly 0% for our full suite of tests\n\nSee https://github.com/bazelbuild/bazel/issues/17437 for background.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-02-15T17:15:05Z",
        "closed_at": "2023-02-21T18:58:36Z",
        "merged_at": null,
        "body": "Internal change.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-02-15T16:46:29Z",
        "closed_at": "2023-02-16T17:04:30Z",
        "merged_at": null,
        "body": "Use generated Conformance proto for Bazel targets.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 14,
        "deletions": 33,
        "changed_files": 3,
        "created_at": "2023-02-15T15:52:26Z",
        "closed_at": "2023-02-15T19:46:29Z",
        "merged_at": null,
        "body": "[ObjC] Avoid data copy within parseDelimitedFromCodedInputStream:...\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-02-15T14:51:11Z",
        "closed_at": "2023-02-15T21:25:57Z",
        "merged_at": null,
        "body": "[ObjC] Update comments about common failure causes.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 74,
        "deletions": 5,
        "changed_files": 4,
        "created_at": "2023-02-15T14:29:35Z",
        "closed_at": "2023-02-17T12:36:04Z",
        "merged_at": null,
        "body": "internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 96,
        "deletions": 5,
        "changed_files": 6,
        "created_at": "2023-02-15T14:16:52Z",
        "closed_at": "2023-02-27T17:12:47Z",
        "merged_at": null,
        "body": "Add the Rust codegen to protoc\n\nAfter this change, the Rust codegen can be enabled via the protoc flag '--rust_out'. Due to its experimental nature we require a magic value to be provided '--rust_out=experimental-codegen=enabled:<out>'.\n\nMake the 'RustGenerator' create an empty *.pb.rs file.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 40,
        "deletions": 12,
        "changed_files": 2,
        "created_at": "2023-02-15T13:23:23Z",
        "closed_at": "2023-02-17T20:11:38Z",
        "merged_at": null,
        "body": "[ObjC] Add -[GPBMessage mergeFromData:extensionRegistry:error:]\n\nThis adds a merge method that doesn't throw, making it generally more usable and allowing usage directly from Swift.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 54,
        "deletions": 18,
        "changed_files": 4,
        "created_at": "2023-02-15T12:56:51Z",
        "closed_at": "2023-02-15T18:04:54Z",
        "merged_at": null,
        "body": "[ObjC] Enforce bytes and string field size limits.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 251,
        "deletions": 74,
        "changed_files": 6,
        "created_at": "2023-02-15T01:33:54Z",
        "closed_at": "2023-02-24T00:18:52Z",
        "merged_at": null,
        "body": "Add Python support for retention attribute\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 14,
        "deletions": 290,
        "changed_files": 8,
        "created_at": "2023-02-14T23:26:20Z",
        "closed_at": "2023-08-25T21:14:32Z",
        "merged_at": null,
        "body": "Test mac tweaks to fix flaky failures and lag\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 49,
        "deletions": 14,
        "changed_files": 3,
        "created_at": "2023-02-14T22:03:52Z",
        "closed_at": "2023-02-15T05:12:13Z",
        "merged_at": "2023-02-15T05:12:13Z",
        "body": "\u2026cross files with different syntaxes.\r\n\r\nPiperOrigin-RevId: 509581394",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 397,
        "deletions": 196,
        "changed_files": 15,
        "created_at": "2023-02-14T19:44:32Z",
        "closed_at": "2023-02-14T21:20:56Z",
        "merged_at": "2023-02-14T21:20:56Z",
        "body": "This should be merged not squashed",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 48,
        "deletions": 50,
        "changed_files": 6,
        "created_at": "2023-02-14T18:25:16Z",
        "closed_at": "2023-02-15T23:19:24Z",
        "merged_at": null,
        "body": "Remove the exception for multiple extension ranges for TDP.\nIt is unnecessary since the regular extension parser can handle unknown fields\ndirectly.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-02-14T10:54:45Z",
        "closed_at": "2023-02-14T16:32:38Z",
        "merged_at": null,
        "body": "Automated rollback of commit 3493da38781eecfd08676a7a29d7294ad480179a.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 346,
        "deletions": 0,
        "changed_files": 4,
        "created_at": "2023-02-14T01:36:31Z",
        "closed_at": "2023-02-17T09:26:23Z",
        "merged_at": null,
        "body": "blabla\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 20,
        "changed_files": 2,
        "created_at": "2023-02-13T22:39:56Z",
        "closed_at": "2023-04-10T18:51:41Z",
        "merged_at": null,
        "body": "This won't actually be submitted with these changes\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-02-13T19:49:25Z",
        "closed_at": "2023-02-14T00:07:43Z",
        "merged_at": null,
        "body": "Work around errornous warning in gcc <= 12.2\n\ngcc 12.[12] emits a -Wrestrict warning if compiled\nwith -O2/-O3 and -std=c++20 enabled when assigning\na string with a single character to a std::string.\n\nhttps://gcc.gnu.org/bugzilla/show_bug.cgi?id=105329\n\nThis is benign; disable this broken warning for up to 12.4.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 26,
        "changed_files": 1,
        "created_at": "2023-02-13T16:33:29Z",
        "closed_at": "2023-02-13T18:14:00Z",
        "merged_at": null,
        "body": "[ObjC] make the bazel build always use generated WKTs.\n\nThis is done in basically the same way the C++ does this.\n\nIt was tested locally be putting `#error` directives in the pre-generated\nsources and running the bazel build (it worked).\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 183,
        "deletions": 49,
        "changed_files": 6,
        "created_at": "2023-02-13T15:41:42Z",
        "closed_at": "2023-02-17T17:54:09Z",
        "merged_at": null,
        "body": "Emplace StringBlock entries on the arena block as long as there is space available.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2023-02-13T14:47:37Z",
        "closed_at": "2023-02-13T18:09:08Z",
        "merged_at": null,
        "body": "[ObjC] CI dbg & opt macOS bazel builds.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 26,
        "changed_files": 1,
        "created_at": "2023-02-13T14:35:23Z",
        "closed_at": "2023-02-13T18:31:32Z",
        "merged_at": null,
        "body": "[ObjC] full_mac_builds.sh has been update\n\n- The support for CI has been removed (no longer needed)\n- Update some of the testing targets\n- Removed some lesser used options (to simplify)\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 5,
        "changed_files": 3,
        "created_at": "2023-02-12T19:33:40Z",
        "closed_at": "2023-02-13T05:51:02Z",
        "merged_at": null,
        "body": "Stop using 'push' event to determine privileged post-submit runs.\n\nBoth 'schedule' and 'workflow_dispatch' are valid alternatives today.  What we really want here is anything *except* pull request events.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-02-12T19:29:23Z",
        "closed_at": "2023-02-13T03:37:31Z",
        "merged_at": null,
        "body": "Move GHA documentation into workflows directory.\n\nPlacing it in the .github directory unexpectedly replaced our top-level documentation on the main page.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2023-02-12T13:04:40Z",
        "closed_at": "2023-02-13T19:43:04Z",
        "merged_at": null,
        "body": "Disable std::string specialization\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-02-11T07:34:47Z",
        "closed_at": "2023-02-12T01:23:17Z",
        "merged_at": null,
        "body": "Tweak GHA names to make failures clearer in dashboard\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 26,
        "deletions": 17,
        "changed_files": 2,
        "created_at": "2023-02-10T20:23:57Z",
        "closed_at": "2023-02-10T23:01:53Z",
        "merged_at": null,
        "body": "[ObjC] Move the Xcode CI off full_mac_build.sh\n\nUse the bash GHA to ensure WKTs are current, and then just directly invoke\nXcode. This means the script full_mac_build.sh can go back to just being\na simpler helper for folks doing local builds and we can remove all the extra\nsupport that was needed for CI.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 30,
        "deletions": 30,
        "changed_files": 23,
        "created_at": "2023-02-10T20:02:06Z",
        "closed_at": "2023-02-10T21:20:45Z",
        "merged_at": "2023-02-10T21:20:44Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-02-10T19:56:15Z",
        "closed_at": "2023-02-10T21:52:55Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 19,
        "deletions": 53,
        "changed_files": 9,
        "created_at": "2023-02-10T19:06:19Z",
        "closed_at": "2023-08-25T21:14:34Z",
        "merged_at": null,
        "body": "Deprecate Reflection::SupportsUnknownEnumValues().\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 131,
        "deletions": 5,
        "changed_files": 4,
        "created_at": "2023-02-10T19:00:11Z",
        "closed_at": "2023-02-10T22:34:41Z",
        "merged_at": null,
        "body": "Have the CocoaPods CI update the WKTs before testing.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 37,
        "changed_files": 1,
        "created_at": "2023-02-10T18:27:14Z",
        "closed_at": "2023-02-13T16:15:50Z",
        "merged_at": "2023-02-13T16:15:50Z",
        "body": "Most PRs to the release branch are cherrypicks or merges run by BTR. We shouldn't need a language-specific approver and the notifications are too noisy.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-02-10T18:23:07Z",
        "closed_at": "2023-02-10T22:12:43Z",
        "merged_at": null,
        "body": "[ObjC] Set up a stateless test for the WKTs.\n\nAlso wire it into the regeneration script.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-02-10T16:21:32Z",
        "closed_at": "2023-02-10T18:53:32Z",
        "merged_at": null,
        "body": "Fix remove label action\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 318,
        "deletions": 315,
        "changed_files": 5,
        "created_at": "2023-02-10T15:52:46Z",
        "closed_at": "2023-02-13T21:32:16Z",
        "merged_at": null,
        "body": "Cleanup FastTV32S1() and FastTV64S1() functions.\n\n- replaces the existing FastV32S1() and FastV64S1() implementations with the FastTV32S1() and FastTV64S1() functions, removing the latter names, and moves the internal template helpers from the header into the .cc file.\n\n- defines PROTOBUF_TC_PARAM_NO_DATA_DECL and PROTOBUF_TC_PARAM_NO_DATA_PASS macros to declare functions not using `data`, and to use in call sites calling these functions.\nEND_PUBLIC\n\n- adds MUSTTAIL to ToParseLoop() and Error(). The current code was inconsistent on this, and if it doesn't help, it doesn't hurt either and minimizes any possible polition from the call sites.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 20,
        "deletions": 315,
        "changed_files": 7,
        "created_at": "2023-02-10T04:56:28Z",
        "closed_at": "2023-08-25T21:14:36Z",
        "merged_at": null,
        "body": "Test mac tweaks to fix flaky failures and lag\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 213,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-02-10T04:41:56Z",
        "closed_at": "2023-02-10T17:31:39Z",
        "merged_at": null,
        "body": "Add documentation for our new GHA infrastructure\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 213,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-02-10T01:22:20Z",
        "closed_at": "2023-02-10T05:22:33Z",
        "merged_at": null,
        "body": "Add documentation for our new GHA infrastructure\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 543,
        "deletions": 588,
        "changed_files": 44,
        "created_at": "2023-02-09T23:14:53Z",
        "closed_at": "2023-08-25T21:14:38Z",
        "merged_at": null,
        "body": "Change all `typedef`s to the modern `using`s.\n\nAlso, delete unused aliases.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 234,
        "deletions": 281,
        "changed_files": 1,
        "created_at": "2023-02-09T23:13:38Z",
        "closed_at": "2023-08-25T21:14:40Z",
        "merged_at": null,
        "body": "Refactor map_field.cc to use Emit().\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 12004,
        "deletions": 11054,
        "changed_files": 480,
        "created_at": "2023-02-09T22:08:04Z",
        "closed_at": "2023-02-10T16:54:33Z",
        "merged_at": "2023-02-10T16:54:33Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 108,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2023-02-09T22:00:35Z",
        "closed_at": "2023-02-24T20:01:43Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-02-09T21:36:37Z",
        "closed_at": "2023-02-10T16:49:49Z",
        "merged_at": null,
        "body": "Always enable eagerly verified lazy fields.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 24,
        "deletions": 11,
        "changed_files": 3,
        "created_at": "2023-02-09T20:48:20Z",
        "closed_at": "2023-02-10T22:38:04Z",
        "merged_at": null,
        "body": "[ObjC] Add a linux bazel build for objc.\n\nThere are some tests/validations that don't have to build objc code, so they\ncan run on a linux box and thus avoid the overhead of needing a Mac.\n\nAlso revert the use of `target_compatible_with` as it isn't enough, toolchain\nresolution still happens and that along fail things. Only use tags as a\nresult.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 96,
        "deletions": 30,
        "changed_files": 3,
        "created_at": "2023-02-09T20:26:16Z",
        "closed_at": "2023-02-13T21:38:57Z",
        "merged_at": null,
        "body": "Add tracing for limit push/pop in sanitizer mode to make sure we never read an\nuninitialized one, and we never fail to pop one.\nFix a couple of cases where invalid input lead to undefined behavior.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-02-09T20:19:51Z",
        "closed_at": "2023-02-10T18:29:58Z",
        "merged_at": null,
        "body": "Skip bazel build in objectivec/generate_well_known_types.sh.\n\nEvery where the script is invoked from protoc is already built, and this more\nfollows the model used by similar scripts for other languages.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 37,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-02-09T19:43:59Z",
        "closed_at": "2023-02-09T22:13:11Z",
        "merged_at": null,
        "body": "[ObjC] Test pddm expansion\n\nTesting both the support and the sources expanded.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 51,
        "deletions": 94,
        "changed_files": 3,
        "created_at": "2023-02-09T19:06:26Z",
        "closed_at": "2023-02-10T17:10:15Z",
        "merged_at": null,
        "body": "Remove data_offset + hasbit_idx template vars\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-02-09T18:43:58Z",
        "closed_at": "2023-02-09T20:06:41Z",
        "merged_at": null,
        "body": "Mark some targets with target_compatible_with.\n\nobjc_library really will only build for Apple platforms, so tag it as such.\n\nThe objc conformance test really will only build/run on macOS, so tag it as\nsuch.\n\nWith these two changes, it should be safer for recursive builds that include\nthis directory no matter what the host platform is.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3618,
        "deletions": 3632,
        "changed_files": 20,
        "created_at": "2023-02-09T18:32:34Z",
        "closed_at": "2023-08-25T21:14:42Z",
        "merged_at": null,
        "body": "Delete PROTOBUF_NAMESPACE_* macros.\n\nThese are no longer needed thanks to how our OSS sync works.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 31,
        "deletions": 69,
        "changed_files": 6,
        "created_at": "2023-02-09T18:05:04Z",
        "closed_at": "2023-02-09T19:30:07Z",
        "merged_at": null,
        "body": "[ObjC] Move the version check out into a sh_test.\n\nSince the sources can't reference each other, this is what helps keep them in\nsync. Move it out to be a stand alone test in bazel instead of having it wired\ninto the Xcode projects.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-02-09T17:04:04Z",
        "closed_at": "2023-02-10T04:22:12Z",
        "merged_at": null,
        "body": "This fixes a v22 regression for Ruby.\r\n\r\nWindows builds of the Ruby package are broken in 3.22.0.rc.2. The reason is, `ruby-upb.h` no longer provides the full path when `#include`ing `utf8_range.h`. See https://github.com/protocolbuffers/protobuf/blob/v22.0-rc2/ruby/ext/google/protobuf_c/ruby-upb.h#L10479 (22.0-rc-2), cf. https://github.com/protocolbuffers/protobuf/blob/v21.12/ruby/ext/google/protobuf_c/ruby-upb.h#L5365 (21.12). The `extconf.rb` build configuration tries to compensate by adding `third_party/utf8_range` to the include path, but does not do so on Windows (i.e. `mingw`) platforms. See https://github.com/protocolbuffers/protobuf/blob/v22.0-rc2/ruby/ext/google/protobuf_c/extconf.rb#L9-L10 (22.0-rc-2), cf. https://github.com/protocolbuffers/protobuf/blob/v21.12/ruby/ext/google/protobuf_c/extconf.rb#L9-L10 (21.12).\r\n\r\nWe could have fixed this by adding another clause to the if statement for the case `RUBY_PLATFORM =~ /mingw/` and adding the appropriate `-I` flag to `CFLAGS`. However, that `CFLAGS` hack is present in the first place due to a related problem: the usage of `$INCFLAGS` is incorrect.\r\n\r\nThe `$INCFLAGS` constant in Ruby's `mkmf` is a string in a similar format to `CFLAGS`. It's simply appended to compiler invocations. So when you append new flags to it, you have to (1) provide the flag itself, and (2) precede it with a space to delimit it from the previous entry. In 22.0-rc-2 (and indeed in all earlier versions) the usage is incorrect: it's appending a path to the string without the `-I` and without a space. See https://github.com/protocolbuffers/protobuf/blob/v22.0-rc2/ruby/ext/google/protobuf_c/extconf.rb#L22. Hence, not only does the intended include path not get appended correctly, it also clobbers the previous path in the string. Luckily, the previous path is only `-I$(srcdir)` which happens not to matter for our library. But it does mean that the apparent intent of that line, adding `$(srcdir)/third_party/utf8_range` to the include path, isn't working; hence the code that adds it to `CFLAGS` instead.\r\n\r\n(Note that the previous line, adding the path to `$VPATH`, _is_ correct as is, because `$VPATH` is an array.)\r\n\r\nSo what this PR actually does is fix the `$INCFLAGS` usage so `$(srcdir)/third_party/utf8_range` gets added properly to compiler include paths, for all platforms including Windows. Since that should now be working as intended, we also remove the extra `-I` from CFLAGS. Builds for all platforms should now be able to handle the change to `ruby-upb.h`. This has been tested by running the prototype Ruby build Kokoro job against a patched 22.0-rc-2.\r\n\r\nThis also needs to be backported to the 22.x branch.\r\n\r\n/attn @deannagarcia ",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-02-09T12:20:51Z",
        "closed_at": "2023-02-09T17:56:45Z",
        "merged_at": null,
        "body": "C# test changes to account for internal/external differences.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 84,
        "deletions": 32,
        "changed_files": 3,
        "created_at": "2023-02-09T12:05:03Z",
        "closed_at": "2023-02-14T16:57:32Z",
        "merged_at": null,
        "body": "This is already generated code, but wasn't included in our generation script. This change makes sure it will be up-to-date, and uses the now-conventional .pb.cs file extension.\r\n\r\nThis does *not* affect the conformance tests run from Bazel, as they generate the file separately and build the conformance tests using only Program.cs and the freshly-generated code. However, the csharp/src/Google.Protobuf.Conformance/BUILD.bazel still needs to be kept up-to-date with the filename change.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 290,
        "changed_files": 8,
        "created_at": "2023-02-09T07:38:18Z",
        "closed_at": "2023-02-10T05:22:18Z",
        "merged_at": null,
        "body": "Test mac tweaks to fix flaky failures and lag\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 90,
        "deletions": 157,
        "changed_files": 4,
        "created_at": "2023-02-09T06:24:27Z",
        "closed_at": "2023-08-25T21:14:44Z",
        "merged_at": null,
        "body": "Switch our slowest tests (Windows CMake) over to large runners.\n\nThese take 15-20 minutes each on a no-op PR, compared to 5-10 minutes for every other test.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 90,
        "deletions": 156,
        "changed_files": 4,
        "created_at": "2023-02-09T06:19:19Z",
        "closed_at": "2023-02-11T02:25:31Z",
        "merged_at": null,
        "body": "Switch to Ninja generator for windows cmake builds.\n\nThese will still use MSVC as the compiler, but will no longer generate Visual Studio projects for the builds.  Visual Studio is particularly bad at parallelizing builds, and is hostile to ccache.\n\nThis change also tweaks the ccache setup to prevent unbounded the growth observed in our github caches.  Windows builds have had debug symbols stripped to reduce ccache size by a factor of 2x, and ccache maximum have been tweaked so that we persist fewer older builds.\n\nBefore this change, each CMake build took 12 minutes on every run (plus some constant overhead from staleness/gcloud), even with caching or on large multi-core runners.  No amount of caching or parallelization made any noticeable difference above noise.  With this change, we see the following improvements:\n- 12 minutes to build from scratch on normal runners (unchanged)\n- 4 minutes on 32-core runners from scratch\n- 1 minute with optimal caches available on normal runners.\n- 30 seconds on 32-core runners with optimal caches\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 90,
        "deletions": 157,
        "changed_files": 4,
        "created_at": "2023-02-09T05:52:39Z",
        "closed_at": "2023-02-09T15:50:13Z",
        "merged_at": null,
        "body": "Switch our slowest tests (Windows CMake) over to large runners.\n\nThese take 15-20 minutes each on a no-op PR, compared to 5-10 minutes for every other test.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 90,
        "deletions": 157,
        "changed_files": 4,
        "created_at": "2023-02-09T05:34:48Z",
        "closed_at": "2023-02-09T15:50:06Z",
        "merged_at": null,
        "body": "Switch to Ninja generator for windows cmake builds.\n\nThese will still use MSVC as the compiler, but will no longer generate Visual Studio projects for the builds.  Visual Studio is particularly bad at parallelizing builds, and is hostile to ccache.\n\nThis change also tweaks the ccache setup to prevent unbounded the growth observed in our github caches.  Windows builds have had debug symbols stripped to reduce ccache size by a factor of 2x, and ccache maximum have been tweaked so that we persist fewer older builds.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 66,
        "deletions": 143,
        "changed_files": 3,
        "created_at": "2023-02-09T05:10:16Z",
        "closed_at": "2023-02-09T15:50:01Z",
        "merged_at": null,
        "body": "Switch our slowest tests (Windows CMake) over to large runners.\n\nThese take 15-20 minutes each on a no-op PR, compared to 5-10 minutes for every other test.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 67,
        "deletions": 141,
        "changed_files": 3,
        "created_at": "2023-02-09T04:45:40Z",
        "closed_at": "2023-02-09T15:49:55Z",
        "merged_at": null,
        "body": "Try excluding ccache tmp directory\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 83,
        "deletions": 140,
        "changed_files": 3,
        "created_at": "2023-02-09T01:01:19Z",
        "closed_at": "2023-02-09T15:49:50Z",
        "merged_at": null,
        "body": "Switch to Ninja generator for windows cmake builds.\n\nThese will still use MSVC as the compiler, but will no longer generate Visual Studio projects for the builds.  Visual Studio is particularly bad at parallelizing builds, and is hostile to ccache.\n\nThis change also tweaks the ccache setup to avoid unbounded the growth observed in our github caches.  Push events (post-submits) will always produce a fresh cache, while pull requests will still incrementally grow theirs.  Forked PRs will no longer write caches, but can reuse existing ones\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 79,
        "deletions": 26,
        "changed_files": 6,
        "created_at": "2023-02-08T23:53:00Z",
        "closed_at": "2023-08-25T21:14:46Z",
        "merged_at": null,
        "body": "Add version number to generated files (#11408)\n\nThis adds the version of the protoc compiler that generated the python files to the header of the generated files as specified in #11085\n\nEdit: this PR now includes\n- Python\n- C++\n- Java\n- Ruby\n\nCloses #11408\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/11408 from alielbashir:patch-1 5946ae741ec9dfb2c5ee40cc63a36887a20c7e15\nFUTURE_COPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/11408 from alielbashir:patch-1 5946ae741ec9dfb2c5ee40cc63a36887a20c7e15\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 46,
        "deletions": 8,
        "changed_files": 3,
        "created_at": "2023-02-08T22:42:19Z",
        "closed_at": "2023-02-09T22:16:34Z",
        "merged_at": null,
        "body": "[ObjC] Add action for the source validations.\n\nThese are currently sorta hidden within the full_mac_build.sh script, but\nthey can actually run on any platform, so this directly sets up an job\non linux to do the validations.\n\nThe WKTs update script was also updated to not do a build of protoc. Most\nof the others LANG scripts for this don't either, and the places that call\nthe script already ensure things are up to date.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2032,
        "deletions": 2173,
        "changed_files": 10,
        "created_at": "2023-02-08T22:25:29Z",
        "closed_at": "2023-08-25T21:14:48Z",
        "merged_at": null,
        "body": "Migrate message_field.cc to use Emit().\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 62,
        "deletions": 139,
        "changed_files": 3,
        "created_at": "2023-02-08T21:42:54Z",
        "closed_at": "2023-02-09T15:49:44Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 63,
        "deletions": 18,
        "changed_files": 1,
        "created_at": "2023-02-08T19:51:23Z",
        "closed_at": "2023-02-09T15:49:27Z",
        "merged_at": null,
        "body": "Switch to Ninja generator for windows cmake builds\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 125,
        "deletions": 7,
        "changed_files": 7,
        "created_at": "2023-02-08T06:42:05Z",
        "closed_at": "2023-02-08T19:19:41Z",
        "merged_at": null,
        "body": "Enable github caching of Bazel's repository cache.\n\nThis should substantially reduce network flakes, since most builds will no longer need to download external dependencies.  Because these caches actually get pretty expensive (~300 MB just from 1 openjdk dependency), we've taken some precautions:\n\n1) The caches only get updated on push events (i.e. post-submit jobs)\n2) Only a single job will push a new cache for any os/branch/commit combination.  This will be whichever job finishes its bazel run first, and *also* has updates for the cache.  Over time, the cache should expand to the full set of transitive dependencies as the quicker jobs stop pushing updates.\n3) A clear_caches workflow has been introduced to reset the caches in case they grow too large.  This will run monthly for now, but can also be run manually.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 365,
        "deletions": 60,
        "changed_files": 6,
        "created_at": "2023-02-08T02:21:51Z",
        "closed_at": "2023-02-15T18:32:05Z",
        "merged_at": null,
        "body": "Annotate remaining field semantics.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 31,
        "deletions": 31,
        "changed_files": 14,
        "created_at": "2023-02-07T23:08:09Z",
        "closed_at": "2023-02-09T15:45:12Z",
        "merged_at": null,
        "body": "[ObjC] s/Objective C/Objective-C/\n\nJust to avoid some linters complaining about the spelling in future changes.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 14,
        "deletions": 21,
        "changed_files": 1,
        "created_at": "2023-02-07T23:05:21Z",
        "closed_at": "2023-08-25T21:14:50Z",
        "merged_at": null,
        "body": "experiment only\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 32,
        "deletions": 33,
        "changed_files": 2,
        "created_at": "2023-02-07T23:00:09Z",
        "closed_at": "2023-02-08T19:13:02Z",
        "merged_at": null,
        "body": "[ObjC] Use an struct to pass info to the file helpers.\n\nNo real changes, just adding the struct before the next change which is\nyet another option.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-02-07T22:59:43Z",
        "closed_at": "2023-02-08T19:57:03Z",
        "merged_at": null,
        "body": "[ObjC] Only include system headers in multi source where needed.\n\n- Add a new option for extra system headers.\n- Have the two places that generate the enum support add the extra header.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-02-07T22:57:34Z",
        "closed_at": "2023-02-08T18:46:26Z",
        "merged_at": null,
        "body": "[ObjC] Multi source mode disables the use of fwd decls.\n\nIt isn't worth the effort to try and compute the correct minimal set for each\nsub file, and the more Swift folks use on top of this, the less it matters\nas the modules will need everything anyways.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 97,
        "deletions": 42,
        "changed_files": 12,
        "created_at": "2023-02-07T22:57:21Z",
        "closed_at": "2023-02-08T18:19:24Z",
        "merged_at": null,
        "body": "[ObjC] Include the version checks in generated impl files.\n\nThere's always the chance someone will mix these, so play it safe and have checks in both.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 20,
        "deletions": 19,
        "changed_files": 3,
        "created_at": "2023-02-07T22:07:24Z",
        "closed_at": "2023-02-08T19:38:21Z",
        "merged_at": null,
        "body": "Remove unused headers, include missing headers, match args, etc.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 53,
        "deletions": 30,
        "changed_files": 1,
        "created_at": "2023-02-07T21:42:02Z",
        "closed_at": "2023-02-08T15:32:16Z",
        "merged_at": null,
        "body": "[ObjC] Move UsesClassRef fallback off current code paths.\n\nMove Field & Extension support for lack of UsesClassRef into the legacy api\nso the only things taking the hit are old generate code.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 23,
        "deletions": 19,
        "changed_files": 1,
        "created_at": "2023-02-07T21:41:32Z",
        "closed_at": "2023-02-08T16:44:36Z",
        "merged_at": null,
        "body": "[ObjC] Move the close enum fallback to a legacy codepath.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 22,
        "changed_files": 1,
        "created_at": "2023-02-07T21:41:06Z",
        "closed_at": "2023-02-08T17:13:16Z",
        "merged_at": null,
        "body": "[ObjC] Syntax no longer needed in FieldDescriptor startup.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 28,
        "deletions": 20,
        "changed_files": 1,
        "created_at": "2023-02-07T21:41:04Z",
        "closed_at": "2023-02-08T16:17:02Z",
        "merged_at": null,
        "body": "[ObjC] Move the proto3 optional fixup off the current generation path.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 121,
        "deletions": 24,
        "changed_files": 2,
        "created_at": "2023-02-07T21:40:36Z",
        "closed_at": "2023-02-08T14:31:46Z",
        "merged_at": null,
        "body": "[ObjC] Runtime support for fullName and FileDescriptor improvements\n\nAdd a new generator interface to:\n- provide the message name directly instead of the overhead needed to try and compute it\n- provide the data for the GPBFileDescriptor as a struct.\n\nThis allows -[GPBMessage fullName] to much more easily compute the fullname.\n\nIt also will allow the creation of all GPBFileDescriptors to be done on demand thus reducing the work in the startup codepaths as well as reducing memory requirements.\n\nThe generation changes are in a following commit.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-02-07T21:29:18Z",
        "closed_at": "2023-02-14T04:26:33Z",
        "merged_at": null,
        "body": "One-Line Change Description (used as GitHub Pull Request title)\n\nDetailed description...\n...text exposed to open source public git repo...\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 282,
        "deletions": 307,
        "changed_files": 27,
        "created_at": "2023-02-07T21:29:01Z",
        "closed_at": "2023-02-08T14:37:43Z",
        "merged_at": null,
        "body": "[ObjC] Generator changes for fullName and FileDescriptor improvements\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-02-07T21:20:47Z",
        "closed_at": "2023-02-07T22:21:43Z",
        "merged_at": null,
        "body": "Initialize variable that is detected as 'maybe uninitialized'.\n\nWith gcc (tested versions: 11.3.0, 12.2.0) compiled with asan, the\n`type_id` variable is warned about maybe being used uninitialized in\nthe later call:\n\n```\n ptr = ParseFieldMaybeLazily(static_cast<uint64_t(type_id) * 8 + 2, ptr,\n                             extendee, metadata, ctx);\n```\n\nThis change initializes the variable to a defined default.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-02-07T21:00:25Z",
        "closed_at": "2023-02-07T22:47:41Z",
        "merged_at": null,
        "body": "Run ctest in parallel to reduce CMake time\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 12,
        "deletions": 16,
        "changed_files": 12,
        "created_at": "2023-02-07T20:36:32Z",
        "closed_at": "2023-02-08T01:15:39Z",
        "merged_at": null,
        "body": "Set incompatible_disallow_empty_glob in CI tests\n\nIn order to flip the flag, all downstream projects should be adapted. However, it is hard to fix them all if there are constant regressions. Adding it to the CI will ensure that once the project can build with incompatible_disallow_empty_glob it can keep building like that.\nSee: bazelbuild/bazel#15327\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-02-07T20:08:02Z",
        "closed_at": "2023-02-09T15:49:09Z",
        "merged_at": null,
        "body": "Switch our slowest tests (Windows CMake) over to large runners.\n\nThese take 15-20 minutes each on a no-op PR, compared to 5-10 minutes for every other test.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 25,
        "deletions": 9,
        "changed_files": 1,
        "created_at": "2023-02-07T19:01:31Z",
        "closed_at": "2023-02-07T20:25:04Z",
        "merged_at": null,
        "body": "[ObjC] use xcpretty if installed to reduce output\n\nInclude option to skip it if it was installed.\n\nhttps://github.com/tuist/xcbeautify would also be an option (it supports bazel to),\nbut we'd have to install it.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-02-07T17:18:29Z",
        "closed_at": "2023-02-07T19:24:39Z",
        "merged_at": null,
        "body": "Enable parallel compilation for MSVC builds.\n\nThe `BuildInParallel` flag only controls parallelism at the *project* level, while `/MP` enables it at the *compilation unit* level.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 28,
        "deletions": 10,
        "changed_files": 1,
        "created_at": "2023-02-07T16:49:36Z",
        "closed_at": "2023-02-09T18:03:27Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-02-07T05:33:46Z",
        "closed_at": "2023-02-07T06:54:23Z",
        "merged_at": null,
        "body": "Fix permissions of ccache directory in cmake image\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-02-07T05:08:19Z",
        "closed_at": "2023-02-07T07:44:21Z",
        "merged_at": null,
        "body": "Prefix `safe for test` tag to keep it first\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-02-07T04:13:06Z",
        "closed_at": "2023-02-08T00:41:38Z",
        "merged_at": null,
        "body": "Add protobuf-decoder-explainer",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 32,
        "deletions": 10,
        "changed_files": 4,
        "created_at": "2023-02-07T00:07:12Z",
        "closed_at": "2023-02-07T16:53:02Z",
        "merged_at": null,
        "body": "Enable ccache for XCode builds.\n\nThis uses ccache + github caching to substantially decrease the time it takes to run XCode builds.  Due to Bazel caching, these are some of our slowest tests, causing one of the biggest presubmit bottlenecks\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-02-07T00:03:02Z",
        "closed_at": "2023-02-07T05:10:30Z",
        "merged_at": null,
        "body": "Enable ccache for CMake builds.\n\nThis uses ccache + github caching to substantially decrease the time it takes to run CMake builds.  Due to Bazel caching, these are some of our slowest tests, causing one of the biggest presubmit bottlenecks\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-02-06T23:56:58Z",
        "closed_at": "2023-02-07T19:02:58Z",
        "merged_at": null,
        "body": "Workaround `TRUE` and `FALSE` macro definitions on WIN32\n\nOne of the [GCP proto files](https://github.com/googleapis/googleapis/blob/master/google/cloud/asset/v1/assets.proto) defines `TRUE` and `FALSE` as enum values ([permalink](https://github.com/googleapis/googleapis/blob/a4f2de456480c0a4ed9feeeaa1f8ee620bbef23a/google/cloud/asset/v1/assets.proto#L782-L786)).  These cause trouble on WIN32, where `TRUE` and `FALSE` are also macro definitions.\n\nFor more details, see https://github.com/googleapis/google-cloud-cpp/issues/8145.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-02-06T23:26:12Z",
        "closed_at": "2023-02-23T16:41:31Z",
        "merged_at": null,
        "body": "Migrate away from examining the syntax of a proto file via reflection.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-02-06T21:51:27Z",
        "closed_at": "2023-02-06T23:58:38Z",
        "merged_at": null,
        "body": "Add GenerateCodeInfo::Annotation::Semantic support to io::Printer.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-02-06T16:37:16Z",
        "closed_at": "2023-02-06T18:57:13Z",
        "merged_at": null,
        "body": "Fix use-of-uninitialized-value bug on invalid input for an extension missing a type_name.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 20,
        "deletions": 20,
        "changed_files": 1,
        "created_at": "2023-02-06T06:00:15Z",
        "closed_at": "2023-02-16T02:40:28Z",
        "merged_at": null,
        "body": "Fix lint warnings for protobuf GeneratedMessage.java\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 1,
        "changed_files": 4,
        "created_at": "2023-02-04T03:01:58Z",
        "closed_at": "2023-02-09T15:48:55Z",
        "merged_at": null,
        "body": "Pin the Xcode version in mac builds\n\nThis disables Bazel's Xcode locator, which frequently times out on github runners.  This works around the issue we're seeing similar to https://github.com/bazelbuild/rules_swift/issues/950 and https://www.smileykeith.com/2021/03/08/locking-xcode-in-bazel/\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-02-04T00:39:19Z",
        "closed_at": "2023-02-04T02:49:22Z",
        "merged_at": null,
        "body": "Delete all of the remaining Kokoro code\n\nThe release process has been moved to an internal workflow, and all tests have been migrated to GHA\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 34,
        "deletions": 289,
        "changed_files": 8,
        "created_at": "2023-02-04T00:38:46Z",
        "closed_at": "2023-08-25T21:14:52Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 21,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-02-04T00:10:08Z",
        "closed_at": "2023-02-07T00:45:17Z",
        "merged_at": null,
        "body": "Add a cache for downloaded Bazel binaries\n\nThis will reduce flakes by caching pinned versions of bazel on github\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-02-04T00:02:38Z",
        "closed_at": "2023-02-16T01:39:15Z",
        "merged_at": null,
        "body": "Disable Xcode locator by default to avoid flakiness in mac builds.\n\nWe'll only need this once we Bazelify objective-c, and can just use clang until then.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-02-03T22:58:19Z",
        "closed_at": "2023-02-07T00:13:20Z",
        "merged_at": null,
        "body": "Pin X-code version on mac/bazel tests to prevent flakiness.\n\nSee https://github.com/bazelbuild/rules_swift/issues/950 and https://www.smileykeith.com/2021/03/08/locking-xcode-in-bazel/ for more details.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 60,
        "deletions": 466,
        "changed_files": 32,
        "created_at": "2023-02-03T22:23:27Z",
        "closed_at": "2023-02-04T00:38:08Z",
        "merged_at": null,
        "body": "Migrate daily staleness tests to GHA\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-02-03T21:37:23Z",
        "closed_at": "2023-02-06T17:37:11Z",
        "merged_at": "2023-02-06T17:37:10Z",
        "body": "\u2026ittle endian QNX. (#11750)\r\n\r\nFix the macro PROTOBUF_LITTLE_ENDIAN cannot be set correctly on the little endian QNX.\r\n\r\nSigned-off-by: wugaoyin <1132954336@qq.com>\r\n\r\nCloses #11750\r\n\r\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/11750 from WuGaoyin:main 09ec1a19e9c2eaad7085fad81b7bc8648db40de1\r\nPiperOrigin-RevId: 506979012",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-02-03T21:27:38Z",
        "closed_at": "2023-02-06T19:03:41Z",
        "merged_at": null,
        "body": "Add a non-const overload of RepeatedPtrField::GetArena and deprecate the const overload.\n\nMotivation: we are planning to make RepeatedPtrField::GetArena non-const in order to support split RepeatedFields.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-02-03T20:29:50Z",
        "closed_at": "2023-02-03T22:15:15Z",
        "merged_at": null,
        "body": "internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 18,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2023-02-03T20:02:42Z",
        "closed_at": "2023-02-06T16:40:00Z",
        "merged_at": null,
        "body": "Add isClosed() to EnumDescriptor in Java.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 383,
        "changed_files": 26,
        "created_at": "2023-02-03T19:50:42Z",
        "closed_at": "2023-02-03T23:44:36Z",
        "merged_at": null,
        "body": "Delete remaining cross-architecture Kokoro tests in favor of GHA.\n\nThese have already been migrated, this just deleted dead code\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 220,
        "deletions": 5,
        "changed_files": 8,
        "created_at": "2023-02-03T19:49:51Z",
        "closed_at": "2023-08-25T21:14:54Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-02-03T19:49:22Z",
        "closed_at": "2023-02-03T22:30:22Z",
        "merged_at": null,
        "body": "Migrate remaining cross-architecture tests to GHA\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-02-03T18:19:24Z",
        "closed_at": "2023-02-03T21:13:43Z",
        "merged_at": "2023-02-03T21:13:43Z",
        "body": "Pull the first index with jq instead of looking for \"main\"\r\nGit add all artifacts since \"git commit -a\" doesn't add new ones\r\n\r\nCherrypick of https://github.com/protocolbuffers/protobuf/commit/e89747c6ece4f3874c2b27ce6bd67eb4a51b21e4\r\n\r\nPiperOrigin-RevId: 506933714",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 0,
        "changed_files": 9,
        "created_at": "2023-02-03T17:45:50Z",
        "closed_at": "2023-02-03T19:32:21Z",
        "merged_at": null,
        "body": "Annotate *.inc c++ files so they are recognized as such.\n\nSince *.inc is not a common filename suffix, editors and\nother tools might not recognize these as c++ and would\nnot offer language speficific features such as\nsyntax-highlighting.\n\nThis uses the commonly used -*- c++ -*- annotation recongized\nby many tools.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 31,
        "deletions": 17,
        "changed_files": 3,
        "created_at": "2023-02-03T13:38:46Z",
        "closed_at": "2023-02-23T21:45:53Z",
        "merged_at": null,
        "body": "Write barrier protected objects are allowed to be promoted to the old generation, which means they only get marked on major GC.\r\n\r\nThe downside is that the `RB_BJ_WRITE` macro MUST be used to set references, otherwise the referenced object may be garbaged collected.\r\n\r\nBut the `*Descriptor` classes and `Arena` have very few references and are only set in a few places, so it's relatively easy to implement.\r\n\r\ncc @peterzhu2118 ",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 218,
        "deletions": 15,
        "changed_files": 24,
        "created_at": "2023-02-03T03:02:29Z",
        "closed_at": "2023-08-25T21:14:56Z",
        "merged_at": null,
        "body": "Experiment\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-02-03T02:57:39Z",
        "closed_at": "2023-02-03T04:49:56Z",
        "merged_at": null,
        "body": "Bump upb version to fix ruby flakes\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 218,
        "deletions": 15,
        "changed_files": 24,
        "created_at": "2023-02-03T02:41:36Z",
        "closed_at": "2023-08-25T21:14:58Z",
        "merged_at": null,
        "body": "Experiment\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 15,
        "changed_files": 2,
        "created_at": "2023-02-03T00:35:40Z",
        "closed_at": "2023-08-25T21:15:00Z",
        "merged_at": null,
        "body": "Drop proto1 support.\n\nDrop proto1 support.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-02-02T22:26:47Z",
        "closed_at": "2023-02-07T20:37:29Z",
        "merged_at": null,
        "body": "In order to flip the flag, all downstream projects should be adapted. However, it is hard to fix them all if there are constant regressions. Adding it to the CI will ensure that once the project can build with incompatible_disallow_empty_glob it can keep building like that.\r\nSee: bazelbuild/bazel#15327",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-02-02T21:43:24Z",
        "closed_at": "2023-08-25T21:15:02Z",
        "merged_at": null,
        "body": "DO_NOT_SUBMIT\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 278,
        "deletions": 0,
        "changed_files": 5,
        "created_at": "2023-02-02T18:11:57Z",
        "closed_at": "2023-04-25T23:13:09Z",
        "merged_at": null,
        "body": "Update MessageDifferencer to conditionally force comparing additional fields while doing PARTIAL comparison (compare fields which are not repeated, have no presence and are set to their default value).\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-02-02T17:43:05Z",
        "closed_at": "2023-08-25T21:15:04Z",
        "merged_at": null,
        "body": "Trigger GHA failure\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 98,
        "deletions": 257,
        "changed_files": 14,
        "created_at": "2023-02-02T15:47:27Z",
        "closed_at": "2023-08-25T21:15:06Z",
        "merged_at": null,
        "body": "Experiment\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2023-02-02T06:53:15Z",
        "closed_at": "2023-02-08T02:07:20Z",
        "merged_at": null,
        "body": "Fix lint warnings for protobuf GeneratedMessage.java\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-02-02T06:29:32Z",
        "closed_at": "2023-02-03T04:44:51Z",
        "merged_at": null,
        "body": "Delete more Kokoro tests in favor of GHA.\n\nThese have already been migrated, this just deleted dead code\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 93,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2023-02-02T06:29:12Z",
        "closed_at": "2023-08-25T21:15:09Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-02-02T06:14:55Z",
        "closed_at": "2023-02-03T03:20:36Z",
        "merged_at": null,
        "body": "Migrate Java and C# Linux tests to GHA\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 20,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-02-02T06:14:37Z",
        "closed_at": "2023-02-03T02:40:43Z",
        "merged_at": null,
        "body": "Migrate \"macos-next\" Linux test to GHA\n\nThis no longer served its original purpose and was actually testing an *older* version of MacOS than the rest of our test suite.  This did lock down CMake builds on Mac though, so we'll keep that coverage.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 178,
        "deletions": 10,
        "changed_files": 6,
        "created_at": "2023-02-02T06:14:16Z",
        "closed_at": "2023-02-03T01:43:49Z",
        "merged_at": null,
        "body": "Migrate remaining Windows tests to GHA\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-02-02T04:24:18Z",
        "closed_at": "2023-02-03T07:06:29Z",
        "merged_at": null,
        "body": "Add a no-rtti build to make our support official\n\nCloses #11742\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 22,
        "deletions": 1,
        "changed_files": 6,
        "created_at": "2023-02-02T04:11:09Z",
        "closed_at": "2023-08-25T21:15:10Z",
        "merged_at": null,
        "body": "Explicitly disable spurious sign comparison warnings from Abseil checks.\n\nCloses #11743\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-02-02T02:20:34Z",
        "closed_at": "2023-02-03T01:56:06Z",
        "merged_at": null,
        "body": "Delete remaining Kokoro MacOS tests in favor of GHA.\n\nThese have already been migrated, this just deleted dead code\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 497,
        "deletions": 72,
        "changed_files": 25,
        "created_at": "2023-02-02T02:20:13Z",
        "closed_at": "2023-08-25T21:15:13Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 94,
        "changed_files": 8,
        "created_at": "2023-02-02T01:06:27Z",
        "closed_at": "2023-02-02T21:48:15Z",
        "merged_at": null,
        "body": "Delete Kokoro non-Linux Bazel tests in favor of GHA.\n\nThese have already been migrated, this just deleted dead code\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 246,
        "deletions": 33,
        "changed_files": 14,
        "created_at": "2023-02-02T01:06:04Z",
        "closed_at": "2023-08-25T21:15:15Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-02-01T23:57:05Z",
        "closed_at": "2023-02-02T05:22:13Z",
        "merged_at": null,
        "body": "Bump upb version to pull in windows/python bazel fix\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 228,
        "deletions": 27,
        "changed_files": 14,
        "created_at": "2023-02-01T23:36:20Z",
        "closed_at": "2023-02-02T23:54:37Z",
        "merged_at": null,
        "body": "Migrate remaining macOS tests to GHA actions\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-02-01T23:21:46Z",
        "closed_at": "2023-02-02T19:49:52Z",
        "merged_at": null,
        "body": "Migrate non-Linux C++ tests to GHA actions\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 376,
        "changed_files": 45,
        "created_at": "2023-02-01T22:23:26Z",
        "closed_at": "2023-02-02T05:16:36Z",
        "merged_at": null,
        "body": "Delete Kokoro Linux Ruby and Python tests in favor of GHA.\n\nThese have already been migrated, this just deleted dead code\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 91,
        "deletions": 7,
        "changed_files": 4,
        "created_at": "2023-02-01T22:22:17Z",
        "closed_at": "2023-08-25T21:15:17Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-02-01T22:06:29Z",
        "closed_at": "2023-02-02T21:18:31Z",
        "merged_at": null,
        "body": "Gate typeid(T).name() calls behind PROTOBUF_RTTI.\n\nCloses #11742\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-02-01T18:59:21Z",
        "closed_at": "2023-02-02T00:12:25Z",
        "merged_at": null,
        "body": "Migrate Python and Ruby Linux tests to GHA actions\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 87,
        "deletions": 62,
        "changed_files": 6,
        "created_at": "2023-02-01T18:31:30Z",
        "closed_at": "2023-02-03T01:07:16Z",
        "merged_at": null,
        "body": "Add Java support for retention attribute\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-02-01T17:33:53Z",
        "closed_at": "2023-02-01T19:20:19Z",
        "merged_at": null,
        "body": "Remove mergeable action to allow copybara test reuse.\n\nOur repo settings have already been updated to only allow merges from the BTR team and protobuf managers.  Except for some very specific circumstances, PRs should *never* be merged and should instead be imported via Copybara.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 229,
        "changed_files": 20,
        "created_at": "2023-02-01T17:03:59Z",
        "closed_at": "2023-02-01T21:20:33Z",
        "merged_at": null,
        "body": "Delete Kokoro Linux CMake and Composer tests in favor of GHA.\n\nThese have already been migrated, this just deleted dead code\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 350,
        "deletions": 162,
        "changed_files": 14,
        "created_at": "2023-02-01T17:03:09Z",
        "closed_at": "2023-08-25T21:15:19Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 44,
        "deletions": 79,
        "changed_files": 2,
        "created_at": "2023-02-01T13:45:29Z",
        "closed_at": "2023-02-03T10:16:41Z",
        "merged_at": null,
        "body": "Optimize Varint Parsing for 32 and 64 bits\n\nIt is intended to remove some push/pops and unify the common path\n\nDiff:\n\nhttps://gcc.godbolt.org/z/4f8a9zsjW\n\nFor 64 bit we got rid of extra push/pop. For 32 we think less register pressure and shld is better than ror+test+js. No push/pops. Fun fact that top 32 of 64 bits of intermediate result can be polluted with ones, that does not matter for final assignment of resulting pair\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 108,
        "deletions": 84,
        "changed_files": 4,
        "created_at": "2023-02-01T09:24:06Z",
        "closed_at": "2023-02-02T17:52:01Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-02-01T06:01:40Z",
        "closed_at": "2023-02-03T21:23:07Z",
        "merged_at": null,
        "body": "Fix the macro PROTOBUF_LITTLE_ENDIAN cannot be set correctly on the little endian QNX.\r\n\r\nSigned-off-by: wugaoyin <1132954336@qq.com>",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2023-02-01T05:30:17Z",
        "closed_at": "2023-08-25T21:15:21Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-02-01T04:55:23Z",
        "closed_at": "2023-02-16T01:39:06Z",
        "merged_at": null,
        "body": "Noop change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 45,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-02-01T04:43:51Z",
        "closed_at": "2023-08-25T21:15:23Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 7,
        "changed_files": 3,
        "created_at": "2023-02-01T04:32:49Z",
        "closed_at": "2023-08-25T21:15:25Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-02-01T04:10:28Z",
        "closed_at": "2023-02-01T19:34:10Z",
        "merged_at": null,
        "body": "Migrate to composite GHA actions (#11718)\n\nThis migrates from reusable workflows to composite GHA actions.  This has the following advantages:\n1) We can split them into smaller, easier to reason about chunks\n2) We can reuse them more freely between each other and workflows\n3) They don't complicate the job names\n4) In theory they'll be easier to test in isolation.  While composite actions can't be unit-tested, we can easily break them up into nodejs or docker actions that can be.\n\nAs a proof of concept, some of our non-Bazel tests are migrated to GHA as well (CMake + Composer)\n\nCloses #11718\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/11718 from protocolbuffers:gha-actions 5403307bc00616e94816aa460813939d8f37a1bd\nFUTURE_COPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/11718 from protocolbuffers:gha-actions 5403307bc00616e94816aa460813939d8f37a1bd\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 50,
        "deletions": 34,
        "changed_files": 2,
        "created_at": "2023-02-01T01:15:12Z",
        "closed_at": "2023-02-02T16:42:41Z",
        "merged_at": null,
        "body": "Automated rollback of commit bc14a0af433df278a155e05b529cff3007d5bf40.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-02-01T00:32:10Z",
        "closed_at": "2023-02-01T16:50:09Z",
        "merged_at": "2023-02-01T16:50:08Z",
        "body": "Environment variables need to be accessed with the \"env.\" prefix.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1056,
        "deletions": 94,
        "changed_files": 34,
        "created_at": "2023-02-01T00:10:18Z",
        "closed_at": "2023-02-14T00:15:49Z",
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 839,
        "deletions": 90,
        "changed_files": 31,
        "created_at": "2023-02-01T00:10:14Z",
        "closed_at": "2023-02-14T00:15:49Z",
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-01-31T21:58:07Z",
        "closed_at": "2023-01-31T23:45:29Z",
        "merged_at": "2023-01-31T23:45:29Z",
        "body": "We have decided to hold off on upgrading ruby's major version to see if binary gems will be ready to release.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 92,
        "deletions": 27,
        "changed_files": 11,
        "created_at": "2023-01-31T21:02:51Z",
        "closed_at": "2023-02-02T19:31:45Z",
        "merged_at": null,
        "body": "[Objc] Replace reference to message's own class when calling the GPBDescriptor initializer, using a direct linker reference instead of +class.\n\nThe linker reference results in slightly smaller binaries when compared to calling +class.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 147,
        "deletions": 0,
        "changed_files": 5,
        "created_at": "2023-01-31T20:50:59Z",
        "closed_at": "2023-02-08T17:07:12Z",
        "merged_at": null,
        "body": "Create skeleton for a Rust backend.\n\nThis code is experimental and should not be expected to emit working code, and callers are liable to break without warning.\n\nIt is being released now so that development can occur in the open, but users should not expect this to be supported any time soon.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 102,
        "changed_files": 12,
        "created_at": "2023-01-31T19:36:39Z",
        "closed_at": "2023-02-01T04:07:24Z",
        "merged_at": null,
        "body": "Delete Kokoro Linux C++ tests in favor of GHA.\n\nThese have already been migrated, this just deleted dead code\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 362,
        "deletions": 80,
        "changed_files": 14,
        "created_at": "2023-01-31T19:26:47Z",
        "closed_at": "2023-08-25T21:15:27Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 17,
        "deletions": 43,
        "changed_files": 3,
        "created_at": "2023-01-31T18:26:40Z",
        "closed_at": "2023-01-31T21:13:38Z",
        "merged_at": null,
        "body": "For Ruby oneof fields, generate hazzers for members (#11655)\n\nWhen generating Ruby clients for proto3 messages that have a oneof, we generate a hazzer for members of the oneof, not just a hazzer for the oneof itself.\n\nIn other words, for a proto like this:\n\n```\nsyntax = \"proto3\";\nmessage Foo {\n  oneof bar {\n    string baz = 1;\n  }\n}\n```\n\nThe generated `Foo` will now have a method called `has_baz?`, in addition to the (pre-existing) method `has_bar?`.\n\nI updated the unit tests, and verified that all the tests under `//ruby/...` pass.\n\nFixes https://github.com/protocolbuffers/protobuf/issues/9561.\n\nCloses #11655\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/11655 from shaldengeki:test-ruby-oneof-hazzer a15e474da69cac34cf71361413b751fb03b9341d\nFUTURE_COPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/11655 from shaldengeki:test-ruby-oneof-hazzer a15e474da69cac34cf71361413b751fb03b9341d\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-01-31T17:36:02Z",
        "closed_at": "2023-01-31T18:52:02Z",
        "merged_at": "2023-01-31T18:52:02Z",
        "body": "\u2026 version\r\n\r\nPiperOrigin-RevId: 505829492",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-01-31T16:54:28Z",
        "closed_at": "2023-01-31T21:23:25Z",
        "merged_at": null,
        "body": "Update protobuf's UPB dep to include the most recent changes.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 234,
        "deletions": 1,
        "changed_files": 7,
        "created_at": "2023-01-31T14:38:23Z",
        "closed_at": "2023-02-08T19:41:04Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 415,
        "deletions": 3,
        "changed_files": 7,
        "created_at": "2023-01-31T14:37:48Z",
        "closed_at": "2023-02-08T23:52:01Z",
        "merged_at": null,
        "body": "Add StringBlock logic to arenas\n\nThis change introduces a dedicated StringBlock class that hosts block allocated string instances which are destroyed when the arena gets destroyed.\n\nExperiments have shown this to save 0.40% in memory and 0.10% of CPU in arena heavy use cases.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 76,
        "deletions": 134,
        "changed_files": 1,
        "created_at": "2023-01-31T13:13:41Z",
        "closed_at": "2023-02-02T05:55:49Z",
        "merged_at": null,
        "body": "Automated rollback of commit 63e127a89a0c6837bd594f148cb5be660e489e62.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 12,
        "changed_files": 2,
        "created_at": "2023-01-31T09:43:46Z",
        "closed_at": "2023-01-31T17:59:59Z",
        "merged_at": null,
        "body": "Reinstate descriptor-sensitive C# tests.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-01-31T06:35:22Z",
        "closed_at": "2023-02-11T07:30:47Z",
        "merged_at": null,
        "body": "The Protocol Buffers documentation URL has moved from developers.google.com to protobuf.dev. See notice on top of https://developers.google.com/protocol-buffers:\r\n\r\n![image](https://user-images.githubusercontent.com/1782590/215684685-28e1939c-47e9-4e31-8949-3ed0b0243823.png)",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 557,
        "deletions": 87,
        "changed_files": 23,
        "created_at": "2023-01-30T22:41:14Z",
        "closed_at": "2023-02-01T19:34:12Z",
        "merged_at": null,
        "body": "This migrates from reusable workflows to composite GHA actions.  This has the following advantages:\r\n1) We can split them into smaller, easier to reason about chunks\r\n2) We can reuse them more freely between each other and workflows\r\n3) They don't complicate the job names\r\n4) In theory they'll be easier to test in isolation.  While composite actions can't be unit-tested, we can easily break them up into nodejs or docker actions that can be.\r\n\r\nAs a proof of concept, some of our non-Bazel tests are migrated to GHA as well (CMake + Composer)",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 138,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2023-01-30T21:30:33Z",
        "closed_at": "2023-03-07T17:34:10Z",
        "merged_at": null,
        "body": "examples directory was missing an example in ruby, this PR aims to fix this. ",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-01-30T20:54:08Z",
        "closed_at": "2023-01-30T22:45:58Z",
        "merged_at": null,
        "body": "Upgrade to Abseil LTS 20230125\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 10,
        "changed_files": 2,
        "created_at": "2023-01-30T20:25:43Z",
        "closed_at": "2023-01-30T21:37:04Z",
        "merged_at": null,
        "body": "Migrate dependencies pointing to github-generated tarballs to use zip instead.\n\nThese triggered non-hermetic build failures due to a change in how github generates tarballs.  See https://github.com/keybase/client/issues/10800#issuecomment-375831096 for more info.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-01-30T19:22:32Z",
        "closed_at": "2023-01-30T21:40:49Z",
        "merged_at": null,
        "body": "Update expected checksum.\n\nLooks like github had a server update and the checksum changed.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-01-30T19:03:40Z",
        "closed_at": "2023-01-31T17:09:16Z",
        "merged_at": null,
        "body": "[ObjC] Add compile time asserts around legacy codegen support.\n\nLooking back through history, figure out each place a generation change was\nadded and added compile asserts to help leave signals for what can be cleaned up\nwhen if the legacy support is ever moved forward.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 56,
        "deletions": 0,
        "changed_files": 4,
        "created_at": "2023-01-30T17:55:47Z",
        "closed_at": "2023-01-31T21:18:19Z",
        "merged_at": null,
        "body": "[ObjC] Error when appearing to use newer generated code.\n\nThere already are explicit checks in debug builds, but this adds an addition\ncheck within all builds to catch when unknown flags are being passed to the\nruntime, which is an indication that the source generation is from a newer\nversion of the library.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-01-30T16:22:22Z",
        "closed_at": "2023-01-31T19:30:38Z",
        "merged_at": null,
        "body": "[ObjC] Add the debug runtime check to more startup cases.\n\nDescriptor was relying on the Root for the runtime check, but since the Root is\nonly startup up when needed, add the debug runtime check to the cases where the\nRoot isn't started up.\n\nEnumDescriptors are normally started up by fields, but a developer could\ndirectly call the public apis, so add the debug runtime check for safety sake.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 372,
        "deletions": 379,
        "changed_files": 11,
        "created_at": "2023-01-30T14:22:49Z",
        "closed_at": "2023-01-31T09:32:35Z",
        "merged_at": null,
        "body": "Change the effective proto root for C#-specific test protos.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 333,
        "deletions": 3,
        "changed_files": 6,
        "created_at": "2023-01-30T13:49:40Z",
        "closed_at": "2023-02-08T19:40:54Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 73,
        "changed_files": 1,
        "created_at": "2023-01-30T03:18:48Z",
        "closed_at": "2023-01-31T12:40:20Z",
        "merged_at": null,
        "body": "Automated rollback of commit 5b4bc33a09f8541f28c8ee98a597953b18121fc9.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-01-28T22:43:19Z",
        "closed_at": "2023-01-31T00:27:35Z",
        "merged_at": null,
        "body": "Upgrade Bazel 4 tests to use an image properly parameterized on Bazel version\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 557,
        "deletions": 87,
        "changed_files": 23,
        "created_at": "2023-01-28T09:55:54Z",
        "closed_at": "2023-02-14T00:15:48Z",
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 358,
        "deletions": 76,
        "changed_files": 12,
        "created_at": "2023-01-28T03:23:01Z",
        "closed_at": "2023-02-01T02:11:54Z",
        "merged_at": null,
        "body": "This is a proof of concept that we can experiment with before migrating all of our Kokoro tests to GHA.  In addition to the migration, this builds out infrastructure for safe handling of both external and internal contributions.  Two of the existing GHA workflows have also been migrated to this system to unify how we handle testing.\r\n\r\nTo test the new workflow introduced here, you can open PRs to the `gha` branch.  This feature branch acts as a staging area for GHA.  PRs opened up from this repo will automatically have all tests run on each commit.  We will also run them all as post-submits, and continuously on a daily schedule.  PRs opened from forked repos will need per-commit approval for each test run, which can be given by adding the `safe for tests` label.\r\n\r\nExamples (failures are intentional to show that the PR code is being tested):\r\n  - Internal PR: https://github.com/protocolbuffers/protobuf/pull/11679\r\n  - Fork PR (approved): https://github.com/protocolbuffers/protobuf/pull/11685\r\n  - Fork PR (rejected): https://github.com/protocolbuffers/protobuf/pull/11683\r\n  - External PR: https://github.com/protocolbuffers/protobuf/pull/11695\r\n\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2023-01-28T02:54:08Z",
        "closed_at": "2023-02-15T20:42:30Z",
        "merged_at": null,
        "body": "Internal changes to extensions\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 80,
        "deletions": 22,
        "changed_files": 7,
        "created_at": "2023-01-28T02:48:11Z",
        "closed_at": "2023-02-14T00:15:47Z",
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 300,
        "deletions": 0,
        "changed_files": 4,
        "created_at": "2023-01-28T00:59:25Z",
        "closed_at": "2023-08-25T21:15:29Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 249,
        "deletions": 0,
        "changed_files": 4,
        "created_at": "2023-01-28T00:38:13Z",
        "closed_at": "2023-08-25T21:15:31Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 17,
        "changed_files": 3,
        "created_at": "2023-01-28T00:37:51Z",
        "closed_at": "2023-02-28T21:01:09Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 342,
        "deletions": 18,
        "changed_files": 12,
        "created_at": "2023-01-27T23:08:30Z",
        "closed_at": "2023-02-14T00:15:46Z",
        "merged_at": null,
        "body": null,
        "comments": 1
    },
    {
        "merged": false,
        "additions": 363,
        "deletions": 0,
        "changed_files": 5,
        "created_at": "2023-01-27T19:34:53Z",
        "closed_at": "2023-02-16T23:12:31Z",
        "merged_at": null,
        "body": "Internal change that helps identify the origin of reflection calls.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-01-27T17:17:50Z",
        "closed_at": "2023-01-31T15:44:25Z",
        "merged_at": null,
        "body": "[ObjC] Provide NSCopying on all GPB*Descriptor objects.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2023-01-27T16:24:41Z",
        "closed_at": "2023-01-27T17:55:35Z",
        "merged_at": null,
        "body": "Make C# tests more robust against variations due to internal/external builds.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 645,
        "deletions": 2,
        "changed_files": 8,
        "created_at": "2023-01-27T15:16:46Z",
        "closed_at": "2023-02-01T17:53:48Z",
        "merged_at": null,
        "body": "Add C++ support for retention attribute\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 326,
        "deletions": 3,
        "changed_files": 6,
        "created_at": "2023-01-27T14:28:29Z",
        "closed_at": "2023-02-08T19:40:59Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 233,
        "deletions": 3,
        "changed_files": 6,
        "created_at": "2023-01-27T03:42:58Z",
        "closed_at": "2023-08-25T21:15:33Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 345,
        "deletions": 18,
        "changed_files": 12,
        "created_at": "2023-01-27T00:17:01Z",
        "closed_at": "2023-02-14T00:15:45Z",
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 344,
        "deletions": 18,
        "changed_files": 12,
        "created_at": "2023-01-26T22:10:23Z",
        "closed_at": "2023-02-14T00:15:45Z",
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-01-26T21:56:54Z",
        "closed_at": "2023-02-08T19:40:35Z",
        "merged_at": null,
        "body": "Use \"inline thread_local\" where supported.\n\nThis removes a dependent load: https://gcc.godbolt.org/z/Trf9zqaGf\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 81,
        "deletions": 5,
        "changed_files": 8,
        "created_at": "2023-01-26T21:31:28Z",
        "closed_at": "2023-01-27T23:21:12Z",
        "merged_at": null,
        "body": "[ObjC] Mark classes that shouldn't be subclassed as such.\n\nSeveral of the classes vended by the runtime don't really support subclassing,\nso mark them as such to get compiler enforcement just in case.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 405,
        "deletions": 76,
        "changed_files": 14,
        "created_at": "2023-01-26T21:19:39Z",
        "closed_at": "2023-02-14T00:15:44Z",
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 21,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-01-26T21:02:49Z",
        "closed_at": "2023-01-27T19:28:53Z",
        "merged_at": null,
        "body": "[ObjC] Make GPBFileDescriptor better meet NSObject requirements.\n\nSince it really just wraps some basic types, there are lots of instances\nthat are actually the same content wise, so to better match the contract\nfor NSObject it should compare the fields.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1271,
        "deletions": 616,
        "changed_files": 33,
        "created_at": "2023-01-26T20:53:06Z",
        "closed_at": "2023-08-25T21:15:35Z",
        "merged_at": null,
        "body": "internal change\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 12,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2023-01-26T19:11:58Z",
        "closed_at": "2023-02-01T19:22:40Z",
        "merged_at": null,
        "body": "Allow parsing doubles with unary + prefix\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-01-26T16:48:48Z",
        "closed_at": "2023-01-27T04:12:15Z",
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 39,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2023-01-26T16:29:00Z",
        "closed_at": "2023-03-07T19:22:13Z",
        "merged_at": null,
        "body": "Fixes #6178\r\n\r\n- Add a new option `enums_as_integers` to emit enum as integer value.",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 487,
        "deletions": 1176,
        "changed_files": 4,
        "created_at": "2023-01-26T02:26:16Z",
        "closed_at": "2023-01-26T18:02:33Z",
        "merged_at": null,
        "body": "Remove noisy LOG statement in Message Differencer\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-01-25T23:23:27Z",
        "closed_at": "2023-01-26T19:45:01Z",
        "merged_at": null,
        "body": "This is part of an incoming series of PR's intended to support what I call \"unified_protos\" (unifying the C++ runtime with the Python runtime for protobufs). My approach will not be in the way that the code currently seems to require (a statically linked python executable with all C++ protos and C-extensions linked into it), but through building a shared library for every C++ proto (via `cc_shared_library`) and loading them (in the post_imports hook) in the generated Python code and using an aspect to make them dynamic_deps for C extensions. This allows Python code and C/C++ code to pass protobufs back-and-forth without serializing/deserializing them.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 287,
        "deletions": 160,
        "changed_files": 4,
        "created_at": "2023-01-25T23:10:20Z",
        "closed_at": "2023-01-26T01:48:35Z",
        "merged_at": null,
        "body": null,
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-01-25T22:49:07Z",
        "closed_at": "2023-01-26T20:42:27Z",
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-01-25T20:28:12Z",
        "closed_at": "2023-08-25T21:15:37Z",
        "merged_at": null,
        "body": "Return constant Value objects for true, false, and \"\"\n\nThese instances are all identical and proto build overhead + GC overhead can be avoided by returning constants.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 16,
        "changed_files": 4,
        "created_at": "2023-01-25T16:49:31Z",
        "closed_at": "2023-01-25T20:05:10Z",
        "merged_at": null,
        "body": "Remove Abseil patch in tests and bump our Bazel version to 20230125.rc3\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-01-25T16:39:23Z",
        "closed_at": "2023-01-25T17:41:07Z",
        "merged_at": "2023-01-25T17:41:06Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 294,
        "deletions": 6,
        "changed_files": 6,
        "created_at": "2023-01-25T15:00:01Z",
        "closed_at": "2023-01-30T21:40:23Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 27,
        "deletions": 15,
        "changed_files": 2,
        "created_at": "2023-01-25T14:52:50Z",
        "closed_at": "2023-02-01T17:36:51Z",
        "merged_at": null,
        "body": "Prototype CL\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 67,
        "deletions": 31,
        "changed_files": 3,
        "created_at": "2023-01-25T04:52:39Z",
        "closed_at": "2023-01-25T18:13:36Z",
        "merged_at": null,
        "body": "Automated rollback of commit 5bbc6fc6aa2360149550ab009962523129c886fe.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 64,
        "deletions": 45,
        "changed_files": 6,
        "created_at": "2023-01-25T02:57:56Z",
        "closed_at": "2023-01-25T19:24:26Z",
        "merged_at": null,
        "body": "Introduce `AllocateAtLeast()`\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 20,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2023-01-25T02:28:03Z",
        "closed_at": "2023-01-25T16:33:54Z",
        "merged_at": "2023-01-25T16:33:54Z",
        "body": "Closes https://github.com/protocolbuffers/protobuf/issues/11430",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 39,
        "changed_files": 3,
        "created_at": "2023-01-25T02:04:20Z",
        "closed_at": "2023-01-31T21:13:38Z",
        "merged_at": null,
        "body": "When generating Ruby clients for proto3 messages that have a oneof, we generate a hazzer for members of the oneof, not just a hazzer for the oneof itself.\r\n\r\nIn other words, for a proto like this:\r\n\r\n```\r\nsyntax = \"proto3\";\r\nmessage Foo {\r\n  oneof bar {\r\n    string baz = 1;\r\n  }\r\n}\r\n```\r\n\r\nThe generated `Foo` will now have a method called `has_baz?`, in addition to the (pre-existing) method `has_bar?`.\r\n\r\nI updated the unit tests, and verified that all the tests under `//ruby/...` pass.\r\n\r\nFixes https://github.com/protocolbuffers/protobuf/issues/9561.",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 45,
        "deletions": 64,
        "changed_files": 6,
        "created_at": "2023-01-25T01:28:47Z",
        "closed_at": "2023-01-25T02:53:29Z",
        "merged_at": null,
        "body": "Automated rollback of commit 6d09e2c80a6481ddebd5265a83b01a62b240a667.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-01-24T23:30:11Z",
        "closed_at": "2023-01-26T19:16:43Z",
        "merged_at": null,
        "body": "Add test coverage for `AllocateAtLeast()`\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 161,
        "deletions": 68,
        "changed_files": 4,
        "created_at": "2023-01-24T23:26:04Z",
        "closed_at": "2023-02-07T15:41:00Z",
        "merged_at": null,
        "body": "Move the reserved field number check into protoc and remove it from the\nruntime.\nThe runtime should work with all the fields, so that older binaries can load\ndescriptors made by newer protoc.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 142,
        "deletions": 77,
        "changed_files": 12,
        "created_at": "2023-01-24T22:26:45Z",
        "closed_at": "2023-01-27T04:14:46Z",
        "merged_at": null,
        "body": "[ObjC] Ensure the internal FileDescriptor creation is thread safe.\n\nWhen a file only has one message, then GPBMessage +initialize will call\n+descriptor, and the generate FileDescriptor function will be called safely\nto cache the singleton.\n\nBut if there are 2+ messages in a given .proto file, it is possible for\nthreaded calling code to trigger the +initialize on the two generated\nmessage classes causing a rance to the FileDescriptor function. Nothing\nwould leak, but it is possible for the messages to end up on different\ninstances which probably isn't expected.\n\nFor the 2+ message case, atomic are used to ensure the FileDescriptor is a\nsingleton.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 15,
        "deletions": 21,
        "changed_files": 3,
        "created_at": "2023-01-24T22:25:26Z",
        "closed_at": "2023-01-25T00:51:10Z",
        "merged_at": null,
        "body": "Migrate std::string_view usage to absl::string_view.\n\nThis is a no-op in C++17 and newer, but adds the ability to use string_view pre-C++17.\n\nCloses https://github.com/protocolbuffers/protobuf/issues/11627\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 15,
        "changed_files": 5,
        "created_at": "2023-01-24T18:50:10Z",
        "closed_at": "2023-01-25T18:58:35Z",
        "merged_at": null,
        "body": "Migrating downstream error collectors to use the new string_view overrides.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 67,
        "deletions": 61,
        "changed_files": 25,
        "created_at": "2023-01-24T18:42:53Z",
        "closed_at": "2023-01-26T19:39:11Z",
        "merged_at": null,
        "body": "[ObjC] Loosen the link between generate messages and roots.\n\nThe root class only needs to be started up if the message scopes extensions.\nThis updates the startup flows so the root is only started when the message\nscopes extensions and thus the runtime requires that startup.\n\nBump the generated source version to account for the new initializer that\ndoesn't take the rootClass argument.\n\nFix typo while at it.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 135,
        "deletions": 132,
        "changed_files": 11,
        "created_at": "2023-01-24T18:41:37Z",
        "closed_at": "2023-01-25T18:21:05Z",
        "merged_at": null,
        "body": "Migrating downstream error collectors to use the new string_view overrides.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 64,
        "deletions": 45,
        "changed_files": 6,
        "created_at": "2023-01-24T17:03:58Z",
        "closed_at": "2023-01-25T00:40:23Z",
        "merged_at": null,
        "body": "Introduce `AllocateAtLeast()`\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 16,
        "changed_files": 1,
        "created_at": "2023-01-24T16:02:15Z",
        "closed_at": "2023-01-25T03:50:27Z",
        "merged_at": null,
        "body": "Change AllocateInternal to allow us to easy specialize for std::string or absl::Cord\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 172,
        "deletions": 7,
        "changed_files": 7,
        "created_at": "2023-01-24T15:44:19Z",
        "closed_at": "2023-02-08T19:40:46Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-01-24T03:50:09Z",
        "closed_at": "2023-01-24T20:22:27Z",
        "merged_at": null,
        "body": "Deprecate ClearedCount\n\nThis will be removed in a future release along with the rest of the \"cleared\" API\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-01-23T23:51:57Z",
        "closed_at": "2023-01-24T00:52:57Z",
        "merged_at": null,
        "body": "Test Bazel 4 tests\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-01-23T22:44:29Z",
        "closed_at": "2023-01-24T18:15:32Z",
        "merged_at": "2023-01-24T18:15:32Z",
        "body": "Closes #11430",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 24,
        "deletions": 2,
        "changed_files": 5,
        "created_at": "2023-01-23T20:32:19Z",
        "closed_at": "2023-01-31T21:18:54Z",
        "merged_at": null,
        "body": "Internal changes to extensions.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 34,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2023-01-23T20:15:40Z",
        "closed_at": "2023-01-27T20:05:14Z",
        "merged_at": null,
        "body": "Fix reflection based parser for map entries with closed enum values.\nIf the value of the parsed enum is unknown, the whole entry has to be moved to\nthe unknown field set.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-01-23T19:52:00Z",
        "closed_at": "2023-01-23T20:56:45Z",
        "merged_at": null,
        "body": "Breaking Change: Switch to releasing ruby source gems only. \n\nThis was pre-announced in https://protobuf.dev/news/2022-08-03/#gems.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 39,
        "deletions": 11,
        "changed_files": 1,
        "created_at": "2023-01-23T16:19:06Z",
        "closed_at": "2023-01-24T15:51:03Z",
        "merged_at": null,
        "body": "[ObjC] Merge extension ranges that are continues.\n\nCan result in a small reduction in binary size as well as slight performance\nimprovement during serialization since it is less subcalls for writing out any\nextensions in the ranges.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 298,
        "deletions": 89,
        "changed_files": 5,
        "created_at": "2023-01-23T14:22:26Z",
        "closed_at": "2023-01-25T04:37:20Z",
        "merged_at": null,
        "body": "Add retention and target field options in descriptor.proto\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-01-21T17:07:04Z",
        "closed_at": "2023-01-23T04:00:48Z",
        "merged_at": null,
        "body": "Breaking Change: `proto2::Map::value_type` changes to `std::pair<const K, V>`.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1993,
        "deletions": 2539,
        "changed_files": 234,
        "created_at": "2023-01-21T01:23:02Z",
        "closed_at": "2023-01-25T05:51:25Z",
        "merged_at": null,
        "body": "Breaking change: Migrate to Abseil's logging library.\n\nThis deletes our old branches of internal Abseil code in favor of their newly open-sourced library.  Notably, this removes the ability to turn CHECK crashes into exceptions.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-01-21T00:52:22Z",
        "closed_at": "2023-01-21T05:43:15Z",
        "merged_at": "2023-01-21T05:43:15Z",
        "body": null,
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-01-21T00:05:44Z",
        "closed_at": "2023-01-21T03:07:34Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 389,
        "deletions": 357,
        "changed_files": 6,
        "created_at": "2023-01-20T23:43:01Z",
        "closed_at": "2023-01-24T15:53:32Z",
        "merged_at": null,
        "body": "RepeatedField dup\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 63,
        "deletions": 169,
        "changed_files": 4,
        "created_at": "2023-01-20T23:08:44Z",
        "closed_at": "2023-01-21T02:41:49Z",
        "merged_at": null,
        "body": "sh_binary doesn't treat its data dependencies correctly prior to Bazel 6 (see https://github.com/mkruskal-google/protobuf/pull/new/ruby_release)",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 62,
        "deletions": 65,
        "changed_files": 8,
        "created_at": "2023-01-20T21:40:03Z",
        "closed_at": "2023-08-25T21:15:39Z",
        "merged_at": null,
        "body": "Automated rollback of commit 67ac9eb4e93552033b57b7b817da962ba529d9db.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-01-20T20:36:39Z",
        "closed_at": "2023-01-24T20:00:37Z",
        "merged_at": null,
        "body": "Fix bool parser for map entries to look at the whole 64-bit varint and not just\nthe first 32 bits.\nThis is the expected narrowing for bool fields.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-01-20T18:06:58Z",
        "closed_at": "2023-01-20T20:34:16Z",
        "merged_at": null,
        "body": "Migrate away from examining the syntax of a proto file via reflection.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-01-20T17:17:30Z",
        "closed_at": "2023-01-20T19:20:43Z",
        "merged_at": null,
        "body": "[ObjC] Put all enums into one file in multi file mode.\n\nSince dead stripping is completely safe with C symbols and enums only generate C\nfunctions, stick them all in one file to slightly reduce the potential cost of\nmulti file generation.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-01-20T15:14:45Z",
        "closed_at": "2023-10-06T07:58:28Z",
        "merged_at": null,
        "body": null,
        "comments": 1
    },
    {
        "merged": false,
        "additions": 413,
        "deletions": 178,
        "changed_files": 5,
        "created_at": "2023-01-20T00:46:17Z",
        "closed_at": "2023-01-23T18:37:27Z",
        "merged_at": null,
        "body": "Make TDP accept and discard garbage non-continuation bits on the 10th byte of a varint.\nThis is the behavior of the codegen parser and the reflection parser.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-01-20T00:34:13Z",
        "closed_at": "2023-01-20T01:40:48Z",
        "merged_at": null,
        "body": "Declare [[nodiscard]] before [[deprecated]] to fix clang-16 breakage.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4781,
        "deletions": 0,
        "changed_files": 40,
        "created_at": "2023-01-20T00:14:59Z",
        "closed_at": "2023-01-20T02:11:44Z",
        "merged_at": "2023-01-20T02:11:44Z",
        "body": "This will make the CMake workflow easier, where users won't need to either install utf8_range or initialize our submodules.  Since this is a relatively small library that's owned by us, we can just bundle it with protobuf as a subtree",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-01-19T23:51:37Z",
        "closed_at": "2023-01-21T00:18:34Z",
        "merged_at": "2023-01-21T00:18:34Z",
        "body": "internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-01-19T23:38:38Z",
        "closed_at": "2023-01-20T00:41:40Z",
        "merged_at": null,
        "body": "The `[[nodiscard]]` attribute seemingly needs to come before `__attribute__((deprecated(foo)))`.\r\n\r\nError:\r\n\r\n```\r\nIn file included from external/com_google_protobuf/src/google/protobuf/compiler/subprocess.cc:52:\r\nIn file included from bazel-out/k8-opt-exec-2B5CBBC6/bin/external/com_google_protobuf/src/google/protobuf/_virtual_includes/protobuf_nowkt/google/protobuf/message.h:126:\r\nIn file included from bazel-out/k8-opt-exec-2B5CBBC6/bin/external/com_google_protobuf/src/google/protobuf/_virtual_includes/protobuf_nowkt/google/protobuf/generated_message_reflection.h:50:\r\nIn file included from bazel-out/k8-opt-exec-2B5CBBC6/bin/external/com_google_protobuf/src/google/protobuf/_virtual_includes/protobuf_nowkt/google/protobuf/unknown_field_set.h:52:\r\nIn file included from bazel-out/k8-opt-exec-2B5CBBC6/bin/external/com_google_protobuf/src/google/protobuf/_virtual_includes/protobuf_lite/google/protobuf/parse_context.h:47:\r\nIn file included from bazel-out/k8-opt-exec-2B5CBBC6/bin/external/com_google_protobuf/src/google/protobuf/_virtual_includes/protobuf_lite/google/protobuf/implicit_weak_message.h:39:\r\nIn file included from bazel-out/k8-opt-exec-2B5CBBC6/bin/external/com_google_protobuf/src/google/protobuf/_virtual_includes/protobuf_lite/google/protobuf/repeated_field.h:61:\r\nbazel-out/k8-opt-exec-2B5CBBC6/bin/external/com_google_protobuf/src/google/protobuf/_virtual_includes/protobuf_lite/google/protobuf/repeated_ptr_field.h:1164:3: error: 'nodiscard' attribute cannot be applied to types\r\n  PROTOBUF_NODISCARD Element* ReleaseCleared();\r\n  ^\r\nbazel-out/k8-opt-exec-2B5CBBC6/bin/external/com_google_protobuf/src/google/protobuf/_virtual_includes/port_def/google/protobuf/port_def.inc:558:30: note: expanded from macro 'PROTOBUF_NODISCARD'\r\n#define PROTOBUF_NODISCARD [[nodiscard]]\r\n                             ^\r\n1 error generated.\r\n```",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 9,
        "changed_files": 4,
        "created_at": "2023-01-19T22:33:22Z",
        "closed_at": "2023-01-20T21:13:20Z",
        "merged_at": null,
        "body": "Remove RTTI checks for DefaultFieldComparator.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 35,
        "changed_files": 6,
        "created_at": "2023-01-19T22:18:07Z",
        "closed_at": "2023-01-20T00:38:26Z",
        "merged_at": null,
        "body": "Breaking Change: Mark final ZeroCopyInputStream, ZeroCopyOutputStream, and DefaultFieldComparator classes.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-01-19T22:07:32Z",
        "closed_at": "2023-02-09T18:53:31Z",
        "merged_at": null,
        "body": "Refactor enum_field.cc to use Emit().\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 11,
        "changed_files": 1,
        "created_at": "2023-01-19T19:42:32Z",
        "closed_at": "2023-01-21T00:47:58Z",
        "merged_at": null,
        "body": "Find all source files inside the csharp directory. We have to prepopulate this directory anyway, so we can put the .proto files directly into the csharp directory.\r\n\r\nThe current setup can find the files in linux, but for some reason it isn't copying them correctly unless the files are in the csharp folder",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-01-19T19:31:07Z",
        "closed_at": "2023-01-19T23:16:10Z",
        "merged_at": null,
        "body": "Automated rollback of commit 08b97c3120af0b397f8cc0c7717649360cfc6634.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3127,
        "deletions": 2968,
        "changed_files": 15,
        "created_at": "2023-01-19T18:38:47Z",
        "closed_at": "2023-02-08T18:52:21Z",
        "merged_at": null,
        "body": "Refactor string_field.cc to use Emit().\n\nThis CL also includes some cleanups to the core FieldVars function, and eliminates what had long-since become vestigial functions for setting variables. This needs to be part of the same CL because those functions used string_view-keyed maps.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2023-01-19T18:19:17Z",
        "closed_at": "2023-01-19T20:13:31Z",
        "merged_at": null,
        "body": "Automated rollback of commit f60f478f45143b74158380528cb757509d627592.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 233,
        "deletions": 51,
        "changed_files": 3,
        "created_at": "2023-01-19T18:11:30Z",
        "closed_at": "2023-08-25T21:15:41Z",
        "merged_at": null,
        "body": "Add Cord support to UnknownFieldSet\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-01-19T17:35:16Z",
        "closed_at": "2023-01-20T15:55:14Z",
        "merged_at": null,
        "body": "Fix a bug in which a possibly invalidated swisstable reference is used.\n\nThe hashtable could have rehashed and invalidated the reference.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 858,
        "deletions": 7,
        "changed_files": 14,
        "created_at": "2023-01-19T14:32:29Z",
        "closed_at": "2023-08-25T21:15:43Z",
        "merged_at": null,
        "body": "Enable CORD field types.\n\nThis change enables annotating string and byte fields as using ctype CORD, which will result in the generated message code to use absl::Cord for the underlying storage type and accessor functions. This feature is intended to be used on fields with large payloads as there is a (slight) overhead for managing small data as Cords instead of as plain string data.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 20,
        "changed_files": 2,
        "created_at": "2023-01-19T12:47:44Z",
        "closed_at": "2023-03-28T19:37:54Z",
        "merged_at": null,
        "body": "Internal change only\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 816,
        "changed_files": 1,
        "created_at": "2023-01-19T10:23:09Z",
        "closed_at": "2023-08-25T21:15:45Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2023-01-19T06:05:33Z",
        "closed_at": "2023-01-19T19:17:25Z",
        "merged_at": null,
        "body": "This PR adds pre-compiled Ruby binaries for Ruby 3.2. Note that such binaries are already available on other Ruby versions.\r\n\r\nFixes issues:\r\n- https://github.com/protocolbuffers/protobuf/issues/11578\r\n- https://github.com/protocolbuffers/protobuf/issues/11538\r\n\r\n(Those issues should not have been closed without a fix...)\r\n\r\nThe protobufs Ruby maintainers should get in the habit of updating this every year when there is a new Ruby release. Please set a calendar reminder to check in early Jan with the maintainers of `rake-compiler` gem; when they release cross-compilation support for the new Ruby version it's an easy change to add it to protobufs (can basically copy this PR.)",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-01-19T00:06:11Z",
        "closed_at": "2023-01-19T01:39:17Z",
        "merged_at": null,
        "body": "Clean up legacy CHANGES.txt.\n\nClarify some C++ breaking changes and remove Java test from changelogs.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-01-18T23:43:38Z",
        "closed_at": "2023-01-19T19:25:32Z",
        "merged_at": null,
        "body": "Deprecate repeated field cleared elements API.\n\nThis will be removed in a future release.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-01-18T20:15:36Z",
        "closed_at": "2023-01-19T16:25:14Z",
        "merged_at": null,
        "body": "Fix typo.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 280,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-01-18T19:56:29Z",
        "closed_at": "2023-08-25T21:15:47Z",
        "merged_at": null,
        "body": "Add absl::Cord reflection support for upcoming Cord field type support.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-01-18T19:48:02Z",
        "closed_at": "2023-01-25T16:31:07Z",
        "merged_at": null,
        "body": "Stop assuming lazy message sets are initialized.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 9,
        "changed_files": 2,
        "created_at": "2023-01-18T19:20:08Z",
        "closed_at": "2023-01-19T18:44:31Z",
        "merged_at": null,
        "body": "Breaking change: Make RepeatedField::GetArena non-const in order to support split RepeatedFields.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 704,
        "deletions": 7,
        "changed_files": 12,
        "created_at": "2023-01-18T16:27:14Z",
        "closed_at": "2023-08-25T21:15:49Z",
        "merged_at": null,
        "body": "Enable CORD field type\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 545,
        "deletions": 1,
        "changed_files": 5,
        "created_at": "2023-01-18T15:50:26Z",
        "closed_at": "2023-08-25T21:15:51Z",
        "merged_at": null,
        "body": "Add Cord support to WireFormat / WireFormatLite\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 23,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-01-18T15:45:43Z",
        "closed_at": "2023-01-18T20:01:18Z",
        "merged_at": null,
        "body": "Automated rollback of commit 112fa9440203c5ca2a25d297c150e8b25100b619.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 11,
        "changed_files": 4,
        "created_at": "2023-01-18T06:51:00Z",
        "closed_at": "2023-01-18T22:03:38Z",
        "merged_at": null,
        "body": "Enable new JSON field name conflict handling.\n\nThis will apply uniformly in both proto2 and proto3, taking into account `json_name` options.  See https://github.com/protocolbuffers/protobuf/pull/10750 for more details.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 183,
        "deletions": 16,
        "changed_files": 5,
        "created_at": "2023-01-18T05:17:05Z",
        "closed_at": "2023-02-02T22:59:11Z",
        "merged_at": null,
        "body": "Annotate string and message field semantics.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-01-18T03:47:18Z",
        "closed_at": "2023-01-18T06:01:07Z",
        "merged_at": null,
        "body": "Fixed a minor documentation error for the `Reflection` class.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 24,
        "deletions": 34,
        "changed_files": 2,
        "created_at": "2023-01-18T02:21:59Z",
        "closed_at": "2023-01-26T18:44:27Z",
        "merged_at": null,
        "body": "Clean up a few issues with ARM-optimized varint decoding.\n\n1) Move the check for invalid varint outside handling a >= 32 bit varint. This gives a modest speedup (+0.5%) on the [fleetbench protogen benchmark](https://github.com/google/fleetbench/tree/main/fleetbench/proto) by working around an LLVM issue which inserted a redundant branch.\n2) Move ValueBarrier() to parse_context.h so we can delete ForceToRegister(), which does the same thing as the single value ValueBarrier() implementation.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 70,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-01-18T01:51:53Z",
        "closed_at": "2023-01-18T16:08:16Z",
        "merged_at": null,
        "body": "Add EpsCopyInputStream::ReadCord() providing an efficient direct Cord API\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2023-01-17T17:18:09Z",
        "closed_at": "2023-01-18T20:12:56Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2023-01-17T16:02:27Z",
        "closed_at": "2023-01-17T21:37:49Z",
        "merged_at": null,
        "body": "[DO NOT SUBMIT] What change to cause these compilation failures on Kokoro?\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 281,
        "deletions": 356,
        "changed_files": 4,
        "created_at": "2023-01-17T15:28:47Z",
        "closed_at": "2023-08-25T21:15:53Z",
        "merged_at": null,
        "body": "Add memory sanitizer to absl::Cord\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 39,
        "deletions": 175,
        "changed_files": 4,
        "created_at": "2023-01-17T01:27:13Z",
        "closed_at": "2023-01-17T22:56:00Z",
        "merged_at": null,
        "body": "Remove mathutil stub.\n\nThis reduces the implementation to our much narrower current use-cases, hardcoded directly where we need it.  It also unifies google3 and OSS behavior, which may have deviated over time.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 390,
        "deletions": 358,
        "changed_files": 6,
        "created_at": "2023-01-16T17:22:17Z",
        "closed_at": "2023-01-24T01:21:19Z",
        "merged_at": null,
        "body": "Change RepeatedField to create only 'current' elements, not 'total' elements.\n\nCurrently RepeatedField allocates and constructs all elements on 'Reserve'. This creates inefficiencies, but more problematically, leads to sanitizer issues once we have instances that actively poison their private contents such as Cord. This change fixes RepeatedField to only create actually 'live' elements.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 51,
        "deletions": 27,
        "changed_files": 2,
        "created_at": "2023-01-16T15:52:24Z",
        "closed_at": "2023-08-25T21:15:55Z",
        "merged_at": null,
        "body": "I assume that in this test if one channel index is 1 we can assume that the other one is 0.\nSo we can just remove \"channel: 0\" check from Partially function.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-01-16T07:40:38Z",
        "closed_at": "2023-01-18T23:28:42Z",
        "merged_at": null,
        "body": "Migrate std::operator+ to Abseil helpers in Java compiler directory.\n\nThis also opportunistically migrates many C-style and STL strings to string_view in touched code.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-01-16T07:32:56Z",
        "closed_at": "2023-01-18T06:10:20Z",
        "merged_at": null,
        "body": "Migrate std::operator+ to Abseil helpers in Objective-c compiler directory.\n\nThis also opportunistically migrates many C-style and STL strings to string_view in touched code.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 229,
        "deletions": 204,
        "changed_files": 9,
        "created_at": "2023-01-16T07:30:08Z",
        "closed_at": "2023-01-18T22:12:36Z",
        "merged_at": null,
        "body": "Migrate std::operator+ to Abseil helpers in Ruby/PHP/Python compiler directories.\n\nThis also opportunistically migrates many C-style and STL strings to string_view in touched code.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 477,
        "deletions": 430,
        "changed_files": 12,
        "created_at": "2023-01-16T06:52:18Z",
        "closed_at": "2023-01-18T01:31:22Z",
        "merged_at": null,
        "body": "Migrate std::operator+ to Abseil helpers in C++ runtime directory.\n\nThis also opportunistically migrates many C-style and STL strings to string_view in touched code.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 126,
        "deletions": 110,
        "changed_files": 12,
        "created_at": "2023-01-16T06:35:34Z",
        "closed_at": "2023-01-18T05:58:43Z",
        "merged_at": null,
        "body": "Migrate std::operator+ to Abseil helpers in C# compiler directory.\n\nThis also opportunistically migrates many C-style and STL strings to string_view in touched code.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-01-16T06:34:25Z",
        "closed_at": "2023-01-18T02:13:59Z",
        "merged_at": null,
        "body": "Migrate std::operator+ to Abseil helpers in C++ compiler directory.\n\nThis also opportunistically migrates many C-style and STL strings to string_view in touched code.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-01-15T05:40:11Z",
        "closed_at": "2023-01-18T21:13:57Z",
        "merged_at": null,
        "body": "Add DescriptorPool-level opt-out for new JSON field name handling.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-01-15T02:35:21Z",
        "closed_at": "2023-08-25T21:15:58Z",
        "merged_at": null,
        "body": "Update port_def.inc\nReplace #if pragma with #ifdef to prevent Werror=undef for projects using -Wundef compiler options.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-01-15T00:26:34Z",
        "closed_at": "2023-01-19T20:21:52Z",
        "merged_at": null,
        "body": "Set up string_view migration for error collector classes.\n\nWe will continue to support the deprecated versions for the time being, but users should migrate to the string_view alternatives.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 321,
        "deletions": 53,
        "changed_files": 5,
        "created_at": "2023-01-14T00:36:46Z",
        "closed_at": "2023-08-25T21:16:00Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 69,
        "deletions": 28,
        "changed_files": 3,
        "created_at": "2023-01-13T22:15:12Z",
        "closed_at": "2023-01-14T09:07:55Z",
        "merged_at": null,
        "body": "Open-source generated string_view field methods.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-01-13T21:33:32Z",
        "closed_at": "2023-01-17T17:45:52Z",
        "merged_at": null,
        "body": "[ObjC] Ensure more uniqueness on generated internal function name.\n\nIn the multi file case, the function to get the file descriptor has to be\nreferenced from multiple generated source, so it can't be `static`, ensure the\nname is more unique to avoid issues.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-01-13T19:53:00Z",
        "closed_at": "2023-01-17T21:27:48Z",
        "merged_at": null,
        "body": "Add static asserts to container classes.\n\nThis will prevent unsupported uses of these classes downstream, which can behave surprisingly and increase the friction of changes to protobuf.  Specifically RepeatedField, RepeatedPtrField, and Map will only be allowed to hold the types listed in https://protobuf.dev/programming-guides/proto.  The old behavior allowed them to hold just about anything, including custom user types.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-01-13T19:25:25Z",
        "closed_at": "2023-01-17T15:31:55Z",
        "merged_at": null,
        "body": "Misc lint fixes.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 10,
        "changed_files": 1,
        "created_at": "2023-01-13T17:48:09Z",
        "closed_at": "2023-01-17T08:20:39Z",
        "merged_at": null,
        "body": "Delete unused zigzag decoder helpers.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2489,
        "deletions": 1034,
        "changed_files": 11,
        "created_at": "2023-01-13T17:39:24Z",
        "closed_at": "2023-01-14T08:11:27Z",
        "merged_at": null,
        "body": "Bump protobuf to latest upb version.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 13,
        "changed_files": 2,
        "created_at": "2023-01-13T17:32:32Z",
        "closed_at": "2023-01-14T00:56:24Z",
        "merged_at": null,
        "body": "Automated rollback of commit 9244d121b49f88645234098ae59d28a0ca1f90e4.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-01-13T08:03:17Z",
        "closed_at": "2023-01-16T10:30:17Z",
        "merged_at": null,
        "body": "Regenerate C# files as part of staleness checks\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 31,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2023-01-13T02:26:54Z",
        "closed_at": "2023-02-08T19:39:53Z",
        "merged_at": null,
        "body": "[PROOF OF CONCEPT] absl::Prefetch*\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 51,
        "deletions": 27,
        "changed_files": 2,
        "created_at": "2023-01-13T01:42:37Z",
        "closed_at": "2023-08-25T21:16:02Z",
        "merged_at": null,
        "body": "internal change\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 937,
        "deletions": 48,
        "changed_files": 18,
        "created_at": "2023-01-13T00:42:25Z",
        "closed_at": "2023-03-01T17:18:40Z",
        "merged_at": null,
        "body": "Add mini-parse support for map fields to table-driven parser.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 99,
        "deletions": 88,
        "changed_files": 1,
        "created_at": "2023-01-12T22:22:30Z",
        "closed_at": "2023-08-25T21:16:04Z",
        "merged_at": null,
        "body": "Internal Change\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 22,
        "deletions": 13,
        "changed_files": 2,
        "created_at": "2023-01-12T06:44:39Z",
        "closed_at": "2023-08-25T21:16:06Z",
        "merged_at": null,
        "body": "varint arm\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 51,
        "deletions": 27,
        "changed_files": 2,
        "created_at": "2023-01-12T05:50:53Z",
        "closed_at": "2023-08-25T21:16:08Z",
        "merged_at": null,
        "body": "internal change\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 51,
        "deletions": 27,
        "changed_files": 2,
        "created_at": "2023-01-12T05:04:18Z",
        "closed_at": "2023-08-25T21:16:10Z",
        "merged_at": null,
        "body": "internal change\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 51,
        "deletions": 27,
        "changed_files": 2,
        "created_at": "2023-01-12T04:27:08Z",
        "closed_at": "2023-08-25T21:16:12Z",
        "merged_at": null,
        "body": "internal change\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 51,
        "deletions": 27,
        "changed_files": 2,
        "created_at": "2023-01-12T04:18:29Z",
        "closed_at": "2023-08-24T22:26:59Z",
        "merged_at": null,
        "body": "internal change\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 30,
        "deletions": 54,
        "changed_files": 2,
        "created_at": "2023-01-12T03:47:17Z",
        "closed_at": "2023-08-25T21:16:14Z",
        "merged_at": null,
        "body": "Internal change.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 72,
        "deletions": 35,
        "changed_files": 32,
        "created_at": "2023-01-12T02:30:42Z",
        "closed_at": "2023-01-13T00:10:17Z",
        "merged_at": null,
        "body": "Migrate docker images to the new Artifact Registry location.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 20,
        "changed_files": 2,
        "created_at": "2023-01-11T23:35:39Z",
        "closed_at": "2023-02-06T17:49:15Z",
        "merged_at": null,
        "body": "Internal change only\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 321,
        "deletions": 53,
        "changed_files": 5,
        "created_at": "2023-01-11T19:36:11Z",
        "closed_at": "2023-01-21T23:06:22Z",
        "merged_at": null,
        "body": "Roll-forward of: Add retention and target attributes to descriptor.proto\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-01-11T19:34:58Z",
        "closed_at": "2023-01-18T16:27:44Z",
        "merged_at": null,
        "body": "Do not crash when parsing Anys that contain a proto which is missing require fields.\n\nThis was a regression compared to the old parser.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-01-11T11:01:33Z",
        "closed_at": "2023-01-15T22:39:02Z",
        "merged_at": null,
        "body": "https://developers.google.com/protocol-buffers/ states that this site will be deprecated January 2023 and provides https://protobuf.dev/ as a link to the new location.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-01-11T06:02:41Z",
        "closed_at": "2023-01-11T17:27:11Z",
        "merged_at": null,
        "body": "Fix gcc warnings on main that cause build errors.\n\nThere are two issues here related to recent changes:\n1) Our extern declarations of common RepeatedField types were removed, allowing RepeatedField::Reserve to get inlined.  This results in an `array-bounds` warning from gcc due to our memcpy call.  We had an explicit comment that this method shouldn't be inlined, and that silences the warning.\n\n2) Using std::inserter with flat_hash_set::end() triggers a `maybe-uninitialized` warning from gcc.  This is likely an Abseil issue, and showed up recently as part of our effort to migrate to the more efficient Abseil containers.  Alternatively inserting into flat_hash_set::begin() works just fine and avoids this issue.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-01-11T03:51:34Z",
        "closed_at": "2023-01-17T21:13:16Z",
        "merged_at": null,
        "body": "Use absl::countl_zero rather than absl::bit_width, to save one instruction, and 4 bytes of x86 code, per use.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-01-11T01:36:49Z",
        "closed_at": "2023-01-15T22:44:44Z",
        "merged_at": null,
        "body": "```\n* (M) docs/options.md\n  - Add two addition field options that are used as markers for\n    specific YANG types in generated protobufs.\n```\n\nThis adds two additional unique `FieldOptions` field numbers for annotat YANG leaf-lists, and leaf-lists of unions that need specific handling in field option code. Definitions for these fields are in github.com/openconfig/ygygot, particularly https://github.com/openconfig/ygot/blob/master/proto/yext/yext.proto.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 167,
        "deletions": 103,
        "changed_files": 9,
        "created_at": "2023-01-11T01:18:46Z",
        "closed_at": "2023-01-13T11:18:51Z",
        "merged_at": null,
        "body": "Soft deprecate python MessageFactory\n\nSoft deprecate python MessageFactory. Added new replacement APIs GetMessageClass(descriptor) and GetMessagesFromFiles(files, pool)\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 44,
        "deletions": 35,
        "changed_files": 2,
        "created_at": "2023-01-10T23:57:49Z",
        "closed_at": "2023-01-17T19:20:59Z",
        "merged_at": null,
        "body": "Rename buffer_ to patch_buffer_ to clarify its role and reduce confusion with\nbuffer_end_.\n\nUse kPatchBufferSize to indicate the size of the patch buffer.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 32,
        "deletions": 6,
        "changed_files": 6,
        "created_at": "2023-01-10T23:57:35Z",
        "closed_at": "2023-01-19T18:29:03Z",
        "merged_at": null,
        "body": "internal changes\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 53,
        "deletions": 321,
        "changed_files": 5,
        "created_at": "2023-01-10T22:06:16Z",
        "closed_at": "2023-01-10T23:32:25Z",
        "merged_at": null,
        "body": "Automated rollback of commit 0517b71b259b206b4b2e036a62e6f24d6ad45084.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-01-10T22:01:09Z",
        "closed_at": "2023-01-11T03:43:25Z",
        "merged_at": null,
        "body": "Add missing test utility to CMake rules.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2023-01-10T21:47:40Z",
        "closed_at": "2023-01-10T23:45:54Z",
        "merged_at": null,
        "body": "Exempt PHP and C# from the new google.protobuf.Value conformance test case.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-01-10T21:29:07Z",
        "closed_at": "2023-01-11T17:19:13Z",
        "merged_at": null,
        "body": "Fix crash when attempting to parse a JSON document that contains an extension field for the wrong type of message.\n\nI.e., if foo.extn is an extension for message foo.Foo, attempting to parse the document\n  \n  {\"[foo.extn]\": 4}\n\nas a foo.Bar would crash. This CL causes the parser to return an error instead.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 50,
        "deletions": 34,
        "changed_files": 2,
        "created_at": "2023-01-10T20:10:25Z",
        "closed_at": "2023-01-10T21:44:12Z",
        "merged_at": null,
        "body": "Use LazyStringArrayList directly in gencode -- LazyStringArrayList tracks mutability internally, so we can use the current \"mutable bit\" as a \"has bit\" to potentially skip work on the field during build operations.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2023-01-10T19:56:12Z",
        "closed_at": "2023-08-25T21:16:15Z",
        "merged_at": null,
        "body": "Streaming EpsCopyInputStream for upb, factored into multiple layers\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 44,
        "deletions": 33,
        "changed_files": 2,
        "created_at": "2023-01-10T18:37:42Z",
        "closed_at": "2023-08-25T21:16:18Z",
        "merged_at": null,
        "body": "One-Line Change Description (used as GitHub Pull Request title)\n\nDetailed description...\n...text exposed to open source public git repo...\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2023-01-09T19:57:50Z",
        "closed_at": "2023-01-10T01:04:32Z",
        "merged_at": null,
        "body": "Delete unused code.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-01-09T19:09:46Z",
        "closed_at": "2023-01-11T23:56:08Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 85,
        "changed_files": 5,
        "created_at": "2023-01-09T16:22:54Z",
        "closed_at": "2023-08-25T21:16:20Z",
        "merged_at": null,
        "body": "Internal Change\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1020,
        "deletions": 2,
        "changed_files": 4,
        "created_at": "2023-01-09T12:58:33Z",
        "closed_at": "2023-06-06T13:53:50Z",
        "merged_at": null,
        "body": "- Added DynamicMessage functionality, following the similar usage and implementation pattern as other IMessage implementations\r\n  - To create \r\n`DynamicMessage dm = new DynamicMessage(desc);\r\n            dm.Add(\"single_string\", \"sss\");`\r\n  - To serialize\r\n`dm.WriteTo(outputStream);`\r\n  - To deserialize\r\n` deserializedDm = (DynamicMessage) dm.Parser.ParseFrom(inputStream)`\r\n  - The descriptor could not be made static, as every instance of DynamicMessage can have a separate descriptor. So the parser is also non-static.\r\n- Added support for unknown fields\r\n- Added Unit tests\r\n- Removed the workflow file\r\n- Removed the Builder pattern from DynamicMessage",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 91,
        "changed_files": 7,
        "created_at": "2023-01-08T22:33:36Z",
        "closed_at": "2023-08-25T21:16:22Z",
        "merged_at": null,
        "body": "Streaming EpsCopyInputStream for upb.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-01-08T16:25:19Z",
        "closed_at": "2023-01-15T00:03:29Z",
        "merged_at": "2023-01-15T00:03:29Z",
        "body": "GCC cannot infer that `LogMessage::Finish()` (called indirectly by `GOOGLE_LOG(FAIL)` in `AlignFail`) exits program when `level_ == LOGLEVEL_FATAL`. Compilation will create a warning in projects importing the library for debug builds. The attribute cannot be individually assigned to `LogMessage::Finish()` because it does return conditionally of the log level. Tried with GCC 9.3.0 and GCC 12.1.0.\r\n\r\nThis change adds an explicit abort() for compiler to clearly understand this does not return, and enables `[[noreturn]]` for MSVC as well.\r\n\r\nCherry-picked from: 1e9d43fe711b46bcb9bb82849d495f137c9d1ef8\r\nBackports PR-#10188 from 74abfe447",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-01-07T20:15:23Z",
        "closed_at": "2023-01-10T03:43:33Z",
        "merged_at": null,
        "body": "Fix `ZeroCopyCodedInputStream::ReadCord()`\n\n`ZeroCopyCodedInputStream::ReadCord()` is implemented in terms of `CodedInputStream::ReadCord()` which is incorrect: the contract for the interface method `ZeroCopyInputStream::ReadCord()` is that it appends to the provided cord output where `CodedInputStream::ReadCord()` sets the cord output value, clearing any pre-existing contents. This change fixes the internal implementation to append to any pre-existing contents.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 85,
        "changed_files": 5,
        "created_at": "2023-01-07T17:55:05Z",
        "closed_at": "2023-08-25T21:16:24Z",
        "merged_at": null,
        "body": "Remove runtime code paths for field stripping.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 132,
        "deletions": 111,
        "changed_files": 11,
        "created_at": "2023-01-07T16:30:38Z",
        "closed_at": "2023-01-10T18:01:02Z",
        "merged_at": null,
        "body": "VarInt Hacking with SLOP\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 85,
        "changed_files": 6,
        "created_at": "2023-01-07T15:54:01Z",
        "closed_at": "2023-01-11T17:14:43Z",
        "merged_at": null,
        "body": "Fix ZeroCopyCodedInputStream::ReadCord\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 30,
        "deletions": 4,
        "changed_files": 4,
        "created_at": "2023-01-06T23:20:27Z",
        "closed_at": "2023-01-09T23:57:55Z",
        "merged_at": null,
        "body": "Expect fail when serialize inf and nan for Value.number_value in json format. fixes #11259\n\nImplemented in java, c++, python and upb. Also added conformance test.\n\nhttps://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.Value\nwhere it says:\nattempting to serialize NaN or Infinity results in error. (We can't serialize these as string \"NaN\" or \"Infinity\" values like we do for regular fields, because they would parse as string_value, not number_value).\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 415,
        "deletions": 471,
        "changed_files": 2,
        "created_at": "2023-01-06T21:17:35Z",
        "closed_at": "2023-08-25T21:16:26Z",
        "merged_at": null,
        "body": "Internal change.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 417,
        "deletions": 473,
        "changed_files": 3,
        "created_at": "2023-01-06T20:41:44Z",
        "closed_at": "2023-01-10T18:16:02Z",
        "merged_at": null,
        "body": "Replace the word \"dummy\" with inclusive language\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-01-06T19:43:32Z",
        "closed_at": "2023-01-10T19:01:22Z",
        "merged_at": null,
        "body": "addresses #11243\r\n\r\nDefines `$key_type` in `MapFieldIter`, so as not to trigger PHP 8.2 warning. Note that this will change the visibility of `$key_type` from public in previous versions to private in this version. This is a breaking change, but anyone using `$key_type` in this way is misusing the library, so I think it's acceptable. ",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 22,
        "deletions": 22,
        "changed_files": 13,
        "created_at": "2023-01-06T19:42:44Z",
        "closed_at": "2023-01-10T01:17:14Z",
        "merged_at": null,
        "body": "Use \"#if GTEST_HAS_DEATH_TEST\" instead of \"#ifdef GTEST_HAS_DEATH_TEST\"\n\nThis is consistent with the example in gtest-port.h.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4280,
        "deletions": 153,
        "changed_files": 38,
        "created_at": "2023-01-06T19:41:49Z",
        "closed_at": "2023-07-18T14:50:47Z",
        "merged_at": null,
        "body": "Alternative to #10221 ",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-01-06T16:44:28Z",
        "closed_at": "2023-01-06T23:07:06Z",
        "merged_at": null,
        "body": "Create a helper function that can make a mutable copy of any ProtobufList\ninstance to replace the specialized versions.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 321,
        "deletions": 53,
        "changed_files": 5,
        "created_at": "2023-01-06T05:23:50Z",
        "closed_at": "2023-01-10T19:31:31Z",
        "merged_at": null,
        "body": "Add retention and target attributes to descriptor.proto\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-01-05T23:31:07Z",
        "closed_at": "2023-08-25T21:16:27Z",
        "merged_at": null,
        "body": "internal changes\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 437,
        "deletions": 611,
        "changed_files": 9,
        "created_at": "2023-01-05T22:16:28Z",
        "closed_at": "2023-01-09T17:00:29Z",
        "merged_at": null,
        "body": "Remove runtime code paths for field stripping.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-01-05T22:00:25Z",
        "closed_at": "2023-01-06T06:06:37Z",
        "merged_at": null,
        "body": "internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-01-05T21:13:18Z",
        "closed_at": "2023-01-06T23:11:59Z",
        "merged_at": null,
        "body": "Clean up repeated field shared library exports.\n\nThis removes the built in \"extern template\" declarations because they continue to cause issues in shared library builds.  Users who need this optimization can define it themselves.  This also adds PROTOBUF_EXPORT to some symbols that were previously missing it.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-01-05T19:00:12Z",
        "closed_at": "2023-01-11T20:38:43Z",
        "merged_at": null,
        "body": "Allow selection of system default C++ version.\n\nThis leaves the decision of which C++ version to use up to our users.  We still have a static_assert in port_def.inc that will prevent pre-C++14 usage.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 32,
        "changed_files": 2,
        "created_at": "2023-01-05T18:50:22Z",
        "closed_at": "2023-01-27T19:29:56Z",
        "merged_at": null,
        "body": "Remove FatalException object and make check-failures always abort instead.\nProtobuf code is generally not exception-safe so arbitrarily throwing from a\ncheck-failure can lead to invariant breaks, resource leaks, etc.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-01-05T18:22:06Z",
        "closed_at": "2023-01-06T23:11:11Z",
        "merged_at": null,
        "body": "Changes to Map class to support table-driven parser:\n - Add UntypedMapBase as a base class for all Map instances. Move all type independent methods to the base class.\n - Remove InnerMap and make Map itself provide the base classes.\n\nAlso, update some stale documentation.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 263,
        "deletions": 4,
        "changed_files": 9,
        "created_at": "2023-01-05T17:23:36Z",
        "closed_at": "2023-01-19T23:12:09Z",
        "merged_at": null,
        "body": "Add bazel targets to create ruby release artifacts.\r\n\r\nShould be run with:\r\n```\r\nbazel run ruby:release\r\nbazel run ruby:jruby_release \r\n```",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 375,
        "deletions": 1,
        "changed_files": 4,
        "created_at": "2023-01-05T17:06:35Z",
        "closed_at": "2023-01-10T18:14:41Z",
        "merged_at": null,
        "body": "Add a new test input stream `TestZeroCopyInputStream` for more control over the particular buffers passed\nin tests.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 36,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-01-05T14:13:44Z",
        "closed_at": "2023-01-10T14:56:24Z",
        "merged_at": null,
        "body": "Changes required for internal Google syncing of C# runtime.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-01-05T00:11:14Z",
        "closed_at": "2023-08-25T21:16:29Z",
        "merged_at": null,
        "body": "Updated our version of rules_proto.\n\nWe were previously on a version that was nearly two years old: https://github.com/bazelbuild/rules_proto/commit/f7a30f6f80006b591fa7c437fe5a951eb10bcbcf\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-01-04T21:50:10Z",
        "closed_at": "2023-01-05T00:04:24Z",
        "merged_at": null,
        "body": "Add messaging about second approvals to merge directly to Mergeable check.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 38,
        "deletions": 201,
        "changed_files": 6,
        "created_at": "2023-01-04T18:30:49Z",
        "closed_at": "2023-01-04T22:51:37Z",
        "merged_at": null,
        "body": "Remove codegen references to unused_field_stripping.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-01-04T16:40:11Z",
        "closed_at": "2023-01-05T12:52:44Z",
        "merged_at": null,
        "body": "Fix UnicodeDecodeError exception catching.\n\n`str_lines` is a generator object, it won't be executed until Tokenizer() uses it.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-01-04T15:05:58Z",
        "closed_at": "2023-02-24T10:29:57Z",
        "merged_at": null,
        "body": "nit: remove extra whitespace in NullValue comment\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 38,
        "deletions": 16,
        "changed_files": 2,
        "created_at": "2023-01-04T09:35:37Z",
        "closed_at": "2023-08-25T21:16:31Z",
        "merged_at": null,
        "body": "Add a shortcut to expect a following tag.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 160,
        "deletions": 29,
        "changed_files": 10,
        "created_at": "2023-01-04T00:57:57Z",
        "closed_at": "2023-08-25T21:16:33Z",
        "merged_at": null,
        "body": "Add RepeatedPtrField(internal::InternalVisibility, Arena*);\n\nUse RepeatedPtrField constructor that requires InternalVisibility to control the visibility\nof the said constructor in the future.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 16,
        "changed_files": 1,
        "created_at": "2023-01-03T23:49:44Z",
        "closed_at": "2023-01-04T17:55:54Z",
        "merged_at": null,
        "body": "We are going to pack this on a linux machine now, so we need to use forward slashes.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-01-03T23:24:57Z",
        "closed_at": "2023-01-04T18:22:40Z",
        "merged_at": null,
        "body": "Automated rollback of commit fb8862f781430f2ebf66dae8ab6ac455ee778f40.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-01-03T22:34:55Z",
        "closed_at": "2023-03-31T18:19:42Z",
        "merged_at": null,
        "body": "Clang's unsigned integer overflow sanitizer is flagging BucketNumber as having an overflow. This seems to be intentional, and we should disable the sanitizer for this function.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 51,
        "deletions": 27,
        "changed_files": 2,
        "created_at": "2023-01-03T22:22:47Z",
        "closed_at": "2023-08-07T14:52:18Z",
        "merged_at": null,
        "body": "Update proto parsing to keep track of parsed fields that have no presence and were parsed to their default value, hence had no effect on the result proto.\nUpdate the Partially proto matcher to cause proto parsing to check fail if the above condition was triggered.\nThis is to address a known issue where test are silently passing when proto3 protos are the arguments to Partially(EqualsProto) and have some of the fields ignored by the EqualsProto matcher since they were set to their default value in the expected proto.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-01-03T22:01:56Z",
        "closed_at": "2023-01-03T23:27:38Z",
        "merged_at": null,
        "body": "Clang's unsigned integer overflow sanitizer is flagging BucketNumber as having an overflow. This seems to be intentional, and we should disable the sanitizer for this function.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 125,
        "deletions": 28,
        "changed_files": 6,
        "created_at": "2023-01-03T19:22:00Z",
        "closed_at": "2023-03-09T21:28:37Z",
        "merged_at": null,
        "body": "VarInt Hacking with SLOP\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-01-03T15:24:26Z",
        "closed_at": "2023-04-12T17:29:52Z",
        "merged_at": null,
        "body": "\u2026anch).",
        "comments": 14
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 37,
        "changed_files": 2,
        "created_at": "2023-01-03T11:31:05Z",
        "closed_at": "2023-01-10T23:19:33Z",
        "merged_at": null,
        "body": "Fix proto deserialization issue when parsing a packed repeated enum field whose\npossible values form a contiguous range that starts with 0 or 1, and end no\ngreater than 126, when parsing a noncontiguous stream (such as from a Cord).\n\nThis routine was misusing `ParseContext::Done`. It should only be used at tag boundaries and not within field parsing.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-01-03T07:13:54Z",
        "closed_at": "2023-01-03T12:53:48Z",
        "merged_at": null,
        "body": null,
        "comments": 3
    },
    {
        "merged": false,
        "additions": 60,
        "deletions": 46,
        "changed_files": 4,
        "created_at": "2022-12-29T21:49:53Z",
        "closed_at": "2023-01-13T19:27:57Z",
        "merged_at": null,
        "body": "Add static asserts to enforce more assumptions made in repeated field containers.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 137,
        "deletions": 2,
        "changed_files": 7,
        "created_at": "2022-12-29T19:12:24Z",
        "closed_at": "2022-12-29T21:11:09Z",
        "merged_at": null,
        "body": "Add simple golden test for CMake file list generation\n\nI updated our Bazel CI jobs to cover `//pkg/...` and thereby exercise this new\ntest. That made me realize that `//pkg/...` was not fully buildable because\nthere was a reference to the non-existent target `@utf8_range//:dist_files`, so\nI also fixed that.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4380,
        "deletions": 2528,
        "changed_files": 7,
        "created_at": "2022-12-29T18:01:20Z",
        "closed_at": "2022-12-29T20:01:27Z",
        "merged_at": null,
        "body": "switch PHP and Ruby over to the new upb_Map_Delete()\n\nWe would like for upb_Map_Delete() to optionally return the deleted value.\nUnfortunately this will require several steps since we are crossing repos.\nStep #4: advance the upb version used by protobuf and update PHP/Ruby accordingly.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-12-29T17:00:26Z",
        "closed_at": "2022-12-29T22:40:24Z",
        "merged_at": null,
        "body": "Provide an escape hatch for the new JSON name conflict handling at the DescriptorPool level.\n\nThis is most useful for generated protos where the descriptors can't be easily modified.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 31,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2022-12-29T11:55:46Z",
        "closed_at": "2023-02-10T18:17:56Z",
        "merged_at": null,
        "body": "Instead of using `array_pop()` to remove last element use `unset()` to remove by index",
        "comments": 13
    },
    {
        "merged": false,
        "additions": 3205,
        "deletions": 117,
        "changed_files": 16,
        "created_at": "2022-12-28T23:21:01Z",
        "closed_at": "2023-01-10T18:01:07Z",
        "merged_at": null,
        "body": "VarInt Hacking with SLOP\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-12-28T20:32:59Z",
        "closed_at": "2022-12-28T23:24:04Z",
        "merged_at": null,
        "body": "Correct HasBitVars logic to reflect the fact that stripped fields may return\ntrue for HasHasbit.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2022-12-28T20:07:19Z",
        "closed_at": "2023-01-04T16:51:10Z",
        "merged_at": null,
        "body": "Miscellaneous compiler warning fixes:\n - Unused arguments.\n - Missing `override` in declarations.\n - Wstrict-prototypes in objective C.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2022-12-28T19:48:17Z",
        "closed_at": "2022-12-28T21:33:03Z",
        "merged_at": "2022-12-28T21:33:03Z",
        "body": "The newest bundler that is auto installed doesn't have ruby 2.5, this should fix failing presubmit/CI tests.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2022-12-28T17:42:23Z",
        "closed_at": "2022-12-28T21:32:38Z",
        "merged_at": "2022-12-28T21:32:38Z",
        "body": "The newest bundler that is auto installed doesn't have ruby 2.5, this should fix failing presubmit/CI tests.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 17,
        "deletions": 19,
        "changed_files": 5,
        "created_at": "2022-12-28T17:35:03Z",
        "closed_at": "2023-01-05T19:32:34Z",
        "merged_at": null,
        "body": "fixes https://github.com/protocolbuffers/protobuf/issues/11387\r\n\r\nAddresses misc PHPDoc formatting issues. \r\n\r\nNote: This does the bare minimum to suppress the errors. In some cases, most notably in `CodedInputStream`, the `@param` tag is still missing a typehint, and should have one added (in those cases, the variable is being passed in as `int`, but then used in the function as `string`, so it will take consideration)",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-12-28T02:32:24Z",
        "closed_at": "2022-12-28T23:25:45Z",
        "merged_at": null,
        "body": "Fix libc++ assertion\n\nNot sure if this is correct fix bug we can get there with no value.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 20,
        "deletions": 20,
        "changed_files": 2,
        "created_at": "2022-12-27T23:41:38Z",
        "closed_at": "2023-01-04T01:07:22Z",
        "merged_at": null,
        "body": "Change extension_handle to field_descriptor in python `HasExtension()` and `ClearExtension()`\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-12-27T22:28:44Z",
        "closed_at": "2022-12-28T02:24:20Z",
        "merged_at": null,
        "body": "Fix staleness test by avoiding version-specific Bazel behavior\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 600,
        "deletions": 368,
        "changed_files": 32,
        "created_at": "2022-12-27T22:25:49Z",
        "closed_at": "2023-01-03T20:13:08Z",
        "merged_at": null,
        "body": "Bazelify ruby runtime (#10525)\n\nThis uses https://github.com/protocolbuffers/rules_ruby to fully Bazelify our ruby runtime code.  The Rakefile is left in place for now and is still used by our aarch64 tests.  With the current implementation ruby behaves similarly to our python wrapper, which selects whatever version is installed in the system.  Future enhancements will allow for more hermetic builds via Bazel flags to pin a specific version\n\nCloses #10525\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/10525 from mkruskal-google:rules_ruby 97fa1f70abea77ed9792e88f77ce605c971f4871\nFUTURE_COPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/10525 from mkruskal-google:rules_ruby 97fa1f70abea77ed9792e88f77ce605c971f4871\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2022-12-27T21:51:13Z",
        "closed_at": "2022-12-28T17:35:05Z",
        "merged_at": "2022-12-28T17:35:05Z",
        "body": "The newest bundler has EOL'd ruby 2.5, so we must pin to an older version.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-12-27T21:46:04Z",
        "closed_at": "2022-12-28T20:25:52Z",
        "merged_at": null,
        "body": "Remove support for ruby 2.5.\n\nThis includes deleting all of the associated tests.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-12-27T21:01:54Z",
        "closed_at": "2022-12-27T22:22:31Z",
        "merged_at": null,
        "body": "Automated rollback of commit 2b600ddf2478d2c6a61cc43a53d698f02cfd4060.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-12-25T08:20:40Z",
        "closed_at": "2023-01-04T23:04:40Z",
        "merged_at": null,
        "body": "The javascript `number` type capacity is equal to int32 type. So after parsing Int64Value, the result is not necessarily correct. The JS should parse it as an string.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 955,
        "deletions": 1178,
        "changed_files": 11,
        "created_at": "2022-12-24T01:05:06Z",
        "closed_at": "2023-01-17T20:20:01Z",
        "merged_at": null,
        "body": "Migrate std::operator+ to Abseil helpers in utility code.\n\nThis also opportunistically migrates many C-style and STL strings to string_view in touched code.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-12-23T03:49:30Z",
        "closed_at": "2022-12-23T07:15:31Z",
        "merged_at": null,
        "body": "switch PHP and Ruby to using upb_Map_Delete2()\n\nWe would like for upb_Map_Delete() to optionally return the deleted value.\nUnfortunately this will require several steps since we are crossing repos.\nStep #2: Point PHP and Ruby at the new temporary function.\n\npoint the protobuf repo at latest upb\nregenerate the amalgamation files\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 40,
        "deletions": 15,
        "changed_files": 2,
        "created_at": "2022-12-22T17:08:59Z",
        "closed_at": "2022-12-27T18:48:40Z",
        "merged_at": null,
        "body": "Change the logic for reserved field name verification to force a fully\nqualified type name (ie starts with `.`).\nThis way we guarantee that the spelling the `.proto` file will be the same as\nthe spelling we see after crosslinking types.\nOtherwise, the spellings might differ and it makes it harder to determine if\nthe name in the allowlist matches the name in the `.proto` file.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-12-22T15:28:11Z",
        "closed_at": "2022-12-22T17:32:31Z",
        "merged_at": null,
        "body": "Internal Changes\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 126,
        "deletions": 74,
        "changed_files": 10,
        "created_at": "2022-12-22T10:29:46Z",
        "closed_at": "2022-12-22T13:10:52Z",
        "merged_at": null,
        "body": "Automated rollback of commit ce6c668a5ee687255561b5fb804ab5f61df9b06f.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 126,
        "deletions": 74,
        "changed_files": 10,
        "created_at": "2022-12-22T07:58:17Z",
        "closed_at": "2022-12-22T21:22:42Z",
        "merged_at": null,
        "body": "Automated rollback of commit ce6c668a5ee687255561b5fb804ab5f61df9b06f.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2022-12-22T01:00:19Z",
        "closed_at": "2023-08-25T21:16:35Z",
        "merged_at": null,
        "body": "Reduce code-size impact of RepeatedPtrField<Element>::MergeFrom, when Element\nis a proto message, by calling a common routine which handles imerges for all\nprotos, rather than specializing the merge logic for each and every proto we have.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 427,
        "deletions": 170,
        "changed_files": 3,
        "created_at": "2022-12-21T22:49:11Z",
        "closed_at": "2022-12-28T03:18:35Z",
        "merged_at": null,
        "body": "Use the \"shldq\" decoder for the specialized 64-bit Varint parsers, rather than\nusing the \"RotRight7\" decoder.  The \"shldq\" technique is much faster on recent\nIntel and AMD CPUs, when processing larger integers, especially on Zen.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-12-21T21:24:54Z",
        "closed_at": "2022-12-27T17:38:37Z",
        "merged_at": null,
        "body": "Turn on -Wdeprecated-enum-enum-conversion in protobuf code, and fix existing warnings.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 19,
        "deletions": 1,
        "changed_files": 8,
        "created_at": "2022-12-21T20:37:08Z",
        "closed_at": "2022-12-22T20:59:55Z",
        "merged_at": "2022-12-22T20:59:55Z",
        "body": "pin Bazel version to an older stable one",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-12-21T20:28:06Z",
        "closed_at": "2023-05-05T22:04:23Z",
        "merged_at": null,
        "body": "Add use_bazel.sh 5.1.1 to ruby build (pin Bazel version to an older stable\none)\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 10,
        "changed_files": 1,
        "created_at": "2022-12-21T16:38:44Z",
        "closed_at": "2022-12-21T18:49:22Z",
        "merged_at": null,
        "body": "Move an expensive variable on its last use to avoid a copy.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2022-12-21T16:35:49Z",
        "closed_at": "2023-08-25T21:16:37Z",
        "merged_at": null,
        "body": "Use ABSL_UNREACHABLE() now that it is part of public Abseil.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-12-21T04:59:37Z",
        "closed_at": "2022-12-21T20:50:28Z",
        "merged_at": null,
        "body": "Fix broken staleness GHA jobs.\n\nThis separates kokoro setup from the stale file regeneration process.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 26,
        "changed_files": 22,
        "created_at": "2022-12-21T02:19:47Z",
        "closed_at": "2022-12-21T21:56:25Z",
        "merged_at": null,
        "body": "Internal Changes\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 20,
        "deletions": 10,
        "changed_files": 1,
        "created_at": "2022-12-21T02:00:26Z",
        "closed_at": "2023-08-25T21:16:39Z",
        "merged_at": null,
        "body": "Call GetReflection() lazily if required.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 77,
        "deletions": 388,
        "changed_files": 3,
        "created_at": "2022-12-20T23:44:36Z",
        "closed_at": "2022-12-21T20:52:02Z",
        "merged_at": null,
        "body": "Automated rollback of commit 535069ec1b3343da9ba274759313233c4cad35cf.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-12-20T23:30:31Z",
        "closed_at": "2023-01-18T23:24:21Z",
        "merged_at": null,
        "body": "Use Emit() in primitive_field.cc.\n\nThis change adds new aliases in field.cc for improved readability of Emit() calls.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 77,
        "deletions": 762,
        "changed_files": 15,
        "created_at": "2022-12-20T23:02:24Z",
        "closed_at": "2022-12-21T02:44:45Z",
        "merged_at": null,
        "body": "Regenerate stale files before every test that requires them.\n\nThese files get automatically updated as post-submit actions, and there's no reason to ever used the checked in versions.  Daily run staleness test verify that those don't go out of date.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-12-20T21:56:41Z",
        "closed_at": "2023-01-06T11:47:52Z",
        "merged_at": null,
        "body": "Expect fail when serialize inf and nan for Value.number_value in json format. fixes #11259\n\nImplemented in java, c++, python and upb. Also added conformance test.\n\nhttps://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.Value\nwhere it says:\nattempting to serialize NaN or Infinity results in error. (We can't serialize these as string \"NaN\" or \"Infinity\" values like we do for regular fields, because they would parse as string_value, not number_value).\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 102,
        "deletions": 11,
        "changed_files": 11,
        "created_at": "2022-12-20T21:38:26Z",
        "closed_at": "2023-08-07T22:35:31Z",
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-12-20T20:22:34Z",
        "closed_at": "2022-12-21T17:45:20Z",
        "merged_at": null,
        "body": "Make good on the promise to rename FieldGenWrapper to FieldGenerator.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-12-20T19:51:05Z",
        "closed_at": "2022-12-20T23:46:32Z",
        "merged_at": null,
        "body": "Move field-specific substition variable logic into FieldGenWrapper.\n\nThis is not all of the logic, since there are places in message.cc that inadvisedly reach into field variables, and only primitive_field.cc is ported to the new system in this CL, as an example.\n\nThere are various unrelated-looking changes in this CL that are actually required to keep it a no-op, which are a product of the implicit dependencies between different parts of the backend.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-12-20T18:46:03Z",
        "closed_at": "2023-01-03T23:52:40Z",
        "merged_at": null,
        "body": "Add static asserts to enforce assumptions made in Map.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 25,
        "deletions": 12,
        "changed_files": 3,
        "created_at": "2022-12-20T10:59:28Z",
        "closed_at": "2022-12-20T18:04:10Z",
        "merged_at": null,
        "body": "Make labels relative\n\nPrepare protobuf for bzlmod\n\nSelf-reference to `@com_google_protobuf` doesn't work with bzlmod. \n\nIn case this is a rule attribute, no reference is needed. \n\nWhen the label is a default parameter value in a macro it needs to be wrapped with `Label` call, to relativise it correctly.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 293,
        "deletions": 257,
        "changed_files": 16,
        "created_at": "2022-12-20T06:52:52Z",
        "closed_at": "2022-12-30T16:03:53Z",
        "merged_at": null,
        "body": "Migrate std::operator+ to Abseil helpers in compiler code.\n\nThis also opportunistically migrates many C-style and STL strings to string_view in touched code.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-12-20T00:28:42Z",
        "closed_at": "2022-12-21T00:46:46Z",
        "merged_at": null,
        "body": "Don't call GetReflection(), unless the result will be used.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 217,
        "deletions": 27,
        "changed_files": 7,
        "created_at": "2022-12-20T00:01:50Z",
        "closed_at": "2022-12-30T16:05:11Z",
        "merged_at": null,
        "body": "VarInt Hacking with SLOP\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 558,
        "deletions": 718,
        "changed_files": 15,
        "created_at": "2022-12-19T21:43:36Z",
        "closed_at": "2022-12-20T20:29:18Z",
        "merged_at": null,
        "body": "Throw all of the FieldGenerator implementations into a directory.\n\nThis CL:\n* Does the aforementioned.\n* Deletes all of the associated headers and moves the implementation class definitions into the .cc files.\n* Exposes factory functions for all the different FieldGenerator implementations.\n\nThis change will be followed up by parallel changes that clean up individual .cc files to delete redundant code. This change reduces what files need to be updated in future FieldGenerator refactors, and places them in a central location for this. Finally, because these classes only exist to implement FieldGenerator, they should not expose any other API for other parts of the compiler to use.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 340,
        "deletions": 257,
        "changed_files": 7,
        "created_at": "2022-12-19T19:17:23Z",
        "closed_at": "2022-12-19T22:18:00Z",
        "merged_at": null,
        "body": "First steps towards a pure field generator interface.\n\nCurrently, FieldGenerator holds onto a bit of state, and due to the way its interface is constructed it results in untracked dependencies between the contents of map<string, string> values that get tossed around the compiler. In order to break these dependencies, we want to move calculation of string variables into a centrally tracked place, but that requires inserting variable setup and destruction code in each FieldGenerator call.\n\nHence, FieldGenerator is replaced with a PIMPL wrapper (FieldGenWrapper) to allow us to do this. Followup CLs will:\n* Rename FieldGenWrapper to FieldGenerator and FieldGenerator to some interface-ey name.\n* Gradually morph the interface of FieldGenerator to encapsulate all per-field logic, so that message.cc does not have to iterate over fields except to call into generators, and as such does not need to manipulate per-field substitution variables.\n\nThis CL is a no-op refactor.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-12-19T13:15:03Z",
        "closed_at": "2022-12-22T11:17:21Z",
        "merged_at": null,
        "body": "Optimize ListField by removing calls to std sort\n\nIt's quite common that fields in its proto description usually appear in the tag increasing order and thus let's use this assumption and do not call std::sort more than needed. Also calls to std::sort on smaller ranges as extension tags are almost always bigger and they are returned in their increasing order.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 73,
        "changed_files": 1,
        "created_at": "2022-12-19T10:51:07Z",
        "closed_at": "2023-01-30T18:16:05Z",
        "merged_at": null,
        "body": "Automated rollback of commit 5b4bc33a09f8541f28c8ee98a597953b18121fc9.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2022-12-19T03:01:26Z",
        "closed_at": "2022-12-20T20:30:28Z",
        "merged_at": null,
        "body": "What if we don't?\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-12-17T21:34:25Z",
        "closed_at": "2022-12-21T21:32:17Z",
        "merged_at": null,
        "body": null,
        "comments": 3
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-12-17T07:35:12Z",
        "closed_at": "2022-12-22T05:20:30Z",
        "merged_at": null,
        "body": "Remove all remaining STL maps in favor of Abseil containers.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 315,
        "deletions": 328,
        "changed_files": 25,
        "created_at": "2022-12-17T06:17:11Z",
        "closed_at": "2022-12-22T04:40:01Z",
        "merged_at": null,
        "body": "Remove all remaining STL sets in favor of Abseil containers.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 182,
        "deletions": 201,
        "changed_files": 19,
        "created_at": "2022-12-17T05:21:29Z",
        "closed_at": "2022-12-22T04:04:08Z",
        "merged_at": null,
        "body": "Migrate more STL tables to Abseil swiss tables\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 106,
        "deletions": 97,
        "changed_files": 1,
        "created_at": "2022-12-17T03:40:17Z",
        "closed_at": "2022-12-19T19:13:12Z",
        "merged_at": null,
        "body": "Fix broken \"Programming Languages\" list in third_party.md.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 192,
        "deletions": 150,
        "changed_files": 2,
        "created_at": "2022-12-16T23:18:55Z",
        "closed_at": "2023-01-03T22:15:51Z",
        "merged_at": null,
        "body": "Use the \"shldq\" decoder for the specialized parsers, rather than the\n\"RotRight7\" decoder.  The \"shldq\" technique is much faster on recent Intel and\nAMD CPUs, when processing larger integers, especially on Zen.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 447,
        "deletions": 630,
        "changed_files": 11,
        "created_at": "2022-12-16T21:06:29Z",
        "closed_at": "2022-12-19T18:58:35Z",
        "merged_at": null,
        "body": "Factor out field listener annotation processing into a separate file.\n\nThis is part of the Printer::Emit() migration, since it allows us to drop some relatively complex logic out of ClassVars/FieldVars, which is an impediment to further migration of message.cc.\n\nThe factored-out logic is not the prettiest, but cleaning it up further will require more refactors throughout the compiler.\n\nThis CL also changes std::initializer_lists in Printer's interface into absl::Spans, which were not available when the new Printer API was designed, but which are necessary for the new API to work with Printer.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-12-16T19:29:14Z",
        "closed_at": "2023-01-04T20:12:03Z",
        "merged_at": null,
        "body": "Implement AbslStringify for MessageLite\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 438,
        "deletions": 96,
        "changed_files": 40,
        "created_at": "2022-12-16T18:30:54Z",
        "closed_at": "2022-12-17T01:04:20Z",
        "merged_at": "2022-12-17T01:04:19Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-12-16T18:25:15Z",
        "closed_at": "2023-08-25T21:16:41Z",
        "merged_at": null,
        "body": "Make Java ByteString comparable.\n\nThis resolves https://github.com/protocolbuffers/protobuf/issues/7842 .\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-12-16T17:43:54Z",
        "closed_at": "2022-12-17T00:59:44Z",
        "merged_at": null,
        "body": "Add support for lazy fields to TDP.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-12-16T09:37:30Z",
        "closed_at": "2022-12-16T11:09:13Z",
        "merged_at": null,
        "body": "Restore //:protoc_lib target.\n\nThis was removed in\nhttps://github.com/protocolbuffers/protobuf/commit/cbd1adc6cfe84abaa8a136763c42cd89233704e7,\nbut it\u2019s still present in the released versions of Protocol Buffers, and since\nit\u2019s a public target it\u2019s part of the public API.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 309,
        "deletions": 37,
        "changed_files": 8,
        "created_at": "2022-12-16T04:28:56Z",
        "closed_at": "2022-12-17T02:32:48Z",
        "merged_at": null,
        "body": "Add StringBlock experiment ALT 1\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-12-16T01:04:50Z",
        "closed_at": "2023-01-04T21:20:29Z",
        "merged_at": null,
        "body": null,
        "comments": 1
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-12-16T00:37:08Z",
        "closed_at": "2022-12-16T19:14:47Z",
        "merged_at": null,
        "body": "Create python source file distribution to use for python source wheel.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 27,
        "changed_files": 2,
        "created_at": "2022-12-16T00:28:24Z",
        "closed_at": "2022-12-16T21:18:48Z",
        "merged_at": null,
        "body": "Cleanup unused MOA code.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-12-15T23:48:44Z",
        "closed_at": "2023-02-17T09:23:21Z",
        "merged_at": null,
        "body": "Correct collection of statistics\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 275,
        "deletions": 38,
        "changed_files": 8,
        "created_at": "2022-12-15T22:33:29Z",
        "closed_at": "2023-02-08T19:38:51Z",
        "merged_at": null,
        "body": "Add StringBlock experiment ALT - MaybeAllocateString unconditional\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-12-15T20:13:45Z",
        "closed_at": "2023-01-04T21:20:46Z",
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-12-15T19:33:18Z",
        "closed_at": "2022-12-15T22:42:28Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 15,
        "deletions": 0,
        "changed_files": 5,
        "created_at": "2022-12-15T19:22:36Z",
        "closed_at": "2022-12-16T16:57:57Z",
        "merged_at": null,
        "body": "Roll forward of #10843 after accidental direct merge",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-12-15T19:19:00Z",
        "closed_at": "2022-12-16T02:36:25Z",
        "merged_at": "2022-12-16T02:36:25Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 9,
        "changed_files": 2,
        "created_at": "2022-12-15T17:59:51Z",
        "closed_at": "2022-12-17T02:32:47Z",
        "merged_at": null,
        "body": "Switch the visibility of static field `PARSER` in Java gencode to `private`.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-12-15T17:42:36Z",
        "closed_at": "2022-12-15T18:47:17Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-12-15T16:45:30Z",
        "closed_at": "2022-12-15T18:02:46Z",
        "merged_at": "2022-12-15T18:02:46Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 75,
        "deletions": 29,
        "changed_files": 3,
        "created_at": "2022-12-15T06:31:37Z",
        "closed_at": "2022-12-17T02:32:47Z",
        "merged_at": null,
        "body": "Refactor architecture tests.\n\nThis makes the call-sites of the macro a bit more straightforward to understand, but is otherwise exactly the same as before.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2022-12-15T05:55:17Z",
        "closed_at": "2022-12-15T16:34:46Z",
        "merged_at": null,
        "body": "Remove C++14 exemption for tests using \"C++13\".\n\nThis is out of our public support matrix (https://github.com/google/oss-policies-info) and was only left around for technical reasons that no longer exist.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 49,
        "deletions": 43,
        "changed_files": 8,
        "created_at": "2022-12-15T05:43:41Z",
        "closed_at": "2022-12-20T22:31:36Z",
        "merged_at": null,
        "body": "Bump our clang and gcc version to our public support version.\n\nClang was only set to 5.0 to support internal testing, and is no longer necessary.  GCC was not enforced, but we needed to support 4.8 for testing.  We can now bump these up to 6.0 and 7.3 as stated at https://github.com/google/oss-policies-info/blob/main/foundational-cxx-support-matrix.md\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-12-15T03:23:09Z",
        "closed_at": "2022-12-15T05:52:40Z",
        "merged_at": null,
        "body": "Clean up aarch64 tests.\n\nThis bumps us to gcc 6 (rather than 4.8), which fully supports C++14, and migrates the Python tests to our Bazel-based system.  C#, PHP, and Ruby will remain on CMake + alternate build system for now.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 13,
        "changed_files": 2,
        "created_at": "2022-12-15T02:54:11Z",
        "closed_at": "2022-12-15T03:57:45Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-12-15T01:27:17Z",
        "closed_at": "2022-12-15T17:42:08Z",
        "merged_at": null,
        "body": "Add TODO to remove EMPTY in a future breaking release.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-12-15T00:57:00Z",
        "closed_at": "2022-12-16T23:43:02Z",
        "merged_at": null,
        "body": "Raise errors when serialize inf and nan for Value.number_value in json format. fixes #11259\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 55,
        "deletions": 245,
        "changed_files": 16,
        "created_at": "2022-12-14T22:40:57Z",
        "closed_at": "2022-12-15T03:23:03Z",
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-12-14T22:11:35Z",
        "closed_at": "2022-12-17T02:32:46Z",
        "merged_at": null,
        "body": "ABSL_ASSERT in arena_align.h repro for aarch64\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-12-14T20:31:01Z",
        "closed_at": "2022-12-15T18:28:35Z",
        "merged_at": null,
        "body": "This will enforce CODEOWNERS now that copybara can make draft PRs.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 289,
        "deletions": 37,
        "changed_files": 8,
        "created_at": "2022-12-14T20:21:50Z",
        "closed_at": "2022-12-17T02:32:46Z",
        "merged_at": null,
        "body": "Add StringBlock experiment.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 15,
        "deletions": 11,
        "changed_files": 1,
        "created_at": "2022-12-14T20:02:41Z",
        "closed_at": "2022-12-15T21:30:28Z",
        "merged_at": null,
        "body": "Fix documentation for ZeroCopyInputStream\n\n- Update Skip() to reflect the actual behavior when skipping to / beyond EOS\n\n- Move a paragraph for BackUp() that was wrongly added to ZeroCopyInputStream insteaf of ZeroCopyOutputStream\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2022-12-14T19:45:20Z",
        "closed_at": "2022-12-14T21:01:06Z",
        "merged_at": null,
        "body": "Update collect_all_artifacts.sh to install mono for 20.04 instead of 16.04\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-12-14T18:45:34Z",
        "closed_at": "2022-12-17T02:32:45Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 103,
        "deletions": 20,
        "changed_files": 6,
        "created_at": "2022-12-14T18:33:34Z",
        "closed_at": "2022-12-17T02:32:45Z",
        "merged_at": null,
        "body": "VarInt Hacking with SLOP\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 297,
        "deletions": 44,
        "changed_files": 8,
        "created_at": "2022-12-14T18:21:14Z",
        "closed_at": "2022-12-17T02:32:44Z",
        "merged_at": null,
        "body": "Add StringBlock experiment ALT\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-12-14T00:50:33Z",
        "closed_at": "2022-12-14T18:48:57Z",
        "merged_at": null,
        "body": "Mark UnmodifiableLazyStringList deprecated. UnmodifiableLazyStringList is unnecessary and will be removed in a future release.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-12-13T23:19:46Z",
        "closed_at": "2022-12-16T17:59:29Z",
        "merged_at": null,
        "body": "Clarifies ParseFromString method takes only binary form of proto\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 80,
        "deletions": 3567,
        "changed_files": 1,
        "created_at": "2022-12-13T22:15:12Z",
        "closed_at": "2022-12-17T02:32:44Z",
        "merged_at": null,
        "body": "Remove CHANGES.txt, except for unreleased changes staged for 22.0. \n\nRelease notes from https://github.com/protocolbuffers/protobuf/releases should be the singular source of truth for release changelogs. Post-Copybara, this file is no longer needed to stage changes from syncs for the next release.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-12-13T21:36:50Z",
        "closed_at": "2022-12-14T17:04:29Z",
        "merged_at": "2022-12-14T17:04:29Z",
        "body": "current build failing due to git config while trying to update submodules",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 97,
        "changed_files": 3,
        "created_at": "2022-12-13T21:34:33Z",
        "closed_at": "2022-12-14T22:56:30Z",
        "merged_at": null,
        "body": "Remove unused package private class ProtobufLists.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-12-13T21:30:26Z",
        "closed_at": "2022-12-14T17:04:22Z",
        "merged_at": "2022-12-14T17:04:21Z",
        "body": "current build failing due to git config while trying to update submodules",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-12-13T21:27:05Z",
        "closed_at": "2022-12-14T15:40:15Z",
        "merged_at": "2022-12-14T15:40:15Z",
        "body": "current build failing due to git config while trying to update submodules",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-12-13T21:16:57Z",
        "closed_at": "2022-12-14T17:04:18Z",
        "merged_at": "2022-12-14T17:04:18Z",
        "body": "current build failing due to git config while trying to update submodules",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 59,
        "deletions": 51,
        "changed_files": 37,
        "created_at": "2022-12-13T21:09:24Z",
        "closed_at": "2022-12-13T22:53:25Z",
        "merged_at": "2022-12-13T22:53:25Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1135,
        "deletions": 163,
        "changed_files": 7,
        "created_at": "2022-12-13T18:46:33Z",
        "closed_at": "2022-12-17T02:32:43Z",
        "merged_at": null,
        "body": "Add Proto Arena TypedBlock\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-12-13T18:18:33Z",
        "closed_at": "2022-12-15T19:14:35Z",
        "merged_at": null,
        "body": "Clean up a fraction of message.cc to use Emit().\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 103,
        "deletions": 20,
        "changed_files": 6,
        "created_at": "2022-12-13T17:28:00Z",
        "closed_at": "2022-12-17T02:32:43Z",
        "merged_at": null,
        "body": "VarInt Hacking with SLOP\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 40,
        "deletions": 42,
        "changed_files": 4,
        "created_at": "2022-12-13T17:21:56Z",
        "closed_at": "2022-12-13T19:29:45Z",
        "merged_at": null,
        "body": "Remove the three-arg Printer::Sub constructor and switch to the new AnnotatedAt().\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-12-13T16:53:09Z",
        "closed_at": "2022-12-13T19:46:02Z",
        "merged_at": null,
        "body": "Remove constexpr for non compliant C++11 builds with ABSL_ASSERT\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 37,
        "deletions": 7,
        "changed_files": 3,
        "created_at": "2022-12-13T16:47:51Z",
        "closed_at": "2022-12-13T18:24:03Z",
        "merged_at": null,
        "body": "Add a mechanism for placing comments in Emit() calls that are not reproduced in the output.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 106,
        "deletions": 96,
        "changed_files": 1,
        "created_at": "2022-12-13T15:51:47Z",
        "closed_at": "2022-12-17T02:32:42Z",
        "merged_at": null,
        "body": "Fix .md formating\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 106,
        "deletions": 108,
        "changed_files": 12,
        "created_at": "2022-12-13T15:05:59Z",
        "closed_at": "2022-12-14T00:13:49Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-12-13T12:27:07Z",
        "closed_at": "2022-12-17T02:32:42Z",
        "merged_at": null,
        "body": "Minor documentation change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 102,
        "deletions": 144,
        "changed_files": 3,
        "created_at": "2022-12-12T22:46:37Z",
        "closed_at": "2022-12-13T03:27:39Z",
        "merged_at": null,
        "body": "Removed file from Piper.\n\nFUTURE_COPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/11257 from Neakxs:apply-registration-for-protocel-extensions 8d04626e85c44ca8ba812c8ccb12585b92cb6d6d\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 40,
        "changed_files": 1,
        "created_at": "2022-12-12T22:40:20Z",
        "closed_at": "2022-12-12T23:55:11Z",
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 40,
        "changed_files": 1,
        "created_at": "2022-12-12T22:33:24Z",
        "closed_at": "2022-12-15T19:47:05Z",
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-12-12T22:17:13Z",
        "closed_at": "2022-12-17T02:32:41Z",
        "merged_at": null,
        "body": "Catch deletes of unknown types\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 102,
        "deletions": 104,
        "changed_files": 2,
        "created_at": "2022-12-12T22:09:29Z",
        "closed_at": "2022-12-12T23:13:16Z",
        "merged_at": null,
        "body": "Internal changes\n\nFUTURE_COPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/11257 from Neakxs:apply-registration-for-protocel-extensions 8d04626e85c44ca8ba812c8ccb12585b92cb6d6d\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-12-12T21:33:43Z",
        "closed_at": "2022-12-13T03:33:55Z",
        "merged_at": null,
        "body": "Remove MOA experiment flag.\n\nFUTURE_COPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/11257 from Neakxs:apply-registration-for-protocel-extensions 8d04626e85c44ca8ba812c8ccb12585b92cb6d6d\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 8,
        "changed_files": 3,
        "created_at": "2022-12-12T19:06:04Z",
        "closed_at": "2022-12-12T20:21:17Z",
        "merged_at": "2022-12-12T20:21:17Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-12-12T18:08:30Z",
        "closed_at": "2022-12-13T14:54:07Z",
        "merged_at": null,
        "body": "Apply registration for `protoc-gen-cel-authorize` and `protoc-gen-cel-validate` extensions, both located in the [protocel](https://github.com/Neakxs/protocel) repository.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2033,
        "deletions": 1691,
        "changed_files": 6,
        "created_at": "2022-12-12T16:36:57Z",
        "closed_at": "2022-12-12T20:17:56Z",
        "merged_at": null,
        "body": "update protobuf_deps.bzl to pull in the latest upb\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-12-12T16:11:02Z",
        "closed_at": "2022-12-13T03:32:34Z",
        "merged_at": null,
        "body": "Internal Change\n\nFUTURE_COPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/11257 from Neakxs:apply-registration-for-protocel-extensions 8d04626e85c44ca8ba812c8ccb12585b92cb6d6d\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 139,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2022-12-12T15:32:24Z",
        "closed_at": "2022-12-17T02:32:41Z",
        "merged_at": null,
        "body": "Introduce ReflectionMode\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-12-12T14:26:01Z",
        "closed_at": "2022-12-13T03:36:07Z",
        "merged_at": null,
        "body": "Unify alignment logic\n\nThis change implements the existing 'Align*' logic in terms of `arena_align.h` enabling further cleanups and a long needed split of arena_impl.h into serial_arena.h and thread_safe_arena.h. The latter reduces the cost of adding new features or optimizations to arena.\n\nFUTURE_COPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/11257 from Neakxs:apply-registration-for-protocel-extensions 8d04626e85c44ca8ba812c8ccb12585b92cb6d6d\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1097,
        "deletions": 809,
        "changed_files": 10,
        "created_at": "2022-12-12T02:59:07Z",
        "closed_at": "2022-12-15T22:44:22Z",
        "merged_at": null,
        "body": "Embed tagged allocs\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2022-12-10T23:37:13Z",
        "closed_at": "2022-12-16T01:41:10Z",
        "merged_at": null,
        "body": "This patch fixes a compilation bug introduced in 821b0732f23af1c73155e71d4c46b8023664aacf.\r\n\r\nWhen the `constinit` keyword is available (such as in C++20), putting the `alignas` attribute after `ABSL_CONST_INIT` is an error:\r\n\r\n```\r\nERROR: /home/widders/.cache/bazel/_bazel_widders/25f0d335ca0e01a2fd74c60e90175e8f/external/com_google_protobuf/src/google/protobuf/compiler/java/BUILD.bazel:44:11: Compiling src/google/protobuf/compiler/java/generator_factory.cc failed: (Exit 1): clang failed: error executing command /usr/lib/llvm-16/bin/clang -U_FORTIFY_SOURCE -fstack-protector -Wall -Wthread-safety -Wself-assign -Wunused-but-set-parameter -Wno-free-nonheap-object -fcolor-diagnostics -fno-omit-frame-pointer -g0 ... (remaining 64 arguments skipped)\r\n\r\nUse --sandbox_debug to see verbose messages from the sandbox and retain the sandbox build root for debugging\r\nIn file included from external/com_google_protobuf/src/google/protobuf/compiler/java/generator_factory.cc:35:\r\nIn file included from bazel-out/k8-opt-exec-2B5CBBC6/bin/external/com_google_protobuf/src/google/protobuf/compiler/java/_virtual_includes/java/google/protobuf/compiler/java/context.h:38:\r\nIn file included from bazel-out/k8-opt-exec-2B5CBBC6/bin/external/com_google_protobuf/src/google/protobuf/compiler/java/_virtual_includes/names_internal/google/protobuf/compiler/java/helpers.h:45:\r\nIn file included from bazel-out/k8-opt-exec-2B5CBBC6/bin/external/com_google_protobuf/src/google/protobuf/_virtual_includes/protobuf_nowkt/google/protobuf/descriptor.pb.h:25:\r\nIn file included from bazel-out/k8-opt-exec-2B5CBBC6/bin/external/com_google_protobuf/src/google/protobuf/_virtual_includes/protobuf_lite/google/protobuf/arena.h:53:\r\nbazel-out/k8-opt-exec-2B5CBBC6/bin/external/com_google_protobuf/src/google/protobuf/_virtual_includes/protobuf_lite/google/protobuf/arena_impl.h:584:19: error: an attribute list cannot appear here\r\n  ABSL_CONST_INIT alignas(\r\n                  ^~~~~~~~\r\n1 error generated.\r\n```\r\n\r\nTherefore, it should be ordered as\r\n1. always attribute-like (`alignas`)\r\n2. sometimes attributes (`ABSL_CONST_INIT`, which may be a lifetime specifier or an attribute)\r\n3. lifetime specifiers (`static`)\r\n4. type etc.\r\n\r\nWhere it currently is it may be in the midst of lifetime specifiers, and if it is moved to the right it syntactically applies to the type rather than the whole declaration which is also invalid.\r\n\r\nIf this ordering could not be resolved for all cases it could also be moved to the end, after the name being declared, but we don't need to do that here.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 10,
        "changed_files": 1,
        "created_at": "2022-12-10T16:34:14Z",
        "closed_at": "2022-12-17T02:32:41Z",
        "merged_at": null,
        "body": "Fixed \"unused function\" warnings seen in OSS.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 85,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-12-10T04:42:11Z",
        "closed_at": "2022-12-13T22:28:24Z",
        "merged_at": null,
        "body": "Removed python files from file_list and replace it with directory-based renames.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2022-12-10T04:40:36Z",
        "closed_at": "2022-12-12T20:04:09Z",
        "merged_at": null,
        "body": "Fix open-source builds due to references to lazy fields.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-12-10T00:33:42Z",
        "closed_at": "2022-12-10T02:10:37Z",
        "merged_at": null,
        "body": "Fix python breakage from bad export\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-12-10T00:01:23Z",
        "closed_at": "2023-01-15T02:55:15Z",
        "merged_at": null,
        "body": "PHP 8.2 [deprecates dynamic properties](https://www.php.net/releases/8.2/en.php#deprecate_dynamic_properties). `MapFieldIter` triggers a warning on PHP 8.2 because it doesn't declare the `key_type` property. This PR declares the property to fix the warning.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 54,
        "deletions": 131,
        "changed_files": 5,
        "created_at": "2022-12-09T23:34:03Z",
        "closed_at": "2022-12-17T02:32:40Z",
        "merged_at": null,
        "body": "just for testing\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 54,
        "deletions": 131,
        "changed_files": 5,
        "created_at": "2022-12-09T23:25:57Z",
        "closed_at": "2022-12-10T00:36:14Z",
        "merged_at": null,
        "body": "Unify alignment logic\n\nThis change implements the existing 'Align*' logic in terms of `arena_align.h` enabling further cleanups and a long needed split of arena_impl.h into serial_arena.h and thread_safe_arena.h. The latter reduces the cost of adding new features or optimizations to arena.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-12-09T23:09:44Z",
        "closed_at": "2022-12-17T02:32:40Z",
        "merged_at": null,
        "body": "One-Line Change Description (used as GitHub Pull Request title)\n\nDetailed description...\n...text exposed to open source public git repo...\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 390,
        "deletions": 337,
        "changed_files": 2,
        "created_at": "2022-12-09T22:27:08Z",
        "closed_at": "2022-12-13T16:36:58Z",
        "merged_at": null,
        "body": "Clean up the interface of io::Printer.\n\nThis CL kicks any definition longer than three or so lines out of the class\nbody and defines them out of line. The number of private definitions at the head of the class was getting completely out of control.\n\nIdeally we would not kick Printer::Sub out, since its API is important,\nbut there's no way to do this while also moving ValueImpl out of the class,\nwhich was taking on a whole lot of space.\n\nToday I learned that an out-of-line template definition can have multiple template <> declarations, which is necessary to be able to utter the signature of those symbols out of line.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-12-09T21:36:36Z",
        "closed_at": "2022-12-13T03:35:23Z",
        "merged_at": null,
        "body": "Internal changes\n\nFUTURE_COPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/11257 from Neakxs:apply-registration-for-protocel-extensions 8d04626e85c44ca8ba812c8ccb12585b92cb6d6d\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 387,
        "deletions": 456,
        "changed_files": 1,
        "created_at": "2022-12-09T21:13:21Z",
        "closed_at": "2022-12-17T02:32:39Z",
        "merged_at": null,
        "body": "Changes to Map class to support table-driven parser:\n - Add UntypedMapBase as a base class for all Map instances. Move all type independent methods to the base class.\n - Remove InnerMap and make Map itself provide the base classes.\n\nAlso, update some stale documentation.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 249,
        "deletions": 127,
        "changed_files": 3,
        "created_at": "2022-12-09T19:21:15Z",
        "closed_at": "2022-12-09T21:50:21Z",
        "merged_at": null,
        "body": "Add Printer::Sub for finer configuration of how a variable substitution is processed.\n\nIn particular, this allows for configuring what the \"consume after\" characters that follow\na $...$ are, which previously were \";,\" for callback subs and \"\" for everything else.\n\nIn a followup the three-argument constructor for Sub will be removed and replaced with\ncalls to Annotate().\n\nAlso, calls to WithVars still reject closure arguments, but this check happens at runtime\nnow. This is a minor papercut for users that simplifies the implementation of Sub and\nrelated private types immensely.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-12-09T18:46:31Z",
        "closed_at": "2022-12-10T01:07:00Z",
        "merged_at": null,
        "body": "Remove unused MOA code.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-12-09T18:15:00Z",
        "closed_at": "2022-12-09T20:53:43Z",
        "merged_at": null,
        "body": "Add a mechanism for placing comments in Emit() calls that are not reproduced in the output.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-12-09T15:42:35Z",
        "closed_at": "2022-12-14T17:49:29Z",
        "merged_at": null,
        "body": "Split arena_impl.h into serial_arena.h and thread_safe_arena.h\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-12-09T14:51:09Z",
        "closed_at": "2022-12-09T22:09:10Z",
        "merged_at": null,
        "body": "Unify alignment logic\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-12-09T14:50:17Z",
        "closed_at": "2022-12-09T21:46:11Z",
        "merged_at": null,
        "body": "Cleanup ThreadCache and LifeCycledId\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 18,
        "deletions": 11,
        "changed_files": 5,
        "created_at": "2022-12-09T14:24:52Z",
        "closed_at": "2022-12-09T19:43:33Z",
        "merged_at": null,
        "body": "Cleanup portable defines for NO_THREAD_LOCAL and kCacheAlignment\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-12-09T02:32:37Z",
        "closed_at": "2022-12-09T18:58:36Z",
        "merged_at": null,
        "body": "Remove MOA logic for constructor/destructor path.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 208,
        "deletions": 87,
        "changed_files": 6,
        "created_at": "2022-12-09T02:12:24Z",
        "closed_at": "2022-12-17T02:32:38Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-12-08T23:46:25Z",
        "closed_at": "2022-12-09T00:51:37Z",
        "merged_at": null,
        "body": "Internal change only\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 11,
        "changed_files": 1,
        "created_at": "2022-12-08T23:26:39Z",
        "closed_at": "2022-12-13T20:49:52Z",
        "merged_at": null,
        "body": "Remove inlined strings from the fallback.\nThey are not needed. The parser can already handle these fields. The fallback was dead code.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2022-12-08T22:23:07Z",
        "closed_at": "2022-12-15T21:06:26Z",
        "merged_at": null,
        "body": "Add internal namespace in arena_unittest.cc.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 33,
        "changed_files": 1,
        "created_at": "2022-12-08T22:10:42Z",
        "closed_at": "2022-12-09T03:16:46Z",
        "merged_at": null,
        "body": "Remove ArenaMetricsCollector as it is not used?\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 20,
        "changed_files": 2,
        "created_at": "2022-12-08T21:44:55Z",
        "closed_at": "2022-12-17T02:32:38Z",
        "merged_at": null,
        "body": "Internal change only\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-12-08T21:04:34Z",
        "closed_at": "2022-12-13T03:33:14Z",
        "merged_at": null,
        "body": "Internal changes\n\nFUTURE_COPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/11257 from Neakxs:apply-registration-for-protocel-extensions 8d04626e85c44ca8ba812c8ccb12585b92cb6d6d\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-12-08T21:03:38Z",
        "closed_at": "2022-12-08T22:29:33Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-12-08T21:02:56Z",
        "closed_at": "2022-12-09T23:47:12Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-12-08T21:02:32Z",
        "closed_at": "2022-12-13T03:34:38Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 427,
        "deletions": 341,
        "changed_files": 5,
        "created_at": "2022-12-08T20:08:00Z",
        "closed_at": "2022-12-09T17:36:35Z",
        "merged_at": null,
        "body": "Add a tokenizer inside of io::Printer.\n\nThis change extracts the existing tokenization logic into one function and\ntweaks it slightly, making it easier to understand how format strings are tokenized\nat the cost of a few allocations.\n\nMost of the changes in generated code are due to slight changes in how indentation are handled that harmlessly confuse some odd uses of cpp::Formatter; Emit() is not impacted.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 15,
        "changed_files": 1,
        "created_at": "2022-12-08T17:33:06Z",
        "closed_at": "2022-12-13T05:56:30Z",
        "merged_at": null,
        "body": "Aggressively pipeline branches that have Arenas for performance.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 979,
        "deletions": 135,
        "changed_files": 9,
        "created_at": "2022-12-08T15:45:19Z",
        "closed_at": "2022-12-17T02:32:38Z",
        "merged_at": null,
        "body": "Streamline Arena Cleanup Allocations\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 15,
        "deletions": 10,
        "changed_files": 2,
        "created_at": "2022-12-08T08:58:35Z",
        "closed_at": "2022-12-08T18:27:32Z",
        "merged_at": "2022-12-08T18:27:32Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 388,
        "deletions": 77,
        "changed_files": 3,
        "created_at": "2022-12-08T04:52:15Z",
        "closed_at": "2022-12-17T02:32:37Z",
        "merged_at": null,
        "body": "Copybara import of the project:\n\n--\n3eac25022630a1c3a78b98705f0b0a3f10835c04 by Josh Humphries <jhumphries@buf.build>:\n\nadd check for custom JSON name conflicts\n- also, include check for default JSON name conflicts even in proto2\n  files (but only warn)\n- if custom JSON name conflicts with other default name, only a\n  warning in proto2\n\n--\nb23b38716907a20f8e32cf477e0b82955124f423 by Josh Humphries <jhumphries@buf.build>:\n\nupdate existing test expectations and add new tests\n\n--\naa34e0ed2ff4ec321c1f1aeaf4583b3f3909c965 by Josh Humphries <jhumphries@buf.build>:\n\nJSON -> Json\n\n--\nfdaa464962d3e1603eb8e4ad1bbe802be948c296 by Josh Humphries <jhumphries@buf.build>:\n\naddress review feedback wrt absl string functions\nalso moves helpers into anonymous namespace\n\n--\n6d5f2fc93fdeeecf49043b80a4e66ae71b9fad30 by Josh Humphries <jhumphries@buf.build>:\n\napply clang-format changes; change really long pair type to auto\n\n--\n81b5cbe26e4bac790b17d587c86f091ab574749d by Josh Humphries <jhumphries@buf.build>:\n\naddress review feedback\n\n--\n8fa8b10e09e10d454bc83a31747b7e83e7dac4af by Josh Humphries <jhumphries@buf.build>:\n\nreturn struct instead of using out param\n\n--\nb405717f882ff8063400d7d647a4be5ffd222f60 by Josh Humphries <jhumphries@buf.build>:\n\naddress review feedback\n\nFUTURE_COPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/10750 from jhump:jh/custom-json-name-validation b405717f882ff8063400d7d647a4be5ffd222f60\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2022-12-08T04:42:39Z",
        "closed_at": "2022-12-17T02:33:33Z",
        "merged_at": null,
        "body": "code size optimization, moved function definition to the source file\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 461,
        "deletions": 215,
        "changed_files": 7,
        "created_at": "2022-12-08T04:22:14Z",
        "closed_at": "2022-12-14T18:38:53Z",
        "merged_at": null,
        "body": "Add a deprecated message and enum option for restoring legacy json field validation.\n\nSee https://github.com/protocolbuffers/protobuf/pull/10750 for more information.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-12-07T22:26:37Z",
        "closed_at": "2022-12-07T23:47:30Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-12-07T22:26:29Z",
        "closed_at": "2022-12-08T20:17:19Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-12-07T22:19:59Z",
        "closed_at": "2022-12-09T16:58:01Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 262,
        "deletions": 98,
        "changed_files": 3,
        "created_at": "2022-12-07T22:07:16Z",
        "closed_at": "2022-12-08T14:48:33Z",
        "merged_at": null,
        "body": "Add a deprecated message and enum option for restoring legacy json field validation.\n\nSee https://github.com/protocolbuffers/protobuf/pull/10750 for more information.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-12-07T20:06:43Z",
        "closed_at": "2022-12-07T22:38:54Z",
        "merged_at": null,
        "body": "Internal code cleanup.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-12-07T18:41:04Z",
        "closed_at": "2022-12-07T21:33:10Z",
        "merged_at": null,
        "body": "Internal change.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 89,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2022-12-07T16:46:12Z",
        "closed_at": "2022-12-14T01:06:32Z",
        "merged_at": null,
        "body": "Add UnknownFieldSet::SerializeToCord()\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 64,
        "deletions": 54,
        "changed_files": 4,
        "created_at": "2022-12-07T16:32:26Z",
        "closed_at": "2022-12-09T18:09:25Z",
        "merged_at": null,
        "body": "Refactor the codepath for unknown field handling.\nThis simplifies adding more operations without widening the side channel.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 184,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2022-12-07T14:26:51Z",
        "closed_at": "2022-12-13T23:28:15Z",
        "merged_at": null,
        "body": "Add support for repeated Cord fields.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 73,
        "changed_files": 1,
        "created_at": "2022-12-07T14:19:09Z",
        "closed_at": "2022-12-17T02:33:32Z",
        "merged_at": null,
        "body": "Rollback of: Simplify protobuf Java message builder by removing methods that calls the super class only.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-12-07T08:36:08Z",
        "closed_at": "2022-12-17T02:33:32Z",
        "merged_at": null,
        "body": "INTERNAL_CHANGE\n\nSigned-off-by: Troy Wang <troywang@google.com>\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-12-07T04:23:18Z",
        "closed_at": "2022-12-08T22:33:40Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 12,
        "deletions": 25,
        "changed_files": 2,
        "created_at": "2022-12-06T22:19:18Z",
        "closed_at": "2022-12-06T23:22:05Z",
        "merged_at": null,
        "body": "Add missing header <iosfwd>\nAdd missing header <istream> and <ostream>\nRemove unneeded proto headers repeated_field.h and generated_message_util.h\n\nRemove unnecessary conversion when calling absl::Hex\nUse StrCat rather than repeated string addition\nUse string_view parameter rather than `const char *`\n\nMake single-argument constructor explicit\n\nUse consistent InitializationErrorMessage logic\n\nFix a typo\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 48,
        "deletions": 33,
        "changed_files": 1,
        "created_at": "2022-12-06T22:09:55Z",
        "closed_at": "2022-12-08T17:08:41Z",
        "merged_at": null,
        "body": "Reduce the stack cost of building descriptors. This reduces the chance of stack\noverflows when the descriptor building recurses into sub-files.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 24174,
        "deletions": 19547,
        "changed_files": 5,
        "created_at": "2022-12-06T19:04:03Z",
        "closed_at": "2022-12-07T22:52:21Z",
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-12-06T17:52:48Z",
        "closed_at": "2022-12-07T06:08:15Z",
        "merged_at": null,
        "body": "Make protos allocation with Arenas faster\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-12-06T17:38:27Z",
        "closed_at": "2022-12-07T18:10:31Z",
        "merged_at": null,
        "body": "Add an allowlist for implementation reserved fields for the C++ implementation.\nThis also includes `protoc`.\nThe allowlist is currently empty.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 10,
        "changed_files": 3,
        "created_at": "2022-12-06T16:53:38Z",
        "closed_at": "2022-12-17T02:33:31Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-12-06T15:52:38Z",
        "closed_at": "2022-12-13T03:36:49Z",
        "merged_at": null,
        "body": "Add Cord based Parse and Serialize logic to MessageLite\n\nFUTURE_COPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/11257 from Neakxs:apply-registration-for-protocel-extensions 8d04626e85c44ca8ba812c8ccb12585b92cb6d6d\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-12-06T14:48:04Z",
        "closed_at": "2022-12-06T18:38:23Z",
        "merged_at": null,
        "body": "[ObjC] Boolean generation options support no value as \"true\".\n\nSlightly shortens what is required to enable generation options.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-12-06T14:00:22Z",
        "closed_at": "2022-12-07T15:10:10Z",
        "merged_at": null,
        "body": "[ObjC] New experimental option to generate into multiple files.\n\nThis generates Messages and Enums into separate files, this is the start of some\nexploratory work to see if not using `-ObjC` with the linker can reduce the size\nof protos by ensuring there are linker references for all the classes needed.\n\nTo take advantage of this, the Application code can't use things like\n`NSClassFromString`, as that would not generate any inker reference for usage of\nthe class.\n\nAgain, this is an experimental feature and may change or be removed at any time,\nit is not counted as a part of the official options provided by the ObjC\nsupport.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2022-12-06T13:59:46Z",
        "closed_at": "2022-12-06T18:34:29Z",
        "merged_at": null,
        "body": "Move from `count(...)` to `contains(...)`\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2022-12-06T06:40:38Z",
        "closed_at": "2022-12-07T18:55:12Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-12-06T06:02:27Z",
        "closed_at": "2022-12-08T00:39:24Z",
        "merged_at": null,
        "body": "Internal change only\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 73,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-12-05T23:06:40Z",
        "closed_at": "2022-12-06T05:45:34Z",
        "merged_at": null,
        "body": "Rollback of: Simplify protobuf Java message builder by removing methods that calls the super class only.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 4,
        "changed_files": 5,
        "created_at": "2022-12-05T22:56:36Z",
        "closed_at": "2022-12-06T02:18:40Z",
        "merged_at": null,
        "body": "Internal change only\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 297,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2022-12-05T22:41:01Z",
        "closed_at": "2022-12-07T17:06:38Z",
        "merged_at": null,
        "body": "Add 'ReadCord` and 'WriteCord` functions to CodedStream\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 51,
        "deletions": 54,
        "changed_files": 7,
        "created_at": "2022-12-05T21:33:36Z",
        "closed_at": "2022-12-17T02:33:31Z",
        "merged_at": null,
        "body": "Migrate away from examining the syntax of a proto file via reflection.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2022-12-05T21:00:07Z",
        "closed_at": "2022-12-17T02:33:31Z",
        "merged_at": null,
        "body": "Migrate away from examining the syntax of a proto file via reflection.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2022-12-05T20:53:52Z",
        "closed_at": "2022-12-17T02:33:30Z",
        "merged_at": null,
        "body": "Migrate away from examining the syntax of a proto file via reflection.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2022-12-05T19:04:06Z",
        "closed_at": "2022-12-06T20:22:50Z",
        "merged_at": null,
        "body": "Make generated python files compatible with Cython (#11011)\n\nReplace access to variables created in globals() by explicit access to the globals() array. This avoids static analysis of the code to error out on those unknown variables, and make the files cythonable.\n\nFixes #10800 \n\nCloses #11011\n\nFUTURE_COPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/11011 from vthib:10800-cython-compatibility 705da40d5c109b0b472483b54917115a5b96b2b8\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 544,
        "deletions": 403,
        "changed_files": 10,
        "created_at": "2022-12-05T17:02:47Z",
        "closed_at": "2022-12-05T22:14:23Z",
        "merged_at": null,
        "body": "update PHP and Ruby to use the new accessors, delete the old ones\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 33,
        "deletions": 9,
        "changed_files": 1,
        "created_at": "2022-12-05T14:26:18Z",
        "closed_at": "2022-12-05T16:58:34Z",
        "merged_at": null,
        "body": "Unify string and cord cleanup nodes in TaggedNode\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 32,
        "deletions": 56,
        "changed_files": 2,
        "created_at": "2022-12-05T12:58:04Z",
        "closed_at": "2022-12-06T00:00:11Z",
        "merged_at": null,
        "body": "Optimize and simplify arena cleanup logic\n\nThis CL changes the prefetch to NTA instead of T0 to reduce cache pollution with a simplified, yet more efficient cleanup prefetch loop which removes stores and loads on the local prefetch stack, and instead simply repeats the load and branch of the prefetch resulting in CPU savings.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 24,
        "deletions": 24,
        "changed_files": 1,
        "created_at": "2022-12-05T08:02:34Z",
        "closed_at": "2022-12-17T02:33:30Z",
        "merged_at": null,
        "body": "Fix lint warnings for protobuf GeneratedMessage.java\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-12-05T03:44:05Z",
        "closed_at": "2023-02-16T21:42:07Z",
        "merged_at": null,
        "body": ".devcontainer/devcontainer.json",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-12-04T13:32:06Z",
        "closed_at": "2022-12-05T16:17:41Z",
        "merged_at": null,
        "body": "ROLLBACK_OF: https://github.com/protocolbuffers/protobuf/issues/3474\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-12-04T08:50:10Z",
        "closed_at": "2022-12-05T16:20:16Z",
        "merged_at": null,
        "body": "Internal Changez\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-12-04T06:52:29Z",
        "closed_at": "2022-12-13T14:55:16Z",
        "merged_at": null,
        "body": null,
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-12-03T17:12:13Z",
        "closed_at": "2022-12-05T18:52:17Z",
        "merged_at": null,
        "body": "Switch from using count to contains and use heterogenous lookup where available\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-12-03T03:51:08Z",
        "closed_at": "2022-12-05T21:28:03Z",
        "merged_at": null,
        "body": "Remove required fields in protobuf python test protos\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-12-02T23:21:16Z",
        "closed_at": "2022-12-17T02:33:29Z",
        "merged_at": null,
        "body": "internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 4,
        "created_at": "2022-12-02T23:01:39Z",
        "closed_at": "2022-12-05T16:20:00Z",
        "merged_at": null,
        "body": "Change 21.9 to 21.10\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-12-02T22:07:38Z",
        "closed_at": "2022-12-02T23:12:08Z",
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 275,
        "deletions": 267,
        "changed_files": 3,
        "created_at": "2022-12-02T19:46:41Z",
        "closed_at": "2022-12-02T21:30:06Z",
        "merged_at": null,
        "body": "[ObjC] Add GenerateFile helper to factor out common code.\n\nFew minor cleanups along the way.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-12-02T19:21:03Z",
        "closed_at": "2022-12-05T17:40:09Z",
        "merged_at": null,
        "body": "Add a printer test case for newlines surrounding a sub Emit() call.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 26,
        "deletions": 10,
        "changed_files": 6,
        "created_at": "2022-12-02T18:44:26Z",
        "closed_at": "2022-12-02T20:09:13Z",
        "merged_at": null,
        "body": "Fix java_linkage_monitor test.\n\nThis was silently breaking because we didn't fail on errors in the test script.  The upb version is also bumped to pull in improvements for system_python that fix the underlying issue (python 3.5 doesn't work with our pip dependencies).\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-12-02T17:56:04Z",
        "closed_at": "2022-12-02T19:17:37Z",
        "merged_at": null,
        "body": "DO NOT MERGE\r\n\r\nThis is merely a test for our java compilation presubmit checks",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 914,
        "deletions": 0,
        "changed_files": 4,
        "created_at": "2022-12-02T13:56:39Z",
        "closed_at": "2022-12-06T00:58:19Z",
        "merged_at": null,
        "body": "Add CordInputStream and CordOutputStream providing stream support directly from/to Cord data\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 65,
        "deletions": 9,
        "changed_files": 1,
        "created_at": "2022-12-02T07:16:48Z",
        "closed_at": "2023-01-19T07:41:45Z",
        "merged_at": null,
        "body": "The fixes from https://github.com/protocolbuffers/protobuf/pull/10978. This PR can be merged without updating the SDK. Will allow people to use Protobuf + AOT sooner rather than later.\r\n\r\nWhen the repo is updated to .NET 7 or .NET 8, the original PR can be rebased on latest to add AOT analysis and provide some AOT smoke tests.\r\n\r\ncc @jskeet ",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 21,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2022-12-02T06:01:41Z",
        "closed_at": "2022-12-17T02:33:29Z",
        "merged_at": null,
        "body": "Test json name conflicts\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 48,
        "deletions": 38,
        "changed_files": 33,
        "created_at": "2022-12-02T04:53:06Z",
        "closed_at": "2023-01-04T21:24:24Z",
        "merged_at": null,
        "body": "Merge release branch 21.x into main",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2022-12-02T03:28:16Z",
        "closed_at": "2022-12-17T02:33:28Z",
        "merged_at": null,
        "body": "Fix lint warnings for protobuf GeneratedMessage.java\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-12-02T02:29:14Z",
        "closed_at": "2023-01-25T16:56:05Z",
        "merged_at": null,
        "body": "(Edited by jskeet) For public release notes:\r\n\r\nAdd a public `IMessage.MergeFrom(ReadOnlySequence<byte>)` extension method, exposing existing internal functionality.\r\n(Parsing a completely new message from `ReadOnlySequence<byte>` was already publicly available, just not merging.)\r\n\r\n----\r\nPublic the `MergeFrom` method of type `ReadOnlySequence<byte>`.\r\n\r\nWe found that the `MergeFrom` method of type `ReadOnlySequence<byte>` is internal.\r\n\r\n**We need it !!!**",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-12-02T00:27:55Z",
        "closed_at": "2022-12-03T00:22:54Z",
        "merged_at": null,
        "body": "Emit a newline after `@file:Suppress(\"DEPRECATION\")`\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 87,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-12-01T23:14:36Z",
        "closed_at": "2022-12-02T19:25:23Z",
        "merged_at": null,
        "body": "Open source google/protobuf/bridge/message_set.proto\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-12-01T18:47:29Z",
        "closed_at": "2022-12-01T19:59:45Z",
        "merged_at": "2022-12-01T19:59:45Z",
        "body": "My previous attempt to do this https://github.com/protocolbuffers/protobuf/pull/11068#issuecomment-1333645637 missed this instance.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-12-01T18:43:22Z",
        "closed_at": "2022-12-02T15:14:31Z",
        "merged_at": null,
        "body": "Override ReadCord() to be implemented in terms of CopyToByteSink\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-12-01T17:54:39Z",
        "closed_at": "2022-12-01T19:33:47Z",
        "merged_at": null,
        "body": "Internal Changez\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-12-01T14:55:44Z",
        "closed_at": "2022-12-05T17:27:58Z",
        "merged_at": null,
        "body": "Add a `WriteCord()` method to `ZeroCopyInputStream`\n\nThis change introduces the `WriteCord()` method in `ZeroCopyInputStream` with a default implementation efficiently writing the cord data onto the stream. Subsequent changes will introduce explicit Cord based input and output streams that will optimize the default implementation by providing zero-copy optimized implementations when reading and writing cord data from/to underlying encoded cord data.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-12-01T14:32:16Z",
        "closed_at": "2022-12-01T17:05:51Z",
        "merged_at": null,
        "body": "We are requesting a range of numbers instead of just one since we have some plans for a variety of orthogonal kinds of custom options. For example:\r\n1. Injecting extra metadata into FileDescriptorProtos via custom options. (These options are inserted by the Buf tool when building proto sources, to encode additional metadata about the unit of files compiled.)\r\n2. Configuration options for protoc plugins, that generate extra metadata into sources. (These options may be used by users when writing proto sources.)\r\n \r\nThe suggested approach of reserving just one number and making it a message that contains *all* options is unattractive since users of one category of options is unlikely to want to import types related to another category.\r\n\r\nFWIW, there are several other rows above that have also chosen to reserve ranges of 5 or 10 numbers.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2714,
        "deletions": 2347,
        "changed_files": 19,
        "created_at": "2022-12-01T04:17:39Z",
        "closed_at": "2022-12-01T21:36:57Z",
        "merged_at": null,
        "body": "Bump upb version and refactor python compatibility.\n\nThis pulls in updates to system_python, which allows for better handling of our non-hermetic setup.  Specifically, our python tests are marked incompatible on systems without a python installation.  This will cause them to get skipped by wildcard expansions (which is why we add 1 explicit target to the kokoro builds).\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 151,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-12-01T01:22:31Z",
        "closed_at": "2022-12-17T02:33:28Z",
        "merged_at": null,
        "body": "Implement CordInputStream in terms of ChunkIterator\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 55,
        "deletions": 23,
        "changed_files": 1,
        "created_at": "2022-12-01T01:11:30Z",
        "closed_at": "2022-12-05T20:49:30Z",
        "merged_at": null,
        "body": "Enable Text format parser to skip unknown short-formed repeated fields.\n\nThe text format specs state that short formed repeated field should be valid. For example:\n```\nrepeated_field: [{}, {}]\n```\nHowever, this was not supported when text format parser tries to skip **unknown fields**.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 37,
        "deletions": 37,
        "changed_files": 3,
        "created_at": "2022-11-30T23:15:50Z",
        "closed_at": "2022-12-02T17:11:05Z",
        "merged_at": null,
        "body": "Internal change.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2022-11-30T22:09:03Z",
        "closed_at": "2023-05-17T14:21:48Z",
        "merged_at": null,
        "body": "Hi,\r\n\r\nWhen benchmarking proto_benchmark from fleetbench on an AArch64 target we found that clang is able to vectorize these functions and they offer better performance than the scalar alternative.\r\n\r\nI ran //src/google/protobuf:arena_unittest on aarch64-none-linux-gnu. Should I run any other tests? Also protobuf used to have its own set of benchmarks, but I can't find these when I query all targets with bazel. Let me know if you'd like me to run anything else, I couldn't find instructions on what the full test run is.",
        "comments": 15
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2022-11-30T22:02:41Z",
        "closed_at": "2022-12-17T02:33:27Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-11-30T21:08:28Z",
        "closed_at": "2022-11-30T22:17:18Z",
        "merged_at": null,
        "body": "Fix copybara transformations for Python/C++ code.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 400,
        "deletions": 313,
        "changed_files": 30,
        "created_at": "2022-11-30T21:03:17Z",
        "closed_at": "2022-12-17T02:33:27Z",
        "merged_at": null,
        "body": "Add new features to io::Printer for improving compactness of output:\n\n- Custom \"chomp the next ;\"-like behavior for all variable substitutions.\n  The precise behavior of whitespace after a $...$; has also been changed, to\n  produce more compact output.\n- Non-emitted comments, which allow comments to exist inline in raw\n  strings that will not be emitted in the final output.\n- Prevent recursion when evaluating callback substitutions.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-11-30T20:47:35Z",
        "closed_at": "2022-12-01T21:38:38Z",
        "merged_at": null,
        "body": "Loosen pinned numpy version.\n\n1.21.6 is incompatible with python 3.11, but 1.22.* is incompatible with python 3.7.  Instead, we select the latest 1.21 patch available.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-11-30T19:36:48Z",
        "closed_at": "2022-11-30T22:14:00Z",
        "merged_at": null,
        "body": "LazyField::IsInitialized instead of LazyField::Get for oneof.\n\nOneof lazy fields can also benefit from prior verification just like\nregular lazy fields.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 86,
        "deletions": 10,
        "changed_files": 6,
        "created_at": "2022-11-30T18:30:25Z",
        "closed_at": "2022-12-14T18:40:23Z",
        "merged_at": null,
        "body": "tony\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 164,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2022-11-30T16:33:13Z",
        "closed_at": "2022-12-01T03:01:38Z",
        "merged_at": null,
        "body": "Implement ZeroCopyInputStream::ReadCord() in terms of absl::CordBuffer\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-11-30T11:40:34Z",
        "closed_at": "2023-01-09T07:09:58Z",
        "merged_at": null,
        "body": "* Added support for Dynamic typing by adding DynamicMessage for C#. The implementation closely follows the implementation done in java.\r\n* Added dotnet workflow for build and test C# code",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-11-29T21:53:00Z",
        "closed_at": "2022-11-30T18:52:23Z",
        "merged_at": "2022-11-30T18:52:23Z",
        "body": "Disables homebrew's automatic updates, which will make tests more hermetic. Also stops failure related to homebrew no longer supporting php 7.4.\r\n\r\nRemove the homebrew install of PHP 7.4 for our PHP 7.4 tests as we can't install it and it's already on the machine.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 139,
        "deletions": 95,
        "changed_files": 5,
        "created_at": "2022-11-29T21:51:19Z",
        "closed_at": "2022-12-17T02:33:26Z",
        "merged_at": null,
        "body": "Soft deprecate python MessageFactory\n\nSoft deprecate python MessageFactory. Added new replacement APIs GetMessageClass(descriptor) and GetMessagesFromFiles(files, pool)\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 40,
        "deletions": 41,
        "changed_files": 24,
        "created_at": "2022-11-29T21:48:12Z",
        "closed_at": "2022-11-29T22:48:28Z",
        "merged_at": "2022-11-29T22:48:28Z",
        "body": "Update Protobuf 21.10 Release Notes to remove the \"-rc0\" part.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 290,
        "deletions": 317,
        "changed_files": 4,
        "created_at": "2022-11-29T21:41:19Z",
        "closed_at": "2022-12-01T18:13:46Z",
        "merged_at": null,
        "body": "[ObjC] Convert GenerateSource over to Printer::Emit.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-11-29T20:52:45Z",
        "closed_at": "2022-12-01T19:40:14Z",
        "merged_at": null,
        "body": "Prevent merging PRs directly in main with a failing Mergeable check, except when an `mergeable:force-allow` label is present.\n\nThis serves to prevent accidental PR merges outside of Copybara, but is not actually enforced by branch protection.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 68,
        "deletions": 51,
        "changed_files": 4,
        "created_at": "2022-11-29T19:04:01Z",
        "closed_at": "2022-11-30T05:53:11Z",
        "merged_at": null,
        "body": "Expose internal setExtension method for Kotlin\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-11-29T18:23:10Z",
        "closed_at": "2022-12-14T23:12:53Z",
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 222,
        "deletions": 175,
        "changed_files": 16,
        "created_at": "2022-11-29T16:36:44Z",
        "closed_at": "2022-12-01T17:01:51Z",
        "merged_at": null,
        "body": "[ObjC] Move GenerateHeader over to Printer::Emit.\n\nUpdate ImportWriter to have a second Emit api for the runtime files to\nstreamline things a bit better.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-11-29T10:56:56Z",
        "closed_at": "2022-11-29T13:58:33Z",
        "merged_at": null,
        "body": "Include header for Abseil's `flat_hash_set<>`\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-11-29T10:01:58Z",
        "closed_at": "2022-11-29T14:01:46Z",
        "merged_at": "2022-11-29T14:01:46Z",
        "body": "We may want to remove .NET 5 support some time in 2023, but there's no rush to do so.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 65,
        "deletions": 54,
        "changed_files": 37,
        "created_at": "2022-11-29T03:06:40Z",
        "closed_at": "2022-11-29T19:12:42Z",
        "merged_at": "2022-11-29T19:12:42Z",
        "body": "Protobuf 21.10 Release Notes:\r\n\r\n\u00a0 Java\r\n\u00a0 * Use bit-field int values in buildPartial to skip work on unset groups of fields. (#10960)\r\n\u00a0 * Mark nested builder as clean after clear is called (#10984)\r\n\u00a0 UPB\r\n\u00a0 * Fix UPB_LIKELY() for 32-bit Windows builds; update protobuf_deps to point to the current upb 21.x (#11028)\r\n\u00a0 Other \r\n\u00a0 * Add public modifiers to kotlin code (#11068)\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 151,
        "deletions": 42,
        "changed_files": 17,
        "created_at": "2022-11-29T00:09:52Z",
        "closed_at": "2022-12-17T02:33:26Z",
        "merged_at": null,
        "body": "Use SerialArena\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-11-28T20:21:17Z",
        "closed_at": "2022-12-17T02:33:26Z",
        "merged_at": null,
        "body": "Add annotation for services.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 105,
        "deletions": 71,
        "changed_files": 5,
        "created_at": "2022-11-28T20:14:04Z",
        "closed_at": "2022-11-30T19:09:42Z",
        "merged_at": null,
        "body": "[ObjC] Update ImportWriter to use Printer::Emit.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 109,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2022-11-28T18:44:00Z",
        "closed_at": "2022-12-05T16:45:51Z",
        "merged_at": null,
        "body": "Add an allowlist for implementation reserved fields for the C++ implementation. This also includes `protoc`.\nThe allowlist is currently empty.\n\nIt uses a simple text format to avoid reentrant dependencies into protobuf\nparsing, and allow sharing between languages.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 144,
        "deletions": 144,
        "changed_files": 12,
        "created_at": "2022-11-28T18:10:10Z",
        "closed_at": "2022-11-28T19:26:16Z",
        "merged_at": "2022-11-28T19:26:16Z",
        "body": "This is a fix for https://github.com/protocolbuffers/protobuf/issues/10593 by cherrypicking https://github.com/protocolbuffers/protobuf/pull/10599 and https://github.com/protocolbuffers/protobuf/pull/10616.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2022-11-28T18:03:28Z",
        "closed_at": "2022-11-29T04:28:59Z",
        "merged_at": null,
        "body": "[ObjC] Fix a clang tidy warning about const usage and make the FileGenerator const.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 36,
        "deletions": 278,
        "changed_files": 11,
        "created_at": "2022-11-28T17:04:36Z",
        "closed_at": "2022-11-28T18:25:11Z",
        "merged_at": null,
        "body": "Add support for lazy fields to TDP.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-11-24T14:05:35Z",
        "closed_at": "2022-12-02T08:58:59Z",
        "merged_at": null,
        "body": "FileOutputStream: Properly pass block_size to CopyingOutputStreamAdaptor\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 370,
        "deletions": 69,
        "changed_files": 7,
        "created_at": "2022-11-24T00:49:12Z",
        "closed_at": "2022-12-17T02:33:25Z",
        "merged_at": null,
        "body": "Add embedded cleanups\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-11-23T21:49:08Z",
        "closed_at": "2022-11-28T16:48:57Z",
        "merged_at": null,
        "body": "[ObjC] Final const cleanups for generator.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 30,
        "deletions": 26,
        "changed_files": 2,
        "created_at": "2022-11-23T21:25:49Z",
        "closed_at": "2022-11-28T16:45:32Z",
        "merged_at": null,
        "body": "[ObjC] Move the has bits computation to the ctor.\n\nThis lets the source generation method become const since it doesn't have to\nupdate any internal state.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-11-23T21:10:21Z",
        "closed_at": "2022-11-28T16:00:57Z",
        "merged_at": null,
        "body": "[ObjC] Generator const cleanups\n\nLabel some more methods as const.\nRemove some method decls that don't exist (not sure where they came from).\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-11-23T19:12:45Z",
        "closed_at": "2022-12-17T02:33:25Z",
        "merged_at": null,
        "body": "Condition numpy version on python version\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-11-23T18:29:03Z",
        "closed_at": "2022-11-28T18:29:13Z",
        "merged_at": null,
        "body": "Allow message name \"List\" without conflict\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-11-23T18:07:37Z",
        "closed_at": "2022-11-28T15:56:34Z",
        "merged_at": null,
        "body": "[ObjC] Move all Message, Enum, & Extension Generators up to the File.\n\nCreate/Collect all the MessageGenerators/EnumGenerators/ExtensionGeneators up at\nthe FileGenerator level and remove the need for some helpers and need for\ngeneration apis to recurse through the generators.\n\nThe only change to the .pbobjc.m files is positionally where the enum support\nfor nested enums appears, it now is the same order as it was in the .pbobjc.h\nfiles instead of being closer the the type it was nested in.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 211,
        "deletions": 64,
        "changed_files": 5,
        "created_at": "2022-11-23T14:57:31Z",
        "closed_at": "2022-12-08T14:47:20Z",
        "merged_at": null,
        "body": "Arena Prep Cleanup\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 351,
        "deletions": 947,
        "changed_files": 12,
        "created_at": "2022-11-23T07:08:30Z",
        "closed_at": "2022-11-28T20:47:27Z",
        "merged_at": null,
        "body": "Remove _internal_has_XXX APIs and directly check presence (e.g. has_bits, oneof case).\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-11-23T06:55:14Z",
        "closed_at": "2022-12-17T02:33:24Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 69,
        "changed_files": 1,
        "created_at": "2022-11-23T04:34:53Z",
        "closed_at": "2022-12-01T02:40:18Z",
        "merged_at": null,
        "body": "Fix lint warnings for protobuf GeneratedMessage.java\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 17,
        "changed_files": 1,
        "created_at": "2022-11-22T23:10:30Z",
        "closed_at": "2022-11-23T17:16:12Z",
        "merged_at": "2022-11-23T17:16:12Z",
        "body": "The README file had not a consistent handling of links. Sometimes there was a Link with Text sometimes there was a Linked URL. Sometimes there was \u00abhere\u00bb mentioned in the text. \r\n\r\nThe changes were made under the following rules:\r\n* Links have a URL and a text\r\n* Link-Text is a (human) meaningful description of the target (machine) URL\r\n\r\nWhat was not touched/fixed:\r\n* Line-breaks at different width",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 15,
        "deletions": 6,
        "changed_files": 4,
        "created_at": "2022-11-22T18:55:30Z",
        "closed_at": "2022-11-22T23:02:57Z",
        "merged_at": null,
        "body": "Upgrade rules_python to newest version.\n\nThis requires moving off the soon to be deprecated pip_install to pip_parse and pinning the numpy version\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 15,
        "deletions": 15,
        "changed_files": 8,
        "created_at": "2022-11-22T18:36:25Z",
        "closed_at": "2022-12-01T23:39:31Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-11-22T17:35:20Z",
        "closed_at": "2022-11-23T18:53:14Z",
        "merged_at": null,
        "body": "[ObjC] pass the Descriptor initialization flags to FieldDescriptor\n\nThe avoids passing four arguments and instead just passes one, so there tradeoff\nin code is likely slightly better and from a perf pov, likely a wash.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-11-22T13:48:35Z",
        "closed_at": "2022-11-28T16:53:30Z",
        "merged_at": null,
        "body": "[ObjC] Put out of range closed enum extension values in unknown fields.\n\nFor normal fields, closed enums get their out of range values put into unknown\nfields, but that wasn't happening for extension fields, this fixes that by\nadding the validation during parsing.\n\nAlso document on the getExtension API what happens with enums.\n\nAdd tests to confirm expected behaviors.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 125,
        "deletions": 132,
        "changed_files": 3,
        "created_at": "2022-11-22T13:40:43Z",
        "closed_at": "2022-11-22T16:58:44Z",
        "merged_at": null,
        "body": "[ObjC] Move GPBExtensionMergeFromInputStream into GPBMessage.m\n\nThis will allow it to use some other helpers private to that file in the future.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-11-22T01:28:03Z",
        "closed_at": "2022-11-28T18:13:10Z",
        "merged_at": "2022-11-28T18:13:10Z",
        "body": "C++struct and protobuf conversion library, which also supports generating header files according to proto.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 512,
        "deletions": 0,
        "changed_files": 15,
        "created_at": "2022-11-21T21:12:04Z",
        "closed_at": "2023-01-09T19:51:54Z",
        "merged_at": null,
        "body": "cf https://github.com/google/oss-fuzz/pull/9015 ",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 25778,
        "deletions": 22474,
        "changed_files": 6,
        "created_at": "2022-11-21T19:08:18Z",
        "closed_at": "2022-11-21T21:02:52Z",
        "merged_at": null,
        "body": "update Ruby to use the newer upb_Map_Next() iterator\n\nalso update protobuf_defs.bzl to point to the latest upb commit, to pull in upb_Map_Next()\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 18,
        "deletions": 11,
        "changed_files": 3,
        "created_at": "2022-11-21T18:13:58Z",
        "closed_at": "2022-11-21T19:15:17Z",
        "merged_at": null,
        "body": "fix the ruby and php builds which were broken by a recent upb change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-11-21T14:13:36Z",
        "closed_at": "2023-03-03T07:48:55Z",
        "merged_at": null,
        "body": "This causes various continuous lines of compilation error within vs.",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 73,
        "changed_files": 1,
        "created_at": "2022-11-21T09:58:56Z",
        "closed_at": "2022-11-23T02:46:31Z",
        "merged_at": null,
        "body": "Simplify protobuf java message builder by removing methods forwarding to superclass only.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2022-11-21T08:26:17Z",
        "closed_at": "2023-02-28T04:24:41Z",
        "merged_at": null,
        "body": "On some linkers, the ABI definitions in src/libprotoc.map and friends do not match all symbols that need to be exported. This causes a linker error when trying to use the resulting shared object library: `undefined reference to 'scc_info_FileDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto'`\r\n\r\nQuite a few people seem to be affected by this, see #5144 for discussion. It seems that yocto now applies this patch itself, but that doesn't help people building in other places (I encountered this on some HPC machines), so it would probably be good to apply it upstream as well.",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-11-19T05:03:00Z",
        "closed_at": "2022-11-23T20:35:35Z",
        "merged_at": null,
        "body": "If more than one version of rubygem google-protobuf is installed it causes problem. Make sure symbols are also hidden on FreeBSD like it is already done for Linux and Darwin.\r\n\r\nThis fixes problems reported here:\r\nhttps://bugs.freebsd.org/bugzilla/show_bug.cgi?id=266925\r\nhttps://gitlab.com/gitlab-org/gitlab/-/issues/345693",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-11-18T21:46:03Z",
        "closed_at": "2022-11-21T18:28:36Z",
        "merged_at": null,
        "body": "update protobuf_deps to pull in the latest 21.x\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 178,
        "deletions": 161,
        "changed_files": 5,
        "created_at": "2022-11-18T18:58:26Z",
        "closed_at": "2022-12-17T02:33:24Z",
        "merged_at": null,
        "body": "In arena, allocate strings on dedicated string blocks so that they can be efficiently destructed.\n\n- StringBlocks form a chunked linked list in which all nodes other than the first are full. When sizeof(void*)==8 and sizeof(std::string)==24, there are 21 strings per 512 byte StringBlock.\n- We no longer need to store cleanup nodes for std::string (when using AllocateAlignedWithCleanup) - instead we traverse the StringBlock list.\n- Template AllocAligned on is_string in order to avoid comparing the destructor against the string destructor on the allocation hot path.\n- Remove specialized cleanup blocks for string/cord. This allows for simplifying the allocation and cleanup code, and we still save memory due to no longer needing cleanup nodes for most strings.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 143,
        "deletions": 136,
        "changed_files": 41,
        "created_at": "2022-11-18T18:07:48Z",
        "closed_at": "2022-11-30T20:50:41Z",
        "merged_at": null,
        "body": "Internal change only\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-11-18T17:38:52Z",
        "closed_at": "2022-11-18T21:12:22Z",
        "merged_at": null,
        "body": "Rename CODEOWNERS to CODEOWNERSHIP\n\nCODEOWNERS has been too noisy, moving the file to stop enforcement while we look into a better solution.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2022-11-18T10:24:44Z",
        "closed_at": "2022-12-01T14:23:05Z",
        "merged_at": null,
        "body": "Will fill this in later.\n\nWill really, really fill this in later.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 187,
        "deletions": 150,
        "changed_files": 2,
        "created_at": "2022-11-18T00:09:35Z",
        "closed_at": "2022-12-17T02:33:23Z",
        "merged_at": null,
        "body": "Use the \"shldq\" decoder for the specialized parsers, rather than the\n\"RotRight7\" decoder.  The \"shldq\" technique is much faster on recent Intel and\nAMD CPUs, when processing larger integers, especially on Zen.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 82,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-11-17T21:08:24Z",
        "closed_at": "2022-11-24T04:41:14Z",
        "merged_at": null,
        "body": "add unit test for new upb bug fix and update to the latest upb\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-11-17T19:23:47Z",
        "closed_at": "2022-12-17T02:33:23Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-11-17T14:14:20Z",
        "closed_at": "2022-11-18T16:48:26Z",
        "merged_at": null,
        "body": "protobuf: Improve error message while constructing messages in Python.\n\n\"Value is not iterable\" is sometimes not that helpful. Lets at least mention the field name.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2022-11-17T13:16:11Z",
        "closed_at": "2022-12-06T20:22:50Z",
        "merged_at": null,
        "body": "Replace access to variables created in globals() by explicit access to the globals() array. This avoids static analysis of the code to error out on those unknown variables, and make the files cythonable.\r\n\r\nFixes #10800 ",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 33,
        "changed_files": 1,
        "created_at": "2022-11-17T01:01:48Z",
        "closed_at": "2022-12-17T02:33:23Z",
        "merged_at": null,
        "body": "Internal cleanup\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 15,
        "changed_files": 1,
        "created_at": "2022-11-16T22:27:54Z",
        "closed_at": "2022-12-17T02:33:22Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-11-16T21:59:07Z",
        "closed_at": "2022-11-23T21:06:35Z",
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 82,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-11-16T08:42:17Z",
        "closed_at": "2022-12-17T02:33:53Z",
        "merged_at": null,
        "body": "implement reserved names and ranges for messages and enums\nhttps://github.com/protocolbuffers/protobuf/issues/10158\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 18,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-11-16T04:17:03Z",
        "closed_at": "2022-11-17T18:01:13Z",
        "merged_at": null,
        "body": "Add repeated and nested message fields to deprecated test proto.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2022-11-15T22:22:27Z",
        "closed_at": "2022-11-16T18:30:54Z",
        "merged_at": null,
        "body": "Remove syntax usage in test_util.py\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-11-15T21:44:44Z",
        "closed_at": "2022-12-17T02:33:53Z",
        "merged_at": null,
        "body": "presubmit\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 49,
        "deletions": 20,
        "changed_files": 4,
        "created_at": "2022-11-15T19:26:18Z",
        "closed_at": "2022-11-17T21:25:45Z",
        "merged_at": null,
        "body": "Correctly discard unknown enum name strings in an array when parsing a repeated field.\n\nThis was a regression in the new parser.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-11-15T16:37:06Z",
        "closed_at": "2022-11-16T17:15:42Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 92,
        "deletions": 58,
        "changed_files": 28,
        "created_at": "2022-11-15T14:04:45Z",
        "closed_at": "2022-11-15T19:24:54Z",
        "merged_at": null,
        "body": "[ObjC] Update generation to include the new closed enum information.\n\nAlso bump the generation version since the generate files require the newer\nlibrary version.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 172,
        "deletions": 60,
        "changed_files": 6,
        "created_at": "2022-11-15T14:03:46Z",
        "closed_at": "2022-11-15T17:02:12Z",
        "merged_at": null,
        "body": "[ObjC] Add the concept of a closed enum.\n\n- FieldDescriptor:\n  - Add a new flag to mark when the enum on the field is closed (vs open).\n  - Support computing the state for when generated sources predate the support.\n- EnumDescriptor:\n  - Support passing flags to the descriptor creation, currently closed is the\n    only new flag.\n  - Add an isClosed property to expose the state of the enum.\n\nThis does NOT update generation yet, allows things to be tested before the\ngeneration support is added.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2022-11-15T14:03:45Z",
        "closed_at": "2022-11-15T17:48:59Z",
        "merged_at": null,
        "body": "[ObjC] Mark the syntax on FileDescriptor as deprecated.\n\nThis really shouldn't be used for making decisions, so mark it as such.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 36,
        "deletions": 35,
        "changed_files": 2,
        "created_at": "2022-11-15T14:02:48Z",
        "closed_at": "2022-11-15T16:58:21Z",
        "merged_at": null,
        "body": "[ObjC] Minor cleanups for the descriptor startup.\n\n- Streamline the FieldDescriptor loop a little.\n- Move some of the init methods from PackagePrivate into the impl file as\n  nothing outside calls them and it better encapsulates the signature.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 25,
        "deletions": 8,
        "changed_files": 3,
        "created_at": "2022-11-15T10:32:30Z",
        "closed_at": "2022-12-17T02:33:53Z",
        "merged_at": null,
        "body": "Allow a custom MessagePrinter to control whether or not to bypass the default message printing.\n\nThis allows the custom printer to issue a preamble (e.g. comment), to modify the message (in a copy) before printing, in addition to the already existing printing customizations.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 653,
        "deletions": 561,
        "changed_files": 2,
        "created_at": "2022-11-14T23:05:36Z",
        "closed_at": "2022-11-23T21:39:34Z",
        "merged_at": null,
        "body": "Refactor proto2::Map to move all the key-only operations into a key-only base\nclass. This reduces code duplication.\nIt also enables more generic access for the table-driven parser.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-11-14T22:45:38Z",
        "closed_at": "2022-12-17T02:33:52Z",
        "merged_at": null,
        "body": "Add newline to kotlin generated code\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 30,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2022-11-14T20:14:48Z",
        "closed_at": "2022-11-14T23:30:51Z",
        "merged_at": "2022-11-14T23:30:51Z",
        "body": "Omitting this step was leading to stale cached versions of nested messages. See https://github.com/protocolbuffers/protobuf/issues/10624",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-11-14T19:06:11Z",
        "closed_at": "2022-11-14T20:21:11Z",
        "merged_at": null,
        "body": "[ObjC] Bring back the explicit getter for enumDescriptor.\n\nThe static analyzer in some versions of Xcode now flag the enumDescriptor_ as\nretained by the generated methods and not being release in dealloc. So avoid the\nwhole issue by just bringing back the explicit getter.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 93,
        "deletions": 35,
        "changed_files": 3,
        "created_at": "2022-11-14T17:17:16Z",
        "closed_at": "2022-11-16T21:34:56Z",
        "merged_at": null,
        "body": "Add ability for custom a MessagePrinter to default back to the default implementation.\n\nPrior to the CL we cannot use the printer as that would trigger a recursion. So the only way out would be to create a new printer that has the same abilities as the current printer.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2022-11-14T14:25:58Z",
        "closed_at": "2022-11-21T18:26:58Z",
        "merged_at": null,
        "body": "This intends to be a first step solving issue #10965 and #2530. It just updates bazel skylib to version 1.3.0.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 633,
        "deletions": 6,
        "changed_files": 10,
        "created_at": "2022-11-14T14:24:20Z",
        "closed_at": "2023-05-24T01:08:42Z",
        "merged_at": null,
        "body": "- [x] Support reflection accessors\r\n- [x] Support extensions\r\n- [ ] Integrate Native AOT app into unit tests **EDIT:** Should these run automatically? How? From CI script or as part of unit test publishing and launching app?\r\n\r\nPreviously added trim attributes enables most of Google.Protobuf to work with Native AOT. There are some problematic `MakeGenericType` usages around reflection and extensions that need work.",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-11-14T13:39:55Z",
        "closed_at": "2022-12-14T14:57:00Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3535,
        "deletions": 28,
        "changed_files": 27,
        "created_at": "2022-11-14T13:30:23Z",
        "closed_at": "2022-12-17T02:33:52Z",
        "merged_at": null,
        "body": "Arena: Add `kArenaDestructor`\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3525,
        "deletions": 28,
        "changed_files": 26,
        "created_at": "2022-11-14T12:58:41Z",
        "closed_at": "2022-12-17T02:33:51Z",
        "merged_at": null,
        "body": "Arena Hybrid\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-11-14T01:55:19Z",
        "closed_at": "2022-11-15T19:55:35Z",
        "merged_at": null,
        "body": "Updated comment to be more enthusiastic!\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-11-12T21:06:40Z",
        "closed_at": "2022-11-18T13:18:36Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-11-11T20:04:13Z",
        "closed_at": "2022-11-22T17:52:50Z",
        "merged_at": null,
        "body": "Cleanup arena.h template dispatch.\n\nCreateInternal dispatch is not necessary, both sides did the same.\nOwnInternal can be changed with a std::conditional_t.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2022-11-11T19:03:58Z",
        "closed_at": "2022-11-11T20:09:31Z",
        "merged_at": null,
        "body": "Fix missing `google::protobuf::RepeatedPtrField<std::string>` issue in GCC\n\nWhen we build DSOs in CMake, we use the `-fvisibility=hidden` flag to hide\nsymbols by default and then explicitly export public-facing symbols using\n`__attribute__((visibility (\"default\")))` (for example via the\n`PROTOBUF_EXPORT_TEMPLATE_DECLARE` macro).\n\nA bunch of symbols related to `google::protobuf::RepeatedPtrField<std::string>`\nwere not visible on libprotobuf.so for GCC builds, and it turned out to be\nbecause GCC was ignoring the visibility attribute due to it appearing after\n`RepeatedPtrField<std::string>` had already been instantiated.\n\nI tried moving the declaration up in the file, but found that if I move it up\nhigh enough to fix GCC then it breaks Clang. So instead, this change just\ndisables the code size optimization that required us to centralize the template\ndefinition in one .cc file. Now any usage of `RepeatedPtrField<std::string>`\nwill be inlined into each translation unit that uses it, so we don't have to\nworry about the definition being visible in libprotobuf.so.\n\nFixes #10833.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 25,
        "deletions": 17,
        "changed_files": 1,
        "created_at": "2022-11-11T02:16:01Z",
        "closed_at": "2022-12-16T05:21:00Z",
        "merged_at": null,
        "body": "Resolve #10949 ",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 28,
        "changed_files": 2,
        "created_at": "2022-11-10T21:09:38Z",
        "closed_at": "2022-11-14T17:05:57Z",
        "merged_at": null,
        "body": "Enforce GPBFieldHasEnumDescriptor always being set.\n\nGoing back to the first ObjC support commit, there never really was support for\nnot have the EnumDescriptors, so start removing that partial support.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-11-10T14:48:57Z",
        "closed_at": "2022-11-23T20:40:54Z",
        "merged_at": null,
        "body": "### What happened\uff1f\nThere are 1 security vulnerabilities found in sphinx 2.3.1\n- [CVE-2020-11022](https://www.oscs1024.com/hd/CVE-2020-11022)\n\n\n### What did I do\uff1f\nUpgrade sphinx from 2.3.1 to  for vulnerability fix\n\n### What did you expect to happen\uff1f\nIdeally, no insecure libs should be used.\n\n### The specification of the pull request\n[PR Specification](https://www.oscs1024.com/docs/pr-specification/) from OSCS",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-11-10T10:07:24Z",
        "closed_at": "2022-11-16T19:24:31Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 861,
        "deletions": 731,
        "changed_files": 13,
        "created_at": "2022-11-10T05:36:27Z",
        "closed_at": "2022-11-14T20:01:43Z",
        "merged_at": "2022-11-14T20:01:43Z",
        "body": "Changes to make this improvement:\r\n\r\n1) All non-repeated builder fields (including maps) now have a presence bit regardless of syntax.\r\n\r\n2) The buildPartial method is split into one method per 32-field block (aligned with bit-mask ints)\r\n\r\n3) If a presence bit-mask int is set to 0, no fields are present, so we can skip the logic for all of those fields in the buildPartial step.\r\n\r\nFor messages with a lot of fields (> 100) that are sparsely populated this can result in a significant improvement. Not only does it potentially skip a lot of field copying logic, but also breaks the buildPartial method into chunks that should be more easily digested by the JIT compiler as discussed in this issue: https://github.com/protocolbuffers/protobuf/issues/10247.\r\n\r\nPiperOrigin-RevId: 485952448",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 18,
        "deletions": 2,
        "changed_files": 4,
        "created_at": "2022-11-10T00:45:47Z",
        "closed_at": "2022-12-17T02:33:51Z",
        "merged_at": null,
        "body": "Adding always_print_repeated_fields option to json serialization\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-11-09T23:31:15Z",
        "closed_at": "2022-11-14T18:58:37Z",
        "merged_at": null,
        "body": "proto2::Map improvements\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2022-11-09T23:16:59Z",
        "closed_at": "2022-11-10T18:26:18Z",
        "merged_at": null,
        "body": "Stop generating an override for getUnknownFields() the GeneratedMessage version\nshould work for everyone.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-11-09T23:08:13Z",
        "closed_at": "2022-12-01T17:52:37Z",
        "merged_at": null,
        "body": "Internal Change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 172,
        "deletions": 25,
        "changed_files": 6,
        "created_at": "2022-11-09T21:26:07Z",
        "closed_at": "2022-12-17T02:33:50Z",
        "merged_at": null,
        "body": "If these walls could talk...\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 174,
        "deletions": 36,
        "changed_files": 1,
        "created_at": "2022-11-09T21:19:16Z",
        "closed_at": "2022-11-09T23:37:40Z",
        "merged_at": null,
        "body": "Document cleanups that should be done in a not-too-distant breaking-change\nrelease.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 160,
        "deletions": 29,
        "changed_files": 11,
        "created_at": "2022-11-09T21:17:15Z",
        "closed_at": "2022-12-17T02:33:50Z",
        "merged_at": null,
        "body": "Add RepeatedPtrField(internal::InternalVisibility, Arena*);\n\nUse RepeatedPtrField constructor that requires InternalVisibility to control the visibility\nof the said constructor in the future.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2022-11-09T11:55:24Z",
        "closed_at": "2022-11-17T12:42:19Z",
        "merged_at": null,
        "body": "Bool is serialized using fixed type encoder here: https://github.com/protocolbuffers/protobuf/blob/main/src/google/protobuf/wire_format.cc#L1696. It should be deserialized using fixed type parser, not varint parser.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 56,
        "deletions": 10,
        "changed_files": 3,
        "created_at": "2022-11-09T08:44:56Z",
        "closed_at": "2022-11-10T21:53:45Z",
        "merged_at": null,
        "body": "Begin emitting semantic metadata for some C++ proto features.\n\nThis is a longstanding feature request from users. By\nmarking generated code with semantics, we will be able\nto filter read calls from write calls.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 89,
        "deletions": 94,
        "changed_files": 1,
        "created_at": "2022-11-09T06:09:02Z",
        "closed_at": "2022-11-23T03:36:56Z",
        "merged_at": null,
        "body": "Fix lint warnings for protobuf GeneratedMessage.java\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-11-09T03:02:09Z",
        "closed_at": "2022-11-09T23:25:04Z",
        "merged_at": null,
        "body": "Workaround for a clang crash.\n\nWhile generating an L value for `has_annotations`, Clang hits a point where it\nexpects `BlockDecl` but is actually a `CXXMethodDecl`. Using a named capture\nparameter avoids this assertion failure/crash.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 6,
        "changed_files": 5,
        "created_at": "2022-11-08T22:32:49Z",
        "closed_at": "2022-11-11T23:04:41Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 5,
        "changed_files": 4,
        "created_at": "2022-11-08T18:36:32Z",
        "closed_at": "2022-11-10T16:56:11Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-11-08T06:35:38Z",
        "closed_at": "2022-11-09T00:09:37Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 7,
        "changed_files": 4,
        "created_at": "2022-11-08T02:04:59Z",
        "closed_at": "2022-11-08T21:41:43Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 70,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-11-08T00:47:10Z",
        "closed_at": "2022-12-17T02:33:50Z",
        "merged_at": null,
        "body": "Add DiscardUnknownFieldsParser to protobuf-lite.  It makes it easy for apps to discard unknown fields from the deserialized protobuf.  Fields are unknown if they were removed from the app's protobuf definition.\n\n    Parser<MyProtobuf> parser = DiscardUnknownFieldsParser.wrap(MyProtobuf.parser());\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 350,
        "deletions": 190,
        "changed_files": 10,
        "created_at": "2022-11-07T21:39:03Z",
        "closed_at": "2022-12-17T04:03:42Z",
        "merged_at": null,
        "body": "Add debug_redact field option to protobuf.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 20,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2022-11-07T21:35:15Z",
        "closed_at": "2022-11-08T17:17:32Z",
        "merged_at": null,
        "body": "Add template comment and package to previously empty generated kotlin proto files.\n\nWe generate a Kotlin file to correspond to each message, which left the per-file generated file blank. We would still like to generate a file to deal with edge cases where there are no messages defined in a proto file. To fix, we print the default comment about the file being generated as well as a package statement.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-11-07T21:04:16Z",
        "closed_at": "2022-11-08T18:28:48Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 42,
        "deletions": 42,
        "changed_files": 22,
        "created_at": "2022-11-07T20:56:23Z",
        "closed_at": "2022-11-08T18:08:53Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-11-07T20:41:00Z",
        "closed_at": "2022-12-06T05:53:07Z",
        "merged_at": null,
        "body": "Internal protobuf changes\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-11-07T20:18:13Z",
        "closed_at": "2022-11-10T16:39:27Z",
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-11-07T19:41:33Z",
        "closed_at": "2022-11-14T18:50:27Z",
        "merged_at": null,
        "body": "Use ARM-optimized varint decoding functions with table-driven parser.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-11-07T19:11:57Z",
        "closed_at": "2022-11-08T17:57:06Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 8,
        "changed_files": 7,
        "created_at": "2022-11-07T18:18:29Z",
        "closed_at": "2022-11-08T17:39:19Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-11-07T16:57:09Z",
        "closed_at": "2022-11-09T14:57:14Z",
        "merged_at": null,
        "body": "Update auto-generation script to handle well-known types\n\nI went ahead and deleted the update_file_list.sh script, because (a)\nthere was no good reason for it to be in a separate script and (b) we\nnow need to handle the well-known types in addition to file_lists.cmake.\nWith this change, we just invoke the staleness tests from the main\nscript to update everything.\n\nWhile I was at it I made a couple small fixes:\n- Don't skip the update step just because the previous commit was by\n  \"Protobuf Team Bot\". Copybara commits use this name and we still want\n  to do the auto-update step after them.\n- Include the CL number in the description if the previous commit came\n  from a CL.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 28,
        "deletions": 32,
        "changed_files": 3,
        "created_at": "2022-11-07T15:13:14Z",
        "closed_at": "2022-11-07T16:51:03Z",
        "merged_at": null,
        "body": "I went ahead and deleted the update_file_list.sh script, because (a) there was no good reason for it to be in a separate script and (b) we now need to handle the well-known types in addition to file_lists.cmake. With this change, we just invoke the staleness tests from the main script to update everything.\r\n\r\nWhile I was at it I made a couple small fixes:\r\n- Don't skip the update step just because the previous commit was by \"Protobuf Team Bot\". Copybara commits use this name and we still want to do the auto-update step after them.\r\n- Include the CL number in the description if the previous commit came from a CL.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 13,
        "changed_files": 2,
        "created_at": "2022-11-06T17:41:03Z",
        "closed_at": "2022-11-09T23:23:56Z",
        "merged_at": null,
        "body": "Use has_presence instead of syntax check in text_format.\nRemove syntax check in descriptor_test.py\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 79,
        "deletions": 76,
        "changed_files": 44,
        "created_at": "2022-11-05T17:55:38Z",
        "closed_at": "2022-11-10T07:46:02Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-11-05T17:44:32Z",
        "closed_at": "2022-11-08T18:11:50Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-11-05T03:04:54Z",
        "closed_at": "2022-11-23T20:56:23Z",
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-11-04T23:42:49Z",
        "closed_at": "2022-12-17T02:33:49Z",
        "merged_at": null,
        "body": "Always adjust limit_ when PopLimit() is called, even though this means the\nproto is malformed, to avoid integer overflow.  (The overflow was harmless but\nsets off sanitizers.)\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 9,
        "changed_files": 3,
        "created_at": "2022-11-04T20:21:19Z",
        "closed_at": "2022-11-04T21:39:33Z",
        "merged_at": null,
        "body": "Make CMake test_util and lite_test_util mutually exclusive\n\nThis sets up these targets to be consistent with how the full and lite test\nprotos are currently handled.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 45,
        "deletions": 7,
        "changed_files": 5,
        "created_at": "2022-11-03T22:30:22Z",
        "closed_at": "2022-12-17T02:33:48Z",
        "merged_at": null,
        "body": "Mark the unknownFields member field as transient since it really shouldn't show\nup in the Java serialized format.\n\nFUTURE_COPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/10901 from acozzette:well-known-types-staleness f63f7584f76a76e71ae452c9e7ea062bcd8aa0ef\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 44,
        "deletions": 6,
        "changed_files": 4,
        "created_at": "2022-11-03T22:16:25Z",
        "closed_at": "2022-11-23T23:41:19Z",
        "merged_at": null,
        "body": "Move namespace helpers into the public part of names.h\n\nFUTURE_COPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/10901 from acozzette:well-known-types-staleness f63f7584f76a76e71ae452c9e7ea062bcd8aa0ef\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 44,
        "deletions": 6,
        "changed_files": 4,
        "created_at": "2022-11-03T22:01:25Z",
        "closed_at": "2022-11-23T23:40:38Z",
        "merged_at": null,
        "body": "Move namespace helpers into the public part of names.h\n\nFUTURE_COPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/10901 from acozzette:well-known-types-staleness f63f7584f76a76e71ae452c9e7ea062bcd8aa0ef\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 21,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2022-11-03T21:23:29Z",
        "closed_at": "2022-11-04T07:21:44Z",
        "merged_at": null,
        "body": "Move namespace helpers into the public part of names.h\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 23,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2022-11-03T21:21:08Z",
        "closed_at": "2022-11-04T07:15:00Z",
        "merged_at": null,
        "body": "Delete duplicate _generator.h files.\n\nFUTURE_COPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/10901 from acozzette:well-known-types-staleness f63f7584f76a76e71ae452c9e7ea062bcd8aa0ef\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 701,
        "deletions": 617,
        "changed_files": 21,
        "created_at": "2022-11-03T20:24:34Z",
        "closed_at": "2022-11-04T07:15:02Z",
        "merged_at": "2022-11-04T07:15:02Z",
        "body": "This commit adds a staleness test in preparation for setting up auto-updating of the well-known type generated code. I also went ahead and updated them manually just to make sure we don't run into any surprises when this starts happening automatically.\r\n\r\nI had to arrange things so that the generated any.pb.cc (for example) lives at:\r\n`//src/google/protobuf:wkt/google/protobuf/any.pb.cc`\r\n\r\nThis is a weird directory structure, but I think it's the only way to allow the checked-in and generated versions of the file to coexist while ensuring that Bazel always uses the generated version.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-11-03T18:19:37Z",
        "closed_at": "2022-11-23T20:53:19Z",
        "merged_at": null,
        "body": "With strict flags and -Werror, the detection for libatomic breaks, causing it to be included in places where it is not needed.  And on macOS, this leads to a link error when libatomic cannot be found.\r\n\r\nAdding a static_cast fixes the problem by making the test compatible with strict compiler flags.\r\n\r\nCloses #10899",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 64,
        "deletions": 17,
        "changed_files": 6,
        "created_at": "2022-11-03T18:03:21Z",
        "closed_at": "2022-11-06T07:16:16Z",
        "merged_at": null,
        "body": "Add type annotation for enum\n\nFUTURE_COPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/10901 from acozzette:well-known-types-staleness f63f7584f76a76e71ae452c9e7ea062bcd8aa0ef\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-11-03T17:01:25Z",
        "closed_at": "2022-11-24T00:17:00Z",
        "merged_at": null,
        "body": null,
        "comments": 1
    },
    {
        "merged": false,
        "additions": 35,
        "deletions": 23,
        "changed_files": 7,
        "created_at": "2022-11-03T00:17:43Z",
        "closed_at": "2022-11-05T01:34:15Z",
        "merged_at": null,
        "body": "Added is_closed to EnumDescriptor in protobuf python\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2022-11-02T23:19:07Z",
        "closed_at": "2022-11-03T20:48:18Z",
        "merged_at": null,
        "body": "Remove an incorrect comment about the Python struct module.\n\n\"<I\" has always been defined as little endian 32-bit unsigned int.\nhttps://docs.python.org/3/library/struct.html#format-characters\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 183,
        "deletions": 3,
        "changed_files": 6,
        "created_at": "2022-11-02T21:05:53Z",
        "closed_at": "2022-11-02T23:36:54Z",
        "merged_at": null,
        "body": "Sync C# files to Piper\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-11-02T19:37:44Z",
        "closed_at": "2022-11-02T20:43:51Z",
        "merged_at": null,
        "body": "ObjC Cleanups.\n\n- Add missing license to testing header.\n- Standardize license blocks.\n- Fix some trailing whitespace.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 278,
        "deletions": 36,
        "changed_files": 11,
        "created_at": "2022-11-02T18:32:13Z",
        "closed_at": "2022-11-28T16:37:56Z",
        "merged_at": null,
        "body": "Add support for lazy fields to TDP.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-11-02T17:55:05Z",
        "closed_at": "2022-11-02T23:55:30Z",
        "merged_at": null,
        "body": "Removed the Mergeable check\n\nNow that we are syncing all PRs from Piper with Copybara, there isn't a convenient workflow for adding per-language labels to the GitHub PR.  (Also even if we required this, Copybara sometimes closes the PR and makes a separate commit, instead of merging the PR).\n\nLong-term we want the release script to bucket by language by automatically detecting which files were modified.  In the near-term, the onduty will need to do this manually at release time.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-11-02T16:22:11Z",
        "closed_at": "2022-12-17T02:33:48Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 18,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-11-02T16:00:57Z",
        "closed_at": "2022-11-02T21:01:30Z",
        "merged_at": null,
        "body": "Add a debug-only check for depth_ match, to catch a problem that is difficult\nto diagnose otherwise.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2022-11-02T09:00:25Z",
        "closed_at": "2022-11-02T16:03:22Z",
        "merged_at": null,
        "body": "Fix a lint error; move a depth test earlier\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2022-11-02T03:33:42Z",
        "closed_at": "2022-11-11T20:12:26Z",
        "merged_at": null,
        "body": " Protobuf fails to compile when -Dprotobuf_BUILD_SHARED_LIBS=ON flag set. #10833 \r\n",
        "comments": 12
    },
    {
        "merged": false,
        "additions": 75,
        "deletions": 51,
        "changed_files": 5,
        "created_at": "2022-11-02T02:34:02Z",
        "closed_at": "2022-11-07T01:41:29Z",
        "merged_at": null,
        "body": "Fix lint warnings in proto GeneratedMessage.java\n\nFUTURE_COPYBARA_INTEGRATE_REVIEW=https://github.com/protocolbuffers/protobuf/pull/10901 from acozzette:well-known-types-staleness f63f7584f76a76e71ae452c9e7ea062bcd8aa0ef\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 19,
        "deletions": 12,
        "changed_files": 2,
        "created_at": "2022-11-02T01:25:19Z",
        "closed_at": "2022-11-02T20:32:49Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 163,
        "deletions": 128,
        "changed_files": 48,
        "created_at": "2022-11-01T23:28:17Z",
        "closed_at": "2022-11-03T06:25:53Z",
        "merged_at": null,
        "body": "Migrate remaining compiler code to from std::map to Swiss tables.\n\nThis cl hit an issue during the shared library cmake build from ODR violations, leading to mismatched absl hash seeds.  The problem was pre-existing but didn't manifest until now, and can be traced to the fact that in shared library builds we linked Abseil statically.  All of the cmake changes here remove the underlying ODR violation.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 182,
        "deletions": 162,
        "changed_files": 45,
        "created_at": "2022-11-01T23:27:58Z",
        "closed_at": "2022-11-03T07:12:33Z",
        "merged_at": null,
        "body": "Migrate remaining compiler code to from std::set to Abseil tables.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 595,
        "deletions": 496,
        "changed_files": 13,
        "created_at": "2022-11-01T23:05:20Z",
        "closed_at": "2022-11-03T20:09:31Z",
        "merged_at": null,
        "body": "Use bit-field int values in buildPartial to skip work on unset groups of fields.\n\nChanges to make this improvement:\n1) All non-repeated builder fields (including maps) now have a presence bit regardless of syntax.\n2) The buildPartial method is split into one method per 32-field block (aligned with bit-mask ints)\n3) If a presence bit-mask int is set to 0, no fields are present, so we can skip the logic for all of those fields in the buildPartial step.\n\nFor messages with a lot of fields (> 100) that are sparsely populated this can result in a significant improvement. Not only does it potentially skip a lot of field copying logic, but also breaks the buildPartial method into chunks that should be more easily digested by the JIT compiler as discussed in this issue: https://github.com/protocolbuffers/protobuf/issues/10247.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 29,
        "changed_files": 2,
        "created_at": "2022-11-01T21:35:33Z",
        "closed_at": "2022-11-04T23:17:48Z",
        "merged_at": null,
        "body": "use FieldDescriptor.has_presence instead of file.syntax in python_message.py\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-11-01T20:59:26Z",
        "closed_at": "2022-11-04T21:02:44Z",
        "merged_at": null,
        "body": "Internal change.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 76,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2022-11-01T20:50:59Z",
        "closed_at": "2022-11-01T22:05:16Z",
        "merged_at": null,
        "body": "Call ParseVarint with a pointer to the specific result instead of always passing in a uint64_t * when possible.\n\nSpecialize ParseVarint for bool, which then takes up much less code.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 136,
        "deletions": 4,
        "changed_files": 4,
        "created_at": "2022-11-01T18:41:00Z",
        "closed_at": "2022-11-07T21:32:55Z",
        "merged_at": null,
        "body": "Add exemplar variants of the Java Any.is() and Any.unpack() methods.\n\nThe Java Any.is() and Any.unpack() methods now accept an exemplar message in\nplace of a Java class. This avoids the need to use Java introspection in the\nimplementation of these methods.  The exemplar variant of Any.is() is named\nAny.isSameTypeAs().  The exemplar variant of Any.unpack() is named Any.packSameTypeAs().\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 180,
        "deletions": 181,
        "changed_files": 2,
        "created_at": "2022-11-01T14:42:04Z",
        "closed_at": "2022-11-01T17:19:45Z",
        "merged_at": null,
        "body": "Enable the Copybara sync for all files.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-11-01T03:29:15Z",
        "closed_at": "2022-11-01T15:26:27Z",
        "merged_at": null,
        "body": "Fix lint warnings for protobuf GeneratedMessage.java\n\nSpecifically this CL changes the [type variable names](https://engdoc.corp.google.com/eng/doc/devguide/java/style/index.md?cl=head#s5.2.8-type-variable-names) only.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-11-01T03:12:12Z",
        "closed_at": "2022-11-04T18:06:22Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2022-11-01T02:57:28Z",
        "closed_at": "2022-11-04T17:45:36Z",
        "merged_at": null,
        "body": "Internal changes\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 16,
        "changed_files": 14,
        "created_at": "2022-11-01T00:56:01Z",
        "closed_at": "2022-11-03T17:56:42Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-10-31T23:16:30Z",
        "closed_at": "2022-11-03T17:40:02Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 8,
        "changed_files": 7,
        "created_at": "2022-10-31T21:36:55Z",
        "closed_at": "2022-11-01T01:55:45Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 33,
        "changed_files": 1,
        "created_at": "2022-10-31T21:05:50Z",
        "closed_at": "2022-12-15T17:38:27Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-10-31T21:02:10Z",
        "closed_at": "2022-11-03T04:37:56Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 13,
        "changed_files": 1,
        "created_at": "2022-10-31T21:01:41Z",
        "closed_at": "2022-11-01T00:06:59Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 45,
        "deletions": 6,
        "changed_files": 12,
        "created_at": "2022-10-31T20:55:01Z",
        "closed_at": "2022-11-15T19:41:40Z",
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 36,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-10-31T20:46:06Z",
        "closed_at": "2022-11-11T23:29:33Z",
        "merged_at": "2022-11-11T23:29:33Z",
        "body": "Create a CODEOWNERS file that matches subteams to code paths.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 24,
        "deletions": 22,
        "changed_files": 11,
        "created_at": "2022-10-31T20:45:28Z",
        "closed_at": "2022-11-01T00:49:50Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 7,
        "changed_files": 3,
        "created_at": "2022-10-31T20:26:25Z",
        "closed_at": "2022-11-01T13:59:53Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 80,
        "deletions": 78,
        "changed_files": 2,
        "created_at": "2022-10-31T19:08:42Z",
        "closed_at": "2022-11-01T04:05:49Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-10-31T17:28:16Z",
        "closed_at": "2022-10-31T20:50:51Z",
        "merged_at": null,
        "body": "Trivial whitespace change\n\nThis is the first change to automatically propagate from the internal repository using Copbyara.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 190,
        "deletions": 1478,
        "changed_files": 8,
        "created_at": "2022-10-31T16:28:40Z",
        "closed_at": "2022-11-01T17:44:10Z",
        "merged_at": "2022-11-01T17:44:10Z",
        "body": "Same as https://github.com/protocolbuffers/protobuf/pull/10830 but for 21.x",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 84,
        "deletions": 53,
        "changed_files": 12,
        "created_at": "2022-10-31T15:18:07Z",
        "closed_at": "2022-11-23T23:37:30Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 15,
        "deletions": 0,
        "changed_files": 5,
        "created_at": "2022-10-31T10:44:37Z",
        "closed_at": "2022-12-15T19:13:19Z",
        "merged_at": "2022-12-15T19:13:19Z",
        "body": "This PR adds explicit [permissions section](https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#permissions) to workflows. This is a security best practice because by default workflows run with [extended set of permissions](https://docs.github.com/en/actions/security-guides/automatic-token-authentication#permissions-for-the-github_token) (except from `on: pull_request` [from external forks](https://securitylab.github.com/research/github-actions-preventing-pwn-requests/)). By specifying any permission explicitly all others are set to none. By using the principle of least privilege the damage a compromised workflow can do (because of an [injection](https://securitylab.github.com/research/github-actions-untrusted-input/) or compromised third party tool or action) is restricted.\r\nIt is recommended to have [most strict permissions on the top level](https://github.com/ossf/scorecard/blob/main/docs/checks.md#token-permissions) and grant write permissions on [job level](https://docs.github.com/en/actions/using-jobs/assigning-permissions-to-jobs) case by case.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-10-30T09:14:53Z",
        "closed_at": "2022-11-24T00:42:39Z",
        "merged_at": null,
        "body": "Warehouse now uses the project_urls provided to display links in the sidebar on [this screen](https://pypi.org/project/requests/), as well as including them in API responses to help the automation tool find the source code for Requests.\r\n\r\nExample: [pypi.org/pypi/requests/json](https://pypi.org/pypi/requests/json)\r\nDocs: [packaging.python.org/en/latest/guides/distributing-packages-using-setuptools/#project-urls](https://packaging.python.org/en/latest/guides/distributing-packages-using-setuptools/#project-urls)",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 45,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-10-28T22:29:04Z",
        "closed_at": "2022-11-24T00:07:00Z",
        "merged_at": null,
        "body": "This Github action will automatically sync to the php repository whenever we push a new release. It will copy over the new files and add proper tags.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-10-28T21:39:53Z",
        "closed_at": "2022-11-24T00:17:26Z",
        "merged_at": null,
        "body": null,
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-10-28T17:33:33Z",
        "closed_at": "2022-11-24T00:17:52Z",
        "merged_at": null,
        "body": "This PR is for the purpose of testing Copybara.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-10-27T19:07:42Z",
        "closed_at": "2022-11-23T17:33:42Z",
        "merged_at": null,
        "body": "They probably should be hidden on every ELF platform, but for now only do it on Darwin, Linux, and FreeBSD.\r\n\r\nThis prevents some load-time errors that have been seen in GitLab's gitaly server, and in a few other places.",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 59,
        "deletions": 12,
        "changed_files": 11,
        "created_at": "2022-10-27T17:55:17Z",
        "closed_at": "2022-11-24T00:30:38Z",
        "merged_at": null,
        "body": "Internal change\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 172,
        "deletions": 1484,
        "changed_files": 6,
        "created_at": "2022-10-27T16:17:22Z",
        "closed_at": "2022-11-01T17:37:37Z",
        "merged_at": "2022-11-01T17:37:37Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 67,
        "deletions": 41,
        "changed_files": 34,
        "created_at": "2022-10-27T12:54:08Z",
        "closed_at": "2022-10-27T14:22:38Z",
        "merged_at": "2022-10-27T14:22:38Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 49,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-10-26T23:18:50Z",
        "closed_at": "2022-10-28T20:57:40Z",
        "merged_at": null,
        "body": "`bazel build //php:release` should now build a `.tgz` file that we can upload to PECL.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 9,
        "changed_files": 1,
        "created_at": "2022-10-26T21:37:49Z",
        "closed_at": "2022-10-27T01:10:42Z",
        "merged_at": "2022-10-27T01:10:42Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-10-26T20:27:56Z",
        "closed_at": "2023-02-17T16:20:47Z",
        "merged_at": null,
        "body": "The bypassing for PyPy got broken in https://github.com/protocolbuffers/protobuf/pull/10403",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-10-26T08:28:33Z",
        "closed_at": "2022-10-26T16:00:44Z",
        "merged_at": "2022-10-26T16:00:44Z",
        "body": "Prior to this change, running \"dotnet test\" would result in a warning about csc only supporting C# up to version 5, and warnings of unrecognized warnings being suppressed.\r\n\r\nWith this change in place, the test output doesn't include anything from csc.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-10-25T18:00:45Z",
        "closed_at": "2022-10-25T19:26:51Z",
        "merged_at": "2022-10-25T19:26:51Z",
        "body": "Cherrypick of #10811",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 372,
        "deletions": 147,
        "changed_files": 63,
        "created_at": "2022-10-25T16:32:01Z",
        "closed_at": "2022-10-25T21:14:55Z",
        "merged_at": "2022-10-25T21:14:55Z",
        "body": "**Important:** this integration must be merged, not squashed",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 88,
        "deletions": 74,
        "changed_files": 3,
        "created_at": "2022-10-25T14:50:16Z",
        "closed_at": "2022-11-04T17:22:04Z",
        "merged_at": "2022-11-04T17:22:04Z",
        "body": "The cc_dist_library() rule originally included only the sources from direct dependencies. This resulted in a less than ideal developer experience, because if you ever added a new cc_library() then you would have to carefully update the necessary cc_dist_library() targets to ensure that the change was correctly reflected in the CMake build.\r\n\r\nThis commit addresses that issue by making cc_dist_library() include transitive sources. We have to be careful to avoid introducing ODR violations (e.g. from libprotoc duplicating sources from libprotobuf), so we introduce a new dist_deps attribute on cc_dist_library(). Anything in dist_deps is assumed to be covered by a separate cc_dist_library() and is not included. We also make sure to exclude anything that's not part of our repo (i.e. Abseil and zlib).",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-10-25T00:04:34Z",
        "closed_at": "2022-10-25T16:14:15Z",
        "merged_at": "2022-10-25T16:14:15Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-10-23T21:32:22Z",
        "closed_at": "2022-10-24T23:52:59Z",
        "merged_at": "2022-10-24T23:52:59Z",
        "body": "Perfetto is a next-gen tracing system with trace file format based on protobuf.\r\nReserve an extension to allow Perfetto to define custom options to allow customising how trace fields should be parsed.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-10-21T23:10:49Z",
        "closed_at": "2022-10-24T17:33:34Z",
        "merged_at": "2022-10-24T17:33:34Z",
        "body": "Update toolchain to target macosx 10.9 to fix https://github.com/protocolbuffers/protobuf/issues/10799",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2022-10-21T00:13:58Z",
        "closed_at": "2023-02-16T22:01:21Z",
        "merged_at": null,
        "body": " - for parity with the native implementation (changing the implementation to match the message would break BC)\r\n - the return value is already checked everywhere this method is called ([1](https://github.com/protocolbuffers/protobuf/blob/main/php/ext/google/protobuf/message.c#L290), [2](https://github.com/protocolbuffers/protobuf/blob/main/php/ext/google/protobuf/message.c#L324), [3](https://github.com/protocolbuffers/protobuf/blob/main/php/ext/google/protobuf/message.c#L361), [4](https://github.com/protocolbuffers/protobuf/blob/main/php/ext/google/protobuf/message.c#L392))\r\n\r\nThere's also an issue we've seen here when an API removes fields, and we want to keep the methods in order to preserve BC. The protobuf message throws an exception (only in the extension) because the fields exist, even if they're never used. It would be easier to just removed this unnecessary exception.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-10-20T23:28:48Z",
        "closed_at": "2022-10-21T18:40:47Z",
        "merged_at": "2022-10-21T18:40:47Z",
        "body": "Update toolchain to target macosx 10.9 to fix https://github.com/protocolbuffers/protobuf/issues/10799                                                                                                                              ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 19,
        "deletions": 11,
        "changed_files": 33,
        "created_at": "2022-10-20T13:48:28Z",
        "closed_at": "2022-10-25T15:13:27Z",
        "merged_at": "2022-10-25T15:13:27Z",
        "body": "Fixes #10776 - at least for the \"main/test\" protos. Conformance and compatibility still to be done.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3079,
        "deletions": 5131,
        "changed_files": 197,
        "created_at": "2022-10-19T23:59:06Z",
        "closed_at": "2022-10-24T22:31:42Z",
        "merged_at": "2022-10-24T22:31:42Z",
        "body": "**Important:** this integration must be merged, not squashed",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-10-19T22:59:04Z",
        "closed_at": "2022-10-20T22:08:46Z",
        "merged_at": "2022-10-20T22:08:46Z",
        "body": "We need to call `dotnet restore` in order to properly setup the libraries to pack. The docker image we are using will save the packages in `/lib/csharp`",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-10-18T22:36:27Z",
        "closed_at": "2023-01-04T22:11:22Z",
        "merged_at": null,
        "body": "Create `ruby:release` bazel target that builds 2 gems for release (one just source and one for java).",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 74,
        "deletions": 44,
        "changed_files": 37,
        "created_at": "2022-10-18T22:17:49Z",
        "closed_at": "2022-10-19T15:28:05Z",
        "merged_at": "2022-10-19T15:28:05Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2022-10-18T21:41:42Z",
        "closed_at": "2022-10-20T18:47:57Z",
        "merged_at": "2022-10-20T18:47:57Z",
        "body": "This pulls in the fix for CVE-2022-37434.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2022-10-17T23:52:16Z",
        "closed_at": "2022-10-18T16:49:58Z",
        "merged_at": "2022-10-18T16:49:58Z",
        "body": "Fixing C# release to no longer need internet at runtime. This requires a copy of .csproj file, so put a warning there and change `dotnet pack` command to be in offline mode.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-10-17T21:51:11Z",
        "closed_at": "2022-10-17T22:59:11Z",
        "merged_at": "2022-10-17T22:59:11Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-10-16T12:00:27Z",
        "closed_at": "2023-05-17T16:34:42Z",
        "merged_at": null,
        "body": "Fixes #5139 \r\n\r\nPreviously the fix https://github.com/protocolbuffers/protobuf/pull/5247 has removed unnecessary cast to Builder in generated Java code, and the current PR is doing a similar one for Java lite code.\r\n\r\nAfter this PR, both Java and Java lite code won't have an unnecessary cast to Builder, thus #5139 will be fixed.\r\n\r\nThis change simply removed those casts to Builder for 2 methods, and the reason it will work is:\r\n\r\nDEFAULT_INSTANCE.createBuilder method is defined in the superclass, and the return value is a generic value which is exactly the Builder class passed in.\r\n",
        "comments": 18
    },
    {
        "merged": true,
        "additions": 969,
        "deletions": 712,
        "changed_files": 3,
        "created_at": "2022-10-14T21:23:05Z",
        "closed_at": "2022-10-14T23:27:23Z",
        "merged_at": "2022-10-14T23:27:23Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-10-14T20:31:48Z",
        "closed_at": "2022-10-14T21:39:58Z",
        "merged_at": "2022-10-14T21:39:58Z",
        "body": "Adding package_naming back as a dependency to fix builds. It was erroneously removed [here](https://github.com/protocolbuffers/protobuf/commit/32bea52ee660abeb6a2891e3dce979a909cbd6ea#diff-2506fc8252647768f02580dc9c2800f0c25ad053ec8c64359f11d2823eea7ed8).",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 18,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2022-10-14T01:58:05Z",
        "closed_at": "2022-10-14T23:28:19Z",
        "merged_at": "2022-10-14T23:28:19Z",
        "body": "Rather than forcing protobuf to always compile in exactly C++14, overriding all settings in .bazelrc and environment variables and commandline options, ~~instead guard the codebase against versions that are too low~~ simply don't do that. This allows for compiling in higher C++ standards, such as those that have `std::string_view` instead of `absl::string_view` without generating objects that are incompatible.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-10-13T00:29:41Z",
        "closed_at": "2022-10-13T02:40:00Z",
        "merged_at": "2022-10-13T02:40:00Z",
        "body": "Mark default instance as immutable first to avoid race during static initialization of default instances.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-10-12T16:05:51Z",
        "closed_at": "2022-10-12T20:00:18Z",
        "merged_at": "2022-10-12T20:00:18Z",
        "body": "Mark default instance as immutable first to avoid race during static initialization of default instances. Previously, the instance could be published before getting marked immutable.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 376,
        "deletions": 81,
        "changed_files": 24,
        "created_at": "2022-10-11T21:19:46Z",
        "closed_at": "2022-10-18T04:36:55Z",
        "merged_at": "2022-10-18T04:36:55Z",
        "body": "This enables remote caching for all of our Bazel builds.  This will have the largest impact on reruns, but should hopefully speed up all our CI builds.\r\n\r\nNote: each job is given its own cache to avoid issues from non-hermetic builds.  For example, if the version of python changes our current setup doesn't give Bazel enough knowledge to know the cache is stale.  Ruby, PHP, C#, and Objective-c likely have this issue as well, since they all use non-hermetic genrules to grab system dependencies.  Once all of these have been fully modified we can likely fall back to a single shared cache",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 18,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2022-10-11T21:15:32Z",
        "closed_at": "2022-10-13T17:32:00Z",
        "merged_at": "2022-10-13T17:31:59Z",
        "body": "When the absl dep was added, our windows and darwin builds broke. Adding some more compiler flags to fix the builds.\r\n\r\nIn addition, I updated to xcode 14 and changed up a bit of the directory structure there.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 149,
        "deletions": 11,
        "changed_files": 1,
        "created_at": "2022-10-11T18:12:19Z",
        "closed_at": "2023-02-16T22:02:53Z",
        "merged_at": null,
        "body": "    optimize Varint Codeing by BMI2 instruction. In our funciton level benchmarking, we get about 2.7x  maximum performance\r\n    boost.\r\n2022-10-12T09:50:01+08:00\r\nRunning ./zz_bench\r\nRun on (128 X 3300 MHz CPU s)\r\nCPU Caches:\r\n  L1 Data 48 KiB (x64)\r\n  L1 Instruction 32 KiB (x64)\r\n  L2 Unified 1280 KiB (x64)\r\n  L3 Unified 49152 KiB (x2)\r\nLoad Average: 0.20, 0.50, 0.47\r\n-------------------------------------------------------------------\r\nBenchmark                         Time             CPU   Iterations\r\n-------------------------------------------------------------------\r\nBM_Code_Varint32_1             3.13 ns         3.13 ns    223111504\r\nBM_Code_BMI2_Varint32_1        3.17 ns         3.17 ns    220073339\r\nBM_Code_Varint32_2             3.98 ns         3.98 ns    176472207\r\nBM_Code_BMI2_Varint32_2        3.58 ns         3.58 ns    196546601\r\nBM_Code_Varint32_3             5.86 ns         5.86 ns    119058237\r\nBM_Code_BMI2_Varint32_3        4.42 ns         4.41 ns    158287666\r\nBM_Code_Varint32_4             8.44 ns         8.43 ns     82981161\r\nBM_Code_BMI2_Varint32_4        8.78 ns         8.77 ns     79598740\r\nBM_Code_Varint32_5             10.7 ns         10.7 ns     65171356\r\nBM_Code_BMI2_Varint32_5        7.73 ns         7.73 ns     90640481\r\nBM_Code_Varint32_6             10.7 ns         10.7 ns     65157143\r\nBM_Code_BMI2_Varint32_6        7.72 ns         7.71 ns     90778985\r\nBM_Code_Varint32_7             10.7 ns         10.7 ns     65259369\r\nBM_Code_BMI2_Varint32_7        7.73 ns         7.73 ns     90555467\r\nBM_Code_Varint32_8             10.7 ns         10.7 ns     65215212\r\nBM_Code_BMI2_Varint32_8        7.72 ns         7.72 ns     90833824\r\nBM_Code_Varint32_9             10.7 ns         10.7 ns     65180833\r\nBM_Code_BMI2_Varint32_9        7.73 ns         7.73 ns     90581863\r\nBM_Code_Varint32_10            10.7 ns         10.7 ns     65177312\r\nBM_Code_BMI2_Varint32_10       7.73 ns         7.72 ns     90671029\r\nBM_Code_Varint64_1             3.20 ns         3.20 ns    218468799\r\nBM_Code_BMI2_Varint64_1        3.18 ns         3.18 ns    220401104\r\nBM_Code_Varint64_2             3.95 ns         3.95 ns    177792984\r\nBM_Code_BMI2_Varint64_2        3.69 ns         3.69 ns    189878208\r\nBM_Code_Varint64_3             6.04 ns         6.04 ns    114832150\r\nBM_Code_BMI2_Varint64_3        4.26 ns         4.26 ns    164892413\r\nBM_Code_Varint64_4             8.43 ns         8.43 ns     83087712\r\nBM_Code_BMI2_Varint64_4        8.71 ns         8.71 ns     80103738\r\nBM_Code_Varint64_5             10.7 ns         10.7 ns     65192875\r\nBM_Code_BMI2_Varint64_5        8.68 ns         8.67 ns     80551592\r\nBM_Code_Varint64_6             13.2 ns         13.2 ns     53063208\r\nBM_Code_BMI2_Varint64_6        8.69 ns         8.68 ns     80423826\r\nBM_Code_Varint64_7             15.8 ns         15.8 ns     44324556\r\nBM_Code_BMI2_Varint64_7        8.55 ns         8.55 ns     82274517\r\nBM_Code_Varint64_8             18.3 ns         18.3 ns     38198496\r\nBM_Code_BMI2_Varint64_8        8.35 ns         8.35 ns     84413733\r\nBM_Code_Varint64_9             20.8 ns         20.8 ns     33624867\r\nBM_Code_BMI2_Varint64_9        7.75 ns         7.75 ns     90452908\r\nBM_Code_Varint64_10            23.3 ns         23.3 ns     30076428\r\nBM_Code_BMI2_Varint64_10       8.33 ns         8.33 ns     83756807\r\n\r\nin our object level test. End to End benchmarking for object that all are varint fields ,we can get about 20% performance boost",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 48,
        "deletions": 14,
        "changed_files": 9,
        "created_at": "2022-10-11T17:31:06Z",
        "closed_at": "2022-10-13T01:52:30Z",
        "merged_at": "2022-10-13T01:52:30Z",
        "body": "This closes #1965.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1287,
        "deletions": 1272,
        "changed_files": 71,
        "created_at": "2022-10-11T04:16:42Z",
        "closed_at": "2022-10-11T15:16:41Z",
        "merged_at": "2022-10-11T15:16:41Z",
        "body": "**Important:** this integration must be merged, not squashed",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 38,
        "deletions": 496,
        "changed_files": 17,
        "created_at": "2022-10-10T23:45:43Z",
        "closed_at": "2022-10-11T19:20:47Z",
        "merged_at": "2022-10-11T19:20:47Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 31,
        "deletions": 21,
        "changed_files": 3,
        "created_at": "2022-10-10T21:24:23Z",
        "closed_at": "2022-10-10T22:51:01Z",
        "merged_at": "2022-10-10T22:51:01Z",
        "body": "Fixes #10756.\r\n\r\nAllows use of capital `X` to initiate a hex escape in a string literal. This is already documented to work on the developer site, but it didn't _actually_ work.\r\n\r\nNote that `protoc` actually supports either one or two digits following the `\\X` (or `\\x`), but the documentation on the developer site suggests that two hex digits are always required. I think it's reasonable to assert that is a documentation bug and the lenience should be kept (especially since changing it would be a breaking change).",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 3,
        "changed_files": 4,
        "created_at": "2022-10-10T19:32:35Z",
        "closed_at": "2022-10-10T21:15:09Z",
        "merged_at": "2022-10-10T21:15:09Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 12,
        "changed_files": 1,
        "created_at": "2022-10-10T18:30:10Z",
        "closed_at": "2022-10-11T05:26:31Z",
        "merged_at": "2022-10-11T05:26:31Z",
        "body": "Closes https://github.com/protocolbuffers/protobuf/issues/10471",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2022-10-10T17:29:16Z",
        "closed_at": "2022-10-10T20:13:42Z",
        "merged_at": "2022-10-10T20:13:42Z",
        "body": "Allow xcode version 14.x as we upgraded to it https://github.com/protocolbuffers/protobuf/pull/10733",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1549,
        "changed_files": 4,
        "created_at": "2022-10-10T17:09:33Z",
        "closed_at": "2022-10-10T18:14:32Z",
        "merged_at": "2022-10-10T18:14:32Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 43,
        "deletions": 5,
        "changed_files": 3,
        "created_at": "2022-10-10T16:15:02Z",
        "closed_at": "2022-10-10T17:22:41Z",
        "merged_at": "2022-10-10T17:22:41Z",
        "body": "jsoncpp 1.9.5 provides Bazel support, but substantially reduces CMake support.  For CMake builds we should use 1.9.4 until we can resolve these issues.\r\n\r\nCloses #10749",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 277,
        "deletions": 67,
        "changed_files": 3,
        "created_at": "2022-10-10T14:15:37Z",
        "closed_at": "2022-12-17T07:48:26Z",
        "merged_at": null,
        "body": "This is a re-do of #10581. Merging this PR previously caused issues when importing the change into Google's internal repo (IIUC). So additional testing is needed before attempting to merge again. cc @mkruskal-google \r\n\r\n----\r\n\r\nThis makes a few other related changes, for consistency:\r\n\r\n* Adds the existing checks, for default JSON names, to run even for proto2 files, but only as warnings (symmetry with similar check for enum value names).\r\n* Tweaks the similar check for enum value names to include \"This is not allowed in proto3\", for clarity, since it's only a warning in proto2.\r\n\r\nWhen checking custom JSON names, this considers it an error even in proto2 if two `json_name` options conflict. However, if a `json_name` option conflicts with a default JSON name, it is just a warning in proto2 (aligns with the existing check and the similar check for enum value names).\r\n\r\nFixes #5063.",
        "comments": 38
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-10-09T20:00:56Z",
        "closed_at": "2022-10-10T22:39:40Z",
        "merged_at": "2022-10-10T22:39:40Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-10-09T20:00:30Z",
        "closed_at": "2022-10-10T21:25:43Z",
        "merged_at": "2022-10-10T21:25:43Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-10-09T19:59:17Z",
        "closed_at": "2022-10-11T14:19:10Z",
        "merged_at": "2022-10-11T14:19:10Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 30,
        "deletions": 7288,
        "changed_files": 9,
        "created_at": "2022-10-07T22:49:15Z",
        "closed_at": "2022-10-08T01:09:33Z",
        "merged_at": "2022-10-08T01:09:33Z",
        "body": "This removes our vendored copy of it and promotes it to an explicit dependency in github, Bazel, and CMake",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 33,
        "deletions": 56,
        "changed_files": 2,
        "created_at": "2022-10-07T21:16:36Z",
        "closed_at": "2022-10-11T17:00:08Z",
        "merged_at": "2022-10-11T17:00:08Z",
        "body": "The minOS version is high enough it can be used, and it avoids the long standing issue for priority inversion dependent on what callers did with threading/queues.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 4,
        "created_at": "2022-10-07T18:02:35Z",
        "closed_at": "2022-10-07T19:45:08Z",
        "merged_at": "2022-10-07T19:45:08Z",
        "body": "Upgrading Kotlin due to [this CVE](https://nvd.nist.gov/vuln/detail/CVE-2022-24329). This shouldn't affect our project, so we will not be pushing out a release immediately.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 4,
        "created_at": "2022-10-07T17:59:02Z",
        "closed_at": "2022-10-07T21:17:53Z",
        "merged_at": "2022-10-07T21:17:53Z",
        "body": "Upgrading Kotlin due to [this CVE](https://nvd.nist.gov/vuln/detail/CVE-2022-24329). This shouldn't affect our project, so we will not be pushing out a release immediately.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 4,
        "changed_files": 4,
        "created_at": "2022-10-07T17:45:42Z",
        "closed_at": "2022-10-10T21:19:46Z",
        "merged_at": "2022-10-10T21:19:46Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-10-07T17:44:27Z",
        "closed_at": "2022-10-07T19:09:07Z",
        "merged_at": "2022-10-07T19:09:06Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-10-07T17:43:21Z",
        "closed_at": "2022-10-07T19:09:02Z",
        "merged_at": "2022-10-07T19:09:02Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2022-10-07T17:42:00Z",
        "closed_at": "2022-10-10T19:42:25Z",
        "merged_at": "2022-10-10T19:42:25Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 988,
        "deletions": 739,
        "changed_files": 36,
        "created_at": "2022-10-07T15:21:02Z",
        "closed_at": "2022-10-07T16:27:19Z",
        "merged_at": "2022-10-07T16:27:19Z",
        "body": "No functional changes.\r\n\r\n- Tweak the config and one generator.\r\n- Run clang-format in google mode on the remaining things that hadn't been formatted.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 12409,
        "deletions": 21399,
        "changed_files": 204,
        "created_at": "2022-10-07T03:48:58Z",
        "closed_at": "2022-10-07T21:52:27Z",
        "merged_at": "2022-10-07T21:52:27Z",
        "body": "**Important:** this integration must be merged, not squashed",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 22,
        "deletions": 23,
        "changed_files": 2,
        "created_at": "2022-10-06T23:18:00Z",
        "closed_at": "2022-10-07T01:26:49Z",
        "merged_at": "2022-10-07T01:26:49Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 39,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2022-10-06T21:26:21Z",
        "closed_at": "2022-11-01T23:52:42Z",
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 32,
        "deletions": 53,
        "changed_files": 21,
        "created_at": "2022-10-06T20:18:54Z",
        "closed_at": "2022-10-06T22:50:48Z",
        "merged_at": "2022-10-06T22:50:48Z",
        "body": "- If the source name is long enough, clang-format can want to reflow that comment line, so move up the directive.\r\n- Fix typo at the end of the file.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-10-06T01:49:32Z",
        "closed_at": "2022-10-06T14:30:37Z",
        "merged_at": "2022-10-06T14:30:37Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 12,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-10-05T22:05:28Z",
        "closed_at": "2022-10-06T01:17:15Z",
        "merged_at": null,
        "body": "Re-add aliases for test_messages_proto3_proto and test_messages_proto2_proto, removed by https://github.com/protocolbuffers/protobuf/commit/ed5c57a574aa24bc49432baced51aa6d01fbf38a\r\n\r\nThese are used by upb, and when upgrading upb to point at protobuf main HEAD failed with \r\n```\r\nERROR: /home/runner/work/upb/upb/BUILD:823:29: no such target '@com_google_protobuf//:test_messages_proto3_proto': target 'test_messages_proto3_proto' not declared in package '' (did you mean 'test_messages_proto3_cc_proto'?) defined by /home/runner/.cache/bazel/_bazel_runner/9d5ab857a4215216a12f2077d5365ae9/external/com_google_protobuf/BUILD.bazel and referenced by '//:test_messages_proto3_upbdefs'\r\n```\r\nhttps://github.com/protocolbuffers/upb/actions/runs/3192939059/jobs/5210976696",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 201,
        "deletions": 1,
        "changed_files": 5,
        "created_at": "2022-10-05T16:26:40Z",
        "closed_at": "2022-10-05T21:45:16Z",
        "merged_at": "2022-10-05T21:45:16Z",
        "body": "Add numpy dep to WORKSPACE to allow open-sourcing of previously written numpy test validating correct handling of protobuf fields set with numpy types. \r\n\r\nPerviously added to upb in https://github.com/protocolbuffers/upb/pull/723",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 20,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2022-10-05T11:13:09Z",
        "closed_at": "2022-10-06T18:20:34Z",
        "merged_at": "2022-10-06T18:20:34Z",
        "body": "Fix for grpc.tools #17995 & protobuf #7474 (handle UTF-8 paths in argumentfile)\r\n\r\nMerge from main into 21.x",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-10-04T19:49:08Z",
        "closed_at": "2022-10-20T00:01:31Z",
        "merged_at": "2022-10-20T00:01:31Z",
        "body": "Addresses issue #10716",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 8,
        "changed_files": 7,
        "created_at": "2022-10-04T19:26:35Z",
        "closed_at": "2022-10-04T20:43:29Z",
        "merged_at": "2022-10-04T20:43:28Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2081,
        "deletions": 1566,
        "changed_files": 44,
        "created_at": "2022-10-04T19:14:01Z",
        "closed_at": "2022-10-04T21:25:34Z",
        "merged_at": "2022-10-04T21:25:34Z",
        "body": "Resolve the TODO by removing things from compiler/objectivec/objectivec_helpers.h.\r\n\r\n- Bulk rename the files to drop the `objectivec_` prefix (to align with `names.(h|cc)`.\r\n- Move things out of `names.h` that should be in other files and not documented api for external things.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-10-04T19:03:13Z",
        "closed_at": "2022-10-04T21:16:18Z",
        "merged_at": "2022-10-04T21:16:18Z",
        "body": "We are seeing failures in `brew uninstall protobuf` due to no package. Change this to a force install to avoid the error.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2022-10-04T14:44:23Z",
        "closed_at": "2022-10-04T16:28:56Z",
        "merged_at": "2022-10-04T16:28:56Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-10-04T14:42:53Z",
        "closed_at": "2022-10-04T17:29:01Z",
        "merged_at": null,
        "body": null,
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-10-04T14:41:38Z",
        "closed_at": "2022-10-04T16:29:22Z",
        "merged_at": "2022-10-04T16:29:22Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-10-04T14:40:14Z",
        "closed_at": "2022-10-04T16:29:34Z",
        "merged_at": "2022-10-04T16:29:34Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 48,
        "deletions": 14,
        "changed_files": 9,
        "created_at": "2022-10-04T03:24:16Z",
        "closed_at": "2022-10-06T16:58:07Z",
        "merged_at": "2022-10-06T16:58:07Z",
        "body": "This picks #10454 to branch-2.11. Refer to #1965.\r\n\r\ncc @JasonLunn @mkruskal-google ",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-10-03T22:25:03Z",
        "closed_at": "2022-10-03T23:46:02Z",
        "merged_at": "2022-10-03T23:46:02Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 127,
        "deletions": 50,
        "changed_files": 11,
        "created_at": "2022-10-03T21:28:35Z",
        "closed_at": "2022-10-06T17:50:18Z",
        "merged_at": "2022-10-06T17:50:18Z",
        "body": "This will parametrize the Bazel kokoro presubmit, running all of optimized, debug, asan, msan, tsan, and ubsan.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 65,
        "deletions": 13,
        "changed_files": 2,
        "created_at": "2022-10-03T21:05:48Z",
        "closed_at": "2022-10-13T20:41:05Z",
        "merged_at": null,
        "body": "This MR adds an additive option (`ignoringUnresolvedAnyTypes: Boolean = false`) to the `JsonFormat` class for ignoring unresolved `Any` types during serialization. Currently, JsonFormat will throw an `InvalidProtocolBufferException` whenever it attempts to serialize an `Any` type that has not been provided by a `TypeRegistry`. This is problematic because it forces consumers of `Any` types to stay updated with all of the proto definitions that upstream providers may produce. The added option allows consumers to choose to omit the serialized output altogether - instead of failing the entire serialization process. The property is set to false by default to preserve backwards compatibility.\r\n\r\nAdditionally, when set to `false`, the default behavior should, IMO, return a list of all Any fields that we were unable to serialize, so callers of the method can get an exhaustive list of failures instead of one at a time. I have not made these changes in this PR - but wanted to get the conversation started to see if there was any feedback / concerns with any of these ideas.\r\n\r\nThank you!",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-10-03T17:23:39Z",
        "closed_at": "2022-10-03T21:32:09Z",
        "merged_at": "2022-10-03T21:32:09Z",
        "body": "Move the relative workspace to mount the docker image on to build protoc.\r\n\r\nThe protoc build is currently failing in Kokoro due to an issue in mounting the workspace.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2022-10-03T16:40:29Z",
        "closed_at": "2022-10-03T18:07:52Z",
        "merged_at": "2022-10-03T18:07:52Z",
        "body": null,
        "comments": 3
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2022-10-03T07:46:14Z",
        "closed_at": "2022-10-07T18:06:18Z",
        "merged_at": null,
        "body": "### What happened\uff1f\nThere are 1 security vulnerabilities found in org.jetbrains.kotlin:kotlin-stdlib 1.5.0\n- [CVE-2022-24329](https://www.oscs1024.com/hd/CVE-2022-24329)\n\n\n### What did I do\uff1f\nUpgrade org.jetbrains.kotlin:kotlin-stdlib from 1.5.0 to 1.6.0 for vulnerability fix\n\n### What did you expect to happen\uff1f\nIdeally, no insecure libs should be used.\n\n### The specification of the pull request\n[PR Specification](https://www.oscs1024.com/docs/pr-specification/) from OSCS",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 17,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-10-02T23:44:36Z",
        "closed_at": "2022-10-13T20:29:20Z",
        "merged_at": null,
        "body": "remove check to allow retrieval of nested enum metadata\r\n\r\nfix for issue:\r\nhttps://github.com/protocolbuffers/protobuf/issues/10696",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 15894,
        "deletions": 12249,
        "changed_files": 8,
        "created_at": "2022-10-01T01:01:37Z",
        "closed_at": "2022-10-03T18:13:06Z",
        "merged_at": "2022-10-03T18:13:06Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-09-30T17:38:50Z",
        "closed_at": "2022-10-06T17:01:14Z",
        "merged_at": "2022-10-06T17:01:14Z",
        "body": "in order to compile php with protobuf from pecl.\r\n\r\nnow the pecl version of protobuf does not contain output to phpext_protobuf_ptr, causing me to manually add this code\r\n```\r\nextern zend_module_entry protobuf_module_entry;\r\n#define phpext_protobuf_ptr &protobuf_module_entry\r\n```\r\nevery time I rebuild PHP with `--enable-protobuf`\r\n\r\nPlease Add this file to PECL version.\r\nhttps://pecl.php.net/package/protobuf\r\n\r\nThank!",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 67,
        "deletions": 49,
        "changed_files": 34,
        "created_at": "2022-09-30T17:12:38Z",
        "closed_at": "2022-09-30T18:21:39Z",
        "merged_at": "2022-09-30T18:21:39Z",
        "body": null,
        "comments": 1
    },
    {
        "merged": true,
        "additions": 18,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-09-30T12:42:40Z",
        "closed_at": "2022-09-30T15:25:54Z",
        "merged_at": "2022-09-30T15:25:54Z",
        "body": "This job is not really a \"release\", but it has to be a release job so that it can run on a schedule without running presubmit or postsubmit. Generated files will be quickly updated automatically after each PR is merged, but we want to run this staleness check nightly as an extra safeguard.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-09-30T03:12:58Z",
        "closed_at": "2022-09-30T16:42:38Z",
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 25,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2022-09-29T22:57:58Z",
        "closed_at": "2022-09-30T11:37:39Z",
        "merged_at": "2022-09-30T11:37:39Z",
        "body": "This test is tagged \"manual\", because ordinarily no one should be directly\r\nrunning this test. If we were to run this test regularly during development\r\nthen we would expect it to fail occasionally, because file_lists.cmake will\r\nsometimes be temporarily stale until it is auto-updated by our post-merge\r\nGitHub action. We want to run this test nightly just as a safeguard to alert us\r\nif anything ever goes wrong with the auto-update.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 9,
        "changed_files": 1,
        "created_at": "2022-09-29T22:54:02Z",
        "closed_at": "2022-09-30T14:31:12Z",
        "merged_at": "2022-09-30T14:31:12Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 9,
        "changed_files": 1,
        "created_at": "2022-09-29T22:49:24Z",
        "closed_at": "2022-09-30T15:47:19Z",
        "merged_at": "2022-09-30T15:47:19Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 11,
        "changed_files": 2,
        "created_at": "2022-09-29T22:48:07Z",
        "closed_at": "2022-09-30T01:23:19Z",
        "merged_at": "2022-09-30T01:23:19Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-09-29T21:46:08Z",
        "closed_at": "2022-09-30T11:37:46Z",
        "merged_at": null,
        "body": "My motivation for this is that I plan to make use of upb's staleness_test() macro, which was recently renamed (protocolbuffers/upb#810).",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 70,
        "deletions": 52,
        "changed_files": 38,
        "created_at": "2022-09-29T17:52:20Z",
        "closed_at": "2022-09-29T20:19:39Z",
        "merged_at": "2022-09-29T20:19:39Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 67,
        "deletions": 52,
        "changed_files": 37,
        "created_at": "2022-09-29T17:50:56Z",
        "closed_at": "2022-09-29T19:01:45Z",
        "merged_at": "2022-09-29T19:01:45Z",
        "body": null,
        "comments": 1
    },
    {
        "merged": true,
        "additions": 72,
        "deletions": 57,
        "changed_files": 39,
        "created_at": "2022-09-29T17:48:00Z",
        "closed_at": "2022-09-29T19:01:29Z",
        "merged_at": "2022-09-29T19:01:29Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 62,
        "deletions": 47,
        "changed_files": 33,
        "created_at": "2022-09-29T17:35:09Z",
        "closed_at": "2022-09-29T18:39:40Z",
        "merged_at": "2022-09-29T18:39:40Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 59,
        "deletions": 12,
        "changed_files": 2,
        "created_at": "2022-09-29T15:53:11Z",
        "closed_at": "2022-09-29T17:06:07Z",
        "merged_at": "2022-09-29T17:06:07Z",
        "body": "Fix TextFormat parser to build up recurring (but supposedly not repeated) sub-messages directly from text rather than building a new sub-message and merging the fully formed message into the existing field.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 59,
        "deletions": 12,
        "changed_files": 2,
        "created_at": "2022-09-29T15:42:59Z",
        "closed_at": "2022-09-29T17:09:40Z",
        "merged_at": "2022-09-29T17:09:40Z",
        "body": "Fix TextFormat parser to build up recurring (but supposedly not repeated) sub-messages directly from text rather than building a new sub-message and merging the fully formed message into the existing field.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 59,
        "deletions": 12,
        "changed_files": 2,
        "created_at": "2022-09-29T15:40:26Z",
        "closed_at": "2022-09-29T17:01:52Z",
        "merged_at": "2022-09-29T17:01:52Z",
        "body": "Fix TextFormat parser to build up recurring (but supposedly not repeated) sub-messages directly from text rather than building a new sub-message and merging the fully formed message into the existing field.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1923,
        "deletions": 1122,
        "changed_files": 40,
        "created_at": "2022-09-27T22:56:58Z",
        "closed_at": "2022-09-29T17:17:52Z",
        "merged_at": "2022-09-29T17:17:52Z",
        "body": "Refactoring Java parsing paths to prefer merging directly from wireformat into message builders rather than building up new instances before merging. For the non-Lite implementation, do this by moving parsing from the \u201cparse constructor\u201d to the Builder.mergeFrom method. This is more performant with less code.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1747,
        "deletions": 945,
        "changed_files": 40,
        "created_at": "2022-09-27T22:42:41Z",
        "closed_at": "2022-09-29T17:25:45Z",
        "merged_at": "2022-09-29T17:25:45Z",
        "body": "Refactoring Java parsing paths to prefer merging directly from wireformat into message builders rather than building up new instances before merging. For the non-Lite implementation, do this by moving parsing from the \u201cparse constructor\u201d to the Builder.mergeFrom method. This is more performant with less code.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1690,
        "deletions": 940,
        "changed_files": 40,
        "created_at": "2022-09-27T20:07:26Z",
        "closed_at": "2022-09-29T01:29:56Z",
        "merged_at": "2022-09-29T01:29:56Z",
        "body": "Refactoring Java parsing paths to prefer merging directly from wireformat into message builders rather than building up new instances before merging. For the non-Lite implementation, do this by moving parsing from the \u201cparse constructor\u201d to the Builder.mergeFrom method. This is more performant with less code.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1690,
        "deletions": 940,
        "changed_files": 40,
        "created_at": "2022-09-27T20:01:51Z",
        "closed_at": "2022-09-28T23:52:46Z",
        "merged_at": "2022-09-28T23:52:46Z",
        "body": "Refactoring Java parsing paths to prefer merging directly from wireformat into message builders rather than building up new instances before merging. For the non-Lite implementation, do this by moving parsing from the \u201cparse constructor\u201d to the Builder.mergeFrom method. This is more performant with less code.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1686,
        "deletions": 933,
        "changed_files": 40,
        "created_at": "2022-09-27T19:47:04Z",
        "closed_at": "2022-09-28T23:49:35Z",
        "merged_at": "2022-09-28T23:49:35Z",
        "body": "Refactoring Java parsing paths to prefer merging directly from wireformat into message builders rather than building up new instances before merging. For the non-Lite implementation, do this by moving parsing from the \u201cparse constructor\u201d to the Builder.mergeFrom method. This is more performant with less code.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 86,
        "deletions": 9,
        "changed_files": 2,
        "created_at": "2022-09-27T17:42:29Z",
        "closed_at": "2022-09-27T19:20:59Z",
        "merged_at": "2022-09-27T19:20:59Z",
        "body": "This adds more robustness to the handling of comments, particularly inline comments, even in the face of unusual newline placement. See changed test cases to get a feel for the change in behavior.\r\n\r\nFixes #10648.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 40,
        "changed_files": 3,
        "created_at": "2022-09-26T16:14:05Z",
        "closed_at": "2022-09-26T17:56:31Z",
        "merged_at": "2022-09-26T17:56:31Z",
        "body": "This reverts commit dd052c9dc601f831611ef9b04d70d8210c71053d, reversing changes made to 0d3eaed6eb91f5b7702918586f730e4dd1ceccd2.\r\n\r\nThis breaks https://github.com/kythe/kythe, as well as some internal code.",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 71,
        "deletions": 215,
        "changed_files": 3,
        "created_at": "2022-09-26T16:03:15Z",
        "closed_at": "2022-09-26T19:17:19Z",
        "merged_at": "2022-09-26T19:17:19Z",
        "body": "This reverts commit d3b538930144f399da0d7e64a35b05d600789f63, reversing changes made to bcd175578f4647a5fa81eecee1d3ecc320e72517.\r\n\r\nThis PR breaks internal google code, and should be submitted internally instead.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 62,
        "changed_files": 5,
        "created_at": "2022-09-26T15:57:11Z",
        "closed_at": "2022-09-26T19:17:05Z",
        "merged_at": "2022-09-26T19:17:05Z",
        "body": "NMake is not included in our [support matrix](https://github.com/google/oss-policies-info/blob/main/foundational-cxx-support-matrix.md), so we won't be testing against it going forward.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 84,
        "deletions": 53,
        "changed_files": 6,
        "created_at": "2022-09-23T19:53:08Z",
        "closed_at": "2022-09-26T15:50:23Z",
        "merged_at": "2022-09-26T15:50:22Z",
        "body": "Xcode min: 13.3.1\r\niOS min: 10.0\r\nmacOS min: 10.12\r\ntvOS min: 12.0\r\nwatchOS min: 6.0\r\n\r\nApple's AppStore requirements now require Xcode 13:\r\n  https://developer.apple.com/news/?id=2t1chhp3\r\n\r\nUpdate to the minOS version and Xcode version that also matches what Firebase as done as that seems like a common set for most Apple platforms (https://firebase.google.com/docs/ios/setup).",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 370,
        "deletions": 705,
        "changed_files": 18,
        "created_at": "2022-09-23T18:11:38Z",
        "closed_at": "2022-09-26T15:02:00Z",
        "merged_at": "2022-09-26T15:02:00Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-09-23T18:01:14Z",
        "closed_at": "2022-09-24T00:51:08Z",
        "merged_at": "2022-09-24T00:51:08Z",
        "body": "Not all the types have \"Proto2\" on the end, so for uniformity put an objc_class_prefix like was done for the proto3 syntax file.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2022-09-23T12:11:24Z",
        "closed_at": "2022-09-27T19:15:31Z",
        "merged_at": "2022-09-27T19:15:31Z",
        "body": "The difference_type (ptrdiff_t) is a narrowing conversion to size_type (int). MSVC 2019 C++17 issues a C4244 warning about the initialization.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 83,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-09-23T10:24:46Z",
        "closed_at": "2022-09-27T13:49:50Z",
        "merged_at": null,
        "body": "optimize Varint paring by avx instruction. In our funciton level benchmarking, we get about 2.7x  maximum performance boost.\r\nRun on (112 X 3100 MHz CPU s)\r\nCPU Caches:\r\n  L1 Data 48K (x56)\r\n  L1 Instruction 32K (x56)\r\n  L2 Unified 1280K (x56)\r\n  L3 Unified 43008K (x2)\r\nLoad Average: 113.09, 103.01, 100.32\r\n-----------------------------------------------------------\r\nBenchmark                 Time             CPU   Iterations\r\n-----------------------------------------------------------\r\nBM_Parse32_1           5.41 ns         5.41 ns    127614707\r\nBM_ParseAvx32_1        5.41 ns         5.41 ns    131481251\r\nBM_Parse32_2           7.60 ns         7.60 ns    101486965\r\nBM_ParseAvx32_2        7.21 ns         7.21 ns    100662140\r\nBM_Parse32_3           18.6 ns         18.6 ns     37747465\r\nBM_ParseAvx32_3        15.8 ns         15.8 ns     45671267\r\nBM_Parse32_4           21.3 ns         21.3 ns     32821412\r\nBM_ParseAvx32_4        15.4 ns         15.4 ns     45606688\r\nBM_Parse32_5           24.0 ns         24.0 ns     28883162\r\nBM_ParseAvx32_5        14.2 ns         14.2 ns     48919738\r\nBM_Parse32_6           25.3 ns         25.3 ns     28171374\r\nBM_ParseAvx32_6        13.1 ns         13.1 ns     53483401\r\nBM_Parse32_7           26.9 ns         26.9 ns     25914018\r\nBM_ParseAvx32_7        13.1 ns         13.1 ns     53334350\r\nBM_Parse32_8           29.1 ns         29.1 ns     24179552\r\nBM_ParseAvx32_8        13.1 ns         13.1 ns     53368440\r\nBM_Parse32_9           32.8 ns         32.8 ns     21251833\r\nBM_ParseAvx32_9        13.1 ns         13.1 ns     52993618\r\nBM_Parse32_10          35.1 ns         35.1 ns     19933683\r\nBM_ParseAvx32_10       13.1 ns         13.1 ns     52927471\r\nBM_Parse64_1           5.96 ns         5.96 ns    114083173\r\nBM_ParseAvx64_1        5.98 ns         5.98 ns    117008484\r\nBM_Parse64_2           6.74 ns         6.74 ns    106423611\r\nBM_ParseAvx64_2        6.55 ns         6.55 ns    108907164\r\nBM_Parse64_3           18.7 ns         18.7 ns     37244811\r\nBM_ParseAvx64_3        13.1 ns         13.1 ns     54240934\r\nBM_Parse64_4           21.7 ns         21.7 ns     33925661\r\nBM_ParseAvx64_4        12.8 ns         12.8 ns     53840538\r\nBM_Parse64_5           25.2 ns         25.2 ns     28179568\r\nBM_ParseAvx64_5        12.7 ns         12.7 ns     57454421\r\nBM_Parse64_6           28.4 ns         28.4 ns     24626749\r\nBM_ParseAvx64_6        13.1 ns         13.1 ns     54277091\r\nBM_Parse64_7           32.2 ns         32.2 ns     21875611\r\nBM_ParseAvx64_7        12.9 ns         12.9 ns     55145458\r\nBM_Parse64_8           35.0 ns         35.0 ns     19970139\r\nBM_ParseAvx64_8        12.5 ns         12.5 ns     52959753\r\nBM_Parse64_9           38.3 ns         38.3 ns     18326964\r\nBM_ParseAvx64_9        16.6 ns         16.6 ns     42330051\r\nBM_Parse64_10          41.6 ns         41.6 ns     16794702\r\nBM_ParseAvx64_10       16.4 ns         16.4 ns     42469314\r\n\r\nin our object level test. End to End benchmarking for object that all are varint fields ,we can get about 20% performance boost",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 83,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-09-23T09:03:00Z",
        "closed_at": "2022-09-23T10:14:06Z",
        "merged_at": null,
        "body": "optimize Varint paring by avx instruction. In our funciton level benchmarking, we get about 2.7x  maximum performance boost.\r\nRun on (112 X 3100 MHz CPU s)\r\nCPU Caches:\r\n  L1 Data 48K (x56)\r\n  L1 Instruction 32K (x56)\r\n  L2 Unified 1280K (x56)\r\n  L3 Unified 43008K (x2)\r\nLoad Average: 113.09, 103.01, 100.32\r\n-----------------------------------------------------------\r\nBenchmark                 Time             CPU   Iterations\r\n-----------------------------------------------------------\r\nBM_Parse32_1           5.41 ns         5.41 ns    127614707\r\nBM_ParseAvx32_1        5.41 ns         5.41 ns    131481251\r\nBM_Parse32_2           7.60 ns         7.60 ns    101486965\r\nBM_ParseAvx32_2        7.21 ns         7.21 ns    100662140\r\nBM_Parse32_3           18.6 ns         18.6 ns     37747465\r\nBM_ParseAvx32_3        15.8 ns         15.8 ns     45671267\r\nBM_Parse32_4           21.3 ns         21.3 ns     32821412\r\nBM_ParseAvx32_4        15.4 ns         15.4 ns     45606688\r\nBM_Parse32_5           24.0 ns         24.0 ns     28883162\r\nBM_ParseAvx32_5        14.2 ns         14.2 ns     48919738\r\nBM_Parse32_6           25.3 ns         25.3 ns     28171374\r\nBM_ParseAvx32_6        13.1 ns         13.1 ns     53483401\r\nBM_Parse32_7           26.9 ns         26.9 ns     25914018\r\nBM_ParseAvx32_7        13.1 ns         13.1 ns     53334350\r\nBM_Parse32_8           29.1 ns         29.1 ns     24179552\r\nBM_ParseAvx32_8        13.1 ns         13.1 ns     53368440\r\nBM_Parse32_9           32.8 ns         32.8 ns     21251833\r\nBM_ParseAvx32_9        13.1 ns         13.1 ns     52993618\r\nBM_Parse32_10          35.1 ns         35.1 ns     19933683\r\nBM_ParseAvx32_10       13.1 ns         13.1 ns     52927471\r\nBM_Parse64_1           5.96 ns         5.96 ns    114083173\r\nBM_ParseAvx64_1        5.98 ns         5.98 ns    117008484\r\nBM_Parse64_2           6.74 ns         6.74 ns    106423611\r\nBM_ParseAvx64_2        6.55 ns         6.55 ns    108907164\r\nBM_Parse64_3           18.7 ns         18.7 ns     37244811\r\nBM_ParseAvx64_3        13.1 ns         13.1 ns     54240934\r\nBM_Parse64_4           21.7 ns         21.7 ns     33925661\r\nBM_ParseAvx64_4        12.8 ns         12.8 ns     53840538\r\nBM_Parse64_5           25.2 ns         25.2 ns     28179568\r\nBM_ParseAvx64_5        12.7 ns         12.7 ns     57454421\r\nBM_Parse64_6           28.4 ns         28.4 ns     24626749\r\nBM_ParseAvx64_6        13.1 ns         13.1 ns     54277091\r\nBM_Parse64_7           32.2 ns         32.2 ns     21875611\r\nBM_ParseAvx64_7        12.9 ns         12.9 ns     55145458\r\nBM_Parse64_8           35.0 ns         35.0 ns     19970139\r\nBM_ParseAvx64_8        12.5 ns         12.5 ns     52959753\r\nBM_Parse64_9           38.3 ns         38.3 ns     18326964\r\nBM_ParseAvx64_9        16.6 ns         16.6 ns     42330051\r\nBM_Parse64_10          41.6 ns         41.6 ns     16794702\r\nBM_ParseAvx64_10       16.4 ns         16.4 ns     42469314\r\n\r\nin our object level test. End to End benchmarking for object that all are varint fields ,we can get about 20% performance boost",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1016,
        "deletions": 1031,
        "changed_files": 54,
        "created_at": "2022-09-22T18:41:44Z",
        "closed_at": "2022-09-23T16:12:12Z",
        "merged_at": "2022-09-23T16:12:12Z",
        "body": "**Important:** this integration must be merged, not squashed",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-09-22T16:29:23Z",
        "closed_at": "2022-09-22T21:17:48Z",
        "merged_at": "2022-09-22T21:17:48Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 60,
        "deletions": 12,
        "changed_files": 3,
        "created_at": "2022-09-22T13:14:20Z",
        "closed_at": "2022-09-26T23:55:13Z",
        "merged_at": null,
        "body": "This is a precursor to re-implementing #10430 in a way that should be more straight-forward: removing the state machine from the tokenizer and instead calling `IsStructurallyValidUTF8` to check comment and string literal tokens.\r\n\r\nIn order to correctly revise position information (e.g. adjusting the column to account for multi-byte characters), we need this function to be able to return the number of encoded runes.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 50,
        "deletions": 446,
        "changed_files": 9,
        "created_at": "2022-09-20T16:11:31Z",
        "closed_at": "2022-09-26T21:23:48Z",
        "merged_at": "2022-09-26T21:23:48Z",
        "body": "build-protoc.sh and pom.xml are the only files we still use in this directory.  The build script is still used for part of the release process, but will eventually be replaced and can be moved to the legacy release directories.  The pom file is moved to the root directory",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 2371,
        "deletions": 3342,
        "changed_files": 109,
        "created_at": "2022-09-20T12:26:37Z",
        "closed_at": "2022-09-23T18:09:00Z",
        "merged_at": "2022-09-23T18:09:00Z",
        "body": null,
        "comments": 1
    },
    {
        "merged": true,
        "additions": 4099,
        "deletions": 4395,
        "changed_files": 103,
        "created_at": "2022-09-19T21:38:17Z",
        "closed_at": "2022-09-20T17:32:49Z",
        "merged_at": "2022-09-20T17:32:49Z",
        "body": "**Important:** this integration must be merged, not squashed",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-09-19T16:45:51Z",
        "closed_at": "2022-09-19T18:10:57Z",
        "merged_at": "2022-09-19T18:10:56Z",
        "body": "Some users might be depended on these, so until everything is flipped to explicit imports, need to still provide the class declaration so the proto isn't a breaking change.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 4,
        "created_at": "2022-09-17T00:17:36Z",
        "closed_at": "2022-09-26T20:09:14Z",
        "merged_at": "2022-09-26T20:09:14Z",
        "body": "Add missing `public` modifier in https://github.com/protocolbuffers/protobuf/pull/10599",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 113,
        "deletions": 178,
        "changed_files": 11,
        "created_at": "2022-09-17T00:08:48Z",
        "closed_at": "2022-09-19T18:08:22Z",
        "merged_at": "2022-09-19T18:08:22Z",
        "body": "This removes some cyclic logic in our installation tests, where we select which headers to remove from our CMake file_lists.  We then build and run our tests, expecting our previously installed headers to get picked up.  Since these lists are *also* used to determine which headers get installed, the fact that `port_def.inc` was excluded from installation was missed.\r\n\r\nInstead, with this PR we glob and remove all `*.h` and `*.inc*` files that haven't been explicitly grouped as test utilities.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 3,
        "changed_files": 5,
        "created_at": "2022-09-16T22:30:56Z",
        "closed_at": "2022-09-17T01:56:59Z",
        "merged_at": "2022-09-17T01:56:59Z",
        "body": "This also adds the examples build to some of our CI builds to avoid future breakages\r\n\r\nCloses #10613",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-09-16T22:11:53Z",
        "closed_at": "2022-09-27T00:31:43Z",
        "merged_at": "2022-09-27T00:31:43Z",
        "body": "This is no longer an issue with modern versions of OpenBSD and respective up to date compilers.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1255,
        "deletions": 801,
        "changed_files": 32,
        "created_at": "2022-09-16T21:19:10Z",
        "closed_at": "2022-09-26T19:36:07Z",
        "merged_at": "2022-09-26T19:36:07Z",
        "body": "https://github.com/protocolbuffers/protobuf/pull/9985 made all of our language-specific compiler code visibility-restricted in Bazel builds.  While most of this code was intended to be internal, we never explicitly specified it.  Specifically, gRPC (and likely other code generators) needs visibility into language-specific naming helpers.\r\n\r\nThis PR takes a middle-ground approach for our 22.x breaking release, only exposing what we think is reasonable for downstream codegen to reuse.  Other alternatives open for discussion are:\r\n1) Make all of the compiler internals public again.  This wouldn't break anyone, but is intentionally exposing a lot of code we intended to make private\r\n2) Keep all of the compiler internals private and have downstream teams branch any functionality they need.  This would  block gRPC's upgrade to our main branch, and require additional work from their end",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 10,
        "changed_files": 1,
        "created_at": "2022-09-16T20:18:27Z",
        "closed_at": "2022-09-16T22:04:00Z",
        "merged_at": "2022-09-16T22:03:59Z",
        "body": "Previously, the release process downloaded protoc executables from maven. This caused a significant delay between the time that protoc executables were pushed to maven and when the github release could come out.\r\n\r\nInstead, we will use local artifacts that are copied into the protoc-artifact directory by our release script.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 9,
        "changed_files": 8,
        "created_at": "2022-09-16T20:09:54Z",
        "closed_at": "2022-09-16T21:32:26Z",
        "merged_at": "2022-09-16T21:32:26Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 9,
        "changed_files": 8,
        "created_at": "2022-09-16T20:08:42Z",
        "closed_at": "2022-09-16T21:32:20Z",
        "merged_at": "2022-09-16T21:32:20Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 20,
        "changed_files": 10,
        "created_at": "2022-09-16T19:27:29Z",
        "closed_at": "2022-09-16T21:32:14Z",
        "merged_at": "2022-09-16T21:32:14Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 11,
        "changed_files": 2,
        "created_at": "2022-09-16T19:11:23Z",
        "closed_at": "2022-09-16T20:27:34Z",
        "merged_at": "2022-09-16T20:27:34Z",
        "body": "Removing all references to aarch64 osx binaries since we don't publish them in 3.20.x",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2022-09-16T18:25:53Z",
        "closed_at": "2022-09-16T20:26:55Z",
        "merged_at": "2022-09-16T20:26:55Z",
        "body": "The sources haven't yet been reformatted, there are lots of Print() calls that end up worse, but those should probably get revisit to Emit() instead.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 149,
        "deletions": 149,
        "changed_files": 13,
        "created_at": "2022-09-16T14:32:48Z",
        "closed_at": "2022-09-17T00:17:54Z",
        "merged_at": null,
        "body": "fix https://github.com/protocolbuffers/protobuf/issues/10593\r\nAdd `public` modifier to generated kotlin code for [Explicit API mode](https://github.com/Kotlin/KEEP/blob/master/proposals/explicit-api-mode.md) compatible. ",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 56,
        "deletions": 50,
        "changed_files": 11,
        "created_at": "2022-09-16T14:29:20Z",
        "closed_at": "2022-09-19T15:38:34Z",
        "merged_at": "2022-09-19T15:38:34Z",
        "body": "This allows some to use an alternative registry if they have a different implementation.\r\n\r\nThis is really just wiring though the change to use the GPBExtensionRegistry protocol vs the concrete GPBExtensionRegistry through the other apis.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-09-16T12:13:16Z",
        "closed_at": "2023-03-20T19:53:37Z",
        "merged_at": null,
        "body": "PHP 8.2 is around the corner, and they've just published 8.2.0RC2.\r\nSo, what about testing protobuf with it?\r\n\r\nAlso: even if everything compiles and the PHP extension can be used, we may have that PHP throws some warnings at startup.\r\nFor example, if we install protobuf 3.18.3 with PHP 8.1, we have these warnings:\r\n\r\n```\r\n$ php -r 'echo \"This is just a test.\\n\";'\r\n\r\nDeprecated: Return type of Google\\Protobuf\\Internal\\RepeatedField::offsetExists($index) should either be compatible with ArrayAccess::offsetExists(mixed $offset): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice in Unknown on line 0\r\n\r\n[...omissis... ]\r\n\r\nDeprecated: Return type of Google\\Protobuf\\Internal\\MapFieldIter::rewind() should either be compatible with Iterator::rewind(): void, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice in Unknown on line 0\r\n\r\nThis is just a test.\r\n```\r\n\r\nSo: what about letting the `php-ext.yml` GitHub Action fail in case we have such startup errors?",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 29,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2022-09-16T09:47:49Z",
        "closed_at": "2022-10-03T21:15:20Z",
        "merged_at": "2022-10-03T21:15:20Z",
        "body": "Fix bug described in https://github.com/protocolbuffers/protobuf/issues/10591\r\n\r\nSerialization of empty message packed in Any ",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-09-16T06:08:21Z",
        "closed_at": "2022-10-03T21:16:23Z",
        "merged_at": "2022-10-03T21:16:23Z",
        "body": "PHP 8.2 complains about Internal\\Message setting dynamic properties:\r\n\r\n`Creation of dynamic property xxx is deprecated\r\n/usr/src/myapp/vendor/google/protobuf/src/Google/Protobuf/Internal/Message.php:153`\r\n\r\nSince the class uses dynamic properties a bit, enable them explicitly with an attribute.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 58,
        "deletions": 13,
        "changed_files": 2,
        "created_at": "2022-09-16T01:39:21Z",
        "closed_at": "2022-09-16T22:11:30Z",
        "merged_at": "2022-09-16T22:11:30Z",
        "body": "This GitHub action will run after each pull request merge and will auto-update the file lists in in src/file_lists.cmake. The action will run as our bot account.\r\n\r\nI realized that if a bug somehow made the file generation non-idempotent, this could trigger an infinite loop of commits, so I put in an extra safeguard against that. If the previous commit was by \"Protobuf Team Bot\", the GitHub action will revert any local changes to ensure that no new commit will be made.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 135,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-09-15T18:48:06Z",
        "closed_at": "2022-09-29T18:50:22Z",
        "merged_at": "2022-09-29T18:50:22Z",
        "body": "How to use it.\r\nHow it works. (basic example and an example with gRPC)\r\nReference documentation.\r\n\r\nResolves https://github.com/protocolbuffers/protobuf/issues/10303",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 42,
        "deletions": 20,
        "changed_files": 8,
        "created_at": "2022-09-15T16:57:28Z",
        "closed_at": "2022-09-19T16:50:19Z",
        "merged_at": "2022-09-19T16:50:19Z",
        "body": "Closes #10418\r\nClosed #9573 ",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 56,
        "deletions": 83,
        "changed_files": 12,
        "created_at": "2022-09-15T14:39:27Z",
        "closed_at": "2022-09-15T15:41:56Z",
        "merged_at": "2022-09-15T15:41:56Z",
        "body": "- Sort things.\r\n- Remove the duplicate (not sure if some automation went wrong at some point).",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 67,
        "deletions": 16,
        "changed_files": 3,
        "created_at": "2022-09-15T14:28:08Z",
        "closed_at": "2022-09-22T15:54:27Z",
        "merged_at": "2022-09-22T15:54:27Z",
        "body": "Fixes #6335 -- just the validation of strings part, not the ambiguity issues (which likely calls for a separate issue since it really requires a minor language change).",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 130,
        "deletions": 9,
        "changed_files": 3,
        "created_at": "2022-09-15T14:07:01Z",
        "closed_at": "2022-09-15T15:52:10Z",
        "merged_at": "2022-09-15T15:52:10Z",
        "body": "Also add tests for all of the Is*Name helpers.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 69,
        "deletions": 42,
        "changed_files": 37,
        "created_at": "2022-09-14T23:56:00Z",
        "closed_at": "2022-09-15T16:20:20Z",
        "merged_at": "2022-09-15T16:20:20Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 216,
        "deletions": 71,
        "changed_files": 3,
        "created_at": "2022-09-14T22:43:24Z",
        "closed_at": "2022-09-22T16:24:35Z",
        "merged_at": "2022-09-22T16:24:35Z",
        "body": "This makes a few other related changes, for consistency:\r\n* Adds the existing checks, for default JSON names, to run even for proto2 files, but only as warnings (symmetry with similar check for enum value names).\r\n* Tweaks the similar check for enum value names to include \"This is not allowed in proto3\", for clarity, since it's only a warning in proto2.\r\n\r\nWhen checking custom JSON names, this considers it an error even in proto2 if two `json_name` options conflict. However, if a `json_name` option conflicts with a _default_ JSON name, it is just a warning in proto2 (aligns with the existing check and the similar check for enum value names).\r\n\r\nFixes #5063.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 127,
        "deletions": 71,
        "changed_files": 13,
        "created_at": "2022-09-14T20:33:13Z",
        "closed_at": "2022-09-15T02:33:55Z",
        "merged_at": "2022-09-15T02:33:55Z",
        "body": "We will leave these in place for now, since they're still needed for CMake builds.  A similar refactoring will need to be done there before we can remove this generated code entirely.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 19,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2022-09-14T20:33:03Z",
        "closed_at": "2022-09-14T21:50:18Z",
        "merged_at": "2022-09-14T21:50:18Z",
        "body": "Update python/release.sh to handle delay between twine upload and pip install",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 19,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2022-09-14T20:28:09Z",
        "closed_at": "2022-09-14T23:05:26Z",
        "merged_at": "2022-09-14T23:05:26Z",
        "body": "Update python/release.sh to handle delay between twine upload and pip install",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 19,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2022-09-14T20:26:48Z",
        "closed_at": "2022-09-14T22:16:58Z",
        "merged_at": "2022-09-14T22:16:58Z",
        "body": "Update python/release.sh to handle delay between twine upload and pip install",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 60,
        "deletions": 12,
        "changed_files": 5,
        "created_at": "2022-09-14T13:57:23Z",
        "closed_at": "2022-09-15T15:52:30Z",
        "merged_at": "2022-09-15T15:52:30Z",
        "body": "This will make it easier to pass the option down in the future to the other parts (message, enum, extension, etc. generators) as needed.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-09-14T09:56:43Z",
        "closed_at": "2022-10-03T18:39:28Z",
        "merged_at": null,
        "body": "Change bytes output to hex array string",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 3,
        "changed_files": 6,
        "created_at": "2022-09-14T00:00:17Z",
        "closed_at": "2022-09-30T17:33:19Z",
        "merged_at": "2022-09-30T17:33:19Z",
        "body": "Java 18 added additional linter checks as part of\r\nhttps://bugs.openjdk.java.net/browse/JDK-8274336 and https://bugs.openjdk.java.net/browse/JDK-8274335\r\n\r\nThese additional checks cause generated protobuf code to raise the following compiler warning: \"non-transient instance field of a serializable class declared with a non-serializable type\"\r\n\r\nThis change fixes the code generation to annotate the generated fields with the necessary suppressions to avoid false positives.\r\n\r\nAll the code generated from src/google/protobuf/*.proto now compiles successfully without serialization warnings in Java 18.\r\n\r\nfixes #9673",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 17,
        "deletions": 26,
        "changed_files": 3,
        "created_at": "2022-09-13T23:15:47Z",
        "closed_at": "2022-09-14T19:40:54Z",
        "merged_at": "2022-09-14T19:40:54Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 17,
        "deletions": 26,
        "changed_files": 3,
        "created_at": "2022-09-13T23:05:06Z",
        "closed_at": "2022-09-14T20:25:53Z",
        "merged_at": "2022-09-14T20:25:53Z",
        "body": "Fix release script, add composer.json.dist, and update credentials.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 155,
        "deletions": 48,
        "changed_files": 7,
        "created_at": "2022-09-13T20:37:00Z",
        "closed_at": "2022-09-15T20:11:00Z",
        "merged_at": "2022-09-15T20:11:00Z",
        "body": "Fixes #10554.\r\n\r\nI think the most controversial part of this would be the error messages, which I've updated to include the actual allowed range of values for integer literals (since this change makes the parser accept out-of-range integer literals, but they are interpreted as if float/double literals).\r\n\r\nI re-generated code from protos in the third commit in order to make tests pass. I think that means the `main` branch is actually broken now because of stale generated code? I can remove that commit, since I understand it may be noise for this CL, but I included it to get a successful run of tests.",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 72,
        "deletions": 54,
        "changed_files": 38,
        "created_at": "2022-09-13T18:39:21Z",
        "closed_at": "2022-09-13T19:50:19Z",
        "merged_at": "2022-09-13T19:50:18Z",
        "body": null,
        "comments": 1
    },
    {
        "merged": true,
        "additions": 72,
        "deletions": 53,
        "changed_files": 38,
        "created_at": "2022-09-13T18:37:50Z",
        "closed_at": "2022-09-13T20:23:15Z",
        "merged_at": "2022-09-13T20:23:15Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 149,
        "deletions": 35,
        "changed_files": 4,
        "created_at": "2022-09-13T16:46:30Z",
        "closed_at": "2022-09-14T23:46:01Z",
        "merged_at": "2022-09-14T23:46:01Z",
        "body": "Reduce memory consumption of MessageSet parsing",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 149,
        "deletions": 35,
        "changed_files": 4,
        "created_at": "2022-09-13T16:39:13Z",
        "closed_at": "2022-09-13T17:41:14Z",
        "merged_at": "2022-09-13T17:41:14Z",
        "body": "Reduce memory consumption of MessageSet parsing",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 150,
        "deletions": 35,
        "changed_files": 4,
        "created_at": "2022-09-13T16:36:30Z",
        "closed_at": "2022-09-13T17:48:43Z",
        "merged_at": "2022-09-13T17:48:43Z",
        "body": "Reduce memory consumption of MessageSet parsing",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 151,
        "deletions": 35,
        "changed_files": 4,
        "created_at": "2022-09-13T16:32:35Z",
        "closed_at": "2022-09-13T17:38:05Z",
        "merged_at": "2022-09-13T17:38:05Z",
        "body": "Reduce memory consumption of MessageSet parsing",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 150,
        "deletions": 35,
        "changed_files": 4,
        "created_at": "2022-09-13T16:27:20Z",
        "closed_at": "2022-09-13T17:29:31Z",
        "merged_at": "2022-09-13T17:29:31Z",
        "body": "Reduce memory consumption of MessageSet parsing",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 129,
        "deletions": 20,
        "changed_files": 6,
        "created_at": "2022-09-12T23:58:46Z",
        "closed_at": "2022-10-13T21:28:13Z",
        "merged_at": null,
        "body": "Just started to hit errors related to descriptor.proto changing. These files were auto generated using ./generate_descriptor_proto.sh. Should fix all the continuous failures",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 39,
        "deletions": 3,
        "changed_files": 15,
        "created_at": "2022-09-12T19:48:36Z",
        "closed_at": "2022-09-12T21:33:43Z",
        "merged_at": "2022-09-12T21:33:43Z",
        "body": "**Important:** this integration must be merged, not squashed",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-09-12T15:48:09Z",
        "closed_at": "2022-09-12T16:52:09Z",
        "merged_at": "2022-09-12T16:52:09Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-09-12T15:47:26Z",
        "closed_at": "2022-09-12T16:47:48Z",
        "merged_at": "2022-09-12T16:47:48Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-09-12T15:45:24Z",
        "closed_at": "2022-09-12T16:48:59Z",
        "merged_at": "2022-09-12T16:48:59Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-09-10T13:12:02Z",
        "closed_at": "2022-09-25T15:02:34Z",
        "merged_at": null,
        "body": "Cleanup.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-09-09T22:12:45Z",
        "closed_at": "2022-09-12T16:20:36Z",
        "merged_at": "2022-09-12T16:20:36Z",
        "body": "Change top version to match branch name",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-09-09T22:12:03Z",
        "closed_at": "2022-09-12T16:20:30Z",
        "merged_at": "2022-09-12T16:20:30Z",
        "body": "Change top version to match branch name",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-09-09T22:11:01Z",
        "closed_at": "2022-09-12T16:20:24Z",
        "merged_at": "2022-09-12T16:20:24Z",
        "body": "Change top version to match branch name",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-09-09T22:09:17Z",
        "closed_at": "2022-09-12T16:20:15Z",
        "merged_at": "2022-09-12T16:20:15Z",
        "body": "Add major version prefix to match branch name.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 7254,
        "deletions": 7319,
        "changed_files": 527,
        "created_at": "2022-09-09T18:45:06Z",
        "closed_at": "2022-09-12T18:44:58Z",
        "merged_at": "2022-09-12T18:44:58Z",
        "body": "**Important:** this integration must be merged, not squashed",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 572,
        "deletions": 364,
        "changed_files": 34,
        "created_at": "2022-09-08T21:35:56Z",
        "closed_at": "2023-01-03T20:13:09Z",
        "merged_at": null,
        "body": "This uses https://github.com/protocolbuffers/rules_ruby to fully Bazelify our ruby runtime code.  The Rakefile is left in place for now and is still used by our aarch64 tests.  With the current implementation ruby behaves similarly to our python wrapper, which selects whatever version is installed in the system.  Future enhancements will allow for more hermetic builds via Bazel flags to pin a specific version",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2022-09-08T17:04:31Z",
        "closed_at": "2022-09-09T15:16:47Z",
        "merged_at": "2022-09-09T15:16:46Z",
        "body": "These seem to have been broken by non-hermetic environment changes",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-09-08T16:54:16Z",
        "closed_at": "2022-09-08T17:57:01Z",
        "merged_at": "2022-09-08T17:57:01Z",
        "body": "A pre-existing protobuf installation is causing CI failures (see https://github.com/protocolbuffers/protobuf/pull/10512)",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 67,
        "deletions": 42,
        "changed_files": 5,
        "created_at": "2022-09-08T09:03:01Z",
        "closed_at": "2022-09-09T16:41:18Z",
        "merged_at": "2022-09-09T16:41:18Z",
        "body": "Fixes #10513",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-09-08T08:21:56Z",
        "closed_at": "2022-09-12T22:43:19Z",
        "merged_at": "2022-09-12T22:43:19Z",
        "body": "See https://github.com/protocolbuffers/protobuf/issues/10518",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 12,
        "changed_files": 2,
        "created_at": "2022-09-07T17:29:23Z",
        "closed_at": "2022-09-15T15:37:11Z",
        "merged_at": "2022-09-15T15:37:11Z",
        "body": "Fixes #10509.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-09-07T16:19:51Z",
        "closed_at": "2022-09-07T20:49:33Z",
        "merged_at": "2022-09-07T20:49:33Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 19,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2022-09-07T08:45:58Z",
        "closed_at": "2022-09-07T14:12:00Z",
        "merged_at": "2022-09-07T14:12:00Z",
        "body": "Fixes #7828.\r\n\r\n(Also tweaks the comment for Capacity.)",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 17,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-09-06T21:18:26Z",
        "closed_at": "2022-09-06T22:35:48Z",
        "merged_at": "2022-09-06T22:35:48Z",
        "body": "Add a copy of version.json to 3.20.x branch.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 17,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-09-06T21:15:18Z",
        "closed_at": "2022-09-06T22:34:45Z",
        "merged_at": "2022-09-06T22:34:45Z",
        "body": "Add a copy of version.json to 3.19.x branch.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 17,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-09-06T21:06:21Z",
        "closed_at": "2022-09-06T22:35:43Z",
        "merged_at": "2022-09-06T22:35:43Z",
        "body": "Add a copy of version.json to 3.16.x branch.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 15918,
        "deletions": 12641,
        "changed_files": 7,
        "created_at": "2022-09-03T01:34:45Z",
        "closed_at": "2022-09-30T23:54:39Z",
        "merged_at": "2022-09-30T23:54:39Z",
        "body": "# Background\r\n\r\nThe Ruby C extension embeds an \"amalgamation\" of the upb sources into `ruby-upb.c` and `ruby-upb.h`. This amalgamation is a .c/.h file pair that concatenates all the sources from upb into a single .c and .h, similar to the SQLite amalgamation: https://www.sqlite.org/amalgamation.html\r\n\r\nPrior to this PR, the amalgamation was only updated on an ad hoc basis, whenever someone decided to do it. This meant that the amalgamation was often months behind the canonical sources in https://github.com/protocolbuffers/upb.\r\n\r\n# PR Summary\r\n\r\nThis PR adds a staleness test, so that `ruby-upb.c` and `ruby-upb.h` will always be compared against the amalgamation as generated from the upb repo. If the amalgamation is out of date, the test will fail and the user will need to run:\r\n\r\n```\r\n$ bazel-bin/ruby/test_amalgamation_staleness --fix\r\n```\r\n\r\nInitially the PR contains a patch file against upb that makes `generated_file_staleness_test()` and `amalgamate.py` work properly across repos. However this will be submitted separately to the upb repo, and `upb.patch` will be reverted before merging this PR.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 12,
        "changed_files": 4,
        "created_at": "2022-09-01T21:13:58Z",
        "closed_at": "2022-09-02T13:26:17Z",
        "merged_at": "2022-09-02T13:26:17Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2022-09-01T19:37:10Z",
        "closed_at": "2022-09-12T22:44:49Z",
        "merged_at": "2022-09-12T22:44:49Z",
        "body": "It would have saved me a minute :D That way it's also consistent with the rest of the notes in the file.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-09-01T17:51:15Z",
        "closed_at": "2022-09-06T17:20:35Z",
        "merged_at": "2022-09-06T17:20:35Z",
        "body": "Add guidance that pure PHP implementation requires bcmath. Requested in https://github.com/protocolbuffers/protobuf/issues/4465. ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-09-01T14:21:37Z",
        "closed_at": "2022-09-12T22:45:20Z",
        "merged_at": "2022-09-12T22:45:20Z",
        "body": "Fix conformance test command for jruby to use conformance_test_jruby target.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 36,
        "changed_files": 8,
        "created_at": "2022-08-29T20:10:59Z",
        "closed_at": "2022-08-29T22:19:39Z",
        "merged_at": "2022-08-29T22:19:39Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 12370,
        "changed_files": 54,
        "created_at": "2022-08-29T16:39:07Z",
        "closed_at": "2022-08-29T17:54:25Z",
        "merged_at": "2022-08-29T17:54:25Z",
        "body": "C++ benchmarks have been superceded by https://github.com/google/fleetbench.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-08-29T08:54:45Z",
        "closed_at": "2022-10-03T21:17:28Z",
        "merged_at": null,
        "body": "trpc project is going to consume certain option numbers.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-08-27T08:32:55Z",
        "closed_at": "2022-08-30T16:30:55Z",
        "merged_at": "2022-08-30T16:30:55Z",
        "body": null,
        "comments": 1
    },
    {
        "merged": true,
        "additions": 37,
        "deletions": 37,
        "changed_files": 11,
        "created_at": "2022-08-27T06:49:34Z",
        "closed_at": "2022-08-29T20:32:18Z",
        "merged_at": "2022-08-29T20:32:18Z",
        "body": "This is a port of https://github.com/protocolbuffers/protobuf/pull/10467 for 3.20.x",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 33,
        "deletions": 35,
        "changed_files": 10,
        "created_at": "2022-08-27T06:47:59Z",
        "closed_at": "2022-08-30T13:39:21Z",
        "merged_at": "2022-08-30T13:39:21Z",
        "body": "This is a port of https://github.com/protocolbuffers/protobuf/pull/10467 for 21.x",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 35,
        "deletions": 36,
        "changed_files": 8,
        "created_at": "2022-08-27T06:47:14Z",
        "closed_at": "2022-08-30T13:39:17Z",
        "merged_at": "2022-08-30T13:39:17Z",
        "body": "This is a port of https://github.com/protocolbuffers/protobuf/pull/10467 for 3.19.x",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 40,
        "deletions": 11,
        "changed_files": 3,
        "created_at": "2022-08-26T21:12:34Z",
        "closed_at": "2022-09-15T15:38:08Z",
        "merged_at": "2022-09-15T15:38:08Z",
        "body": "Source code locations and spans for `default` and `json_name` \"pseudo-options\" are not consistent with how other options look nor are they consistent with one another.\r\n* Normal (and custom) options produce a span for the entire declaration, starting with the first character of the name and ending with the last character of the value. (For long-form option declarations, like in files, messages, enums, and services, it even includes the leading `option` keyword and trailing semicolon, so that the leading and trailing comments can be properly reported.)\r\n* The \"default\" pseudo-option produces a span that includes only the value.\r\n* The \"json_name\" pseudo-option produces two spans -- one that includes the entire declaration (like options) and one that includes only the value (like the default).\r\n\r\nFixes #10478.\r\n\r\nTake this test file for example:\r\n```protobuf\r\nsyntax = \"proto2\";\r\n\r\npackage foo.bar;\r\n\r\nimport \"google/protobuf/descriptor.proto\";\r\n\r\nextend google.protobuf.FieldOptions {\r\n  optional int64 abc = 10000;\r\n}\r\n\r\nmessage M {\r\n  optional string name = 1 [\r\n    default = \"blahblah\",\r\n    json_name = \"_NAME_\",\r\n    deprecated = false,\r\n    (foo.bar.abc) = -99\r\n  ];\r\n}\r\n```\r\n\r\nIt produces source code info for options and pseudo-options with locations like so:\r\n```protobuf\r\n    // entire options block, from \"[\" to \"]\"\r\n    location {\r\n      path: [4, 0, 2, 0, 8]\r\n      span: [11, 27, 16, 3]\r\n    }\r\n    // the field's default_value, span includes only the value\r\n    location {\r\n      path: [4, 0, 2, 0, 7]\r\n      span: [12, 14, 24]\r\n    }\r\n    // the field's json_name, span includes entire declaration\r\n    location {\r\n      path: [4, 0, 2, 0, 10]\r\n      span: [13, 4, 24]\r\n    }\r\n    // the field's json_name (again), span includes only the value\r\n    location {\r\n      path: [4, 0, 2, 0, 10]\r\n      span: [13, 16, 24]\r\n    }\r\n    // the deprecated option, span includes entire declaration\r\n    location {\r\n      path: [4, 0, 2, 0, 8, 3]\r\n      span: [14, 4, 22]\r\n    }\r\n    // the (foo.bar.abc) custom option, span includes entire declaration\r\n    location {\r\n      path: [4, 0, 2, 0, 8, 10000]\r\n      span: [15, 4, 23]\r\n    }\r\n```\r\n\r\nThis pull request makes the source code info for `json_name` and `default` pseudo-options consistent with other options:\r\n\r\n```protobuf\r\n    location {\r\n      path: [4, 0, 2, 0, 8]\r\n      span: [11, 27, 16, 3]\r\n    }\r\n    location {\r\n      path: [4, 0, 2, 0, 7]\r\n      span: [12, 4, 24]\r\n    }\r\n    location {\r\n      path: [4, 0, 2, 0, 10]\r\n      span: [13, 4, 24]\r\n    }\r\n    location {\r\n      path: [4, 0, 2, 0, 8, 3]\r\n      span: [14, 4, 22]\r\n    }\r\n    location {\r\n      path: [4, 0, 2, 0, 8, 10000]\r\n      span: [15, 4, 23]\r\n    }\r\n```",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 39,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2022-08-26T20:55:30Z",
        "closed_at": "2022-08-27T01:24:20Z",
        "merged_at": "2022-08-27T01:24:20Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 41,
        "deletions": 37,
        "changed_files": 8,
        "created_at": "2022-08-26T19:21:44Z",
        "closed_at": "2022-08-27T03:06:39Z",
        "merged_at": "2022-08-27T03:06:39Z",
        "body": "This is a cherrypick of https://github.com/protocolbuffers/protobuf/pull/10274, https://github.com/protocolbuffers/protobuf/pull/10132 and others to make this branch compatible with our Monterey test environment.\r\n\r\nOutside of some superficial (backwards compatible) tweaks to the objective-c build script, these changes are test-only.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2022-08-26T08:12:28Z",
        "closed_at": "2022-09-07T23:59:32Z",
        "merged_at": "2022-09-07T23:59:32Z",
        "body": "This change enables projects that consume protobuf via\r\n`FetchContent_MakeAvailable()` to set the C++ version to be used. This is\r\nnecessary, as linking code compiled for different C++ standards is asking for\r\ntrouble (and will simply not work in some cases).\r\n\r\nCheck that any version that might be set in `CMAKE_CXX_STANDARD` is new\r\nenough (C++14 or later). On Cygwin, check if any `-std=gnu++XX` has\r\nalready been set. In all cases, default to C++14.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 6,
        "changed_files": 3,
        "created_at": "2022-08-24T20:22:52Z",
        "closed_at": "2022-09-02T15:23:08Z",
        "merged_at": "2022-09-02T15:23:08Z",
        "body": "descriptor.h includes abseil's mutex.h directly, thus abseil is not a\r\nprivate dependency any more but must be included by every user of\r\nlibprotobuf.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-08-24T18:46:33Z",
        "closed_at": "2022-08-25T21:01:00Z",
        "merged_at": "2022-08-25T21:01:00Z",
        "body": "We no longer support VS 14, which was still in the path for this kokoro build",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 225,
        "deletions": 143,
        "changed_files": 32,
        "created_at": "2022-08-24T18:31:17Z",
        "closed_at": "2022-08-24T19:36:14Z",
        "merged_at": "2022-08-24T19:36:14Z",
        "body": "**Important:** this integration must be merged, not squashed",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3538,
        "deletions": 9705,
        "changed_files": 273,
        "created_at": "2022-08-24T05:49:42Z",
        "closed_at": "2022-08-24T17:46:34Z",
        "merged_at": "2022-08-24T17:46:34Z",
        "body": "**Important:** this integration must be merged, not squashed!",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 48,
        "deletions": 14,
        "changed_files": 9,
        "created_at": "2022-08-24T03:14:47Z",
        "closed_at": "2022-09-28T20:32:17Z",
        "merged_at": "2022-09-28T20:32:17Z",
        "body": "This closes #1965.",
        "comments": 32
    },
    {
        "merged": false,
        "additions": 4150,
        "deletions": 10149,
        "changed_files": 330,
        "created_at": "2022-08-24T00:12:48Z",
        "closed_at": "2022-08-24T05:13:49Z",
        "merged_at": null,
        "body": "**Important:** this integration must be merged, not squashed",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 44,
        "deletions": 38,
        "changed_files": 4,
        "created_at": "2022-08-23T23:40:44Z",
        "closed_at": "2022-09-28T13:30:16Z",
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 113,
        "deletions": 113,
        "changed_files": 40,
        "created_at": "2022-08-23T21:25:46Z",
        "closed_at": "2022-08-24T13:28:01Z",
        "merged_at": "2022-08-24T13:28:01Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2022-08-23T20:07:37Z",
        "closed_at": "2022-08-23T21:19:25Z",
        "merged_at": "2022-08-23T21:19:25Z",
        "body": "The one file that isn't a WKT that still has a prefix is used by the conformance\r\ntests, and still needs a prefix there.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2414,
        "deletions": 234,
        "changed_files": 55,
        "created_at": "2022-08-23T18:27:01Z",
        "closed_at": "2022-08-23T19:43:18Z",
        "merged_at": "2022-08-23T19:43:18Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-08-23T17:22:55Z",
        "closed_at": "2022-08-24T13:24:35Z",
        "merged_at": "2022-08-24T13:24:35Z",
        "body": "Mypy-protobuf is here\r\nhttps://github.com/nipunn1313/mypy-protobuf\r\n\r\nIt currently uses extensions as explained here.\r\nhttps://github.com/nipunn1313/mypy-protobuf/blob/main/proto/mypy_protobuf/extensions.proto\r\n\r\nIt's a fairly stable project for generating type stubs for protobuf.\r\nIt's been around since ~2015 (open source since 2017). Since open\r\nsourcing it, it would make sense to reserve some extension numbers in\r\nthe global range.\r\n\r\nSee\r\nhttps://github.com/nipunn1313/mypy-protobuf/issues/396",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-08-23T16:57:00Z",
        "closed_at": "2022-08-23T19:13:17Z",
        "merged_at": "2022-08-23T19:13:16Z",
        "body": null,
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-08-23T13:19:45Z",
        "closed_at": "2022-08-23T14:54:57Z",
        "merged_at": "2022-08-23T14:54:57Z",
        "body": "- Only output test failures (less to page through)\r\n- Pass the build flags along when checking on the WKTs, otherwise the bazel\r\n  flags changed and the compiles have to re-done.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 55,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-08-23T09:20:52Z",
        "closed_at": "2022-08-26T14:32:34Z",
        "merged_at": "2022-08-26T14:32:34Z",
        "body": "Note that unlike Timestamp, this does *not* also overload comparison\r\noperators. Adding a `==` overload now would be a breaking change (as\r\nit would change the meaning of existing code from a reference\r\ncomparison to a value comparison), and implementing `<`, `<=`, `>=`\r\nand `>` without implementing `==` would be odd.\r\n\r\nImplementing `IComparable<T>` makes sorting much easier, however.\r\n\r\nFixes #7628",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 9,
        "changed_files": 2,
        "created_at": "2022-08-22T19:58:46Z",
        "closed_at": "2022-08-22T21:29:12Z",
        "merged_at": "2022-08-22T21:29:12Z",
        "body": "Visual Studio 2015 is no longer supported as per our [support matrix](https://developers.google.com/protocol-buffers/docs/news/2022-08-03#cpp-support-matrix).  Specifically, our dependency on Abseil breaks this old compiler.",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-08-22T09:22:40Z",
        "closed_at": "2022-08-22T20:51:29Z",
        "merged_at": "2022-08-22T20:51:29Z",
        "body": "If the `absl::strings` already exists at configure time, this means protobuf was likely included via `add_subdirectory()` from a parent project that also uses Abseil. Do not check `protobuf_ABSL_PROVIDER` in that case.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 11,
        "changed_files": 3,
        "created_at": "2022-08-20T23:58:00Z",
        "closed_at": "2022-08-21T07:54:31Z",
        "merged_at": "2022-08-21T07:54:31Z",
        "body": "This will synchronize CMake and Bazel builds, and also pull in some new functionality we currently stub out (e.g. ErrnoToStatus)",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 346,
        "deletions": 6,
        "changed_files": 5,
        "created_at": "2022-08-19T21:14:40Z",
        "closed_at": "2022-09-15T19:29:42Z",
        "merged_at": null,
        "body": "This enables validation inside the tokenizer only when used from the proto source parser. The tokenizer is also used by other things (including parsing the protobuf text format). This does not attempt to enable it for other contexts.\r\n\r\nSince the parser and tokenizer are inherently byte-based, this was kind of tricky. We basically put a little state machine in the tokenizer to recognize multi-byte codepoints and to decide if it observes valid or invalid ones, as it process the bytes one at a time. The main downside to this approach is that error messages for a naked multi-byte codepoint (not in a comment or string literal, meaning they are invalid syntax) will report the wrong codepoint -- it reports the value of just the first byte, not the whole thing. I think fixing that would require far more intrusive changes, so it's less risk to leave it this way.\r\n\r\nThis addresses one part of #9175 -- about allowing illegal UTF8 in the file input. (The second part of that bug is about allowing illegal UTF8 in values for string fields, like default values and options. Not touching that at the moment.)",
        "comments": 11
    },
    {
        "merged": true,
        "additions": 408,
        "deletions": 456,
        "changed_files": 64,
        "created_at": "2022-08-19T17:03:44Z",
        "closed_at": "2022-08-20T21:22:08Z",
        "merged_at": "2022-08-20T21:22:08Z",
        "body": "**Important:** this integration must be merged, not squashed",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 159,
        "deletions": 155,
        "changed_files": 3,
        "created_at": "2022-08-18T20:55:17Z",
        "closed_at": "2022-08-23T18:32:36Z",
        "merged_at": "2022-08-23T18:32:36Z",
        "body": "When using \"FetchContent_Declare\" with OVERRIDE_FIND_PACKAGE,\r\nprotobuf-config.cmake won't be used, thus the protobuf-generate macro\r\nwould be unavailable. By moving protobuf_generate to its own file, it\r\ncan be sourced and used even when using CMake's FetchContent.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-08-17T18:08:59Z",
        "closed_at": "2022-08-29T15:03:28Z",
        "merged_at": "2022-08-29T15:03:28Z",
        "body": "In order for internal acls to work, this needs to include the '.git' suffix.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2022-08-17T14:09:02Z",
        "closed_at": "2022-08-17T18:13:37Z",
        "merged_at": "2022-08-17T18:13:37Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2022-08-17T05:04:26Z",
        "closed_at": "2022-08-17T18:54:05Z",
        "merged_at": "2022-08-17T18:54:05Z",
        "body": "This time setup python environment w/o root access",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 47,
        "deletions": 30,
        "changed_files": 10,
        "created_at": "2022-08-16T18:04:27Z",
        "closed_at": "2022-08-16T23:31:35Z",
        "merged_at": "2022-08-16T23:31:35Z",
        "body": "This just replaces std::unordered_set with absl::flat_hash_set in a single file, to prove that the Abseil dependency works.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 41,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-08-16T04:00:33Z",
        "closed_at": "2022-08-17T15:36:45Z",
        "merged_at": "2022-08-17T15:36:45Z",
        "body": "Currently the ordering of the files in the dependency manifest file are undefined as the directories are stored in an unordered list.\r\n\r\nThis has resulted in a bug specifically for me with the combination of `CMake`/`ninja`/`depfiles` as if the first file listed as an output by CMake is not the first file in the list for the dependency manifest file, ninja complains about a missing \"primary output\" and treats the entire list of dependencies as dirty and rebuilds them.\r\n\r\nThe outputs for protoc don't really have a \"primary\" output as outputs of python/cpp etc would all be equal.\r\n\r\nThis PR sorts the dependency output files before writing them to resolve this.\r\nAt least this way so long as both of the CMake list and depfile are sorted it will work as expected.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 21,
        "changed_files": 3,
        "created_at": "2022-08-15T17:50:27Z",
        "closed_at": "2022-08-16T17:12:23Z",
        "merged_at": "2022-08-16T17:12:22Z",
        "body": "The support for -j was there since make didn't do parallel builds by default.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 34,
        "deletions": 29,
        "changed_files": 6,
        "created_at": "2022-08-15T16:58:41Z",
        "closed_at": "2022-08-16T15:14:25Z",
        "merged_at": "2022-08-16T15:14:25Z",
        "body": null,
        "comments": 1
    },
    {
        "merged": false,
        "additions": 26,
        "deletions": 34,
        "changed_files": 1,
        "created_at": "2022-08-14T21:06:26Z",
        "closed_at": "2023-08-28T22:37:52Z",
        "merged_at": null,
        "body": "For the sake of performance, the hex2bin call was removed from the generated PHP code in #8006\r\nHowever, after this PR all autogenerated files contain binary data, which makes it hard or even impossible to see using common tools (git and github included (i.e. [this file](https://github.com/protocolbuffers/protobuf/blob/main/php/src/GPBMetadata/Google/Protobuf/Struct.php)), as well as some code editors) since most software considers such files as binary ones and not as code.\r\n\r\nAt the same, there is a possibility to use hex representation of binary data inside PHP files, which doesn't affect the performance (because it compiles to the same OP codes by the interpreter).\r\n\r\n```\r\npackage ~/Desktop/proto $ cat test1.php\r\n<?php\r\n\r\n$str = \"teststring\";\r\necho $str;%\r\npackage ~/Desktop/proto $ phpdbg -p\\* test1.php\r\n\r\n$_main:\r\n     ; (lines=3, args=0, vars=1, tmps=1)\r\n     ; /Users/package/Desktop/proto/test1.php:1-4\r\nL0003 0000 ASSIGN CV0($str) string(\"teststring\")\r\nL0004 0001 ECHO CV0($str)\r\nL0004 0002 RETURN int(1)\r\n[Script ended normally]\r\npackage ~/Desktop/proto $ cat test2.php\r\n<?php\r\n\r\n$str = \"\\x74\\x65\\x73\\x74\\x73\\x74\\x72\\x69\\x6e\\x67\";\r\necho $str;%\r\npackage ~/Desktop/proto $ phpdbg -p\\* test2.php\r\n\r\n$_main:\r\n     ; (lines=3, args=0, vars=1, tmps=1)\r\n     ; /Users/package/Desktop/proto/test2.php:1-4\r\nL0003 0000 ASSIGN CV0($str) string(\"teststring\")\r\nL0004 0001 ECHO CV0($str)\r\nL0004 0002 RETURN int(1)\r\n[Script ended normally]\r\n```\r\n\r\nSo, this PR replaces binary data with hex representation to fix issues mentioned above\r\n",
        "comments": 11
    },
    {
        "merged": true,
        "additions": 62,
        "deletions": 13,
        "changed_files": 1,
        "created_at": "2022-08-14T18:32:57Z",
        "closed_at": "2022-09-12T21:22:47Z",
        "merged_at": "2022-09-12T21:22:46Z",
        "body": "The PyFrameObject structure members have been removed from the public C API.",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 65,
        "deletions": 2,
        "changed_files": 12,
        "created_at": "2022-08-12T21:21:39Z",
        "closed_at": "2022-08-12T23:41:00Z",
        "merged_at": "2022-08-12T23:41:00Z",
        "body": "This is the most recent Abseil LTS branch, from November 2021. We do not yet use Abseil for anything, but this change will make it possible to start using it in CMake when we're ready. This PR was tested by confirming that using absl::string_view from protobuf::Message doesn't break anything (under CMake builds only).\r\n\r\nNote: this is a roll-forward of https://github.com/protocolbuffers/protobuf/pull/9793 after we've put more CMake test coverage in place.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 892,
        "deletions": 1553,
        "changed_files": 168,
        "created_at": "2022-08-12T21:18:02Z",
        "closed_at": "2022-09-09T22:07:56Z",
        "merged_at": "2022-09-09T22:07:56Z",
        "body": "Replace duplicate kokoro continuous+presubmit configs with a single shared config.  This will avoid accidental desynchronization in the future that can cause continuous build failures.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 973,
        "deletions": 608,
        "changed_files": 84,
        "created_at": "2022-08-12T17:15:08Z",
        "closed_at": "2022-08-12T21:04:49Z",
        "merged_at": "2022-08-12T21:04:49Z",
        "body": "**Important:** this integration must be merged, not squashed\r\n\r\nThis is mostly just https://github.com/protocolbuffers/protobuf/pull/10132 after running it through the internal googler formatter",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 15,
        "deletions": 14,
        "changed_files": 1,
        "created_at": "2022-08-12T02:08:58Z",
        "closed_at": "2022-08-12T03:53:29Z",
        "merged_at": "2022-08-12T03:53:29Z",
        "body": "This was broken by the Autotools PR, and should now work as expected from the root directory.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 24,
        "changed_files": 9,
        "created_at": "2022-08-11T18:27:00Z",
        "closed_at": "2022-08-12T01:22:15Z",
        "merged_at": "2022-08-12T01:22:15Z",
        "body": "We can finally do this upgrade now that we have dropped our autotools\r\nbuild. Googletest recommends living at head, so let's go straight to the\r\nmost recent commit on main. For some reason the googletest archive is\r\nnot present in the Bazel build mirror, so I removed that entry and just\r\nleft the GitHub download link in our WORKSPACE file.\r\n\r\nGoogletest now requires C++14, so I updated all the C++11 flags I could\r\nfind to C++14 instead. I added a .bazelrc file to add -std=c++14 for all\r\nour Bazel builds.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-08-11T11:25:24Z",
        "closed_at": "2022-08-17T14:17:58Z",
        "merged_at": "2022-08-17T14:17:58Z",
        "body": "In clang these two functions with an unused parameter give a Wunused-parameter warning. By removing the parametername the warning disappears.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2119,
        "deletions": 1004,
        "changed_files": 52,
        "created_at": "2022-08-10T23:23:30Z",
        "closed_at": "2022-08-11T05:00:15Z",
        "merged_at": "2022-08-11T05:00:15Z",
        "body": "**Important:** this integration must be merged, not squashed",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2022-08-10T21:56:54Z",
        "closed_at": "2022-08-11T15:59:39Z",
        "merged_at": null,
        "body": "We will just use the version that is provided in `configure.ac`. This reduces the number of files that we need to update when versions change.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 20,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2022-08-10T21:35:03Z",
        "closed_at": "2022-08-11T14:50:12Z",
        "merged_at": "2022-08-11T14:50:12Z",
        "body": "Before `protoc --version` returned the C++ version (which includes a major version specific to C++). Changing to have no major version.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2022-08-10T08:31:35Z",
        "closed_at": "2022-08-17T14:16:50Z",
        "merged_at": "2022-08-17T14:16:50Z",
        "body": "Fixing a few \"extra \u2018;\u2019 [-Wpedantic]\" I got when compiling with gcc 10.3.0. This is simply removal of a few extra semicolons, does not affect the functionality of anything.\r\nThis is in c++",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-08-09T12:46:30Z",
        "closed_at": "2022-10-04T19:15:15Z",
        "merged_at": null,
        "body": "When generating PYI for python, enums don't have any fields and your IDE shows errors when referring to a value of an enum using `MyEnum.Foo`\r\n\r\nExample:\r\n```protobuf\r\nsyntax = \"proto3\";\r\nenum MyEnum {\r\n\tAbc = 0;\r\n\tFoo = 1;\r\n\tBar = 2;\r\n};\r\n```\r\n`$> protoc --pyi_out=. myenum.proto`\r\n\r\nCurrent PYI Output:\r\n```python\r\nfrom google.protobuf.internal import enum_type_wrapper as _enum_type_wrapper\r\nfrom google.protobuf import descriptor as _descriptor\r\nfrom typing import ClassVar as _ClassVar\r\n\r\nDESCRIPTOR: _descriptor.FileDescriptor\r\n\r\nclass MyEnum(int, metaclass=_enum_type_wrapper.EnumTypeWrapper):\r\n    __slots__ = []\r\nAbc: MyEnum\r\nFoo: MyEnum\r\nBar: MyEnum\r\n\r\n```\r\n\r\nWith my changes:\r\n```python\r\nfrom google.protobuf.internal import enum_type_wrapper as _enum_type_wrapper\r\nfrom google.protobuf import descriptor as _descriptor\r\nfrom typing import ClassVar as _ClassVar\r\n\r\nDESCRIPTOR: _descriptor.FileDescriptor\r\n\r\nclass MyEnum(int, metaclass=_enum_type_wrapper.EnumTypeWrapper):\r\n    __slots__ = []\r\n    Abc: MyEnum\r\n    Foo: MyEnum\r\n    Bar: MyEnum\r\n\r\nAbc: MyEnum\r\nFoo: MyEnum\r\nBar: MyEnum\r\n```\r\n\r\nIt's a bit ugly to have all enum values twice in the interface file, but it is an accurate representation of the generated Python interface - all the values are always in the enum class as well as the parent block. The change also works with enums nested inside of classes.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-08-08T23:10:29Z",
        "closed_at": "2022-08-09T16:13:24Z",
        "merged_at": "2022-08-09T16:13:24Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-08-08T20:22:13Z",
        "closed_at": "2022-08-10T21:42:03Z",
        "merged_at": "2022-08-10T21:42:03Z",
        "body": "For the service layer we're currently building for our products we need to add some custom extensions. This will be an SDK that customers can use and extend, so it would make sense to reduce the risk of conflicting IDs by allocating one for our purposes.\r\n\r\nCould this change be applied, please, in order to reserve our extension ID?\r\n\r\nThanks,\r\nSam",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2022-08-05T18:30:36Z",
        "closed_at": "2022-08-08T16:59:56Z",
        "merged_at": "2022-08-08T16:59:56Z",
        "body": "The steps described in the README.md won't work:\r\n\r\n```\r\n### Java\r\n \r\nFollow instructions in [../README.md](../README.md) to install protoc and then\r\ndownload protobuf Java runtime .jar file from maven:\r\n \r\n    https://mvnrepository.com/artifact/com.google.protobuf/protobuf-java\r\n \r\nThen run the following:\r\n \r\n    $ export CLASSPATH=/path/to/protobuf-java-[version].jar\r\n    $ make java\r\n \r\nThis will create the add_person_java/list_people_java executables (shell\r\nscripts) and can be used to create/display an address book data file.\r\n```\r\n\r\nChange the rules to catch up with the package structure change.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 423,
        "deletions": 85,
        "changed_files": 6,
        "created_at": "2022-08-05T16:51:55Z",
        "closed_at": "2023-02-16T22:05:47Z",
        "merged_at": null,
        "body": "Fix for https://github.com/protocolbuffers/protobuf/issues/10247\r\n\r\nAll unit tests ok with very small kMaxFieldsInMethod=4\r\n\r\nRound trip benchmark\r\n```\r\nByteArrayOutputStream baos = new ByteArrayOutputStream();\r\nprotoOld.writeTo(baos);\r\n\r\norig.protobuf_unittest.TestAnyProto.TestAny testAny =\r\n        orig.protobuf_unittest.TestAnyProto.TestAny.parseFrom(baos.toByteArray());\r\nblackhole.consume(testAny);\r\n\r\n\r\n```\r\n\r\n```\r\njava -version\r\nopenjdk version \"17.0.3\" 2022-04-19\r\nOpenJDK Runtime Environment Temurin-17.0.3+7 (build 17.0.3+7)\r\nOpenJDK 64-Bit Server VM Temurin-17.0.3+7 (build 17.0.3+7, mixed mode, sharing)\r\n\r\n```\r\n\r\n\r\nCheck small proto with 15 field. All fields inited\r\n```\r\nBenchmark      Mode  Cnt    Score   Error  Units\r\nTest.checkNew  avgt    2  836,389          ns/op\r\nTest.checkOld  avgt    2  933,154          ns/op\r\n\r\n```\r\nCheck small proto with 15 field. 2 fields inited, 14 empty\r\n```\r\nBenchmark                    Mode  Cnt    Score   Error  Units\r\nTest.checkNew15fields13empy  avgt    2  251,938          ns/op\r\nTest.checkOld15fields13empy  avgt    2  334,046          ns/op\r\n\r\n```\r\n\r\nCheck mid size proto. Here split code work and JIT work on old and on new code.\r\n```\r\nBenchmark              Mode  Cnt     Score   Error  Units\r\nTest.checkNew70fields  avgt    2  1637,487          ns/op\r\nTest.checkOld70fields  avgt    2  1621,035          ns/op\r\n\r\n```\r\n\r\nCheck big proto. Around 900 fields. Here split code work and JIT not work on old code.\r\n```\r\nBenchmark                    Mode  Cnt      Score   Error  Units\r\nTestVisit.checkNew800fields  avgt    2   6239,123          ns/op\r\nTestVisit.checkOld800fields  avgt    2  36872,855          ns/op\r\n\r\n```\r\n\r\nI see no difference or slight increase speed in small or medium proto files and great speed increase in large proto files.\r\n",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 194,
        "deletions": 18,
        "changed_files": 15,
        "created_at": "2022-08-05T01:14:37Z",
        "closed_at": "2022-08-09T15:20:51Z",
        "merged_at": "2022-08-09T15:20:51Z",
        "body": "This PR adds kokoro tests for protoc and the C++ runtime under:\r\n- Bazel builds\r\n- CMake builds using VS\r\n- CMake builds using NMake\r\n- CMake installation from source",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 351,
        "deletions": 183,
        "changed_files": 16,
        "created_at": "2022-08-04T19:41:59Z",
        "closed_at": "2022-08-04T20:59:51Z",
        "merged_at": "2022-08-04T20:59:51Z",
        "body": "**Important:** this integration must be merged, not squashed!",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-08-04T01:48:37Z",
        "closed_at": "2022-08-04T19:46:28Z",
        "merged_at": "2022-08-04T19:46:28Z",
        "body": "Pragma points at a directory that's not in the github repo, only internally.\r\nIt's throwing gRPC's IWYU analysis and causing it to recommend bad paths.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 60,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2022-08-03T19:08:22Z",
        "closed_at": "2022-08-04T16:30:16Z",
        "merged_at": "2022-08-04T16:30:16Z",
        "body": "cc @fiboknacky\r\n\r\nSee discussion in https://github.com/protocolbuffers/protobuf/issues/10184",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 7,
        "changed_files": 4,
        "created_at": "2022-08-03T17:58:16Z",
        "closed_at": "2022-08-09T17:35:15Z",
        "merged_at": "2022-08-09T17:35:15Z",
        "body": "Fixes #10323",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2022-08-03T10:28:14Z",
        "closed_at": "2022-08-03T13:43:07Z",
        "merged_at": "2022-08-03T13:43:07Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 23,
        "deletions": 23,
        "changed_files": 5,
        "created_at": "2022-08-02T21:14:36Z",
        "closed_at": "2022-08-12T21:09:55Z",
        "merged_at": "2022-08-12T21:09:55Z",
        "body": "This change adds a `static_cast` to `parse_function_generator.cc` so that generated C++ files do not emit a warning ([C4244 \u2013 'conversion' conversion from 'type1' to 'type2', possible loss of data](https://docs.microsoft.com/en-us/cpp/error-messages/compiler-warnings/compiler-warning-levels-3-and-4-c4244?view=msvc-170)) when built with MSVC.\r\n\r\nThis is related to the closed PR #10042.",
        "comments": 18
    },
    {
        "merged": true,
        "additions": 20,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-08-02T18:34:26Z",
        "closed_at": "2022-08-03T17:02:48Z",
        "merged_at": "2022-08-03T17:02:48Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-08-02T18:16:25Z",
        "closed_at": "2022-08-02T22:17:46Z",
        "merged_at": "2022-08-02T22:17:46Z",
        "body": "Add protoc-gen-bq-schema to the list of third party add-ons.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 287,
        "deletions": 24,
        "changed_files": 15,
        "created_at": "2022-08-02T14:27:47Z",
        "closed_at": "2022-08-02T19:43:30Z",
        "merged_at": "2022-08-02T19:43:30Z",
        "body": "**Important:** this integration must be merged, not squashed!",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 152,
        "deletions": 97,
        "changed_files": 9,
        "created_at": "2022-08-02T08:44:18Z",
        "closed_at": "2022-08-02T13:00:52Z",
        "merged_at": "2022-08-02T13:00:52Z",
        "body": "Previously, calling `message1.MergeFrom(message2)` would fail if `message1` and `message2` had map fields sharing a common key. After this change, the map entry from `message2` takes priority over the one in `message1`, as documented in the language guide.\r\n\r\nFixes #10327.\r\n\r\nNote that after this is released, any code using the latest generator will need to also use the latest version of Google.Protobuf, if it uses map fields. (That's the general expectation anyway, but definitely true this time.)",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-08-01T21:02:12Z",
        "closed_at": "2022-08-02T19:45:59Z",
        "merged_at": "2022-08-02T19:45:59Z",
        "body": "\u2026 to fix Kokoro presubmit failure caught when DLL=ON.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 60,
        "deletions": 3,
        "changed_files": 12,
        "created_at": "2022-08-01T19:53:50Z",
        "closed_at": "2022-08-01T22:20:44Z",
        "merged_at": "2022-08-01T22:20:44Z",
        "body": "This adds 3 new test points:\r\n- Test CMake on windows using dlls\r\n- Test CMake on linux using shared libraries\r\n- Test Bazel builds on windows",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-07-28T22:08:15Z",
        "closed_at": "2022-07-29T01:51:00Z",
        "merged_at": "2022-07-29T01:51:00Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 270,
        "changed_files": 17,
        "created_at": "2022-07-27T22:23:49Z",
        "closed_at": "2022-07-27T23:48:31Z",
        "merged_at": "2022-07-27T23:48:31Z",
        "body": "These tests verify that various things can be built/installed/tested\r\nusing our published distribution archives, but starting with 22.0 we\r\nwill no longer be publishing those.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 958,
        "deletions": 347,
        "changed_files": 44,
        "created_at": "2022-07-27T21:29:12Z",
        "closed_at": "2022-07-28T15:18:42Z",
        "merged_at": "2022-07-28T15:18:42Z",
        "body": "**Important:** this integration must be merged, not squashed!",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 19,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2022-07-27T17:55:56Z",
        "closed_at": "2022-07-27T19:53:15Z",
        "merged_at": "2022-07-27T19:53:15Z",
        "body": "Adds 5m sleep after twine upload and retry logic to pip install.\r\n\r\nTested with `python/release.sh 4.21.4 dev1`\r\n\r\nTesting shows that shorter ~3m sleep is likely insufficient.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 42,
        "deletions": 0,
        "changed_files": 9,
        "created_at": "2022-07-27T17:04:07Z",
        "closed_at": "2022-07-27T18:10:12Z",
        "merged_at": "2022-07-27T18:10:12Z",
        "body": "These are no-op tests for now, so that we can setup the Kokoro config.  They will be replaced with actual tests in a later PR",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-07-27T15:05:46Z",
        "closed_at": "2022-08-08T17:14:09Z",
        "merged_at": "2022-08-08T17:14:09Z",
        "body": "(-1000/1000) -1 = -2s // This is what the code used to incorrectly do\r\n(-999/1000) - 1 = -1s // This is correct\r\n\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 28,
        "deletions": 8,
        "changed_files": 3,
        "created_at": "2022-07-27T01:24:26Z",
        "closed_at": "2022-08-02T22:25:25Z",
        "merged_at": "2022-08-02T22:25:24Z",
        "body": "In #10041 we added escaping for PHP's `ReadOnly` keyword, but this misses writing the backwards compatibility file when the message is nested. For example, the file `Nested\\ReadOnly.php` is not written for the proto `message nested { message readonly {} }`.\r\n\r\nThis fortunately should not cause any issues with existing users, as this file is only for compatibility, and without it, the previous message file remains (and works as expected). But as the previous `ReadOnly.php` throw a PHP fatal error on PHP 8.1, the result is that anyone upgrading to PHP 8.1 and still using the `ReadOnly` keyword will still receive a PHP fatal error.\r\n\r\nThis is an edge case, but still one we should fix.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2022-07-26T21:54:10Z",
        "closed_at": "2023-06-06T13:44:06Z",
        "merged_at": null,
        "body": "Create separate .symbols.nupkg package for debugging C# code instead of .pdb files.\r\n\r\nRequested in #6218",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 70,
        "deletions": 47,
        "changed_files": 38,
        "created_at": "2022-07-26T20:32:10Z",
        "closed_at": "2022-07-26T21:44:02Z",
        "merged_at": "2022-07-26T21:44:02Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 489,
        "deletions": 68,
        "changed_files": 4,
        "created_at": "2022-07-26T06:34:26Z",
        "closed_at": "2022-09-09T15:25:28Z",
        "merged_at": null,
        "body": "This is a rebased version of #9391, and only present to check the Kokoro build.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 122,
        "deletions": 43,
        "changed_files": 9,
        "created_at": "2022-07-26T05:34:41Z",
        "closed_at": "2022-07-26T20:53:52Z",
        "merged_at": "2022-07-26T20:53:52Z",
        "body": "This PR also does some opportunistic cleanup of the CMake build.  Notably:\r\n- ctest should be used for running tests, which runs everything registered with add_test\r\n- newer docker image is used to allow more flexibility in cmake configuration\r\n- .gitignore file updated to include CMake cruft",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 212,
        "deletions": 189,
        "changed_files": 13,
        "created_at": "2022-07-23T08:08:10Z",
        "closed_at": "2022-07-26T03:36:47Z",
        "merged_at": "2022-07-26T03:36:47Z",
        "body": "These two tests explicitly cover two dev workflows that didn't have great coverage before:\r\n1) Building from source via CMake.  This is validated by simply by running our generated test targets\r\n2) System-wide installation via CMake.  This is validated by installing protobuf with CMake, burning all our local versions of the installed files, and then running our standard tests using the installed version.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2022-07-22T20:35:56Z",
        "closed_at": "2022-10-03T21:50:49Z",
        "merged_at": null,
        "body": "This was removed in #10188 however clang emits `-Wmissing-noreturn`\r\nnow, as that function cannot ever return due to the explicit\r\nabort call that was added. Adding the `[[noreturn]]` will prevent\r\nthis warning\r\n\r\n\r\nSee https://godbolt.org/z/ef9E1G9ah",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 509,
        "deletions": 126,
        "changed_files": 63,
        "created_at": "2022-07-21T23:44:25Z",
        "closed_at": "2022-07-22T15:57:12Z",
        "merged_at": "2022-07-22T15:57:12Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2022-07-21T22:05:35Z",
        "closed_at": "2022-07-25T19:46:40Z",
        "merged_at": "2022-07-25T19:46:40Z",
        "body": "The current 21.3 release breaks gRPC android due to this alignment requirement. Verified that reducing it to 4, makes it work again.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2022-07-21T19:25:34Z",
        "closed_at": "2022-07-21T20:35:32Z",
        "merged_at": "2022-07-21T20:35:32Z",
        "body": "I hit an error uploading to pecl.php.net, and I suspect it is because we\r\nhave changed to a new username but still have the old username in\r\npackage.xml.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2022-07-21T17:22:13Z",
        "closed_at": "2022-07-21T18:32:20Z",
        "merged_at": "2022-07-21T18:32:20Z",
        "body": "We did not finish the release yesterday, so this change updates the PHP\r\nrelease date to today.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 13,
        "changed_files": 1,
        "created_at": "2022-07-21T12:20:21Z",
        "closed_at": "2022-07-26T17:59:29Z",
        "merged_at": "2022-07-26T17:59:29Z",
        "body": "fixes: \r\n- using CMake hacks like unnecessary setting `CMAKE_RC_COMPILE_OBJECT`\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2022-07-21T00:27:00Z",
        "closed_at": "2022-07-21T17:51:00Z",
        "merged_at": "2022-07-21T17:51:00Z",
        "body": "Protoc depeneds on com.google:google:1 which is unsigned. Which means users\r\nthe validate signatures have to add it to an allow list. Upgrading makes it no longer\r\nnecessary.\r\n\r\nCompare:\r\nhttps://repo1.maven.org/maven2/com/google/google/1\r\nvs\r\nhttps://repo1.maven.org/maven2/com/google/google/5",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 69,
        "deletions": 54,
        "changed_files": 37,
        "created_at": "2022-07-20T23:33:12Z",
        "closed_at": "2022-07-21T15:29:20Z",
        "merged_at": "2022-07-21T15:29:20Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2022-07-20T16:44:41Z",
        "closed_at": "2022-07-20T17:52:55Z",
        "merged_at": "2022-07-20T17:52:55Z",
        "body": "This commit upgrades upb to the latest commit on its 21.x branch to pull\r\nin this fix: https://github.com/protocolbuffers/upb/pull/717 I also\r\nupdated CHANGES.txt to reflect that fix and one other Bazel change.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-07-20T09:10:16Z",
        "closed_at": "2022-08-09T21:32:16Z",
        "merged_at": "2022-08-09T21:32:16Z",
        "body": "Setting an instance variable without an `@` prefix makes it unacessible from the Ruby side, which prevent introspection by various tools.\r\n\r\nI see no reason to prevent this.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 37,
        "deletions": 29,
        "changed_files": 2,
        "created_at": "2022-07-20T09:06:54Z",
        "closed_at": "2022-08-12T17:06:28Z",
        "merged_at": "2022-08-12T17:06:28Z",
        "body": "The only difference between all the `Message` classes is just their `descriptor` instance variable.\r\n\r\nSo rather than create an entirely new class from scratch every time we can simply inherit from an abstract class.\r\n\r\nThis shink each `Message` class from `1456` bytes to `944` bytes, and the singleton class of each from `960` to `792`, for a total of `680` bytes saved per message class, so a ~28% reduction.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 15,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-07-20T06:36:46Z",
        "closed_at": "2022-07-20T16:27:32Z",
        "merged_at": "2022-07-20T16:27:32Z",
        "body": "Same as #10061 but for 21.x. A simple cherry-pick does not work because of the conflicts.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 82,
        "deletions": 112,
        "changed_files": 19,
        "created_at": "2022-07-19T19:10:06Z",
        "closed_at": "2022-07-21T03:58:32Z",
        "merged_at": "2022-07-21T03:58:32Z",
        "body": "This is in preparation for deprecation of support for 7.3 and lower.  This PR also switches our kokoro setup to use homebrew for installing dependencies, and makes our MacOS tests compatible with Monterey",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 43,
        "deletions": 13,
        "changed_files": 6,
        "created_at": "2022-07-19T17:26:40Z",
        "closed_at": "2022-07-19T20:57:28Z",
        "merged_at": "2022-07-19T20:57:28Z",
        "body": "This pull request cherry-picks several fixes (#10024, #10232, and #10271), upgrades upb to the latest version on its 21.x branch, and also also updates the changelog for 21.3.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 9,
        "changed_files": 2,
        "created_at": "2022-07-19T14:42:31Z",
        "closed_at": "2022-07-19T17:21:56Z",
        "merged_at": "2022-07-19T17:21:56Z",
        "body": null,
        "comments": 13
    },
    {
        "merged": true,
        "additions": 649,
        "deletions": 12,
        "changed_files": 4,
        "created_at": "2022-07-19T13:19:38Z",
        "closed_at": "2022-07-21T14:38:53Z",
        "merged_at": "2022-07-21T14:38:53Z",
        "body": null,
        "comments": 6
    },
    {
        "merged": true,
        "additions": 34,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-07-19T12:18:06Z",
        "closed_at": "2022-08-02T14:03:42Z",
        "merged_at": "2022-08-02T14:03:42Z",
        "body": "Fix for https://github.com/protocolbuffers/protobuf/issues/8101\r\n\r\nWhen converting identifiers for C# camel case, handle the case where the input starts with \"_&lt;digit&gt;\" and preserve the underscore.\r\n\r\nIt does not alter existing behaviour for other identifiers:\r\n- e.g. starts with \"_&lt;alpha&gt;\" - the underscore is consumed, so as to not break anything that relies on existing behaviour.\r\n- e.g. input is already invalid (e.g. identifier starts with a digit) -  it does not try and fix it.\r\n\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 124,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-07-19T10:54:36Z",
        "closed_at": "2022-07-19T13:55:32Z",
        "merged_at": "2022-07-19T13:55:32Z",
        "body": "These are primarily in order to document the current behavior,\r\nrather than asserting it's the \"right\" behavior.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-07-19T00:26:25Z",
        "closed_at": "2022-07-19T15:33:29Z",
        "merged_at": "2022-07-19T15:33:29Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-07-18T23:10:25Z",
        "closed_at": "2022-07-19T14:42:32Z",
        "merged_at": "2022-07-19T14:42:32Z",
        "body": "Update the UPB version to https://github.com/protocolbuffers/upb/commit/17b6451684ffcf6e77d10a5def9bf19af57eccd3. This fixes a build failure that was introduced by removing`protoc_lib`.\r\n\r\nI'm just submitting this to fix build errors on main, but I can update to a newer version if that's preferred.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 171,
        "deletions": 19,
        "changed_files": 11,
        "created_at": "2022-07-18T21:22:30Z",
        "closed_at": "2022-07-19T15:20:20Z",
        "merged_at": "2022-07-19T15:20:20Z",
        "body": "**Important:** this integration must be merged, not squashed",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-07-18T16:11:39Z",
        "closed_at": "2022-07-19T00:30:50Z",
        "merged_at": "2022-07-19T00:30:50Z",
        "body": "What version of protobuf and what language are you using?\r\nVersion: master\r\nLanguage: C++\r\nWindows Cygwin 3.3.4\r\nGCC 11.2.0",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-07-17T13:37:42Z",
        "closed_at": "2022-07-18T14:22:33Z",
        "merged_at": "2022-07-18T14:22:33Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 21,
        "deletions": 21,
        "changed_files": 2,
        "created_at": "2022-07-16T22:53:16Z",
        "closed_at": "2022-07-18T16:38:34Z",
        "merged_at": "2022-07-18T16:38:34Z",
        "body": null,
        "comments": 2
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 30,
        "changed_files": 1,
        "created_at": "2022-07-15T15:18:42Z",
        "closed_at": "2022-07-15T17:31:28Z",
        "merged_at": "2022-07-15T17:31:28Z",
        "body": "In particular, this removes the now-inaccurate instructions for building\r\nGoogle.Protobuf targeting .NET 3.5.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 326,
        "deletions": 151,
        "changed_files": 21,
        "created_at": "2022-07-14T21:11:29Z",
        "closed_at": "2022-07-14T23:23:45Z",
        "merged_at": "2022-07-14T23:23:45Z",
        "body": "**Important:** this integration must be merged, not squashed!",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-07-13T00:09:56Z",
        "closed_at": "2022-07-18T16:09:35Z",
        "merged_at": null,
        "body": "What version of protobuf and what language are you using?\r\nVersion: master\r\nLanguage: C++\r\nWindows Cygwin 3.3.4\r\nGCC 11.2.0",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2022-07-12T12:33:27Z",
        "closed_at": "2022-07-12T15:00:12Z",
        "merged_at": null,
        "body": "Both int32 and int64 should be mapped to json number. \r\nRight now, longs are always quoted (regadless the value of the boolean variable), so they are mapped to json string.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1493,
        "deletions": 4,
        "changed_files": 4,
        "created_at": "2022-07-12T09:33:12Z",
        "closed_at": "2022-07-14T22:47:23Z",
        "merged_at": "2022-07-14T22:47:23Z",
        "body": "The first commit here is just tidying up, effectively, and doesn't require a release note.\r\n\r\nThe second commit is the important one, exposing the plugin protos under the namespace Google.Protobuf.Compiler. This will be a semi-breaking change (generating a warning) for any project which already generates their own local copy of this proto, but is easily fixed by simply removing the local copy.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 29,
        "deletions": 87,
        "changed_files": 7,
        "created_at": "2022-07-11T21:44:44Z",
        "closed_at": "2022-07-12T05:04:41Z",
        "merged_at": "2022-07-12T05:04:40Z",
        "body": null,
        "comments": 2
    },
    {
        "merged": false,
        "additions": 165,
        "deletions": 1,
        "changed_files": 4,
        "created_at": "2022-07-11T18:21:56Z",
        "closed_at": "2022-10-04T16:26:18Z",
        "merged_at": null,
        "body": "Hi,\r\n\r\nI implemented a simple function on FieldMaskUtil to _clear_ the fields specified in the mask instead of \"copy only these fields\", as described in Issue #10198.\r\n\r\nFor this, I extended the existing recursive `FieldMaskTree.merge()` method using a `MergeOption.clearField`. This is of course covered by tests I deemed relevant.\r\n\r\nI'm not 100% confident about my choice of method names, nor about any performance/waste issues in `destination.mergeFrom(source)`, nor about my decision to reuse and extend `FieldMaskTree.merge()` rather than copy+pasting+editing it.\r\n\r\nI'd love to hear your thoughts.\r\n\r\nThanks!",
        "comments": 11
    },
    {
        "merged": true,
        "additions": 26,
        "deletions": 0,
        "changed_files": 4,
        "created_at": "2022-07-11T17:10:34Z",
        "closed_at": "2022-07-12T21:32:09Z",
        "merged_at": "2022-07-12T21:32:09Z",
        "body": "The new release script will build both Google.Protobuf and Google.Protobuf.Tools. Installing nuget/dotnet will be done in the docker image and setting up the necessary executable paths for Google.Protobuf.Tools will be done in internal preprocessing.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 985,
        "deletions": 203,
        "changed_files": 36,
        "created_at": "2022-07-08T23:27:22Z",
        "closed_at": "2022-07-11T18:34:32Z",
        "merged_at": "2022-07-11T18:34:32Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-07-08T15:32:27Z",
        "closed_at": "2022-07-09T21:34:46Z",
        "merged_at": "2022-07-09T21:34:46Z",
        "body": "Fixes https://github.com/protocolbuffers/protobuf/issues/9698 and https://github.com/protocolbuffers/protobuf/issues/10159 for now. Replaces incorrect https://github.com/protocolbuffers/protobuf/pull/10231 pull request.",
        "comments": 12
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2022-07-08T13:02:30Z",
        "closed_at": "2022-07-09T02:15:50Z",
        "merged_at": null,
        "body": "Fixes #9698 and #10159 for now. This is merely a band-aid on top of the bigger problem, and I'm not sure how you guys plan to deal with that.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 23,
        "deletions": 16,
        "changed_files": 10,
        "created_at": "2022-07-08T04:11:41Z",
        "closed_at": "2022-08-23T18:24:04Z",
        "merged_at": null,
        "body": "To reduce difference between internal and open source\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2022-07-07T19:21:17Z",
        "closed_at": "2022-07-08T20:55:18Z",
        "merged_at": "2022-07-08T20:55:18Z",
        "body": "Cherry-picking the commit from https://github.com/protocolbuffers/protobuf/pull/10222 to use the newest composer and applying the fix from https://github.com/protocolbuffers/protobuf/commit/8535efb3aa2b85ab691c78cd0f7769e9cb7abdc1 to cap the php unit version. This should fix the failing linux 32-bit test.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2022-07-07T19:19:46Z",
        "closed_at": "2022-07-08T20:54:53Z",
        "merged_at": "2022-07-08T20:54:53Z",
        "body": "Cherry-picking the commit from https://github.com/protocolbuffers/protobuf/pull/10222 to use the newest composer and applying the fix from https://github.com/protocolbuffers/protobuf/commit/8535efb3aa2b85ab691c78cd0f7769e9cb7abdc1 to cap the php unit version. This should fix the failing linux 32-bit test.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2022-07-07T19:17:49Z",
        "closed_at": "2022-07-08T20:54:46Z",
        "merged_at": "2022-07-08T20:54:46Z",
        "body": "Cherry-picking the commit from https://github.com/protocolbuffers/protobuf/pull/10222 to use the newest composer and applying the fix from https://github.com/protocolbuffers/protobuf/commit/8535efb3aa2b85ab691c78cd0f7769e9cb7abdc1 to cap the php unit version. This should fix the failing linux 32-bit test.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2022-07-07T19:15:00Z",
        "closed_at": "2022-07-08T20:54:38Z",
        "merged_at": "2022-07-08T20:54:38Z",
        "body": "Cherry-picking the commit from https://github.com/protocolbuffers/protobuf/pull/10222 to use the newest composer and applying the fix from https://github.com/protocolbuffers/protobuf/pull/10190/commits/8535efb3aa2b85ab691c78cd0f7769e9cb7abdc1 to cap the php unit version. This should fix the failing linux 32-bit test.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-07-06T22:35:38Z",
        "closed_at": "2022-07-07T19:05:46Z",
        "merged_at": "2022-07-07T19:05:46Z",
        "body": "Composer 1 is now deprecated and we must migrate to use composer 2 instead in our docker files.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 3452,
        "deletions": 10223,
        "changed_files": 74,
        "created_at": "2022-07-06T21:38:30Z",
        "closed_at": "2023-02-16T22:07:52Z",
        "merged_at": null,
        "body": "Opening this PR in order to get visibility on any potential Kokoro issues introduced by the branch.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-07-06T20:49:28Z",
        "closed_at": "2022-07-06T21:58:48Z",
        "merged_at": "2022-07-06T21:58:48Z",
        "body": null,
        "comments": 1
    },
    {
        "merged": true,
        "additions": 609,
        "deletions": 6,
        "changed_files": 4,
        "created_at": "2022-07-06T13:55:25Z",
        "closed_at": "2022-07-06T15:00:01Z",
        "merged_at": "2022-07-06T15:00:01Z",
        "body": "Reverts protocolbuffers/protobuf#10180\r\n\r\nThis script was used for builds, which are now failing.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 58,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-07-06T11:38:00Z",
        "closed_at": "2022-09-12T23:06:01Z",
        "merged_at": null,
        "body": "While we work on real projects in production, here comes a compilation error when field counts tend to be large.\r\n\r\n```plain\r\ninclude/google/protobuf/repeated_field.h:145:1: fatal error: recursive template instantiation exceeded maximum depth of 1024\r\n    PROTO_MEMSWAP_DEF_SIZE(__uint128_t, (1u << 31))\r\ninclude/google/protobuf/repeated_field.h:135:5: note: expanded from macro 'PROTO_MEMSWAP_DEF_SIZE'\r\n    memswap<kSize - sizeof(reg_type)>(p + sizeof(reg_type), \\\r\n[...]\r\n[neutralized].pb.cc:349526:38: note: in instantiation of function template specialization 'google::protobuf::internal::memswap<28136>' requested here\r\n  ::PROTOBUF_NAMESPACE_ID::internal::memswap<\r\n```\r\n\r\ntoolchain: clang 11\r\n\r\nI fixed it by adding a fall back when `kSize` exceeds 512 to avoid the error. Also a unit test is added.\r\n\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-07-05T13:03:02Z",
        "closed_at": "2022-07-08T16:10:18Z",
        "merged_at": "2022-07-08T16:10:18Z",
        "body": null,
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-07-04T07:57:58Z",
        "closed_at": "2022-07-12T21:25:43Z",
        "merged_at": "2022-07-12T21:25:43Z",
        "body": "# Context\r\nConformance tests are failing on `main` when running `cd conformance && make test_cpp`.\r\n\r\nThese tests are also failing the conformance check pipelines on Swift Protobuf (https://github.com/apple/swift-protobuf) which led me here.\r\n\r\n# Cause\r\nIt looks like the changes made in commit a3e1de01130aa665be3d559f69bbed8a487f2f9d introduced the issue by changing the `ReadFd` function signature from taking a `void *buf` parameter to a `char *buf` ([code here](https://github.com/protocolbuffers/protobuf/commit/a3e1de01130aa665be3d559f69bbed8a487f2f9d#diff-318b3d73ef3bbddd999e3f8c7ebd2ed9c11ec720b499460afeddbcf50c1d16ddR72)).\r\nAt the same time, one of the calls to the `ReadFd` function was changed to pass the return value of a call to `std::string.data()` ([code here](https://github.com/protocolbuffers/protobuf/commit/a3e1de01130aa665be3d559f69bbed8a487f2f9d#diff-318b3d73ef3bbddd999e3f8c7ebd2ed9c11ec720b499460afeddbcf50c1d16ddR235)) which is of type `const char*` ([cpp reference](https://cplusplus.com/reference/string/string/data/)).\r\nHowever, `const char*` cannot be passed as a `char *` parameter due to the loss of the const qualifier.\r\n\r\n# Proposed fix\r\nSince the `ReadFd` function is read-only, the proposed fix is just to use the `const_cast` operator to erase the `const` qualifier.\r\n\r\n# Failing tests logs\r\n```cpp\r\nconformance_cpp.cc:235:19: error: no matching function for call to 'ReadFd'\r\n  RETURN_IF_ERROR(ReadFd(STDIN_FILENO, serialized_input.data(), in_len));\r\n                  ^~~~~~\r\n../src/google/protobuf/stubs/status_macros.h:58:10: note: expanded from macro 'RETURN_IF_ERROR'\r\n        (expr);                                                              \\\r\n         ^~~~\r\nconformance_cpp.cc:72:14: note: candidate function not viable: 2nd argument ('const std::basic_string<char>::value_type *' (aka 'const char *')) would lose const qualifier\r\nutil::Status ReadFd(int fd, char* buf, size_t len) {\r\n             ^\r\n1 error generated.\r\nmake: *** [conformance_cpp-conformance_cpp.o] Error 1\r\n```",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2022-07-01T22:21:14Z",
        "closed_at": "2022-07-06T18:18:14Z",
        "merged_at": "2022-07-06T18:18:14Z",
        "body": "Add dependencies flag to pom template since java_export doesn't add the tag.\r\n\r\nChange the new pom version to match the rest of the repository.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-07-01T17:21:34Z",
        "closed_at": "2022-07-01T21:42:37Z",
        "merged_at": "2022-07-01T21:42:37Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 20,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2022-07-01T14:18:44Z",
        "closed_at": "2022-07-06T13:56:10Z",
        "merged_at": "2022-07-06T13:56:10Z",
        "body": "Fix for https://github.com/protocolbuffers/protobuf/issues/7474 (and https://github.com/grpc/grpc/issues/17995)\r\n\r\nWhen calling the plugins in **subprocess.cc** `Subprocess::Start()`  fix to use CreateProcessW instead of CreateProcessA to handle non-ascii paths.\r\n\r\nSee https://github.com/grpc/grpc/issues/17995#issuecomment-1171385170 for a summary of what the actual problem is and why the fix looks like the way it does.",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 3569,
        "deletions": 2098,
        "changed_files": 91,
        "created_at": "2022-06-30T16:26:31Z",
        "closed_at": "2022-07-07T00:53:31Z",
        "merged_at": "2022-07-07T00:53:31Z",
        "body": null,
        "comments": 1
    },
    {
        "merged": false,
        "additions": 44,
        "deletions": 43,
        "changed_files": 5,
        "created_at": "2022-06-30T05:53:27Z",
        "closed_at": "2022-07-12T21:42:25Z",
        "merged_at": null,
        "body": "PHP 7.0 is no longer tested or explicitly supported, and we use homebrew to install 7.3 for the remaining test.",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-06-29T23:53:33Z",
        "closed_at": "2022-06-30T18:28:19Z",
        "merged_at": "2022-06-30T18:28:19Z",
        "body": "Our Linux 32-bit test has been failing because of a PHP error. This is coming from a bug in the most recent release of phpunit: https://github.com/sebastianbergmann/phpunit/issues/4997. Changing the version numbers to ensure we use a version released before the bug was introduced.\r\n\r\nOther failures are unrelated and partially fixed by: https://github.com/protocolbuffers/protobuf/pull/10189.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-06-29T20:18:26Z",
        "closed_at": "2022-06-30T16:15:29Z",
        "merged_at": null,
        "body": "PR https://github.com/protocolbuffers/protobuf/pull/10105/ updated the C# version to 10 and made changes that were incompatible with the old version. By mistake, https://github.com/protocolbuffers/protobuf/pull/10183 reverted the version change which in turn broke the build. Updating the C# version will fix. \r\n\r\nOther failures are unrelated and partially fixed by: https://github.com/protocolbuffers/protobuf/pull/10190",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2022-06-29T18:35:38Z",
        "closed_at": "2022-07-11T14:53:49Z",
        "merged_at": "2022-07-11T14:53:49Z",
        "body": "GCC cannot infer that `LogMessage::Finish()` (called indirectly by `GOOGLE_LOG(FAIL)` in `AlignFail`) exits program when `level_ == LOGLEVEL_FATAL`. Compilation will create a warning in projects importing the library for debug builds. The attribute cannot be individually assigned to `LogMessage::Finish()` because it does return conditionally of the log level. Tried with GCC 9.3.0 and GCC 12.1.0.\r\n\r\nThis change adds an explicit abort() for compiler to clearly understand this does not return, and enables `[[noreturn]]` for MSVC as well.\r\n\r\nCloses #9758.",
        "comments": 16
    },
    {
        "merged": true,
        "additions": 35,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2022-06-29T18:30:42Z",
        "closed_at": "2022-06-30T23:14:03Z",
        "merged_at": "2022-06-30T23:14:03Z",
        "body": "Add a copy of `protoc-artifacts/pom.xml` to the java folder to store all maven files inside the java directory. It no longer needs the maven build work since we will be doing those builds with bazel and uploads with gpg.\r\n\r\nFor now, `protoc-artifacts/pom.xml` will remain for a case where we need to do a point release before we have completed that shift.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 79,
        "deletions": 56,
        "changed_files": 37,
        "created_at": "2022-06-27T20:46:49Z",
        "closed_at": "2022-06-27T22:02:32Z",
        "merged_at": "2022-06-27T22:02:32Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-06-27T17:08:02Z",
        "closed_at": "2022-06-27T18:56:27Z",
        "merged_at": "2022-06-27T18:56:27Z",
        "body": "Update old python link to new one identified by this PR: https://github.com/protocolbuffers/protobuf/pull/10177",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 609,
        "changed_files": 4,
        "created_at": "2022-06-27T16:21:05Z",
        "closed_at": "2022-07-01T16:08:54Z",
        "merged_at": "2022-07-01T16:08:53Z",
        "body": "Delete scripts that build protoc with autotools and remove references of them from docs.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-06-27T15:33:08Z",
        "closed_at": "2022-06-29T11:50:03Z",
        "merged_at": null,
        "body": null,
        "comments": 3
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2022-06-27T01:42:08Z",
        "closed_at": "2022-06-27T14:00:19Z",
        "merged_at": null,
        "body": null,
        "comments": 2
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2022-06-25T07:35:39Z",
        "closed_at": "2022-07-11T20:12:54Z",
        "merged_at": null,
        "body": "Updat",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-06-24T17:14:33Z",
        "closed_at": "2022-06-27T19:22:34Z",
        "merged_at": null,
        "body": "Altered /python link to manually install packages.\r\n\r\n#9221",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-06-23T10:19:29Z",
        "closed_at": "2022-06-24T07:18:26Z",
        "merged_at": "2022-06-24T07:18:26Z",
        "body": "Most of our code includes a space after the cast, e.g. `(int) x`\r\ninstead of `(int)x`. This .editorconfig change means that will be\r\nthe default formatting when it's performed by the editor.\r\n\r\ncc @erikma who encountered this in #10105.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 112,
        "deletions": 33,
        "changed_files": 7,
        "created_at": "2022-06-22T22:28:45Z",
        "closed_at": "2022-06-23T16:19:12Z",
        "merged_at": "2022-06-23T16:19:12Z",
        "body": "Cherry picked \r\n* arena changes\r\n* PHP API updates\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-06-22T19:19:40Z",
        "closed_at": "2022-07-21T00:48:32Z",
        "merged_at": "2022-07-21T00:48:32Z",
        "body": "NSCAssert() can be optimised away leaving the `firstField` appear as unused.  (See details in the internal CL)",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 9761,
        "deletions": 5765,
        "changed_files": 256,
        "created_at": "2022-06-22T19:17:19Z",
        "closed_at": "2022-06-22T21:37:13Z",
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3018,
        "deletions": 2441,
        "changed_files": 200,
        "created_at": "2022-06-22T14:52:05Z",
        "closed_at": "2022-06-29T16:43:23Z",
        "merged_at": null,
        "body": "**Important:** this integration must be merged, not squashed!",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-06-21T19:54:07Z",
        "closed_at": "2022-06-21T21:56:59Z",
        "merged_at": "2022-06-21T21:56:59Z",
        "body": "https://github.com/protocolbuffers/protobuf/issues/10153",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2022-06-21T07:08:36Z",
        "closed_at": "2022-06-21T17:55:05Z",
        "merged_at": null,
        "body": null,
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1039,
        "deletions": 730,
        "changed_files": 33,
        "created_at": "2022-06-17T18:46:14Z",
        "closed_at": "2022-06-19T02:32:49Z",
        "merged_at": "2022-06-19T02:32:49Z",
        "body": "**Important:** this integration must be merged, not squashed!",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 73,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2022-06-16T18:02:42Z",
        "closed_at": "2022-06-22T01:35:46Z",
        "merged_at": null,
        "body": "This will allow us to delete the autotools kokoro/macos/cpp_distcheck without a loss in coverage",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2022-06-15T20:47:14Z",
        "closed_at": "2022-06-16T00:00:36Z",
        "merged_at": "2022-06-16T00:00:36Z",
        "body": "These were deleted in https://github.com/protocolbuffers/protobuf/pull/10095 and broke our distribution artifact kokoro tests.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2022-06-15T17:23:38Z",
        "closed_at": "2022-06-21T17:39:42Z",
        "merged_at": "2022-06-21T17:39:42Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-06-15T17:10:15Z",
        "closed_at": "2022-06-15T18:36:20Z",
        "merged_at": "2022-06-15T18:36:20Z",
        "body": null,
        "comments": 1
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-06-15T07:56:19Z",
        "closed_at": "2022-06-16T15:59:10Z",
        "merged_at": "2022-06-16T15:59:10Z",
        "body": "This PR reserves the extension number 1148\r\nThe related `FileOptions` file can be found in [here](https://github.com/ballerina-platform/module-ballerina-grpc/blob/master/native/src/main/resources/ballerina/protobuf/descriptor.proto)\r\n\r\nRelated to https://github.com/ballerina-platform/ballerina-standard-library/issues/2798",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 33,
        "deletions": 11,
        "changed_files": 4,
        "created_at": "2022-06-13T20:53:49Z",
        "closed_at": "2022-06-15T13:52:57Z",
        "merged_at": "2022-06-15T13:52:57Z",
        "body": "This is a generation option that provides serves the same purpose as the\r\nexisting GPB_OBJC_USE_PACKAGE_AS_PREFIX_PREFIX environment variable; just\r\nproviding a different way to set/enable it.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3982,
        "deletions": 10338,
        "changed_files": 245,
        "created_at": "2022-06-12T02:28:21Z",
        "closed_at": "2022-08-11T05:51:30Z",
        "merged_at": "2022-08-11T05:51:30Z",
        "body": "This is the first step for \"bazelifying\" our codebase that removes Autotools and our custom test runner and replaces them with Bazel.  The basic strategy here is a top-down one.  A lot of the builds that are difficult to get properly modeled in Bazel have been wrapped in shell and genrules.  By migrating the high level build/test/release system to be managed solely by Bazel though, we can parallelize any effort to clean up these more isolated cases.  The ideal future will have Bazel as the source of truth, with generated configurations for other supported build systems (e.g. CMake, Rake, Composer, etc.).\r\n\r\nThis PR has been manually tested on Linux, Windows, and Mac in addition to all the Kokoro changes.\r\n\r\nA high level breakdown of what this PR includes is:\r\n- Conformance tests migrated to build/run with Bazel\r\n- Benchmark tests migrated to build/run with Bazel\r\n- All protobuf runtimes and protoc support Bazel builds, which wrap (rather than replace) the current build systems.\r\n- tests.sh replaced by Bazel test rules\r\n- Autotools config files deleted\r\n- Kokoro test environment replaced with new Bazel-based images hosted on GCR\r\n",
        "comments": 12
    },
    {
        "merged": true,
        "additions": 576,
        "deletions": 438,
        "changed_files": 51,
        "created_at": "2022-06-10T22:47:00Z",
        "closed_at": "2022-06-11T11:17:50Z",
        "merged_at": "2022-06-11T11:17:50Z",
        "body": "**Important:** this integration must be merged, not squashed!",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 606,
        "deletions": 438,
        "changed_files": 52,
        "created_at": "2022-06-10T20:07:14Z",
        "closed_at": "2022-06-10T22:34:06Z",
        "merged_at": null,
        "body": "**Important:** this integration must be merged, not squashed!",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-06-09T21:23:52Z",
        "closed_at": "2022-06-09T23:30:53Z",
        "merged_at": "2022-06-09T23:30:53Z",
        "body": "Update the length check in google::protobuf::CEscapeInternal to account\r\nfor the extra NUL character emitted by snprintf when escaping hex and\r\noctal sequences.\r\n\r\nThat function is an internal detail, not exported via any header.\r\nInternally, it is used in two places, and both calls make buffers\r\nthat do have space for the extra NUL.\r\nSo in the actual usage, the check is redundant.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2022-06-09T20:53:22Z",
        "closed_at": "2022-06-13T18:16:06Z",
        "merged_at": null,
        "body": "Fixes https://github.com/protocolbuffers/protobuf/issues/7826 and https://github.com/protocolbuffers/protobuf/issues/6029\r\n\r\nLinking against a protobuf translation unit (`.pb.o`) more than once can cause this error. Currently there is no real workaround. \r\n\r\nSee https://github.com/protocolbuffers/protobuf/issues/6029 for an example of how this problem can happen",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-06-09T20:11:11Z",
        "closed_at": "2022-07-06T20:00:09Z",
        "merged_at": "2022-07-06T20:00:09Z",
        "body": "Timestamps before 1970-01-01 00:00:00 were off by 1 second once converted.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 8,
        "changed_files": 8,
        "created_at": "2022-06-09T11:54:15Z",
        "closed_at": "2022-06-09T22:52:50Z",
        "merged_at": "2022-06-09T22:52:50Z",
        "body": "It should be `README.md` instead of `README.txt` in the `examples` directory.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1060,
        "deletions": 401,
        "changed_files": 43,
        "created_at": "2022-06-09T11:51:18Z",
        "closed_at": "2022-06-10T18:34:33Z",
        "merged_at": null,
        "body": "DO NOT MERGE!",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-06-09T07:03:39Z",
        "closed_at": "2022-06-09T20:27:39Z",
        "merged_at": "2022-06-09T20:27:39Z",
        "body": null,
        "comments": 1
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 10,
        "changed_files": 4,
        "created_at": "2022-06-09T00:11:10Z",
        "closed_at": "2022-06-09T12:19:06Z",
        "merged_at": "2022-06-09T12:19:06Z",
        "body": "Move to explicit on single arg c'tors.\r\nMove to unordered container types when working with pointers as order is likely unnecessary and just a performance issue.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-06-08T23:25:10Z",
        "closed_at": "2022-06-10T16:03:35Z",
        "merged_at": null,
        "body": "Protobuf decoding allocates extra memory when bytes field is decoded to c++ string",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2022-06-08T23:01:04Z",
        "closed_at": "2022-06-09T23:59:08Z",
        "merged_at": "2022-06-09T23:59:07Z",
        "body": "This fails to build with `-Werror`.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-06-08T20:22:01Z",
        "closed_at": "2022-06-27T19:25:12Z",
        "merged_at": "2022-06-27T19:25:12Z",
        "body": "These targets form the public interface of the Python protocol buffer support\r\nand must always be public.  It looks like commit\r\na6901f057e43b3b5c8079a5dac6165c5a8e9d427 accidentally restricted their\r\nvisibility.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-06-08T16:49:35Z",
        "closed_at": "2022-06-08T18:59:31Z",
        "merged_at": "2022-06-08T18:59:30Z",
        "body": "fixes #9974\r\n@acozzette",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-06-07T15:33:03Z",
        "closed_at": "2022-06-17T08:55:08Z",
        "merged_at": null,
        "body": "Fix the crash that occurs due to unaligned memory access (SIGBUS) on\r\nthe aligned structure. The crash occurs on certain android devices\r\nonly in the release mode (armeabi-v7 32 bit, 23.0.7599858 ndk).\r\n\r\nSigned-off-by: Mykhailo Kuchma <mykhailo.kuchma@gmail.com>",
        "comments": 11
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-06-06T23:23:47Z",
        "closed_at": "2022-06-07T23:13:33Z",
        "merged_at": "2022-06-07T23:13:33Z",
        "body": "sprintf has been explicitly marked as deprecated in Xcode 14.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-06-06T23:10:09Z",
        "closed_at": "2022-06-10T18:23:12Z",
        "merged_at": null,
        "body": "This should help prevent future warnings like the one being fixed in #10107.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-06-04T19:53:51Z",
        "closed_at": "2022-06-07T23:12:14Z",
        "merged_at": "2022-06-07T23:12:14Z",
        "body": "Modify to #ifdef to prevent certain projects to report warnings are errors. thx u",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 783,
        "deletions": 1379,
        "changed_files": 92,
        "created_at": "2022-06-03T03:43:36Z",
        "closed_at": "2022-06-23T09:05:16Z",
        "merged_at": "2022-06-23T09:05:16Z",
        "body": "Plus update C# README with Visual Studio 2022 info.",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 501,
        "deletions": 399,
        "changed_files": 14,
        "created_at": "2022-06-02T16:38:12Z",
        "closed_at": "2022-06-02T18:28:16Z",
        "merged_at": "2022-06-02T18:28:16Z",
        "body": "**Important:** this integration must be merged, not squashed!",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 79,
        "deletions": 12,
        "changed_files": 4,
        "created_at": "2022-06-02T15:19:26Z",
        "closed_at": "2022-06-13T03:49:34Z",
        "merged_at": "2022-06-13T03:49:34Z",
        "body": "### FieldDescriptor\r\n\r\n- Added support for `getContainingOneof` and `getRealContainingOneof`.\r\n- Added support for setting proto3 optional (internal only).\r\n- Remove the unused private var.\r\n\r\n### OneofDescriptor\r\n\r\n- Made `isSynthetic` work.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 10,
        "changed_files": 5,
        "created_at": "2022-06-02T01:14:32Z",
        "closed_at": "2022-06-02T19:38:35Z",
        "merged_at": "2022-06-02T19:38:35Z",
        "body": "https://github.com/protocolbuffers/protobuf/issues/10098",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 376,
        "changed_files": 17,
        "created_at": "2022-06-01T08:21:52Z",
        "closed_at": "2022-06-14T09:03:39Z",
        "merged_at": "2022-06-14T09:03:38Z",
        "body": "This is effectively a no-op from a customer perspective - it's just getting rid of unused code.\r\n\r\nFixes #9888.\r\n\r\ncc @amanda-tarafa",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 19,
        "deletions": 19,
        "changed_files": 5,
        "created_at": "2022-06-01T05:52:24Z",
        "closed_at": "2022-06-01T21:18:16Z",
        "merged_at": "2022-06-01T21:18:16Z",
        "body": "use char to find instead of string",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 19,
        "deletions": 19,
        "changed_files": 5,
        "created_at": "2022-06-01T03:39:22Z",
        "closed_at": "2022-06-01T05:04:30Z",
        "merged_at": null,
        "body": "use char to find instead of string",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 23,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2022-06-01T00:29:25Z",
        "closed_at": "2022-06-02T01:24:53Z",
        "merged_at": "2022-06-02T01:24:53Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 407,
        "deletions": 209,
        "changed_files": 4,
        "created_at": "2022-05-31T23:20:59Z",
        "closed_at": "2022-06-02T01:23:05Z",
        "merged_at": "2022-06-02T01:23:05Z",
        "body": "This PR changes `update_file_lists.sh` to use Bazel as the source of truth. Currently, only the cmake build is actually affected, but Automake should be fairly straightforward to convert.\r\n\r\nThe file lists were originally factored out in #10027. This PR switches over to Bazel-generated lists.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 18,
        "deletions": 10,
        "changed_files": 1,
        "created_at": "2022-05-31T23:00:27Z",
        "closed_at": "2022-06-22T17:43:13Z",
        "merged_at": "2022-06-22T17:43:13Z",
        "body": "To address #10045 and #9809\r\n\r\nAnother attempt at  #9822\r\n\r\nPackage repositories such as Nixpkgs will pass absolute paths to CMAKE variables.\r\n\r\n- Also clarify installation of cmake configuration\r\nfiles between the build and install directories.\r\n\r\n```\r\n[16:24:12] jon@jon-desktop /home/jon/projects/protobuf (fix-cmake-install-targets2)\r\n$ tree /nix/store/khhxwdyhnc4fd28wsp4dfq0ixfy8ihjn-protobuf-git/lib/cmake\r\n/nix/store/khhxwdyhnc4fd28wsp4dfq0ixfy8ihjn-protobuf-git/lib/cmake/\r\n\u2514\u2500\u2500 protobuf\r\n    \u251c\u2500\u2500 protobuf-config.cmake\r\n    \u251c\u2500\u2500 protobuf-config-version.cmake\r\n    \u251c\u2500\u2500 protobuf-module.cmake\r\n    \u251c\u2500\u2500 protobuf-options.cmake\r\n    \u251c\u2500\u2500 protobuf-targets.cmake\r\n    \u2514\u2500\u2500 protobuf-targets-release.cmake\r\n\r\n1 directory, 6 files\r\n```",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 11,
        "changed_files": 1,
        "created_at": "2022-05-31T19:43:01Z",
        "closed_at": "2022-05-31T20:45:44Z",
        "merged_at": "2022-05-31T20:45:44Z",
        "body": ", since absl dep was rolled back",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2022-05-31T18:30:31Z",
        "closed_at": "2022-05-31T19:35:17Z",
        "merged_at": null,
        "body": null,
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 13,
        "changed_files": 1,
        "created_at": "2022-05-31T17:26:11Z",
        "closed_at": "2022-05-31T19:34:59Z",
        "merged_at": "2022-05-31T19:34:59Z",
        "body": null,
        "comments": 4
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-05-30T15:46:22Z",
        "closed_at": "2022-06-13T18:25:09Z",
        "merged_at": null,
        "body": "Fix #9920 in the proposed way.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 344,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-05-28T03:13:08Z",
        "closed_at": "2022-06-01T00:52:26Z",
        "merged_at": "2022-06-01T00:52:26Z",
        "body": null,
        "comments": 1
    },
    {
        "merged": true,
        "additions": 218,
        "deletions": 258,
        "changed_files": 68,
        "created_at": "2022-05-28T00:09:30Z",
        "closed_at": "2022-05-31T16:13:38Z",
        "merged_at": "2022-05-31T16:13:38Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2022-05-26T19:40:09Z",
        "closed_at": "2022-05-26T21:11:38Z",
        "merged_at": "2022-05-26T21:11:38Z",
        "body": "This reverts commit c80808ce1defa4a6f02ceba8e1415b0bcdd068fd.\r\n\r\nThix fixes #10045. Somehow the change caused these four .cmake files to\r\nstop being installed:\r\n\r\nprotobuf-config.cmake\r\nprotobuf-config-version.cmake\r\nprotobuf-module.cmake\r\nprotobuf-options.cmake\r\n\r\nAfter reverting the change, I confirmed that the files are being\r\ninstalled again.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 159,
        "deletions": 108,
        "changed_files": 16,
        "created_at": "2022-05-26T19:37:10Z",
        "closed_at": "2022-05-31T16:12:12Z",
        "merged_at": "2022-05-31T16:12:11Z",
        "body": "**Important:** this integration must be merged, not squashed",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-05-26T17:52:05Z",
        "closed_at": "2022-05-26T19:09:50Z",
        "merged_at": "2022-05-26T19:09:50Z",
        "body": "Fixes #10046.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 86,
        "changed_files": 16,
        "created_at": "2022-05-26T17:35:29Z",
        "closed_at": "2022-05-26T19:13:41Z",
        "merged_at": "2022-05-26T19:13:41Z",
        "body": "We will reintroduce this soon, but we do not want it to take effect yet in the current 3.21 release.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 668,
        "changed_files": 16,
        "created_at": "2022-05-26T15:45:08Z",
        "closed_at": "2022-06-03T21:50:53Z",
        "merged_at": "2022-06-03T21:50:53Z",
        "body": "This has been replaced with the new Python upb release that uses Bazel",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 264,
        "deletions": 11,
        "changed_files": 14,
        "created_at": "2022-05-26T02:24:44Z",
        "closed_at": "2022-05-31T22:59:29Z",
        "merged_at": "2022-05-31T22:59:29Z",
        "body": null,
        "comments": 2
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 10,
        "changed_files": 1,
        "created_at": "2022-05-26T01:27:18Z",
        "closed_at": "2022-05-27T16:02:45Z",
        "merged_at": "2022-05-27T16:02:45Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 375,
        "deletions": 203,
        "changed_files": 17,
        "created_at": "2022-05-25T20:57:23Z",
        "closed_at": "2022-05-26T00:33:43Z",
        "merged_at": null,
        "body": "This allows `cc_dist_library` to get the tests from a `test_suite`.\r\nUnlike the behavior of `cc_dist_library` with `cc_library`, this is\r\ndone recursively, by propagating the aspect along the `test_suite`\r\nstructure (which is different from `deps`).\r\n\r\nThe upshot is that we can now use `cc_dist_library` to build lists of\r\ninput sources for tests, similar to how it already does this for\r\ncc_library targets.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 574,
        "deletions": 533,
        "changed_files": 98,
        "created_at": "2022-05-25T17:53:04Z",
        "closed_at": "2022-06-14T03:25:11Z",
        "merged_at": null,
        "body": "This change fixes the following MSVC warnings:\r\n- [C4244 \u2013 'conversion' conversion from 'type1' to 'type2', possible loss of data](https://docs.microsoft.com/en-us/cpp/error-messages/compiler-warnings/compiler-warning-levels-3-and-4-c4244?view=msvc-170)\r\n- [C4267 \u2013 'var' : conversion from 'size_t' to 'type', possible loss of data](https://docs.microsoft.com/en-us/cpp/error-messages/compiler-warnings/compiler-warning-level-3-c4267?view=msvc-170)\r\n\r\nTo prevent further instances from making it into the codebase, the change also adds the [`/WX` flag](https://docs.microsoft.com/en-us/cpp/build/reference/compiler-option-warning-level?view=msvc-170) to treat all compiler warnings as errors.\r\n\r\nThis change also disables the following MSVC warning (to be addressed in a follow-up PR):\r\n- [C4018 - 'token' : signed/unsigned mismatch](https://docs.microsoft.com/en-us/cpp/error-messages/compiler-warnings/compiler-warning-level-3-c4018?view=msvc-170)\r\n\r\nFor more context on these changes, please see #9263 and the discussion there.",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 360,
        "deletions": 67,
        "changed_files": 23,
        "created_at": "2022-05-25T17:51:36Z",
        "closed_at": "2022-07-18T18:14:36Z",
        "merged_at": "2022-07-18T18:14:36Z",
        "body": "See #10038 \r\n\r\nThis PR adds compatibility for PHP 8.1 by identifying \"readonly\" as a reserved word, and by adding forwards compatibility for any `ReadOnly` classes generated with a previous protobuf version (see new tests / new test protos).\r\n\r\nIt should be noted that in the past when we added a new keyword, forwards compatibility was not preserved. We only realized it now because we have several libraries (Spanner/Datastore/Firestore) which use the keyword `readonly` for message names. \r\n\r\n## Summary\r\n- Makes `ReadOnly` a reserved keyword for PHP 8.1\r\n    - Added in #9633\r\n    - When the forwards-compatibility issue was discovered, we reverted this in #10036\r\n- Adds the \"previously unreserved name\" to the descriptor pool to preserve forwards compatibility.\r\n- Adds tests with previously generated classes to verify it works\r\n- Updates the `protobuf.so` extension as well!\r\n\r\n## BC file for the previously unreserved classnames\r\n\r\nIn the file `ReadOnly.php`, where there used to generate `class ReadOnly`, there is now the following code to create an alias for the new classname:\r\n```php\r\n<?php\r\n# Generated by the protocol buffer compiler.  DO NOT EDIT!\r\n# source: proto/test_reserved_message_lower.proto\r\n\r\nnamespace Lower;\r\n\r\nclass_exists(PBReadOnly::class); // autoload the new class, which will also create an alias to the deprecated class\r\n@trigger_error(__NAMESPACE__ . '\\ReadOnly is deprecated and will be removed in the next major release. Use PBReadOnly instead', E_USER_DEPRECATED);\r\n```\r\n\r\nThis ensures that anyone still using the name `Readme` on previous versions of PHP will not be broken. \r\n\r\n## Alias declaration in new class file to the previously unreserved classnames\r\n\r\nLikewise, at the bottom of the new `PBReadOnly.php` file/class, we create an alias to the old one:\r\n\r\n```php\r\n/**\r\n * Generated from protobuf message <code>readonly</code>\r\n */\r\nclass PBReadOnly extends \\Google\\Protobuf\\Internal\\Message\r\n{\r\n\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param array $data {\r\n     *     Optional. Data for populating the Message object.\r\n     *\r\n     * }\r\n     */\r\n    public function __construct($data = NULL) {\r\n        \\GPBMetadata\\Proto\\TestReservedMessageLower::initOnce();\r\n        parent::__construct($data);\r\n    }\r\n\r\n}\r\n\r\n// Adding a class alias for backwards compatibility with the \"readonly\" keyword.\r\nclass_alias(ReadOnly::class, __NAMESPACE__ . '\\ReadOnly');\r\n```\r\n\r\n**NOTE**: The classname \"readonly\" is still valid, but the syntax for declaring it (e.g. `class ReadOnly {}`) is not. That means that creating an alias for it, and instantiating the class directly, is still valid in PHP 8.1.\r\n\r\n## Previously unreserved classnames\r\n\r\nThe previously unreserved classnames function the same way as any other type of reserved word, with the exception that they also get added to the descriptor pool. This is to maintain backwards compatibility.\r\n\r\nIn order for Protobuf to be able to know and handle any messages defined using the previous classname (e.g. `ReadOnly`) for versions of any library that are still using the older versions, we've added the previous names to the descriptor pool in both the native PHP and the C-extension implementations.\r\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 494,
        "deletions": 36,
        "changed_files": 1,
        "created_at": "2022-05-25T03:12:39Z",
        "closed_at": "2022-05-25T21:28:03Z",
        "merged_at": "2022-05-25T21:28:03Z",
        "body": "This splits the `protobuf_test` target into several other test targets, and adds `lite_unittest` and `lite_arena_unittest`, which were missing previously.\r\n\r\nI have left the `protobuf_test` target in place but empty for now.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 75,
        "deletions": 3,
        "changed_files": 4,
        "created_at": "2022-05-24T22:42:12Z",
        "closed_at": "2022-05-25T17:52:15Z",
        "merged_at": null,
        "body": "addresses https://github.com/protocolbuffers/protobuf/pull/10036 by adding previously unreserved names to the descriptor pool. This preserves forwards compatibility.\r\n\r\ncc @dwsupplee @haberman ",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 33,
        "changed_files": 4,
        "created_at": "2022-05-24T21:46:55Z",
        "closed_at": "2022-05-24T22:52:18Z",
        "merged_at": "2022-05-24T22:52:18Z",
        "body": "This reverts commit 448d421250569811a3e656cd4c87fe42e857ed6f.\r\n\r\nUnfortunately we have to revert this because we're finding that it\r\nintroduces too much new build log spam for existing proto files that are\r\nout of compliance with the warnings. We might be able to roll it forward\r\nagain if we can figure out a way to do so without so many new log\r\nmessages.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 30,
        "deletions": 117,
        "changed_files": 10,
        "created_at": "2022-05-24T21:09:32Z",
        "closed_at": "2022-05-24T23:33:51Z",
        "merged_at": "2022-05-24T23:33:51Z",
        "body": "This reverts commit eb27c201f121b02c990c3665edce5171a8c70192.\r\n\r\nWe are rolling back for now because the change breaks if you are using old generated code with the new runtime. We're rolling back for 3.21.0, but will hopefully have a fix to release in 3.21.1.\r\n\r\ncc: @bshaffer ",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 90,
        "deletions": 17,
        "changed_files": 5,
        "created_at": "2022-05-24T01:57:29Z",
        "closed_at": "2022-05-25T19:02:31Z",
        "merged_at": "2022-05-25T19:02:31Z",
        "body": "This change makes the headers into actual lists of files, rather than globs. These lists are based on the current cmake definitions.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 404,
        "deletions": 391,
        "changed_files": 2,
        "created_at": "2022-05-24T01:29:32Z",
        "closed_at": "2022-07-14T22:37:12Z",
        "merged_at": null,
        "body": "This is in preparation for generating file lists automatically.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 530,
        "deletions": 457,
        "changed_files": 6,
        "created_at": "2022-05-24T00:02:00Z",
        "closed_at": "2022-05-31T23:16:03Z",
        "merged_at": "2022-05-31T23:16:03Z",
        "body": "This is in preparation for generating file lists automatically.\r\n\r\nI am putting the list of files under src/, not under cmake/, so that it will be next to the file list for automake (see #10029). I can certainly put the list back under cmake/, but in general, I think we probably want to move the cmake targets e.g. to src/CMakeLists.txt anyhow.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 294,
        "deletions": 137,
        "changed_files": 11,
        "created_at": "2022-05-23T23:34:08Z",
        "closed_at": "2022-05-24T19:31:57Z",
        "merged_at": "2022-05-24T19:31:57Z",
        "body": "When defining a `cc_dist_library`, we generally want exactly that target to be buildable from cmake, etc. So, to simplify source file specification, this change moves the logic for producing `CcFileList` directly into the `cc_dist_library` rule. The upshot is that a `cc_dist_library` will not only produce a library, but will also expose the corresponding list of source files that would be needed to build the library outside of Bazel.\r\n\r\nSome of this logic is simply moved from `pkg/build_systems.bzl` to `pkg/cc_dist_library.bzl`. A `cc_dist_library` rule still represents only the immediately-listed libraries, i.e., no transitive dependencies.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 23,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2022-05-23T21:00:41Z",
        "closed_at": "2022-05-23T22:01:05Z",
        "merged_at": "2022-05-23T22:01:05Z",
        "body": "Fixes: https://github.com/protocolbuffers/protobuf/issues/10022",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-05-23T19:52:55Z",
        "closed_at": "2022-05-25T17:23:18Z",
        "merged_at": "2022-05-25T17:23:18Z",
        "body": "The Problem:\r\nConsuming Protobuf runtime in Swift via \"Protobuf-C++ podspec\" fails compilation as it isn't able to resolve the header imports. \r\n\r\nSolution:\r\nAdding \"HEADER_SEARCH_PATHS\" to the \"pod_target_xcconfig\" flag will help  \"Protobuf-C++\" pod discover the required headers. \r\n\r\nNOTE:- Current obj-c builds are linting \"Protobuf.podspec\" and not \"Protobuf-C++.podspec\", hence they are all green. ",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2022-05-20T21:48:19Z",
        "closed_at": "2022-05-20T22:54:24Z",
        "merged_at": "2022-05-20T22:54:24Z",
        "body": "Change cocoapod specs to use the version as the tag number. We will be tagging each release with the protoc version number, the c++ version number and the cocoapod version number.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 74,
        "deletions": 41,
        "changed_files": 24,
        "created_at": "2022-05-20T17:40:08Z",
        "closed_at": "2022-05-20T22:54:17Z",
        "merged_at": "2022-05-20T22:54:17Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 98,
        "deletions": 65,
        "changed_files": 17,
        "created_at": "2022-05-20T16:12:46Z",
        "closed_at": "2022-07-13T19:53:30Z",
        "merged_at": null,
        "body": "This change uses pkg-config to take a dependency on Abseil. The\r\nlibabsl-dev Debian package has some spurious -Wl flags in some of the\r\npkg-config files, so I worked around this by filtering them out.\r\n    \r\nThis change depends on other changes from #10001, so that pull request\r\nneeds to get merged first.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 18,
        "deletions": 11,
        "changed_files": 5,
        "created_at": "2022-05-20T16:00:42Z",
        "closed_at": "2022-05-26T16:54:31Z",
        "merged_at": "2022-05-26T16:54:31Z",
        "body": "Autotools support is being deprecated, so this moves some of our kokoro tests to cmake",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-05-20T15:28:32Z",
        "closed_at": "2022-05-25T18:00:25Z",
        "merged_at": "2022-05-25T18:00:25Z",
        "body": "Adds a way to pipe additional dependencies into the custom CMake code generation function. This was done to make it easier to run the generation using a custom protoc plugin within the CMake project. This allowed me to work on the plugin and cause the downstream dependencies to be regenerated.\r\n\r\nIf there's a better way to do this, please advise.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 92,
        "deletions": 89,
        "changed_files": 2,
        "created_at": "2022-05-20T07:36:37Z",
        "closed_at": "2022-05-21T02:33:42Z",
        "merged_at": "2022-05-21T02:33:42Z",
        "body": "- Add back benchmarks/datasets/BUILD.bazel to dist archive\r\n- Change dist/build_systems.bzl to be compatible with Bazel 4.0.0.\r\n\r\nAfter this, most builds can use `//...`, with one exception: non-Mac environments must also exclude objectivec:\r\n`bazel build -- //... -//objectivec/...`",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 30,
        "deletions": 30,
        "changed_files": 3,
        "created_at": "2022-05-20T07:28:03Z",
        "closed_at": "2022-05-20T20:04:18Z",
        "merged_at": "2022-05-20T20:04:18Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 133,
        "deletions": 44,
        "changed_files": 5,
        "created_at": "2022-05-20T04:52:03Z",
        "closed_at": "2022-05-21T02:44:51Z",
        "merged_at": "2022-05-21T02:44:51Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 10,
        "changed_files": 1,
        "created_at": "2022-05-20T00:40:11Z",
        "closed_at": "2022-05-20T17:17:11Z",
        "merged_at": "2022-05-20T17:17:11Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 933,
        "deletions": 463,
        "changed_files": 61,
        "created_at": "2022-05-19T21:47:06Z",
        "closed_at": "2022-05-20T01:56:41Z",
        "merged_at": "2022-05-20T01:56:41Z",
        "body": "**Important:** this integration must be merged, not squashed",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 134,
        "deletions": 29,
        "changed_files": 7,
        "created_at": "2022-05-19T21:42:10Z",
        "closed_at": "2022-05-25T19:55:03Z",
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 37,
        "deletions": 37,
        "changed_files": 6,
        "created_at": "2022-05-19T17:22:21Z",
        "closed_at": "2022-07-13T19:53:36Z",
        "merged_at": null,
        "body": "This CL updates the autotools build to look for locally-installed gmock\r\nand gtest libraries via pkg-config. If they can't be found through\r\npkg-config, the build will fall back on the third_party/googletest\r\nsubmodule instead.\r\n\r\nTo make this work, I had to update a few of our Dockerfiles to install\r\npkg-config (necessary for the PKG_CHECK_MODULES() macro for autoconf).\r\nWhile I was at it, I also updated them to install libgmock-dev. That\r\nchange is not strictly necessary yet, but this way the Docker images\r\nwill be ready to go when we upgrade googletest (since googletest will\r\nlose autotools support at that point).",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 34,
        "deletions": 34,
        "changed_files": 34,
        "created_at": "2022-05-19T15:44:06Z",
        "closed_at": "2022-05-19T17:38:31Z",
        "merged_at": "2022-05-19T17:38:31Z",
        "body": ".NET 7 (currently in preview) introduces a warning (CS8981) which is triggered by the use of namespace aliases within generated code.\r\nWe don't expect the aliases chosen to ever cause conflicts with C# keywords, so the generated code now suppresses this warning.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2022-05-19T11:22:19Z",
        "closed_at": "2022-06-27T20:25:07Z",
        "merged_at": "2022-06-27T20:25:07Z",
        "body": "* Align Python version with C-extension version\r\n  (python/google/protobuf/pyext/descriptor.cc)\r\n* Update documentation accordingly\r\n* Add unit test",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-05-19T09:35:06Z",
        "closed_at": "2022-05-20T12:51:18Z",
        "merged_at": "2022-05-20T12:51:18Z",
        "body": "This PR reserves the extension number 1147 for `protoc-gen-xo`, a protoc generator related to [xo/xo](https://github.com/xo/xo).",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 19,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2022-05-19T04:17:35Z",
        "closed_at": "2022-05-19T15:44:28Z",
        "merged_at": "2022-05-19T15:44:28Z",
        "body": "This is a cherry-pick of https://github.com/protocolbuffers/protobuf/pull/9995 into the 21.x release.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 20,
        "deletions": 5,
        "changed_files": 3,
        "created_at": "2022-05-18T21:58:43Z",
        "closed_at": "2022-05-19T04:13:48Z",
        "merged_at": "2022-05-19T04:13:48Z",
        "body": "Fixes: https://github.com/protocolbuffers/protobuf/issues/9446\r\n\r\nThe root cause of the SEGV was that we were mutating `zend_class_entry.create_object` As of PHP 8.1, it appears that `zend_class_entry` structs for PHP classes are shared between PHP processes when using php-fpm and opcache. This means that writes to `zend_class_entry.create_object` in one process will be visible in another process, which violated our assumption that such writes reads and writes were single-threaded.\r\n\r\nThe fix was to stop mutating `zend_class_entry.create_object`, instead mutating a member of our `PROTOBUF_G()` struct.\r\n\r\nUnfortunately the setup to reproduce this is somewhat involved, so there is no test at the moment. I tested and verified the fix locally on my machine.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 113,
        "deletions": 8,
        "changed_files": 5,
        "created_at": "2022-05-18T21:58:31Z",
        "closed_at": "2022-05-19T02:30:35Z",
        "merged_at": null,
        "body": "Proof of concept",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 814,
        "deletions": 421,
        "changed_files": 89,
        "created_at": "2022-05-18T16:44:08Z",
        "closed_at": "2022-05-27T22:26:35Z",
        "merged_at": null,
        "body": "**Important:** this integration must be merged, not squashed",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 23,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-05-18T09:55:43Z",
        "closed_at": "2022-10-03T21:27:03Z",
        "merged_at": null,
        "body": "fixes #9990 \r\n\r\nAdds a method to raise total read bytes limit. Similar methods are present in code for other languages, this one was modelled after a C++ version. Without this method it is imporssible to parse large files like ONNX models as there is no way to change hardcoded read limits.\r\n\r\nProposed usage, instead of:\r\n```php\r\n$model = new \\Onnx\\ModelProto;\r\n$model->mergeFromStream($data);\r\n```\r\n\r\nDo this (raises limit to 64MB):\r\n```php\r\n$model = new \\Onnx\\ModelProto;\r\n$input_stream = new \\Google\\Protobuf\\Internal\\CodedInputStream($data);\r\n$input_stream->setTotalBytesLimit(64 << 20);\r\n$model->parseFromStream($input_stream);\r\n```",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 848,
        "deletions": 773,
        "changed_files": 25,
        "created_at": "2022-05-18T02:31:48Z",
        "closed_at": "2022-05-18T20:45:22Z",
        "merged_at": "2022-05-18T20:45:22Z",
        "body": "This is somewhat of a rough cut, since it doesn't split apart the lite and full targets, or unit tests.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 771,
        "deletions": 51,
        "changed_files": 10,
        "created_at": "2022-05-17T23:46:11Z",
        "closed_at": "2022-05-18T01:13:23Z",
        "merged_at": "2022-05-18T01:13:22Z",
        "body": "This change creates new Bazel packages for the C++ util libraries (similar to #9980 and #9985).",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-05-17T22:54:23Z",
        "closed_at": "2022-05-18T00:46:51Z",
        "merged_at": "2022-05-18T00:46:51Z",
        "body": "Also fixed a Python reference leak.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1037,
        "deletions": 164,
        "changed_files": 13,
        "created_at": "2022-05-17T21:34:41Z",
        "closed_at": "2022-05-17T23:39:47Z",
        "merged_at": "2022-05-17T23:39:47Z",
        "body": "This change adds packages for protoc sources under src/google/protobuf/compiler (this is similar to what was done in #9980).",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 34,
        "deletions": 34,
        "changed_files": 34,
        "created_at": "2022-05-17T00:56:27Z",
        "closed_at": "2022-05-18T17:18:26Z",
        "merged_at": "2022-05-18T17:18:26Z",
        "body": "Fixes https://github.com/grpc/grpc/issues/29672\r\n\r\nThis is option 2 (see linked issue). It suppresses the new warning in the generated source code. It's the simplest change and I think it's unlikely that any of the namespace aliases would turn into keywords.\r\n\r\n@jtattermusch @jskeet ",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 404,
        "deletions": 71,
        "changed_files": 8,
        "created_at": "2022-05-17T00:52:34Z",
        "closed_at": "2022-05-17T20:26:46Z",
        "merged_at": "2022-05-17T20:26:46Z",
        "body": "This change creates packages under `src/google/protobuf/{io,stubs,testing}` and moves build definitions there. Future changes will handle `.../util` and `.../compiler`, and finally `src/google/protobuf`.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 21,
        "changed_files": 2,
        "created_at": "2022-05-16T22:49:53Z",
        "closed_at": "2022-05-17T20:35:43Z",
        "merged_at": "2022-05-17T20:35:43Z",
        "body": "Edit the protoc_release target to package the proto files themselves instead of the proto descriptors.\r\n\r\nTested manually by building the artifact and inspecting the zip file. All contents were as expected.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-05-16T17:26:04Z",
        "closed_at": "2022-05-17T09:57:12Z",
        "merged_at": null,
        "body": "Discovered in https://github.com/envoyproxy/envoy/issues/21010",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-05-16T17:14:15Z",
        "closed_at": "2022-05-16T20:34:19Z",
        "merged_at": "2022-05-16T20:34:19Z",
        "body": "Updated upb which fixed the issues mentioned in the PR title.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-05-14T02:42:38Z",
        "closed_at": "2022-05-16T20:34:50Z",
        "merged_at": "2022-05-16T20:34:50Z",
        "body": "Backport of https://github.com/protocolbuffers/protobuf/pull/9963 to the 21.x branch.\r\n\r\n@haberman ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 75,
        "deletions": 11,
        "changed_files": 2,
        "created_at": "2022-05-14T01:01:01Z",
        "closed_at": "2022-05-17T00:21:28Z",
        "merged_at": "2022-05-17T00:21:28Z",
        "body": "If the user provides a `--link-objects` (or `-O`) flag that looks like\r\nit points to libprotobuf, use that for static linking instead of using\r\nthe hard-coded path `../src/.libs/libprotobuf.a`. (Also, if we see\r\nsuch a flag, assume they want to link it statically, even if they\r\ndon't provide `--compile_static_extension`.)\r\n\r\nSimilarly, if they provide a `--library-dirs=` (or `-L`), assume that\r\nis the location to search, and don't add the hard-coded path\r\n`../src/.libs`.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 17,
        "deletions": 17,
        "changed_files": 1,
        "created_at": "2022-05-13T21:11:18Z",
        "closed_at": "2022-05-13T23:40:04Z",
        "merged_at": "2022-05-13T23:40:04Z",
        "body": "Fix Kokoro errors by ensuring all code is in LF format instead of CRLF",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-05-13T20:51:28Z",
        "closed_at": "2022-05-17T22:36:37Z",
        "merged_at": "2022-05-17T22:36:37Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-05-13T20:17:22Z",
        "closed_at": "2022-05-16T23:11:09Z",
        "merged_at": "2022-05-16T23:11:09Z",
        "body": "This fixes errors like: `SDKROOT: unbound variable` when building a\r\ncc_dist_library rule (because it isn't in the default shell environment).",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 128,
        "deletions": 84,
        "changed_files": 42,
        "created_at": "2022-05-13T18:08:43Z",
        "closed_at": "2022-05-16T16:06:12Z",
        "merged_at": "2022-05-16T16:06:11Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-05-13T17:52:15Z",
        "closed_at": "2022-05-13T22:04:04Z",
        "merged_at": "2022-05-13T22:04:04Z",
        "body": "This PR adds support for Ruby `x64-mingw-ucrt` platform, which is the new platform Windows Ruby Installer uses as of Ruby 3.1.\r\n\r\nAs of [3.21.0.rc.1](https://rubygems.org/gems/google-protobuf/versions/3.21.0.rc.1) protobuf is not including a `x64-mingw-ucrt` gem package. Refer to [nokogiri](https://rubygems.org/gems/nokogiri/versions/1.13.6-x64-mingw-ucrt) for the expected `x64-mingw-ucrt` package we should see.\r\n\r\nRefer to this GRPC ticket for details: https://github.com/grpc/grpc/issues/29666",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 10,
        "changed_files": 1,
        "created_at": "2022-05-13T16:57:18Z",
        "closed_at": "2022-05-13T17:59:04Z",
        "merged_at": "2022-05-13T17:59:04Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-05-13T09:10:49Z",
        "closed_at": "2022-05-13T17:00:42Z",
        "merged_at": "2022-05-13T17:00:42Z",
        "body": null,
        "comments": 2
    },
    {
        "merged": false,
        "additions": 325,
        "deletions": 67,
        "changed_files": 8,
        "created_at": "2022-05-13T02:32:11Z",
        "closed_at": "2022-05-13T23:02:36Z",
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 507,
        "deletions": 367,
        "changed_files": 8,
        "created_at": "2022-05-12T02:35:33Z",
        "closed_at": "2022-05-13T02:48:58Z",
        "merged_at": "2022-05-13T02:48:58Z",
        "body": "* This PR moves Python rules to //python, but leaves aliases for publicly-visible targets.\r\n* There is some internal cleanup for how we copy .proto sources so they are usable from Python.\r\n* python/BUILD.bazel is now more in line with Bazel's BUILD style guide.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 36,
        "deletions": 26,
        "changed_files": 1,
        "created_at": "2022-05-11T23:48:14Z",
        "closed_at": "2022-05-12T02:13:56Z",
        "merged_at": "2022-05-12T02:13:56Z",
        "body": "* Switch to new provider syntax instead of structs.\r\n* Expose files via `DefaultInfo`, and use that for `py_proto_library`.\r\n* Several changes from buildifier.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 76,
        "deletions": 10,
        "changed_files": 5,
        "created_at": "2022-05-11T22:36:54Z",
        "closed_at": "2022-05-11T23:45:17Z",
        "merged_at": "2022-05-11T23:45:17Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2022-05-11T14:41:39Z",
        "closed_at": "2022-05-11T16:50:11Z",
        "merged_at": "2022-05-11T16:50:11Z",
        "body": "@deannagarcia fixes #9870",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-05-11T01:41:52Z",
        "closed_at": "2022-05-12T17:44:06Z",
        "merged_at": "2022-05-12T17:44:06Z",
        "body": "Client code is breaking due to missing include.  (endian.h was added in 9e09343 but didn't make it into this list, so it wasn't getting installed)",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2022-05-10T22:58:28Z",
        "closed_at": "2022-05-12T16:24:57Z",
        "merged_at": null,
        "body": "Our version regex expected something like 1.2.3-rc-1, but we are\r\nchanging the version scheme so that protoc will have a version more like\r\n1.2-rc-1. This commit fixes the regex to handle the new scheme.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 33,
        "deletions": 9,
        "changed_files": 4,
        "created_at": "2022-05-10T06:35:30Z",
        "closed_at": "2022-05-10T17:10:35Z",
        "merged_at": "2022-05-10T17:10:35Z",
        "body": "Also updated the changelog and removed the obsolete `PROTOBUF_VERSION` variable.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 226,
        "deletions": 37,
        "changed_files": 7,
        "created_at": "2022-05-09T23:42:08Z",
        "closed_at": "2022-05-11T20:33:29Z",
        "merged_at": "2022-05-11T20:33:29Z",
        "body": "This factors out some cmake build logic as well as the file test from cpp_distcheck.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 92,
        "deletions": 77,
        "changed_files": 40,
        "created_at": "2022-05-09T19:09:56Z",
        "closed_at": "2022-05-09T23:45:27Z",
        "merged_at": null,
        "body": null,
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-05-09T19:05:35Z",
        "closed_at": "2022-05-09T20:15:44Z",
        "merged_at": "2022-05-09T20:15:44Z",
        "body": "Fixes #9916. GCC appears to have a bug preventing our use of __constinit\r\nfrom working correctly, but this bug will be fixed in GCC 12.2.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 187,
        "deletions": 193,
        "changed_files": 4,
        "created_at": "2022-05-06T23:16:39Z",
        "closed_at": "2022-06-13T18:21:32Z",
        "merged_at": null,
        "body": "There is a chance this may fix some SEGVs seen on PHP 8.1 when\r\nOPCache is enabled:\r\n  https://github.com/protocolbuffers/protobuf/issues/9446#issuecomment-1119517310\r\n\r\nHowever this also will increase memory usage of PHP protos, and\r\nwill likely introduce CPU overhead also. Therefore we probably don't\r\nwant to release the code in this state.\r\n\r\nIf this indeed fixes the SEGVs being seen, we should redesign the generated\r\ncode to no longer create properties unless pure-PHP is being used.\r\n\r\ncc: @bshaffer ",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 157,
        "deletions": 19,
        "changed_files": 14,
        "created_at": "2022-05-06T23:01:08Z",
        "closed_at": "2022-05-09T23:33:00Z",
        "merged_at": "2022-05-09T23:33:00Z",
        "body": "This adds a Kokoro build definition to run Bazel tests inside of a bazel-built distribution tree.\r\n\r\nNotably, the distribution archives use the WORKSPACE file to retrieve deps. Sources such as googletest are not vendored in the archive.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-05-06T22:12:05Z",
        "closed_at": "2022-05-09T16:19:12Z",
        "merged_at": "2022-05-09T16:19:12Z",
        "body": "This fix is needed to prevent gRPC from having duplicate definitions of abseil targets. Once protobuf started depending on Abseil (by #9793), both gRPC and Protobuf are trying to include abseil project, resulting in calling add_subdirectory toward abseil-cpp throwing a bunch of errors.\r\n\r\nTo avoid this error, an easy solution is to introduce an inclusion guard, we can think of a better solution in future but this is good enough as a short-term solution. The same fix will be added to gRPC as well.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 57,
        "deletions": 7,
        "changed_files": 5,
        "created_at": "2022-05-06T16:17:15Z",
        "closed_at": "2022-05-06T17:22:09Z",
        "merged_at": "2022-05-06T17:22:09Z",
        "body": "**Important:** this integration must be merged, not squashed",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2022-05-06T00:16:44Z",
        "closed_at": "2022-05-06T01:40:20Z",
        "merged_at": "2022-05-06T01:40:20Z",
        "body": "This updates to a version of upb where tests are passing for all Python wheels except win32, which we have disabled for -rc1.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 188,
        "deletions": 173,
        "changed_files": 7,
        "created_at": "2022-05-05T22:42:06Z",
        "closed_at": "2022-05-06T20:30:48Z",
        "merged_at": "2022-05-06T20:30:48Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 239,
        "deletions": 264,
        "changed_files": 9,
        "created_at": "2022-05-05T22:07:53Z",
        "closed_at": "2022-05-06T19:11:46Z",
        "merged_at": "2022-05-06T19:11:46Z",
        "body": "These are all \"toolchain-y\" things, like copts, link_opts, and config_settings. These are very different from what is in //toolchain, though, so I chose the somewhat common name build_defs for the package. For now, I am only using this package for purely internal things. (Most public \"defs\"-type things should come from rules_proto/rules_cc, anyhow.)",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 404,
        "deletions": 185,
        "changed_files": 4,
        "created_at": "2022-05-05T01:14:35Z",
        "closed_at": "2022-05-05T20:29:47Z",
        "merged_at": "2022-05-05T20:29:47Z",
        "body": "This brings our BUILD files closer to the Bazel style guide: https://bazel.build/rules/build-style\r\n\r\nThis change unrolls several list comprehensions in the root package, and moves several Java/Kotlin rules into their respective directories. Since these are internal rules, that layout makes more sense to me than keeping the (internal-only) rule next to the public-facing `proto_library` rule.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 637,
        "deletions": 78,
        "changed_files": 19,
        "created_at": "2022-05-04T23:13:01Z",
        "closed_at": "2022-05-05T16:23:25Z",
        "merged_at": "2022-05-05T16:23:25Z",
        "body": "**Important:** this integration must be merged, not squashed",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 13,
        "changed_files": 2,
        "created_at": "2022-05-03T21:40:40Z",
        "closed_at": "2022-05-04T20:38:16Z",
        "merged_at": "2022-05-04T20:38:16Z",
        "body": "These should have been removed from https://github.com/protocolbuffers/protobuf/pull/9882.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-05-03T20:14:24Z",
        "closed_at": "2022-05-03T21:16:31Z",
        "merged_at": "2022-05-03T21:16:31Z",
        "body": "Remove the java generator for well known types in Kotlin since it is already provided by the Java package as reported in #9902.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 2334,
        "changed_files": 32,
        "created_at": "2022-05-03T17:49:32Z",
        "closed_at": "2022-05-03T19:34:36Z",
        "merged_at": "2022-05-03T19:34:36Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-05-03T15:21:10Z",
        "closed_at": "2022-05-03T17:23:33Z",
        "merged_at": "2022-05-03T17:23:33Z",
        "body": "This will fix the collect_all_artifacts.sh script, which was broken\r\nrecently when NVidia stopped publishing Cuda packages for Ubuntu 16.04.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 106,
        "deletions": 60,
        "changed_files": 3,
        "created_at": "2022-05-03T13:23:39Z",
        "closed_at": "2022-05-03T19:55:05Z",
        "merged_at": "2022-05-03T19:55:05Z",
        "body": "When generating, it isn't uncommon to have generate >1 file at a time, and it is\r\nlikely that one file will include another. So cache the results as the\r\ncalculation is done so the work isn't repeated.\r\n\r\nThe previous pruning method didn't have any concept of tracking already done\r\nwork, this changes the algorithm to avoid the repeated work to make things more\r\nminimal on the way up.\r\n\r\nSome extremely deep proto graphs, this takes the generation time from around 15\r\nmin to under 45 seconds.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-05-02T23:19:10Z",
        "closed_at": "2022-05-03T15:04:49Z",
        "merged_at": "2022-05-03T15:04:49Z",
        "body": "This will fix the collect_all_artifacts.sh script, which was broken\r\nrecently when NVidia stopped publishing Cuda packages for Ubuntu 16.04.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 12,
        "changed_files": 6,
        "created_at": "2022-05-02T23:18:45Z",
        "closed_at": "2022-05-03T15:58:31Z",
        "merged_at": "2022-05-03T15:58:31Z",
        "body": "\u2026major version",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-05-02T23:17:41Z",
        "closed_at": "2022-05-03T15:04:26Z",
        "merged_at": "2022-05-03T15:04:26Z",
        "body": "This will fix the collect_all_artifacts.sh script, which was broken\r\nrecently when NVidia stopped publishing Cuda packages for Ubuntu 16.04.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-05-02T23:16:15Z",
        "closed_at": "2022-05-03T15:04:12Z",
        "merged_at": "2022-05-03T15:04:12Z",
        "body": "This will fix the collect_all_artifacts.sh script, which was broken\r\nrecently when NVidia stopped publishing Cuda packages for Ubuntu 16.04.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1745,
        "deletions": 1566,
        "changed_files": 72,
        "created_at": "2022-05-02T22:57:18Z",
        "closed_at": "2022-05-03T17:26:37Z",
        "merged_at": "2022-05-03T17:26:37Z",
        "body": "**Important:** this integration must be merged, not squashed",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-05-02T18:19:01Z",
        "closed_at": "2022-05-02T22:46:43Z",
        "merged_at": "2022-05-02T22:46:43Z",
        "body": "This will fix the collect_all_artifacts.sh script, which was broken\r\nrecently when NVidia stopped publishing Cuda packages for Ubuntu 16.04.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 39,
        "deletions": 39,
        "changed_files": 27,
        "created_at": "2022-04-29T23:28:25Z",
        "closed_at": "2022-04-30T00:57:55Z",
        "merged_at": "2022-04-30T00:57:55Z",
        "body": null,
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-04-29T18:52:12Z",
        "closed_at": "2022-05-06T18:17:35Z",
        "merged_at": "2022-05-06T18:17:35Z",
        "body": "Add deployment target for mac osx to configuration files to properly set the environment variable",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-04-29T14:39:48Z",
        "closed_at": "2022-04-29T20:12:35Z",
        "merged_at": "2022-04-29T20:12:35Z",
        "body": "There are empty globs that prevent to use com_google_protobuf with\r\n--incompatible_disallow_empty_glob\r\n\r\nIntroduced in https://github.com/bazelbuild/bazel/issues/8195",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2022-04-29T14:11:25Z",
        "closed_at": "2022-04-29T17:24:10Z",
        "merged_at": "2022-04-29T17:24:10Z",
        "body": "When calling this genrule under windows it requires a bash to be available on the system.\r\n\r\nEspecially on newer windows machines this can be quite annoying since a bash exists that acts as an \"Ad\" for wsl:\r\n\r\n```\r\nC:\\Windows\\system32\\bash.exe -c <...many arguments...>\r\n# Configuration: fb8154cc422f6ac561b4e6c2932e00bdc2db9f196bfcf3968846bfb708d586ee\r\n# Execution platform: @local_config_platform//:host\r\nF\u00b3r das Windows-Subsystem f\u00b3r Linux wurden keine Distributionen installiert.\r\nDistributionen zur Installation finden Sie im Microsoft Store:\r\nhttps://aka.ms/wslstore\r\n```\r\n\r\nIt can be fixed to use windows native commands to do these basic file-operations.\r\nThe attribute is available since bazel 0.29.0 so i hope this is backwards compatible enough.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 37,
        "changed_files": 17,
        "created_at": "2022-04-29T03:23:15Z",
        "closed_at": "2022-05-03T18:35:29Z",
        "merged_at": "2022-05-03T18:35:29Z",
        "body": "The original PR (https://github.com/protocolbuffers/protobuf/pull/9852) has been successfully submitted to the internal codebase.  The C# and Objective-C changes are in files where the source of truth is on github, so the original PR needs to be rolled forward to keep them both in sync.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2022-04-29T01:42:56Z",
        "closed_at": "2022-05-04T20:02:13Z",
        "merged_at": "2022-05-04T20:02:13Z",
        "body": "Fixes \"no matching function for call to 'CalculateReserveSize'\" compiler errors with older clang versions.",
        "comments": 12
    },
    {
        "merged": true,
        "additions": 27,
        "deletions": 0,
        "changed_files": 6,
        "created_at": "2022-04-28T21:16:35Z",
        "closed_at": "2022-04-29T19:14:17Z",
        "merged_at": "2022-04-29T19:14:17Z",
        "body": "These were removed in #9669, but there are still some users.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 491,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-04-28T20:55:35Z",
        "closed_at": "2022-05-03T20:33:12Z",
        "merged_at": "2022-05-03T20:33:12Z",
        "body": "For now, these are simply generating files in CMake and Automake syntax. The generated files aren't actually used (yet) in build definitions.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 55,
        "deletions": 60,
        "changed_files": 1,
        "created_at": "2022-04-28T18:26:54Z",
        "closed_at": "2022-04-28T21:01:34Z",
        "merged_at": "2022-04-28T21:01:34Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 35,
        "changed_files": 6,
        "created_at": "2022-04-28T18:25:59Z",
        "closed_at": "2022-04-28T22:17:51Z",
        "merged_at": "2022-04-28T22:17:51Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-04-28T11:14:08Z",
        "closed_at": "2022-04-28T19:10:13Z",
        "merged_at": "2022-04-28T19:10:13Z",
        "body": "@acozzette ",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 61158,
        "changed_files": 211,
        "created_at": "2022-04-27T20:39:27Z",
        "closed_at": "2022-04-28T19:08:27Z",
        "merged_at": "2022-04-28T19:08:27Z",
        "body": "This implementation is about to be split out into a separate Git repo.",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-04-27T20:34:48Z",
        "closed_at": "2022-04-28T11:09:39Z",
        "merged_at": "2022-04-28T11:09:39Z",
        "body": null,
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-04-27T18:57:29Z",
        "closed_at": "2022-04-27T20:34:48Z",
        "merged_at": "2022-04-27T20:34:48Z",
        "body": "Now all necessary dependencies will be in `upb_deps`",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 15,
        "deletions": 11,
        "changed_files": 2,
        "created_at": "2022-04-27T15:25:14Z",
        "closed_at": "2022-04-27T17:02:02Z",
        "merged_at": "2022-04-27T17:02:02Z",
        "body": "This seems to be failing now. This change should help debug that. ",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2022-04-27T11:09:47Z",
        "closed_at": "2022-04-28T15:55:28Z",
        "merged_at": "2022-04-28T15:55:28Z",
        "body": "@acozzette ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-04-27T00:38:05Z",
        "closed_at": "2022-04-27T16:24:47Z",
        "merged_at": "2022-04-27T16:24:47Z",
        "body": "As of this update, you can test Python/upb with:\r\n\r\n```\r\n$ bazel test @upb//python/...\r\n```",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-04-26T22:33:35Z",
        "closed_at": "2022-04-28T22:47:28Z",
        "merged_at": null,
        "body": "see if this fails now, do not merge",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-04-26T19:13:16Z",
        "closed_at": "2022-04-26T22:30:07Z",
        "merged_at": "2022-04-26T22:30:07Z",
        "body": "@acozzette ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 134,
        "deletions": 166,
        "changed_files": 13,
        "created_at": "2022-04-26T17:41:05Z",
        "closed_at": "2022-04-26T19:40:17Z",
        "merged_at": "2022-04-26T19:40:17Z",
        "body": "**Important:** this integration must be merged, not squashed!",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 13,
        "changed_files": 5,
        "created_at": "2022-04-26T17:17:00Z",
        "closed_at": "2022-04-26T18:38:32Z",
        "merged_at": "2022-04-26T18:38:32Z",
        "body": " Remove a bunch of clang-tidy warnings about missing use of `explicit' on single arg ctors.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-04-26T13:43:46Z",
        "closed_at": "2022-04-26T20:08:43Z",
        "merged_at": null,
        "body": "do not merge. Checking that this build breakage is detected",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2022-04-26T12:09:01Z",
        "closed_at": "2022-06-29T13:51:28Z",
        "merged_at": "2022-06-29T13:51:28Z",
        "body": "@logofile Also makes sure JDK17 checks are firing correctly. ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 37,
        "changed_files": 17,
        "created_at": "2022-04-26T02:52:07Z",
        "closed_at": "2022-04-26T16:27:15Z",
        "merged_at": "2022-04-26T16:27:15Z",
        "body": "These headers pull in STL headers without actually using anything from the STL.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 287,
        "deletions": 284,
        "changed_files": 13,
        "created_at": "2022-04-25T23:05:33Z",
        "closed_at": "2022-04-26T16:28:25Z",
        "merged_at": "2022-04-26T16:28:25Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2022-04-25T20:04:26Z",
        "closed_at": "2022-04-25T21:17:49Z",
        "merged_at": "2022-04-25T21:17:49Z",
        "body": "These were missed from #a52e5ad5bb60655c683a12072a6eb7bcb99391d2.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2022-04-25T17:52:44Z",
        "closed_at": "2022-04-25T19:09:37Z",
        "merged_at": "2022-04-25T19:09:37Z",
        "body": "Remove some unnecessary includes of wire_format headers.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-04-25T16:33:28Z",
        "closed_at": "2022-04-25T17:38:35Z",
        "merged_at": "2022-04-25T17:38:35Z",
        "body": "@perezd ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-04-25T16:22:09Z",
        "closed_at": "2022-04-26T11:18:51Z",
        "merged_at": "2022-04-26T11:18:51Z",
        "body": "@pzd",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 43,
        "deletions": 0,
        "changed_files": 4,
        "created_at": "2022-04-25T11:20:23Z",
        "closed_at": "2022-04-25T20:49:58Z",
        "merged_at": "2022-04-25T20:49:58Z",
        "body": "@acozzette ",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-04-25T06:55:05Z",
        "closed_at": "2022-05-16T12:45:49Z",
        "merged_at": null,
        "body": null,
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-04-22T21:22:11Z",
        "closed_at": "2022-04-25T10:54:47Z",
        "merged_at": null,
        "body": "do not merge",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 42,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2022-04-22T10:56:55Z",
        "closed_at": "2022-04-22T21:06:11Z",
        "merged_at": "2022-04-22T21:06:11Z",
        "body": "@acozzette Please consider whether this is the correct Dockerfile for this job. For JDK17 (coming up soon) I will need to either modify this one or add a new one that includes OpenJDK 17. \r\n\r\nAlso, I'm assuming we put this in Github first and then add the configs in piper. ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 17,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-04-22T05:16:55Z",
        "closed_at": "2022-04-22T06:45:31Z",
        "merged_at": "2022-04-22T06:45:31Z",
        "body": "**Important:** this integration must be merged, not squashed!",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 925,
        "deletions": 76,
        "changed_files": 27,
        "created_at": "2022-04-22T02:54:20Z",
        "closed_at": "2022-04-22T23:58:16Z",
        "merged_at": "2022-04-22T23:58:16Z",
        "body": "This change adds `rules_pkg`-based targets that will produce source distribution archives, similar to `make dist`.\r\n\r\nThese rules produce nearly the same outputs as `make dist`. However, there are some differences and caveats:\r\n1. The outputs do not contain vendored googletest sources.\r\n2. You have to run `autogen.sh` before `blaze build pkg:all`. This produces several autotools-related files directly into the source tree.\r\n3. The output .zip files do not have a directory prefix like `protobuf-3.20.1-rc-1` (this will be addressed after bazelbuild/rules_pkg#577; the tar files do have this prefix, though.)\r\n4. One file is missing from the archives, which is produced during the `make` build: benchmarks/gogo/cpp_no_group/cpp_benchmark.cc\r\n5. In several places, I have explicitly excluded some files that are not in the autotools distribution outputs. I think most of those files should probably be included, but for now, I'm aiming for parity with `make dist`. These are marked with comments, so it should be easy to clean them up later.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 78,
        "deletions": 63,
        "changed_files": 27,
        "created_at": "2022-04-22T02:46:23Z",
        "closed_at": "2022-04-22T19:36:12Z",
        "merged_at": "2022-04-22T19:36:12Z",
        "body": "@JasonLunn please take a close look at the JRuby stuff, there were some merge conflicts that I mostly resolved in favor of main (it looks like there were some formatting fixes perhaps?).",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 19,
        "changed_files": 2,
        "created_at": "2022-04-21T23:40:35Z",
        "closed_at": "2022-04-22T01:00:40Z",
        "merged_at": "2022-04-22T01:00:40Z",
        "body": "Previously it was releasing content from main/master, not the\r\nrelease branch!\r\n\r\nI fixed this by not checking out a separate copy of protobuf.\r\nAlso updated the composer.json so we don't need to rewrite it with\r\nsed.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 97,
        "deletions": 45,
        "changed_files": 17,
        "created_at": "2022-04-21T21:28:42Z",
        "closed_at": "2022-04-22T00:55:55Z",
        "merged_at": "2022-04-22T00:55:55Z",
        "body": "**Important:** this integration must be merged, not squashed",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 3,
        "changed_files": 5,
        "created_at": "2022-04-21T15:32:30Z",
        "closed_at": "2022-10-03T21:27:32Z",
        "merged_at": null,
        "body": "Fixes https://github.com/protocolbuffers/protobuf/issues/9825.",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 3,
        "changed_files": 5,
        "created_at": "2022-04-21T15:30:53Z",
        "closed_at": "2022-04-21T22:20:26Z",
        "merged_at": null,
        "body": "Fixes https://github.com/protocolbuffers/protobuf/issues/9825.",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 3,
        "changed_files": 5,
        "created_at": "2022-04-21T15:30:35Z",
        "closed_at": "2022-04-21T22:20:52Z",
        "merged_at": null,
        "body": "Fixes https://github.com/protocolbuffers/protobuf/issues/9825.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 19,
        "deletions": 19,
        "changed_files": 4,
        "created_at": "2022-04-20T23:09:32Z",
        "closed_at": "2022-04-27T17:40:01Z",
        "merged_at": "2022-04-27T17:40:01Z",
        "body": "This commit updates a few of our CI scripts to build protoc using Bazel instead of autotools. I also updated the Rake build config to look for protoc under bazel-bin/ so that it will preferentially use a Bazel-built protoc binary. The goal is to start chipping away at our use of autotools in preparation for eventually dropping autotools support.\r\n\r\nI realized that the Python build also relies on autotools to build libprotobuf.a and libprotobuf-lite.a, so I updated the Mac build script to use Bazel for these as well. Python-UPB will soon make this irrelevant, though.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2022-04-20T22:41:28Z",
        "closed_at": "2022-04-21T01:38:43Z",
        "merged_at": "2022-04-21T01:38:43Z",
        "body": "Tried to capture most of the context in the commit messages, so I'll just paste them here:\r\n\r\n> [Avoid exporting build tree targets to installation directory](https://github.com/protocolbuffers/protobuf/commit/da040de1eb646cfec2b41ba239b5f29bb808b041)\r\n`export(TARGETS ...)` is meant to allow for build trees to be found\r\nfrom other projects, however, writing the file to an installation\r\ndirectory causes buildtree paths to be hardcoded in the installed\r\nprotobuf-targets.cmake\r\n\r\n> [Install protobuf-targets.cmake from target, not build tree](https://github.com/protocolbuffers/protobuf/commit/66ca89b1c3745ecafb7649f19061481f6d4ed2b9)\r\nThis allows for installation prefixes to match the intended\r\ninstallation directories, instead of being copied from\r\nthe build tree.\r\n\r\nFixes: #9809\r\n\r\nTL;DR:\r\n`export(TARGETS ...)` isn't meant to be used for installation, only local development. We should be using `install(EXPORT ...)` for providing relocatable target locations.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-04-20T21:34:31Z",
        "closed_at": "2022-04-25T15:01:25Z",
        "merged_at": null,
        "body": "fixes https://github.com/protocolbuffers/protobuf/issues/9746\r\n\r\nAlso done in https://github.com/protocolbuffers/protobuf/pull/9819 for the `3.20.x` branch\r\n\r\n- updates the `composer.json` in the root to use a minimum of PHP 7.0, which is the one copied over by `php/release.sh`\r\n- moves this file into `php/composer.json.dist` to avoid confusion\r\n\r\nNOTE: we are keeping two copies of composer.json because the scripts in our main copy will not work in the https://github.com/protocolbuffers/protobuf-php repo.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2022-04-20T20:05:37Z",
        "closed_at": "2022-04-20T21:32:52Z",
        "merged_at": "2022-04-20T21:32:52Z",
        "body": "See https://github.com/protocolbuffers/protobuf/issues/9804 for details.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 452,
        "changed_files": 19,
        "created_at": "2022-04-20T18:44:37Z",
        "closed_at": "2022-04-22T10:22:24Z",
        "merged_at": "2022-04-22T10:22:24Z",
        "body": "@acozzette I'm removing configs that have already been removed from google3/devtools/kokoro/config/prod/protobuf/github/master/ubuntu/ e.g. in cl/403463345\r\nI noticed this when I realized some weren't running, but I do need to double check that none of these are running. ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 59,
        "deletions": 14,
        "changed_files": 5,
        "created_at": "2022-04-20T16:56:30Z",
        "closed_at": "2022-04-25T22:00:57Z",
        "merged_at": "2022-04-25T22:00:57Z",
        "body": "This allows for building the upb Python module from the protobuf repo:\r\n\r\n```\r\n$ bazel build @upb//python:_message\r\n```\r\n\r\nA couple of changes in this PR are not strictly necessary for building `_module`, but are to support running of the Python tests. These tests do not fully work yet, but these changes will allow the upb repo to remove some of its patches that it was applying on top of the protobuf repo.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-04-20T12:41:58Z",
        "closed_at": "2022-04-25T10:55:11Z",
        "merged_at": null,
        "body": "not for merging",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2022-04-18T17:55:28Z",
        "closed_at": "2022-04-18T19:22:23Z",
        "merged_at": "2022-04-18T19:22:23Z",
        "body": "@fowles @acozzette ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-04-18T17:47:38Z",
        "closed_at": "2022-04-18T19:54:42Z",
        "merged_at": "2022-04-18T19:54:42Z",
        "body": "@acozzette ",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1283,
        "deletions": 1315,
        "changed_files": 104,
        "created_at": "2022-04-18T17:30:43Z",
        "closed_at": "2022-08-19T19:49:51Z",
        "merged_at": null,
        "body": "Note this is for the Protobuf library itself, not related to generated code. Large but shallow changes:\r\n- Added Directory.Build.props with C# 10 targeted and nullable enabled across all projects.\r\n- Updated C# README to note already-existing dependency on VS2022 and .NET 6.\r\n- Added nullable annotations across all C# code, drawing down to zero warnings/issues.\r\n- Made use of a few newer C# features like pattern matching while fixing nullable issues. Wider use of other C# features in a few cases but mostly deferred to later PR(s).\r\n\r\nValidations:\r\n- Unit tests passing including null param exceptions.\r\n- Manually verified existing calls to null param check utility code (ProtoPreconditions.CheckNotNull*) line up with non-null annotations.\r\n- Dropped main assembly into a private codebase with several gRPC contracts, generated protobuf code, and nullable issues set to error. Verified nullable issues match expected results, i.e. cause no unexpected errors.",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 44,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-04-18T15:13:51Z",
        "closed_at": "2022-04-26T16:43:54Z",
        "merged_at": "2022-04-26T16:43:54Z",
        "body": "- Run for all Apple configurations/platforms.\r\n- Limit the action to only run when the ObjC source change.\r\n- Document why the CocoaPods doesn't run the tests during the validation.\r\n\r\nThe kokoro objectivec_cocoapods_integration configuration can likely be retired\r\nby retiring this.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 51,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2022-04-18T15:00:34Z",
        "closed_at": "2022-04-19T14:46:01Z",
        "merged_at": "2022-04-19T14:46:01Z",
        "body": "Adds support for negative start or end and exclusive ends.\r\n\r\nIncludes regression tests contributed mostly by @lucthev. Fixes #9751.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 87,
        "deletions": 7,
        "changed_files": 16,
        "created_at": "2022-04-15T20:43:28Z",
        "closed_at": "2022-04-18T02:28:01Z",
        "merged_at": "2022-04-18T02:28:01Z",
        "body": "This is the most recent Abseil LTS branch, from November 2021. We do not yet use Abseil for anything, but this change will make it possible to start using it in CMake when we're ready.  This PR was tested by confirming that using absl::string_view from protobuf::Message doesn't break anything (under CMake builds only).",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-04-15T09:42:59Z",
        "closed_at": "2022-04-15T18:25:17Z",
        "merged_at": "2022-04-15T18:25:17Z",
        "body": "This trivial change hints compiler to inline the utf8 helpers and\r\ngenerate code with better performance.\r\n\r\nTested on skylake, with clang-12 and gcc-9.3. Observed about 10%\r\nimprovement from `google_message1_proto3_serialize` benchmark,\r\nwith default ./configure parameters. Similar improvement on arm.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 894,
        "deletions": 232,
        "changed_files": 73,
        "created_at": "2022-04-15T00:40:18Z",
        "closed_at": "2022-04-15T18:30:44Z",
        "merged_at": "2022-04-15T18:30:44Z",
        "body": "**Important:** this integration must be merged, not squashed",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 56,
        "deletions": 0,
        "changed_files": 10,
        "created_at": "2022-04-14T19:44:43Z",
        "closed_at": "2022-04-15T20:38:47Z",
        "merged_at": null,
        "body": "Testing CMake Abseil dependency",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-04-14T16:11:04Z",
        "closed_at": "2022-04-14T17:59:41Z",
        "merged_at": "2022-04-14T17:59:41Z",
        "body": "Add disallowment of setting numpy singleton arrays and multi-dimensional arrays to fields/repeated fields to CHANGES.txt, which was missed in a previous git sync and 3.20.0 release (release notes have been updated). This is a minor breaking change and should be documented. (#9782)",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 108,
        "deletions": 108,
        "changed_files": 29,
        "created_at": "2022-04-13T21:12:11Z",
        "closed_at": "2022-04-18T23:07:02Z",
        "merged_at": "2022-04-18T23:07:02Z",
        "body": "The current way we document `RepeatedField` parameters is [ambiguous in PHPDoc](https://phpstan.org/writing-php-code/phpdoc-types#iterables). For `Collection|Foo[]`, two possible paths are taken:\r\n\r\n 1. If `Collection` implements `Traversable` (which `RepeatedField` does), `Collection|Foo[]` is interpreted as a `Collection` object that iterates over `Foo`. The array part isn\u2019t applied. This is what is currently happening for Protobuf.\r\n 2. If Collection|Foo[] means \u201cCollection or array\u201d (which is what we mean in our case) we need to disambiguate the type by using `Collection|array<Foo>` instead.\r\n\r\nThis PR replaces all instance of `ProtoClass[]|RepeatedField` with the less-ambiguous `array<ProtoClass>|RepeatedField`",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2022-04-13T17:19:57Z",
        "closed_at": "2022-04-18T23:14:56Z",
        "merged_at": "2022-04-18T23:14:56Z",
        "body": "I have found two issues with PHP protobuf's `RepeatedField` when using static analyzers:\r\n1. The PHPDoc says that the first argument to `offsetSet` is an `integer`, but this value can also be `null`, in the case when a `RepeatedField` is being appended to (e.g. `$repeatedField[] = $someRepeatedValue`). Without marking the first argument as optional, static analyzers think that instances of `RepeatedField` cannot be appended to.\r\n1. The PHPDoc says that `offsetSet` accepts `object` and `offsetGet` returns `object`. But `object` excludes primitive types in PHP such as `string` `int`, `bool`, and `array`. I believe it should accept primitives, and as a result, in certain circumstances the static analyzers are failing. I've tested this with using the accepted PHP type [`mixed`](https://www.php.net/manual/en/language.types.declarations.php), which represents any `object` or primitive. The keyword only exists in PHP 8.0, but this is acceptable documentation for any version of PHP.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 25,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2022-04-12T23:34:46Z",
        "closed_at": "2022-04-26T16:44:40Z",
        "merged_at": "2022-04-26T16:44:40Z",
        "body": "Changes the `string` name associated with an enum that uses a reserved word to be the enum name _without_ the `PB` prefix that the constant gets. For example the enum value `CLASS` would be generated as `const PBCLASS` and the `string` name returned by the `name()` helper for it will be `'CLASS'` instead of `'PBCLASS'`.\r\n\r\nThe `value` helper will accept either `'CLASS'` or `'PBCLASS'` because it will attempt to prefix the string with `'PB'` before looking it up again. This \"extra check\" logic will only be generated for those enums that use a reserved word as a value.\r\n\r\nThis is a **breaking change** to generated PHP code that depended on the value returned by `name()` being prefixed with `PB`. This is a rare use case. Furthermore, the `name()` function exists for two primary reasons:\r\n\r\n1. The REST API accepts the string names, not the constants\r\n2. To make the enum values more easily human-readable in debugging\r\n\r\nFor the 1st case, the `\"PB\"` prefix would throw an error in the REST API, and for the 2nd case, there is no reliant code on the prefix behavior. Worth noting, `serializeToJsonString` **does not** use the `name()` function to serialize the enum into the JSON blob. \r\n\r\nThank you @bshaffer for the concise words describing the scenarios in question.\r\n\r\nFixes #9763 ",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 76,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2022-04-12T07:05:45Z",
        "closed_at": "2022-05-16T18:08:20Z",
        "merged_at": null,
        "body": "This PR fixes JS Generator when field name is camel case\r\nprotocolbuffers/protobuf-javascript#17\r\n\r\nexample\r\n\r\n```proto\r\nmessage Message {\r\n    int32 someCamelCaseMessage = 1;\r\n}\r\n```",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 7,
        "changed_files": 7,
        "created_at": "2022-04-11T05:50:51Z",
        "closed_at": "2022-04-26T17:29:01Z",
        "merged_at": "2022-04-26T17:29:01Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-04-08T07:53:04Z",
        "closed_at": "2022-04-18T23:12:20Z",
        "merged_at": "2022-04-18T23:12:20Z",
        "body": "This PR fixes the `missing LLVM builtin: llvm.x86.ssse3.pshuf.b.128` in https://github.com/oracle/truffleruby/issues/2640 by forcing it to compile with old `utf8_naive` when [the macro `TRUFFLERUBY`](https://github.com/oracle/truffleruby/blob/master/doc/user/compatibility.md#identification) is defined.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 22,
        "deletions": 13,
        "changed_files": 10,
        "created_at": "2022-04-08T06:09:40Z",
        "closed_at": "2022-04-26T16:49:38Z",
        "merged_at": null,
        "body": "This avoids the warning:\r\n\"ld: direct access in function ... to global weak symbol\"\r\nwhen building with Apples clang\r\n\r\nFixes #8958",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-04-08T05:41:04Z",
        "closed_at": "2022-04-08T16:11:27Z",
        "merged_at": "2022-04-08T16:11:27Z",
        "body": "unistack-org/micro (microservices framework) uses protoc-gen-go-micro generator that has extension support for additional framework related options.\r\n\r\nIt is currently not using any registered extension number, so i want to stabilise this and i think that this is a good thing.\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 168,
        "deletions": 91,
        "changed_files": 8,
        "created_at": "2022-04-07T23:35:39Z",
        "closed_at": "2022-05-17T17:50:20Z",
        "merged_at": null,
        "body": "Add version.json to track per-language major versions per \"version.json evolution\" design and modify update_version.py to use version.json as the source-of-truth to update files with corresponding version numbers.\r\n\r\nNote update_version.py does not update version.json itself, but only reads from it and performs some invariant checks. Our release script will contain the primary logic for checking/updating version.json based on the step in the release process (i.e. new branch, rc, final release) and the current git branch.\r\n\r\nThis change also sets 21-dev as the protoc version since this is the next main version following the creation of branch 20.x (and release of 20.0). This indicates 21.x is the next release branch which micro version 21.0. update_version.py was used to generate corresponding version updates. \r\n\r\nprotobuf_version.bzl was also updated to introduce a distinction between PROTOBUF_JAVA_VERSION and PROTOC_VERSION which are no longer the same.\r\n\r\nNote this PR incorporates previous PR by Adam: https://github.com/protocolbuffers/protobuf/pull/9671",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 26368,
        "deletions": 158,
        "changed_files": 64,
        "created_at": "2022-04-07T20:42:20Z",
        "closed_at": "2022-04-07T23:35:17Z",
        "merged_at": null,
        "body": "Add version.json to track per-language major versions per \"version.json evolution\" design and modify update_version.py to use version.json as the source-of-truth to update files with corresponding version numbers.\r\n\r\nNote update_version.py does not update version.json itself, but only reads from it and performs some invariant checks. Our release script will contain the primary logic for checking/updating version.json based on the step in the release process (i.e. new branch, rc, final release) and the current git branch.\r\n\r\nThis change also sets 21-dev as the protoc version since this is the next main version following the creation of branch 20.x (and release of 20.0). This indicates 21.x is the next release branch which micro version 21.0. update_version.py was used to generate corresponding version updates. \r\n\r\nprotobuf_version.bzl was also updated to introduce a distinction between PROTOBUF_JAVA_VERSION and PROTOC_VERSION which are no longer the same.\r\n\r\nNote this PR incorporates previous PR by Adam: https://github.com/protocolbuffers/protobuf/pull/9671",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-04-07T20:14:38Z",
        "closed_at": "2022-04-07T22:10:10Z",
        "merged_at": "2022-04-07T22:10:10Z",
        "body": "@mrkruskal-google",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 70,
        "deletions": 47,
        "changed_files": 38,
        "created_at": "2022-04-07T20:02:21Z",
        "closed_at": "2022-04-07T22:33:58Z",
        "merged_at": "2022-04-07T22:33:58Z",
        "body": "Changes for v3.20.1-rc1",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-04-07T18:51:14Z",
        "closed_at": "2022-04-08T18:43:11Z",
        "merged_at": "2022-04-08T18:43:11Z",
        "body": "@mkruskal-google",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-04-07T13:33:05Z",
        "closed_at": "2022-04-08T16:08:38Z",
        "merged_at": "2022-04-08T16:08:38Z",
        "body": "google/gnostic's protoc-gen-openapi generator has extension support for additional openapi options.\r\n\r\nIt is [currently using `1042`](https://github.com/google/gnostic/blob/master/openapiv3/annotations.proto) which is registered with grpc-gateway's protoc-gen-openapiv2 extension which probably isn't a good thing.\r\n\r\nSee [here](https://github.com/google/gnostic/blob/master/cmd/protoc-gen-openapi/examples/tests/openapiv3annotations/message.proto) for an example of the extenstion in action.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-04-07T11:42:54Z",
        "closed_at": "2022-04-07T14:02:57Z",
        "merged_at": "2022-04-07T14:02:57Z",
        "body": "@jtattermusch @mkruskal-google",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-04-06T23:15:44Z",
        "closed_at": "2022-04-08T16:12:06Z",
        "merged_at": "2022-04-08T16:12:05Z",
        "body": "This is the most recent Abseil LTS branch, from November 2021. We do not\r\nyet use Abseil for anything, but this change will make it possible to\r\nstart using it in Bazel when we're ready.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 27,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-04-06T17:46:02Z",
        "closed_at": "2022-04-06T23:33:25Z",
        "merged_at": "2022-04-06T23:33:25Z",
        "body": "Add a toolchain for k8 that is the same as x86-64 to prevent some compiler errors.\r\nAdd a feature to support dynamic toolchains for linux/macos.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-04-05T17:23:51Z",
        "closed_at": "2022-04-18T16:47:56Z",
        "merged_at": "2022-04-18T16:47:56Z",
        "body": "@acozzette ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-04-05T15:13:33Z",
        "closed_at": "2022-04-18T17:52:13Z",
        "merged_at": "2022-04-18T17:52:13Z",
        "body": "@acozzette We might want to add this to the release process since it seems this hasn't been updated for quite a while.",
        "comments": 15
    },
    {
        "merged": false,
        "additions": 65,
        "deletions": 12,
        "changed_files": 2,
        "created_at": "2022-04-05T14:48:13Z",
        "closed_at": "2022-04-05T15:58:15Z",
        "merged_at": null,
        "body": "Related: #7273 (closed but not fixed / discussed).\r\n\r\nSince 3.7.0, `JsonFormat.printer()` would only use the default `Gson` instance, which would escape characters like `=`. Not all use cases of `JsonFormat.printer()` is related to HTML. An option to not escape these characters would be great.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-04-05T14:47:56Z",
        "closed_at": "2022-04-05T16:39:24Z",
        "merged_at": "2022-04-05T16:39:24Z",
        "body": "GetObject macro is defined in wingdi.h (included transitively in windows.h):\r\n\r\n```#ifdef UNICODE\r\n#define GetObject  GetObjectW\r\n#else\r\n#define GetObject  GetObjectA\r\n#endif\r\n```\r\n\r\nThis can cause unexpected problems when compiling \"GetObject\" contains proto for windows.\r\n\r\nAlso \"GetObject\" looks like common method name for grpc. [Here](https://github.com/grpc/grpc/pull/29311) I want to wrap grpc-generated code with port_def/port_undef\r\n\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2022-04-05T14:46:19Z",
        "closed_at": "2022-04-05T16:40:03Z",
        "merged_at": "2022-04-05T16:40:03Z",
        "body": "This will address the following compiler warning:\r\n\r\n```\r\nsrc/google/protobuf/compiler/python/python_generator.cc:95:13: warning: unused function 'HasTopLevelEnums' [-Wunused-function]\r\n```",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2022-04-04T23:30:22Z",
        "closed_at": "2022-04-06T18:35:11Z",
        "merged_at": "2022-04-06T18:35:11Z",
        "body": "This is an attempt at fixing #9731.\r\n\r\nThis code was introduced Jan 28th of this year in this PR:\r\nhttps://github.com/protocolbuffers/protobuf/pull/9438\r\n\r\nHowever, there's generated code (via a genrule) may be included in a protoc invocation without a proper `source_dir`.\r\n\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-04-04T21:05:57Z",
        "closed_at": "2022-04-04T23:40:02Z",
        "merged_at": null,
        "body": "This PR solves https://github.com/protocolbuffers/protobuf/issues/9731.\r\n\r\nI suspect there may be a better manner to restructure the code. I am open to feedback. Thank you.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 44,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-04-03T19:41:01Z",
        "closed_at": "2022-04-05T19:05:33Z",
        "merged_at": "2022-04-05T19:05:32Z",
        "body": "We've recently had a couple of issues that prevented the PHP extension from being installed with pecl (see #9654 and #9724).\r\n\r\nSo, what about adding a GitHub Action that checks if the PHP extension can be built successfully?\r\n\r\nIn this PR I first add that test (which will fail), then I'll add the required changes to make it pass\r\n\r\nFix #9724",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 28,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2022-04-01T21:12:20Z",
        "closed_at": "2022-04-06T21:37:23Z",
        "merged_at": "2022-04-06T21:37:23Z",
        "body": "`RepeatedField#last(n)` has an off-by-one error resulting in one more element being returned than requested.\r\n\r\nWhile I was at it, I also fixed the following inconsistencies with `Array`:\r\n\r\n- `last(n)` where n > size should return all elements; the current implementation wraps around such that e.g. `last(size + 2) == last(2)`\r\n- `last(n)` where n < 0 should raise an `ArgumentError`\r\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 382,
        "deletions": 37,
        "changed_files": 5,
        "created_at": "2022-03-31T20:05:14Z",
        "closed_at": "2022-04-02T20:38:44Z",
        "merged_at": "2022-04-02T20:38:44Z",
        "body": "Cherry pick JRuby changes that fix NPE during encoding (#9507) and implements `respond_to?` (#9202) into 3.20.x.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-03-31T09:13:42Z",
        "closed_at": "2022-03-31T14:45:15Z",
        "merged_at": "2022-03-31T14:45:15Z",
        "body": null,
        "comments": 2
    },
    {
        "merged": true,
        "additions": 125,
        "deletions": 33,
        "changed_files": 4,
        "created_at": "2022-03-30T21:06:10Z",
        "closed_at": "2022-04-01T20:49:14Z",
        "merged_at": "2022-04-01T20:49:14Z",
        "body": "This enables googletest XML output on the macos-next builders, and adds logic to collect the results.\r\n\r\nThe log collection logic is slightly complex, but it should be reusable in other contexts. The idea is to capture stdout/stderr for build steps along with googletest XML reports into a temporary directory, then stage those into paths expected for artifacts.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-03-30T11:11:15Z",
        "closed_at": "2022-03-31T10:53:49Z",
        "merged_at": null,
        "body": "libpthread is not used by the code, yet CMake continued to look for it.\r\n\r\n@acozzette , as discussed in https://github.com/protocolbuffers/protobuf/pull/9100#issuecomment-1080533383",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 45,
        "deletions": 45,
        "changed_files": 2,
        "created_at": "2022-03-30T08:57:55Z",
        "closed_at": "2022-03-30T20:52:15Z",
        "merged_at": "2022-03-30T20:52:15Z",
        "body": "@acozzette this time with properly pinned dependencies",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 40,
        "deletions": 21,
        "changed_files": 3,
        "created_at": "2022-03-30T04:01:17Z",
        "closed_at": "2022-03-30T20:09:49Z",
        "merged_at": "2022-03-30T20:09:49Z",
        "body": "This enables build logic on the \"macos-next\" flavor of Kokoro tests.\r\n\r\nThe current runners use Big Sur with Xcode 13.2.1. This build uses cmake to configure and drive the build through Xcode. Tests are run under ctest.\r\n\r\nI do plan to make a couple more changes, but they will take some more time and setup, so I'm leaving the \"macos\" builder alone for now.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-03-30T03:57:25Z",
        "closed_at": "2022-03-30T20:44:42Z",
        "merged_at": "2022-03-30T20:44:42Z",
        "body": "The new option will allow us to generate test XML output.\r\n\r\nCTest can discover tests from googletest, but it generates one file\r\nper case. We have several thousand cases, so one file each would be\r\nfar from optimal. The approach in this change will generate one file\r\nper test (executable).",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 56,
        "deletions": 21,
        "changed_files": 2,
        "created_at": "2022-03-30T01:56:09Z",
        "closed_at": "2022-07-13T19:52:41Z",
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 54,
        "deletions": 21,
        "changed_files": 2,
        "created_at": "2022-03-30T01:37:53Z",
        "closed_at": "2022-07-13T19:52:46Z",
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 18,
        "deletions": 18,
        "changed_files": 2,
        "created_at": "2022-03-29T23:44:29Z",
        "closed_at": "2022-03-30T08:58:13Z",
        "merged_at": null,
        "body": "@acozzette #fixes 9700",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-03-29T23:28:29Z",
        "closed_at": "2022-07-13T19:52:05Z",
        "merged_at": null,
        "body": "@acozzette",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 163,
        "deletions": 6,
        "changed_files": 3,
        "created_at": "2022-03-29T21:37:55Z",
        "closed_at": "2022-03-30T02:36:33Z",
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2022-03-29T17:28:58Z",
        "closed_at": "2022-03-29T19:50:40Z",
        "merged_at": "2022-03-29T19:50:40Z",
        "body": "This reverts commit 11de748d66a0b358b01c2ca1a03b6455b33f808b.\r\n\r\nFixes #9688.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 47,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-03-29T09:41:42Z",
        "closed_at": "2022-05-13T15:09:12Z",
        "merged_at": "2022-05-13T15:09:12Z",
        "body": "We already have the TypeRegistry abstraction for JSON parsing, so it lends itself well to this.\r\n\r\nNote that this is much more useful than it would have been before C# gained pattern matching support: it's easy to imagine a switch statement/expression using pattern matching with the result of this, with cases for a set of known message types, for example.",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 66,
        "deletions": 0,
        "changed_files": 4,
        "created_at": "2022-03-29T01:02:50Z",
        "closed_at": "2022-03-29T21:32:11Z",
        "merged_at": "2022-03-29T21:32:11Z",
        "body": "This build will be used to troubleshoot building on a newer macOS\r\nimage. Once it is stable, this config will replace the \"macos\" build.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-03-28T23:27:49Z",
        "closed_at": "2022-03-29T01:00:10Z",
        "merged_at": "2022-03-29T01:00:10Z",
        "body": "Kokoro tests were broken by https://github.com/protocolbuffers/protobuf/commit/10df21ed5e06df20385f1ee8ca01ecd22e0e4087",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 19,
        "changed_files": 1,
        "created_at": "2022-03-28T23:02:19Z",
        "closed_at": "2022-03-29T00:43:49Z",
        "merged_at": "2022-03-29T00:43:49Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3433,
        "deletions": 3264,
        "changed_files": 14,
        "created_at": "2022-03-28T23:01:17Z",
        "closed_at": "2022-03-29T00:44:28Z",
        "merged_at": "2022-03-29T00:44:28Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2022-03-28T22:29:45Z",
        "closed_at": "2022-03-29T18:48:16Z",
        "merged_at": "2022-03-29T18:48:16Z",
        "body": "This change adds separate libraries for common test utilities and test proto definitions, which are shared by different test targets.\r\n\r\nWithout this change, cmake fails when generating Xcode files with the error:\r\n\r\n```\r\nCMake Error in CMakeLists.txt:\r\n  The custom command generating\r\n\r\n    .../protobuf/src/google/protobuf/unittest_lite.pb.cc\r\n\r\n  is attached to multiple targets:\r\n\r\n    tests\r\n    lite-test\r\n    lite-arena-test\r\n\r\n  but none of these is a common dependency of the other(s).  This is not\r\n  allowed by the Xcode \"new build system\".\r\n```",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 11702,
        "deletions": 11695,
        "changed_files": 44,
        "created_at": "2022-03-28T10:42:33Z",
        "closed_at": "2022-03-29T15:38:31Z",
        "merged_at": "2022-03-29T15:38:31Z",
        "body": null,
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2629,
        "deletions": 220,
        "changed_files": 26,
        "created_at": "2022-03-27T20:28:27Z",
        "closed_at": "2022-10-14T08:25:13Z",
        "merged_at": null,
        "body": "Fixes #9682\r\n\r\nThis is a draft PR to evaluate the changes that would be required to support generating struct for a message in C#.\r\n\r\nThe PR is adding:\r\n\r\n- A new field in a Message Options in descriptor.proto\r\n ```proto\r\n  // Generates the message as a struct\r\n  optional bool csharp_generate_struct = 10 [default = false];\r\n ```\r\n- Modifies `csharp_message.cc` and `csharp_message_field.cc` to handle the serialization by ref/in.\r\n- Add the C# runtime infrastructure to handle serializing/deserializing these structs by ref/in\r\n\r\nMissing work:\r\n\r\n- [x] ~Try to find a way if repeatable fields with a struct couldn't be further optimized (passing by value for now)~\r\n  - Probably not possible without implementing a different FieldCodec\r\n- [x] Add tests and benchmarks\r\n- [ ] Handle properly `optional` for such field\r\n- [ ] Handle `oneof`\r\n- [ ] Run protoc.exe on descriptor code for all supported language (only cpp and C# for this draft)\r\n- [ ] Add documentation about this C# feature\r\n\r\nI might have forgotten other corner cases.\r\n\r\ncc: @jskeet",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 344,
        "deletions": 31,
        "changed_files": 5,
        "created_at": "2022-03-25T18:58:54Z",
        "closed_at": "2022-03-28T22:43:53Z",
        "merged_at": "2022-03-28T22:43:53Z",
        "body": "All synthetic method names implemented by `method_missing` return true. Add regression tests.\r\n\r\n* Fix null pointer exceptions and class cast exceptions in `method_missing` exposed by new unit tests.\r\n* Fix bug where multiple calls to `clear_` on a oneof field would throw an exception.\r\n* Align behavior with CRuby implementation by throwing a `RuntimeError` rather than a `NoMethodError` when attempting to assign to a oneof.\r\n\r\nCode cleanup: remove test code that was skipping several unit tests only on JRuby.\r\n\r\nFixes issue https://github.com/protocolbuffers/protobuf/issues/9202.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 19,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-03-25T05:59:27Z",
        "closed_at": "2022-03-26T06:54:27Z",
        "merged_at": "2022-03-26T06:54:27Z",
        "body": "Nicer experience for e.g. VS Code\r\n\r\nSplit from https://github.com/protocolbuffers/protobuf/pull/9666",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 8,
        "changed_files": 3,
        "created_at": "2022-03-25T05:59:11Z",
        "closed_at": "2022-03-25T14:14:16Z",
        "merged_at": "2022-03-25T14:14:16Z",
        "body": "* .NET 5 reaches end-of-support in May, so update the Benchmarks project to `net6.0`\r\n* Update NuGet packages to latest.\r\n\r\n\r\nSplit from https://github.com/protocolbuffers/protobuf/pull/9666",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2022-03-24T17:18:50Z",
        "closed_at": "2022-03-24T18:51:34Z",
        "merged_at": "2022-03-24T18:51:34Z",
        "body": "Fixes: https://github.com/protocolbuffers/protobuf/issues/9654",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 88,
        "deletions": 85,
        "changed_files": 8,
        "created_at": "2022-03-24T16:48:03Z",
        "closed_at": "2022-04-05T16:56:00Z",
        "merged_at": null,
        "body": "This change introduces versions.json to track a separate version for\r\neach language and makes update_version.py read from this file to\r\ndetermine what version it should set for each language.\r\n\r\nI also had to update protobuf_version.bzl to introduce a distinction\r\nbetween PROTOBUF_JAVA_VERSION and PROTOC_VERSION, since those versions\r\nwill no longer be the same.\r\n\r\nIdeally the update_version.py script should update versions.json itself,\r\nbut for now I just set it up to read from that file only. It assumes\r\nthat the first set of versions in the list is the most recent one, and\r\nupdates all the affected files accordingly. Whenever we do a new\r\nrelease, we will need to manually update versions.json so that we can\r\nspecify which major versions we want to increment.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 695,
        "deletions": 703,
        "changed_files": 126,
        "created_at": "2022-03-24T00:40:33Z",
        "closed_at": "2022-03-24T17:25:14Z",
        "merged_at": "2022-03-24T17:25:14Z",
        "body": "**Important:** this integration must be merged, not squashed",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 6,
        "changed_files": 3,
        "created_at": "2022-03-23T07:24:31Z",
        "closed_at": "2022-10-13T20:43:07Z",
        "merged_at": null,
        "body": "* .NET 5 reaches end-of-support in May, so add a `net6.0` target to the main project in anticipation of a removal of the `net5.0` target in May.\r\n* Update `PrivateAssets` NuGet packages to latest.",
        "comments": 15
    },
    {
        "merged": true,
        "additions": 981,
        "deletions": 254,
        "changed_files": 44,
        "created_at": "2022-03-22T20:14:06Z",
        "closed_at": "2022-03-23T19:50:27Z",
        "merged_at": "2022-03-23T19:50:27Z",
        "body": "**Important:** this integration must be merged, not squashed!",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 38,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-03-22T17:15:30Z",
        "closed_at": "2022-06-29T13:51:56Z",
        "merged_at": null,
        "body": "@deannagarcia @Logofile \r\n\r\n#9620 ",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-03-22T12:32:41Z",
        "closed_at": "2022-03-22T21:54:53Z",
        "merged_at": "2022-03-22T21:54:53Z",
        "body": "4.13.2 is already the version we have in pom.xml",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 12,
        "changed_files": 1,
        "created_at": "2022-03-22T12:20:59Z",
        "closed_at": "2022-03-22T16:33:10Z",
        "merged_at": "2022-03-22T16:33:10Z",
        "body": "@haberman download_data.sh doesn't seem to exist any more and I can't find it in the git log",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 119,
        "deletions": 7,
        "changed_files": 15,
        "created_at": "2022-03-21T18:08:20Z",
        "closed_at": "2022-03-21T22:26:27Z",
        "merged_at": "2022-03-21T22:26:27Z",
        "body": "@acozzette do we need to update our release script to invoke the new scripts?",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 122,
        "deletions": 7,
        "changed_files": 7,
        "created_at": "2022-03-21T08:45:46Z",
        "closed_at": "2022-03-22T08:56:40Z",
        "merged_at": "2022-03-22T08:56:40Z",
        "body": "Fixes https://github.com/protocolbuffers/protobuf/issues/9626\r\n\r\n* Improves GetExtension support for unexpected extension values. The error message for getting an extension value with the wrong type is improved.\r\n* Adds GetExtension support for Extensions that get the value typed as a base type.\r\n\r\n@jskeet ",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 7760,
        "deletions": 6154,
        "changed_files": 112,
        "created_at": "2022-03-18T21:36:02Z",
        "closed_at": "2022-03-21T23:37:07Z",
        "merged_at": "2022-03-21T23:37:07Z",
        "body": "**Important:** this integration must be merged, not squashed",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2022-03-18T05:36:02Z",
        "closed_at": "2022-05-16T18:11:48Z",
        "merged_at": null,
        "body": "Since protocolbuffers/protobuf#8411 was stale, I incorporated the suggestions by @lukesandberg and @jkrems.\r\n\r\nThis fixes protocolbuffers/protobuf-javascript#97",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 25,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-03-18T03:00:46Z",
        "closed_at": "2022-03-23T14:14:18Z",
        "merged_at": "2022-03-23T14:14:18Z",
        "body": "Currently when using `descriptor_set_out` with `dependency_out` an invalid dependency manifest file is generated.\r\n\r\nThis is because the code path that generates descriptor sets seems to be entirely separate from the rest of the generators.\r\nThis change patches in the `descriptor_set_out` file path into the dependency file when it is used.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-03-18T01:37:31Z",
        "closed_at": "2022-03-19T15:46:51Z",
        "merged_at": "2022-03-19T15:46:51Z",
        "body": "Apply a registration for  `protoc-gen-fieldmask` extension with sequence 1142. By the way, it's using 1412 now.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-03-17T17:24:51Z",
        "closed_at": "2022-03-17T19:51:04Z",
        "merged_at": "2022-03-17T19:51:04Z",
        "body": null,
        "comments": 1
    },
    {
        "merged": true,
        "additions": 145,
        "deletions": 145,
        "changed_files": 12,
        "created_at": "2022-03-17T05:40:02Z",
        "closed_at": "2022-04-06T18:26:17Z",
        "merged_at": "2022-04-06T18:26:17Z",
        "body": "fixes: #9641 : removes all public visibility modifiers from kotlin protobuf code generation",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 37,
        "changed_files": 2,
        "created_at": "2022-03-16T21:12:48Z",
        "closed_at": "2022-03-17T15:28:25Z",
        "merged_at": "2022-03-17T15:28:25Z",
        "body": "Make a variety of cleanups to the bazel toolchain including:\r\n- Remove `cpp_flag` variable and instead always use `-lstdc++` \r\n- Remove `bit_flag` variable and instead set it based on CPU\r\n- Remove `toolchain_name` variable and instead use `target_full_name` as a unique identifier\r\n- Remove osx `extra_includes` since `/usr/include` should be included by default\r\n- Change all single quotes to double quotes to be consistent\r\n\r\nTested all toolchains in Docker.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-03-16T17:50:33Z",
        "closed_at": "2022-03-17T02:41:09Z",
        "merged_at": "2022-03-17T02:41:09Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 39,
        "deletions": 7,
        "changed_files": 2,
        "created_at": "2022-03-16T17:42:49Z",
        "closed_at": "2022-03-23T00:03:32Z",
        "merged_at": "2022-03-23T00:03:32Z",
        "body": "Fixes #9507 by:\r\n1. Eliminating the call to the `.toString()` on a possibly `null` object reference\r\n2. Reordering surrounding condition checks so that the the potentially null object reference is never retrieved in the first place.\r\n\r\nEither of the solutions would have been sufficient, but the combination of both is slightly more performant in the general case.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 594,
        "deletions": 21,
        "changed_files": 15,
        "created_at": "2022-03-16T12:37:49Z",
        "closed_at": "2022-03-30T15:33:01Z",
        "merged_at": "2022-03-30T15:33:00Z",
        "body": "Fixed #9605.\r\n\r\n(Review one commit at a time; the final commit is just generated.)",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 24,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2022-03-16T09:15:42Z",
        "closed_at": "2022-03-30T05:51:22Z",
        "merged_at": null,
        "body": "The extension still needs to be registered in the extension\r\nregistry, but you don't need to know the exact type of the value in\r\norder to access is.\r\n\r\nThis is a prototype for #9626.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 117,
        "deletions": 30,
        "changed_files": 10,
        "created_at": "2022-03-15T17:01:25Z",
        "closed_at": "2022-04-12T22:48:14Z",
        "merged_at": "2022-04-12T22:48:14Z",
        "body": "see https://github.com/protocolbuffers/protobuf/issues/9629",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 14,
        "changed_files": 2,
        "created_at": "2022-03-14T17:35:38Z",
        "closed_at": "2022-03-15T19:12:58Z",
        "merged_at": "2022-03-15T19:12:58Z",
        "body": "Removing the toolchain_dir variable and replacing usages of it to directly using the sysroot. This change required setting a sysroot for windows. \r\n\r\nUnfortunately, I wasn't able to remove the windows additional compiler flags because gcc defaults to using the non-posix libraries. In the future, we could look into how to change the gcc settings to automatically use the posix directory.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 54,
        "changed_files": 1,
        "created_at": "2022-03-11T15:18:25Z",
        "closed_at": "2022-05-10T20:36:48Z",
        "merged_at": "2022-05-10T20:36:48Z",
        "body": "See #9593\r\n\r\nRemove the generation of the legacy class files for nested messages. Leave the call to `class_alias` at the bottom of namespaced nested message classes alone for now.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 9,
        "changed_files": 3,
        "created_at": "2022-03-10T21:32:19Z",
        "closed_at": "2022-03-11T00:40:07Z",
        "merged_at": "2022-03-11T00:40:07Z",
        "body": null,
        "comments": 5
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 3786,
        "changed_files": 20,
        "created_at": "2022-03-10T19:05:22Z",
        "closed_at": "2022-04-26T16:52:47Z",
        "merged_at": null,
        "body": "Do any of these tests matter? Let's see...",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 21,
        "changed_files": 1,
        "created_at": "2022-03-09T23:36:44Z",
        "closed_at": "2022-03-10T18:26:19Z",
        "merged_at": "2022-03-10T18:26:19Z",
        "body": "We are moving to use manylinux toolchains in order to guarantee backwards compatibility to old linux distributions. This toolchain file moves us to use manylinux as the sysroot to find c++ header files. There were also modifications to the Docker image that allows us to remove the extra_compiler_flags for all linux architectures.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 164,
        "deletions": 96,
        "changed_files": 46,
        "created_at": "2022-03-08T20:28:12Z",
        "closed_at": "2022-03-08T22:38:23Z",
        "merged_at": "2022-03-08T22:38:23Z",
        "body": "The 3.20.x branch has a few important fixes on it, so let's merge it back to master. This will also unblock the work on #9603.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 935,
        "deletions": 919,
        "changed_files": 13,
        "created_at": "2022-03-08T18:42:37Z",
        "closed_at": "2022-03-09T22:55:56Z",
        "merged_at": "2022-03-09T22:55:56Z",
        "body": "cmake/CMakeLists.txt is kept for compatibility and it includes CMakeLists.txt.\r\n\r\nFixes: #9596",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 98,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2022-03-08T15:14:03Z",
        "closed_at": "2022-05-16T14:12:20Z",
        "merged_at": "2022-05-16T14:12:19Z",
        "body": "Closes #9283.",
        "comments": 26
    },
    {
        "merged": true,
        "additions": 26,
        "deletions": 29,
        "changed_files": 6,
        "created_at": "2022-03-08T13:54:22Z",
        "closed_at": "2022-03-08T22:35:48Z",
        "merged_at": "2022-03-08T22:35:48Z",
        "body": "protobuf extension creates a userland variable (zval) upon loading.\r\n\r\nThis is an unnecessary process and compromises userland compatibility.\r\n\r\n```shell\r\n# stdClass is initialized as the first element.\r\n$ php -r 'var_dump(new \\stdClass());'\r\nobject(stdClass)#1 (0) {\r\n}\r\n# but, stdClass is the second element\r\n$ php -dextension=modules/protobuf.so -r 'var_dump(new \\stdClass());'\r\nobject(stdClass)#2 (0) {\r\n}\r\n```\r\n\r\nSince this behavior does not seem to be effective at this time, i have changed the implementation and added a test.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 1796,
        "changed_files": 11,
        "created_at": "2022-03-08T12:34:08Z",
        "closed_at": "2022-03-14T17:57:03Z",
        "merged_at": null,
        "body": "testing to see if we need this in open source",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 27,
        "deletions": 15,
        "changed_files": 5,
        "created_at": "2022-03-07T23:56:50Z",
        "closed_at": "2022-03-08T01:03:50Z",
        "merged_at": "2022-03-08T01:03:50Z",
        "body": "(This pull-request is for branch `3.20.x`. I am assuming that all changes from branch `3.20.x` will be merged to `master` later.)",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 20,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-03-06T08:03:11Z",
        "closed_at": "2022-03-07T10:46:21Z",
        "merged_at": "2022-03-07T10:46:21Z",
        "body": "Currently, it is failing to parse messages with an extension whose field number is large (> 0x10000000), e.g. https://github.com/google/mediapipe/blob/e6c19885c6d3c6f410c730952aeed2852790d306/mediapipe/calculators/tensor/tensors_to_detections_calculator.proto#L25) because the tag value is cast to `int` before shifting right.\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1131,
        "deletions": 734,
        "changed_files": 5,
        "created_at": "2022-03-05T23:24:32Z",
        "closed_at": "2022-03-14T20:11:29Z",
        "merged_at": "2022-03-14T20:11:29Z",
        "body": null,
        "comments": 2
    },
    {
        "merged": true,
        "additions": 8915,
        "deletions": 6306,
        "changed_files": 38,
        "created_at": "2022-03-05T20:53:01Z",
        "closed_at": "2022-03-08T20:24:24Z",
        "merged_at": "2022-03-08T20:24:24Z",
        "body": "This way we will make sure 3.20.0 includes the change from #9585.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2022-03-04T22:13:32Z",
        "closed_at": "2022-03-08T17:05:35Z",
        "merged_at": "2022-03-08T17:05:35Z",
        "body": "Add ruby-specific upb_alloc using xrealloc/xfree for use in Arena_alloc so Ruby GC is aware of allocated memory. Fixes #9546.\r\n\r\nSince ruby is now aware of memory allocated for ruby arena object, RB_GC_GUARD must be used to protect from premature GC in cases where C sees no references to the ruby arena object (though upb may still be using the associated memory). \r\n\r\nResults using script from #9467.\r\n\r\nBefore:\r\n```\r\nEncoded payload length: 1888895\r\nMemory before test loop:    rss 121,432    vsz 1,253,468\r\nStarting test loop...\r\n1..200:  25.3 ms/rep    rss 1,440,180    vsz 3,083,840\r\n201..400:  28.4 ms/rep    rss 2,765,192    vsz 4,926,608\r\n401..600:  20.1 ms/rep    rss 4,090,208    vsz 6,769,592\r\n601..800:  18.5 ms/rep    rss 5,415,224    vsz 8,612,568\r\n801..1000:  18.9 ms/rep    rss 6,739,976    vsz 10,455,544\r\n1001..1200:  18.9 ms/rep    rss 8,064,992    vsz 12,298,868\r\n1201..1400:  18.8 ms/rep    rss 9,390,272    vsz 14,142,024\r\n1401..1600:  18.4 ms/rep    rss 10,715,288    vsz 15,985,180\r\n1601..1800:  18.8 ms/rep    rss 12,040,304    vsz 17,828,336\r\n1801..2000:  19.0 ms/rep    rss 13,365,320    vsz 19,671,492\r\n2001..2200:  19.1 ms/rep    rss 14,690,600    vsz 21,514,984\r\n2201..2400:  18.7 ms/rep    rss 16,015,616    vsz 23,358,144\r\n2401..2600:  18.6 ms/rep    rss 17,340,632    vsz 25,201,300\r\n2601..2800:  19.9 ms/rep    rss 18,665,648    vsz 27,044,456\r\n2801..3000:  18.9 ms/rep    rss 19,990,664    vsz 28,887,612\r\n3001..3200:  18.9 ms/rep    rss 21,315,680    vsz 30,730,768\r\n3201..3400:  18.6 ms/rep    rss 22,640,960    vsz 32,573,924\r\n3401..3600:  18.5 ms/rep    rss 23,965,976    vsz 34,417,080\r\n3601..3800:  18.6 ms/rep    rss 25,290,992    vsz 36,260,236\r\n3801..4000:  18.8 ms/rep    rss 26,616,008    vsz 38,103,392\r\n4001..4200:  18.5 ms/rep    rss 27,941,288    vsz 39,947,220\r\n4201..4400:  18.0 ms/rep    rss 29,266,304    vsz 41,790,376\r\n4401..4600:  18.2 ms/rep    rss 30,591,320    vsz 43,633,536\r\n4601..4800:  17.3 ms/rep    rss 31,916,600    vsz 45,476,692\r\n4801..5000:  19.4 ms/rep    rss 33,241,616    vsz 47,319,848\r\nTotal test time: 97.5 seconds\r\nMemory after final GC:    rss 33,241,616    vsz 47,319,848\r\n```\r\n\r\nAfter (gem \"google-protobuf\", :path => \"~/protobuf/ruby/\"):\r\n```\r\nEncoded payload length: 1888895\r\nMemory before test loop:    rss 43,976    vsz 1,168,080\r\nStarting test loop...\r\n1..200:  3.6 ms/rep    rss 134,880    vsz 1,260,180\r\n201..400:  2.7 ms/rep    rss 134,880    vsz 1,260,180\r\n401..600:  2.7 ms/rep    rss 134,880    vsz 1,260,180\r\n601..800:  2.7 ms/rep    rss 134,880    vsz 1,260,180\r\n801..1000:  2.9 ms/rep    rss 81,368    vsz 1,204,764\r\n1001..1200:  2.9 ms/rep    rss 90,888    vsz 1,215,924\r\n1201..1400:  2.9 ms/rep    rss 88,280    vsz 1,214,104\r\n1401..1600:  2.9 ms/rep    rss 67,688    vsz 1,191,084\r\n1601..1800:  3.0 ms/rep    rss 82,732    vsz 1,213,476\r\n1801..2000:  3.0 ms/rep    rss 90,028    vsz 1,215,060\r\n2001..2200:  3.0 ms/rep    rss 90,736    vsz 1,218,912\r\n2201..2400:  2.9 ms/rep    rss 92,932    vsz 1,218,156\r\n2401..2600:  3.0 ms/rep    rss 89,500    vsz 1,214,700\r\n2601..2800:  3.0 ms/rep    rss 91,276    vsz 1,218,156\r\n2801..3000:  3.6 ms/rep    rss 92,596    vsz 1,218,372\r\n3001..3200:  4.0 ms/rep    rss 92,764    vsz 1,218,084\r\n3201..3400:  3.3 ms/rep    rss 92,668    vsz 1,218,156\r\n3401..3600:  3.5 ms/rep    rss 89,500    vsz 1,214,700\r\n3601..3800:  3.9 ms/rep    rss 89,416    vsz 1,215,240\r\n3801..4000:  4.1 ms/rep    rss 120,416    vsz 1,250,892\r\n4001..4200:  3.2 ms/rep    rss 120,416    vsz 1,250,892\r\n4201..4400:  2.7 ms/rep    rss 120,416    vsz 1,250,892\r\n4401..4600:  2.7 ms/rep    rss 120,416    vsz 1,250,892\r\n4601..4800:  2.7 ms/rep    rss 120,416    vsz 1,250,892\r\n4801..5000:  2.7 ms/rep    rss 120,416    vsz 1,250,892\r\nTotal test time: 16.0 seconds\r\nMemory after final GC:    rss 120,416    vsz 1,250,892\r\n```",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 8878,
        "deletions": 6303,
        "changed_files": 33,
        "created_at": "2022-03-04T21:25:39Z",
        "closed_at": "2022-03-05T19:55:57Z",
        "merged_at": "2022-03-05T19:55:57Z",
        "body": null,
        "comments": 1
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-03-04T20:39:02Z",
        "closed_at": "2022-05-16T18:12:43Z",
        "merged_at": null,
        "body": "The javascript serializeBinary() function silently tosses away any non-string placed into what should be a string field, writing the equivalent of an empty string instead\r\n\r\nNot sure if or why anyone would be relying on that existing arbitrary behavior today, but silent data loss seems very undesirable and worth defending against",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 36,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2022-03-04T18:44:48Z",
        "closed_at": "2022-03-04T21:13:55Z",
        "merged_at": "2022-03-04T21:13:55Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-03-04T18:27:04Z",
        "closed_at": "2022-03-04T21:13:20Z",
        "merged_at": "2022-03-04T21:13:20Z",
        "body": "We tried increasing it to 3.10, but that turned out to be too high since\r\ngRPC still supports 3.5.1.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 86,
        "deletions": 71,
        "changed_files": 41,
        "created_at": "2022-03-04T16:36:13Z",
        "closed_at": "2022-03-04T17:52:20Z",
        "merged_at": "2022-03-04T17:52:20Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 17,
        "deletions": 59,
        "changed_files": 1,
        "created_at": "2022-03-04T13:32:42Z",
        "closed_at": "2022-03-27T16:03:35Z",
        "merged_at": null,
        "body": "This PR serves as a sample for the #6977 discussion. I don't have the toolchains setup anymore to run the benchmarks myself, but this minor change fixed it ~2 years ago.",
        "comments": 11
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 10,
        "changed_files": 1,
        "created_at": "2022-03-03T20:05:11Z",
        "closed_at": "2022-03-10T18:19:07Z",
        "merged_at": "2022-03-10T18:19:07Z",
        "body": "@Logofile ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 192,
        "deletions": 30,
        "changed_files": 25,
        "created_at": "2022-03-03T17:25:52Z",
        "closed_at": "2022-03-04T02:59:21Z",
        "merged_at": "2022-03-04T02:59:21Z",
        "body": "**Important:** this integration must be merged, not squashed",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 14,
        "changed_files": 1,
        "created_at": "2022-03-03T05:26:31Z",
        "closed_at": "2022-03-03T17:16:47Z",
        "merged_at": "2022-03-03T17:16:47Z",
        "body": "Fix a few issues with the Emacs mode definition.\r\n\r\nFirst, in 1ab7789f3 (2021-10-13, Emacs: Protobuf mode should be derived from\r\nprog-mode) we made `protobuf-mode` a derived mode of `prog-mode` using the\r\n`define-derived-mode` macro ([doc](https://www.gnu.org/software/emacs/manual/html_node/elisp/Derived-Modes.html)). However, the definition body was not updated\r\naccordingly. So in this commit, we:\r\n\r\n- Remove the superfluous `(interactive)` form;\r\n- Remove the unnecessary call of `kill-all-local-variables`, which is already\r\n  handled by `define-derived-mode` and could cause a few issues, for example,\r\n  it prevents `prog-mode-hook` from being run;\r\n- Remove forms that set `major-mode` and `mode-name`, which are automatically\r\n  set to the first and third arguments respectively;\r\n- Remove forms that set key map, syntax table, and abbrev table, which are\r\n  already handled automatically;\r\n- Do not run `protobuf-mode-hook` explicitly in the body. It is already arranged\r\n  to be run after the body.\r\n\r\nSecond, the call to `c-make-emacs-variables-local` is removed. It is called\r\ninside `c-init-language-vars` already. Calling it again should do no harm now,\r\nbut to be future-proof it might be better to just remove it.\r\n\r\nFinally, we move the `c-update-modeline` form to the :after-hook argument to\r\nensure it is run at the very end, so that the mode line will reflect all user\r\ncustomizations done in various mode hooks. Similarly, we run\r\n`c-mode-common-hook` also at the very end to leave a place for user\r\ncustomizations (for example, set `imenu-generic-expression` in\r\n`c-mode-common-hook`).\r\n\r\nRe: https://github.com/protocolbuffers/protobuf/issues/7316\r\nRe: https://github.com/protocolbuffers/protobuf/pull/9076\r\n\r\nCc @xuhdev.\r\n\r\nThanks!",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 46,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-03-03T04:41:52Z",
        "closed_at": "2022-03-10T19:44:01Z",
        "merged_at": "2022-03-10T19:44:01Z",
        "body": "protobuf is not compatible with the PHP core build system. If you try to build PHP built-in protobuf, you will get the following error\r\n\r\n```shell\r\n$ docker run --rm -it alpine:latest\r\n# apk add --no-cache ca-certificates curl tar xz openssl git curl autoconf automake libtool make g++ unzip\r\n# mkdir \"/php\"\r\n# cd \"/php\"\r\n# curl -fsSL \"https://www.php.net/distributions/php-8.0.16.tar.xz\" | tar Jxvf - --strip-components=1\r\n# git clone --depth=1 --branch=v3.19.4 --recursive \"https://github.com/protocolbuffers/protobuf\" \"/protobuf\"\r\n# cd \"/protobuf\"\r\n# ./autogen.sh\r\n# ./configure\r\n# make -j$(nproc)\r\n# cp -R \"./php/ext/google/protobuf\" \"/php/ext\"\r\n# cd \"/php\"\r\n# ./buildconf --force\r\n# ./configure --disable-all --enable-cli --enable-protobuf\r\n# make -j$(nproc)\r\nmain/internal_functions_cli.c:40:2: error: 'phpext_protobuf_ptr' undeclared here (not in a function); did you mean 'phpext_date_ptr'?\r\n   40 |  phpext_protobuf_ptr,\r\n      |  ^~~~~~~~~~~~~~~~~~~\r\n      |  phpext_date_ptr\r\n```\r\n\r\nThis PR will be minimally supported and adapted to the PHP build system.",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 935,
        "deletions": 742,
        "changed_files": 77,
        "created_at": "2022-03-02T17:45:41Z",
        "closed_at": "2022-03-02T22:23:54Z",
        "merged_at": "2022-03-02T22:23:54Z",
        "body": "**Important:** this integration must be merged, not squashed",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 140,
        "deletions": 62,
        "changed_files": 18,
        "created_at": "2022-03-02T15:16:54Z",
        "closed_at": "2022-03-03T21:05:19Z",
        "merged_at": "2022-03-03T21:05:19Z",
        "body": "Swift importing ObjC drops methods/properties if the type is only a forward\r\ndeclaration since the type is incomplete. Historically the generator has always\r\nuse forward declarations to reduce how much will have rebuild when a proto file\r\ndoes change; but that puts it at odds with Swift. If ObjC Protos end up spanning\r\nSwift modules, the Swift import behavior could become a problem; so this option\r\nprovides a control for the behavior. The current behavior is to continue forward\r\ndeclarations, but eventually the default will be changed.\r\n\r\nGenerate the WKTs using imports instead of forward decls.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 261,
        "deletions": 0,
        "changed_files": 4,
        "created_at": "2022-03-02T14:48:50Z",
        "closed_at": "2022-03-03T17:36:21Z",
        "merged_at": null,
        "body": "**Description**\r\nAddress this issue: https://github.com/protocolbuffers/protobuf/issues/9502\r\n\r\nIn python, there is an API (WhichOneOf) to get the initialized field name: https://github.com/protocolbuffers/protobuf/blob/master/python/google/protobuf/message.py#L295\r\n\r\nThis function is very useful for us, but it does not implement in CPP.\r\nThe API in python implemented in the file `message.py`, I've read the message related code in CPP,\r\nand get a conclusion that this function may not proper to put in the following paths:\r\n```\r\nsrc/google/protobuf/message.h\r\nsrc/google/protobuf/message_lite.h\r\nsrc/google/protobuf/descriptor.h\r\n```\r\n\r\nThe current way may be a better choice for a \"helper function\".",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 112,
        "deletions": 5,
        "changed_files": 12,
        "created_at": "2022-03-02T10:49:18Z",
        "closed_at": "2022-03-17T16:38:37Z",
        "merged_at": "2022-03-17T16:38:36Z",
        "body": "## Why?\n\nFixes #9364\n\n## What are the changes? \n\nI added 3.1.1 as a RUBY_CC_VERSION. I had to upgrade rake-compiler-dock to 1.2.0 as this is the only version of this gem that supports compilation for ruby 3.1+\n\nFurthermore, I had to add a bit of logic (and a new platform this compiles to) as since RubyInstaller 3.1 x64 Windows is not `x64-mingw32` but rather `x64-mingw-ucrt` as explained [here](https://rubyinstaller.org/2021/12/31/rubyinstaller-3.1.0-1-released.html) \n\nAlso `x64-mingw-ucrt` only supports 3.1+ whereas `x64-mingw32` only supports anything up to 3.0 so a little if statement is needed.",
        "comments": 27
    },
    {
        "merged": true,
        "additions": 80,
        "deletions": 3,
        "changed_files": 5,
        "created_at": "2022-03-01T00:29:55Z",
        "closed_at": "2022-03-01T18:53:24Z",
        "merged_at": "2022-03-01T18:53:24Z",
        "body": "Use kt_jvm_export to make bazel rules that create maven jars. Update the util rule to not copy over all of the java core runtime.\r\n\r\nI tested this by comparing the jars that it creates with the jars that the maven command creates, and the output is consistent.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 110,
        "deletions": 122,
        "changed_files": 17,
        "created_at": "2022-02-28T22:22:10Z",
        "closed_at": "2022-03-01T15:46:27Z",
        "merged_at": "2022-03-01T15:46:27Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-02-27T18:29:03Z",
        "closed_at": "2022-03-01T23:24:44Z",
        "merged_at": "2022-03-01T23:24:44Z",
        "body": "If ruby was started in verbose mode, it prints this warning:\r\n\r\n```\r\n$ ruby -w -r google/protobuf -e ''\r\n<internal:/usr/local/lib/ruby/3.1.0/rubygems/core_ext/kernel_require.rb>:85: warning: <internal:/usr/local/lib/ruby/3.1.0/rubygems/core_ext/kernel_require.rb>:85: warning: loading in progress, circular require considered harmful - /usr/local/bundle/gems/google-protobuf-3.19.4/lib/google/protobuf.rb\r\n        from <internal:/usr/local/lib/ruby/3.1.0/rubygems/core_ext/kernel_require.rb>:149:in  `require'\r\n        from <internal:/usr/local/lib/ruby/3.1.0/rubygems/core_ext/kernel_require.rb>:160:in  `rescue in require'\r\n        from <internal:/usr/local/lib/ruby/3.1.0/rubygems/core_ext/kernel_require.rb>:160:in  `require'\r\n        from /usr/local/bundle/gems/google-protobuf-3.19.4/lib/google/protobuf.rb:57:in  `<top (required)>'\r\n        from <internal:/usr/local/lib/ruby/3.1.0/rubygems/core_ext/kernel_require.rb>:85:in  `require'\r\n        from <internal:/usr/local/lib/ruby/3.1.0/rubygems/core_ext/kernel_require.rb>:85:in  `require'\r\n        from /usr/local/bundle/gems/google-protobuf-3.19.4/lib/google/protobuf/descriptor_dsl.rb:5:in  `<top (required)>'\r\n        from <internal:/usr/local/lib/ruby/3.1.0/rubygems/core_ext/kernel_require.rb>:85:in  `require'\r\n        from <internal:/usr/local/lib/ruby/3.1.0/rubygems/core_ext/kernel_require.rb>:85:in  `require'\r\n        from /usr/local/bundle/gems/google-protobuf-3.19.4/lib/google/protobuf/descriptor_pb.rb:4:in  `<top (required)>'\r\n        from <internal:/usr/local/lib/ruby/3.1.0/rubygems/core_ext/kernel_require.rb>:85:in  `require'\r\n        from <internal:/usr/local/lib/ruby/3.1.0/rubygems/core_ext/kernel_require.rb>:85:in  `require'\r\n```\r\n\r\nThe circular require is:\r\n```\r\nprotobuf.rb -> protobuf/descriptor_dsl.rb -> protobuf/descriptor_pb.rb -> protobuf.rb\r\n```\r\n\r\nIt is very annoying that many ruby test framework (e.g. minitest) runs in ruby verbose mode by default and thus prints this message every time the test runs.\r\n\r\nAs far as I can see, this circular require is actually needed. It guarantees that if user requires any one of the three files, all three files will be loaded. Since we intentionally need this circular require, it's best to just suppress the warning here, rather than having the user dealing with figure out how to suppress this one warning with other warnings untouched.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-02-26T02:22:36Z",
        "closed_at": "2022-02-26T20:15:53Z",
        "merged_at": "2022-02-26T20:15:53Z",
        "body": "This PR tells git to ignore ephemeral files that are created when\r\ndevelopers use clangd.\r\n\r\nclangd needs a `compile_commands.json` file at the root of the repo (or\r\nin a `build/` directory) to tell it how to compile each file. CMake can\r\ngenerate this file with something like the following:\r\n\r\n```console\r\n$ cmake -Scmake -B.build \\\r\n  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \\\r\n  -Dprotobuf_BUILD_TESTS=OFF\r\n$ ln -sf .build/compile_commands.json .\r\n```\r\n\r\nThen clangd will compile and index files into the `.cache` directory.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 5,
        "changed_files": 3,
        "created_at": "2022-02-25T14:12:00Z",
        "closed_at": "2022-02-25T22:12:30Z",
        "merged_at": "2022-02-25T22:12:30Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 41,
        "deletions": 2,
        "changed_files": 4,
        "created_at": "2022-02-24T23:54:14Z",
        "closed_at": "2022-03-02T01:06:14Z",
        "merged_at": "2022-03-02T01:06:14Z",
        "body": "Autotools build system already uses linker version scripts since\r\ncommit 13d165de9e737cec750a2ab3d1ef68bb3f276c48.\r\n\r\nFixes: #6113",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-02-24T19:39:57Z",
        "closed_at": "2022-02-24T22:39:05Z",
        "merged_at": "2022-02-24T22:39:05Z",
        "body": "Fixes #9392",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-02-24T00:46:00Z",
        "closed_at": "2022-02-25T17:47:42Z",
        "merged_at": "2022-02-25T17:47:42Z",
        "body": "Remove quotes around CPU since we want the variable evaluated instead of the string. This will allow the win64 build to get the correct name.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2022-02-23T18:27:26Z",
        "closed_at": "2022-05-06T17:21:36Z",
        "merged_at": "2022-05-06T17:21:36Z",
        "body": "`object` is not a valid offset type. Anything other than `string|int` is not a valid offset type. `bool` may be added, but it's not a true offset because it will be cast to an `int` if used:\r\n\r\n```php\r\n$a = [false => '1' , true => '2'];\r\n$a[0] = '3';\r\n$a[1] = '4';\r\nvar_dump($a);\r\n// array(2) {\r\n//   [0]=>\r\n//   string(1) \"3\"\r\n//   [1]=>\r\n//   string(1) \"4\"\r\n// }\r\n```",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 53,
        "deletions": 0,
        "changed_files": 8,
        "created_at": "2022-02-23T10:04:51Z",
        "closed_at": "2022-11-17T19:06:11Z",
        "merged_at": null,
        "body": "# Motivation\r\n\r\nDifferent clients yield different results when JSON parsing unknown enum **string** values:\r\n1) java, cpp will ignore the unknown enum string value when ignoreUnknown is set\r\n2) python, swift, c# will fail although ignoreUnknown is set\r\n\r\nI am proposing a new conformance test with the hope to align the implementations. The expected behavior I am proposing is the one followed by cpp and java already. This is also aligned with binary serialization behavior for unknown enum values.\r\n\r\nMore details in the issue:\r\nhttps://github.com/protocolbuffers/protobuf/issues/7392\r\n\r\nTo keep the PR and discussion small, we leave the unknown enum **integer** values out of scope. For integer values, the difference between proto2 and proto3 comes into discussion, which makes it more complex. \r\n\r\n# Related PRs and issues\r\n\r\nRelated issues/PR in the official repo:\r\n* ISSUE https://github.com/protocolbuffers/protobuf/issues/7392\r\n  * Asks the protobuf team for the specification in this situation.\r\n  * dupe https://github.com/protocolbuffers/protobuf/issues/8244\r\n* ISSUE https://github.com/protocolbuffers/protobuf/issues/3012\r\n  * original Java issue, fixed now\r\n  * PR https://github.com/protocolbuffers/protobuf/pull/4825\r\n    * original fix for Java\r\n* PR https://github.com/protocolbuffers/protobuf/pull/7974\r\n  * c# fix attempt\r\n* PR https://github.com/protocolbuffers/protobuf/pull/7768\r\n  * c# fix attempt\r\n\r\nRelated PRs in other external protobuf implementations:\r\n  * PR https://github.com/timostamm/protobuf-ts/pull/170\r\n    * fix for the typescript library\r\n  * PR https://github.com/streem/pbandk/pull/100\r\n    * fix for Kotlin implementation\r\n  * ISSUE https://github.com/apple/swift-protobuf/issues/972\r\n    * swift issue\r\n    * PR https://github.com/apple/swift-protobuf/pull/896\r\n      * attempt to fix for Swift-> lesson learned: map is a thing",
        "comments": 13
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-02-19T00:56:10Z",
        "closed_at": "2022-02-22T14:46:53Z",
        "merged_at": null,
        "body": "Details about the plugin is found [here](https://github.com/envoyproxy/protoc-gen-validate).",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 6,
        "changed_files": 4,
        "created_at": "2022-02-18T22:22:58Z",
        "closed_at": "2022-02-22T23:53:15Z",
        "merged_at": "2022-02-22T23:53:14Z",
        "body": "Soname was set for libprotobuf.so in commit a9cf69a0ed7766f56976e48a0c96300e94433511,\r\nbut similar changes for libprotobuf-lite.so and libprotoc.so were missed.\r\n\r\nFixes: #8635",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 247,
        "deletions": 90,
        "changed_files": 13,
        "created_at": "2022-02-18T22:09:50Z",
        "closed_at": "2022-02-18T23:32:20Z",
        "merged_at": "2022-02-18T23:32:20Z",
        "body": "**Important:** this integration must be merged, not squashed",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 109,
        "deletions": 73,
        "changed_files": 17,
        "created_at": "2022-02-18T02:02:59Z",
        "closed_at": "2022-02-18T20:15:59Z",
        "merged_at": "2022-02-18T20:15:59Z",
        "body": "**Important:** this integration must be merged, not squashed",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-02-18T00:40:14Z",
        "closed_at": "2022-02-18T19:02:52Z",
        "merged_at": "2022-02-18T19:02:52Z",
        "body": "Only put sysroot flags on linker actions for the osx case.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 564,
        "deletions": 565,
        "changed_files": 118,
        "created_at": "2022-02-18T00:38:25Z",
        "closed_at": "2022-02-18T23:15:39Z",
        "merged_at": null,
        "body": "These files were originally named with their language prefix due to\r\npoor handling of same-named files in Automake. However, we have the\r\n`subdir-objects` option enalbed, so this should not be an issue.\r\n\r\nThis change removes the (redundant) prefix from these filenames, and\r\nupdates the various includes, build files, manifests, etc. that refer\r\nto them.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2176,
        "deletions": 1803,
        "changed_files": 70,
        "created_at": "2022-02-17T17:56:56Z",
        "closed_at": "2022-02-17T19:38:09Z",
        "merged_at": "2022-02-17T19:38:09Z",
        "body": "**Important:** this integration must be merged, not squashed",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 29,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-02-17T14:46:36Z",
        "closed_at": "2022-03-08T14:46:35Z",
        "merged_at": null,
        "body": "Closes #9283",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-02-17T05:26:31Z",
        "closed_at": "2022-02-17T17:24:03Z",
        "merged_at": "2022-02-17T17:24:03Z",
        "body": "I believe this is all that is needed to fix #9517 (this also matches the declaration for `protobuf-kotlin`: https://github.com/protocolbuffers/protobuf/blob/b0bf163c78d6839fad43146e7d2f85c59a4e5b6d/java/kotlin/pom.xml#L61)",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1925,
        "deletions": 1643,
        "changed_files": 71,
        "created_at": "2022-02-16T18:26:41Z",
        "closed_at": "2022-02-17T01:00:00Z",
        "merged_at": null,
        "body": "**Important:** this integration must be merged, not squashed",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 17,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2022-02-16T10:28:28Z",
        "closed_at": "2022-03-08T18:38:52Z",
        "merged_at": "2022-03-08T18:38:52Z",
        "body": "fixes #9500",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2022-02-16T02:13:50Z",
        "closed_at": "2022-02-16T18:02:47Z",
        "merged_at": "2022-02-16T18:02:47Z",
        "body": "This will take advantage of a Docker image that contains a manylinux_aarch64 sysroot, to create binaries that are compatble with old Linux distros.\r\n\r\nIf the approach is working out, we can add this for all our other architectures too.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 157,
        "deletions": 492,
        "changed_files": 8,
        "created_at": "2022-02-15T22:48:29Z",
        "closed_at": "2022-02-16T00:05:21Z",
        "merged_at": "2022-02-16T00:05:21Z",
        "body": "Create an internal bazel rule to generate kotlin proto files and use it in all bazel tests.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 704,
        "deletions": 732,
        "changed_files": 2,
        "created_at": "2022-02-15T09:04:11Z",
        "closed_at": "2022-02-18T09:37:27Z",
        "merged_at": null,
        "body": "Reverts protocolbuffers/protobuf#6307\r\n\r\n- there is a large white-space only diff that obscures the real changes, which is really bad for maintenance. Let's reintroduce the PR without the whitespace changes so that the correct diff is shown in github UI.\r\n- there's been some other concerns with the PR (see comment thread on https://github.com/protocolbuffers/protobuf/pull/6307).\r\n\r\nWe'll be happy to accept the PR again once the concerns from the review are addressed and once the diff looks fine.\r\n\r\n@ObsidianMinor ",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-02-15T06:42:24Z",
        "closed_at": "2022-02-15T15:22:53Z",
        "merged_at": "2022-02-15T15:22:53Z",
        "body": "Checkout the [readme](https://github.com/idodod/protoc-gen-fieldmask#protoc-gen-fieldmask) page for an explanation about the utility.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 116,
        "deletions": 17,
        "changed_files": 4,
        "created_at": "2022-02-12T03:59:13Z",
        "closed_at": "2022-02-23T19:26:53Z",
        "merged_at": "2022-02-23T19:26:53Z",
        "body": "Hey @thomasvl in the [previous PR](https://github.com/protocolbuffers/protobuf/pull/9476) we introduced the `default_objc_class_prefix` objc_opt.\r\n\r\nHowever, upon using it it had a major flaw. We have protos that we generate this prefix for for namespacing and it is not always the same. Upon using this, we realized that objc class prefix passed was also used when generating code for dependencies which was causing compilation issues. In other words, it was applied globally. This might be OK if anyone decides to use the same prefix for all protos so maybe we can keep that option as well?\r\n\r\nI figured anyone can generate a map with the same prefix across all proto files if they desire to do so.\r\n\r\nThis is basically a different solution to https://github.com/protocolbuffers/protobuf/issues/9469",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 17,
        "deletions": 236,
        "changed_files": 17,
        "created_at": "2022-02-11T23:18:49Z",
        "closed_at": "2022-02-12T00:25:56Z",
        "merged_at": "2022-02-12T00:25:56Z",
        "body": "Our benchmark job starting failing when we stopped supporting Python 3.5\r\nand 3.6, but this change fixes it by running it in our java_stretch\r\nDocker container, which has a more recent Python version. I also deleted\r\nall configs related to old Python versions that we no longer support.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 66,
        "deletions": 403,
        "changed_files": 10,
        "created_at": "2022-02-11T23:16:58Z",
        "closed_at": "2022-02-14T18:45:02Z",
        "merged_at": "2022-02-14T18:45:02Z",
        "body": "Removing Proto3LiteTest.kt and using Proto3Test.kt that lives in the core kotlin folder to reduce duplicated code.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 56,
        "deletions": 31,
        "changed_files": 7,
        "created_at": "2022-02-11T19:14:13Z",
        "closed_at": "2022-02-14T18:44:16Z",
        "merged_at": "2022-02-14T18:44:16Z",
        "body": "Fix both Kotlin maven and bazel tests. Include an explicit kotlin.Any type for Kotlin extension methods.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-02-11T07:33:34Z",
        "closed_at": "2022-02-11T16:08:25Z",
        "merged_at": "2022-02-11T16:08:25Z",
        "body": "Added Embedded Proto to options.md to reserve the extension number for the custom options.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 5,
        "changed_files": 3,
        "created_at": "2022-02-10T00:47:28Z",
        "closed_at": "2022-02-10T13:23:52Z",
        "merged_at": null,
        "body": "This is my attempt to add a real osx aarch_64 (aka M1, Apple Silicon) artifact. I can run locally on a recent x86_64 mac which is one of the environments specified in the protoc-artifacts/README.md.\r\n\r\nIt was not super clear how the build automation runs this or moves stuff around. I see the linux CI jobs in kokoro seem to call the build-protoc.sh, but the mac job seems to build it without this script. Per build-zip.sh it should already pick up the artifact, but is currently skipped since it does not exist. It also looks like it should appear on the github release artifacts. I assume in this PR (possibly incorrectly) that the artifact will get to the \"right\" place, so I updated the pom.xml, but I can hold back on that if you advise. I don't feel comfortable (and the README discourages) making kokoro modifications, so I'm not going to touch that stuff. And building out the CI to assert that these new artifacts in fact work on this new macs is more of a maintainer task.\r\n\r\nThere seems to be a few issues tracking this and if its accepted, I'll link to those.\r\n\r\nSigned-off-by: James Yuzawa <jtyuzawa@gmail.com>",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 30,
        "deletions": 30,
        "changed_files": 5,
        "created_at": "2022-02-09T16:52:15Z",
        "closed_at": "2022-02-09T18:21:14Z",
        "merged_at": "2022-02-09T18:21:14Z",
        "body": "This will help keep the terminology consistent with the other language\r\nimplementations.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-02-09T15:01:51Z",
        "closed_at": "2022-02-09T17:19:33Z",
        "merged_at": "2022-02-09T17:19:33Z",
        "body": "@dlj-NaN ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2259,
        "deletions": 1928,
        "changed_files": 74,
        "created_at": "2022-02-09T05:10:07Z",
        "closed_at": "2022-02-09T08:14:43Z",
        "merged_at": "2022-02-09T08:14:43Z",
        "body": "**Important:** this integration must be merged, not squashed!",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 22,
        "deletions": 153,
        "changed_files": 13,
        "created_at": "2022-02-08T19:03:38Z",
        "closed_at": "2022-02-09T02:31:50Z",
        "merged_at": "2022-02-09T02:31:50Z",
        "body": "Python 3.6 reached end-of-life upstream on Dec 23, 2021 (a month and a half ago).\r\n\r\nAds has indicated that they no longer need support for this version.\r\n\r\nPython 3.6 tests have started failing in our latest sync, and we no longer have a compelling reason to invest effort to debug and fix Python 3.6-specific issues.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 18847,
        "deletions": 13796,
        "changed_files": 448,
        "created_at": "2022-02-08T18:34:03Z",
        "closed_at": "2022-02-09T04:47:41Z",
        "merged_at": "2022-02-09T04:47:41Z",
        "body": "Important: this integration must be merged, not squashed!\r\n\r\nThis is a continuation of https://github.com/protocolbuffers/protobuf/pull/9461",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 39,
        "deletions": 6,
        "changed_files": 4,
        "created_at": "2022-02-07T16:16:44Z",
        "closed_at": "2022-02-08T13:22:51Z",
        "merged_at": "2022-02-08T13:22:51Z",
        "body": "For https://github.com/protocolbuffers/protobuf/issues/9469",
        "comments": 15
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-02-06T19:52:37Z",
        "closed_at": "2022-02-07T20:05:26Z",
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 69,
        "deletions": 14,
        "changed_files": 2,
        "created_at": "2022-02-04T16:45:03Z",
        "closed_at": "2022-02-07T23:12:33Z",
        "merged_at": null,
        "body": "Suppose that we have `x.proto` and `y.proto` files. If `x.proto` imports `y.proto`, the generated `x.pb.h` file will include `y.pb.h` file.\r\n\r\nIn our C++ project protobuf is widely used. It contains hundreds of `.proto` files that actively import each other. Since some of the protobuf messages are huge, each additional dependency results in a further slowdown of the project to compilation.\r\n\r\nWhen project's source file depends on the messages from `x.proto` (and includes `x.pb.h` file), the compiler is forced to transitively parse `y.pb.h`, which in most cases is not necessary.\r\n\r\nIn fact `x.pb.h` doesn't need to include `y.pb.h` to be usable. Instead of including `y.pb.h`, `x.pb.h` can forward-declare used classes and enums that are defined in `y.pb.h`. It will reduce the cost to parse `y.pb.h`. If a source file needs both `x.pb.h` and `y.pb.h`, it shall now include both of them.\r\n\r\nWe've measured compile time on Intel Xeon E5-2650 cores clang12 and SSD.\r\n\r\n**Build from scratch BEFORE the patch**:\r\n```\r\nreal    19m23.164s\r\nuser    8m59.026s\r\nsys     5m12.126s\r\n```\r\n**Build from scratch AFTER the patch and codebase fixup**:\r\n```\r\nreal    16m0.855s\r\nuser    8m29.934s\r\nsys     4m55.299s\r\n```\r\n**Build after changing an essential .proto file BEFORE the patch**:\r\n```\r\nreal    15m35.174s\r\nuser    7m19.943s\r\nsys     4m27.037s\r\n```\r\n**Build after changing an essential .proto file AFTER the patch**:\r\n```\r\nreal    11m45.793s\r\nuser    6m58.235s\r\nsys     4m32.752s\r\n```\r\n\r\nThough applying this option requires tidying codebase according to include-what-you-use principle, it saves about 25% of the build time which looks like a major improvement to us.\r\n",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2022-02-03T21:52:24Z",
        "closed_at": "2022-02-09T06:14:56Z",
        "merged_at": null,
        "body": "Change Dockerfile gcc version since we no longer support 4.8",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2022-02-02T01:53:15Z",
        "closed_at": "2022-02-10T17:03:34Z",
        "merged_at": "2022-02-10T17:03:34Z",
        "body": "According to [the manual for trigger_error](https://www.php.net/manual/en/function.trigger-error.php) only constants from the E_USER family can be used. Without this, a cryptic error is presented.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 18852,
        "deletions": 13797,
        "changed_files": 449,
        "created_at": "2022-02-01T21:31:56Z",
        "closed_at": "2022-02-08T18:36:30Z",
        "merged_at": null,
        "body": "Important: this integration must be merged, not squashed!",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-02-01T15:26:24Z",
        "closed_at": "2022-02-01T21:58:39Z",
        "merged_at": "2022-02-01T21:58:39Z",
        "body": "Check _WIN32 instead of _MSC_VER because the later one is for MSVC only.\r\nThis fixes building with mingw-w64 toolchain which uses GCC or Clang.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 69,
        "deletions": 43,
        "changed_files": 10,
        "created_at": "2022-01-31T15:48:46Z",
        "closed_at": "2022-02-10T17:16:20Z",
        "merged_at": "2022-02-10T17:16:20Z",
        "body": "Protobuf generates class with the name `Parent` in PHP (see [this PR](https://github.com/googleapis/google-cloud-php/pull/5073/files#diff-2a1d1b0f9829bac3607be2bf330a07e5b136ae8f945571dbdb90755ff9daca75)). This is an invalid class name, and results in a fatal error. The same is true for the word `self`:\r\n\r\nhttps://www.php.net/manual/en/reserved.classes.php\r\n\r\n```\r\nFollowing identifiers may not be used as a class name as they have special purpose.\r\n```\r\n\r\nOur current list represents PHP \"keywords\", which have almost the same restrictions in PHP, but are slightly more restricted:\r\n\r\nhttps://www.php.net/manual/en/reserved.keywords.php\r\n```\r\nThe following words cannot be used as constants, class names, function or method names. They are, however, allowed as property, constant, and method names of classes, interfaces and traits, except that class may not be used as constant name.\r\n```\r\n\r\nThe difference here is keywords cannot be used in **global** functions or constants. As protobuf for PHP does not generate any global functions or constants, they can be treated as the same, and do not need special treatment (such as `kReservedClasses`). \r\n\r\nThis is **not** a backwards-compatibility breaking change, as any protobuf objects with the names `self` or `parent` would be throwing PHP fatal errors if generated today.\r\n",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-01-28T18:11:11Z",
        "closed_at": "2022-01-28T21:50:36Z",
        "merged_at": "2022-01-28T21:50:36Z",
        "body": "That is, it does not test the version downloaded from Maven central.\r\n\r\n@acozzette ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 176,
        "deletions": 46,
        "changed_files": 45,
        "created_at": "2022-01-28T17:46:24Z",
        "closed_at": "2022-01-29T00:44:21Z",
        "merged_at": "2022-01-29T00:44:21Z",
        "body": "This includes some important bug fixes that were just released as 3.19.4.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 59,
        "deletions": 44,
        "changed_files": 37,
        "created_at": "2022-01-28T00:12:28Z",
        "closed_at": "2022-01-28T03:35:56Z",
        "merged_at": "2022-01-28T03:35:56Z",
        "body": null,
        "comments": 2
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2022-01-27T13:39:15Z",
        "closed_at": "2022-01-27T18:07:31Z",
        "merged_at": "2022-01-27T18:07:30Z",
        "body": "@Logofile \r\n\r\nNo \"Please\"\r\n\r\nsee https://docs.google.com/document/d/1mIHBZQXI3F5VEPPmR54PySixl8wSsdwVciSENJ0Unxg/edit#heading=h.vvb6vlxagbv8 for justification\r\n\r\nalso make the and clause a little simpler. That is, this is now \"Include release notes: yes AND at least a language label\" instead of \"Please include release notes: yes AND Please include at least a language label\"",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 85,
        "deletions": 85,
        "changed_files": 9,
        "created_at": "2022-01-26T10:07:42Z",
        "closed_at": "2022-01-27T00:23:14Z",
        "merged_at": "2022-01-27T00:23:14Z",
        "body": "The previously used term \"3-Clause BSD License\" is not properly\r\nstandarized. A common standard is SPDX, therefore \"3-Clause BSD License\"\r\nis substituted with \"BSD-3-Clause\" which is a SPDX identifier.\r\n\r\n`grep -rl \"3-Clause BSD License\" | xargs -n1 sed -i \"s/3-Clause BSD\r\nLicense/BSD-3-Clause/g\"`",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-01-26T07:25:07Z",
        "closed_at": "2022-02-02T04:12:09Z",
        "merged_at": null,
        "body": "Generated Java code using InternalOneOfEnum should reference AbstractMessageLite instead of AbstractMessage.\r\n\r\njava_message C++ code has been adjusted in accordance with the java interface AbstractMessageLite.\r\n\r\nfixes #7373 ",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-01-25T10:41:37Z",
        "closed_at": "2022-01-29T00:44:43Z",
        "merged_at": "2022-01-29T00:44:42Z",
        "body": "When both directories are added this results in protoc emitting a\r\n\"warning: directory does not exist.\". This makes sense because when\r\nthere are no inputs from the other directory, it is also not present\r\nn the sandbox where protoc is executed.\r\n\r\nFixes https://github.com/protocolbuffers/protobuf/issues/6049\r\nTested manually with envoy project.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-01-24T10:21:41Z",
        "closed_at": "2022-01-24T21:17:14Z",
        "merged_at": "2022-01-24T21:17:14Z",
        "body": "when using CMake >= 3.15, we use CMAKE_MSVC_RUNTIME_LIBRARY\r\nto reproduce the /MT vs /MD when protobuf_MSVC_STATIC_RUNTIME\r\nis TRUE or FALSE\r\nMultiThreaded is for /MT\r\nMultiThreadedDebug is for /MTd\r\nMultiThreadedDLL is for /MD\r\nMultiThreadedDebugDLL is for /MDd",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 8685,
        "deletions": 5709,
        "changed_files": 23,
        "created_at": "2022-01-22T04:30:58Z",
        "closed_at": "2022-01-25T04:40:13Z",
        "merged_at": "2022-01-25T04:40:12Z",
        "body": "This has a few behavior changes and bugfixes. From the release notes:\r\n\r\n  * JSON will now output shorter strings for double and float fields when possible without losing precision.\r\n  * Encoding and decoding of binary format will now work properly on big-endian systems.\r\n  * UTF-8 verification was fixed to properly reject surrogate code points.\r\n  * Unknown enums for proto2 protos now properly implement proto2's behavior of putting such values in unknown fields.\r\n\r\nThe new version of upb fully supports extensions and custom options, opening the door to (finally) fixing https://github.com/protocolbuffers/protobuf/issues/1198.\r\n\r\nA significant number of upb APIs are renamed due to https://github.com/protocolbuffers/upb/pull/485",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-01-22T00:54:06Z",
        "closed_at": "2022-01-25T16:24:12Z",
        "merged_at": "2022-01-25T16:24:12Z",
        "body": "This PR cherry-picks the fix from #8346 onto the 3.19.x branch. This fix was dropped by mistake due to a bug in our sync script.\r\n\r\nFixes #9395.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2022-01-21T17:01:05Z",
        "closed_at": "2022-01-21T23:38:59Z",
        "merged_at": "2022-01-21T23:38:59Z",
        "body": "Otherwise in C++20 / VisualStudio 2022 the following warning is emitted:\r\n\r\n```\r\nwarning C5054: operator '*': deprecated between enumerations of different types\r\n```",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-01-21T04:35:27Z",
        "closed_at": "2022-01-31T19:10:20Z",
        "merged_at": "2022-01-31T19:10:20Z",
        "body": "Hey,\r\n\r\nWhile developing a small service [grpc-curl](https://github.com/xoofx/grpc-curl), I found a small bug in `FieldDescriptor.IsPacked` that was throwing a `NullReferenceException` that I had to workaround here:\r\n\r\nhttps://github.com/xoofx/grpc-curl/blob/f7bbe35af79713f278150b96ce51817807a06581/src/DynamicGrpc/DynamicMessageSerializer.cs#L434-L455\r\n\r\nSo this PR is a small bug fix. Though, I haven't found a test to update about it, not sure if we have any?",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-01-20T22:32:09Z",
        "closed_at": "2022-01-21T18:44:04Z",
        "merged_at": "2022-01-21T18:44:04Z",
        "body": "Change the location of the llvm-ar tool to match the new docker container.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 58,
        "deletions": 18,
        "changed_files": 2,
        "created_at": "2022-01-20T22:28:05Z",
        "closed_at": "2022-01-21T18:44:37Z",
        "merged_at": "2022-01-21T18:44:37Z",
        "body": "We were previously using kt_jvm_test to run Kotlin tests with bazel. However, that library is not compatible with windows (see bug here: https://github.com/bazelbuild/rules_kotlin/issues/599). This PR migrates the kt_jvm_test calls to separate calls: a kt_jvm_library and a java_test.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 97,
        "deletions": 7,
        "changed_files": 9,
        "created_at": "2022-01-20T08:43:25Z",
        "closed_at": "2022-01-28T14:17:57Z",
        "merged_at": "2022-01-28T14:17:57Z",
        "body": "Fixes #9425.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-01-18T18:16:30Z",
        "closed_at": "2022-01-27T21:51:31Z",
        "merged_at": "2022-01-27T21:51:31Z",
        "body": "This fixes #9421 ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 23,
        "deletions": 11,
        "changed_files": 2,
        "created_at": "2022-01-18T07:50:07Z",
        "closed_at": "2022-02-03T17:14:45Z",
        "merged_at": "2022-02-03T17:14:45Z",
        "body": "The base class/documentation suggest that the argument\r\nnames are `self` and `done`, while the runtime used\r\nargument names `srvc` and `callback`.\r\n\r\n`mypy.stubtest` was able to identify this - as it compares\r\nthe types (autogenerated by\r\n[`mypy-protobuf`](https://github.com/dropbox/mypy-protobuf/))\r\nto the actual code generated by protoc at runtime.\r\n\r\nSince the stubs assume the generated code matches the abstract\r\ninterface in service.py - it saw these differences.",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 20,
        "deletions": 77,
        "changed_files": 1,
        "created_at": "2022-01-15T23:39:27Z",
        "closed_at": "2022-03-18T17:28:18Z",
        "merged_at": "2022-03-18T17:28:17Z",
        "body": "Implement Utf8.decodeUtf8 by using String constructor and searching for the replacement string \"\\uFFFD\". This greatly simplifies the implementation, speeds it up for ascii and saves in memory allocations for non ascii strings.\r\n\r\nFixes #9414.",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 12921,
        "deletions": 9602,
        "changed_files": 404,
        "created_at": "2022-01-15T00:36:53Z",
        "closed_at": "2022-01-20T23:39:23Z",
        "merged_at": null,
        "body": "**Important:** this integration must be merged, not squashed",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 216,
        "deletions": 27,
        "changed_files": 2,
        "created_at": "2022-01-14T16:43:37Z",
        "closed_at": "2022-01-17T11:10:17Z",
        "merged_at": null,
        "body": "Hi, I've run into the issue that my setup with remix (remix.run) is not capable of handling the esports from the generated js files (even with the support of grpc-web).\r\n\r\nAt first I started working on a patch for grpc-web in order to fix it, however the deeper I dove into that the more it seems that the whole extension is a workaround.\r\n\r\njs now supports client-to-server streaming natively with the newly launched fetch upload streaming.\r\n\r\nTherefor I want to make this patch to update protoc to generate proper modern files \r\n\r\nTo do this I want to:\r\n- generate typescript files for the messages and client stubs.\r\n- update the npm library to be fitting a more modern standard and implement the client side streaming.\r\n\r\nmy goal is to just do the typescript part as not to blow up the scope for me to do personally since I am way out of my depth in c++. For this reason I am hoping for support to properly implement this",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1320,
        "deletions": 35,
        "changed_files": 20,
        "created_at": "2022-01-12T21:55:22Z",
        "closed_at": "2022-01-14T00:05:09Z",
        "merged_at": "2022-01-14T00:05:09Z",
        "body": "Adding bazel run tests for both kotlin and kotlin-lite subpackages and adding those tests into the full java test suite.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 2150,
        "changed_files": 3,
        "created_at": "2022-01-12T14:38:40Z",
        "closed_at": "2022-01-12T20:31:20Z",
        "merged_at": "2022-01-12T20:31:20Z",
        "body": "@haberman ",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 14,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2022-01-12T07:49:24Z",
        "closed_at": "2022-02-03T03:57:59Z",
        "merged_at": null,
        "body": "Added PROTOBUF_EXTENSION_ATTRIBUTE_INIT_PRIORITY in\r\ncode generation for extension attributes.\r\nIt has lower prio than PROTOBUF_ATTRIBUTE_INIT_PRIORITY to\r\nensure that extension attributes are initialized after\r\nother attribute.\r\nThis is needed in some applications to avoid segmentation fault.\r\n\r\nReported by Karl-Herman N\u00e4slund.\r\n\r\nSigned-off-by: Jani Nurminen <jani.nurminen@windriver.com>\r\n\r\nRebase on master\r\n\r\nSigned-off-by: He Zhe <zhe.he@windriver.com>",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 12485,
        "deletions": 11016,
        "changed_files": 401,
        "created_at": "2022-01-11T22:07:18Z",
        "closed_at": "2022-02-01T22:01:59Z",
        "merged_at": null,
        "body": "**Important:** this integration must be merged, not squashed!",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-01-11T22:05:40Z",
        "closed_at": "2022-01-11T23:36:56Z",
        "merged_at": "2022-01-11T23:36:56Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 89,
        "deletions": 49,
        "changed_files": 41,
        "created_at": "2022-01-11T18:08:12Z",
        "closed_at": "2022-01-11T21:31:59Z",
        "merged_at": "2022-01-11T21:31:59Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 53,
        "deletions": 16,
        "changed_files": 6,
        "created_at": "2022-01-11T01:24:07Z",
        "closed_at": "2022-01-11T16:47:11Z",
        "merged_at": "2022-01-11T16:47:11Z",
        "body": "This reverts commit 935d099ad9f6692e727406764bb3226d935e899d from PR #9162.\r\n\r\nWhile the original commit was a nice simplification, I learned from\r\nanother Googler that there is unfortunately a performance cost to this\r\n(or at least there was last time this change was attempted). Even if it\r\nturns out to be fast on modern Java runtimes, we still care about the\r\nperformance on old Android devices.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 26,
        "deletions": 2,
        "changed_files": 23,
        "created_at": "2022-01-10T21:45:38Z",
        "closed_at": "2022-01-11T00:55:05Z",
        "merged_at": "2022-01-11T00:55:05Z",
        "body": "This pull request cherry-picks the fix from #9128 and makes one other small tweak to fix the Python 3.10 build on Windows.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 489,
        "deletions": 68,
        "changed_files": 4,
        "created_at": "2022-01-08T15:40:09Z",
        "closed_at": "2022-07-26T17:58:35Z",
        "merged_at": "2022-07-26T17:58:35Z",
        "body": "This adds indented formatting (pretty printing) support for c#.\r\n\r\n## Notes\r\n\r\n- Added a method `JsonFormatter.Settings.WithIndentation(string indentation = \"  \")`.\r\n- Added overloads to `JsonFormatter.Format` that specify the initial indentation level, for embedding the json inside a nested json string.\r\n- 100% compatible with previous implementation. No difference in output unless `WithIndentation` is called.\r\n- Supports WellKnownTypes.\r\n\r\n## Usage\r\n\r\n```c#\r\nvar formatter = new JsonFormatter(JsonFormatter.Settings.Default.WithIndentation())\r\nvar json = formatter.Format(new SomeTestMessage() {\r\n  Field1 = \"value\",\r\n  Field2 = \"value2\",\r\n});\r\n```\r\n\r\nOutput:\r\n\r\n```json\r\n{\r\n  \"field1\": \"value\",\r\n  \"field2\": \"value2\"\r\n}\r\n```\r\n\r\nFeedback welcome!",
        "comments": 31
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-01-08T01:57:56Z",
        "closed_at": "2022-01-09T15:14:19Z",
        "merged_at": "2022-01-09T15:14:19Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 51,
        "deletions": 21,
        "changed_files": 2,
        "created_at": "2022-01-07T14:36:47Z",
        "closed_at": "2022-01-07T23:45:22Z",
        "merged_at": "2022-01-07T23:45:22Z",
        "body": "@pzd animal-sniffer checks weren't running because it was in pluginManagement instead of plugins",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 62,
        "deletions": 84,
        "changed_files": 24,
        "created_at": "2022-01-07T13:36:39Z",
        "closed_at": "2022-01-07T18:19:51Z",
        "merged_at": "2022-01-07T18:19:51Z",
        "body": "@acozzette Reverts protocolbuffers/protobuf#9148\r\n\r\nstill supporting API level 14",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 32,
        "deletions": 34,
        "changed_files": 1,
        "created_at": "2022-01-06T18:05:37Z",
        "closed_at": "2022-01-07T13:42:27Z",
        "merged_at": "2022-01-07T13:42:27Z",
        "body": "@pzd stumbled onto this page while investigating other things",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 642,
        "deletions": 9,
        "changed_files": 8,
        "created_at": "2022-01-05T21:57:20Z",
        "closed_at": "2022-01-12T21:16:53Z",
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 366,
        "deletions": 247,
        "changed_files": 36,
        "created_at": "2022-01-05T18:52:30Z",
        "closed_at": "2022-01-05T20:11:25Z",
        "merged_at": "2022-01-05T20:11:25Z",
        "body": "This pull request cherry-picks #9371 and updates the change log and version numbers for the 3.16.1 release.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 564,
        "deletions": 256,
        "changed_files": 40,
        "created_at": "2022-01-05T17:29:28Z",
        "closed_at": "2022-01-05T18:49:17Z",
        "merged_at": "2022-01-05T18:49:17Z",
        "body": "This pull request cherry-picks #9371 and updates the change log and version numbers for the 3.18.2 release.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 499,
        "deletions": 214,
        "changed_files": 6,
        "created_at": "2022-01-05T15:01:42Z",
        "closed_at": "2022-01-05T16:50:29Z",
        "merged_at": "2022-01-05T16:50:29Z",
        "body": "Credit should go to @elharo for most of these Java changes--I am just\r\ncherry-picking them from our internal codebase. The one thing I did\r\nchange was to give the UTF-8 validation tests their own Bazel test\r\ntarget. This makes it possible to give the other tests a shorter\r\ntimeout, which is important for UnknownFieldSetPerformanceTest in\r\nparticular.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 210,
        "deletions": 63,
        "changed_files": 11,
        "created_at": "2022-01-05T05:22:44Z",
        "closed_at": "2022-02-02T22:17:43Z",
        "merged_at": "2022-02-02T22:17:43Z",
        "body": "php 8.1 is more strict, and raises some deprecation notices with existing protobuf code. Not all of the\r\ndeprecations can be fixed without dropping support for php7.x (eg, the 'mixed' type doesn't appear until\r\n8.1, and union types until 8.0, but as an interim solution the 'ReturnTypeWillChange' attribute can be\r\nused to suppress the notices. In passing, also be explicit about a cast from float to int in 'zigZagEncode64'\r\nwhich 8.1 also complains about when running tests.",
        "comments": 27
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 10,
        "changed_files": 3,
        "created_at": "2022-01-04T20:57:09Z",
        "closed_at": "2022-01-05T21:23:54Z",
        "merged_at": "2022-01-05T21:23:54Z",
        "body": "@perezd ",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-01-04T15:26:51Z",
        "closed_at": "2022-01-05T15:16:25Z",
        "merged_at": null,
        "body": "Security Issue: Updating gson version to 2.8.9",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-01-01T14:41:19Z",
        "closed_at": "2022-01-12T20:13:13Z",
        "merged_at": "2022-01-12T20:13:13Z",
        "body": "Why not? :)\r\n\r\nrelease notes: no",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 22,
        "deletions": 0,
        "changed_files": 4,
        "created_at": "2022-01-01T01:22:57Z",
        "closed_at": "2022-02-01T23:41:36Z",
        "merged_at": null,
        "body": "Fix Deprecated such as:\r\n```\r\nDeprecated: Return type of Google\\Protobuf\\Internal\\RepeatedFieldIter::current() should either be compatible with Iterator::current(): mixed, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice in\r\n```",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 16,
        "changed_files": 2,
        "created_at": "2021-12-31T06:12:05Z",
        "closed_at": "2022-01-12T20:14:59Z",
        "merged_at": null,
        "body": "Project import generated by Copybara\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2021-12-30T23:00:58Z",
        "closed_at": "2022-02-08T00:11:35Z",
        "merged_at": null,
        "body": "Updates TimeUtils::GetCurrentTime() to provide nanosecond resolution for c++11\r\n\r\nFixes #8930.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-12-29T01:34:36Z",
        "closed_at": "2022-01-07T01:22:31Z",
        "merged_at": "2022-01-07T01:22:31Z",
        "body": "`bazel build //:protoc` builds the `protoc` binary as `0555`:\r\n\r\n```\r\n$ stat bazel-bin/protoc\r\n  File: bazel-bin/protoc\r\n  Size: 9434304   \tBlocks: 18432      IO Block: 4096   regular file\r\nDevice: 802h/2050d\tInode: 418701      Links: 1\r\nAccess: (0555/-r-xr-xr-x)  Uid: ( 1000/    kiwi)   Gid: ( 1000/    kiwi)\r\nAccess: 2021-12-28 17:25:49.570581395 -0800\r\nModify: 2021-12-28 17:25:49.566581359 -0800\r\nChange: 2021-12-28 17:25:49.566581359 -0800\r\n Birth: -\r\n```\r\n\r\nHowever, `//:protoc_release` packages `protoc` as `0644` (default behavior of `pkg_files`):\r\n\r\n```\r\n$ bazel build //:protoc_release\r\n$ unzip bazel-bin/protoc_release.zip -d /tmp/old\r\n$ stat /tmp/old/bin/protoc\r\n  File: /tmp/old/bin/protoc\r\n  Size: 9434304   \tBlocks: 18432      IO Block: 4096   regular file\r\nDevice: 802h/2050d\tInode: 5539885     Links: 1\r\nAccess: (0644/-rw-r--r--)  Uid: ( 1000/    kiwi)   Gid: ( 1000/    kiwi)\r\nAccess: 1980-01-01 00:00:00.000000000 -0800\r\nModify: 1980-01-01 00:00:00.000000000 -0800\r\nChange: 2021-12-28 17:26:07.074730225 -0800\r\n Birth: -\r\n```\r\n\r\nThis change proposes setting the mode in the release archive to be consistent with the output binary. With this change:\r\n\r\n```\r\n$ bazel build //:protoc_release\r\n$ unzip bazel-bin/protoc_release.zip -d /tmp/new\r\n$ stat /tmp/new/bin/protoc\r\n  File: /tmp/new/bin/protoc\r\n  Size: 9434304   \tBlocks: 18432      IO Block: 4096   regular file\r\nDevice: 802h/2050d\tInode: 5804996     Links: 1\r\nAccess: (0555/-r-xr-xr-x)  Uid: ( 1000/    kiwi)   Gid: ( 1000/    kiwi)\r\nAccess: 1980-01-01 00:00:00.000000000 -0800\r\nModify: 1980-01-01 00:00:00.000000000 -0800\r\nChange: 2021-12-28 17:26:57.851164700 -0800\r\n Birth: -\r\n```\r\n\r\nThis also makes it consistent with the behavior in the non-Bazel script:\r\n\r\nhttps://github.com/protocolbuffers/protobuf/blob/01e84b129361913e5613464c857734fcfe095367/protoc-artifacts/build-zip.sh#L111",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-12-27T09:11:21Z",
        "closed_at": "2022-02-01T22:56:31Z",
        "merged_at": null,
        "body": null,
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2021-12-27T07:57:38Z",
        "closed_at": "2021-12-29T02:54:45Z",
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 33,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2021-12-26T07:51:11Z",
        "closed_at": "2022-03-10T16:41:08Z",
        "merged_at": "2022-03-10T16:41:08Z",
        "body": "avoid allocating memory if all extension are cleared",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 33,
        "deletions": 13,
        "changed_files": 4,
        "created_at": "2021-12-25T18:24:54Z",
        "closed_at": "2022-05-13T19:32:39Z",
        "merged_at": "2022-05-13T19:32:39Z",
        "body": "Two commits in here that fix up some glitches in how libprotobuf/protoc handle warnings, described below.\r\n\r\n----\r\n\r\n**Don't drop parser warnings on the floor**\r\n\r\nFix #9343.\r\n\r\n----\r\n\r\n**Convert \"missing syntax\" warning to an actual warning**\r\n\r\nFor some reason this warning was emitted as a log message rather than a\r\nstructured warning. Convert it to use the AddWarning API so that it gets\r\nemitted with a file and line number by protoc, and is visible via the\r\nerror collection interface during programmatic use.\r\n",
        "comments": 12
    },
    {
        "merged": true,
        "additions": 17,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2021-12-24T13:33:23Z",
        "closed_at": "2022-02-11T19:04:10Z",
        "merged_at": "2022-02-11T19:04:10Z",
        "body": "I found a nasty issue when passing an object who's singleton class was accessed as a Protobuf field value. In my case I was using a string and got this cryptic message: \r\n\r\n```\r\nInvalid argument for string field 'name' (given String). (Google::Protobuf::TypeError)\r\n```\r\n\r\nAfter digging deeper I've discovered that Ruby has a weird way of representing a singleton class (also known as eigenclass in Ruby) \u2014 basically once it was accessed via the `Object#singleton_class` method the true class of an object becomes a wrapper (such as `#<Class:#<String:0x00000001168372e8>>` in case of a string).\r\n\r\nThis is normally an issue because all the class accessor methods in Ruby take this into account and unwrap the real class, so it's not even noticeable. However when using Ruby C API's `CLASS_OF()` method, it shows the wrapper class and therefore is not very usable with wrapped classes. Instead a `rb_obj_class` should be used, which will correctly account for wrapped classes. More details (as well as an example) can be found here \u2014 https://bugs.ruby-lang.org/issues/18428.\r\n\r\nThe error itself is also pretty confusing because it's using `rb_class2name()` which is wrapper aware and shows the unwrapped class (which is not the same one that was used in the conditional).\r\n\r\nNote: I've included a test which should replicate this issue, however I wasn't able to run `rake test` locally. There seems to be a big circular dependency issue between `ruby/lib/google/protobuf/descriptor_dsl.rb` and `ruby/lib/google/protobuf/descriptor_pb.rb` (DSL depends on the generated proto, which itself is built using the DSL). Not sure how it was supposed to work. Hoping on the CI run to make sure everything is good.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 23,
        "deletions": 21,
        "changed_files": 1,
        "created_at": "2021-12-22T23:21:44Z",
        "closed_at": "2022-02-01T23:00:16Z",
        "merged_at": null,
        "body": "Fix for the following config:\r\n- MSVC\r\n- cmake 3.15.0+\r\n- static protobuf\r\n- dynamic runtime (`protobuf_MSVC_STATIC_RUNTIME=OFF`)\r\n\r\nPrevious behavior:\r\nIgnore `protobuf_MSVC_STATIC_RUNTIME` value and set runtime to static.\r\n\r\nNew behavior:\r\nSet static runtime if and only if `protobuf_MSVC_STATIC_RUNTIME=ON`.\r\n\r\n(it's the fixed version of #9312 )",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 133,
        "changed_files": 17,
        "created_at": "2021-12-22T23:08:20Z",
        "closed_at": "2021-12-23T17:58:39Z",
        "merged_at": "2021-12-23T17:58:39Z",
        "body": "This PR merges 3.18.x into 3.19.x so that the 3.19.x branch will pick up the recent Ruby CI fixes.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 16,
        "changed_files": 2,
        "created_at": "2021-12-22T21:39:23Z",
        "closed_at": "2022-01-12T22:15:19Z",
        "merged_at": null,
        "body": "Project import generated by Copybara\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 89,
        "deletions": 6,
        "changed_files": 4,
        "created_at": "2021-12-22T18:01:41Z",
        "closed_at": "2022-02-23T10:05:08Z",
        "merged_at": null,
        "body": "# (not ready yet, I'll review with my teammates internally first)\r\n\r\n# Motivation\r\n\r\nSome clients (python, swift, c#) will raise an exception during parsing of JSON messages if unknown enum value is encountered. In those clients it's not possible to ignore unknown enum values, which blocks us from adding new enum values in a backward compatible way. Java and C++ will ignore unknown enum values if `ignoreUnknownFields` is set.\r\n\r\n# Prior related discussion\r\n\r\nRelated issues/PR in the official repo:\r\n* ISSUE https://github.com/protocolbuffers/protobuf/issues/7392\r\n  * Asks the protobuf team for the specification in this situation.\r\n  * dupe https://github.com/protocolbuffers/protobuf/issues/8244\r\n* ISSUE https://github.com/protocolbuffers/protobuf/issues/3012\r\n  * original Java issue, fixed now\r\n  * PR https://github.com/protocolbuffers/protobuf/pull/4825\r\n    * original fix for Java\r\n* PR https://github.com/protocolbuffers/protobuf/pull/7974\r\n  * c# fix attempt\r\n\r\nRelated PRs in other implementations\r\n  * PR https://github.com/timostamm/protobuf-ts/pull/170\r\n    * fix for the typescript library\r\n  * PR https://github.com/streem/pbandk/pull/100\r\n    * fix for Kotlin implementation\r\n  * ISSUE https://github.com/apple/swift-protobuf/issues/972\r\n    * swift issue\r\n    * PR https://github.com/apple/swift-protobuf/pull/896\r\n      * attempt to fix for Swift-> lesson learned: map is a thing\r\n\r\n# Changes\r\n\r\nHigh level:\r\n  * Align all implementations on handling of unknown enum values in parsing when `ignoreUnknownFields` is set.\r\n  * The proposal is to follow what C++ and Java implementations are doing today -> if enum values are serialized as string, ignore unknown values.\r\n\r\nScope:\r\n  * only JSON format\r\n  * only when `ignoreUnknownFields` is set\r\n  * only enum values that are serialized as strings (as opposed to integers)\r\n  * both proto2 and proto3\r\n \r\nI'll maintain 3 commits in this PR (or split to 3 PRs if the team prefers to review it that way):\r\n\r\n* Add conformance tests that define the specification on how to parse unknown enum string value\r\n* Add python unit tests that match the above conformance tests\r\n* Fix python implementation so that all tests pass\r\n\r\n# Tested\r\n\r\nSteps:\r\n- https://jwangee.github.io/blog/2017/12/08/protobuf1.html\r\n- To build java for conformance tests I followed [these instructions](https://github.com/noom/protobuf/blob/master/tests.sh#L242)\r\n- To run cpp conformance tests, I run `cd conformance && make test_cpp`\r\n- To run python conformance tests, I followed `python/README.md` and run `python setup.py test_conformance` ",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 13,
        "changed_files": 1,
        "created_at": "2021-12-22T17:04:47Z",
        "closed_at": "2021-12-22T21:38:57Z",
        "merged_at": "2021-12-22T21:38:56Z",
        "body": "Project import generated by Copybara\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 12,
        "changed_files": 2,
        "created_at": "2021-12-21T01:22:17Z",
        "closed_at": "2021-12-22T16:04:34Z",
        "merged_at": null,
        "body": "Make explicit the desired returned type of bytes fields.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 12,
        "changed_files": 2,
        "created_at": "2021-12-20T23:59:16Z",
        "closed_at": "2022-01-12T22:16:43Z",
        "merged_at": null,
        "body": "Make explicit the desired returned type of bytes fields.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2021-12-17T17:39:51Z",
        "closed_at": "2021-12-17T18:50:45Z",
        "merged_at": "2021-12-17T18:50:45Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2021-12-17T00:50:30Z",
        "closed_at": "2021-12-17T05:38:43Z",
        "merged_at": "2021-12-17T05:38:43Z",
        "body": "https://www.python.org/downloads/release/python-3100/",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 133,
        "changed_files": 16,
        "created_at": "2021-12-16T23:10:01Z",
        "closed_at": "2021-12-22T23:01:34Z",
        "merged_at": "2021-12-22T23:01:34Z",
        "body": "This fixes our Ruby release build by dropping support for Ruby 2.3 and 2.4.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2021-12-16T22:41:05Z",
        "closed_at": "2021-12-17T18:55:21Z",
        "merged_at": null,
        "body": null,
        "comments": 1
    },
    {
        "merged": false,
        "additions": 45,
        "deletions": 218,
        "changed_files": 29,
        "created_at": "2021-12-15T11:44:11Z",
        "closed_at": "2021-12-22T23:09:31Z",
        "merged_at": null,
        "body": "Fix for the following config:\r\n- MSVC\r\n- cmake 3.15.0+\r\n- static protobuf\r\n- dynamic runtime (`protobuf_MSVC_STATIC_RUNTIME=OFF`)\r\n\r\nPrevious behavior:\r\nIgnore `protobuf_MSVC_STATIC_RUNTIME` value and set runtime to static.\r\n\r\nNew behavior:\r\nSet static runtime if and only if `protobuf_MSVC_STATIC_RUNTIME=ON`.\r\n\r\nSigned-off-by: Valeriy Fedyunin <valery.fedyunin@abbyy.com>",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 131,
        "changed_files": 16,
        "created_at": "2021-12-15T00:34:38Z",
        "closed_at": "2021-12-16T03:12:22Z",
        "merged_at": "2021-12-16T03:12:22Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-12-14T23:40:49Z",
        "closed_at": "2021-12-16T15:51:10Z",
        "merged_at": "2021-12-16T15:51:10Z",
        "body": "@perezd turn off debugging messages such as\r\n\r\n```\r\n[DEBUG]   Imported: org.codehaus.plexus.configuration < plexus.core\r\n```",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 19,
        "deletions": 17,
        "changed_files": 1,
        "created_at": "2021-12-14T14:41:11Z",
        "closed_at": "2022-02-04T17:38:25Z",
        "merged_at": "2022-02-04T17:38:25Z",
        "body": "Fixes #9306 \r\n\r\n+ Allow to use external `protoc` for `Protobuf_PROTOC_EXECUTABLE`\r\n+ Only Set `Protobuf_PROTOC_LIBRARY_*`  and `Protobuf_PROTOC__LIBRARIES/Protobuf_PROTOC__LIBRARIE` when libprotoc is enabled.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 0,
        "changed_files": 4,
        "created_at": "2021-12-13T08:33:37Z",
        "closed_at": "2022-02-11T19:19:12Z",
        "merged_at": "2022-02-11T19:19:12Z",
        "body": "Fix missing function's return type declaration (incompatible return type php 8.1)",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 51,
        "changed_files": 4,
        "created_at": "2021-12-10T15:58:29Z",
        "closed_at": "2021-12-16T16:50:41Z",
        "merged_at": "2021-12-16T16:50:41Z",
        "body": "@perezd ",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-12-08T13:18:39Z",
        "closed_at": "2021-12-16T16:55:27Z",
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-12-07T20:52:23Z",
        "closed_at": "2021-12-14T21:44:19Z",
        "merged_at": null,
        "body": "not yet deleting from repo, checking something",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-12-06T07:38:08Z",
        "closed_at": "2022-02-01T23:08:00Z",
        "merged_at": null,
        "body": "Signed-off-by: Gaute Nilsson <gaute.nilsson@siemens-energy.com>",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-12-05T07:55:35Z",
        "closed_at": "2021-12-08T00:47:06Z",
        "merged_at": "2021-12-08T00:47:06Z",
        "body": "This PR is to reserve the extension number 1140 for a Go protoc plugin.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-12-04T00:34:11Z",
        "closed_at": "2021-12-07T18:36:49Z",
        "merged_at": "2021-12-07T18:36:49Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 45,
        "changed_files": 2,
        "created_at": "2021-12-02T19:20:09Z",
        "closed_at": "2022-01-07T21:39:21Z",
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2021-12-02T13:23:18Z",
        "closed_at": "2021-12-14T16:45:13Z",
        "merged_at": "2021-12-14T16:45:13Z",
        "body": "Hi there,\r\n\r\nI found that if I include the auto generated XX.pb.h in my code then the \"max\" macro defined by Windows will be broken.\r\n\r\nAnd this is caused by a direct undef in `src/google/protobuf/arena.h`\r\n```cpp\r\n#ifdef max\r\n#undef max  // Visual Studio defines this macro\r\n#endif\r\n```\r\n\r\nI think this should be done by using `port_def.inc` and `port_undef.inc` pairs so I removed this undef and add a protect on `src/google/protobuf/stubs/stl_util.h`.\r\n\r\nThank you",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 194,
        "changed_files": 3,
        "created_at": "2021-11-29T21:08:26Z",
        "closed_at": "2021-11-29T22:57:49Z",
        "merged_at": "2021-11-29T22:57:49Z",
        "body": "@acozzette ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 13,
        "changed_files": 7,
        "created_at": "2021-11-29T13:01:11Z",
        "closed_at": "2022-02-02T23:10:16Z",
        "merged_at": "2022-02-02T23:10:15Z",
        "body": "Removes the need for disabling two warnings. Context: Our org considers it best practice to always enable\r\n 4018;4146;4244;4267;4996. The last 3 relate to type conversions and deprecation - they'll require some more effort to root out.\r\n\r\nFirst, by fixing the offending code for\r\n/wd4018 # 'expression' : signed/unsigned mismatch\r\n\r\nAnd second by moving this warning down to the place it is needed (tests)\r\n/wd4146 # unary minus operator applied to unsigned type, result still unsigned",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 1400,
        "changed_files": 3,
        "created_at": "2021-11-29T12:31:28Z",
        "closed_at": "2021-11-29T17:31:46Z",
        "merged_at": "2021-11-29T17:31:46Z",
        "body": "@acozzette ",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 155,
        "deletions": 48,
        "changed_files": 4,
        "created_at": "2021-11-28T02:20:11Z",
        "closed_at": "2022-02-02T23:17:55Z",
        "merged_at": null,
        "body": "Adds functionality that tracks the output files generated for a given descriptor, then uses that information to write a manifest file containing all dependency information. In contrast to the previous implementation, each target in the manifest does not contain a full list of transitive dependencies. Transitivity should be resolved by the build tool parsing the manifest.\r\n\r\nRelated to #3959\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-11-26T17:24:38Z",
        "closed_at": "2022-02-02T16:29:54Z",
        "merged_at": null,
        "body": "This is an updated version of #7123.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 14,
        "changed_files": 8,
        "created_at": "2021-11-24T21:48:14Z",
        "closed_at": "2021-11-24T22:59:57Z",
        "merged_at": "2021-11-24T22:59:57Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 23,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2021-11-24T21:30:41Z",
        "closed_at": "2021-11-24T23:00:57Z",
        "merged_at": "2021-11-24T23:00:57Z",
        "body": "Make adjustments to protobuf_release.bzl to include the os in the name of the protoc artifact.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2021-11-24T19:54:32Z",
        "closed_at": "2021-11-24T22:00:21Z",
        "merged_at": "2021-11-24T22:00:20Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 93,
        "deletions": 18,
        "changed_files": 6,
        "created_at": "2021-11-24T10:10:49Z",
        "closed_at": "2022-02-02T18:18:36Z",
        "merged_at": null,
        "body": "## `custom_base_class`\r\nCustom base class to use for generated classes. Defaults to `\"\"`.\r\n\r\nIf specified, the base class must be a public class in the current namespace.\r\n\r\nThere is a special support for generic classes, which can be specified by `\"MyBaseClass<>\"`, `\"<>\"` is a placeholder, which will be replaced by the current message class name.\r\n\r\nFor example, for a message named `\"MyMessage\"`, if `\"MyBaseClass<>\"` is specified, the base class will be `\"MyBaseClass<MyMessage>\"`.\r\n\r\n## `keep_original_file_name`\r\nWhether to keep the original file name. Defaults to `false`.\r\nIf `true`, the CamelCase name transformation is skiped, and the original file name of proto file is preserved\r\n\r\n## `keep_original_field_name`\r\nWhether to keep the original field name. Defaults to `false`.\r\nIf `true`, the CamelCase name transformation is skiped, and the original field name defined in proto file is preserved\r\n\r\n## `disable_nested_types_container`\r\nWhether to generate a nested `Types` container class for sub messages.\r\nIf true, the nested `Types` container class will not be generated. Be ware, name collision may occurs.\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2021-11-22T19:11:08Z",
        "closed_at": "2021-11-22T21:13:41Z",
        "merged_at": "2021-11-22T21:13:41Z",
        "body": "One more darwin->osx rewrite.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 41,
        "deletions": 46,
        "changed_files": 2,
        "created_at": "2021-11-19T22:34:55Z",
        "closed_at": "2021-11-22T16:07:54Z",
        "merged_at": "2021-11-22T16:07:54Z",
        "body": "When a file doesn't have a proto package, allow validation to still be supported\r\nvia entries with that consist of 'no_package:FILE'. This allows someone using an\r\nexpected prefixes file to also list these exceptional cases, and allows them to\r\nbecomes error cases with requiring all prefixes to be registered.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 17,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2021-11-19T20:46:02Z",
        "closed_at": "2021-11-22T16:07:39Z",
        "merged_at": "2021-11-22T16:07:39Z",
        "body": "While at it, fix a header comment.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 46,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2021-11-17T05:00:52Z",
        "closed_at": "2021-11-17T12:11:07Z",
        "merged_at": null,
        "body": "Add lenient toggle so that those with any existing behavior today reliant on strict only would not break\r\nAdd test case for seconds/nanos\r\nNote no existing Test cases altered ensuring no change in behavior for any existing cases.\r\n\r\nPlease Take this to Tier 1 or Tier to confirmation if possible .\r\nissue Id -\r\nhttps://github.com/protocolbuffers/protobuf/issues/9114",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 10,
        "changed_files": 1,
        "created_at": "2021-11-16T19:38:36Z",
        "closed_at": "2021-11-16T21:08:01Z",
        "merged_at": "2021-11-16T21:08:01Z",
        "body": "Update paths for apple sdks",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2021-11-16T10:31:15Z",
        "closed_at": "2021-11-16T17:26:31Z",
        "merged_at": "2021-11-16T17:26:30Z",
        "body": "Followup for https://github.com/protocolbuffers/protobuf/pull/9205.\r\n\r\nThe failure link: https://source.cloud.google.com/results/invocations/5aaad09e-01b1-45b9-a5a9-3fb2869aefc1",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 270,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2021-11-13T08:16:36Z",
        "closed_at": "2022-03-09T00:40:37Z",
        "merged_at": null,
        "body": "Since https://github.com/protocolbuffers/protobuf/pull/8850 there is a hard requirement for `descriptor_pb.rb` to exist in order for the gem to load. Unfortunately that file only gets created when running `rake build`.\r\n\r\nAn installation through bundler where this gem is sourced through the \"git\" source option won't call the Rakefile at all, causing a LoadError for google/protobuf/descriptor_pb. See also someone running into this problem when testing a different PR: https://github.com/protocolbuffers/protobuf/issues/8420#issuecomment-918558228\r\n\r\nThis change fixes this by including the `descriptor_pb.rb` file directly in the repository. It also adds the other well-known `lib/google/*_pb.rb` files to the `.gitignore` list to make it explicit these are not intended to be committed. Afterwards this gem can again be included via a git source, like this:\r\n\r\n```\r\ngem 'google-protobuf', github: 'lfittl/protobuf', branch: 'ruby-support-bundle-git-source', glob: 'ruby/*.gemspec'\r\n```\r\n\r\n\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 164,
        "deletions": 46,
        "changed_files": 6,
        "created_at": "2021-11-13T07:15:50Z",
        "closed_at": "2022-02-09T16:44:13Z",
        "merged_at": "2022-02-09T16:44:12Z",
        "body": "This allows increasing the recursing depth from the default of 64, by\r\nsetting the \"max_recursion_depth\" to the desired integer value. This is\r\nuseful to encode or decode complex nested protobuf messages that otherwise\r\nerror out with a RuntimeError or \"Error occurred during parsing\".\r\n\r\nFixes #1493",
        "comments": 11
    },
    {
        "merged": true,
        "additions": 47,
        "deletions": 10,
        "changed_files": 3,
        "created_at": "2021-11-12T09:36:12Z",
        "closed_at": "2022-01-03T16:57:58Z",
        "merged_at": "2022-01-03T16:57:58Z",
        "body": "Hotfix for https://github.com/protocolbuffers/protobuf/issues/9180.\r\n\r\nSee https://github.com/protocolbuffers/protobuf/issues/9180#issuecomment-966946662 for more context.",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2021-11-11T19:31:24Z",
        "closed_at": "2021-11-12T20:55:44Z",
        "merged_at": "2021-11-12T20:55:43Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-11-10T13:22:08Z",
        "closed_at": "2021-11-11T01:03:56Z",
        "merged_at": "2021-11-11T01:03:56Z",
        "body": null,
        "comments": 2
    },
    {
        "merged": true,
        "additions": 40,
        "deletions": 30,
        "changed_files": 21,
        "created_at": "2021-11-09T19:51:56Z",
        "closed_at": "2021-11-12T13:20:47Z",
        "merged_at": "2021-11-12T13:20:47Z",
        "body": "Updates SDKs:\r\n* 2.1 -> 3.1\r\n* 5.0 -> 6.0\r\n\r\nAlso fixes inconsistency in parsing out-of-range double values in JSON format.",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2021-11-08T13:05:29Z",
        "closed_at": "2021-11-11T00:37:04Z",
        "merged_at": "2021-11-11T00:37:03Z",
        "body": "When compiling under LLVM/Clang 11.0 this will error out with \"not defined, evaluates to 0\" error. \r\n\r\nThis can be worked around with `CGO_CFLAGS=-Wno-undef-prefix`, however for consistency with the rest of the identifiers it would be nice to have this fix. \r\n\r\n\r\nAlso fixes https://github.com/protocolbuffers/protobuf/issues/8538 \r\n\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 38,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-11-06T01:07:36Z",
        "closed_at": "2021-11-30T18:25:54Z",
        "merged_at": null,
        "body": "We are hitting this issue when we use windows CRT to detect memory leak in our test application which is linked to ProtoBuf library. The windows CRT memory leak detector reports the \"ShutdownData\" object allocated in line 594 is a memory leak. We know this object is designed to be not released, however windows CRT will treat it as a memory leak since the object is never released. And there is no way to differentiate this false alarm from real memory leaks. We have also found similar issue in Google Test and committed patch there. Here we want to use the same way to patch protobuf source code to suppress the false alarm from CRT. Please kindly review and approve. Thanks!",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 96,
        "deletions": 41,
        "changed_files": 4,
        "created_at": "2021-11-05T20:27:56Z",
        "closed_at": "2021-11-17T00:11:33Z",
        "merged_at": null,
        "body": "This commit upgrades googletest to a recent version and tweaks our\r\nautotools build to make that possible. We have been stuck on an old\r\nversion since googletest dropped autotools support a while ago. This\r\nchange works around that problem by setting up our autotools build to\r\ndelegate to googletest's CMake build. This is a little bit hacky, but I\r\nview this is as a temporary solution while we work on completely\r\nremoving our autotools build.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-11-05T18:19:21Z",
        "closed_at": "2021-11-09T13:20:12Z",
        "merged_at": "2021-11-09T13:20:11Z",
        "body": "Fixes #9192 ",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 23,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-11-05T15:12:29Z",
        "closed_at": "2022-02-04T16:54:44Z",
        "merged_at": "2022-02-04T16:54:44Z",
        "body": "@jtattermusch as best I can tell UnknownFieldSet does not have a non-private method to read a field",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 108,
        "deletions": 2,
        "changed_files": 6,
        "created_at": "2021-11-04T17:03:45Z",
        "closed_at": "2021-11-04T22:57:29Z",
        "merged_at": "2021-11-04T22:57:29Z",
        "body": "Mimics what we're doing manually today but powered by Bazel.\r\n\r\nExample output:\r\n\r\n```\r\nbazel build //:protoc_release\r\n...\r\n bazel-bin/protoc-3.19.1-osx_x86_64.zip\r\n```",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 150,
        "deletions": 19,
        "changed_files": 11,
        "created_at": "2021-11-03T05:12:26Z",
        "closed_at": "2021-11-30T03:03:32Z",
        "merged_at": null,
        "body": "Not ready to merge, just pointing out some trim problems for review.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 660,
        "deletions": 49,
        "changed_files": 18,
        "created_at": "2021-11-02T21:59:16Z",
        "closed_at": "2021-11-30T10:57:57Z",
        "merged_at": "2021-11-30T10:57:57Z",
        "body": "Background:\r\n.NET 6 introduces trim analysis and warnings. When Google.Protobuf is included in an app, and trimming is enabled, the app will get a list of trim-related warnings from Google.Protobuf. These are typically places in code that reflection is used but the type could have been trimmed at build time. Use those areas of code could fail after trimming at runtime.\r\n\r\nFor more information, see https://docs.microsoft.com/en-us/dotnet/core/deploying/trimming/prepare-libraries-for-trimming\r\n\r\nThis PR fixes the trim warnings for Google.Protobuf by adding trimming annotations. They either preserve type information so the trimmer can make better decisions, or warn the caller of Google.Protobuf that the API is not compatible with trimming.\r\n\r\nI tested all trim warnings are fixed by using Google.Protobuf with a test app in the grpc-dotnet repo.\r\n\r\nAlso, I updated the test projects to use netcoreapp3.1. The previous target, netcoreapp2.1, is no longer supported and build was generating warnings.\r\n\r\ncc @jtattermusch @captainsafia",
        "comments": 17
    },
    {
        "merged": true,
        "additions": 25,
        "deletions": 13,
        "changed_files": 2,
        "created_at": "2021-11-02T05:49:38Z",
        "closed_at": "2022-02-01T23:27:57Z",
        "merged_at": "2022-02-01T23:27:56Z",
        "body": "This updates the CMake support to additionally symlink the soversion value\r\nto the generated shared library when so generated. This aligns the\r\ngenerated soversion with that traditionally used by the Makefile build\r\nworkflow and provides cross-compatibility irrespective of build approach\r\nused.\r\n\r\nThe primary version of the non-symlink library retains the actual\r\n(non-SO) project version for clarity and compatibility with\r\ninstallations built using prior versions of CMake support. An example of\r\nthe net resulting symlink structures is shown below, where the most\r\nimportant aspect is that the symlink matching the embedded SONAME is\r\npresent (libprotobuf.so.30 in the example case).\r\n\r\nMakefile:\r\n\r\n    libprotobuf.so -> libprotobuf.so.30.0.0\r\n    libprotobuf.so.30 -> libprotobuf.so.30.0.0\r\n    libprotobuf.so.30.0.0\r\n\r\nCMake:\r\n\r\n    libprotobuf.so -> libprotobuf.so.30\r\n    libprotobuf.so.30 -> libprotobuf.so.3.19.0.0\r\n    libprotobuf.so.3.19.0.0\r\n\r\nFixes: #8635",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 12,
        "changed_files": 3,
        "created_at": "2021-10-30T07:51:28Z",
        "closed_at": "2021-10-30T18:56:40Z",
        "merged_at": "2021-10-30T18:56:40Z",
        "body": "They were only needed for python versions <= 2.6\r\n\r\nRelated: #6658",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 28,
        "deletions": 23,
        "changed_files": 4,
        "created_at": "2021-10-29T17:17:33Z",
        "closed_at": "2021-11-01T16:00:31Z",
        "merged_at": "2021-11-01T16:00:31Z",
        "body": "The benchmark runs have been failing since we started requiring Python\r\n3, so this changes fixes the benchmarks by ensuring we always use Python\r\n3.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 204,
        "deletions": 185,
        "changed_files": 49,
        "created_at": "2021-10-29T00:54:50Z",
        "closed_at": "2021-11-02T17:10:48Z",
        "merged_at": "2021-11-02T17:10:48Z",
        "body": null,
        "comments": 8
    },
    {
        "merged": true,
        "additions": 59,
        "deletions": 44,
        "changed_files": 37,
        "created_at": "2021-10-28T20:06:45Z",
        "closed_at": "2021-10-28T21:07:53Z",
        "merged_at": "2021-10-28T21:07:53Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 25,
        "deletions": 3,
        "changed_files": 4,
        "created_at": "2021-10-28T18:11:36Z",
        "closed_at": "2021-10-28T20:07:04Z",
        "merged_at": "2021-10-28T20:07:04Z",
        "body": null,
        "comments": 2
    },
    {
        "merged": true,
        "additions": 92,
        "deletions": 115,
        "changed_files": 5,
        "created_at": "2021-10-27T23:23:29Z",
        "closed_at": "2021-10-28T17:34:54Z",
        "merged_at": "2021-10-28T17:34:54Z",
        "body": "This commit removes the use of bind() since that function goes against\r\nBazel best practices:\r\nhttps://docs.bazel.build/versions/main/external.html#repository-rules-1\r\nThe bind() function basically maps a dependency into //external:, but\r\nthere is no good reason to do this. By mapping dependencies into\r\n//external: and relying on this in our own BUILD files, we're forcing\r\nprojects that depend on us to do the same. The one bind() call that I\r\ndid leave in place was //:python_headers. This one seems to be doing\r\nsomething complicated I don't fully understand, and I don't want to risk\r\nbreaking it.\r\n\r\n\r\nThis change also moves our list of required Maven artifacts into\r\nprotobuf_deps.bzl. This way, projects that depend on us can refer to\r\nthis list when they invoke maven_install() and automatically pull in all\r\nthe necesary dependencies.\r\n\r\nThis fixes #9132.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 53,
        "changed_files": 6,
        "created_at": "2021-10-27T15:09:56Z",
        "closed_at": "2021-10-29T11:51:56Z",
        "merged_at": "2021-10-29T11:51:56Z",
        "body": "Code already uses instances of copyOf, make it the standard.\r\n\r\nhttps://docs.oracle.com/javase/7/docs/api/java/util/Arrays.html",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2021-10-27T02:59:40Z",
        "closed_at": "2022-02-07T23:50:17Z",
        "merged_at": "2022-02-07T23:50:17Z",
        "body": "If ios client need link protobuf against shared library (dylib) , the attribute visibility(\"default\") must be set  to make protobuf symbols are accessible to clients. as the macro are defined in \\google\\protobuf\\port_def.inc line 422.\r\nso when compile protobuf for ios shared library , we need define PROTOBUF_USE_DLLS and LIBPROTOBUF_EXPORTS to make\r\n visibility(\"default\") take effect.\r\n\r\nI write an example. https://github.com/appledragon/TestPBIosSharedLibrary\r\nlibprotobuf-lite-fail.dylib is generated without attribute visibility(\"default\") from 3.19.0 official code.\r\nlibprotobuf-lite.dylib is generated with  visibility(\"default\") .\r\n\r\nwhen I link protobuf as ios shared library, this is the result.\r\nhttps://github.com/appledragon/TestPBIosSharedLibrary/runs/4017222652?check_suite_focus=true\r\n\r\nthe failed case show all the protobuf export symbol can not be accessed by client.\r\n\r\n\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 17,
        "deletions": 17,
        "changed_files": 1,
        "created_at": "2021-10-26T23:31:06Z",
        "closed_at": "2021-10-27T16:45:42Z",
        "merged_at": "2021-10-27T16:45:42Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2021-10-26T16:32:21Z",
        "closed_at": "2021-10-26T21:31:46Z",
        "merged_at": "2021-10-26T21:31:46Z",
        "body": "This change fixes the test that verifies that the checked-in generated\r\ncode for descriptor.proto is up to date.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-10-26T11:23:07Z",
        "closed_at": "2021-10-26T16:48:47Z",
        "merged_at": "2021-10-26T16:48:47Z",
        "body": "PR https://github.com/protocolbuffers/protobuf/pull/8864 introduced a bug (https://github.com/protocolbuffers/protobuf/issues/9152) in generated JS code where it would error getting the global object saying that `window` is undefined.\r\n\r\nI've missed this scenario in my original PR so this PR is here to make the functionality more robust.\r\nThis PR fixes this issue by explicitly checking if window is defined.\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 27,
        "deletions": 17,
        "changed_files": 3,
        "created_at": "2021-10-26T04:11:12Z",
        "closed_at": "2021-10-27T16:40:39Z",
        "merged_at": null,
        "body": "This seems wrong: given [[foo]] [[bar]], we'll now parse the second one as an MS attribute in a context where both are allowed.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-10-26T02:06:46Z",
        "closed_at": "2022-02-01T19:59:21Z",
        "merged_at": null,
        "body": "When using `MSVC_RUNTIME_LIBRARY` to select the runtime library, developers need to have the opportunity to choose whether to use static runtime library through option `protobuf_MSVC_STATIC_RUNTIME`",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-10-25T19:45:56Z",
        "closed_at": "2021-10-26T20:01:52Z",
        "merged_at": "2021-10-26T20:01:52Z",
        "body": "If the line above raises an exception, the upb_arena is lost and memory is leaked.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 84,
        "deletions": 62,
        "changed_files": 24,
        "created_at": "2021-10-25T17:47:26Z",
        "closed_at": "2021-10-25T21:44:38Z",
        "merged_at": "2021-10-25T21:44:38Z",
        "body": null,
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-10-25T07:42:05Z",
        "closed_at": "2021-10-25T21:30:46Z",
        "merged_at": "2021-10-25T21:30:45Z",
        "body": "for windows build fail issue, confliction with std max",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2021-10-22T02:00:55Z",
        "closed_at": "2021-11-04T14:16:02Z",
        "merged_at": "2021-11-04T14:16:02Z",
        "body": "In C++20, code that compares `RepeatedPtrIterator<Foo>` and `RepeatedPtrIterator<const Foo>` can be ambiguous because the reversed operator is equally viable (`[-Wambiguous-reversed-operator]`). If we define viable operators for both combinations of constness there is always a best match when comparing const and non-const iterators.\r\n\r\nWithout this either warnings will be omitted or compilation failures will occur when using this header in C++20. Notably this causes the `//:protobuf_test` target to no longer fail under `--cxxopt='-std=c++20'`.",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-10-21T06:51:29Z",
        "closed_at": "2021-10-21T15:24:38Z",
        "merged_at": "2021-10-21T15:24:38Z",
        "body": "This project will soon be pushed on github (hence the 404 error on the link). ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2021-10-20T22:31:20Z",
        "closed_at": "2021-10-21T13:47:18Z",
        "merged_at": "2021-10-21T13:47:18Z",
        "body": "This change adds some files to EXTRA_DIST in Makefile.am so that our\r\npublished tar and zip files will have everything needed for Bazel\r\nbuilds. I also added a basic test for this so that next time we should\r\nfind out sooner if we're missing any important files.\r\n\r\nfixes #9129",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 25,
        "deletions": 1,
        "changed_files": 23,
        "created_at": "2021-10-20T18:18:25Z",
        "closed_at": "2021-10-20T21:51:08Z",
        "merged_at": "2021-10-20T21:51:08Z",
        "body": "The first change is to make sure we always define PY_SSIZE_T_CLEAN\r\nbefore including Python.h. Starting from Python 3.10 this is required.\r\nOtherwise we get errors like this:\r\n\r\nSystemError: PY_SSIZE_T_CLEAN macro must be defined for '#' formats\r\n\r\nThe second change is to update reflection_test.py to account for the\r\nfact that with Python 3.10, we get a TypeError even with the C++\r\nimplementation when trying to assign a float to a bool field. I'm not\r\nsure why this changed with Python 3.10, but it seems like a good thing\r\nsince this is the desired behavior anyway.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 24,
        "deletions": 10,
        "changed_files": 2,
        "created_at": "2021-10-20T16:56:18Z",
        "closed_at": "2021-10-21T18:47:05Z",
        "merged_at": "2021-10-21T18:47:05Z",
        "body": "Our internal version of the codebase has a different path and package\r\nname for descriptor.proto, so this change updates IsDescriptorProto()\r\nand IsDescriptorOptionMessage() to be able to handle both the internal\r\nand external descriptor types.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 406,
        "deletions": 35,
        "changed_files": 6,
        "created_at": "2021-10-20T10:37:30Z",
        "closed_at": "2022-03-31T12:43:01Z",
        "merged_at": null,
        "body": "Fix for #6035",
        "comments": 12
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 6,
        "changed_files": 3,
        "created_at": "2021-10-19T21:56:52Z",
        "closed_at": "2021-10-20T00:14:26Z",
        "merged_at": "2021-10-20T00:14:26Z",
        "body": "Fixes: https://github.com/protocolbuffers/protobuf/issues/9122",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 46,
        "deletions": 31,
        "changed_files": 24,
        "created_at": "2021-10-19T18:11:39Z",
        "closed_at": "2021-10-20T17:14:02Z",
        "merged_at": "2021-10-20T17:14:02Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 111,
        "deletions": 7,
        "changed_files": 3,
        "created_at": "2021-10-19T14:28:51Z",
        "closed_at": "2021-10-20T14:18:52Z",
        "merged_at": null,
        "body": "Add lenient toggle so that those with any existing behavior today reliant on strict only would not break\r\nAdd test case for seconds/nanos\r\nAdd test case demonstrating full Proto -> Avro -> Json -> Proto trip. \r\nNote no existing Test cases altered ensuring no change in behavior for any existing cases.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 45,
        "deletions": 31,
        "changed_files": 25,
        "created_at": "2021-10-18T22:43:53Z",
        "closed_at": "2021-10-19T16:01:57Z",
        "merged_at": "2021-10-19T16:01:57Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 14,
        "deletions": 14,
        "changed_files": 2,
        "created_at": "2021-10-18T05:15:18Z",
        "closed_at": "2021-10-18T09:14:37Z",
        "merged_at": null,
        "body": "This Commit adds in the ablity of mergeTimestamp method to parse the timestamp formate of type \"{\"seconds\":1800,\"nanos\":0}\" as if now only this format was supported \"1970-01-01T00:00:00Z\".\r\n\r\nissue describe in details --https://github.com/protocolbuffers/protobuf/issues/9114",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 23,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2021-10-15T16:19:57Z",
        "closed_at": "2022-02-09T16:21:46Z",
        "merged_at": "2022-02-09T16:21:46Z",
        "body": "This would allow setting options for plugins, e.g. to generate mocks.\r\nExample:\r\n```\r\nprotobuf_generate(\r\n      TARGET\r\n      myTarget\r\n      LANGUAGE\r\n      grpc\r\n      PROTOC_OUT_DIR\r\n      ${CMAKE_BINARY_DIR}\r\n      GENERATE_EXTENSIONS\r\n      .grpc.pb.h\r\n      .grpc.pb.cc\r\n      PLUGIN\r\n      protoc-gen-grpc=$<TARGET_FILE:gRPC::grpc_cpp_plugin>\r\n      PLUGIN_OPTIONS\r\n      generate_mock_code=true\r\n      IMPORT_DIRS\r\n      ${PROTO_IMPORT_DIRS})\r\n```",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-10-15T06:40:55Z",
        "closed_at": "2021-10-15T20:12:02Z",
        "merged_at": "2021-10-15T20:12:01Z",
        "body": null,
        "comments": 2
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 297,
        "changed_files": 11,
        "created_at": "2021-10-14T23:09:38Z",
        "closed_at": "2021-10-15T20:11:25Z",
        "merged_at": null,
        "body": "Some test runs have been failing because when the Dockerhub organization\r\nit unset, it default's to gRPC's organization.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2021-10-14T22:43:20Z",
        "closed_at": "2021-10-19T19:57:16Z",
        "merged_at": null,
        "body": "Adds the suppress inlining warning to kotlin's method java_string_field to be consistent with the other kotlin generated code. This should fix #9063.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 30,
        "changed_files": 7,
        "created_at": "2021-10-14T01:59:10Z",
        "closed_at": "2021-10-15T20:10:38Z",
        "merged_at": "2021-10-15T20:10:38Z",
        "body": "This is based on @haberman's changes in #8257. Now that we're using\r\nstd::mutex we no longer need to check whether pthreads are available, so\r\nthis commit removes references to HAVE_PTHREAD. I left the autotools\r\nbuild alone, though, since we are likely to drop support for it soon\r\nanyway.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 54,
        "deletions": 54,
        "changed_files": 16,
        "created_at": "2021-10-13T23:09:56Z",
        "closed_at": "2021-10-15T21:26:55Z",
        "merged_at": "2021-10-15T21:26:55Z",
        "body": "The Descriptor class now has map_key() and map_value() methods for\r\naccessing the special key and value fields in generated map entry\r\nmessages. This commit updates all the relevant code to use these\r\naccessors instead of the clunkier FindFieldByName(\"key\") or\r\nFindFieldByName(\"value\") approach.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 48,
        "deletions": 48,
        "changed_files": 6,
        "created_at": "2021-10-13T22:43:40Z",
        "closed_at": "2021-10-16T02:00:04Z",
        "merged_at": "2021-10-16T02:00:04Z",
        "body": "assertRaisesRegexp has been deprecated in favor of the slightly\r\ndifferent spelling assertRaisesRegex. Let's fix this just to clean up a\r\nbunch of deprecation warnings in the tests.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 32,
        "changed_files": 7,
        "created_at": "2021-10-13T18:15:48Z",
        "closed_at": "2021-10-13T20:51:09Z",
        "merged_at": "2021-10-13T20:51:09Z",
        "body": "We no longer support Python 2 and therefore no longer need to depend on\r\nsix. I'm hoping this will make it possible to merge #8214.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 15,
        "deletions": 14,
        "changed_files": 2,
        "created_at": "2021-10-13T12:16:00Z",
        "closed_at": "2021-10-13T13:19:12Z",
        "merged_at": null,
        "body": "This Commit adds in the ablity of mergeTimestamp method to parse the  timestamp formate of type \"{\\\"seconds\\\":1800,\\\"nanos\\\":0}\" as if now only this format was supported \"1970-01-01T00:00:00Z\".",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 18,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-10-13T12:01:57Z",
        "closed_at": "2021-10-13T17:34:50Z",
        "merged_at": "2021-10-13T17:34:49Z",
        "body": "fixes #9004\r\n\r\n@acozzette ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-10-13T11:33:26Z",
        "closed_at": "2021-10-13T16:35:18Z",
        "merged_at": "2021-10-13T16:35:18Z",
        "body": "fixes #8704\r\n\r\n@acozzette ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4222,
        "deletions": 3185,
        "changed_files": 86,
        "created_at": "2021-10-12T17:22:25Z",
        "closed_at": "2021-10-12T23:37:01Z",
        "merged_at": "2021-10-12T23:37:01Z",
        "body": "**Important:** this integration must be merged, not squashed",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 34,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2021-10-12T13:26:16Z",
        "closed_at": "2022-03-09T00:39:07Z",
        "merged_at": null,
        "body": "fixes #8774",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-10-11T19:11:17Z",
        "closed_at": "2021-10-12T00:35:25Z",
        "merged_at": "2021-10-12T00:35:24Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-10-09T12:04:27Z",
        "closed_at": "2021-10-09T18:39:18Z",
        "merged_at": "2021-10-09T18:39:18Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 92,
        "deletions": 5,
        "changed_files": 9,
        "created_at": "2021-10-07T22:46:47Z",
        "closed_at": "2021-10-08T13:01:46Z",
        "merged_at": "2021-10-08T13:01:46Z",
        "body": "Standardize on JRuby 9.2.19.0 for building and for testing the 9.2.x branch.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-10-07T10:45:57Z",
        "closed_at": "2021-10-09T18:43:00Z",
        "merged_at": "2021-10-09T18:43:00Z",
        "body": "remove dollar sign for easier copying",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-10-07T10:39:49Z",
        "closed_at": "2021-10-09T18:45:56Z",
        "merged_at": "2021-10-09T18:45:56Z",
        "body": "Fixes:\r\n  * zero_copy_stream_impl.cc uses F_GETFL when build with MinGW,\r\n    which isn't defined under Windows.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-10-07T03:00:31Z",
        "closed_at": "2021-10-13T17:26:40Z",
        "merged_at": "2021-10-13T17:26:40Z",
        "body": "Prog mode is a basic major mode for buffers containing programming\r\nlanguage source code:\r\nhttps://www.gnu.org/software/emacs/manual/html_node/elisp/Basic-Major-Modes.html\r\n\r\nA lot of programming mode setup is based on whether the major mode is\r\nderived from `prog-mode`.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 8,
        "changed_files": 3,
        "created_at": "2021-10-06T22:20:36Z",
        "closed_at": "2021-10-07T13:52:46Z",
        "merged_at": null,
        "body": "An alternative approach to #9071 that makes JRuby a submodule of the protobuf-parent artifact.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2021-10-06T21:05:23Z",
        "closed_at": "2021-10-07T00:01:55Z",
        "merged_at": "2021-10-07T00:01:55Z",
        "body": "fixes #9069 ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2021-10-06T19:44:11Z",
        "closed_at": "2021-10-11T20:39:14Z",
        "merged_at": "2021-10-11T20:39:14Z",
        "body": null,
        "comments": 3
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2021-10-06T17:09:34Z",
        "closed_at": "2021-10-07T13:50:44Z",
        "merged_at": "2021-10-07T13:50:44Z",
        "body": "Prevents future flakiness when unreleased JRuby features are dependent on unreleased Java features by populating the local Maven repository with the artifacts needed when running `tests.sh jruby`.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2021-10-06T11:59:12Z",
        "closed_at": "2021-10-06T16:51:49Z",
        "merged_at": null,
        "body": "@suztomo @perezd ",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-10-06T11:26:15Z",
        "closed_at": "2021-10-11T19:07:41Z",
        "merged_at": "2021-10-11T19:07:41Z",
        "body": "@perezd ",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2021-10-06T05:32:24Z",
        "closed_at": "2021-10-11T20:46:54Z",
        "merged_at": "2021-10-11T20:46:54Z",
        "body": "* fix includes for AIX and SunOS",
        "comments": 13
    },
    {
        "merged": true,
        "additions": 64,
        "deletions": 38,
        "changed_files": 35,
        "created_at": "2021-10-05T21:05:27Z",
        "closed_at": "2021-10-06T00:08:16Z",
        "merged_at": "2021-10-06T00:08:16Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 13,
        "changed_files": 2,
        "created_at": "2021-10-05T17:51:03Z",
        "closed_at": "2021-10-05T19:19:39Z",
        "merged_at": "2021-10-05T19:19:39Z",
        "body": "Change toolchain/config names to all be consistent with the names of the artifacts we want to create, also changing the imports of the x86_32 build.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-10-05T17:33:12Z",
        "closed_at": "2021-10-12T20:11:17Z",
        "merged_at": "2021-10-12T20:11:17Z",
        "body": "This prepares for a change (internal CL 399474184, to be mirrored out to GitHub) to add a few such annotations in FieldMaskUtil and JsonFormat.\r\n\r\n(Technically, this PR is probably not \"necessary\" because protobuf-util already depends transitively on jsr305. But it's better hygiene to depend on it directly, and the direct dependency could protect against problems if protobuf-util drops some of its other deps -- or if those deps drop their own deps on jsr305.)\r\n\r\nrelease notes: no",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-10-05T14:27:12Z",
        "closed_at": "2021-10-10T11:11:22Z",
        "merged_at": "2021-10-10T11:11:21Z",
        "body": "@pzd",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 25,
        "changed_files": 2,
        "created_at": "2021-10-05T00:54:08Z",
        "closed_at": "2021-10-07T20:29:31Z",
        "merged_at": null,
        "body": "These are by far our slowest tests, so this commit makes some changes to\r\nspeed them up. The reason they're slow is that they exhaustively iterate\r\nover all 2**24 possible 3-byte sequences.\r\n- In DecodeUtf8Test, I changed the test to just count the number of\r\n  valid sequences instead of asserting on the outcome of each one. This\r\n  way, the number of loop iterations is the same but each iteration is\r\n  much faster. If we introduce a bug, it should still be pretty likely\r\n  to make the test fail.\r\n- In IsValidUtf8Test, I kept the same basic test structure but updated\r\n  the test to exercise just one ByteStringFactory instead of all three.\r\n  DIRECT_NIO_FACTORY sounded like the most subtle one, so I chose that\r\n  one to test.\r\n\r\nThis makes \"bazel test --nocache_test_results //java/core:tests\" take 2\r\nminutes instead of 6. The time for \"mvn test\" is down to about 7\r\nminutes. I didn't time it at the baseline but I think it was upwards of\r\n10 minutes.\r\n\r\nI suspect we could make the Maven test run comparable to Bazel if we\r\ncould configure Maven to parallelize its test cases, but I'm not sure\r\nhow to do this.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 53,
        "deletions": 38,
        "changed_files": 34,
        "created_at": "2021-10-04T20:11:03Z",
        "closed_at": "2021-10-05T00:43:34Z",
        "merged_at": "2021-10-05T00:43:34Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-10-04T18:48:19Z",
        "closed_at": "2021-10-04T20:56:35Z",
        "merged_at": "2021-10-04T20:56:35Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 289,
        "deletions": 1875,
        "changed_files": 24,
        "created_at": "2021-10-03T22:32:31Z",
        "closed_at": "2021-10-05T18:13:27Z",
        "merged_at": "2021-10-05T18:13:27Z",
        "body": "JRuby unit and conformance test fixes.\r\n\r\nIncludes changes originally submitted in #8997 and #8954",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-10-03T20:03:31Z",
        "closed_at": "2021-10-09T18:54:15Z",
        "merged_at": "2021-10-09T18:54:15Z",
        "body": "The `cl` package has been deprecated in emacs 27, this PR make this warning go away.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 20,
        "deletions": 79,
        "changed_files": 12,
        "created_at": "2021-10-01T23:19:00Z",
        "closed_at": "2021-10-02T00:37:56Z",
        "merged_at": "2021-10-02T00:37:56Z",
        "body": "This should fix the Ruby test failures and speed up all the Mac OS tests.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 59,
        "changed_files": 8,
        "created_at": "2021-10-01T20:21:38Z",
        "closed_at": "2021-10-01T22:45:55Z",
        "merged_at": "2021-10-01T22:45:55Z",
        "body": "Installing and upgrading Homebrew packages is taking quite a lot of time\r\n(around 20-30 minutes) for each run. This commit removes all Homebrew\r\nusage from the test runs. Homebrew may have been necessary at some point\r\nin the past, but now it appears that everything works without it. The\r\npreinstalled build tools seem to be sufficient for building protoc, and\r\nRuby is something we already get from rvm.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-09-30T21:43:58Z",
        "closed_at": "2021-10-01T14:00:09Z",
        "merged_at": "2021-10-01T14:00:09Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 189,
        "deletions": 44,
        "changed_files": 3,
        "created_at": "2021-09-30T21:10:09Z",
        "closed_at": "2021-10-01T19:46:03Z",
        "merged_at": "2021-10-01T19:46:03Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 16,
        "changed_files": 4,
        "created_at": "2021-09-30T20:46:55Z",
        "closed_at": "2021-10-12T17:08:06Z",
        "merged_at": "2021-10-12T17:08:05Z",
        "body": "I ran ./update_file_lists.sh to update these files.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 161,
        "deletions": 4,
        "changed_files": 15,
        "created_at": "2021-09-29T19:06:38Z",
        "closed_at": "2021-10-15T17:24:50Z",
        "merged_at": "2021-10-15T17:24:49Z",
        "body": "The Python 3.10 release is scheduled for next Monday, 2021-10-04. https://www.python.org/dev/peps/pep-0619/\r\n\r\n~Because 3.10 is still technically a release candidate, the image `python:3.10-buster` does not yet exist, but should soon.~\r\npython:3.10-buster now exists: https://hub.docker.com/_/python\r\n\r\nIntended to be reviewed together with Kokoro config change in internal changelist 399739838.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1923,
        "deletions": 1641,
        "changed_files": 90,
        "created_at": "2021-09-28T20:13:49Z",
        "closed_at": "2021-09-29T04:15:29Z",
        "merged_at": "2021-09-29T04:15:29Z",
        "body": "**Important:** this integration must be merged, not squashed!",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-09-27T22:46:08Z",
        "closed_at": "2021-09-28T00:46:25Z",
        "merged_at": "2021-09-28T00:46:25Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 376,
        "deletions": 185,
        "changed_files": 63,
        "created_at": "2021-09-27T22:30:58Z",
        "closed_at": "2021-09-28T00:55:39Z",
        "merged_at": "2021-09-28T00:55:39Z",
        "body": null,
        "comments": 3
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2021-09-26T12:03:06Z",
        "closed_at": "2021-11-04T14:22:29Z",
        "merged_at": null,
        "body": "proto3 case:\r\nif enum provides value \"string\"\r\nwill raise a \"number\" NameError exception",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 27,
        "deletions": 27,
        "changed_files": 1,
        "created_at": "2021-09-24T23:35:20Z",
        "closed_at": "2021-09-27T17:44:18Z",
        "merged_at": "2021-09-27T17:44:18Z",
        "body": "Changing features in toolchain to label the two features separately.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-09-24T22:20:19Z",
        "closed_at": "2021-09-25T15:18:15Z",
        "merged_at": "2021-09-25T15:18:15Z",
        "body": "Fixes: https://github.com/protocolbuffers/protobuf/issues/9014",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 20,
        "deletions": 20,
        "changed_files": 5,
        "created_at": "2021-09-24T19:33:04Z",
        "closed_at": "2021-09-30T22:50:06Z",
        "merged_at": "2021-09-30T22:50:06Z",
        "body": "This PR cherry-picks a couple fixes for the 3.18.1 release. The main one is from #8989 and ensures that we explicitly require Python 3 in setup.py. I also made some other small tweaks to get all the tests passing.",
        "comments": 18
    },
    {
        "merged": false,
        "additions": 38,
        "deletions": 20,
        "changed_files": 2,
        "created_at": "2021-09-24T13:12:48Z",
        "closed_at": "2022-03-09T00:38:14Z",
        "merged_at": null,
        "body": "Much of the generated PHP code is missing return types, and the type definitions for the expected parameters. This PR adds those types to provide a more pleasant and secure experience for PHP developers.\r\n\r\n    // Before\r\n    public function getField()\r\n    {\r\n        return $this->field;\r\n    }\r\n\r\n    public function hasField()\r\n    {\r\n        return isset($this->field);\r\n    }\r\n\r\n    public function clearField()\r\n    {\r\n        unset($this->field);\r\n    }\r\n\r\n    public function setField($var)\r\n    {\r\n        GPBUtil::checkMessage($var, \\Google\\Protobuf\\BoolValue::class);\r\n        $this->field = $var;\r\n\r\n        return $this;\r\n    }\r\n\r\n    // After\r\n    public function getField(): ?\\Google\\Protobuf\\BoolValue\r\n    {\r\n        return $this->field;\r\n    }\r\n\r\n    public function hasField(): bool\r\n    {\r\n        return isset($this->field);\r\n    }\r\n\r\n    public function clearField(): void\r\n    {\r\n        unset($this->field);\r\n    }\r\n\r\n    public function getFieldUnwrapped(): ?bool\r\n    {\r\n        return $this->readWrapperValue(\"field\");\r\n    }\r\n\r\n    public function setField(\\Google\\Protobuf\\BoolValue $var): TestBoolValue\r\n    {\r\n        GPBUtil::checkMessage($var, \\Google\\Protobuf\\BoolValue::class);\r\n        $this->field = $var;\r\n\r\n        return $this;\r\n    }",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 59,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2021-09-23T13:55:08Z",
        "closed_at": "2021-09-23T16:15:59Z",
        "merged_at": "2021-09-23T16:15:59Z",
        "body": "- `require_prefixes`: Fail generation if a file doesn't have the option.\r\n- `prefixes_must_be_registered`: If a prefix is in a file, it must be registered\r\n  in the expected file. There is a grey space here for files without packages as\r\n  there is no way to register it, so these case will still warn at the moment.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-09-23T07:13:36Z",
        "closed_at": "2021-09-23T21:09:33Z",
        "merged_at": "2021-09-23T21:09:33Z",
        "body": "It is likely that we will offer custom options beyond just FieldOptions:\r\n\r\n- EnumOptions\r\n- FileOptions\r\n- MessageOptions\r\n- OneOfOptions\r\n\r\nThis PR would kindly ask to extend our range to 5. My apologies that this comes so soon after the initial one, but I figure it is good to get in now so we can have a contiguous range!\r\n\r\nThank you",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2021-09-22T22:14:13Z",
        "closed_at": "2021-09-23T22:08:32Z",
        "merged_at": "2021-09-23T22:08:32Z",
        "body": "Now that we have dropped Python 2 support, we need to make sure this\r\ninstall test uses Python 3.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 240,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2021-09-22T18:32:41Z",
        "closed_at": "2021-09-23T19:52:47Z",
        "merged_at": "2021-09-23T19:52:47Z",
        "body": "Creating a bazel toolchain to cross compile to all architectures supported with Linux. ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 37,
        "changed_files": 9,
        "created_at": "2021-09-22T14:21:06Z",
        "closed_at": "2021-10-05T21:49:01Z",
        "merged_at": "2021-10-05T21:49:01Z",
        "body": "@haberman fixes #2043 ",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2021-09-21T18:23:42Z",
        "closed_at": "2021-09-22T12:41:04Z",
        "merged_at": "2021-09-22T12:41:03Z",
        "body": "@perezd this will be needed on the next sync with google3. Until then it's harmless.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 49,
        "deletions": 44,
        "changed_files": 11,
        "created_at": "2021-09-20T20:49:29Z",
        "closed_at": "2021-09-22T16:16:09Z",
        "merged_at": "2021-09-22T16:16:09Z",
        "body": null,
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2021-09-20T20:18:25Z",
        "closed_at": "2021-09-21T13:50:24Z",
        "merged_at": "2021-09-21T13:50:24Z",
        "body": "@acozzette ",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-09-20T20:03:02Z",
        "closed_at": "2021-09-22T21:11:29Z",
        "merged_at": "2021-09-22T21:11:29Z",
        "body": null,
        "comments": 3
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-09-19T09:15:30Z",
        "closed_at": "2021-09-20T22:17:08Z",
        "merged_at": "2021-09-20T22:17:08Z",
        "body": "Some users of my project have requested features which will require custom field options. I've picked some high random ones for now, but it would be good to do this the proper way! I hope you have plenty of address space here.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 268,
        "deletions": 1834,
        "changed_files": 21,
        "created_at": "2021-09-18T00:31:44Z",
        "closed_at": "2021-10-03T22:33:32Z",
        "merged_at": null,
        "body": "Also squashes all current JRuby unit test failures and resets expectations about known conformance test failures to be the super set of Java + Ruby known failures.\r\n\r\nIncludes all changes separately posted under #8954",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2021-09-17T10:08:53Z",
        "closed_at": "2021-09-22T21:25:29Z",
        "merged_at": "2021-09-22T21:25:29Z",
        "body": "Fixes:\r\n  * RUNTIME DESTINATION for protoc TARGET is not given a COMPONENT option",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-09-17T08:07:32Z",
        "closed_at": "2021-09-22T21:13:17Z",
        "merged_at": "2021-09-22T21:13:17Z",
        "body": null,
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-09-16T15:03:01Z",
        "closed_at": "2021-09-23T20:08:54Z",
        "merged_at": null,
        "body": "This file is critical for resolving imports. While python scripts run\r\nfrom within bazel will run correctly without this file being declared,\r\npackaging python sources with transitive deps currently omits this,\r\nleading to broken packages.\r\n\r\nNote that __init__.py is the only file in python/google other than the \"protobuf\" directory which is already globbed over.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-09-16T04:18:52Z",
        "closed_at": "2021-09-22T22:09:39Z",
        "merged_at": "2021-09-22T22:09:39Z",
        "body": "I saw protobuf have some commits which stop testing and building wheels for python2:\r\n\r\nhttps://github.com/protocolbuffers/protobuf/commit/2fbc07b2439c2518a4985972c9e78d07b44603c2\r\nhttps://github.com/protocolbuffers/protobuf/pull/8891\r\n\r\nAnd the codes does not support python2 now: https://github.com/protocolbuffers/protobuf/issues/8984\r\n\r\nSo I think I can assume protobuf does not support python2 for now. I think we should add a `python_requires` field in setup.py, pip and poetry will check this field and fallback to older version if it in python2 environment.",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 126,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2021-09-15T23:19:03Z",
        "closed_at": "2021-10-13T15:49:31Z",
        "merged_at": null,
        "body": "Make `protoc` output the list of suggested field numbers in the form of:\r\n```\r\nSuggested field numbers for cello.fs.FeatureConfig: 6, 34, 35, 36, 37\r\n```\r\nwhen it detects bad field numbers in proto files such as conflicts, use of reserved ranges, protocol specific ranges etc.\r\n\r\nIt suggests the minimal not occupied numbers available in the message.\r\n\r\nThis output can be used to simplify the creation of new fields especially when a large message has the fields grouped semantically, and these fields aren't go in ascent number order. \r\nThis output can be grabbed by IDE or automated tools to resolve conflicts automatically,\r\nThis CL eliminated the necessity of `// next ID: 42` comments in messages.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2021-09-15T21:42:24Z",
        "closed_at": "2021-09-20T11:40:30Z",
        "merged_at": null,
        "body": "@pzd\r\n\r\nThis reverts commit 37b18c5f1205038c848a199060d84989ca5e51a0.\r\n\r\nDiscuss before merging\r\n\r\nfixes #8985",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-09-15T10:53:25Z",
        "closed_at": "2021-09-23T17:02:24Z",
        "merged_at": "2021-09-23T17:02:24Z",
        "body": "Backports https://github.com/protocolbuffers/protobuf/pull/8966.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 29,
        "deletions": 29,
        "changed_files": 4,
        "created_at": "2021-09-15T06:54:28Z",
        "closed_at": "2021-10-21T15:38:15Z",
        "merged_at": null,
        "body": "this change allow to define PROTOBUF_MUST_USE_RESULT as [[nodiscard]], without this change compilations fail. [[nodiscard]] is standardized variant of __attribute__((warn_unused_result))",
        "comments": 12
    },
    {
        "merged": true,
        "additions": 26,
        "deletions": 24,
        "changed_files": 8,
        "created_at": "2021-09-14T18:29:47Z",
        "closed_at": "2021-09-20T23:48:29Z",
        "merged_at": "2021-09-20T23:48:29Z",
        "body": "Introduced in 15.5: https://docs.microsoft.com/en-us/cpp/overview/cpp-conformance-improvements-2017?view=msvc-160#inline-variables\r\n15.5 is 1912: https://docs.microsoft.com/en-us/cpp/preprocessor/predefined-macros?view=msvc-160\r\n\r\nfixes  #8978",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-09-13T22:32:09Z",
        "closed_at": "2021-09-14T16:48:28Z",
        "merged_at": "2021-09-14T16:48:28Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 194,
        "deletions": 110,
        "changed_files": 34,
        "created_at": "2021-09-13T13:07:11Z",
        "closed_at": "2021-09-13T19:49:00Z",
        "merged_at": "2021-09-13T19:49:00Z",
        "body": "Add animal-sniffer plugin to check for android compatibility and revert bad commit that required Objects.nonNull.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-09-11T00:23:31Z",
        "closed_at": "2021-09-13T16:32:42Z",
        "merged_at": "2021-09-13T16:32:42Z",
        "body": "We need to fuse the arrays so that the second array's data stays live.\r\n\r\nFixes: https://github.com/protocolbuffers/protobuf/issues/8420\r\n\r\nI was only able to reproduce the failure under Valgrind. Our Ruby library doesn't have Valgrind tests at the moment, so I didn't add a regression test for now. When we are able to add Valgrind tests, the following snippet triggered the bug:\r\n\r\n```\r\nrequire 'google/protobuf'\r\n\r\nGC.stress = true\r\nx = Google::Protobuf::RepeatedField.new(:string, [])\r\ny = Google::Protobuf::RepeatedField.new(:string, [\"1\", \"2\", \"3\"])\r\nz = x + y\r\ny = nil\r\nputs z[0]\r\n```",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 163,
        "deletions": 72,
        "changed_files": 9,
        "created_at": "2021-09-11T00:02:25Z",
        "closed_at": "2021-09-13T15:43:31Z",
        "merged_at": "2021-09-13T15:43:31Z",
        "body": "This also fixes the keep_descriptor_pool_after_request option, which was not working properly.\r\n\r\nOne effect of this PR is to formally forbid users from constructing their own `DescriptorPool` instances. It isn't possible to support this due to the way that our class name mappings rely on global state. This never truly worked previously anyway.\r\n\r\nFixes: https://github.com/protocolbuffers/protobuf/issues/8454\r\n\r\nI suspect this may also fix https://github.com/protocolbuffers/protobuf/issues/8786",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 461,
        "deletions": 339,
        "changed_files": 31,
        "created_at": "2021-09-10T20:50:20Z",
        "closed_at": "2021-09-14T16:39:58Z",
        "merged_at": "2021-09-14T16:39:58Z",
        "body": "**Important:** this integration must be merged, not squashed",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-09-10T07:59:44Z",
        "closed_at": "2021-09-10T16:53:18Z",
        "merged_at": "2021-09-10T16:53:18Z",
        "body": "This fixes the broken python aarch64 linux tests (see https://source.cloud.google.com/results/invocations/861e900c-12ad-4998-9489-18f5cfbf76ee)\r\n\r\nFor some reason (bad merge?), the changes needed for crosscompiling aarch64 python wheels have been removed in piper import https://github.com/protocolbuffers/protobuf/pull/8902/files#diff-eb8b42d9346d0a5d371facf21a8bfa2d16fb49e213ae7c21f03863accebe0fcfL161.\r\n\r\nThis is actually the second time this happened (see https://github.com/protocolbuffers/protobuf/issues/8667 and the fix https://github.com/protocolbuffers/protobuf/pull/8746). What can we do to make sure this won't happen again?",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 28,
        "deletions": 28,
        "changed_files": 6,
        "created_at": "2021-09-10T05:32:54Z",
        "closed_at": "2021-09-11T02:32:15Z",
        "merged_at": "2021-09-11T02:32:15Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 6,
        "changed_files": 4,
        "created_at": "2021-09-10T04:48:02Z",
        "closed_at": "2021-09-10T16:11:14Z",
        "merged_at": "2021-09-10T16:11:14Z",
        "body": "This switches to new interfaces for `spl_ce_ArrayAccess` and `spl_ce_Countable` (`zend_ce_arrayaccess` and `zend_ce_countable`, respectively). It polyfills `zend_ce_countable` for old versions of PHP.\r\n\r\nThere is also a small fix for the tests to fix the following error:\r\n\r\n```\r\n1) GeneratedClassTest::testMapFieldViaArray\r\nImplicit conversion from float 6.1 to int loses precision\r\n```\r\n\r\nIn PHP float array keys are truncated to integer, and this has nothing to do with protobuf.\r\n\r\nThe pure PHP library may require further fixes to support 8.1. I was not able to resolve those issues at this time.\r\n\r\nFixes: https://github.com/protocolbuffers/protobuf/issues/8711",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 16,
        "changed_files": 1,
        "created_at": "2021-09-10T01:24:19Z",
        "closed_at": "2021-10-12T23:14:07Z",
        "merged_at": "2021-10-12T23:14:07Z",
        "body": "\"Object\" is a reserved word as of PHP 7.2, as stated [here](https://www.php.net/manual/en/reserved.other-reserved-words.php)",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 292,
        "deletions": 653,
        "changed_files": 32,
        "created_at": "2021-09-10T00:48:01Z",
        "closed_at": "2021-09-10T03:54:03Z",
        "merged_at": "2021-09-10T03:54:03Z",
        "body": "This is a partial cherry-pick of https://github.com/protocolbuffers/protobuf/pull/8960",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2958,
        "deletions": 2348,
        "changed_files": 112,
        "created_at": "2021-09-09T15:34:27Z",
        "closed_at": "2021-09-09T22:21:16Z",
        "merged_at": "2021-09-09T22:21:16Z",
        "body": "**Important:** this integration must be merged, not squashed!",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2021-09-09T01:46:45Z",
        "closed_at": "2021-09-10T15:14:38Z",
        "merged_at": "2021-09-10T15:14:38Z",
        "body": "Updated information surrounding the usage of `optional` and the `--experimental_allow_proto3_optional` flag with relevant information between v3.12 & 3.15.\r\n\r\nSince release v3.15:\r\n>  Optional fields for proto3 are enabled by default, and no longer require\r\n>  the --experimental_allow_proto3_optional flag.\r\n\r\nNow the doc infers the feature is implicitly enabled, rather than an experimental flag which was only true up until v3.15.0\r\n\r\nsee notes on optional/`--experimental_allow_proto3_optional` here:\r\n- https://github.com/protocolbuffers/protobuf/releases/tag/v3.15.0\r\n- https://github.com/protocolbuffers/protobuf/releases/tag/v3.12.0",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 19,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2021-09-06T22:03:33Z",
        "closed_at": "2022-05-16T18:12:51Z",
        "merged_at": null,
        "body": "When generating JS code for .proto files which included well-known types\r\nwith the commonjs_strict import style, the generated code would import\r\ngenerated JS code for the well-known types with the commonjs import\r\nstyle (located in the google-protobuf NPM package). This causes several\r\nissues as discussed in protocolbuffers/protobuf-javascript#25.\r\n\r\nThis CL changes this so when using commonjs_strict, the imported\r\ngenerated JS code for well-known types also uses commonjs_strict.\r\n\r\nFixes protocolbuffers/protobuf-javascript#25\r\n\r\n-----\r\n\r\nNote: currently a folder named \"commonjs_strict\" is used to save the generated JS code for well-known types. I'm not fully convinced by this, so please let me know if you know how to improve where to store the generated code for the commonjs_strict mode. Thanks!",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 19,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2021-09-03T22:50:50Z",
        "closed_at": "2021-10-05T18:14:44Z",
        "merged_at": null,
        "body": "Since this is the rake target used by kokoro, this will close the gem release gap for JRuby\r\n\r\nShould help #7923 by making sure JRuby is built and released as part of the normal cadence.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-09-02T20:55:16Z",
        "closed_at": "2021-10-13T00:08:04Z",
        "merged_at": null,
        "body": "closes #8247\r\nThe documentation says `The default behavior is to generate sources for all .proto files found under source_dir, recursively` but this is not working as the issue describes.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-09-01T15:36:05Z",
        "closed_at": "2021-09-01T17:55:56Z",
        "merged_at": "2021-09-01T17:55:55Z",
        "body": "The `VERSION_GREATER_EQUAL` operator was introduced in CMake 3.7.0\r\n(released in 2016).  Use the long form of the check by splitting the\r\noperation into two comparisons to support the older CMake.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 115,
        "deletions": 0,
        "changed_files": 4,
        "created_at": "2021-09-01T12:59:25Z",
        "closed_at": "2022-02-23T16:59:25Z",
        "merged_at": null,
        "body": "The current javascript-protoc is in a state where the setter method is not generated in the map field.\r\nMerging this PR will add a setter method to the map.\r\n\r\n## sample proto\r\n```proto\r\nsyntax = \"proto3\";\r\n\r\npackage book;\r\n\r\nmessage UpdateBooksRequest {\r\n    map<uint64, Book> books = 1;\r\n}\r\n\r\nmessage Book {\r\n    uint64 id = 1;\r\n    string name = 2;\r\n}\r\n\r\n```\r\n\r\n## current `BooksMap` methods\r\n```javascript\r\n/**\r\n * map<uint64, Book> books = 1;\r\n * @param {boolean=} opt_noLazyCreate Do not create the map if\r\n * empty, instead returning `undefined`\r\n * @return {!jspb.Map<number,!proto.book.Book>}\r\n */\r\nproto.book.UpdateBooksRequest.prototype.getBooksMap = function(opt_noLazyCreate) {\r\n  return /** @type {!jspb.Map<number,!proto.book.Book>} */ (\r\n      jspb.Message.getMapField(this, 1, opt_noLazyCreate,\r\n      proto.book.Book));\r\n};\r\n\r\n\r\n/**\r\n * Clears values from the map. The map will be non-null.\r\n * @return {!proto.book.UpdateBooksRequest} returns this\r\n */\r\nproto.book.UpdateBooksRequest.prototype.clearBooksMap = function() {\r\n  this.getBooksMap().clear();\r\n  return this;};\r\n```\r\n\r\n## new `BooksMap` methods\r\n```javascript\r\n/**\r\n * map<uint64, Book> books = 1;\r\n * @param {boolean=} opt_noLazyCreate Do not create the map if\r\n * empty, instead returning `undefined`\r\n * @return {!jspb.Map<number,!proto.book.Book>}\r\n */\r\nproto.book.UpdateBooksRequest.prototype.getBooksMap = function(opt_noLazyCreate) {\r\n  return /** @type {!jspb.Map<number,!proto.book.Book>} */ (\r\n      jspb.Message.getMapField(this, 1, opt_noLazyCreate,\r\n      proto.book.Book));\r\n};\r\n\r\n\r\n/**\r\n * @param {!Object<number,!proto.book.Book>} value\r\n * @return {proto.book.UpdateBooksRequest}\r\n */\r\nproto.book.UpdateBooksRequest.prototype.setBooksMap = function(value) {\r\n  var map = jspb.Message.getMapField(this, 1, false,\r\n      proto.book.Book);\r\n  Object.keys(value).forEach((key) => {\r\n      map.set(key, value[key])\r\n  })\r\n  return this;\r\n};\r\n\r\n\r\n/**\r\n * Clears values from the map. The map will be non-null.\r\n * @return {!proto.book.UpdateBooksRequest} returns this\r\n */\r\nproto.book.UpdateBooksRequest.prototype.clearBooksMap = function() {\r\n  this.getBooksMap().clear();\r\n  return this;};\r\n```",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 14,
        "deletions": 26,
        "changed_files": 1,
        "created_at": "2021-09-01T11:17:42Z",
        "closed_at": "2021-09-01T17:57:48Z",
        "merged_at": null,
        "body": "Reverts protocolbuffers/protobuf#8851\r\n\r\nSee https://github.com/protocolbuffers/protobuf/pull/8851#issuecomment-910184367 for details.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 85,
        "deletions": 79,
        "changed_files": 20,
        "created_at": "2021-09-01T09:45:16Z",
        "closed_at": "2021-09-20T22:41:19Z",
        "merged_at": "2021-09-20T22:41:19Z",
        "body": null,
        "comments": 5
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2021-09-01T09:41:08Z",
        "closed_at": "2021-09-01T11:23:41Z",
        "merged_at": "2021-09-01T11:23:41Z",
        "body": "Currently ARM64 tests are broken for C++, java, javascript, python, php and ruby (e.g. https://source.cloud.google.com/results/invocations/33696bce-f922-4572-bc3e-9a369ce3d721)\r\nPinning dockcross image to a version that's known to work fixes them and also avoid issues with the tests suddenly breaking in the future.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-09-01T00:10:19Z",
        "closed_at": "2021-09-01T01:13:20Z",
        "merged_at": "2021-09-01T01:13:20Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 28,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2021-08-31T23:02:45Z",
        "closed_at": "2021-10-21T21:17:20Z",
        "merged_at": "2021-10-21T21:17:20Z",
        "body": "We already pre-compile the well known types into the runtimes so they shouldn't be re-compiled. #8925.",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 40,
        "deletions": 21,
        "changed_files": 2,
        "created_at": "2021-08-31T19:21:05Z",
        "closed_at": "2021-08-31T21:14:45Z",
        "merged_at": "2021-08-31T21:14:45Z",
        "body": "* Addresses duplicates identified in #8925\r\n\r\njava_export aliases the rule name to the full maven_project_jar which consolidates all deps into a merged jar. This is not what we want for Bazel users.\r\n\r\n* Update :util to match",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 40,
        "deletions": 21,
        "changed_files": 2,
        "created_at": "2021-08-31T17:01:07Z",
        "closed_at": "2021-08-31T19:14:12Z",
        "merged_at": "2021-08-31T19:14:12Z",
        "body": "java_export aliases the rule name to the full maven_project_jar which consolidates all deps into a merged jar. This is not what we want for Bazel users.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2021-08-31T06:04:09Z",
        "closed_at": "2021-08-31T15:49:35Z",
        "merged_at": "2021-08-31T15:49:35Z",
        "body": "This fixes a regression introduced in https://github.com/protocolbuffers/protobuf/pull/8850. The new DSL code was not accepting an `options` parameter for repeated fields, which made the generated code fail to load when options such as `json_name` were present.\r\n\r\nFixes: https://github.com/protocolbuffers/protobuf/issues/8935",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2021-08-30T16:19:35Z",
        "closed_at": "2021-08-30T20:39:33Z",
        "merged_at": "2021-08-30T20:39:33Z",
        "body": "Fix warning about using potentially uninitialized variables in `AllocateFieldNames` and `AllocRawInternal`",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-08-29T22:23:39Z",
        "closed_at": "2021-09-13T19:27:50Z",
        "merged_at": "2021-09-13T19:27:50Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-08-29T22:22:51Z",
        "closed_at": "2021-09-13T19:30:10Z",
        "merged_at": "2021-09-13T19:30:10Z",
        "body": " decimal digit terminates octal escape sequence",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 11,
        "changed_files": 1,
        "created_at": "2021-08-29T22:22:26Z",
        "closed_at": "2021-09-01T17:03:40Z",
        "merged_at": "2021-09-01T17:03:40Z",
        "body": null,
        "comments": 2
    },
    {
        "merged": true,
        "additions": 36,
        "deletions": 37,
        "changed_files": 13,
        "created_at": "2021-08-29T22:21:14Z",
        "closed_at": "2021-09-13T19:26:55Z",
        "merged_at": "2021-09-13T19:26:55Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-08-28T02:45:16Z",
        "closed_at": "2021-08-30T21:53:33Z",
        "merged_at": "2021-08-30T21:53:33Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 38,
        "deletions": 23,
        "changed_files": 21,
        "created_at": "2021-08-27T21:43:30Z",
        "closed_at": "2021-08-27T22:50:56Z",
        "merged_at": "2021-08-27T22:50:56Z",
        "body": null,
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 39,
        "changed_files": 8,
        "created_at": "2021-08-27T21:20:01Z",
        "closed_at": "2021-08-27T22:50:17Z",
        "merged_at": "2021-08-27T22:50:17Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 26,
        "deletions": 20,
        "changed_files": 2,
        "created_at": "2021-08-27T13:29:09Z",
        "closed_at": "2021-09-03T16:24:33Z",
        "merged_at": "2021-09-03T16:24:32Z",
        "body": "The continuous benchmark run is currently broken (see e.g. https://source.cloud.google.com/results/invocations/cc45a56f-54fb-440a-84ec-c2caa1bfb925), this PR makes it green again (and also removes some technical debt along the way, or at least adds comments to places that need some work in the future).",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2021-08-27T08:32:19Z",
        "closed_at": "2021-08-30T16:20:42Z",
        "merged_at": "2021-08-30T16:20:42Z",
        "body": "This allows users to not have to disable certain warnings (e.g. 4127 on MSVC)",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 13,
        "changed_files": 2,
        "created_at": "2021-08-26T22:38:34Z",
        "closed_at": "2021-08-27T20:52:27Z",
        "merged_at": "2021-08-27T20:52:27Z",
        "body": "1. No longer needs devtoolset-2-libatomic-devel (not available from manylinux2014)\r\n2. The latest manylinux2014-aarch64 has link error. Point to a previous version.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2021-08-26T22:21:31Z",
        "closed_at": "2021-08-27T21:39:03Z",
        "merged_at": "2021-08-27T21:39:03Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 36,
        "changed_files": 7,
        "created_at": "2021-08-26T18:32:26Z",
        "closed_at": "2021-08-26T22:06:31Z",
        "merged_at": "2021-08-26T22:06:31Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2021-08-26T17:57:25Z",
        "closed_at": "2021-08-27T22:41:58Z",
        "merged_at": "2021-08-27T22:41:58Z",
        "body": "Fixes #8904 ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2021-08-26T17:28:59Z",
        "closed_at": "2021-09-15T19:10:59Z",
        "merged_at": "2021-09-15T19:10:59Z",
        "body": "fixes #8745  @acozzette",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2021-08-26T14:47:50Z",
        "closed_at": "2021-08-27T20:50:59Z",
        "merged_at": "2021-08-27T20:50:59Z",
        "body": "This should fix the Python release CI test.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2021-08-26T13:42:43Z",
        "closed_at": "2021-08-30T20:55:43Z",
        "merged_at": "2021-08-30T20:55:43Z",
        "body": "@acozzette ",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 53,
        "deletions": 35,
        "changed_files": 3,
        "created_at": "2021-08-26T08:16:15Z",
        "closed_at": "2022-02-07T23:17:24Z",
        "merged_at": null,
        "body": "A lot of methods in the library (for example: Message interface) return bool to identify existing of errors during method processing. Ignoring return value of this methods is very common and hard detectable error. The added macro add standertized attribute for functions, that lead to 'ignoring return value' warning. Very useful with -Werror. To diable this check (in case of upgrade to new release of protocolbufers during vendoring) just change port_def.inc file or add -Wno-unused-result to your c++ compiling flags.",
        "comments": 33
    },
    {
        "merged": true,
        "additions": 2144,
        "deletions": 1400,
        "changed_files": 141,
        "created_at": "2021-08-25T20:12:13Z",
        "closed_at": "2021-08-26T14:38:10Z",
        "merged_at": "2021-08-26T14:38:09Z",
        "body": "**Important:** this integration must be merged, not squashed",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-08-25T02:25:19Z",
        "closed_at": "2021-08-25T03:52:39Z",
        "merged_at": "2021-08-25T03:52:39Z",
        "body": null,
        "comments": 1
    },
    {
        "merged": true,
        "additions": 24,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2021-08-24T19:03:16Z",
        "closed_at": "2021-10-13T16:36:22Z",
        "merged_at": "2021-10-13T16:36:22Z",
        "body": "@fowles first pass at some of the content we discussed this morning",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1341,
        "deletions": 878,
        "changed_files": 83,
        "created_at": "2021-08-20T22:16:40Z",
        "closed_at": "2021-08-25T19:26:24Z",
        "merged_at": null,
        "body": "**Important:** this integration must be merged, not squashed",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-08-20T03:03:28Z",
        "closed_at": "2021-08-20T15:48:43Z",
        "merged_at": "2021-08-20T15:48:43Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2021-08-20T02:27:01Z",
        "closed_at": "2021-08-20T15:49:09Z",
        "merged_at": "2021-08-20T15:49:08Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2021-08-19T12:41:50Z",
        "closed_at": "2021-08-26T16:12:56Z",
        "merged_at": "2021-08-26T16:12:56Z",
        "body": "@TeBoring",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 26,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-08-19T01:45:27Z",
        "closed_at": "2021-08-19T16:35:07Z",
        "merged_at": "2021-08-19T16:35:07Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 74,
        "deletions": 59,
        "changed_files": 34,
        "created_at": "2021-08-18T22:28:02Z",
        "closed_at": "2021-08-19T00:20:21Z",
        "merged_at": "2021-08-19T00:20:21Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2893,
        "deletions": 2532,
        "changed_files": 64,
        "created_at": "2021-08-18T16:33:24Z",
        "closed_at": "2021-08-18T19:59:08Z",
        "merged_at": "2021-08-18T19:59:08Z",
        "body": "**Important:** this integration must be merged, not squashed!",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-08-16T11:33:41Z",
        "closed_at": "2021-09-13T17:34:14Z",
        "merged_at": null,
        "body": "This makes RepeatedPtrField behavior similar to RepeatedField.\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-08-15T19:31:17Z",
        "closed_at": "2021-08-30T17:26:05Z",
        "merged_at": null,
        "body": "Probably pedantic, but with a file named '...tar.gz' this script seems to do a\r\n\r\n```\r\nchmod -R u+w ..\r\ncd ..\r\n\r\n# etc..\r\n```\r\nWhich I think should be prevented.",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2021-08-13T23:37:43Z",
        "closed_at": "2021-08-16T19:37:50Z",
        "merged_at": "2021-08-16T19:37:50Z",
        "body": "Fixes the recursive symlink error we were seeing by adding the _build directory to .bazelignore. Also removes the php workaround that was added to fix this problem.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2021-08-12T22:02:04Z",
        "closed_at": "2022-02-04T18:23:27Z",
        "merged_at": null,
        "body": null,
        "comments": 2
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-08-12T21:16:16Z",
        "closed_at": "2021-08-13T20:32:59Z",
        "merged_at": "2021-08-13T20:32:59Z",
        "body": "MSVC warns about that flag since it's not in the format it expects, and\r\nthe flag seems to be unnecessary anyway.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 32,
        "deletions": 0,
        "changed_files": 5,
        "created_at": "2021-08-12T16:22:45Z",
        "closed_at": "2021-08-12T17:38:59Z",
        "merged_at": null,
        "body": null,
        "comments": 4
    },
    {
        "merged": false,
        "additions": 55,
        "deletions": 0,
        "changed_files": 5,
        "created_at": "2021-08-09T20:21:37Z",
        "closed_at": "2022-02-04T18:24:05Z",
        "merged_at": null,
        "body": "Adding a bazel build file to the java/kotlin package so that it can be imported, see #8867 for more information on the request.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-08-06T23:01:55Z",
        "closed_at": "2021-10-14T22:15:20Z",
        "merged_at": "2021-10-14T22:15:20Z",
        "body": "The current implementation uses `Function('return this')()` to get the global object. This does not work if you are using protobuf on the web and you disallow `unsafe-eval` with a CSP header.\r\n\r\nThis PR changes the way the global object is retrieved: it calls a function and sets `this` to the global object by calling it with `.call(null)`. Then `this` is returned. \r\nSee: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/call#parameters\r\n\r\nNote: this won't work when you are using js strict mode (`use strict`). \r\nIf running in strict mode, it will use different fallbacks (that work with CSP settings that disallow eval), if none work it will fall back to the current way of getting the global object.\r\n\r\nThis fixes:\r\n- https://github.com/protocolbuffers/protobuf/issues/5464\r\n- https://github.com/protocolbuffers/protobuf/issues/6770\r\n- protocolbuffers/protobuf-javascript#25 (partially, only the CSP part)\r\n\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 12,
        "changed_files": 5,
        "created_at": "2021-08-03T20:39:12Z",
        "closed_at": "2021-08-04T16:22:00Z",
        "merged_at": "2021-08-04T16:22:00Z",
        "body": "This warning is enabled in Fuchsia, and appeasing it is quite trivial.\r\n\r\n@haberman @fowles ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 28221,
        "deletions": 20696,
        "changed_files": 251,
        "created_at": "2021-08-03T19:58:53Z",
        "closed_at": "2021-08-09T22:55:00Z",
        "merged_at": "2021-08-09T22:55:00Z",
        "body": "**Important:** this integration must be merged, not squashed",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 11,
        "changed_files": 1,
        "created_at": "2021-08-03T06:49:14Z",
        "closed_at": "2021-10-14T22:02:22Z",
        "merged_at": "2021-10-14T22:02:21Z",
        "body": "Resolves #8855 \r\n\r\nThis is a minimal fix for the problem reported in the above issue. I added a simplistic check whether the exports variable is an object to be filled. This eliminates the error without making big changes to really extend to an UMD. Proper UMD support (also in the generated code) would likely need a bigger change in code consisting of changes in the file structure, code generator (protoc), tests etc. \r\n\r\nMy primary goal is to eliminate the browser error. ",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 2069,
        "deletions": 1051,
        "changed_files": 17,
        "created_at": "2021-08-02T22:50:57Z",
        "closed_at": "2021-08-03T20:05:05Z",
        "merged_at": "2021-08-03T20:05:05Z",
        "body": "Pulling in upb https://github.com/protocolbuffers/upb/pull/403.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3295,
        "deletions": 4,
        "changed_files": 4,
        "created_at": "2021-08-01T09:47:20Z",
        "closed_at": "2021-08-13T23:21:19Z",
        "merged_at": null,
        "body": "add explanation in README file",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 26,
        "deletions": 14,
        "changed_files": 1,
        "created_at": "2021-07-31T23:11:21Z",
        "closed_at": "2021-08-28T20:37:36Z",
        "merged_at": "2021-08-28T20:37:36Z",
        "body": "When using a new enough CMake (3.15+) prefer to use the\r\n`MSVC_RUNTIME_LIBRARY` property on targets to select the runtime\r\nlibrary variant.  This property is automatically set to the value\r\nspecified by `CMAKE_MSVC_RUNTIME_LIBRARY`.  This proper requires that\r\nthe CMake Policy 91 is set to new (see CMP0091).",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 521,
        "deletions": 1419,
        "changed_files": 9,
        "created_at": "2021-07-31T19:47:39Z",
        "closed_at": "2021-08-02T21:50:35Z",
        "merged_at": "2021-08-02T21:50:35Z",
        "body": "The Ruby DSL for defining a protobuf schema has always been implemented in C. Originally this was necessary, because upb could not consume descriptors directly. However for several years now the ultimate output of the DSL is just a protobuf (`FileDescriptorProto`), so the DSL could just as easily be implemented in Ruby.\r\n\r\nThis PR removes 1,352 lines of code from C and reimplements them as ~400 lines of Ruby. This will have the following benefits:\r\n\r\n- Reduces our overall C footprint, reducing the chance of SIGSEGV bugs (such as https://github.com/protocolbuffers/protobuf/issues/8842 which is a recent SEGV crash bug in the DSL).\r\n- Reduces our overall line count and maintenance burden.\r\n- Makes it possible to share the DSL code between MRI and JRuby.\r\n\r\nIt is possible that this PR will have some amount of performance regression in the startup time required to load generated `foo_pb.rb` files, since the DSL is evaluated using Ruby instead of C. However, the DSL was already calling back and forth between C and Ruby a lot, so hopefully the impact will not be too large. In any case, there are ways of mitigating this if it becomes an issue (see below).\r\n\r\nThis change requires us to add a new method `DescriptorPool#add_serialized_file`, which allows for defining messages using a serialized descriptor proto instead of the DSL. This is necessary to bootstrap `google/protobuf/descriptor_pb.rb`, which cannot use the DSL as these protos are used to implement the DSL.\r\n\r\n## Future Directions\r\n\r\nIn the future we may want to change the code generator to use `DescriptorPool#add_serialized_file` for all generated files, instead of the DSL. This would have the following benefits:\r\n\r\n- **Performance:** loading from a serialized descriptor will avoid the CPU cost of evaluating the DSL. For large schemas with many proto files, this could have a noticeable impact on app startup time.\r\n- **Correctness/completeness:** as we continue to implement missing features in Ruby protobuf, particularly [custom options](https://github.com/protocolbuffers/protobuf/issues/1198), the DSL will become more and more of a hindrance. Custom options have some very difficult edge cases that would be nearly impossible to accommodate in the DSL unless we resort to serialized descriptors at some level. Using binary descriptors avoids all of this complication.\r\n\r\nThere are various options for how we could keep the generated code readable, even if we move to binary descriptors. For example, we could do something like:\r\n\r\n```ruby\r\nif false\r\n  # Code for IDEs and human readers.\r\n  class FooMessage\r\n    attr_accessor :bar_field,\r\n    attr_accessor :baz_field\r\n  end\r\nelse\r\n  # Code that is actually executed, implements semantics equivalent to the above.\r\n  Google::Protobuf::DescriptorPool.generated_pool.add_serialized_file(\"<unreadable binary data>\")\r\n  FooMessage = Google::Protobuf::DescriptorPool.generated_pool.lookup(\"FooMessage\").msgclass\r\nend\r\n```\r\n\r\nSince this will require some input and dialogue about what is the best fit for the Ruby community, I'm leaving this out of the current PR.\r\n\r\nThe DSL will continue to be available no matter what, since we've exposed it already as a public API.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-07-30T22:04:25Z",
        "closed_at": "2021-08-06T15:08:33Z",
        "merged_at": "2021-08-06T15:08:33Z",
        "body": "This allows these files to be used in [stardoc](https://github.com/bazelbuild/stardoc) docs generation.",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 22,
        "deletions": 15,
        "changed_files": 13,
        "created_at": "2021-07-30T10:18:26Z",
        "closed_at": "2021-08-02T22:55:20Z",
        "merged_at": null,
        "body": "This change is requested to facilitate use of this software in Fuchsia.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 8,
        "changed_files": 4,
        "created_at": "2021-07-29T14:16:26Z",
        "closed_at": "2021-08-01T07:30:41Z",
        "merged_at": "2021-08-01T07:30:40Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-07-29T06:31:48Z",
        "closed_at": "2021-10-13T17:05:56Z",
        "merged_at": null,
        "body": "Different versions of python (confirmed 3.7 & 3.8) can have unpredictable behavior for the builtin `isinstance()` method. Particularly when the instance was initialized using a class definition with subtle differences in how it was imported when compared to the class definition used at the time of the `isinstance()` check.\r\n\r\nI believe this is because the subsequent import of the same class actually overwrites the previous import. This change can be illustrated by seeing the change in id when overwriting a class in the same file.\r\n```py\r\nclass fooclass:\r\n    pass\r\n\r\na = fooclass()\r\n\r\nclass fooclass:\r\n    pass\r\n\r\nb = fooclass()\r\n\r\nprint(id(a.__class__))\r\n# 140479596517648\r\n\r\nprint(id(b.__class__))\r\n# 140479596518592\r\n```\r\n\r\nThis PR softens that validation by instead only checking that the class name matches. This will resolve cases where users ran into this failure and received a confusing exception such as in #7408 which saw `TypeError: Parameter to MergeFrom() must be instance of same class: expected Route got Route.` or in my case where I saw `TypeError: Parameter to MergeFrom() must be instance of same class: expected google.protobuf.Timestamp got google.protobuf.Timestamp.`.\r\n\r\n## Current workaround solution\r\nTo get the exact same class definition of Timestamp without having the isinstance check fail, the user can import Timestamp in an indirect way from the import that occurred in the code files generated from the protobuf file.\r\n\r\nAs an example, say you get a `foo_client` with a single `fooservice` defined, in your code you'd use the generated code with something similar to this: \r\n```py\r\nimport foo_client_py.pb.fooservice_pb2 as pb\r\n```\r\n\r\nIf you need to use an object from timestamp_pb2 for example, instead of importing it using...\r\n```py\r\nfrom google.protobuf.timestamp_pb2 import Timestamp\r\n\r\nt = Timestamp()\r\nt.GetCurrentTime()\r\n```\r\n...you can piggy back on the import of timestamp_pb2 that's already in the generated code. In other words, use...\r\n```py\r\nfrom foo_client_py.pb.google.protobuf.timestamp_pb2 import Timestamp\r\n\r\nt = Timestamp()\r\nt.GetCurrentTime()\r\n```\r\nThis allows the isinstance to pass, essentially because you are using the exact same **location** of the class definition so the ids for the classes will match.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 49,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2021-07-26T10:40:23Z",
        "closed_at": "2021-08-03T16:53:24Z",
        "merged_at": "2021-08-03T16:53:24Z",
        "body": "while using proto2 with optional and default keyword, it always return string, so fix it\r\n\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-07-25T23:45:49Z",
        "closed_at": "2021-07-26T18:11:02Z",
        "merged_at": "2021-07-26T18:11:02Z",
        "body": "We've open-sourced the protokt code generator under a different GitHub organization than originally planned.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-07-22T15:18:10Z",
        "closed_at": "2021-07-27T12:09:44Z",
        "merged_at": null,
        "body": "NB: There is ONE BIG IF in this PR. I will understand if this PR will not be accepted.\r\n\r\nAt the time RepeatedPtrField<string> is implicitly constructible in the following case if string is constructible from char:\r\n```\r\nRepeatedPtrField<string> vector({\"first\", \"second\"});\r\n```\r\n\r\nThough std::string is not constructible from single char, we use custom string type internally and this code gives us problem. I think there are also more valid cases where such syntax will break.\r\n\r\nI have copied the idea from libc++ implementation of std::vector.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 31,
        "deletions": 31,
        "changed_files": 1,
        "created_at": "2021-07-20T23:55:11Z",
        "closed_at": "2021-07-26T22:19:01Z",
        "merged_at": "2021-07-26T22:19:01Z",
        "body": "GitHub supports syntax highlighting for code blocks inside MD files.\r\n\r\nhttps://docs.github.com/en/github/writing-on-github/working-with-advanced-formatting/creating-and-highlighting-code-blocks#syntax-highlighting",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-07-19T18:53:11Z",
        "closed_at": "2021-10-12T23:57:42Z",
        "merged_at": null,
        "body": "According to the [CMake doc](https://cmake.org/cmake/help/latest/prop_tgt/CXX_EXTENSIONS.html#prop_tgt:CXX_EXTENSIONS), CMAKE_CXX_EXTENSIONS must be set to ON to match -std=gnu++11 instead of -std=c++11.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 60,
        "deletions": 60,
        "changed_files": 14,
        "created_at": "2021-07-19T11:14:50Z",
        "closed_at": "2021-07-29T21:05:01Z",
        "merged_at": "2021-07-29T21:05:01Z",
        "body": "Apparently, #8532 was incorrect if applied to 3.17.x branch.\r\n\r\n3.17.x changed code generation to mark `SharedCtor()` and `SharedDtor()` as inline in .pb.cc.\r\n\r\nIt looks like we have a compile-time undefined behavior in C++ now. As cppreference.com [says](https://en.cppreference.com/w/cpp/language/inline):\r\n\r\n_The definition of an inline function <...> must be reachable in the translation unit where it is accessed (not necessarily before the point of access)._\r\n\r\nAs protobuf allows custom plugins to generate custom code, there is no limitation on where SharedCtor couble be possible referenced from. In our case we have SharedCtor invoked from corresponding `.pb.h` code, thus triggering:\r\n```\r\nld: error: undefined symbol: package::Message::SharedCtor()`\r\n>>> referenced by file.pb.h:$$$$\r\n```\r\n\r\nIf this patch is not applicable, I can take a look into changing the code generation, but doing this will be harder than removing _inline_.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-07-17T07:09:03Z",
        "closed_at": "2021-10-13T00:03:24Z",
        "merged_at": "2021-10-13T00:03:24Z",
        "body": "Cannot find any occurrence of `require 'rubygems/tasks` or `Gem::Tasks` in the source code, so I am confident that this development dependency can safely be removed (even though I may be a little biased in favor of using [rubygems-tasks](https://github.com/postmodern/rubygems-tasks)).",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2021-07-16T17:49:32Z",
        "closed_at": "2021-07-16T19:26:10Z",
        "merged_at": "2021-07-16T19:26:10Z",
        "body": "\u2026cess_listener.cc\r\n\r\nIn an earlier change I moved field_access_listener.cc from the lite\r\nruntime to the full runtime in the CMake configuration, but this caused\r\n//:build_files_updated_unittest to start failing because it expects all\r\nthree build systems to be consistent. To fix that, I updated the\r\nAutomake configuration and then ran ./update_file_lists.sh to propagate\r\nthat change to the other configs.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2021-07-16T10:19:02Z",
        "closed_at": "2021-07-26T22:19:44Z",
        "merged_at": "2021-07-26T22:19:44Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2021-07-16T07:48:47Z",
        "closed_at": "2021-09-13T19:26:05Z",
        "merged_at": "2021-09-13T19:26:05Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2021-07-14T06:56:58Z",
        "closed_at": "2022-02-09T18:30:16Z",
        "merged_at": null,
        "body": "Hi there, I add the case where with a proto like the following, the ruby implementation would breal with the following exception: `optional': wrong argument type Hash (expected String) (TypeError)`.\r\n\r\n``` proto\r\nmessage TestJsonName {\r\n  int32 value = 1 [json_name = \"CustomJsonName\"];\r\n  oneof jsonname_oneof {\r\n    string name = 2 [json_name = \"OneOfCustomJsonName\"];\r\n  }\r\n }\r\n```\r\n\r\nThis pull-request should fix this issue.\r\n\r\nCheers!",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 18643,
        "deletions": 14581,
        "changed_files": 175,
        "created_at": "2021-07-13T20:06:28Z",
        "closed_at": "2021-08-29T12:35:46Z",
        "merged_at": null,
        "body": "**Important:** this integration must be merged, not squashed!",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2021-07-13T05:41:54Z",
        "closed_at": "2021-07-13T22:25:01Z",
        "merged_at": "2021-07-13T22:25:01Z",
        "body": "Fixes https://github.com/protocolbuffers/protobuf/issues/8804 (\"Generated Kotlin files cause compilation to fail on Kotlin/JVM 1.5 with progressive mode enabled\").\r\n\r\n`@JvmField` on private properties is incorrect behaviour in Kotlin (see https://kotlinlang.org/docs/java-to-kotlin-interop.html#instance-fields), but doesn't seem to have caused compilation errors until Kotlin 1.5 + progressive mode.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2021-07-12T00:38:13Z",
        "closed_at": "2021-08-19T21:26:34Z",
        "merged_at": null,
        "body": "Update convenience method ToByteArray() to use the new API.\r\n\r\nSample benchmark serializing a tiny protobuf message,\r\n|                        Method |     Mean |    Error |   StdDev |  Gen 0 | Gen 1 | Gen 2 | Allocated |\r\n|------------------------------ |---------:|---------:|---------:|-------:|------:|------:|----------:|\r\n| ToByteArray_CodedOutputStream | 76.82 ns | 1.079 ns | 1.009 ns | 0.0279 |     - |     - |      88 B |\r\n|           ToByteArray_WriteTo | 53.73 ns | 0.833 ns | 0.779 ns | 0.0076 |     - |     - |      24 B |",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 90,
        "deletions": 1430,
        "changed_files": 13,
        "created_at": "2021-07-09T21:15:30Z",
        "closed_at": "2021-07-12T13:47:16Z",
        "merged_at": "2021-07-12T13:47:16Z",
        "body": "This reverts commit ca3674b7d5f76299138ca635fa9c02e01e0fdf76.\r\n\r\nWhile there are savings, it ends up being to easy/common to run into issues with\r\nAppStore validation since the selector usage now appears to be a possible match\r\nfor private apis vs. for selectors/properties in the generated code.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 47,
        "deletions": 43,
        "changed_files": 1,
        "created_at": "2021-07-08T02:00:04Z",
        "closed_at": "2021-07-08T19:54:09Z",
        "merged_at": "2021-07-08T19:54:09Z",
        "body": "See #8787  and #7268",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2021-07-08T00:16:32Z",
        "closed_at": "2021-07-08T16:05:05Z",
        "merged_at": "2021-07-08T16:05:05Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 14,
        "changed_files": 2,
        "created_at": "2021-07-06T08:48:02Z",
        "closed_at": "2021-07-09T21:07:36Z",
        "merged_at": "2021-07-09T21:07:36Z",
        "body": "It has been deprecated for at least 3 years.\r\nWorse backward incompatible things have happened during this period.\r\n\r\nI think this method could be safely removed, as the client code fix is trivial.",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-07-06T02:02:21Z",
        "closed_at": "2021-07-07T18:45:16Z",
        "merged_at": null,
        "body": "added a null check to equals implementation so that it matches the method's contract",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 12,
        "changed_files": 4,
        "created_at": "2021-07-05T19:49:34Z",
        "closed_at": "2021-10-27T18:28:22Z",
        "merged_at": "2021-10-27T18:28:22Z",
        "body": "Remove extra spaces which cause incorrect indentation in godoc.\r\nRemove the \"====\" style title which is not rendered by godoc.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2021-07-03T21:20:13Z",
        "closed_at": "2021-07-21T21:46:41Z",
        "merged_at": null,
        "body": "Confirmed it worked via (previously failing)\r\n```\r\nbazel test //:build_files_updated_unittest\r\n```",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2021-07-02T19:25:16Z",
        "closed_at": "2021-07-08T00:22:34Z",
        "merged_at": "2021-07-08T00:22:34Z",
        "body": "Go generated code does not have Has methods.\r\n\r\nRemove extraneous parentheses and semicolons.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2021-07-02T17:29:01Z",
        "closed_at": "2021-07-07T20:02:34Z",
        "merged_at": "2021-07-07T20:02:34Z",
        "body": "How did the tests pass without this??\r\n\r\nSee #7268 ",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-07-01T16:54:35Z",
        "closed_at": "2021-10-13T16:13:18Z",
        "merged_at": "2021-10-13T16:13:18Z",
        "body": "This PR fixes #8247.\r\nThe documentation says `The default behavior is to generate sources for all .proto files found under source_dir, recursively` but this is not working as the issue describes.",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 64,
        "deletions": 54,
        "changed_files": 1,
        "created_at": "2021-06-29T20:45:52Z",
        "closed_at": "2021-06-30T16:51:06Z",
        "merged_at": "2021-06-30T16:51:05Z",
        "body": "- Accept \"-\" as the expected prefixes file and turn off all validations of\r\n  prefixes (even the Apple conventions).\r\n- Reflow some of the prefix checks to hopefully make things a little easier\r\n  to follow.\r\n- Don't print warnings about updates to the expected prefix file until there is\r\n  a file.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 40,
        "deletions": 6,
        "changed_files": 3,
        "created_at": "2021-06-28T20:35:46Z",
        "closed_at": "2021-06-28T21:38:25Z",
        "merged_at": "2021-06-28T21:38:25Z",
        "body": "This just makes it easier for our build scripts to use a single entrypoint to produce all the required content:\r\n\r\n```\r\n$ bazel build //java:release\r\nINFO: Analyzed target //java:release (0 packages loaded, 0 targets configured).\r\nINFO: Found 1 target...\r\nTarget //java:release up-to-date:\r\n  bazel-bin/java/core/core-pom.xml\r\n  bazel-bin/java/core/core-project-src.jar\r\n  bazel-bin/java/core/core-docs.jar\r\n  bazel-bin/java/core/core-project.jar\r\n  bazel-bin/java/core/lite-pom.xml\r\n  bazel-bin/java/core/lite-project-src.jar\r\n  bazel-bin/java/core/lite-docs.jar\r\n  bazel-bin/java/core/lite-project.jar\r\n  bazel-bin/java/util/util-pom.xml\r\n  bazel-bin/java/util/util-project-src.jar\r\n  bazel-bin/java/util/util-docs.jar\r\n  bazel-bin/java/util/util-project.jar\r\n```",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2021-06-28T20:31:37Z",
        "closed_at": "2021-06-28T23:07:28Z",
        "merged_at": "2021-06-28T23:07:28Z",
        "body": "This should fix #8768. The field access listener code can't build\r\nsuccessfully as part of protobuf-lite because it relies on descriptors.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-06-28T16:39:01Z",
        "closed_at": "2021-09-13T19:33:22Z",
        "merged_at": null,
        "body": "Per @pcj's Notice on the original repo from Oct 25 2018",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-06-26T15:26:24Z",
        "closed_at": "2021-06-28T18:52:55Z",
        "merged_at": "2021-06-28T18:52:54Z",
        "body": "I've requested a block of 5 extension numbers. We already have two concrete extensions that we need ids for. Our project is under active development and we can imagine a number of other extensions that we will want in future, so we thought we'd start by registering a block of 5, instead of raising a new PR here each time we need a new one.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 99,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2021-06-25T23:39:28Z",
        "closed_at": "2021-06-26T04:23:59Z",
        "merged_at": "2021-06-26T04:23:59Z",
        "body": "By cherry-picking #8757 we will be able to build artifacts for Python 3.8 and Python 3.9 on Windows.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-06-25T21:09:04Z",
        "closed_at": "2021-06-28T17:40:17Z",
        "merged_at": "2021-06-28T17:40:17Z",
        "body": "protobuf_version.bzl was recently added to export the version of protobuf to different BUILD files. This PR adds it to the list of files that are automatically updated by update_version.py when the version of protobuf is updated.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 27,
        "deletions": 26,
        "changed_files": 7,
        "created_at": "2021-06-25T21:06:13Z",
        "closed_at": "2021-09-03T18:56:49Z",
        "merged_at": "2021-09-03T18:56:48Z",
        "body": "This adds TYPE_INT32 to the set of 32-bit varint types when selecting a size, along with SINT32 and UINT32. Messages with int32 fields would use ReadVarint64, which would trigger compiler warnings on MSVC. ",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2021-06-25T09:20:56Z",
        "closed_at": "2022-02-07T22:59:45Z",
        "merged_at": null,
        "body": "At the time an attempt to parse `proto3` message from `b\"data\"` will silently exit reporting success.\r\n\r\nAt least in protobuf=3.4.x this resulted in DecodeError.",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2021-06-24T18:23:03Z",
        "closed_at": "2021-06-25T17:13:43Z",
        "merged_at": "2021-06-25T17:13:43Z",
        "body": "Only run maven kotlin tests when testing jdk8. The kotlin failure was causing the install to error out, which was stopping a local jar from being made which then caused more bugs. ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 234,
        "deletions": 27,
        "changed_files": 5,
        "created_at": "2021-06-23T19:10:06Z",
        "closed_at": "2021-06-24T20:09:41Z",
        "merged_at": "2021-06-24T20:09:41Z",
        "body": "This likely should have been the default from the start, as without it is way to\r\ncommon to get symbol collisions between different proto files. It would be nice\r\nto support a \"migration\" mode where both names are created to aid it moving code\r\nto this model, but with ObjC `@class` decls being very common to avoid header\r\nimports to control rebuilds/etc., it doesn't work as an `@class` usage will\r\nerror if one also uses `@compatibility_alias`. Falling back to `#define` the two\r\ntogether also doesn't work as the header with the `@class` will cause methods to\r\nget defined with one interface, but when methods taking those types are define\r\nwill likely #import the generate header and thus get the define and end up with\r\na different signature. So for now, there is no migration support and code has to\r\nbe updated in one shot with enable the new prefixing.\r\n\r\n- Add a generation option to enable this change in generation.\r\n- Add a second generation option to provide a list of proto package that are\r\n  exceptions from using the proto package. This allows easier\r\n  migration/updating of code one package at a time.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 24,
        "deletions": 21,
        "changed_files": 5,
        "created_at": "2021-06-23T10:54:02Z",
        "closed_at": "2021-07-12T18:47:04Z",
        "merged_at": "2021-07-12T18:47:03Z",
        "body": "Fixes #8264",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 99,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2021-06-23T04:02:05Z",
        "closed_at": "2021-06-23T05:40:30Z",
        "merged_at": "2021-06-23T05:40:30Z",
        "body": "kokoro GCP_WINDOWS does not have python38/39. Install them before build the artifacts\r\n\r\nfixes #7765",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-06-22T17:39:38Z",
        "closed_at": "2021-06-22T18:48:33Z",
        "merged_at": "2021-06-22T18:48:33Z",
        "body": "Fixes #8754.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2021-06-21T23:39:25Z",
        "closed_at": "2021-06-22T16:35:30Z",
        "merged_at": "2021-06-22T16:35:30Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 117,
        "deletions": 8,
        "changed_files": 10,
        "created_at": "2021-06-21T22:30:15Z",
        "closed_at": "2021-06-25T20:49:30Z",
        "merged_at": "2021-06-25T20:49:30Z",
        "body": "Creating java_export targets to all java packages to export the bazel builds as maven consumable packages.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-06-19T21:29:51Z",
        "closed_at": "2021-07-30T16:04:41Z",
        "merged_at": "2021-07-30T16:04:41Z",
        "body": "It for issue #8748\r\nmingw/mingw64 doesn't defines _MSC_VER and defines _WIN32 macro. When it comes to map_test.cc:\r\n\r\n> https://github.com/protocolbuffers/protobuf/blob/master/src/google/protobuf/map_test.cc#L33\r\n\r\nIt will include windows.h  and thus the GetMessage macro and GetMessageA WINAPI. \r\n\r\nI changed the _WIN32 macro in map_test.cc to _MSC_VER and it linked well for both visual studio and mingw64.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 18,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-06-18T11:00:04Z",
        "closed_at": "2021-06-18T17:12:15Z",
        "merged_at": "2021-06-18T17:12:15Z",
        "body": "Fixes https://github.com/protocolbuffers/protobuf/issues/8667.\r\n\r\nFor an unknown reason (am I missing something?), setup.py changes from #8280 have been erased by piper import #8617 (see https://github.com/protocolbuffers/protobuf/issues/8667#issuecomment-863936224).\r\n\r\nThese changes are actually necessary for correct build of aarch64 python wheels.\r\nwithout them, the aarch64 wheels will have python extension .so files with wrong arch suffix `x86_64-linux-gnu.so`,\r\nwhich results in failing to load the python C++ extension.\r\nThis is also basically what the broken tests reported by #8667 have detected.\r\n\r\nThis PR fixes the problem - as proven by a green adhoc run of the kokoro job (https://fusion2.corp.google.com/invocations/c1e5e71e-e779-48e7-8f0a-23b1d33a06b0/targets/protobuf%2Fgithub%2Fmaster%2Fubuntu%2Fpython_aarch64%2Fcontinuous/log)\r\n\r\nOne thing I haven't been able to explain is:\r\n- why did the piper import erase the changes made to setup.py (was that intentional or perhaps a bad merge?)\r\n- was there any other important changes that ended up being deleted?\r\n\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 35,
        "deletions": 10,
        "changed_files": 2,
        "created_at": "2021-06-17T15:04:55Z",
        "closed_at": "2021-06-28T18:46:01Z",
        "merged_at": "2021-06-28T18:46:01Z",
        "body": "Fixes #7120\r\nFixes #5416 (maybe?)\r\n\r\nWeirdly, the changelog claims that this was already fixed in\r\n```\r\n2019-04-29 version 3.8.0\r\n[...]\r\n  * [c++17] Changed proto2::RepeatedPtrField iterators to no longer derive from the deprecated std::iterator class.\r\n```",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 17,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2021-06-16T04:14:00Z",
        "closed_at": "2021-06-18T08:36:22Z",
        "merged_at": "2021-06-18T08:36:22Z",
        "body": "CreateCodedInput is created from the underlying array behind the ByteString.\r\nIf this was created from a larger array (via Memory<byte> or ArrayPool etc)\r\nthen the CodedInput refers to the wrong section of memory.\r\n\r\nChange is to add the offset and count like the other methods that use the\r\nArraySegment (ToString, ToBase64, WriteTo).\r\n\r\nFixup for https://github.com/protocolbuffers/protobuf/pull/7645",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1430,
        "deletions": 90,
        "changed_files": 13,
        "created_at": "2021-06-15T19:58:35Z",
        "closed_at": "2021-06-23T18:23:24Z",
        "merged_at": "2021-06-23T18:23:24Z",
        "body": "Adds an option to protoc `--objc_opt=elide_message_metadata` to remove all the property\r\nmetadata from message classes. This significantly reduces the codegen size of the clases.\r\nThe downside is that iterating through properties using objective c runtime calls will no\r\nlonger function. This is mitigated by the fact that most (all?) of the information that\r\nfolks are interested in can be extracted via the message descriptor.\r\n\r\nWe do this by defining our own classes using the `GPB_MESSAGE_SUBCLASS_IMPL` macro.\r\n\r\nThe `GPB_MESSAGE_SUBCLASS_IMPL` macro generates code equivalent to:\r\n```\r\n@implementation _name_\r\n+ (GPBDescriptor *)descriptor {\r\n    return _descriptorFunc_(self, _cmd);\r\n}\r\n@end\r\n```\r\nWe do this to avoid all of the @property metadata. If we use `@dynamic` for the properties the compiler generates a lot of property data including selectors and encoding strings. For large uses of protobufs, this can add up to several megabytes of unused Objective-C metadata.\r\nThis inline class definition avoids the property data generation at the cost of being a little ugly. This has been tested with both 32 and 64 bits on intel and arm with Xcode 11.7 and Xcode 12.4.\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-06-15T19:58:06Z",
        "closed_at": "2021-06-18T13:58:18Z",
        "merged_at": "2021-06-18T13:58:18Z",
        "body": "Some of the test methods we use are deprecated on newer OS. This just gets prevents the\r\nwarning that we don't actually care about.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2021-06-15T16:13:42Z",
        "closed_at": "2022-02-08T01:38:38Z",
        "merged_at": "2022-02-08T01:38:38Z",
        "body": "Convenience feature: enable users to test via the familiar `ctest` command rather than making the `check` target.\r\n\r\nThey would be able to use the familiar CMake pattern:\r\n```\r\ncmake -S source/protobuf -B build/protobuf ...\r\ncmake --build build/protobuf\r\nctest --test-dir build/protobuf\r\ncmake --install build/protobuf\r\n```\r\n\r\nThis is a follow-up to 9f447fc9d3da93da29b8301f1a8ca57b1ea812d7",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 148,
        "deletions": 86,
        "changed_files": 2,
        "created_at": "2021-06-15T16:03:05Z",
        "closed_at": "2022-02-08T04:41:30Z",
        "merged_at": "2022-02-08T04:41:30Z",
        "body": "If `-Dprotobuf_USE_EXTERNAL_GTEST=ON` is passed to CMake, it will use an external Google Test copy (i.e. by calling `find_package(GTest REQUIRED)`) rather than the one provided as a submodule.\r\n\r\nThis makes sense for larger projects that might already include Google Test and want to use a more standard CMake approach.\r\n\r\nAlso updated build instructions with this information, and more idiomatic usage.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 15,
        "deletions": 11,
        "changed_files": 1,
        "created_at": "2021-06-15T14:14:39Z",
        "closed_at": "2021-07-08T18:14:49Z",
        "merged_at": "2021-07-08T18:14:49Z",
        "body": "`setlocale` returns a pointer to a buffer containing the current locale name.\r\nThis needs to be copied into a `std::string` or it will be overwritten by the next call.\r\n\r\nTrying to call `setlocale` with a non-null, invalid pointer can have unpredictable results, such as https://github.com/protocolbuffers/protobuf/issues/7074\r\n```\r\n[ RUN      ] StringPrintfTest.Multibyte\r\nminkernel\\crts\\ucrt\\src\\appcrt\\convert\\mbstowcs.cpp(246) : Assertion failed: (pwcs == nullptr && sizeInWords == 0) || (pwcs != nullptr && sizeInWords > 0)\r\n```\r\n\r\n`setlocale` can also return a `nullptr` if it fails, but we assert against that.\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-06-12T00:22:18Z",
        "closed_at": "2021-06-15T16:38:29Z",
        "merged_at": "2021-06-15T16:38:29Z",
        "body": "Improve on the fixes from issue #8612 to avoid warnings in Clang 12.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 95,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-06-11T21:18:08Z",
        "closed_at": "2021-06-12T18:16:20Z",
        "merged_at": "2021-06-12T18:16:20Z",
        "body": "Add a simple KVO test just to verify that KVO continues to function for protobufs.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-06-10T15:22:10Z",
        "closed_at": "2021-06-10T16:48:24Z",
        "merged_at": "2021-06-10T16:48:24Z",
        "body": "Protobuf-java-util has a dependency on errorprone v2.3.4 and 2.5.1 which causes a dependency convergence problem (#8721). This updates one of the dependencies so that the versions match.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2021-06-09T21:07:39Z",
        "closed_at": "2021-06-09T22:09:28Z",
        "merged_at": "2021-06-09T22:09:28Z",
        "body": "When we need to aggregate metadata, duplication does happen.\r\nDisable the warning for now to mitigate the noise for users of aggregate\r\nmetadata.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-06-09T13:15:52Z",
        "closed_at": "2021-06-09T15:00:43Z",
        "merged_at": "2021-06-09T15:00:43Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2021-06-09T01:08:56Z",
        "closed_at": "2021-06-09T20:09:18Z",
        "merged_at": "2021-06-09T20:09:18Z",
        "body": "Fixes #8592",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 55,
        "deletions": 118,
        "changed_files": 35,
        "created_at": "2021-06-08T15:17:32Z",
        "closed_at": "2021-06-09T15:57:35Z",
        "merged_at": "2021-06-09T15:57:35Z",
        "body": "Merging 3.17.x into master after the 3.17.3 release",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-06-08T09:03:37Z",
        "closed_at": "2021-06-09T20:08:38Z",
        "merged_at": "2021-06-09T20:08:38Z",
        "body": "This improves interop with certain string-like data structures, allowing to save extra allocation.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 81,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2021-06-07T07:40:05Z",
        "closed_at": "2022-10-14T06:08:58Z",
        "merged_at": null,
        "body": "As per #8316, unknown fields are not discarded when using `MessageParser<T>.WithDiscardUnknownFields(true).ParseJson()`\r\n\r\nThis PR corrects the behavior of JSON parsing using MessageParser when discarding unknown fields is requested.\r\n\r\nThis also includes some unit tests which are derived from unit tests in JsonParserTest.\r\n\r\nJust a note: I created a new file MessageParserTest.cs, as there were no tests for this class. I copied the copyright header from another file - not sure if this is right :)",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2021-06-06T12:55:48Z",
        "closed_at": "2022-03-09T00:37:37Z",
        "merged_at": null,
        "body": "Fix `Call to a member function getFullName() on null` bug\r\n\r\n```\r\nPHPUnit 8.5.16 by Sebastian Bergmann and contributors.\r\n\r\n..E....................                                           23 / 23 (100%)\r\n\r\nTime: 84 ms, Memory: 6.00 MB\r\n\r\nThere was 1 error:\r\n\r\n1) WellKnownTest::testAny\r\nError: Call to a member function getFullName() on null\r\n\r\n/home/doc/projects/_forks/protobuf/php/src/Google/Protobuf/Internal/AnyBase.php:82\r\n/home/doc/projects/_forks/protobuf/php/tests/WellKnownTest.php:87\r\n\r\n```",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 38,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2021-06-06T12:38:44Z",
        "closed_at": "2022-03-09T00:37:10Z",
        "merged_at": null,
        "body": "This is is a simple method to check is Any type could be unpacked or not without trigger exception.",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 72,
        "deletions": 31,
        "changed_files": 20,
        "created_at": "2021-06-04T17:21:31Z",
        "closed_at": "2021-06-04T20:04:58Z",
        "merged_at": "2021-06-04T20:04:58Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 13,
        "changed_files": 2,
        "created_at": "2021-06-04T14:14:56Z",
        "closed_at": "2022-05-16T18:13:05Z",
        "merged_at": null,
        "body": "This resolves js issues when generator used with `import_style=commonjs_strict`.\r\nThe problem was in js-exports that are have nested namespaces. For comparison, when using `import_style=commonjs`, there is no addiontal nesting in exported objects. So, now js-export is unified, and the use of imported modules is fixed.\r\nThis fixes protocolbuffers/protobuf-javascript#40.\r\nInitially, the incorrect generation was made by a commit 13f94b4092cff9bc36a62adb4bf2e362b4f85979. In current pr this commit is partially reverted with the correction of incorrect tests.",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-06-02T22:47:05Z",
        "closed_at": "2021-06-03T21:06:30Z",
        "merged_at": "2021-06-03T21:06:30Z",
        "body": "Fixes #8688\r\n\r\nVisual Studio 2019 Update 16.10 introduced support for `constinit` for the very first time on May 25th. Unfortunately the way how protobuf uses constinit does not work with Visual Studio msvc compiler. This is a temporary solution to unblock those who updated to latest release of Visual Studio 2019 compiler.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 51,
        "deletions": 69,
        "changed_files": 33,
        "created_at": "2021-06-02T22:32:12Z",
        "closed_at": "2021-06-03T17:39:39Z",
        "merged_at": "2021-06-03T17:39:39Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-06-01T23:05:21Z",
        "closed_at": "2021-06-02T16:16:21Z",
        "merged_at": "2021-06-02T16:16:20Z",
        "body": "Adding dokka-maven-plugin to generated docs required to publish Kotlin artifacts.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2021-05-30T07:49:30Z",
        "closed_at": "2021-06-01T15:59:15Z",
        "merged_at": "2021-06-01T15:59:15Z",
        "body": "The line\r\n```c++\r\n#include <google/protobuf/port_def.inc>\r\n```\r\nis inside the namespaces, and therefore sometimes doesn't get read for some reason, resulting in a missing `#pragma warning(push)`.\r\nPutting the line before the namespaces, as in other headers, solves this problem.\r\n\r\ncheers.\r\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 13,
        "changed_files": 13,
        "created_at": "2021-05-27T20:08:12Z",
        "closed_at": "2021-05-28T16:54:42Z",
        "merged_at": "2021-05-28T16:54:42Z",
        "body": "This resolves issues with GCC and Clang warning (as error) about\r\nattribute in an unallowed location, in particular when used with a\r\ngenerated file using a dllexport_decl value of [[gnu::visibility]].\r\n\r\nThe correct ordering is already used in the compiler in\r\nFileGenerator::ForwardDeclarations() for each of classes_, as well\r\nas for other existing local values in pregenerated files. This\r\nchange ensures that all usages can compile without issue.\r\n\r\nFixes #8672 ",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 50,
        "deletions": 28,
        "changed_files": 17,
        "created_at": "2021-05-27T18:31:04Z",
        "closed_at": "2021-05-27T22:36:36Z",
        "merged_at": "2021-05-27T22:36:36Z",
        "body": "The well-known types generate C code into wkt.inc, and this C code was not testing `isset($msg->submsg_field)` like the generated code does:\r\n\r\n```php\r\n// PHP generated getter: checks isset().\r\npublic function getOptions()\r\n{\r\n    return isset($this->options) ? $this->options : null;\r\n}\r\n```\r\n\r\n```c\r\n// C generated getter, does not check upb_msg_has()\r\nstatic PHP_METHOD(google_protobuf_Value, getListValue) {\r\n  Message* intern = (Message*)Z_OBJ_P(getThis());\r\n  const upb_fielddef *f = upb_msgdef_ntofz(intern->desc->msgdef,\r\n                                           \"list_value\");\r\n  zval ret;\r\n  Message_get(intern, f, &ret);\r\n  RETURN_COPY_VALUE(&ret);\r\n}\r\n```\r\n\r\nThis led to an error in well-known type getters like `getListValue()` above where we would try to get a sub-message field from upb when `upb_msg_has(msg, field) == false`, which is an error according to upb.\r\n\r\nThere are two possible fixes for this bug. A guiding principle is that we want the generated C code in wkt.inc to have the same behavior as PHP generated code. Following this principle, the two possible fixes are:\r\n\r\n1. Change the code generator for wkt.inc to check `upb_msg_has(f)` before calling `Message_get()`. This would match the isset() check that the The PHP generated code does, and we would leave the PHP code unchanged.\r\n\r\n2. Change `Message_get()` to itself perform the `upb_msg_has(f)` check for sub-message fields. This means that generated code would no longer need to perform an `isset()` check, so we would want to remove this check from the PHP generated code also to avoid a redundant check.\r\n\r\nBoth of these are reasonable fixes, and it is not immediately obvious which is better. (1) has the benefit of resolving this case when we are in more specialized code (a getter function that already knows this is a sub-message field), and therefore avoids performing the check later in more generic code that would have to test the type again. On the other hand, the `isset()` check is not needed for the pure PHP implementation, as an unset PHP variable will return `null` anyway. And for the C extension, we'd rather check `upb_msg_has()` at the C level instead of PHP for performance reasons.\r\n\r\nSo this change implements (2). The generated code in wkt.inc remains unchanged, and the PHP generated code for sub-message fields is changed to remove the isset() check.\r\n\r\nFixes: https://github.com/protocolbuffers/protobuf/issues/8659",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-05-27T16:45:04Z",
        "closed_at": "2021-05-27T18:13:32Z",
        "merged_at": "2021-05-27T18:13:32Z",
        "body": "This will cause fields named exactly these names to get `_p` appended to them.\r\nThis is being done since the C89/C99/etc specs say these name should be macros,\r\nso in an ObjC context, trying to access the fields would result in runtime\r\nfailures for unknown selectors. The only way the fields were usable was to use\r\nKVC or via the descriptor based apis, but if someone hit that they likely would\r\nhave reported the general issue also.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 46,
        "deletions": 8,
        "changed_files": 2,
        "created_at": "2021-05-27T11:56:05Z",
        "closed_at": "2021-06-03T17:49:06Z",
        "merged_at": "2021-06-03T17:49:06Z",
        "body": "- uploading the benchmark results to bigquery is currently broken (I think it's because it's trying to upload to bq table in \"grpc-testing\" project without having access).\r\n- for now, instead of uploading the results, just print the formatted JSON results to the build log (that way the data remains available).",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 46,
        "deletions": 68,
        "changed_files": 2,
        "created_at": "2021-05-27T10:40:50Z",
        "closed_at": "2021-05-31T09:02:20Z",
        "merged_at": "2021-05-31T09:02:20Z",
        "body": "There is a [kokoro job](https://fusion.corp.google.com/projectanalysis/summary/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fubuntu%2Fbenchmark%2Fcontinuous) that runs protobuf OSS benchmarks continuously, but that job has silently been broken for a long time\r\n(it appears green on kokoro because the failures aren't being reported correctly, but many of the benchmarks are actually broken).\r\n\r\n- removed go benchmark since it's broken and also uses the legacy implementation of protobuf go (and corresponding benchmarks for protocolbuffer/protobuf-go AFAIK don't exist in OSS).\r\n- removed PHP benchmark since it's broken and PHP was making the entire setup complicated (and arguably PHP benchmarks results aren't as important as results for e.g. C++, java, python etc.).\r\n- did a bunch of cleanup and added some todos\r\n- make the script fail if the benchmarks fail, so that breakages are actually noticeable.\r\n\r\nBackground: I need the protobuf OSS benchmarks to work so that I can compare the results for ARM64 vs x86. \r\n\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 485,
        "deletions": 512,
        "changed_files": 54,
        "created_at": "2021-05-27T04:22:19Z",
        "closed_at": "2021-06-07T16:45:28Z",
        "merged_at": "2021-06-07T16:45:28Z",
        "body": "This fixes a few kinds of warnings:\r\n - inconsistent-missing-override when the overriding site is missing the\r\n   override keyword\r\n - unused-function when a function is neither visible nor used\r\n - unused-private-field when a private field exists but is never used\r\n - sign-compare when unsigned ints are compared to signed ints. Not all\r\n   of those have been addressed, but this warning isn't enabled by\r\n   default.\r\n\r\nThis fixes #8580, fixes #8612.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-05-26T18:36:14Z",
        "closed_at": "2021-05-26T20:01:46Z",
        "merged_at": "2021-05-26T20:01:46Z",
        "body": "internal.bzl is required to load java/core/BUILD and java/lite/BUILD, so it must be distributed.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-05-26T18:16:59Z",
        "closed_at": "2021-05-26T19:19:33Z",
        "merged_at": "2021-05-26T19:19:33Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-05-26T05:06:23Z",
        "closed_at": "2021-05-26T08:37:30Z",
        "merged_at": null,
        "body": "Segmentation Fault on PHP protobuf extension.\r\n\r\nissue: #8659 ",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-05-25T08:57:13Z",
        "closed_at": "2021-05-25T20:27:22Z",
        "merged_at": "2021-05-25T20:27:22Z",
        "body": "This is a continuation of #8579",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-05-25T07:04:44Z",
        "closed_at": "2021-05-25T18:28:14Z",
        "merged_at": "2021-05-25T18:28:14Z",
        "body": "There is  a mistake in the comment of property 'mapKeyDataType'.\r\nIf the field is a map, the value's type is not fieldType.\r\nInstead, it's dataType.\r\n\r\ne.g. The following case is a field of Int32-String Map.\r\n\r\n![](https://user-images.githubusercontent.com/17724564/119452614-2383fb80-bd69-11eb-93f7-a677e9a96749.png)\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 33,
        "changed_files": 2,
        "created_at": "2021-05-24T22:43:46Z",
        "closed_at": "2021-05-25T17:52:58Z",
        "merged_at": "2021-05-25T17:52:58Z",
        "body": "The maven-bundle-plugin was causing the `protobuf-kotlin` jar to also have all source from `protobuf-java` which led to error #8631. This should fix it by removing the bundle so that `protobuf-kotlin` will not have conflicting files.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1650,
        "deletions": 292,
        "changed_files": 49,
        "created_at": "2021-05-24T22:16:01Z",
        "closed_at": "2021-06-01T22:20:54Z",
        "merged_at": "2021-06-01T22:20:54Z",
        "body": "**Important:** this integration must be merged, not squashed!",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 97,
        "deletions": 48,
        "changed_files": 42,
        "created_at": "2021-05-24T19:25:25Z",
        "closed_at": "2021-05-27T15:05:54Z",
        "merged_at": "2021-05-27T15:05:54Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2021-05-22T17:35:34Z",
        "closed_at": "2021-05-22T23:56:54Z",
        "merged_at": "2021-05-22T23:56:54Z",
        "body": "Fixed syntax error in platform independent `bswap_64` implementation",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2021-05-22T11:55:03Z",
        "closed_at": "2021-05-22T23:15:06Z",
        "merged_at": null,
        "body": "typo in src/google/protobuf/stubs/port.h resulting in the latest release not compiling here.\r\n\r\ncommited here 22 days ago:\r\nhttps://github.com/protocolbuffers/protobuf/commit/f5fd897c1dccda0d5fca614616452b0ba191a859\r\n\r\ndo I miss something?",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 38,
        "deletions": 11,
        "changed_files": 8,
        "created_at": "2021-05-22T04:55:58Z",
        "closed_at": "2021-05-22T06:04:09Z",
        "merged_at": "2021-05-22T06:04:09Z",
        "body": "Previously the protobuf extension would not properly root memory from a repeated field or map when assigning to a message field (see the attached test case).  If there is no direct reference to the repeated field from Ruby, this will result in a memory error if there is a GC and the repeated field is subsequently accessed (for example, in `#encode`).\r\n\r\nThe fix is to do the appropriate `upb_arena_fuse()` operation when this assignment is performed. This will cause the Union/Find machinery to ensure that the memory for the repeated field or map lives as long as the message.\r\n\r\nThe the new test case does not actually crash on my machine, but it does trigger a Valgrind error that I can confirm is fixed by the code in this PR. In the future we should make sure that our CI tests are running tests under Valgrind so we can catch future memory errors of this kind.\r\n\r\nAlso added an explicit check that `upb_arena_fuse()` succeeded. This is not related to the bugfix, but it is another measure to help ensure that the memory model of the extension is correct.\r\n\r\nFixes: https://github.com/protocolbuffers/protobuf/issues/8559",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 90,
        "deletions": 0,
        "changed_files": 6,
        "created_at": "2021-05-21T07:56:09Z",
        "closed_at": "2021-05-22T14:38:50Z",
        "merged_at": "2021-05-22T14:38:50Z",
        "body": "Similar to https://github.com/protocolbuffers/protobuf/pull/8495 (but this time for PHP).",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 25,
        "deletions": 13,
        "changed_files": 7,
        "created_at": "2021-05-21T07:36:42Z",
        "closed_at": "2021-06-04T16:53:58Z",
        "merged_at": "2021-06-04T16:53:58Z",
        "body": "These changes resolve all issues described in #8593 except for the linker issue.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 2706,
        "deletions": 2704,
        "changed_files": 33,
        "created_at": "2021-05-19T21:47:18Z",
        "closed_at": "2021-05-19T22:53:47Z",
        "merged_at": "2021-05-19T22:53:47Z",
        "body": "These are fixes for bugs that are present in PHP & Ruby in 3.17.0.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 202,
        "deletions": 0,
        "changed_files": 6,
        "created_at": "2021-05-18T21:48:32Z",
        "closed_at": "2021-05-19T16:42:55Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2021-05-18T16:09:45Z",
        "closed_at": "2021-05-19T18:11:14Z",
        "merged_at": "2021-05-19T18:11:14Z",
        "body": "Bazel has switched its protobuf rules to make them use the proto\r\ncompiler in the exec configuration instead of the host configuration.\r\n\r\nHowever, if rules in protobuf still use the host configuration then\r\nmultiple copies of the compiler can end up being built.\r\n\r\ncfg=\"host\" is deprecated in any case and being replaced with cfg=\"exec\"\r\nwhere possible.\r\nhttps://docs.bazel.build/versions/master/skylark/rules.html#configurations",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1078,
        "deletions": 1198,
        "changed_files": 6,
        "created_at": "2021-05-17T23:59:41Z",
        "closed_at": "2021-05-18T05:40:34Z",
        "merged_at": "2021-05-18T05:40:34Z",
        "body": "Fixes: https://github.com/protocolbuffers/protobuf/issues/8464\r\n\r\nWe continue to support the following legacy behavior (which takes some extra code now due to some changes in upb):\r\n\r\n```ruby\r\n  # Given a proto:\r\n  #   message FooMessage {\r\n  #     FooMessage optional_submessage = 1;\r\n  #  }\r\n  # ...this currently returns {:optional_submessage = nil}, but really\r\n  # should return {} to be consistent with our semantics for to_json.\r\n  FooMessage.new.to_hash \r\n```",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1056,
        "deletions": 1147,
        "changed_files": 5,
        "created_at": "2021-05-17T18:15:04Z",
        "closed_at": "2021-05-17T22:27:06Z",
        "merged_at": "2021-05-17T22:27:06Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5924,
        "deletions": 2838,
        "changed_files": 120,
        "created_at": "2021-05-14T22:21:17Z",
        "closed_at": "2021-05-24T20:45:21Z",
        "merged_at": "2021-05-24T20:45:21Z",
        "body": "**Important:** this integration must be merged, not squashed!",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-05-14T19:39:58Z",
        "closed_at": "2021-05-18T14:25:00Z",
        "merged_at": "2021-05-18T14:25:00Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 518,
        "deletions": 325,
        "changed_files": 20,
        "created_at": "2021-05-14T04:41:42Z",
        "closed_at": "2021-05-14T06:16:49Z",
        "merged_at": "2021-05-14T06:16:49Z",
        "body": "This change makes us Valgrind-clean, and adds Kokoro CI tests to enforce that this remains true going forward.\r\n\r\nFixes: https://github.com/protocolbuffers/protobuf/issues/8525\r\n\r\nSpecifically:\r\n- Fixed all known memory leaks and other memory errors, such that our test suite is Valgrind-clean, freeing all allocated memory (a few unresolved cases are disabled in the tests, mostly around exceptions).\r\n- Fixed several `arginfo` errors where we erroneously specified parameters to several functions.\r\n- Added a `REFCOUNTING.md` file to explain how refcounting works in the PHP C API.\r\n- Removed all uses of the confusing `RETURN_ZVAL()` macro.\r\n- Removed all explicit increment/decrement of refcounts in favor of having refcounts follow `zval`s.\r\n- We now explicitly add Descriptors to a list that is freed at the end of the request.\r\n- Removed a special case for descriptors of map entries by indexing the descriptor cache by `upb_msgdef*` instead of `zend_class_entry*`.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2021-05-13T19:41:01Z",
        "closed_at": "2021-05-17T17:38:40Z",
        "merged_at": "2021-05-17T17:38:40Z",
        "body": "It looks like some syntax errors were introduced by mistake because some\r\nleft parentheses were changed to curly braces without the right parens\r\nbeing changed accordingly. This fixes #8611.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 40,
        "deletions": 26,
        "changed_files": 7,
        "created_at": "2021-05-13T01:01:36Z",
        "closed_at": "2021-06-01T22:17:06Z",
        "merged_at": "2021-06-01T22:17:06Z",
        "body": "In [Closure Library](https://github.com/google/closure-library), we will be removing the deprecated `depswriter.py`, `closurebuilder.py`, and `calcdeps.py` build scripts soon. This PR replaces them with modern equivalents.\r\n\r\n### `depswriter.py`\r\n\r\n`depswriter.py` is superceded by [`google-closure-deps`](https://www.npmjs.com/package/google-closure-deps), a similar tool we maintain that is implemented in Node.js. Here, I've substituted the `depswriter.py` command with a corresponding command from `google-closure-deps`; the CLI flags are similar. The difference in output is minimal (see below).\r\n\r\nExplanation of \"extra\" flags:\r\n* `--closure-path=\"node_modules/google-closure-library/closure/goog\"` Path to Closure (now required)\r\n* `--file=\"node_modules/google-closure-library/closure/goog/deps.js\"` Use the deps.js file bundled with Closure as part of deps calculation\r\n\r\nFor reference, the diff of the resulting `deps.js` from running `gulp deps` (with lines sorted and formatted for diff clarity) is [here](https://github.com/kjin/protobuf/commit/46125af5574d093962a645d2538c2005b172da4e).\r\n\r\n### `closurebuilder.py` and `calcdeps.py`\r\n\r\nThese scripts call through to the Closure Compiler, so their invocations are replaced with invocations of the compiler itself. In all cases, the compilation results should be byte-equal.",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 10,
        "changed_files": 3,
        "created_at": "2021-05-12T17:07:15Z",
        "closed_at": "2021-05-12T21:42:16Z",
        "merged_at": "2021-05-12T21:42:15Z",
        "body": "This is necessary because the Kotlin support requires Java 8 or\r\nhigher.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 39,
        "deletions": 24,
        "changed_files": 20,
        "created_at": "2021-05-11T20:33:12Z",
        "closed_at": "2021-05-12T23:20:19Z",
        "merged_at": "2021-05-12T23:20:18Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 9,
        "changed_files": 3,
        "created_at": "2021-05-11T19:12:28Z",
        "closed_at": "2021-05-12T16:58:30Z",
        "merged_at": "2021-05-12T16:58:30Z",
        "body": "This should fix the failing CI test runs. I also updated the .gitignore and the 3.17.0 changelog.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1643,
        "deletions": 292,
        "changed_files": 46,
        "created_at": "2021-05-11T19:01:54Z",
        "closed_at": "2021-05-24T22:15:11Z",
        "merged_at": null,
        "body": "**Important:** this integration must be merged, not squashed!",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 113,
        "deletions": 47,
        "changed_files": 29,
        "created_at": "2021-05-11T17:54:24Z",
        "closed_at": "2021-05-13T15:59:12Z",
        "merged_at": "2021-05-13T15:59:12Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2021-05-11T15:10:20Z",
        "closed_at": "2021-05-11T21:58:29Z",
        "merged_at": "2021-05-11T21:58:29Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-05-11T13:20:56Z",
        "closed_at": "2021-05-13T18:50:54Z",
        "merged_at": "2021-05-13T18:50:54Z",
        "body": "### Motivation\r\nMy [CI](https://github.com/PragmaTwice/protopuf/runs/2553850775) is broken due to a compile error from a `.pb.cc` while using GCC on Mac OS X:\r\n```\r\n /Users/runner/work/protopuf/protopuf/test/compatibility/message.pb.cc:96:131: error: 'init_priority' attribute is not supported on this platform\r\n   96 | PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_message_2eproto(&descriptor_table_message_2eproto);\r\n      |                                                                                                                                   ^\r\n```\r\n\r\nAfter some investigation, I found that under darwin, GCC gives a compile error for the use of init_priority.\r\nWe can get the explanation from the gcc source code, which comes from [gcc/config/darwin.h#L1084](https://github.com/gcc-mirror/gcc/blob/master/gcc/config/darwin.h#L1084)  (GCC trunk):\r\n```c\r\n/* The Apple assembler and linker do not support constructor priorities.  */\r\n#undef SUPPORTS_INIT_PRIORITY\r\n#define SUPPORTS_INIT_PRIORITY 0\r\n```\r\nThis has been introduced from [Bug 34587](https://gcc.gnu.org/bugzilla/show_bug.cgi?id=34587) and still exists today.\r\n\r\n### Solution\r\nWe cannot use the macro `SUPPORTS_INIT_PRIORITY` (and `__has_attribute(init_priority)` returns true), so a workaround is to check the OS and compiler in order to skip the case of using darwin GCC:\r\n```\r\n__GNUC__ && (!defined(__APPLE__) || defined(__clang__))\r\n```\r\n\r\n### Links\r\nhttps://trac.macports.org/ticket/37664\r\n> the OS X linker ignores the init_priority() attribute and does not reorder the constructors",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 149,
        "deletions": 65,
        "changed_files": 4,
        "created_at": "2021-05-10T22:16:01Z",
        "closed_at": "2021-05-14T17:41:02Z",
        "merged_at": "2021-05-14T17:41:02Z",
        "body": "There was a bug (https://youtrack.jetbrains.com/issue/KT-45503) with the Kotlin compiler that stopped the += Kotlin dsl proto syntax from working on repeated extensions. Now that the fix has been implemented in 1.5.0, I have updated the compiler version and changed the tests to test the += functionality on repeated extensions that is now working.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 126,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2021-05-10T21:31:45Z",
        "closed_at": "2022-03-16T00:22:34Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 74,
        "deletions": 0,
        "changed_files": 7,
        "created_at": "2021-05-10T13:48:28Z",
        "closed_at": "2022-02-02T18:25:36Z",
        "merged_at": null,
        "body": "",
        "comments": 32
    },
    {
        "merged": true,
        "additions": 6584,
        "deletions": 0,
        "changed_files": 33,
        "created_at": "2021-05-10T13:16:06Z",
        "closed_at": "2021-05-11T09:24:04Z",
        "merged_at": "2021-05-11T09:24:04Z",
        "body": "Related issue: https://github.com/grpc/grpc/issues/24594\r\nCorresponding gRPC PR https://github.com/grpc/grpc/pull/26164\r\n\r\n\r\n\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-05-08T08:18:29Z",
        "closed_at": "2021-05-10T20:50:15Z",
        "merged_at": "2021-05-10T20:50:15Z",
        "body": "This is #8584 applied to 3.17.x",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 47,
        "deletions": 22,
        "changed_files": 21,
        "created_at": "2021-05-07T23:02:13Z",
        "closed_at": "2021-05-10T22:31:35Z",
        "merged_at": "2021-05-10T22:31:35Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 2,
        "changed_files": 4,
        "created_at": "2021-05-07T22:56:14Z",
        "closed_at": "2021-05-10T20:36:34Z",
        "merged_at": "2021-05-10T20:36:34Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-05-07T22:03:40Z",
        "closed_at": "2021-05-10T22:35:26Z",
        "merged_at": null,
        "body": "Please, consider cherry-picking this fix into 3.17 branch.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 72,
        "deletions": 57,
        "changed_files": 32,
        "created_at": "2021-05-07T18:09:14Z",
        "closed_at": "2021-05-07T20:36:32Z",
        "merged_at": "2021-05-07T20:36:32Z",
        "body": "This will fix the failing Bazel test.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 147,
        "deletions": 73,
        "changed_files": 33,
        "created_at": "2021-05-07T16:38:40Z",
        "closed_at": "2021-05-07T17:55:31Z",
        "merged_at": "2021-05-07T17:55:31Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-05-07T10:28:44Z",
        "closed_at": "2021-05-07T20:37:12Z",
        "merged_at": "2021-05-07T20:37:12Z",
        "body": "This fixes MSVC (tested on MSVC2019 / 16.8) compilation error (line number is different, as I am working with protobuf 3.15.8):\r\n```\r\ngoogle/protobuf/map_entry_lite.h:527: error C2760: syntax error: unexpected token ')', expected 'expression'\r\n```\r\n\r\nI believe [this](https://stackoverflow.com/questions/34696351/template-dependent-typename) explains why MSVC considers this to be a dependent template.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-05-07T00:25:29Z",
        "closed_at": "2021-05-07T15:32:36Z",
        "merged_at": "2021-05-07T15:32:36Z",
        "body": "The test assertion is commented out, but this is causing some warnings\r\nabout an unused variable. This commit comments out the variable to fix\r\nthat problem.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 73,
        "deletions": 48,
        "changed_files": 9,
        "created_at": "2021-05-06T18:28:39Z",
        "closed_at": "2021-05-12T17:42:17Z",
        "merged_at": "2021-05-12T17:42:16Z",
        "body": "- use Bazel instead of Automake to build protoc to generate test protos.\r\n- More robust change detection for the extension makefile (we now compute a hash of the PHP binary rather than relying on its path as a unique identifier.\r\n- Added kokoro config and build scripts for testing several different versions of PHP.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 72,
        "deletions": 57,
        "changed_files": 31,
        "created_at": "2021-05-06T18:14:39Z",
        "closed_at": "2021-05-07T16:51:15Z",
        "merged_at": "2021-05-07T16:51:15Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 41,
        "deletions": 24,
        "changed_files": 18,
        "created_at": "2021-05-06T17:58:49Z",
        "closed_at": "2021-05-06T19:50:12Z",
        "merged_at": "2021-05-06T19:50:12Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-05-05T19:10:51Z",
        "closed_at": "2021-05-13T19:22:25Z",
        "merged_at": "2021-05-13T19:22:24Z",
        "body": "Export SerializeInternalToArray which is used by the next function, TableSerializeToArray.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-05-05T11:12:26Z",
        "closed_at": "2021-05-06T16:09:22Z",
        "merged_at": "2021-05-06T16:09:22Z",
        "body": "This is the continuation of #8344\r\n\r\nOriginal error is (formatting is mine):\r\n\r\n```\r\nerror C2664: 'PyObject* google::protobuf::python::cdescriptor_pool::SetErrorFromCollector(\r\n  google::protobuf::DescriptorPool::ErrorCollector *,\r\n  char *,\r\n  char*\r\n)': cannot convert argument 3 from 'const char [5]' to 'char *'\r\n```",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 12,
        "deletions": 8,
        "changed_files": 2,
        "created_at": "2021-05-05T08:05:24Z",
        "closed_at": "2021-06-01T22:22:15Z",
        "merged_at": null,
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2021-05-05T06:23:58Z",
        "closed_at": "2021-05-06T16:45:12Z",
        "merged_at": "2021-05-06T16:45:11Z",
        "body": "Fixes #8564\r\n\r\nOn 64-bit Windows, it is unsafe to try to create a Fixnum from a 64-bit integer, because longs can hold only 32 bits. The code change below:\r\n* Downcasts the original unsigned 64-bit hash to a signed long (which may be either 64 bits or 32 bits depending on the platform).\r\n* Checks the value to see if it's in the half of the range of long that corresponds to a valid Fixnum, and moves it into range if not.\r\n* Only then does it pass the result into `INT2FIX`.\r\n\r\n/attn @haberman ",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2021-05-05T04:26:09Z",
        "closed_at": "2021-05-05T22:42:25Z",
        "merged_at": "2021-05-05T22:42:25Z",
        "body": "Activates the secondary ObjectCache map on this platform, to prevent weak keys from being garbage collected. This happened on 64-bit Windows because pointers don't necessarily fit in a Fixnum, and were being represented as GC-able Bignums on that platform.\r\n\r\nFixes #8554\r\n\r\n/attn @haberman ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2021-05-05T03:38:16Z",
        "closed_at": "2021-10-14T18:01:11Z",
        "merged_at": "2021-10-14T18:01:11Z",
        "body": "I was surprised to find out that `from_time` was not a class method, but an instance method.\r\nThis limits its usefulness, as to create a new Timestamp you have to first instantiate the object, then call the from_time method, and then you need to return/use the saved instance, because the from_time method returns the self.nanos value, rather than the timestamp itself.\r\n\r\nCode example\r\n\r\nBefore\r\n```ruby\r\n{\r\n  updated_at: Google::Protobuf::Timestamp.new.tap { |t| t.from_time(updated_at) },\r\n}\r\n```\r\n\r\nAfter\r\n```ruby\r\n{\r\n  updated_at: Google::Protobuf::Timestamp.from_time(updated_at),\r\n}\r\n```\r\n\r\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-05-04T23:34:43Z",
        "closed_at": "2021-05-05T18:38:41Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-05-04T18:13:53Z",
        "closed_at": "2021-05-14T16:17:42Z",
        "merged_at": "2021-05-14T16:17:42Z",
        "body": "Fixes an issue with the objective-c iOS .xcodeproj, where archiving a project using this repository as a submodule resulted in a generic Xcode archive being created, rather than an iOS App Archive. Setting the `SKIP_INSTALL` build setting to `YES` results in the iOS App Archive being generated correctly when archiving an application for submission.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 105,
        "deletions": 1313,
        "changed_files": 17,
        "created_at": "2021-05-04T03:26:47Z",
        "closed_at": "2021-05-04T17:19:22Z",
        "merged_at": "2021-05-04T17:19:22Z",
        "body": "This PR simplifies a number of issues around the PHP testing setup:\r\n\r\n- Before the pure-PHP and C extension testers used different autoloaders. This PR consolidates them into a single autoloader, created by composer.\r\n- We also remove the custom PHPUnit version selection logic in `test.sh` in favor of letting Composer pick the correct dependencies for each PHP version.\r\n- Before the pure-PHP and C extension used different PHPUnit invocation strategies: pure-PHP used a `phpunit.xml` file, while the C extension enumerated the list of testing files in a shell script. Now both use the same strategy: we run PHPUnit on a directory, which automatically tests all of the files matching `*Test.php` in that directory.\r\n- Consolidated on a single autoloader, created by composer.\r\n- We now rely on autoloading to import all test protos. require_once() calls for test protos are removed.\r\n- For now the valgrind tests are removed. A follow-up PR will re-enable them in a more robust way.\r\n- Optimized both test proto generation and the custom extension build to avoid unnecessary work when the files are already up to date.\r\n- Added assertions to verify that the C test doesn't use PHP sources, this should eliminate the need for separate \"C\" and \"mixed\" tests.\r\n- Removed obsolete rules from tests.sh.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-05-04T00:47:43Z",
        "closed_at": "2021-06-02T20:39:38Z",
        "merged_at": "2021-06-02T20:39:38Z",
        "body": "Fixes https://github.com/google/protobuf-gradle-plugin/issues/492\r\n\r\nThe main rationale is to fix [this](https://github.com/grpc/grpc-java/issues/7690) and not have users need to manually and/or conditionally point at the x86_64 classifier. The M1 macs are able to run x86_64 binaries in rosetta compatibility mode.\r\n\r\n@ejona86 had a good idea, so I attempt here to upload the same file used in the osx-x86_64 classifier for the osx-aarch_64 classifier.\r\n\r\nOne day if a native M1 build comes along and solves [this](https://github.com/protocolbuffers/protobuf/issues/8062), modify this to upload a real M1 build.",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 38,
        "deletions": 21,
        "changed_files": 19,
        "created_at": "2021-05-03T23:46:44Z",
        "closed_at": "2021-05-05T20:25:54Z",
        "merged_at": "2021-05-05T20:25:54Z",
        "body": "I also updated CHANGES.txt to include the fixes that have been cherry-picked to 3.16.x.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-05-01T07:15:38Z",
        "closed_at": "2021-05-03T18:21:59Z",
        "merged_at": "2021-05-03T18:21:59Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3443,
        "deletions": 2675,
        "changed_files": 91,
        "created_at": "2021-04-30T23:31:57Z",
        "closed_at": "2021-05-05T00:14:33Z",
        "merged_at": "2021-05-05T00:14:33Z",
        "body": "**Important:** this integration must be merged, not squashed!",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 117,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2021-04-30T18:15:14Z",
        "closed_at": "2021-04-30T21:07:00Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 86,
        "deletions": 0,
        "changed_files": 5,
        "created_at": "2021-04-29T14:48:12Z",
        "closed_at": "2021-04-30T05:11:09Z",
        "merged_at": "2021-04-30T05:11:09Z",
        "body": "Very similar to https://github.com/protocolbuffers/protobuf/pull/8495 but this time for javascript.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 135,
        "deletions": 66,
        "changed_files": 2,
        "created_at": "2021-04-28T04:47:44Z",
        "closed_at": "2021-10-13T17:46:39Z",
        "merged_at": null,
        "body": "I have a custom marshaller that wraps a CodedInputStream into an InputStream to better process a field while performing fewer copies and generating less java-garbage. This PR adds some direct support to delegate calls from `InputStream::read(byte[] dst, int off, int len)` to the backing CodedInputStream.\r\n\r\nIt seems a bit unrelated, but it would be convenient to also allow `WireFormat::makeTag` to be public. I would prefer to use the existing implementation rather than cloning a version of it. Even [apache arrow could use this](https://github.com/apache/arrow/blob/master/java/flight/flight-core/src/main/java/org/apache/arrow/flight/ArrowMessage.java#L90) if it were not package private.",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2021-04-27T09:01:47Z",
        "closed_at": "2021-05-03T22:05:02Z",
        "merged_at": "2021-05-03T22:05:02Z",
        "body": "`GG_ULONGLONG` was renamed to `PROTOBUF_ULONGLONG` some time ago.\r\n\r\nThis PR fixes the generated code for `uint64 field = 1 [default = 0];` stanza.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2021-04-26T20:12:28Z",
        "closed_at": "2021-05-05T21:47:32Z",
        "merged_at": "2021-05-05T21:47:32Z",
        "body": "Update kokoro/docs/publish-python.sh to use the latest version of protoc and python.\r\n\r\nThis will make [the python doc-publishing job](https://fusion.corp.google.com/projectanalysis/summary/KOKORO/prod:cloud-devrel%2Fclient-libraries%2Fprotobuf%2Fdocs%2Fpython)  (e.g. BUILD 13, which ran from a [fork](https://github.com/shaod2/protobuf/tree/update-python-docs-script)) pass again.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 116,
        "deletions": 116,
        "changed_files": 13,
        "created_at": "2021-04-26T10:06:11Z",
        "closed_at": "2021-04-28T21:51:04Z",
        "merged_at": "2021-04-28T21:51:04Z",
        "body": "protoc marks SharedCtor and SharedDtor as inline in `.h` file being generated, but does not define them in this header.\r\nAn attempt to use these symbols causes compiler to issue `-Wundefined-inline` warning / error if `-Werror` is enabled.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2021-04-24T04:21:42Z",
        "closed_at": "2021-04-26T18:29:59Z",
        "merged_at": "2021-04-26T18:29:59Z",
        "body": "For now, they are never uploaded to pip and it's difficult for external users to get access to them.\r\n\r\nSince we now have a passing continuous job that runs unit tests and also checks the wheels (https://fusion.corp.google.com/projectanalysis/summary/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fubuntu%2Fpython_aarch64%2Fcontinuous, as introduced by https://github.com/protocolbuffers/protobuf/pull/8479), it seems fair to make these wheels public.\r\n\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 22,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2021-04-23T22:26:36Z",
        "closed_at": "2021-05-04T17:09:57Z",
        "merged_at": "2021-05-04T17:09:57Z",
        "body": "Fixes #8514 ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-04-21T23:07:19Z",
        "closed_at": "2021-04-22T00:50:12Z",
        "merged_at": "2021-04-22T00:50:12Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2021-04-21T20:24:48Z",
        "closed_at": "2021-06-03T17:40:17Z",
        "merged_at": "2021-06-03T17:40:17Z",
        "body": "@eklitzke",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2021-04-21T02:15:44Z",
        "closed_at": "2021-09-29T04:54:02Z",
        "merged_at": "2021-09-29T04:54:02Z",
        "body": "Submitted on behalf of a third-party: Ihor Darkov\r\nSee https://github.com/protocolbuffers/protobuf/issues/6887#issue-522941516 for original source\r\n\r\nCloses #6887 ",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 50,
        "deletions": 8,
        "changed_files": 4,
        "created_at": "2021-04-20T19:41:13Z",
        "closed_at": "2021-04-20T20:52:44Z",
        "merged_at": "2021-04-20T20:52:44Z",
        "body": "This pull request cherry-picks the changes from #8356 into 3.16.x.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 9,
        "changed_files": 4,
        "created_at": "2021-04-20T12:19:19Z",
        "closed_at": "2021-04-20T18:12:12Z",
        "merged_at": "2021-04-20T18:12:12Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2021-04-20T12:14:23Z",
        "closed_at": "2021-04-21T22:52:10Z",
        "merged_at": "2021-04-21T22:52:10Z",
        "body": "Switch to range-based for loops where possible, use size_t for offsets to avoid conversions between signed and unsigned types where it is not.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 118,
        "changed_files": 3,
        "created_at": "2021-04-19T18:03:47Z",
        "closed_at": "2021-04-19T22:58:33Z",
        "merged_at": "2021-04-19T22:58:33Z",
        "body": "This is a continuation of #8510.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 15,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2021-04-19T15:55:30Z",
        "closed_at": "2021-04-19T22:27:09Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-04-19T12:24:21Z",
        "closed_at": "2021-04-19T18:16:36Z",
        "merged_at": "2021-04-19T18:16:36Z",
        "body": "add https://github.com/thesayyn/protoc-gen-ts as a community maintained protoc typescript compiler.\r\n\r\nSee: https://github.com/thesayyn/protoc-gen-ts/issues/39 for more detailed information.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2021-04-19T08:43:54Z",
        "closed_at": "2021-04-19T18:02:07Z",
        "merged_at": null,
        "body": "All other includes in `protobuf/python` are relative to `protobuf/python/src` while this one is not.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-04-19T07:36:59Z",
        "closed_at": "2021-04-20T22:15:31Z",
        "merged_at": "2021-04-20T22:15:30Z",
        "body": "The version variable should be `protobuf_VERSION` in `CMakeLists.txt`.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 494,
        "deletions": 654,
        "changed_files": 4,
        "created_at": "2021-04-16T22:08:06Z",
        "closed_at": "2021-04-20T18:44:23Z",
        "merged_at": null,
        "body": "This update fixes https://github.com/protocolbuffers/protobuf/issues/8464",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 655,
        "deletions": 38,
        "changed_files": 13,
        "created_at": "2021-04-16T21:16:25Z",
        "closed_at": "2021-04-20T18:36:33Z",
        "merged_at": "2021-04-20T18:36:32Z",
        "body": "This PR makes it possible to run all build, unit, and conformance tests for Java, Java Lite, and Util protobuf subprojects. Testing locally, all tests pass when running `bazel test //java:tests` which is the new parent test suite target responsible for exercising all the related tests.\r\n\r\nThis PR also modernizes the way we deal with inbound maven dependencies by migrating us over to [rules_jvm_external](https://github.com/bazelbuild/rules_jvm_external).\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 280,
        "deletions": 8,
        "changed_files": 8,
        "created_at": "2021-04-16T20:02:00Z",
        "closed_at": "2021-04-16T21:04:41Z",
        "merged_at": "2021-04-16T21:04:41Z",
        "body": "**Important:** this integration must be merged, not squashed!",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 19197,
        "changed_files": 80,
        "created_at": "2021-04-16T18:58:34Z",
        "closed_at": "2021-04-20T16:36:06Z",
        "merged_at": "2021-04-20T16:36:06Z",
        "body": "This removes the GitHub side of support for these compatibility tests.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2021-04-16T17:42:45Z",
        "closed_at": "2021-04-16T22:54:20Z",
        "merged_at": "2021-04-16T22:54:20Z",
        "body": "Though manpages say bswap_ _macros are GNU extensions_, both bionic libc and musl libc provide them from the very first releases.\r\n\r\nAs musl intentionally does not define any specific macro, I suggest changing ifdefs to be based on operating systems rather than on libc's.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 82,
        "deletions": 3,
        "changed_files": 8,
        "created_at": "2021-04-16T17:28:24Z",
        "closed_at": "2021-04-16T19:33:18Z",
        "merged_at": "2021-04-16T19:33:18Z",
        "body": "**Important:** this integration must be merged, not squashed!",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 67,
        "deletions": 0,
        "changed_files": 4,
        "created_at": "2021-04-16T09:21:08Z",
        "closed_at": "2021-04-25T17:22:17Z",
        "merged_at": "2021-04-25T17:22:17Z",
        "body": "Based on #8495 (only the few last commits are csharp related).\r\n\r\n- protobuf C# is written in pure C# (no native components), so we can simply build the test project on x64 (for better build speed) and then use aarch64 docker imager to run all the tests under an emulator.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-04-16T07:29:47Z",
        "closed_at": "2021-04-16T22:52:10Z",
        "merged_at": "2021-04-16T22:52:10Z",
        "body": "This is a clumsy fix for #8494.\r\nMWE is as follows:\r\n\r\n```\r\nsyntax = \"proto2\";\r\noptimize_for = \"lite_runtime\";\r\nmessage M {\r\n   map<string, int> field = 1;\r\n}\r\n```\r\n\r\nDuring code generation, protoc will check for key / value types (corresponds to string_key / string_value variables all around).\r\nIf Utf8 validation will be disabled due to evaluation of `GetUtf8CheckMode()` to `kNone`, the `Check()` method will be generated as follows:\r\n```\r\nstatic void Check(ConstPtr p) {\r\n}\r\n```\r\n\r\nThis will trigger `-Wunused-parameter`.\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1543,
        "deletions": 1048,
        "changed_files": 63,
        "created_at": "2021-04-15T23:23:50Z",
        "closed_at": "2021-04-16T16:52:24Z",
        "merged_at": "2021-04-16T16:52:24Z",
        "body": "**Important:** this integration must be merged, not squashed!",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 17,
        "changed_files": 1,
        "created_at": "2021-04-15T20:39:07Z",
        "closed_at": "2021-04-16T07:17:40Z",
        "merged_at": null,
        "body": "This simplifies the code in GetUtf8CheckMode dramatically.\r\n\r\nThis is part 2 / x in #8494 fix.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2021-04-15T17:51:11Z",
        "closed_at": "2021-04-15T21:30:40Z",
        "merged_at": "2021-04-15T21:30:40Z",
        "body": "`um/winnt.h` defines `DELETE` macro. It should be undefed to allow having enum members with the same name.\r\n\r\nI do not know if there is winnt.h available online, but here is a similar issue from another project: https://github.com/ipkn/crow/issues/106",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-04-14T18:40:27Z",
        "closed_at": "2021-04-14T20:39:23Z",
        "merged_at": "2021-04-14T20:39:23Z",
        "body": "constexpr defaulted default constructor of WrappedMutex causes compile errors #8492",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 91,
        "deletions": 0,
        "changed_files": 6,
        "created_at": "2021-04-14T17:28:54Z",
        "closed_at": "2021-04-26T16:37:28Z",
        "merged_at": "2021-04-26T16:37:28Z",
        "body": "Based on https://github.com/protocolbuffers/protobuf/pull/8485 (only the few last commits are ruby related).\r\n\r\nRuby's native build is very simple (it only compiles a few .c files), so running ruby's build directly under an emulator is the simplest solution and it's quick enough. Only the protoc binaries get crosscompiled since building protoc under an emulator would be slow.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-04-14T15:29:02Z",
        "closed_at": "2021-04-14T18:38:55Z",
        "merged_at": null,
        "body": "constexpr defaulted default constructor of WrappedMutex causes compile errors #8492\r\n",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 22,
        "deletions": 22,
        "changed_files": 3,
        "created_at": "2021-04-14T12:10:00Z",
        "closed_at": "2021-04-15T20:19:30Z",
        "merged_at": "2021-04-15T20:19:30Z",
        "body": "At the time this enum includes members named STRICT  and NONE, both of which are known to have problems under Windows (at least `port_undef.inc` has workaround for this macro).\r\n\r\nAs protobuf now builds in C++11 mode, `enum class` is a better solution to avoid name conflicts.\r\n\r\nThis is part 1 / x in #8494 fix.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 92,
        "deletions": 10,
        "changed_files": 9,
        "created_at": "2021-04-14T12:03:27Z",
        "closed_at": "2021-04-19T10:42:54Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-04-14T10:17:20Z",
        "closed_at": "2022-05-04T20:23:12Z",
        "merged_at": null,
        "body": "I was astounded by protocolbuffers/protobuf-javascript#96 being open for 4 years after its creation. It seems that everyone using Javascript with Protobuf wants to have this.\r\n\r\nJust created this PR, by taking the source edits from protocolbuffers/protobuf-javascript#96. \ud83e\udd1e that the build succeeds.\r\n\r\nFixes protocolbuffers/protobuf-javascript#96",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2021-04-14T06:11:03Z",
        "closed_at": "2021-04-20T15:25:58Z",
        "merged_at": "2021-04-20T15:25:58Z",
        "body": "This makes `make go` build the .pb.go file in the correct place and set up appropriate go.mod and go.sum files. `make clean` is updated to properly clean these up.\r\n\r\nPlease take a look.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 79,
        "deletions": 0,
        "changed_files": 5,
        "created_at": "2021-04-13T14:43:33Z",
        "closed_at": "2021-04-26T16:24:56Z",
        "merged_at": "2021-04-26T16:24:56Z",
        "body": "Based on https://github.com/protocolbuffers/protobuf/pull/8479 (only the last few commits need to be reviewed).\r\n\r\n- build protoc under crosscompiler\r\n- then build & tests java code under qemu emulator.\r\n\r\nExample passing adhoc run: http://sponge2.corp.google.com/95eaabd8-a929-4dfd-839a-4b4bef078391",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-04-13T05:29:20Z",
        "closed_at": "2021-04-14T22:01:46Z",
        "merged_at": "2021-04-14T22:01:46Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 90,
        "deletions": 8,
        "changed_files": 7,
        "created_at": "2021-04-12T09:31:50Z",
        "closed_at": "2021-04-23T09:59:47Z",
        "merged_at": "2021-04-23T09:59:47Z",
        "body": "Followup for https://github.com/protocolbuffers/protobuf/pull/8392\r\n- add a few more fixes (some of them come from https://github.com/protocolbuffers/protobuf/pull/8280)\r\n- add kokoro jobs and scripts to run the python aarch emulated tests with the CI\r\n\r\nonce this is merged, I'll create the corresponding kokoro jobs internally.\r\n\r\nExample of how the jobs's output would look like once created (I used a hack to get an \"adhoc\" run from kokoro):\r\nsponge/1e2bbf08-5ee0-4428-b905-1786b83edc32",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 110,
        "deletions": 26,
        "changed_files": 6,
        "created_at": "2021-04-10T02:40:04Z",
        "closed_at": "2021-05-17T10:52:58Z",
        "merged_at": "2021-05-17T10:52:58Z",
        "body": "Address #7885",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 46,
        "deletions": 13,
        "changed_files": 6,
        "created_at": "2021-04-09T22:36:37Z",
        "closed_at": "2021-05-14T23:48:46Z",
        "merged_at": "2021-05-14T23:48:45Z",
        "body": "Fixes: https://github.com/protocolbuffers/protobuf/issues/8457",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 18,
        "deletions": 11,
        "changed_files": 2,
        "created_at": "2021-04-09T01:48:46Z",
        "closed_at": "2021-04-12T17:06:45Z",
        "merged_at": "2021-04-12T17:06:45Z",
        "body": "This change should fix #8372. It does two things:\r\n\r\n1. Helps the compiler find the wyhash header when building from git.\r\n2. Uses the system installation of `protoc` when building the source gem, as the specified `../src/protoc` binary does not exist in the source gem.\r\n\r\nThis does not allow the gem to be built directly from git in a Gemfile (eg, `gem 'google-protobuf', github: 'protocolbuffers/protobuf'`), but it should allow the gem to be built successfully when `bundle config force_ruby_platform true` has been set.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 56,
        "deletions": 35,
        "changed_files": 33,
        "created_at": "2021-04-08T17:55:28Z",
        "closed_at": "2021-04-08T20:24:32Z",
        "merged_at": "2021-04-08T20:24:32Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2021-04-08T15:11:54Z",
        "closed_at": "2021-04-09T18:12:25Z",
        "merged_at": "2021-04-09T18:12:25Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-04-08T08:48:30Z",
        "closed_at": "2021-04-08T13:26:57Z",
        "merged_at": "2021-04-08T13:26:57Z",
        "body": "Looks like this was forgotten by the last time this was edited.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2021-04-08T01:24:59Z",
        "closed_at": "2021-11-15T08:52:43Z",
        "merged_at": "2021-11-15T08:52:43Z",
        "body": "* Include untracked sources in NuGet packages\r\n* Create NuGet package using a deterministic build\r\n* Fix NuGet warning by updating license URL to license expression\r\n* Update .NET SDK so reproducable build metadata is added to package\r\n\r\nBelow is a comparison in NuGet Package Explorer.\r\n\r\n**Before:**\r\n\r\n![image](https://user-images.githubusercontent.com/303201/113954182-7d8a3980-986d-11eb-8aa8-307474485f77.png)\r\n\r\n**After: (note, package built locally on my PC so missing signatures from Google and NuGet)**\r\n\r\n![image](https://user-images.githubusercontent.com/303201/113954263-a90d2400-986d-11eb-825e-e7e221e3e6a6.png)\r\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-04-07T21:53:27Z",
        "closed_at": "2021-04-07T23:46:18Z",
        "merged_at": "2021-04-07T23:46:18Z",
        "body": "In our free() method, we were freeing the memory from the\r\nupb arena but we were failing to free the memory for the\r\nRuby arena object. This was causing every Ruby arena object\r\nto leak: even though the objects were getting GC'd, the\r\nunderlying memory was not getting released.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 55,
        "deletions": 35,
        "changed_files": 32,
        "created_at": "2021-04-07T21:37:15Z",
        "closed_at": "2021-04-07T22:38:39Z",
        "merged_at": "2021-04-07T22:38:39Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 71,
        "deletions": 56,
        "changed_files": 31,
        "created_at": "2021-04-02T23:15:55Z",
        "closed_at": "2021-04-06T21:26:56Z",
        "merged_at": "2021-04-06T21:26:56Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 212,
        "deletions": 132,
        "changed_files": 4,
        "created_at": "2021-04-02T20:30:12Z",
        "closed_at": "2021-04-02T22:49:06Z",
        "merged_at": "2021-04-02T22:49:06Z",
        "body": "This reverts commit b604419d269887e0f34ff4d5fa0d14342a7e680d.\r\n\r\nThe original change broke some projects (see discussion on #8416), so let's roll it back until we can come up with a fix.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 149,
        "deletions": 83,
        "changed_files": 11,
        "created_at": "2021-04-01T20:46:32Z",
        "closed_at": "2021-04-02T18:22:40Z",
        "merged_at": "2021-04-02T18:22:40Z",
        "body": "**Important:** this integration must be merged, not squashed",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 5,
        "changed_files": 3,
        "created_at": "2021-04-01T00:14:09Z",
        "closed_at": "2021-04-06T17:07:53Z",
        "merged_at": "2021-04-06T17:07:53Z",
        "body": "Enabling `java_multiple_files` is preferred nowadays.\r\nSee also CL 348101638.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2021-03-31T21:02:17Z",
        "closed_at": "2021-04-01T16:46:58Z",
        "merged_at": "2021-04-01T16:46:58Z",
        "body": "Changing codespell and mergeable checks to allow for opensourcing of kotlin protos.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-03-31T19:44:48Z",
        "closed_at": "2021-03-31T20:47:47Z",
        "merged_at": "2021-03-31T20:47:47Z",
        "body": "Old one is broken",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-03-31T12:01:45Z",
        "closed_at": "2021-03-31T18:03:01Z",
        "merged_at": "2021-03-31T18:03:01Z",
        "body": "The artifacts of `java/lite` were not added to the `.gitignore`.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 72,
        "deletions": 20,
        "changed_files": 5,
        "created_at": "2021-03-30T21:56:23Z",
        "closed_at": "2021-10-13T00:13:03Z",
        "merged_at": null,
        "body": "For now, this is experimental and only used to ensure we don't regress\r\nthe parts that we already made compatible with the Abseil types.\r\n\r\nProgress on #3688",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 7,
        "changed_files": 2,
        "created_at": "2021-03-30T00:38:58Z",
        "closed_at": "2021-04-01T19:16:53Z",
        "merged_at": "2021-04-01T19:16:53Z",
        "body": "If the message types are different, equality comparison must return\r\nfalse.\r\n\r\nFixes: https://github.com/protocolbuffers/protobuf/issues/8427",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 54,
        "deletions": 23,
        "changed_files": 4,
        "created_at": "2021-03-29T08:32:36Z",
        "closed_at": "2021-10-14T17:50:56Z",
        "merged_at": null,
        "body": "This is a proposition to use ReadOnlyMemory<byte> inside CodedInputStream. This is useful to parse buffers returned as ReadOnlyMemory<byte> from some APIs without copying back to a byte array.\r\nThe rest of the code is already using Span<byte> so the change is of low impact.\r\n\r\nWhen a stream is provided, a byte[] is still necessary to read the stream, and is stored in the internalBuffer field. When given directly a byte[], it is also stored in this field. In this case, the buffer field is just the .AsMemory() of this field.\r\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 81,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2021-03-25T18:46:38Z",
        "closed_at": "2021-03-29T20:31:28Z",
        "merged_at": "2021-03-29T20:31:28Z",
        "body": "Previously our secondary map (needed only on Ruby <2.7) was growing without bound.\r\n\r\nThis PR adds a periodic GC pass of the secondary map to avoid this unbounded memory growth.\r\n\r\nFixes: https://github.com/protocolbuffers/protobuf/issues/8421",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2021-03-23T22:09:55Z",
        "closed_at": "2021-03-24T02:58:29Z",
        "merged_at": "2021-03-24T02:58:29Z",
        "body": "This closes #8349, although we will probably still pursue some other name in the future.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1256,
        "deletions": 739,
        "changed_files": 101,
        "created_at": "2021-03-22T23:33:21Z",
        "closed_at": "2021-03-23T01:05:17Z",
        "merged_at": "2021-03-23T01:05:17Z",
        "body": "**Important:** this integration must be merged, not squashed!",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 132,
        "deletions": 212,
        "changed_files": 4,
        "created_at": "2021-03-20T17:38:35Z",
        "closed_at": "2021-03-30T18:28:50Z",
        "merged_at": "2021-03-30T18:28:50Z",
        "body": "This makes it compatible with absl::uint128",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2021-03-18T06:58:23Z",
        "closed_at": "2022-05-16T18:13:16Z",
        "merged_at": null,
        "body": "It looks like [this patch](protocolbuffers/protobuf-javascript#97) fixes protocolbuffers/protobuf-javascript#97, a 5 year old issue I just ran into. It would be awesome if it could get merged!",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-03-17T14:48:20Z",
        "closed_at": "2021-03-18T21:11:58Z",
        "merged_at": "2021-03-18T21:11:58Z",
        "body": "\u2026 a successful return value when writing the zip file fails",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 58,
        "deletions": 58,
        "changed_files": 13,
        "created_at": "2021-03-16T20:21:02Z",
        "closed_at": "2021-03-18T15:46:19Z",
        "merged_at": "2021-03-18T15:46:19Z",
        "body": "Since proto objects inherits Message class with virtual destructor, they need to override it.\r\n\r\nThis warning was introduced by clang-11 compiler.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 171,
        "deletions": 411,
        "changed_files": 18,
        "created_at": "2021-03-14T16:08:06Z",
        "closed_at": "2021-03-23T18:54:09Z",
        "merged_at": "2021-03-23T18:54:09Z",
        "body": "This change makes `StatusOr` and `StringPiece` more like\r\n`absl::StatusOr` and `{absl,std}::string_view`.\r\n\r\nNote that there is more work required before the Abseil types can be\r\nused as drop-in replacement.\r\n\r\nProgress on #3688",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 512,
        "deletions": 213,
        "changed_files": 18,
        "created_at": "2021-03-14T12:51:22Z",
        "closed_at": "2021-03-15T20:37:06Z",
        "merged_at": "2021-03-15T20:37:06Z",
        "body": "Progress on #3688",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 68,
        "deletions": 37,
        "changed_files": 34,
        "created_at": "2021-03-12T23:06:05Z",
        "closed_at": "2021-03-16T18:01:35Z",
        "merged_at": "2021-03-16T18:01:35Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 55,
        "deletions": 36,
        "changed_files": 32,
        "created_at": "2021-03-10T18:18:01Z",
        "closed_at": "2021-03-10T22:53:26Z",
        "merged_at": "2021-03-10T22:53:26Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-03-10T14:21:11Z",
        "closed_at": "2021-03-10T16:20:19Z",
        "merged_at": "2021-03-10T16:20:19Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 47,
        "changed_files": 2,
        "created_at": "2021-03-10T09:23:17Z",
        "closed_at": "2021-03-12T17:13:13Z",
        "merged_at": "2021-03-12T17:13:13Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 108,
        "deletions": 1,
        "changed_files": 5,
        "created_at": "2021-03-08T11:55:57Z",
        "closed_at": "2021-04-05T21:12:54Z",
        "merged_at": "2021-04-05T21:12:54Z",
        "body": "Similar to https://github.com/protocolbuffers/protobuf/pull/8391 (which adds C++ emulated tests), but requires a bit more trickery since we need aarch64 python to run the python tests.\r\n\r\nBased on https://github.com/protocolbuffers/protobuf/pull/8280.\r\n\r\n- I can now run the python tests manually and they are passing (just run `kokoro/linux/aarch64/test_python_aarch64.sh`\r\n- The whole build and test only takes a few minutes.\r\n- Kokoro CI intergration is coming in a followup PR.\r\n\r\nBased on the tests in this PR, I'm pretty confident that the wheels being added in https://github.com/protocolbuffers/protobuf/pull/8280 actually work fine (the crosscompiled python extension passed all the unittests, the wheel does pass auditwheel check and it's also installable and a smokecheck works).\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 89,
        "deletions": 0,
        "changed_files": 6,
        "created_at": "2021-03-08T10:18:55Z",
        "closed_at": "2021-04-29T16:20:55Z",
        "merged_at": "2021-04-29T16:20:55Z",
        "body": "Add a script that crosscompiles C++ under a crosscompiler  (and uses dockcross docker image for that) and then runs C++ test suite under QEMU emulator.\r\n\r\n- the tests pass and the the whole build + tests only takes a few minutes (= faster than if we were compiled everything under and emulator, which would be quite slow).\r\n- for now there's no kokoro job to actually run the tests, but setting up one is easy (I plan to do that as a followup PR)\r\n- dockcross docker image is used since it makes everything much easier (see comments in the code)\r\n- for manual run, just run `kokoro/linux/aarch64/test_cpp_aarch64.sh`\r\n\r\n\r\nWhat the kokoro test output would look like if the kokoro job was already created (I used a hack to obtain an adhoc run):\r\nsponge/988880f9-7e8f-465b-8ff9-9483d6ce2f0d",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2021-03-08T06:44:14Z",
        "closed_at": "2021-03-08T19:13:03Z",
        "merged_at": "2021-03-08T19:13:03Z",
        "body": "s/FielDescriptor/FieldDescriptor/g",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-03-06T15:58:05Z",
        "closed_at": "2021-03-09T17:14:23Z",
        "merged_at": "2021-03-09T17:14:23Z",
        "body": "Hi -- I'm the CTO at a startup (Coach Client Connect) and we're getting ready to release our product this month. In a nutshell, our software helps manage and run coaching and training programs. We have a GRPC API and we use custom protobuf options for various purposes; if possible, I'd like to register an extension number to avoid conflicts. \r\n\r\nOur website (www.coachclientconnect.com) is not up yet but will be very soon, can I go ahead and reserve a number now or should I wait until the site is up?\r\n\r\nAlso, I noticed the guidelines say that a contributor's license is required. I'm happy to fill one out but just wanted to check first if it's required for this change (i.e. no code, just a change to the docs).\r\n\r\nThanks!",
        "comments": 19
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 9,
        "changed_files": 5,
        "created_at": "2021-03-06T02:17:59Z",
        "closed_at": "2021-03-10T16:09:44Z",
        "merged_at": "2021-03-10T16:09:44Z",
        "body": "Fixes #8340",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2021-03-05T16:26:40Z",
        "closed_at": "2021-03-05T20:36:22Z",
        "merged_at": "2021-03-05T20:36:22Z",
        "body": "Fixes: https://github.com/protocolbuffers/protobuf/issues/8385",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 64,
        "deletions": 39,
        "changed_files": 34,
        "created_at": "2021-03-05T01:52:27Z",
        "closed_at": "2021-03-05T15:28:49Z",
        "merged_at": "2021-03-05T15:28:48Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 62,
        "deletions": 36,
        "changed_files": 32,
        "created_at": "2021-03-04T18:59:08Z",
        "closed_at": "2021-03-04T21:35:05Z",
        "merged_at": "2021-03-04T21:35:04Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2021-03-04T17:15:12Z",
        "closed_at": "2021-03-04T18:17:03Z",
        "merged_at": "2021-03-04T18:17:03Z",
        "body": "This is a resend of https://github.com/protocolbuffers/protobuf/pull/8364 which was accidentally merged to master instead of 3.15.x.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-03-04T16:44:01Z",
        "closed_at": "2021-03-12T17:28:32Z",
        "merged_at": null,
        "body": "This is supposed to be optional, not enabled by default.\r\n\r\n@dkorchynskyi-axcient: as promised\r\n\r\n@acozzette we might want to merge this sooner rather than later.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-03-04T16:42:57Z",
        "closed_at": "2021-03-04T18:18:33Z",
        "merged_at": "2021-03-04T18:18:33Z",
        "body": "This is supposed to be optional, not enabled by default.\r\n\r\n@dkorchynskyi-axcient: as promised\r\n\r\n@acozzette we might want to merge this sooner rather than later.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-03-04T14:33:03Z",
        "closed_at": "2021-03-04T16:34:49Z",
        "merged_at": null,
        "body": "This is supposed to be an option, not something we use in general",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-03-04T14:31:31Z",
        "closed_at": "2021-03-04T16:35:13Z",
        "merged_at": null,
        "body": "This is supposed to be an option, not something we use in general",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2021-03-04T10:42:05Z",
        "closed_at": "2021-03-15T19:51:14Z",
        "merged_at": "2021-03-15T19:51:13Z",
        "body": "Added `PROTOC_OPTIONS` argument to `protobuf_generate` cmake-function.\r\nThis gives ability to pass any required options to `protoc` executable, e.g. `--experimental_allow_proto3_optional`, or `--proto-path`.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 74,
        "deletions": 71,
        "changed_files": 36,
        "created_at": "2021-03-03T22:32:44Z",
        "closed_at": "2021-03-03T23:58:01Z",
        "merged_at": "2021-03-03T23:58:01Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-03-03T22:08:38Z",
        "closed_at": "2021-03-03T23:30:01Z",
        "merged_at": "2021-03-03T23:30:00Z",
        "body": "Reverts protocolbuffers/protobuf#8352\r\n\r\nThe flag was already flipped in de371235c9f50eadad7a3562572b79a9422cd754.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 63,
        "deletions": 43,
        "changed_files": 32,
        "created_at": "2021-03-02T23:32:27Z",
        "closed_at": "2021-03-03T19:37:48Z",
        "merged_at": "2021-03-03T19:37:48Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2021-03-02T21:41:06Z",
        "closed_at": "2021-03-02T23:17:13Z",
        "merged_at": "2021-03-02T23:17:13Z",
        "body": "The code mistakenly called realloc() instead of resize() on every\r\narray append, causing quadratic memory usage.\r\n\r\nThis fixes the problem reported in https://github.com/protocolbuffers/protobuf/issues/8337#issuecomment-789119303",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 28,
        "changed_files": 4,
        "created_at": "2021-03-02T20:46:05Z",
        "closed_at": "2021-03-03T01:26:47Z",
        "merged_at": "2021-03-03T01:26:47Z",
        "body": "We cannot have nil messages in repeated fields or maps, it is semantically undefined what it would mean to serialize that. It is a bug that nil messages were ever allowed.\r\n\r\nFixes: https://github.com/protocolbuffers/protobuf/issues/8359",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-03-02T19:56:54Z",
        "closed_at": "2021-03-03T18:14:31Z",
        "merged_at": "2021-03-03T18:14:31Z",
        "body": "This handler is called throughout the Zend engine code and in none of the cases the result is checked for NULL because the engine expects it to be a valid zval.\r\nIf there is no such property, the object has to return &EG(uninitialized_zval).\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-03-02T19:23:16Z",
        "closed_at": "2021-03-02T21:47:06Z",
        "merged_at": "2021-03-02T21:47:06Z",
        "body": "This is useful for Conan recipes that build Protobuf, in which\r\nwhatever we want to enable has to be enabled in the initial command line.\r\nWithout this, the people maintaining the recipe have to patch the CMake\r\nsetup of Protobuf before building the binaries.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2021-03-01T15:02:02Z",
        "closed_at": "2021-03-04T17:30:23Z",
        "merged_at": "2021-03-04T17:30:23Z",
        "body": "@haberman ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 50,
        "deletions": 8,
        "changed_files": 4,
        "created_at": "2021-03-01T08:16:55Z",
        "closed_at": "2021-04-20T18:21:35Z",
        "merged_at": "2021-04-20T18:21:35Z",
        "body": "This adds support for the `json_name` field definition, per the Proto3 spec.\r\n\r\nNote the JSON output mechanism is already reading the `json_name` from ubp's struct (see [here](https://github.com/protocolbuffers/protobuf/blob/cf28f28347d65e352f429263500f982ae3e51aed/ruby/ext/google/protobuf_c/ruby-upb.c#L5730)), but this was not being added to the generated Ruby DSL, or read in from the DSL into the ubp field definitions.",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 90,
        "deletions": 86,
        "changed_files": 9,
        "created_at": "2021-02-28T16:04:32Z",
        "closed_at": "2021-03-12T19:01:01Z",
        "merged_at": "2021-03-12T19:01:01Z",
        "body": "This change refactors util::Status to have a similar shape as the\r\nrecently open-sourced absl::Status. This will allow Protobuf to\r\neventually use absl::Status and reduce the codesize.\r\n\r\nNote that there is more work required before absl::Status can be used.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 51,
        "changed_files": 3,
        "created_at": "2021-02-27T17:04:33Z",
        "closed_at": "2021-03-02T00:29:00Z",
        "merged_at": "2021-03-02T00:29:00Z",
        "body": "Protobuf no longer supports C++ < 11, so this type is no longer\r\nrequired.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-02-27T14:01:05Z",
        "closed_at": "2021-03-02T19:17:52Z",
        "merged_at": "2021-03-02T19:17:52Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2021-02-27T12:16:22Z",
        "closed_at": "2021-03-02T19:10:46Z",
        "merged_at": "2021-03-02T19:10:46Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2059,
        "deletions": 2854,
        "changed_files": 88,
        "created_at": "2021-02-26T18:49:13Z",
        "closed_at": "2021-03-03T22:59:35Z",
        "merged_at": "2021-03-03T22:59:35Z",
        "body": "**Important:** this integration must be merged, not squashed!",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 157,
        "deletions": 152,
        "changed_files": 38,
        "created_at": "2021-02-25T23:59:29Z",
        "closed_at": "2021-02-26T01:02:41Z",
        "merged_at": "2021-02-26T01:02:41Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-02-25T20:26:32Z",
        "closed_at": "2021-03-02T19:09:29Z",
        "merged_at": "2021-03-02T19:09:29Z",
        "body": "This is useful for Conan recipes that build Protobuf, in which\r\nwhatever we want to enable has to be enabled in the initial command line.\r\nWithout this, the people maintaining the recipe have to patch the CMake\r\nsetup of Protobuf before building the binaries.\r\n\r\nCloses #5541",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-02-25T19:29:00Z",
        "closed_at": "2021-04-24T03:03:02Z",
        "merged_at": "2021-04-24T03:03:02Z",
        "body": "@gnossen gave a great overview in https://github.com/grpc/grpc/pull/24992 of the overall problem.\r\n\r\nIf a python process using both protobuf _and_ another native library linking in libprotobuf\r\nfrequently can cause crashes.  This seems to frequently affect tensorflow as well:\r\n\r\ntensorflow/tensorflow#8394,\r\ntensorflow/tensorflow#9525 (comment)\r\ntensorflow/tensorflow#24976,\r\ntensorflow/tensorflow#35573,\r\nhttps://github.com/tensorflow/tensorflow/blob/v2.0.0/tensorflow/contrib/makefile/rename_protobuf.sh,\r\ntensorflow/tensorflow#16104\r\n\r\nThis fixes both crashes when linking in multiple versions of protobuf\r\nand fixes `DescriptorPool` clashes as well (e.g. Python and Native code import different versions of the same message).",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 14,
        "changed_files": 5,
        "created_at": "2021-02-25T14:11:33Z",
        "closed_at": "2021-03-01T20:59:39Z",
        "merged_at": "2021-03-01T20:59:39Z",
        "body": "This one is somewhat tricky.\r\n\r\nAccording to C Language Standard `\"string\"` has type `char[7]` (that is, 6 letters + null terminator).\r\n\r\nAccording to C++ Standard, however, it has its natural type of `const char[7]` (see [cppreference](https://en.cppreference.com/w/cpp/language/string_literal)).\r\n\r\nAn attempt to write `char* ptr = \"string\";`, however, does not cause any errors when compiled by clang or gcc.\r\nMSVC has `/permissive-` flag which is off by default, unless `/std:c++latest` is used.\r\n\r\nThis PR fixes issues caused by this type mismatch.\r\n\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 49,
        "deletions": 34,
        "changed_files": 31,
        "created_at": "2021-02-25T00:58:19Z",
        "closed_at": "2021-02-25T17:20:20Z",
        "merged_at": "2021-02-25T17:20:20Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 25,
        "changed_files": 5,
        "created_at": "2021-02-24T00:48:01Z",
        "closed_at": "2021-03-04T19:00:42Z",
        "merged_at": "2021-03-04T19:00:41Z",
        "body": "\"Old\" buffer API will removed in Python 3.10. This is also fix #7930.",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 72,
        "deletions": 40,
        "changed_files": 36,
        "created_at": "2021-02-23T23:56:10Z",
        "closed_at": "2021-02-25T00:46:27Z",
        "merged_at": "2021-02-25T00:46:27Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-02-23T21:21:44Z",
        "closed_at": "2021-03-05T23:22:54Z",
        "merged_at": null,
        "body": "This pull request is primarily to exemplify an issue with floats.\r\nIf you have a proto message with the maximum float value you can successfully decode the proto message into a python dictionary.\r\nIf you attempt to reencode that value into a new proto message the encoding will fail, raising\r\n`google.protobuf.json_format.ParseError: Failed to parse floatValue field: Float value too large.`\r\n\r\nSee [issue](https://github.com/protocolbuffers/protobuf/issues/8336)",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 57,
        "deletions": 34,
        "changed_files": 32,
        "created_at": "2021-02-23T19:42:37Z",
        "closed_at": "2021-02-23T21:21:42Z",
        "merged_at": "2021-02-23T21:21:42Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 11,
        "changed_files": 1,
        "created_at": "2021-02-23T19:30:27Z",
        "closed_at": "2021-02-23T21:21:27Z",
        "merged_at": "2021-02-23T21:21:27Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 15,
        "deletions": 6,
        "changed_files": 4,
        "created_at": "2021-02-23T01:17:47Z",
        "closed_at": "2021-02-23T02:19:44Z",
        "merged_at": "2021-02-23T02:19:44Z",
        "body": "This fix is similar to the previous bug found in\r\nMessage.[]. The fix is the same: we need to handle\r\narrays and maps properly.\r\n\r\nFixes: https://github.com/protocolbuffers/protobuf/issues/8325",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 124,
        "deletions": 67,
        "changed_files": 36,
        "created_at": "2021-02-22T19:06:11Z",
        "closed_at": "2021-02-22T20:29:27Z",
        "merged_at": "2021-02-22T20:29:27Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 25,
        "deletions": 24,
        "changed_files": 1,
        "created_at": "2021-02-22T15:30:43Z",
        "closed_at": "2021-02-22T18:08:32Z",
        "merged_at": "2021-02-22T18:08:32Z",
        "body": "Since the keys are `Class`-s, there's no need to hash/copy/etc. them. This\r\navoids causing `+initialize` on the classes just when building up a registry.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 18,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2021-02-22T10:29:55Z",
        "closed_at": "2021-04-07T20:02:23Z",
        "merged_at": "2021-04-07T20:02:23Z",
        "body": "Fixes: https://github.com/protocolbuffers/protobuf/issues/8326",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 11,
        "changed_files": 1,
        "created_at": "2021-02-20T09:10:47Z",
        "closed_at": "2021-02-23T19:20:03Z",
        "merged_at": "2021-02-23T19:20:03Z",
        "body": "The #ifdef block is duplicated with the above (which was fixed in 3.15.1).\r\n\r\nIt would be great to have this fix backported to 3.15.1 (and released as 3.15.2).",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 495,
        "deletions": 64,
        "changed_files": 20,
        "created_at": "2021-02-20T03:06:02Z",
        "closed_at": "2021-02-23T01:28:04Z",
        "merged_at": null,
        "body": "1. support [lazy = true] options for c++ message field.\r\n2. fix unit test bug.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2021-02-19T21:36:18Z",
        "closed_at": "2021-03-15T20:13:28Z",
        "merged_at": "2021-03-15T20:13:28Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2021-02-19T20:56:03Z",
        "closed_at": "2021-02-19T23:11:34Z",
        "merged_at": "2021-02-19T23:11:34Z",
        "body": "Our use of constinit does not seem to work with GCC yet (see\r\nhttps://github.com/protocolbuffers/protobuf/issues/8310), so this\r\ncommit disables it on GCC for now.\r\n\r\nThis commit also updates mutex.h to work around the fact that MinGW's\r\nstd::mutex apparently does not have a constexpr constructor. We already\r\nhave this kind of workaround for MSVC, so we can just use the same\r\nworkaround.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 54,
        "deletions": 34,
        "changed_files": 32,
        "created_at": "2021-02-19T19:08:08Z",
        "closed_at": "2021-02-19T23:12:24Z",
        "merged_at": "2021-02-19T23:12:24Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-02-18T23:38:23Z",
        "closed_at": "2021-03-02T00:38:00Z",
        "merged_at": "2021-03-02T00:38:00Z",
        "body": "\u2026true [-Werror=type-limits]\r\n\r\nThis fixes the following build error:\r\n```\r\nIn file included from no_warning_test.cc:7:\r\n../../src/google/protobuf/parse_context.h: In instantiation of 'const char* google::protobuf::internal::EpsCopyInputStream::AppendUntilEnd(const char*, const A&) [with A = google::protobuf::internal::EpsCopyInputStream::AppendString(const char*, std::string*)::<lambda(const char*, ptrdiff_t)>]':\r\n../../src/google/protobuf/parse_context.h:366:70:   required from here\r\n../../src/google/protobuf/stubs/logging.h:161:48: error: comparison of unsigned expression in '>= 0' is always true [-Werror=type-limits]\r\n  161 | #define GOOGLE_CHECK_GE(A, B) GOOGLE_CHECK((A) >= (B))\r\n      |                                                ^\r\n../../src/google/protobuf/stubs/logging.h:151:5: note: in definition of macro 'GOOGLE_LOG_IF'\r\n  151 |   !(CONDITION) ? (void)0 : GOOGLE_LOG(LEVEL)\r\n      |     ^~~~~~~~~\r\n../../src/google/protobuf/stubs/logging.h:161:31: note: in expansion of macro 'GOOGLE_CHECK'\r\n  161 | #define GOOGLE_CHECK_GE(A, B) GOOGLE_CHECK((A) >= (B))\r\n      |                               ^~~~~~~~~~~~\r\n../../src/google/protobuf/stubs/logging.h:201:26: note: in expansion of macro 'GOOGLE_CHECK_GE'\r\n  201 | #define GOOGLE_DCHECK_GE GOOGLE_CHECK_GE\r\n      |                          ^~~~~~~~~~~~~~~\r\n../../src/google/protobuf/parse_context.h:351:7: note: in expansion of macro 'GOOGLE_DCHECK_GE'\r\n  351 |       GOOGLE_DCHECK_GE(chunk_size, static_cast<size_t>(0));\r\n      |       ^~~~~~~~~~~~~~~~\r\ncc1plus: all warnings being treated as errors\r\n```\r\n\r\nIndeed gcc is true, comparing size_t value >= 0 is always true.\r\n\r\nCheers,\r\nRomain",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 171,
        "deletions": 70,
        "changed_files": 36,
        "created_at": "2021-02-18T23:34:53Z",
        "closed_at": "2021-02-19T00:53:24Z",
        "merged_at": "2021-02-19T00:53:24Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 37,
        "deletions": 22,
        "changed_files": 18,
        "created_at": "2021-02-18T18:37:24Z",
        "closed_at": "2021-02-18T19:50:15Z",
        "merged_at": "2021-02-18T19:50:15Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 37,
        "deletions": 22,
        "changed_files": 18,
        "created_at": "2021-02-17T17:15:18Z",
        "closed_at": "2021-02-17T18:51:33Z",
        "merged_at": "2021-02-17T18:51:33Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 274,
        "deletions": 161,
        "changed_files": 45,
        "created_at": "2021-02-17T11:08:11Z",
        "closed_at": "2021-10-13T00:15:44Z",
        "merged_at": null,
        "body": "We need custom well-known types in a project since we need to handle some oneOfs differently based on the type. The current code base already support well-known types (for types well-known to protobuf) but doesn't allow to add custom well-known types. We first thought about using `ICustomDiagnosticMessage`, but this changes the behavior of the `JsonFormatter` and also doesn't allow parsing.\r\n\r\nThe only current work-around for `JsonParser` is to copy the complete code of `JsonParser`, `JsonTokenizer` and `JsonToken` into our own code base to add the handlers directly into the code.\r\n\r\n- Cleanup of unused code\r\n- Unification of `JsonFormatter` and `JsonParser` code for well-known type handling\r\n- Support for `AddWellKnownTypeHandlers` in `JsonFormatter` and `JsonParser` to allow custom handling\r\n- Made `JsonTokenizer` and `JsonToken` public as they are needed for `JsonParser` handlers\r\n- Added tests for new code",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-02-17T05:26:03Z",
        "closed_at": "2021-02-17T17:44:48Z",
        "merged_at": "2021-02-17T17:44:48Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-02-16T20:04:46Z",
        "closed_at": "2021-03-02T01:32:31Z",
        "merged_at": "2021-03-02T01:32:31Z",
        "body": "Fixes:\r\n```\r\nINSTALL TARGETS given no BUNDLE DESTINATION for MACOSX_BUNDLE executable\r\n```\r\n\r\nThe usefulness of these binaries on iOS can be discussed but it helps if the build \"just works\".\r\nIn my case this change will help to exclude special handling when using protobuf trough\r\nthe Conan package manager.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 11,
        "changed_files": 1,
        "created_at": "2021-02-16T18:22:56Z",
        "closed_at": "2021-02-20T00:11:49Z",
        "merged_at": null,
        "body": "Currently errors out any clang compilation on windows with mingw-w64 as std::mutex is not set with constexpr\r\n\r\nfull error:\r\n```c++\r\n../../src/google/protobuf/struct.pb.cc:42:76: error: variable does not have a constant initializer\r\nPROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_NO_DESTROY StructDefaultTypeInternal _Struct_default_instance_;\r\n                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~\r\n../../src/google/protobuf/struct.pb.cc:42:1: note: required by 'require_constant_initialization' attribute here\r\nPROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_NO_DESTROY StructDefaultTypeInternal _Struct_default_instance_;\r\n^~~~~~~~~~~~~~~~~~\r\n../../src\\google/protobuf/port_def.inc:580:30: note: expanded from macro 'PROTOBUF_CONSTINIT'\r\n\\#define PROTOBUF_CONSTINIT [[clang::require_constant_initialization]]\r\n                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n../../src\\google/protobuf/stubs/mutex.h:132:17: note: non-constexpr constructor 'mutex' cannot be used in a constant expression\r\n  std::mutex mu_{};\r\n                ^\r\n../../src\\google/protobuf/map_field.h:336:9: note: in call to 'WrappedMutex()'\r\n        mutex_(GOOGLE_PROTOBUF_LINKER_INITIALIZED),\r\n        ^\r\n../../src\\google/protobuf/map_field.h:485:9: note: in call to 'MapFieldBase({})'\r\n      : MapFieldBase(tag) {}\r\n        ^\r\n../../src\\google/protobuf/map_field.h:546:9: note: in call to 'TypeDefinedMapFieldBase({})'\r\n      : TypeDefinedMapFieldBase<Key, T>(tag), impl_() {}\r\n        ^\r\n../../src/google/protobuf/struct.pb.cc:33:5: note: in call to 'MapField({})'\r\n  : fields_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}){}\r\n    ^\r\n../../src/google/protobuf/struct.pb.cc:36:7: note: in call to 'Struct({})'\r\n    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}\r\n      ^\r\n../../src/google/protobuf/struct.pb.cc:42:76: note: in call to 'StructDefaultTypeInternal()'\r\nPROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_NO_DESTROY StructDefaultTypeInternal _Struct_default_instance_;\r\n                                                                           ^\r\nD:\\mabs\\msys64\\mingw64\\include\\c++\\10.2.0\\bits/std_mutex.h:91:5: note: declared here\r\n    mutex() noexcept = default;\r\n    ^\r\n1 error generated.\r\n```\r\n",
        "comments": 11
    },
    {
        "merged": true,
        "additions": 59,
        "deletions": 59,
        "changed_files": 13,
        "created_at": "2021-02-14T15:10:30Z",
        "closed_at": "2021-02-17T18:39:12Z",
        "merged_at": "2021-02-17T18:39:12Z",
        "body": "According to cppreference: https://en.cppreference.com/w/cpp/language/declarations#Simple_declaration\r\n\r\nIt should be: \r\n`Attributes Specifiers Type Identifier [ = init_value];`\r\nnot:\r\n`Specifiers Attributes Type Identifier [ = init_value];`\r\n\r\nThis pull request solves that.\r\n\r\nIssue is shown here:\r\nhttps://godbolt.org/z/xncqfh",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 18,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-02-13T01:19:37Z",
        "closed_at": "2021-02-18T00:10:42Z",
        "merged_at": "2021-02-18T00:10:42Z",
        "body": "Some initial text pertaining to the use of protobuf with AOT compilation tools such as the one provided by GraalVM native-image.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 31,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-02-12T10:00:34Z",
        "closed_at": "2021-10-13T21:19:42Z",
        "merged_at": "2021-10-13T21:19:42Z",
        "body": "These are additional possibilities for --crosstool_top for Android NDK\r\ncompilation. Since the NDK doesn't have -lpthread, getting these flags\r\nwrong leads to a linker error.\r\n\r\nFixes: 180084220",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2021-02-12T00:41:53Z",
        "closed_at": "2021-02-12T04:25:26Z",
        "merged_at": "2021-02-12T04:25:26Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2021-02-12T00:15:50Z",
        "closed_at": "2021-03-12T21:56:36Z",
        "merged_at": "2021-03-12T21:56:36Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2021-02-11T16:37:38Z",
        "closed_at": "2021-02-12T00:36:31Z",
        "merged_at": "2021-02-12T00:36:31Z",
        "body": "See #8049 ",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2021-02-11T08:43:01Z",
        "closed_at": "2021-03-15T18:34:59Z",
        "merged_at": "2021-03-15T18:34:59Z",
        "body": "When cross-compiling for android, the android logging code is activated, but liblog.so is not linked in.\r\n\r\nThis patch fixes that.",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-02-10T19:54:45Z",
        "closed_at": "2021-02-10T21:08:03Z",
        "merged_at": "2021-02-10T21:08:03Z",
        "body": "The installation of apt-transport-https is failing and causing this\r\nscript to exit early. I suspect the package is no longer needed since\r\nrecent versions have moved it into the apt package, so this change\r\nupdates the script to stop trying to install apt-transport-https.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 91,
        "deletions": 6,
        "changed_files": 3,
        "created_at": "2021-02-10T14:53:30Z",
        "closed_at": "2021-03-30T02:04:16Z",
        "merged_at": "2021-03-30T02:04:16Z",
        "body": "Build crosscompiled aarch64 python wheels under dockcross manylinux2014 image.\r\n\r\nSupersedes https://github.com/protocolbuffers/protobuf/pull/8196 (some of the challenges I'm solving in this PR are already described there).\r\n\r\nKey points:\r\n- manylinux2014 should be good enough for the aarch wheels (manylinux2014 seems to be the first manylinux version that has official aarch64 support).\r\n- a few workarounds are applied but overall the diff is pretty small and change changes integrate pretty well with the existing multibuild-based workflow for building python wheels.\r\n- the build time for an aarch64 wheel is comparable to the build of x86_64 wheel (which is expected, as this is doing crosscompilation).\r\n- the advantage of the setup in this PR is that all the linux wheels can be built on a single kokoro x64 machine and there are no changes needed to the release process and / or the way the wheels are being collected after being built (which seems quite important due to the complexity of the release process). Another obvious advantage is that no arm64 hardware is needed.\r\n\r\nI smoke tested the resulting aarch64 wheel manually on a real arm64 machine and I also ran \"auditwheel show\" and no issues were reported - so I'm quite confident that they work just fine. ",
        "comments": 14
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-02-10T01:48:30Z",
        "closed_at": "2021-02-11T00:04:23Z",
        "merged_at": "2021-02-11T00:04:23Z",
        "body": "Also changed it to zend_error() so it is more easily suppressed.\r\n\r\nErrors will now look like:\r\n\r\n> PHP Warning:  proto descriptor was previously loaded (included in multiple metadata bundles?): google/ads/googleads/v6/errors/feed_item_validation_error.proto in /usr/local/google/home/haberman/code/google-ads-php/metadata/Google/Ads/GoogleAds/V6/Services/GoogleAdsService.php on line 29\r\n\r\nFixes https://github.com/protocolbuffers/protobuf/issues/8124",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 341,
        "deletions": 1,
        "changed_files": 14,
        "created_at": "2021-02-09T09:04:22Z",
        "closed_at": "2021-02-20T02:00:17Z",
        "merged_at": null,
        "body": "c++\r\n\r\nrelease notes: allow setting string fields from std::string_view in c++17 and above.\r\n\r\nSigned-off-by: Alexander V. Lukyanov <lavv17f@gmail.com>\r\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 5882,
        "deletions": 3,
        "changed_files": 71,
        "created_at": "2021-02-09T00:36:16Z",
        "closed_at": "2021-04-21T17:29:26Z",
        "merged_at": "2021-04-21T17:29:26Z",
        "body": "Adding kotlin syntax to java protobufs.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 45,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2021-02-08T08:12:53Z",
        "closed_at": "2021-02-20T08:12:24Z",
        "merged_at": null,
        "body": "These changes will run `grpc_python_out` when  `grpc_proto_files` are provided.\r\nThe changes will also not affect the current implementation as the new fields are optional and the `grpc_python_out` command runs after the original `spawn` (python_out) is done.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2021-02-08T08:03:52Z",
        "closed_at": "2021-02-12T00:00:50Z",
        "merged_at": "2021-02-12T00:00:50Z",
        "body": "Sorry, I forgot that I should reserve a range of IDs and not a single one for our projects.\r\n\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 45,
        "deletions": 10,
        "changed_files": 1,
        "created_at": "2021-02-06T00:17:23Z",
        "closed_at": "2021-02-08T18:52:38Z",
        "merged_at": "2021-02-08T18:52:38Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 71,
        "deletions": 56,
        "changed_files": 31,
        "created_at": "2021-02-05T22:20:00Z",
        "closed_at": "2021-02-05T23:37:11Z",
        "merged_at": "2021-02-05T23:37:11Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1007,
        "deletions": 977,
        "changed_files": 40,
        "created_at": "2021-02-04T22:17:35Z",
        "closed_at": "2021-02-05T03:02:16Z",
        "merged_at": "2021-02-05T03:02:16Z",
        "body": "**Important:** this integration must be merged, not squashed!",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2021-02-04T21:33:41Z",
        "closed_at": "2021-02-17T18:25:51Z",
        "merged_at": null,
        "body": "mingw-w64 lacks endian.h, but had sys/param.h meaning\r\na91adf173b355924070dd50caba3aff41ae0fcdf broke non-msvc windows\r\ncompilation\r\n\r\nSigned-off-by: Christopher Degawa <ccom@randomderp.com>",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 19,
        "deletions": 10,
        "changed_files": 4,
        "created_at": "2021-02-03T23:02:36Z",
        "closed_at": "2021-02-04T01:59:11Z",
        "merged_at": "2021-02-04T01:59:10Z",
        "body": "This is to pick up https://github.com/protocolbuffers/upb/pull/367\r\n\r\nFixes https://github.com/protocolbuffers/protobuf/issues/8071",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 19,
        "deletions": 618,
        "changed_files": 8,
        "created_at": "2021-02-03T20:54:58Z",
        "closed_at": "2021-10-15T20:11:12Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2021-02-03T12:38:19Z",
        "closed_at": "2021-02-05T18:34:05Z",
        "merged_at": "2021-02-05T18:34:05Z",
        "body": "We have created 2 projects we expect might be used by others so we would like to avoid extension id collision.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 52,
        "deletions": 8,
        "changed_files": 2,
        "created_at": "2021-02-03T01:35:41Z",
        "closed_at": "2021-10-27T21:13:27Z",
        "merged_at": "2021-10-27T21:13:27Z",
        "body": "* Added capability to support from_* requests properly by adding class methods and returning self for instance methods\r\n    * `Timestamp.from_time`\r\n    * `Value.from_ruby`\r\n\r\n---\r\n\r\nRelated PR: https://github.com/protocolbuffers/protobuf/pull/6685 (abandoned by author)\r\n\r\n---\r\n\r\n**Note**\r\n\r\n> *   Make sure that all tests are passing before approval.\r\n> *   Apply the \"release notes: yes\" label if the pull request's description should be included in the next release (e.g., any new feature / bug fix). Apply the \"release notes: no\" label if the pull request's description should not be included in the next release (e.g., refactoring changes that does not change behavior, integration from Google internal, updating tests, etc.).\r\n> *   Apply the appropriate language label (e.g., C++, Java, Python, etc.) to the pull request. This will make it easier to identify which languages the pull request affects, allowing us to better identify appropriate reviewer, create a better release note, and make it easier to identify issues in the future.\r\n\r\nI do not appear to be able to add any labels. `CONTRIBUTING.md` should be updated if this is the case.",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 12,
        "changed_files": 4,
        "created_at": "2021-02-02T22:29:44Z",
        "closed_at": "2021-02-02T23:43:45Z",
        "merged_at": "2021-02-02T23:43:45Z",
        "body": "PHP8 has a different method signature for clone_obj that takes a\r\nzend_object* instead of a zval*.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 52,
        "deletions": 2,
        "changed_files": 4,
        "created_at": "2021-02-02T22:12:36Z",
        "closed_at": "2021-02-04T17:50:29Z",
        "merged_at": "2021-02-04T17:50:29Z",
        "body": "Test for pure php5 implementation was removed by mistake in https://github.com/protocolbuffers/protobuf/pull/7956",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 120,
        "changed_files": 5,
        "created_at": "2021-02-02T13:47:18Z",
        "closed_at": "2021-02-03T00:53:27Z",
        "merged_at": "2021-02-03T00:53:27Z",
        "body": "- these scripts haven't been updates for >3years and there are no references to them in this repo.\r\n- different set of scripts is mentioned in the internal release process documentation (use kokoro \"build_all_artifacts\" job and then run https://github.com/protocolbuffers/protobuf/blob/master/python/release.sh)\r\n\r\nNowadays, this seems to be script where python wheels are being built:\r\nhttps://github.com/protocolbuffers/protobuf/blob/master/kokoro/release/python/linux/build_artifacts.sh\r\n\r\nRemoving the obsolete scripts to avoid confusion.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 43,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2021-02-02T01:18:06Z",
        "closed_at": "2021-02-02T04:38:16Z",
        "merged_at": "2021-02-02T04:38:15Z",
        "body": "Fixes https://github.com/protocolbuffers/protobuf/issues/8229",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-02-01T19:16:18Z",
        "closed_at": "2021-02-01T23:48:51Z",
        "merged_at": "2021-02-01T23:48:51Z",
        "body": "We have a failing kokoro test, I don't know how to test this locally on my linux laptop. But this is the same fix I used internally to fix our failing windows kokoro tests.\r\n\r\nrelease notes: no",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 298,
        "deletions": 163,
        "changed_files": 12,
        "created_at": "2021-02-01T18:48:33Z",
        "closed_at": "2021-02-02T17:15:11Z",
        "merged_at": "2021-02-02T17:15:11Z",
        "body": "Also updated the code to use a TypeInfo struct for convenient\r\npassing of type and desc together. This simplified a lot of code\r\nand made this change easier to write.\r\n\r\nFixes https://github.com/protocolbuffers/protobuf/issues/8233",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2021-01-27T18:32:09Z",
        "closed_at": "2021-02-17T18:22:32Z",
        "merged_at": "2021-02-17T18:22:32Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2470,
        "deletions": 565,
        "changed_files": 5,
        "created_at": "2021-01-27T01:46:57Z",
        "closed_at": "2021-01-27T18:13:00Z",
        "merged_at": "2021-01-27T18:13:00Z",
        "body": "Fixes https://github.com/protocolbuffers/protobuf/issues/8114.\r\n\r\nThis pulls the latest changes for upb to pick up the bugfix in https://github.com/protocolbuffers/upb/pull/352.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2021-01-25T06:09:16Z",
        "closed_at": "2021-10-14T18:05:53Z",
        "merged_at": "2021-10-14T18:05:53Z",
        "body": "This PR adds builds for arm64-darwin. It also renames `universal-darwin` back to `x86_64-darwin` to avoid confusion. These arch names are already used in nokogiri, so I think it's fine to rename it back to them.\r\n\r\nSee https://github.com/protocolbuffers/protobuf/pull/8231 for a different approach.",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 150,
        "changed_files": 7,
        "created_at": "2021-01-25T05:49:05Z",
        "closed_at": "2021-10-13T02:05:09Z",
        "merged_at": null,
        "body": "rake-compiler-dock 1.1 added support for cross-compilation targeting x86_64-darwin and arm64-darwin. This PR removes native darwin compilation and instead use the cross-compilation functionality.\r\n\r\nOne concern is that I'm not sure whether this is a sustainable solution regarding Mac OS SDK used in the docker image. At least nokogiri seems to be using the darwin cross-compilation.\r\n\r\nSee https://github.com/protocolbuffers/protobuf/pull/8232 for a different approach.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 23,
        "deletions": 82,
        "changed_files": 6,
        "created_at": "2021-01-23T02:55:37Z",
        "closed_at": "2021-01-23T08:22:46Z",
        "merged_at": null,
        "body": "Merge pull requested",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3597,
        "deletions": 3643,
        "changed_files": 145,
        "created_at": "2021-01-22T00:41:11Z",
        "closed_at": "2021-01-28T20:36:20Z",
        "merged_at": "2021-01-28T20:36:20Z",
        "body": "**Important:** this integration must be merged, not squashed!",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 67,
        "deletions": 12,
        "changed_files": 4,
        "created_at": "2021-01-21T09:52:48Z",
        "closed_at": "2021-01-29T19:33:28Z",
        "merged_at": "2021-01-29T19:33:28Z",
        "body": "fixes #8211 \r\n\r\nPlease feel free to leave comments for improvements, especially for the compiler part, as I am not fluent in C.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 60,
        "deletions": 4,
        "changed_files": 5,
        "created_at": "2021-01-20T08:45:55Z",
        "closed_at": "2021-02-01T08:02:59Z",
        "merged_at": "2021-02-01T08:02:58Z",
        "body": "This allows for much cleaner handling of extensions in dynamic environments such as when writing a protoc plugin.\r\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 23,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2021-01-20T08:14:08Z",
        "closed_at": "2021-02-01T08:03:23Z",
        "merged_at": "2021-02-01T08:03:23Z",
        "body": "Fixes #8218.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2021-01-15T12:39:07Z",
        "closed_at": "2021-10-13T20:54:55Z",
        "merged_at": "2021-10-13T20:54:55Z",
        "body": "other bazel libraries (e.g. rules_docker 0.15.0) require rules_python 0.1.0\r\nor above. running protobuf_deps() before importing rules_docker\r\nwill lead to errors.\r\n\r\nupgrading rules_python fixes this problem.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2021-01-14T13:47:07Z",
        "closed_at": "2021-02-12T00:28:11Z",
        "merged_at": "2021-02-12T00:28:11Z",
        "body": "@TeBoring This release includes a minor security fix.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2021-01-13T09:24:08Z",
        "closed_at": "2021-01-13T18:13:08Z",
        "merged_at": "2021-01-13T18:13:08Z",
        "body": "Cherry pick https://github.com/protocolbuffers/protobuf/pull/8098 into 3.14.x\r\n\r\n(to unblock https://github.com/grpc/grpc/pull/25131)",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 25,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2021-01-13T09:00:47Z",
        "closed_at": "2022-02-04T16:40:40Z",
        "merged_at": null,
        "body": "java\r\n\r\nrelease notes: yes\r\n\r\nInvalidAnyProtocolBufferException when a protocol Any message being parsed is invalid in some way.   (#8201)",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2021-01-13T02:53:52Z",
        "closed_at": "2021-01-15T01:24:26Z",
        "merged_at": null,
        "body": "let destructor in the Message class be Virtual, because when deleting a derived class object using a pointer of base class type that has a non-virtual destructor results in undefined behavior\r\n\r\nSigned-off-by: wujing <jing.woo@outlook.com>",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 193,
        "deletions": 28,
        "changed_files": 3,
        "created_at": "2021-01-10T22:40:14Z",
        "closed_at": "2022-02-03T17:49:58Z",
        "merged_at": "2022-02-03T17:49:58Z",
        "body": "Previously, some proto field names would cause the java code generator to generate accessor names that conflict with method names from the message super classes/interfaces, leading to java code that would not compile.\r\nA list of field names that cause such conflicts previously existed, but the list did not contain every field name that would cause a conflict.\r\nAdditionally, only snake_case field names would be detected. If the field name was in camelCase or began with a leading underscore, the conflict would not be detected.\r\n\r\n\r\nThis change adds the complete set of field names that will cause accessor name conflicts, and detects conflicts in snake_case, _snake_case (with a leading underscore), and camelCase field names.\r\n\r\nFixes #8142",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 96,
        "deletions": 5,
        "changed_files": 7,
        "created_at": "2021-01-08T20:04:12Z",
        "closed_at": "2021-06-01T22:24:46Z",
        "merged_at": null,
        "body": "Add support to build kokoro artifacts and python wheels",
        "comments": 14
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-01-08T19:36:18Z",
        "closed_at": "2021-01-08T22:39:42Z",
        "merged_at": "2021-01-08T22:39:42Z",
        "body": "On a 32-bit system, sizeof(mem_block) is 8, _upb_arena_alignup(sizeof(mem_block)) is 16.\r\nIn https://github.com/protocolbuffers/protobuf/blob/master/ruby/ext/google/protobuf_c/upb.c#L2361, alloc block size is 16384 + 8 bytes, \r\nIn https://github.com/protocolbuffers/protobuf/blob/master/ruby/ext/google/protobuf_c/upb.c#L2352, a->head.ptr moves forward 16 bytes. \r\nSo in https://github.com/protocolbuffers/protobuf/blob/master/ruby/ext/google/protobuf_c/upb.h#L380, if() is always false, and keeps calling malloc until infinite recursion(O0)/run out of memory(O3)\r\n\r\n(gdb) f 16\r\n#16 0x089fb8d0 in upb_arena_allocblock (a=0xa6bf14c, size=16384) at ../../../../ext/google/protobuf_c/upb.c:2361\r\n2361    ../../../../ext/google/protobuf_c/upb.c: No such file or directory.\r\n(gdb) p sizeof(mem_block)\r\n$1 = 8\r\n(gdb) p _upb_arena_alignup(sizeof(mem_block))\r\n$2 = 16\r\n(gdb) p UPB_MAX(size, a->next_block_size)\r\n$3 = 16384\r\n(gdb) f 18\r\n#18 0x089f4d45 in upb_arena_malloc (a=0xa6bf14c, size=16384) at ../../../../ext/google/protobuf_c/upb.h:385\r\n385     ../../../../ext/google/protobuf_c/upb.h: No such file or directory.\r\n(gdb) p h->end - h->ptr\r\n$4 = 16376\r\n(gdb) p size\r\n$5 = 16384\r\n\r\nreference: gRPC-Ruby internal issue number b/171421508.\r\nIssue description: \r\nSegfault observed occasionally on Windows, from a cloud logging agent called google-fluentd, which captures logs from different processes on a VM and uses gRPC-Ruby to publish those logs message to a logging service.\r\n\r\nHow to reproduce:\r\n0.Start a windows VM, e.x. windows 2016 datacenter. RDP into the VM then install the logging agent. Detailed Instruction here: https://cloud.google.com/logging/docs/agent/installation#joint-install\r\n1. stop Stackdriver Logging service from Services.\r\n2. clean folder LoggingAgent\\Main\\pos\\winevtlog.pos\\worker0\\ and folder C:\\var\\log\\google-fluentd\\buffers.\r\n3. start Stackdriver Logging service from Services.\r\n4. stop Stackdriver Logging service from Services, when some large( over 300kb) log file appears in  C:\\var\\log\\google-fluentd\\buffers\\ folder\r\n5. run Main\\bin\\ruby.exe 'Main\\bin\\fluentd' -c 'fluent.conf' -x stackdriverlogging -vvv\r\nThen Worker 0 finished with signal SIGSEGV. For any large( over 300kb) log file, SIGSEGV shows by 20% chance.\r\n6. Once SIGSEGV has shown, as long as the log file remains, SIGSEGV shows every time when LoggingAgent runs.\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 82,
        "deletions": 23,
        "changed_files": 6,
        "created_at": "2021-01-08T16:56:19Z",
        "closed_at": "2021-01-14T20:26:05Z",
        "merged_at": "2021-01-14T20:26:05Z",
        "body": "This fixes https://github.com/protocolbuffers/protobuf/issues/8191",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2021-01-07T06:08:44Z",
        "closed_at": "2021-02-12T00:29:48Z",
        "merged_at": "2021-02-12T00:29:48Z",
        "body": "Signed-off-by: Abhishek Jain <abhishek.jain3@huawei.com>",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-01-06T17:23:59Z",
        "closed_at": "2021-01-11T19:53:36Z",
        "merged_at": "2021-01-11T19:53:35Z",
        "body": "See https://github.com/protocolbuffers/protobuf/issues/8165\r\n\r\nConverts PHP double-precision floats to single-precision for consistency with the protobuf C-extension",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 14071,
        "deletions": 23328,
        "changed_files": 42,
        "created_at": "2021-01-05T22:39:10Z",
        "closed_at": "2021-01-13T20:16:25Z",
        "merged_at": "2021-01-13T20:16:25Z",
        "body": "This PR implements a significant refactoring of the Ruby C extension. The internal representation of messages is changing from a custom Ruby-specific raw memory layout to using `upb_msg`, a representation that is defined in the upb library. Upb defines a [reflection interface](https://github.com/protocolbuffers/upb/blob/master/upb/reflection.h) that we can use to access message data from C.\r\n\r\nThis refactoring should lead to much better performance, particularly when parsing large messages. The old code would eagerly create a Ruby object for every single sub-message parsed from the wire, which meant tons of objects would participate in garbage collection. The new extension only creates C objects at parse time, and Ruby wrapper objects are created on demand, only when accessed.\r\n\r\nThis fixes a number of conformance errors in the old extension.\r\n\r\nThere are a few slight behavior changes:\r\n\r\n1. The old code threw `Google::Protobuf::TypeError` in some cases but plain `TypeError` in others. The new code standardizes on using `Google::Protobuf::TypeError` everywhere.\r\n2. The old JSON and `#inspect` serializers were emitting empty optional fields, whereas they should only be emitted when they are set.\r\n3. We no longer prohibit maps for proto2 protos.\r\n4. If you try to compile a proto2 proto containing extensions, we emit a warning an ignore it instead of rejecting the proto completely.",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-01-05T13:10:33Z",
        "closed_at": "2021-10-21T22:09:41Z",
        "merged_at": "2021-10-21T22:09:41Z",
        "body": "This should provide a runtime alias, which can be\r\nused in mypy stubs to provide better typing for enum values\r\n\r\nThis is one potential solution to #8175 - see discussion there.\r\nFixes #8175",
        "comments": 14
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-01-05T09:48:56Z",
        "closed_at": "2021-03-04T00:24:34Z",
        "merged_at": null,
        "body": "Implements the public [`GetEntryClass`](https://github.com/protocolbuffers/protobuf/blob/9647a7c2356a9529754c07235a2877ee676c2fd0/python/google/protobuf/internal/containers.py#L547-L548) method for [`RepeatedCompositeFieldContainer`](https://github.com/protocolbuffers/protobuf/blob/9647a7c2356a9529754c07235a2877ee676c2fd0/python/google/protobuf/internal/containers.py#L351-L458), following the footsteps of its quasi-sibling, [`ScalarMap`](https://github.com/protocolbuffers/protobuf/blob/9647a7c2356a9529754c07235a2877ee676c2fd0/python/google/protobuf/internal/containers.py#L461-L548).\r\n\r\nUseful for https://github.com/googleapis/proto-plus-python/issues/173.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2021-01-05T02:34:10Z",
        "closed_at": "2021-10-13T18:21:04Z",
        "merged_at": null,
        "body": "protobuf  **libdir** and **includedir** should support prefix, just like setting in grpc pc file",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-01-04T23:55:25Z",
        "closed_at": "2021-06-03T17:38:22Z",
        "merged_at": null,
        "body": "",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2020-12-30T15:24:16Z",
        "closed_at": "2020-12-30T16:31:39Z",
        "merged_at": null,
        "body": "Pursuant to the [issue](https://github.com/protocolbuffers/protobuf/issues/8168).\r\n\r\nThank you.",
        "comments": 12
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2020-12-30T02:02:18Z",
        "closed_at": "2021-01-08T01:22:11Z",
        "merged_at": "2021-01-08T01:22:11Z",
        "body": "We noticed that our generated javascript message implementations decode certain number fields incorrectly for some values when the fields have `jstype = JS_STRING`. I tracked it down to `readZigzagVarint64String()`, which does not always decode a field correctly. In particular, it returns the wrong result when it calls into `jspb.utils.joinUnsignedDecimalString` with a `bitsLow` value that is negative and a `bitsHigh` value that is less than `0x1FFFFF`. None of the existing test cases appear to cover that case.\r\n\r\nThis PR changes `joinUnsignedDecimalString` to call `jspb.utils.joinUint64` on its fast path instead, which gets us the right result.\r\n\r\nIt's also possible to change the line to\r\n\r\n```\r\nreturn '' + (jspb.BinaryConstants.TWO_TO_32 * bitsHigh + (bitsLow >>> 0));\r\n```\r\n\r\nor similar instead.\r\n\r\nThis is my first contact with this code and it wasn't clear to me if the bug is actually in the caller of `joinUnsignedDecimalString`. If `joinUnsignedDecimalString` is expecting purely unsigned parameters then it's possible that this isn't the desired fix. But it would be great if we could get _a_ fix landed :).\r\n\r\nThanks for the awesome project which we make great use of throughout our stack :).",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-12-23T14:25:31Z",
        "closed_at": "2020-12-28T20:52:50Z",
        "merged_at": "2020-12-28T20:52:50Z",
        "body": "Fixes #8163 ",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-12-22T20:59:07Z",
        "closed_at": "2020-12-23T19:52:20Z",
        "merged_at": "2020-12-23T19:52:20Z",
        "body": "It seems that updating shallow Git clones is expensive, and as a result\r\nHomebrew recently started refusing to update shallow clones (see\r\nhttps://github.com/Homebrew/discussions/discussions/226). This commit\r\ntries to fix the problem by making these repos into full clones before\r\nrunning \"brew update\".\r\n\r\nI also came across another error about there being a conflicting version\r\nof pip3 in /usr/local. I suspect that is related to the other Python\r\nbinaries that the script has to delete, so I added pip3 to the list and\r\nthat seemed to solve the problem.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-12-22T11:28:52Z",
        "closed_at": "2020-12-28T19:31:58Z",
        "merged_at": "2020-12-28T19:31:58Z",
        "body": "Corrected the == check condition.\r\n\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-12-21T16:25:58Z",
        "closed_at": "2020-12-28T19:31:19Z",
        "merged_at": "2020-12-28T19:31:19Z",
        "body": "Clean up a multi-line string to conform to Unix line endings.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2020-12-18T05:01:22Z",
        "closed_at": "2020-12-28T18:30:01Z",
        "merged_at": "2020-12-28T18:30:01Z",
        "body": "This is a linker flag and does not belong in CFLAGS.\r\n\r\nFixes an issue with ola and protobuf.\r\n\r\nSigned-off-by: Rosen Penev <rosenp@gmail.com>",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 69,
        "deletions": 19,
        "changed_files": 2,
        "created_at": "2020-12-16T03:32:49Z",
        "closed_at": "2021-01-28T10:48:19Z",
        "merged_at": "2021-01-28T10:48:19Z",
        "body": "If a string is 42 characters or less then its length will always fit in 1 byte. If there is space available in the buffer, write directly to the buffer, then write the length afterwards based on the number of bytes written. Avoids having to calculate the size.\r\n\r\nSlightly slower for 1 byte ASCII strings, faster for all other strings 42 chars or less.\r\n\r\n@jtattermusch \r\n\r\nBefore\r\n```\r\n|                           Method | BytesToWrite | encodedSize |       Mean |     Error |    StdDev | Gen 0 | Gen 1 | Gen 2 | Allocated |\r\n|--------------------------------- |------------- |------------ |-----------:|----------:|----------:|------:|------:|------:|----------:|\r\n|         WriteString_WriteContext |        10080 |           1 | 149.235 us | 1.5862 us | 1.4061 us |     - |     - |     - |       2 B |\r\n|         WriteString_WriteContext |        10080 |           4 |  48.668 us | 0.4787 us | 0.4478 us |     - |     - |     - |       1 B |\r\n| WriteNonAsciiString_WriteContext |        10080 |           4 |  99.273 us | 1.4526 us | 1.2877 us |     - |     - |     - |       1 B |\r\n|         WriteString_WriteContext |        10080 |          10 |  25.254 us | 0.2668 us | 0.2365 us |     - |     - |     - |         - |\r\n| WriteNonAsciiString_WriteContext |        10080 |          10 |  61.336 us | 0.3819 us | 0.3573 us |     - |     - |     - |         - |\r\n|         WriteString_WriteContext |        10080 |         105 |  11.158 us | 0.1050 us | 0.0931 us |     - |     - |     - |         - |\r\n| WriteNonAsciiString_WriteContext |        10080 |         105 |   9.676 us | 0.1001 us | 0.0937 us |     - |     - |     - |         - |\r\n|         WriteString_WriteContext |        10080 |       10080 |   8.997 us | 0.0433 us | 0.0405 us |     - |     - |     - |         - |\r\n| WriteNonAsciiString_WriteContext |        10080 |       10080 |   4.459 us | 0.0446 us | 0.0418 us |     - |     - |     - |         - |\r\n```\r\n\r\nAfter\r\n```\r\n|                           Method | BytesToWrite | encodedSize |       Mean |     Error |    StdDev | Gen 0 | Gen 1 | Gen 2 | Allocated |\r\n|--------------------------------- |------------- |------------ |-----------:|----------:|----------:|------:|------:|------:|----------:|\r\n|         WriteString_WriteContext |        10080 |           1 | 173.719 us | 2.6596 us | 2.4878 us |     - |     - |     - |       2 B |\r\n|         WriteString_WriteContext |        10080 |           4 |  44.960 us | 0.6183 us | 0.5481 us |     - |     - |     - |       1 B |\r\n| WriteNonAsciiString_WriteContext |        10080 |           4 |  56.988 us | 0.2900 us | 0.2571 us |     - |     - |     - |         - |\r\n|         WriteString_WriteContext |        10080 |          10 |  19.008 us | 0.3009 us | 0.2349 us |     - |     - |     - |         - |\r\n| WriteNonAsciiString_WriteContext |        10080 |          10 |  24.667 us | 0.2239 us | 0.2094 us |     - |     - |     - |         - |\r\n|         WriteString_WriteContext |        10080 |         105 |  11.563 us | 0.0841 us | 0.0745 us |     - |     - |     - |         - |\r\n| WriteNonAsciiString_WriteContext |        10080 |         105 |   9.856 us | 0.0580 us | 0.0543 us |     - |     - |     - |         - |\r\n|         WriteString_WriteContext |        10080 |       10080 |   9.143 us | 0.0960 us | 0.0851 us |     - |     - |     - |         - |\r\n| WriteNonAsciiString_WriteContext |        10080 |       10080 |   4.458 us | 0.0306 us | 0.0256 us |     - |     - |     - |         - |\r\n```",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 201,
        "deletions": 39,
        "changed_files": 13,
        "created_at": "2020-12-16T00:46:49Z",
        "closed_at": "2021-02-16T11:15:48Z",
        "merged_at": "2021-02-16T11:15:48Z",
        "body": "@jtattermusch \r\n\r\nOptimization improves writing larger all-ASCII strings.\r\n* 105 and 10080 bytes are much faster\r\n* 10 is on the border, but shows a small improvement\r\n* 1 and 4 use existing path\r\n\r\nBefore\r\n\r\n```\r\n\r\n|                   Method | BytesToWrite | encodedSize |       Mean |     Error |    StdDev | Gen 0 | Gen 1 | Gen 2 | Allocated |\r\n|------------------------- |------------- |------------ |-----------:|----------:|----------:|------:|------:|------:|----------:|\r\n| WriteString_WriteContext |        10080 |           1 | 146.551 us | 1.7018 us | 1.5918 us |     - |     - |     - |         - |\r\n| WriteString_WriteContext |        10080 |           4 |  48.298 us | 0.4151 us | 0.3467 us |     - |     - |     - |         - |\r\n| WriteString_WriteContext |        10080 |          10 |  24.715 us | 0.1720 us | 0.1436 us |     - |     - |     - |         - |\r\n| WriteString_WriteContext |        10080 |         105 |  11.238 us | 0.0745 us | 0.0697 us |     - |     - |     - |         - |\r\n| WriteString_WriteContext |        10080 |       10080 |   8.917 us | 0.1159 us | 0.1084 us |     - |     - |     - |         - |\r\n\r\n```\r\n\r\nProcess 4 chars at a time\r\n\r\n```\r\n|                   Method | BytesToWrite | encodedSize |       Mean |     Error |    StdDev | Gen 0 | Gen 1 | Gen 2 | Allocated |\r\n|------------------------- |------------- |------------ |-----------:|----------:|----------:|------:|------:|------:|----------:|\r\n| WriteString_WriteContext |        10080 |           1 | 148.329 us | 0.8029 us | 0.6705 us |     - |     - |     - |         - |\r\n| WriteString_WriteContext |        10080 |           4 |  48.822 us | 0.7867 us | 0.6974 us |     - |     - |     - |         - |\r\n| WriteString_WriteContext |        10080 |          10 |  21.464 us | 0.1850 us | 0.1730 us |     - |     - |     - |         - |\r\n| WriteString_WriteContext |        10080 |         105 |   5.907 us | 0.0802 us | 0.0711 us |     - |     - |     - |         - |\r\n| WriteString_WriteContext |        10080 |       10080 |   4.195 us | 0.0380 us | 0.0356 us |     - |     - |     - |         - |\r\n\r\n```\r\n\r\nProcess 4 chars at a time + SSE2/ARM SIMD\r\n\r\n```\r\n|                   Method | BytesToWrite | encodedSize |       Mean |     Error |    StdDev | Gen 0 | Gen 1 | Gen 2 | Allocated |\r\n|------------------------- |------------- |------------ |-----------:|----------:|----------:|------:|------:|------:|----------:|\r\n| WriteString_WriteContext |        10080 |           1 | 171.521 us | 1.9836 us | 1.8555 us |     - |     - |     - |         - |\r\n| WriteString_WriteContext |        10080 |           4 |  53.462 us | 0.5362 us | 0.4753 us |     - |     - |     - |         - |\r\n| WriteString_WriteContext |        10080 |          10 |  21.630 us | 0.1186 us | 0.1109 us |     - |     - |     - |         - |\r\n| WriteString_WriteContext |        10080 |         105 |   5.100 us | 0.0815 us | 0.0722 us |     - |     - |     - |         - |\r\n| WriteString_WriteContext |        10080 |       10080 |   3.385 us | 0.0192 us | 0.0170 us |     - |     - |     - |         - |",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 111,
        "deletions": 101,
        "changed_files": 3,
        "created_at": "2020-12-15T09:05:30Z",
        "closed_at": "2021-01-26T15:26:51Z",
        "merged_at": "2021-01-26T15:26:51Z",
        "body": "Removes MessageAdapter allocations when serializing/deserializing MapFields.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 5,
        "changed_files": 5,
        "created_at": "2020-12-14T13:44:57Z",
        "closed_at": "2020-12-14T16:15:28Z",
        "merged_at": "2020-12-14T16:15:28Z",
        "body": "`<PublicSign>` should no longer be necessary (signing should work fine with dotnet SDK on linux).\r\nSee https://github.com/grpc/grpc/issues/24935 for a somewhat related issue - protobuf nugets are being build on windows, so Google.Protobuf is not affected by this, but it would be good to cleanup anyway.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 12,
        "changed_files": 5,
        "created_at": "2020-12-14T11:11:30Z",
        "closed_at": "2021-06-04T18:13:56Z",
        "merged_at": "2021-06-04T18:13:56Z",
        "body": "Disabled version.rc for clang-cl (#6503).",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2020-12-13T21:20:22Z",
        "closed_at": "2020-12-14T18:48:18Z",
        "merged_at": "2020-12-14T18:48:18Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 60,
        "deletions": 54,
        "changed_files": 16,
        "created_at": "2020-12-11T15:28:41Z",
        "closed_at": "2021-01-07T22:58:39Z",
        "merged_at": "2021-01-07T22:58:39Z",
        "body": "Message accessors will return null when when the field is not\r\nset, so this should be reflected in the PhpDoc.\r\n\r\nAlso updated the code generator for the well-known types to reflect\r\nthe edits made in https://github.com/protocolbuffers/protobuf/pull/8105.\r\n\r\nAlso explicitly check for upb_msg_has() in the oneof accessor, so\r\nwe are not implicitly relying on unset message fields returning NULL\r\nat the upb level.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 85,
        "deletions": 13,
        "changed_files": 13,
        "created_at": "2020-12-11T02:27:43Z",
        "closed_at": "2021-01-14T03:03:54Z",
        "merged_at": null,
        "body": "Ruby 3.0 has been released. This PR tests protobuf with Ruby 3.0.0 and builds extensions for Ruby 3.0.x.\r\n\r\nWaiting for the release of rake-compiler-dock 1.1.0 https://github.com/rake-compiler/rake-compiler-dock/pull/40",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 56,
        "deletions": 5,
        "changed_files": 3,
        "created_at": "2020-12-09T21:27:01Z",
        "closed_at": "2021-03-09T22:21:18Z",
        "merged_at": "2021-03-09T22:21:18Z",
        "body": "New attempt at #4336, building on top of the nice groundwork already provided by @benesch (appreciated!). Hoping we can get it to an approvable state this time. :smile: \r\n\r\nBecause this builds on top of an existing MR, I decided to keep it as two separate commits - one for the rebased commit by @benesch and another one with my fixes. (There were some rebase conflicts that were amended into the original commit. One particular rebase conflict that I'm a bit hesitant about is https://github.com/protocolbuffers/protobuf/pull/4336/files#diff-cd3d05a33a7e35e0eeeff7b01f65d8744f20f08b1b179bb7ea3dc7e36e202d08R794; the constructor call looked differently here now so I removed that field setting altogether. Unsure if this is correct or not so please do advise.)\r\n\r\nThe newly added test runs fine locally with CLion but I'm not fully sure on how to run all the tests, so I'm hoping for the CI to tell me if the other tests pass or not with this change now. :slightly_smiling_face: ",
        "comments": 14
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2020-12-08T19:37:10Z",
        "closed_at": "2022-02-23T16:52:06Z",
        "merged_at": null,
        "body": "At the moment protobuf PHP extension casts all uint32 values to int32_t before assigning the result to zend_long (aka int64_t). The comment in the sources say it's done to for consistency between 32/64-bit builds.\r\n\r\nI suggest a patch that removes this code since it in fact renders uint32 type pretty useless on 64bit arch - all values greater than INT32_MAX become negative, so one has to fix them manually before using in other places like databases or requests to other services not involving gRPC (or protobuf at all).\r\n\r\nIt looks like the code tried to keep the 32bit behaviour on 64bit (please correct me if I'm wrong), but I can't think of any reason to do it. \r\nI mean, yes, PHP doesn't have an \"unsigned integer\" type, it just uses the biggest integer available, so it's int32 on 32bit and int64 on 64bit. Yes, int32 used by 32bit PHP cannot fit all the values of uint32 properly. But this is something that should be worked around on 32bit machines, not cause problems while running the same code on 64bit.\r\n\r\nI haven't seen 32bit machines for about 15 years now, maybe more. \r\nI think it's a good moment to drop 32bit support and live in the future world :)",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-12-06T14:31:54Z",
        "closed_at": "2020-12-07T22:36:58Z",
        "merged_at": "2020-12-07T22:36:57Z",
        "body": "In macOS big sur, `sysconfig.get_config_var('MACOSX_DEPLOYMENT_TARGET')` is returning `11` as an integer which is incompatible with `pkg_resources.parse_version()`.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2020-12-06T09:20:32Z",
        "closed_at": "2020-12-30T22:10:10Z",
        "merged_at": "2020-12-30T22:10:10Z",
        "body": "In visual studio 2019 x64 target, pointer size and size_t are 64 bits and int are 32 bits\r\nThis commit uses size_t for buffer size",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-12-04T22:03:36Z",
        "closed_at": "2021-10-14T18:12:34Z",
        "merged_at": "2021-10-14T18:12:34Z",
        "body": "According to the [language guide](https://developers.google.com/protocol-buffers/docs/proto3#json), the JSON map keys should be in string form.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 140,
        "deletions": 1,
        "changed_files": 14,
        "created_at": "2020-12-04T21:19:08Z",
        "closed_at": "2021-02-02T03:34:03Z",
        "merged_at": "2021-02-02T03:34:03Z",
        "body": "Modeled after #7009.\r\n\r\nFixes #7978 ",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 50,
        "deletions": 78,
        "changed_files": 1,
        "created_at": "2020-12-02T23:31:42Z",
        "closed_at": "2020-12-03T00:44:57Z",
        "merged_at": "2020-12-03T00:44:57Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 29,
        "deletions": 19,
        "changed_files": 4,
        "created_at": "2020-12-02T19:39:08Z",
        "closed_at": "2020-12-04T22:03:38Z",
        "merged_at": "2020-12-04T22:03:38Z",
        "body": "\u2026en in MSVC\r\n\r\nThis solves a conflict when using Clang for Windows.\r\n\r\nThis is just a cherry-pick of the internal change cl/341698875.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 15,
        "deletions": 63,
        "changed_files": 1,
        "created_at": "2020-12-02T05:18:38Z",
        "closed_at": "2020-12-02T18:10:19Z",
        "merged_at": "2020-12-02T18:10:19Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-12-01T14:09:39Z",
        "closed_at": "2020-12-01T18:05:34Z",
        "merged_at": "2020-12-01T18:05:34Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2020-11-30T23:07:57Z",
        "closed_at": "2020-12-02T19:53:58Z",
        "merged_at": "2020-12-02T19:53:58Z",
        "body": "It includes a bunch of other files including a lot of macros which can\r\nreduce the namespace available for actual protobuf.\r\n\r\nFor example, create a protobuf with a member called SIGSEGV. Since\r\nmacros cannot be namespaced in C++ this results in code which cannot be\r\ncompiled.\r\n\r\nFix this by just directly including endian.h",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 476,
        "deletions": 409,
        "changed_files": 23,
        "created_at": "2020-11-30T22:46:09Z",
        "closed_at": "2020-12-04T21:46:35Z",
        "merged_at": "2020-12-04T21:46:35Z",
        "body": "1. Fixed tests to be compatible with phpunit 9\r\n2. Added missing arginfo to c extension\r\n3. Add port for `compare_objects`, which was changed to `compare` in php runtime.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2020-11-28T09:13:06Z",
        "closed_at": "2020-11-30T23:06:56Z",
        "merged_at": "2020-11-30T23:06:56Z",
        "body": "This solves the following error in gcc:\r\nexplicitly defaulted function cannot be declared 'constexpr' because the implicit declaration is not 'constexpr'\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-11-25T23:05:33Z",
        "closed_at": "2020-11-26T01:31:50Z",
        "merged_at": "2020-11-26T01:31:50Z",
        "body": "This is an error when tag is greater than 128 under gcc 10.2:   if (tag < 128) return *ptr == tag;\r\nIt's an error even though the comparison occurs in a branch of code we know won't be taken.  See https://godbolt.org/z/1eaP86\r\nThis works around the problem by clipping tag to within bounds.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2020-11-25T18:52:19Z",
        "closed_at": "2021-03-05T23:27:53Z",
        "merged_at": null,
        "body": "This is a rebased version of #6073\r\n\r\nSince that PR was originally sent GC compaction has shipped with Ruby 2.7 and many tools will use it by default (for example `puma` and `sidekiq`). This gem is now unsafe and has potential for memory errors because this has not been fixed.\r\n\r\nThis commit removes an unused reference and registers globals with the GC so that they will never die.  Ruby is getting a compacting GC, and it means that these references can move.  Registering them with `rb_gc_register_mark_object` will ensure the constants don't move and will not be collected.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 3,
        "changed_files": 4,
        "created_at": "2020-11-24T23:04:10Z",
        "closed_at": "2020-11-25T18:48:57Z",
        "merged_at": "2020-11-25T18:48:57Z",
        "body": "This pull request fixes some minor issues that came up when I tried to integrate changes from Git into Google's internal codebase:\r\n  - Include stubs/strutil.h for access to Split() helper function\r\n  - Use emplace() instead of insert() so that the code still works if we're working with a string_view instead of a string",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 3,
        "changed_files": 5,
        "created_at": "2020-11-24T20:03:25Z",
        "closed_at": "2021-09-01T11:39:10Z",
        "merged_at": null,
        "body": "This change is to enable building protocolbuffer on zOS. The change is not introducing any new features and build system . This means it would not break many people's projects and is safe.",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 14,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-11-21T15:15:49Z",
        "closed_at": "2021-11-04T14:23:46Z",
        "merged_at": null,
        "body": "Add an option to use field numbers rather than field names in `MessageToJson`/`MessageToDict`, similar to [text_format.MessageToString()](https://googleapis.dev/python/protobuf/latest/google/protobuf/text_format.html)\r\n\r\nThis is sometimes more useful, e.g. dart-protobuf only expects **field numbers** as json keys, not **field names**. (https://github.com/dart-lang/protobuf/pull/83)\r\n\r\nMoreover, the filed name could change over time, but the proto filed numbers rarely change.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-11-21T10:13:33Z",
        "closed_at": "2020-11-23T23:58:39Z",
        "merged_at": "2020-11-23T23:58:39Z",
        "body": "`/usr/local/example` should not be used without protobuf subdir.\r\nResolve https://github.com/protocolbuffers/protobuf/issues/8073",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 318,
        "deletions": 296,
        "changed_files": 1,
        "created_at": "2020-11-21T00:39:31Z",
        "closed_at": "2020-11-25T19:02:03Z",
        "merged_at": "2020-11-25T19:02:03Z",
        "body": "This should fix #8059.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1753,
        "deletions": 1406,
        "changed_files": 104,
        "created_at": "2020-11-20T19:07:10Z",
        "closed_at": "2020-11-23T17:09:53Z",
        "merged_at": "2020-11-23T17:09:53Z",
        "body": "**Important:** this integration must be merged, not squashed!",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 22,
        "deletions": 4,
        "changed_files": 4,
        "created_at": "2020-11-20T05:35:42Z",
        "closed_at": "2021-06-03T18:37:57Z",
        "merged_at": null,
        "body": "Added wheel support for aarch64.\r\nRelated to #7999 ",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2020-11-19T16:05:30Z",
        "closed_at": "2020-11-21T00:21:26Z",
        "merged_at": null,
        "body": "Fix https://github.com/protocolbuffers/protobuf/issues/7770",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 18,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2020-11-19T04:33:59Z",
        "closed_at": "2021-10-13T19:54:49Z",
        "merged_at": "2021-10-13T19:54:49Z",
        "body": "",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2020-11-18T22:57:43Z",
        "closed_at": "2020-11-24T19:30:48Z",
        "merged_at": null,
        "body": "This PR provides fixes and mechanism to build protobuf in zOS. Besides source add/edit, a Makefile added for build since cmake, configure and some other tools are not fully functional in zos.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 413,
        "deletions": 5,
        "changed_files": 9,
        "created_at": "2020-11-18T21:11:33Z",
        "closed_at": "2020-11-18T22:56:41Z",
        "merged_at": null,
        "body": "This PR provides fixes and mechanism to build protobuf in zOS. Besides source add/edit, a Makefile added for build since cmake, configure and some other tools are not fully functional in zos.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 414,
        "deletions": 5,
        "changed_files": 8,
        "created_at": "2020-11-18T17:43:41Z",
        "closed_at": "2020-11-18T20:19:26Z",
        "merged_at": null,
        "body": "This PR will add zOS support for protocol buffer with required files and Makefile. Simply users on zOS can enter zosbuild directory and make it.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2020-11-17T08:12:41Z",
        "closed_at": "2020-11-17T21:41:56Z",
        "merged_at": "2020-11-17T21:41:56Z",
        "body": "With every release new unused parameters appear in the codebase (the previous one was fixed in #7878).\r\n\r\n@acozzette, is there any option to ensure the absence of such parameters via CI / testing?",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-11-16T22:18:02Z",
        "closed_at": "2020-11-17T22:17:09Z",
        "merged_at": "2020-11-17T22:17:09Z",
        "body": "sys/stat.h provides macros like S_ISDIR to test for a directory. The macro S_IFDIR should not be used in this way since it has different result on zOS(Always detecting file as directory as a consequence).",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 261,
        "deletions": 87,
        "changed_files": 45,
        "created_at": "2020-11-13T23:53:36Z",
        "closed_at": "2020-11-14T05:19:24Z",
        "merged_at": "2020-11-14T05:19:24Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 201,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2020-11-13T21:36:19Z",
        "closed_at": "2022-11-07T20:52:16Z",
        "merged_at": null,
        "body": "This PR adds support for the buffer protocol (`memoryview`) and a `resize` method to the Python APIs, allowing much faster deserialization when interacting with other modules able to consume and produce raw memory. This gives moderate to massive speed up for deserialization (8x at 200 items, 80x! at 2000), with only moderate gains for serialization (~2.2 ~ 3.2).\r\n\r\nThe [buffer protocol](https://www.python.org/dev/peps/pep-3118/) is a Python API allowing objects to expose internal buffers, intended to improve interoperability between different C-level modules. These buffers are passed as `Py_buffer` objects, which annotate a {ptr, count} pair with information about the type and shape of the pointed-at data. In this PR I've implemented this based on CPP_TYPE, mapping each type I felt safe to expose to the corresponding Python buffer type. \r\n\r\nUnfortunately, this uses a deprecated API (`MutableRepeatedField(...)`), but it looks like the newer APIs are more restrictive and don't let you retrieve a pointer, or even access data when it's inside the buffer. I think the gains here speak for themselves in terms of usefulness - for us, we'd reduce the GRPC overhead by several milliseconds, so if this deprecated usage is a blocker we should try to forge another way forward.\r\n\r\nThis is potentially a resolution for #6782.\r\n\r\nThis is my benchmarking script if you'd like to validate the results.\r\n\r\n```python3\r\nimport numpy as np\r\nimport timeit\r\nfrom itertools import chain\r\nfrom benchmark_pb2 import Collection, Data\r\n\r\n# benchmark.proto\r\n# syntax = \"proto3\";\r\n# package benchmark;\r\n# message Data {\r\n#     repeated float values = 1;\r\n# }\r\n# message Collection {\r\n#     repeated Data sets = 2;\r\n# }\r\n\r\n\r\nITER_COUNT = 1000\r\n\r\n\r\ndef simple(collection):\r\n    return np.array([list(d.values) for d in collection.sets])\r\n\r\n\r\ndef array_from_iter(collection):\r\n    value_count = len(collection.sets[0].values)\r\n    return np.array([np.fromiter(d.values, dtype=np.float32, count=value_count) for d in collection.sets])\r\n\r\n\r\ndef array_from_slice(collection):\r\n    return np.array([d.values[:] for d in collection.sets])\r\n\r\n\r\ndef from_iter_reshape(collection):\r\n    set_count = len(collection.sets)\r\n    value_count = len(collection.sets[0].values)\r\n    total = set_count * value_count\r\n    return np.fromiter(chain.from_iterable(d.values for d in collection.sets), dtype=np.float32, count=total).reshape(set_count, value_count)\r\n\r\n\r\ndef from_buffer_array(collection):\r\n    value_count = len(collection.sets[0].values)\r\n    return np.array([np.frombuffer(memoryview(d.values), dtype=np.float32, count=value_count) for d in collection.sets])\r\n\r\n\r\ndef eval(func, collection):\r\n    average_time = timeit.timeit(lambda: func(collection), number=ITER_COUNT)\r\n    print(f'{func.__name__}: {average_time / ITER_COUNT * 1000} ms')\r\n    return average_time\r\n\r\n\r\ndef simple_write(values):\r\n    return Collection(sets=[Data(values=value.tolist()) for value in values])\r\n\r\n\r\ndef from_memory_view(values):\r\n    sets = []\r\n    value_count = len(values[0])\r\n    for val in values:\r\n        d = Data()\r\n        d.values.Resize(value_count)  # n.b. this is type-sensitive\r\n        memoryview(d.values)[:] = val.data\r\n        sets.append(d)\r\n\r\n    return Collection(sets=sets)\r\n\r\n\r\ndef eval_write(func, collection):\r\n    average_time = timeit.timeit(lambda: func(collection), number=ITER_COUNT)\r\n    print(f'{func.__name__}: {average_time / ITER_COUNT * 1000} ms')\r\n    return average_time\r\n\r\n\r\ndef eval_count(n):\r\n    collection = Collection(sets=[Data(values=list(range(n))) for _ in range(32)])\r\n    values = [np.array(list(range(n)), dtype=np.float32) for _ in range(32)]\r\n    print(f'Count == {n}')\r\n    print('To numpy')\r\n    t0 = eval(simple, collection)\r\n    t1 = eval(array_from_iter, collection)\r\n    t2 = eval(array_from_slice, collection)\r\n    t3 = eval(from_iter_reshape, collection)\r\n    t4 = eval(from_buffer_array, collection)\r\n\r\n    maxv = max(t0, t1, t2, t3, t4)\r\n    print(f'Perf gain vs best: {maxv/t4}')\r\n\r\n    print('\\nFrom numpy')\r\n    t1 = eval_write(simple_write, values)\r\n    t2 = eval_write(from_memory_view, values)\r\n    print(f'Perf gain: {t1/t2}')\r\n    print('\\n\\n')\r\n\r\n\r\neval_count(200)\r\neval_count(500)\r\neval_count(1000)\r\neval_count(2000)\r\n```",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 47,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2020-11-13T14:28:55Z",
        "closed_at": "2020-11-16T15:11:42Z",
        "merged_at": null,
        "body": "Backport #8035 to 3.13.x",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 47,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2020-11-13T14:24:39Z",
        "closed_at": "2020-11-13T17:13:03Z",
        "merged_at": "2020-11-13T17:13:02Z",
        "body": "Backport https://github.com/protocolbuffers/protobuf/pull/8035 to 3.14.x",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-11-13T11:23:43Z",
        "closed_at": "2020-11-25T19:02:36Z",
        "merged_at": "2020-11-25T19:02:36Z",
        "body": "At the moment protobuf PHP extension registers an INI entry and doesn't unregister it on shtudown.\r\nThis causes invalid read if you use dl(\"protobuf.so\") because the interned string allocated in REGISTER_INI_ENTRIES() is still present in the list of interned strings on PHP shutdown, but the extension itself is already unloaded:\r\n```\r\n==30061== Invalid read of size 4\r\n==30061==    at 0x7420EE: zend_string_release_ex (zend_string.h:284)\r\n==30061==    by 0x7424A5: free_ini_entry (zend_ini.c:78)\r\n==30061==    by 0x732D05: zend_hash_destroy (zend_hash.c:1546)\r\n==30061==    by 0x7425A1: zend_ini_dtor (zend_ini.c:113)\r\n==30061==    by 0x742582: zend_ini_shutdown (zend_ini.c:106)\r\n==30061==    by 0x686692: php_module_shutdown (main.c:2543)\r\n==30061==    by 0x7F36DD: main (php_cli.c:1377)\r\n==30061==  Address 0x81d63f4 is 4 bytes inside a block of size 72 free'd\r\n==30061==    at 0x4C2F50B: free (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==30061==    by 0x7585D9: free (zend_signal.c:109)\r\n==30061==    by 0x757B0F: _str_dtor (zend_string.c:60)\r\n==30061==    by 0x732CC7: zend_hash_destroy (zend_hash.c:1541)\r\n==30061==    by 0x75834E: zend_interned_strings_deactivate (zend_string.c:307)\r\n==30061==    by 0x68575A: php_request_shutdown (main.c:1991)\r\n==30061==    by 0x7F2F26: do_cli (php_cli.c:1129)\r\n==30061==    by 0x7F367B: main (php_cli.c:1362)\r\n==30061==  Block was alloc'd at\r\n==30061==    at 0x4C2E2DF: malloc (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==30061==    by 0x758507: malloc (zend_signal.c:91)\r\n==30061==    by 0x6E481A: __zend_malloc (zend_alloc.c:2976)\r\n==30061==    by 0x75745F: zend_string_alloc (zend_string.h:133)\r\n==30061==    by 0x7574FC: zend_string_init (zend_string.h:155)\r\n==30061==    by 0x7582E7: zend_string_init_interned_request (zend_string.c:293)\r\n==30061==    by 0x742846: zend_register_ini_entries (zend_ini.c:230)\r\n==30061==    by 0xA58B9FE: zm_startup_protobuf (protobuf.c:290)\r\n==30061==    by 0x7241DA: zend_startup_module_ex (zend_API.c:1868)\r\n==30061==    by 0x5CE3C1: php_load_extension (dl.c:232)\r\n==30061==    by 0x5CE47C: php_dl (dl.c:253)\r\n==30061==    by 0x5CDD83: zif_dl (dl.c:64)\r\n```\r\n\r\nUnregistering the INI entries properly frees this interned string in the correct way and fixes this issue.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 47,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2020-11-12T23:18:10Z",
        "closed_at": "2020-11-13T14:18:41Z",
        "merged_at": "2020-11-13T14:18:41Z",
        "body": "Fixes https://github.com/protocolbuffers/protobuf/issues/8027",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 604,
        "deletions": 22,
        "changed_files": 58,
        "created_at": "2020-11-12T22:12:49Z",
        "closed_at": "2020-11-13T19:27:33Z",
        "merged_at": "2020-11-13T19:27:33Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-11-12T20:15:55Z",
        "closed_at": "2020-11-30T19:29:14Z",
        "merged_at": "2020-11-30T19:29:14Z",
        "body": "This is a minor doctype change for the PHP codebase, Internal\\Mapfield::offsetGet method\r\n\r\nThe param was typed as `object` which is invalid as when items are set in the container the key passes through `checkKey` where it enforces the key must be various classes of integer, bool or string. Thus I have replaced it with a union type (in future this can be a proper PHP level typehint, but for now only doctype)\r\n\r\nI encountered this whilst using a client that consumes protocol buffers, and found that my IDE was telling me that `$item->offsetGet('key')` was invalid, yet on running the code I got the expected output from the Map container.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 26,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2020-11-12T18:30:19Z",
        "closed_at": "2020-11-12T20:31:40Z",
        "merged_at": "2020-11-12T20:31:40Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 35,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2020-11-12T10:49:01Z",
        "closed_at": "2020-11-23T21:57:43Z",
        "merged_at": null,
        "body": "Currently, there is a bug in parsing of delimited messages near the end of an input stream. For example:\r\n\r\nAssume that an input stream has 3 remaining bytes:\r\n  `7 4 12`\r\nCalling  ParseDelimitedFromCodedStream() on this input will return true if `4 12` parses to a valid message, even though the input isn't of length 7, because <= 7 bytes are parsed\r\n\r\nThis PR adds validation that the length of the message matches what is denoted by the length byte(s)",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 22,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-11-11T23:18:37Z",
        "closed_at": "2020-11-12T17:06:14Z",
        "merged_at": "2020-11-12T17:06:14Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 35,
        "deletions": 20,
        "changed_files": 18,
        "created_at": "2020-11-11T18:40:01Z",
        "closed_at": "2020-11-12T20:44:27Z",
        "merged_at": "2020-11-12T20:44:27Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2020-11-11T17:24:10Z",
        "closed_at": "2020-11-11T18:47:40Z",
        "merged_at": "2020-11-11T18:47:40Z",
        "body": "This field turns out to be required and cannot be empty, so this commit\r\nadds some placeholder text.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2020-11-10T17:44:55Z",
        "closed_at": "2020-11-10T19:34:17Z",
        "merged_at": "2020-11-10T19:34:17Z",
        "body": "These files should have been added/removed in\r\nhttps://github.com/protocolbuffers/protobuf/pull/7944, but\r\nthis was missed and Kokoro does not test \"pear package\".",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2020-11-10T15:07:04Z",
        "closed_at": "2020-11-10T16:10:52Z",
        "merged_at": "2020-11-10T16:10:52Z",
        "body": "Xcode 12+ issue a warning when targeting older iOS versions, so avoid\r\nthe issue. #7980 updated the Xcode projects already.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 176,
        "deletions": 80,
        "changed_files": 41,
        "created_at": "2020-11-10T12:37:02Z",
        "closed_at": "2020-11-11T08:47:55Z",
        "merged_at": null,
        "body": "Latest protobuf version from PECL fails to build because of missing file wkt.inc.\r\nThis patch adds it to the tar archive.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 22,
        "deletions": 51,
        "changed_files": 11,
        "created_at": "2020-11-06T12:39:50Z",
        "closed_at": "2020-11-12T20:40:18Z",
        "merged_at": "2020-11-12T20:40:18Z",
        "body": "There was a long TODO entry for this deduplication (see diff)",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2020-11-06T12:18:13Z",
        "closed_at": "2020-11-10T00:20:47Z",
        "merged_at": "2020-11-10T00:20:47Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 7,
        "changed_files": 3,
        "created_at": "2020-11-05T22:56:17Z",
        "closed_at": "2020-11-06T10:16:37Z",
        "merged_at": "2020-11-06T10:16:37Z",
        "body": "Compiler flag `GOOGLE_PROTOBUF_SUPPORT_SYSTEM_MEMORY` is no longer needed. It is always true.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-11-05T14:42:53Z",
        "closed_at": "2021-10-15T15:56:55Z",
        "merged_at": null,
        "body": "To avoid regression of method mergeFromJsonArray",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 35,
        "deletions": 11,
        "changed_files": 1,
        "created_at": "2020-11-05T02:04:10Z",
        "closed_at": "2020-11-05T03:05:03Z",
        "merged_at": "2020-11-05T03:05:03Z",
        "body": "Generated code now embeds the binary descriptor directly instead of embedding hex and calling hex2bin().\r\n\r\nThis saves a small amount of CPU when importing PHP types.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 18,
        "deletions": 28,
        "changed_files": 4,
        "created_at": "2020-11-04T19:37:07Z",
        "closed_at": "2020-11-04T22:39:35Z",
        "merged_at": "2020-11-04T22:39:35Z",
        "body": "Fixes the test broken by https://github.com/protocolbuffers/protobuf/pull/8003",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 62,
        "deletions": 1,
        "changed_files": 4,
        "created_at": "2020-11-03T01:01:03Z",
        "closed_at": "2020-11-04T19:30:03Z",
        "merged_at": "2020-11-04T19:30:03Z",
        "body": "Possible solution for #8001 and #7961\r\n\r\ntest.proto:\r\n```proto\r\nsyntax = \"proto3\";\r\npackage Test;\r\nmessage Test {\r\n        oneof O {\r\n                int32 A = 1;\r\n                int32 B = 2;\r\n        }\r\n}\r\n```\r\n\r\ntest.php:\r\n```php\r\n<?php\r\n        dl('protobuf.so');\r\n        require_once './vendor/autoload.php';\r\n        $t = new Test\\Test();\r\n        print_r($t->hasB() === false);\r\n?>\r\n```\r\n\r\nOutput:\r\n```shell\r\n$ php ./test.php\r\nFatal error: Uncaught Error: Call to undefined method Test\\Test::hasOneof() ...\r\n```\r\n\r\nExpected output:\r\n```shell\r\n$ php ./test.php\r\n1\r\n```",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2020-11-02T18:20:37Z",
        "closed_at": "2021-10-14T18:21:32Z",
        "merged_at": null,
        "body": "I think php extension should respect php visibility rules for message properties.\r\nPlease note this patch is made on top of https://github.com/protocolbuffers/protobuf/pull/7993\r\n\r\ntest.proto:\r\n```proto\r\nsyntax = \"proto3\";\r\npackage Test;\r\nmessage Test {\r\n        int32 foo = 1;\r\n}\r\n```\r\n\r\ntest.php:\r\n```php\r\n<?php\r\n        dl('protobuf.so');\r\n        require_once './vendor/autoload.php';\r\n        $t = new Test\\Test();\r\n        print_r($t->foo);\r\n?>\r\n```\r\n\r\nOutput:\r\n```shell\r\n$ php test.php\r\n0\r\n```\r\n\r\nExpected output:\r\n```shell\r\n$ php test.php\r\nFatal error: Uncaught Error: Cannot access protected property Test\\Test::$foo\r\n```\r\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 1815,
        "deletions": 1690,
        "changed_files": 13,
        "created_at": "2020-11-02T16:39:04Z",
        "closed_at": "2020-11-03T17:41:13Z",
        "merged_at": "2020-11-03T17:41:13Z",
        "body": "This brings a bunch of upb performance improvements, particularly in descriptor loading. PHP should see a significant improvement in the speed of imports of generated classes.\r\n\r\nThis includes two sets of optimizations to descriptor loading:\r\n\r\n- https://github.com/protocolbuffers/upb/pull/328 (-39% CPU time)\r\n- https://github.com/protocolbuffers/upb/pull/330 (-31% CPU time)\r\n\r\nSo overall I anticipate that Ads will see a >2x speedup in the up-front cost of importing protobuf types.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2020-11-01T17:46:31Z",
        "closed_at": "2020-11-02T20:45:59Z",
        "merged_at": "2020-11-02T20:45:59Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-10-29T18:37:48Z",
        "closed_at": "2021-01-28T17:50:49Z",
        "merged_at": null,
        "body": "Particularly if you are using React with experimental TS mode, complains about undefined 'COMPILED'.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-10-29T16:37:17Z",
        "closed_at": "2021-10-13T18:33:09Z",
        "merged_at": null,
        "body": "test.proto:\r\n```proto\r\nsyntax = \"proto3\";\r\npackage Test;\r\nmessage Test {\r\n}\r\n```\r\n\r\ntest.php:\r\n```php\r\n<?php\r\n        dl('protobuf.so');\r\n        require_once './vendor/autoload.php';\r\n        $t = new Test\\Test();\r\n        $t->non_existent;\r\n?>\r\n```\r\n\r\nOutput:\r\n```shell\r\n$ php ./test.php\r\nSegmentation fault (core dumped)\r\n```\r\n\r\nExpected output:\r\n```\r\nFatal error: Uncaught Exception: No such property\r\n```",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2020-10-28T16:43:04Z",
        "closed_at": "2020-12-04T21:51:40Z",
        "merged_at": "2020-12-04T21:51:40Z",
        "body": "",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2020-10-27T07:15:40Z",
        "closed_at": "2020-10-27T17:15:06Z",
        "merged_at": "2020-10-27T17:15:06Z",
        "body": "The vim syntax file allows specifying which regions to spell\r\ncheck and which ones to not. This patch limits spell checking\r\nto comments and strings",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-10-22T20:34:25Z",
        "closed_at": "2020-10-22T21:43:38Z",
        "merged_at": "2020-10-22T21:43:38Z",
        "body": "Bumps [junit](https://github.com/junit-team/junit4) from 4.13 to 4.13.1.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/junit-team/junit4/releases\">junit's releases</a>.</em></p>\n<blockquote>\n<h2>JUnit 4.13.1</h2>\n<p>Please refer to the <a href=\"https://github.com/junit-team/junit/blob/HEAD/doc/ReleaseNotes4.13.1.md\">release notes</a> for details.</p>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/junit-team/junit4/blob/main/doc/ReleaseNotes4.13.1.md\">junit's changelog</a>.</em></p>\n<blockquote>\n<h2>Summary of changes in version 4.13.1</h2>\n<h1>Rules</h1>\n<h3>Security fix: <code>TemporaryFolder</code> now limits access to temporary folders on Java 1.7 or later</h3>\n<p>A local information disclosure vulnerability in <code>TemporaryFolder</code> has been fixed. See the published <a href=\"https://github.com/junit-team/junit4/security/advisories/GHSA-269g-pwp5-87pp\">security advisory</a> for details.</p>\n<h1>Test Runners</h1>\n<h3>[Pull request <a href=\"https://github-redirect.dependabot.com/junit-team/junit4/issues/1669\">#1669</a>:](<a href=\"https://github-redirect.dependabot.com/junit-team/junit/pull/1669\">junit-team/junit#1669</a>) Make <code>FrameworkField</code> constructor public</h3>\n<p>Prior to this change, custom runners could make <code>FrameworkMethod</code> instances, but not <code>FrameworkField</code> instances. This small change allows for both now, because <code>FrameworkField</code>'s constructor has been promoted from package-private to public.</p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/junit-team/junit4/commit/1b683f4ec07bcfa40149f086d32240f805487e66\"><code>1b683f4</code></a> [maven-release-plugin] prepare release r4.13.1</li>\n<li><a href=\"https://github.com/junit-team/junit4/commit/ce6ce3aadc070db2902698fe0d3dc6729cd631f2\"><code>ce6ce3a</code></a> Draft 4.13.1 release notes</li>\n<li><a href=\"https://github.com/junit-team/junit4/commit/c29dd8239d6b353e699397eb090a1fd27411fa24\"><code>c29dd82</code></a> Change version to 4.13.1-SNAPSHOT</li>\n<li><a href=\"https://github.com/junit-team/junit4/commit/1d174861f0b64f97ab0722bb324a760bfb02f567\"><code>1d17486</code></a> Add a link to assertThrows in exception testing</li>\n<li><a href=\"https://github.com/junit-team/junit4/commit/543905df72ff10364b94dda27552efebf3dd04e9\"><code>543905d</code></a> Use separate line for annotation in Javadoc</li>\n<li><a href=\"https://github.com/junit-team/junit4/commit/510e906b391e7e46a346e1c852416dc7be934944\"><code>510e906</code></a> Add sub headlines to class Javadoc</li>\n<li><a href=\"https://github.com/junit-team/junit4/commit/610155b8c22138329f0723eec22521627dbc52ae\"><code>610155b</code></a> Merge pull request from GHSA-269g-pwp5-87pp</li>\n<li><a href=\"https://github.com/junit-team/junit4/commit/b6cfd1e3d736cc2106242a8be799615b472c7fec\"><code>b6cfd1e</code></a> Explicitly wrap float parameter for consistency (<a href=\"https://github-redirect.dependabot.com/junit-team/junit4/issues/1671\">#1671</a>)</li>\n<li><a href=\"https://github.com/junit-team/junit4/commit/a5d205c7956dbed302b3bb5ecde5ba4299f0b646\"><code>a5d205c</code></a> Fix GitHub link in FAQ (<a href=\"https://github-redirect.dependabot.com/junit-team/junit4/issues/1672\">#1672</a>)</li>\n<li><a href=\"https://github.com/junit-team/junit4/commit/3a5c6b4d08f408c8ca6a8e0bae71a9bc5a8f97e8\"><code>3a5c6b4</code></a> Deprecated since jdk9 replacing constructor instance of Double and Float (<a href=\"https://github-redirect.dependabot.com/junit-team/junit4/issues/1660\">#1660</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/junit-team/junit4/compare/r4.13...r4.13.1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=junit:junit&package-manager=maven&previous-version=4.13&new-version=4.13.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/configuring-github-dependabot-security-updates)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/protocolbuffers/protobuf/network/alerts).\n\n</details>",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 589,
        "deletions": 570,
        "changed_files": 38,
        "created_at": "2020-10-16T22:52:22Z",
        "closed_at": "2020-10-22T22:31:55Z",
        "merged_at": "2020-10-22T22:31:55Z",
        "body": "This is one step toward removing the \"using std::string\" statement from\r\nstubs/common.h.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-10-16T00:52:05Z",
        "closed_at": "2020-10-26T23:53:48Z",
        "merged_at": "2020-10-26T23:53:48Z",
        "body": "If installed as RelWithDebInfo or MinSizeRel, CMake won't find Protobuf.\r\n\r\n```\r\n  CMake Error at C:/Program Files/CMake/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:146 (message):\r\n    Could NOT find Protobuf (missing: Protobuf_PROTOC_EXECUTABLE) (found version \"3.13.0.0\")\r\n  Call Stack (most recent call first):\r\n    C:/Program Files/CMake/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:393 (_FPHSA_FAILURE_MESSAGE)\r\n    (...)/protobuf-module.cmake:162 (FIND_PACKAGE_HANDLE_STANDARD_ARGS)\r\n    (...)/protobuf-config.cmake:149 (include)\r\n    (...)/FindProtobuf.cmake:2 (include)\r\n    cmake/protobuf.cmake:58 (find_package)\r\n    CMakeLists.txt:207 (include)\r\n```",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-10-14T21:09:14Z",
        "closed_at": "2020-10-22T20:22:43Z",
        "merged_at": null,
        "body": "Specifying timeouts in the service declaration allows client and\r\nserver teams to agree on expectations, and allows software to\r\nimplement these expectations.",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2020-10-14T04:52:49Z",
        "closed_at": "2021-10-13T18:35:37Z",
        "merged_at": null,
        "body": "Six 1.12.0 conflicts with the latest versions of google-cloud-python: https://github.com/googleapis/google-cloud-python/issues/9965\r\n\r\nRelease notes: Upgrade third_party six dependency to 1.15.0.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2020-10-10T23:21:08Z",
        "closed_at": "2020-10-12T22:42:26Z",
        "merged_at": null,
        "body": "Hello I tried ending the sentence properly.\r\n\r\nThanks.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-10-09T20:34:07Z",
        "closed_at": "2020-10-22T20:18:07Z",
        "merged_at": "2020-10-22T20:18:07Z",
        "body": "`size_t` is used for `len` because otherwise I get:\r\n`error: cannot convert 'int*' to 'size_t*' {aka 'long unsigned int*'}`\r\n\r\nFixes #7948\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2020-10-08T18:43:08Z",
        "closed_at": "2020-10-08T21:56:28Z",
        "merged_at": "2020-10-08T21:56:28Z",
        "body": "The previous git address failed for no access",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2020-10-08T14:23:07Z",
        "closed_at": "2020-10-09T22:54:39Z",
        "merged_at": "2020-10-09T22:54:39Z",
        "body": "This exposes the variable `protobuf_BUILD_LIBPROTOC` as CMake option to be able to build libprotoc without building the protoc binary.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2020-10-08T00:54:32Z",
        "closed_at": "2020-10-08T21:37:50Z",
        "merged_at": null,
        "body": "Learning, Am trying to end the sentence. Thanks.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 4508,
        "deletions": 761,
        "changed_files": 50,
        "created_at": "2020-10-06T05:54:39Z",
        "closed_at": "2020-10-29T20:58:01Z",
        "merged_at": "2020-10-29T20:58:01Z",
        "body": "This PR changes our implementation of the well-known types to be native C, instead of PHP source code embedded into the native extension.\r\n\r\nIt is hoped that this new design will be measurably more efficient than the old approach. Previously the pure-PHP code for the well-known types was registered with an autoloader and had to be loaded separately for each request.\r\n\r\n(This returns us back to the state we were in prior to 3.13.x, with respect to the well-known types).\r\n\r\n## C Output from Code Generator\r\n\r\nThe PHP code generator can now output native C extension code for messages and enums. There is an internal-only option `internal_generate_c_wkt` that is used to generate the well-known types into a `wkt.inc` file that is `#included` from the C extension.\r\n\r\n## New Base Classes for `Timestamp` and `Any`\r\n\r\nThe generated types for `Timestamp` and `Any` have extra, hand-written methods like `pack()` and `unpack()`. Before this PR, these extra methods had been added by editing the generated code for `Timestamp` and `Any`. This made it impossible to regenerate the well-known types without obliterating these hand-written methods.\r\n\r\nWith this PR there are now base classes that contain the hand-written methods. This allows us to regenerate the well-known types without losing manual edits.\r\n\r\nThese hand-written methods like `pack()` and `unpack()` unfortunately need to be implemented in both C and PHP. In C there is no base class, we simply emit extra methods in the method list.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-10-05T09:06:12Z",
        "closed_at": "2020-10-22T16:45:40Z",
        "merged_at": "2020-10-22T16:45:40Z",
        "body": "To make it in sync with Grpc's System.Memory dependency and avoid the need for binding redirect.\r\n\r\nFixes https://github.com/protocolbuffers/protobuf/issues/7848.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2020-10-02T09:07:09Z",
        "closed_at": "2020-10-22T20:30:42Z",
        "merged_at": null,
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-10-02T04:20:48Z",
        "closed_at": "2021-10-14T18:24:01Z",
        "merged_at": "2021-10-14T18:24:01Z",
        "body": "Message and Repeated field override clone so that it uses the internal implementation of dup but Map is missing this and only implements dup.  This can lead to unexpected behavior since two out of three complex types behave correctly.\n\n<!-- Reviewable:start -->\n---\nThis change is\u2002[<img src=\"https://reviewable.io/review_button.svg\" height=\"34\" align=\"absmiddle\" alt=\"Reviewable\"/>](https://reviewable.io/reviews/protocolbuffers/protobuf/7938)\n<!-- Reviewable:end -->\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 17,
        "deletions": 66,
        "changed_files": 2,
        "created_at": "2020-10-02T00:36:55Z",
        "closed_at": "2020-10-02T20:36:50Z",
        "merged_at": "2020-10-02T20:36:50Z",
        "body": "This change updates the README.md to describe the order of resolution\r\nbetween `options['generate_py_protobufs']`, `--protoc`, and the `PROTOC`\r\nenv var.\r\n\r\nSince the `setup.py` script is not the main way to find docs, this change\r\ndeletes the parts of the docstring that are redundant with `README.md`.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-10-01T23:03:04Z",
        "closed_at": "2020-10-02T00:17:56Z",
        "merged_at": "2020-10-02T00:17:56Z",
        "body": "Currently, the logic in `generate_py_protobufs` cannot find a custom `protoc` (even though it's supposed to be possible). Fixes:\r\n\r\n1. Mark the `--protoc` flag as accepting an argument.\r\n2. If the `--protoc` flag was not passed, try finding `PROTOC` in the environment.\r\n3. (Existing behavior) Otherwise, fall back to `spawn.find_executable`.\r\n\r\nHat tip to @bobhancock for uncovering the problem(s).",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 34,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2020-10-01T22:03:23Z",
        "closed_at": "2021-06-26T22:57:48Z",
        "merged_at": "2021-06-26T22:57:47Z",
        "body": "Closes #7933.\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 25,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2020-09-29T12:12:34Z",
        "closed_at": "2020-11-06T23:29:32Z",
        "merged_at": "2020-11-06T23:29:32Z",
        "body": "Properly release internal data structure on deallocation.\r\nFix #7301",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 71,
        "deletions": 28,
        "changed_files": 27,
        "created_at": "2020-09-29T01:34:21Z",
        "closed_at": "2020-09-30T22:56:17Z",
        "merged_at": "2020-09-30T22:56:17Z",
        "body": "Our versioned Python tests have been using the common \"linux/64-bit\" runner\r\nwith the same `kokoro/linux/python_cpp/build.sh` build script. Unfortunately,\r\nusing non-versioned `build_file` means every Python version is tested (under\r\nTox), multiplied across each Python version-specific build.\r\n\r\nFor example, this means that when the `python38` config is used to run Tox, the\r\nTox runner actually uses the default Python from `kokoro/linux/64-bit`, which\r\nthen tests all of the Python versions individually, via Tox.\r\n\r\nThis change fixes the `build_file` paths to point to the version-specific build\r\nscripts. Because all of the builds were running on the `linux/64-bit` image, this\r\nchange also updates the versioned build containers to install tox.\r\n\r\nSome tox.ini changes are needed to avoid breakage (see also #7930).",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 5226,
        "deletions": 4358,
        "changed_files": 289,
        "created_at": "2020-09-28T18:57:36Z",
        "closed_at": "2020-10-28T19:02:24Z",
        "merged_at": "2020-10-28T19:02:24Z",
        "body": "**Important:** this integration must be merged, not squashed!",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-09-28T17:49:10Z",
        "closed_at": "2020-09-29T01:35:24Z",
        "merged_at": "2020-09-29T01:35:24Z",
        "body": "The Codespell checker is saying we should replace \"files'\" with\r\n\"file's\", but this is not a real issue since the single-quote on the end\r\nis being used as a quote and not an apostrophe. Let's tell Codespell to\r\nignore this.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2737,
        "deletions": 1043,
        "changed_files": 28,
        "created_at": "2020-09-28T12:47:56Z",
        "closed_at": "2020-12-12T00:02:42Z",
        "merged_at": "2020-12-12T00:02:42Z",
        "body": "This gets the Ruby gem to be able to be used on JRuby. Almost all Ruby tests are passing with a couple minor changes. There are a significant number of compatibility tests that are failing, but I figured this would at least get something in place that could be expanded upon by others in the community.\r\n\r\nThis is related to the following issues:\r\n\r\n- https://github.com/protocolbuffers/protobuf/issues/1594\r\n- https://github.com/protocolbuffers/protobuf/issues/1820\r\n- https://github.com/protocolbuffers/protobuf/issues/3090\r\n- https://github.com/protocolbuffers/protobuf/issues/3650\r\n- https://github.com/protocolbuffers/protobuf/issues/7831",
        "comments": 38
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-09-26T21:30:37Z",
        "closed_at": "2020-09-28T18:15:18Z",
        "merged_at": "2020-09-28T18:15:18Z",
        "body": "`error: \"_MSC_VER\" is not defined, evaluates to 0 [-Werror=undef]`",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 32,
        "changed_files": 1,
        "created_at": "2020-09-24T20:38:22Z",
        "closed_at": "2020-10-08T21:44:04Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 69,
        "deletions": 46,
        "changed_files": 7,
        "created_at": "2020-09-24T08:52:03Z",
        "closed_at": "2020-09-29T21:58:30Z",
        "merged_at": "2020-09-29T21:58:29Z",
        "body": "Starting with gcc9 the compilation of generated message classes throws the following error:\r\n` warning: \u2018void* __builtin_memset(void*, int, long unsigned int)\u2019 offset [29, 32] from the object at \u2018_Message1_default_instance_\u2019 is out of the bounds of referenced subobject \u2018Message1::a_\u2019 with type \u2018int\u2019 at offset 24 [-Warray-bounds]\r\n   71 |   return __builtin___memset_chk (__dest, __ch, __len, __bos0 (__dest));\r\n      |          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\r\n\r\nThis fix aims to remove this warning and also maintain backwards compatibility with older compilers, therefore fixing the #7140 issue",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 20,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2020-09-23T16:29:13Z",
        "closed_at": "2021-10-14T18:31:04Z",
        "merged_at": null,
        "body": "This bug is visible if a user creates a FileDescriptorProto,\r\nDescriptorProto, and FieldDescriptorProto dynamically and adds the\r\nfile descriptor to a descriptor pool.\r\nThe field descriptor has a custom json_name.\r\nThe user then retreives the\r\nmessage descriptor from the pool via FindMessageTypeByName and queries\r\nthe Descriptor's fields.\r\nThe FieldDescriptor should preserve the custom json_name.\r\n\r\nThis bug only affects Python.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2020-09-23T03:35:47Z",
        "closed_at": "2020-09-23T22:20:39Z",
        "merged_at": "2020-09-23T22:20:39Z",
        "body": "Since `google` is a Python namespace package, the `google/__init__.py`\r\nfile should be omitted to avoid collisions. For example, its presence\r\nmay cause other Pip packages in the google namespace not to be found.\r\n\r\nThis change narrows which `__init__.py` files are included in the\r\n`//:protobuf_runtime` target to include only those under\r\n`google/protobuf`. It also moves their canonical inclusion to the\r\ninternal `//:python_srcs` rule, eliminating the dual specification in\r\n`python_protobuf.extra_srcs`.\r\n\r\nThis is the difference in files, lexicographically ordered:\r\n\r\n```\r\n$ bazel cquery 'labels(srcs, kind(py_library, deps(:protobuf_python)))' | sort > /tmp/deps-{before,after}.txt\r\n$ diff /tmp/deps-{before,after}.txt\r\n1,5d0\r\n< //:python/compatibility_tests/v2.5.0/tests/__init__.py (null)\r\n< //:python/compatibility_tests/v2.5.0/tests/google/__init__.py (null)\r\n< //:python/compatibility_tests/v2.5.0/tests/google/protobuf/__init__.py (null)\r\n< //:python/compatibility_tests/v2.5.0/tests/google/protobuf/internal/__init__.py (null)\r\n< //:python/google/__init__.py (null)\r\n51d45\r\n< //:python/protobuf_distutils/protobuf_distutils/__init__.py (null)\r\n```\r\n\r\nThis seems like a desirable change, since it avoids polluting other\r\npackages, too.\r\n\r\nThis is conceptually similar to #7877, but for Bazel.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2020-09-23T01:45:39Z",
        "closed_at": "2020-10-03T03:10:52Z",
        "merged_at": "2020-10-03T03:10:52Z",
        "body": "The gtest source was changed in #7237 on an opt-in basis, and has been\r\nreleased since 3.12.0. The comments state that the default should change\r\nin 3.13.0, but that didn't quite happen.\r\n\r\nThis change does flip the default, and updates comments to say 3.14.0.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 418,
        "deletions": 395,
        "changed_files": 6,
        "created_at": "2020-09-22T07:59:56Z",
        "closed_at": "2020-11-25T22:01:15Z",
        "merged_at": null,
        "body": "This pull request includes fixes for generated c++ message classes that refer to:\r\n - mark methods that override functionality from base class as \"override\"\r\n - fix of pedantic warnings generated by declaring of arrays with 0 length - there is a language extension for this but having the pedantic warnings enabled together with -Werror will result in compilation errors in projects that depend on this library & the generated code\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 10,
        "changed_files": 2,
        "created_at": "2020-09-21T23:39:27Z",
        "closed_at": "2020-09-23T03:46:08Z",
        "merged_at": "2020-09-23T03:46:08Z",
        "body": "In #713 and #1296, the `google` package in protobuf sources was found\r\nto cause conflicts with other Google projects, because it was not\r\nproperly configured as a [namespace package]. The initial fix in\r\n786f80f addressed part of the issue, and #1298 fixed the rest.\r\n\r\nHowever, 786f80f (the initial fix) also made `google.protobuf` and\r\n`google.protobuf.pyext` into namespace packages. This was not correct:\r\nthey are both regular, non-namespace, sub-subpackages.\r\n\r\nHowever (still), the follow-up #1298 only nominated `google` as a\r\nnamespace packages, leaving the namespace registration behavior\r\nfor the other packages, without benefit (or need).\r\n\r\nThis change removes the unnecessary namespace registration, which has\r\nsubstantial overhead, thus reducing startup time substantially when\r\nusing protobufs.\r\n\r\nBecause this change affects the import internals, quantifying the\r\noverhead requires a full tear-down/start-up of the Python interpreter.\r\nSo, to capture the full cost for every run, I measured the time to\r\nlaunching a _fresh_ Python instance in a subprocess, varying the\r\nimports and code under test. In other words, I used `timeit` to\r\nmeasure the time to launch a _fresh_ Python subprocess which actually\r\nperforms the imports.\r\n\r\n* Reference: normal Python startup (i.e., don't import protobuf at all).\r\n  ```\r\n   % python3 -m timeit -s 'import subprocess' -r 3 -n 10 'subprocess.call([\"python3\", \"-c\", \"pass\"])'\r\n  10 loops, best of 3: 27.1 msec per loop\r\n  ```\r\n\r\n* Baseline: cost to import `google.protobuf.descriptor`, with\r\n  extraneous namespace packages.\r\n  ```\r\n  % python3 -m timeit -s 'import subprocess' -r 3 -n 10 'subprocess.call([\"python3\", \"-c\", \"import google.protobuf.descriptor\"])'\r\n  10 loops, best of 3: 133 msec per loop\r\n  ```\r\n\r\n* This change: cost to import `google.protobuf.descriptor`, without\r\n  extraneous namespace packages.\r\n  ```\r\n  % python3 -m timeit -s 'import subprocess' -r 3 -n 10 'subprocess.call([\"python3\", \"-c\", \"import google.protobuf.descriptor\"])'\r\n  10 loops, best of 3: 43.1 msec per loop\r\n  ```\r\n\r\n[namespace package]:  https://packaging.python.org/guides/packaging-namespace-packages/",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 75,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2020-09-21T08:53:53Z",
        "closed_at": "2021-03-05T23:28:08Z",
        "merged_at": null,
        "body": "Fixes #54",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 162,
        "deletions": 49,
        "changed_files": 9,
        "created_at": "2020-09-21T07:51:22Z",
        "closed_at": "2020-09-22T18:44:54Z",
        "merged_at": "2020-09-22T18:44:54Z",
        "body": "Fixes: https://github.com/protocolbuffers/protobuf/issues/7896\r\nFixes: https://github.com/protocolbuffers/protobuf/issues/7895",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-09-20T14:24:23Z",
        "closed_at": "2020-09-21T19:25:15Z",
        "merged_at": "2020-09-21T19:25:15Z",
        "body": "wheel is required since version 3.13.0 and\r\nhttps://github.com/protocolbuffers/protobuf/commit/ff92cee10bcae7533b573368f448e782fbd43f39\r\n\r\nThis will result in the following build failure when cross-compiling:\r\n\r\n```\r\nDownload error on https://pypi.org/simple/wheel/: unknown url type: https -- Some packages may not be found!\r\nCouldn't find index page for 'wheel' (maybe misspelled?)\r\nDownload error on https://pypi.org/simple/: unknown url type: https -- Some packages may not be found!\r\nNo local packages or working download links found for wheel\r\n```\r\n\r\nRemove wheel requirement from setup.py as it is only needed by\r\nrelease.sh, not by setup.py\r\n\r\nFixes:\r\n - http://autobuild.buildroot.org/results/371c686a10d6870933011b46d36b1879d29046b9\r\n\r\nSigned-off-by: Fabrice Fontaine <fontaine.fabrice@gmail.com>",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-09-17T23:01:04Z",
        "closed_at": "2020-09-23T23:12:15Z",
        "merged_at": null,
        "body": "PR with additional unit tests to reproduce https://github.com/protocolbuffers/protobuf/issues/7650#issuecomment-692921151",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-09-17T15:35:10Z",
        "closed_at": "2020-09-18T17:26:40Z",
        "merged_at": "2020-09-18T17:26:40Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-09-11T21:05:00Z",
        "closed_at": "2022-03-09T00:36:40Z",
        "merged_at": null,
        "body": "Adds a comment to the top of the files that are generated to enforce frozen string literals.\r\n\r\nA pragma comment is an instruction for Ruby that when reading the file, it should treat it a certain way. They only impact that specific file, not any other files that it in turn loads. Seeking guidance from the team on if this should be an option passed when doing the code generation.\r\n\r\nThis only works for Ruby 2.3.0 and up, however it shouldn't have any adverse impact on versions prior to 2.3.0.",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 281,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2020-09-11T03:24:08Z",
        "closed_at": "2020-09-14T20:40:08Z",
        "merged_at": "2020-09-14T20:40:08Z",
        "body": "Prior to this CL, the `==` operator in PHP worked as expected for the pure-PHP library, but not for the C extension.\r\n\r\nThis PR fixes the C extension to have proper `==` semantics. It also adds tests that pass for both pure-PHP and the C extension.\r\n\r\nFixes: https://github.com/protocolbuffers/protobuf/issues/7650",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 14,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-09-10T12:43:50Z",
        "closed_at": "2021-10-13T18:41:44Z",
        "merged_at": null,
        "body": "Before fix it might fail if between load attempts native library, that use same FileOptions\r\ndefinitions, is loaded into process address space.\r\n\r\nSteps to reproduce: On Linux machine run\r\n```\r\ngit clone https://github.com/vchigrin/protobuf_bug_proof.git\r\ncd protobuf_bug_proof/bug_3.12.3.2/\r\n./build.sh\r\n./test.py\r\n```\r\n\r\nExpected output: \r\n```\r\nSuccess.\r\n```\r\n\r\nActual output:\r\n```\r\nTraceback (most recent call last):\r\n  File \"./test.py\", line 6, in <module>\r\n    import test_pb2\r\n  File \"sub/test_pb2.py\", line 25, in <module>\r\n    dependencies=[test__options__pb2.DESCRIPTOR,])\r\n  File \"/usr/local/lib/python2.7/dist-packages/protobuf-3.13.0-py2.7-linux-x86_64.egg/google/protobuf/descriptor.py\", line 942, in __new__\r\n    return _message.default_pool.AddSerializedFile(serialized_pb)\r\nTypeError: Couldn't build proto file into descriptor pool!\r\nInvalid proto descriptor for file \"test.proto\":\r\n  test.proto: A file with this name is already in the pool.\r\n```",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 75,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2020-09-08T15:18:09Z",
        "closed_at": "2021-10-13T01:59:03Z",
        "merged_at": null,
        "body": "Fixes #54",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2020-09-08T11:50:01Z",
        "closed_at": "2020-09-09T23:57:50Z",
        "merged_at": "2020-09-09T23:57:50Z",
        "body": "While some of the warnings have been fixed in 76f9074c1c947c6f6773c5095e977572de514821, more remains.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 58,
        "changed_files": 13,
        "created_at": "2020-09-05T10:59:22Z",
        "closed_at": "2020-09-09T23:47:01Z",
        "merged_at": "2020-09-09T23:47:01Z",
        "body": "arena is not used in _InternalParse, So remove it for better performance",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2020-09-02T22:48:05Z",
        "closed_at": "2020-09-03T16:23:29Z",
        "merged_at": "2020-09-03T16:23:29Z",
        "body": "This was pretty behind https://github.com/bazelbuild/rules_proto/compare/97d8af4dc474595af3900dd85cb3a29ad28cc313...40298556293ae502c66579620a7ce867d5f57311",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-09-02T21:03:21Z",
        "closed_at": "2020-09-08T22:49:55Z",
        "merged_at": "2020-09-08T22:49:55Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2020-09-01T13:18:58Z",
        "closed_at": "2020-09-03T16:11:12Z",
        "merged_at": "2020-09-03T16:11:12Z",
        "body": "Note: the diff on branch 3.13.0 is slightly different (there is no method \"IsFieldUsed\" on this branch).",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 145,
        "deletions": 15,
        "changed_files": 2,
        "created_at": "2020-08-28T16:25:20Z",
        "closed_at": "2020-09-29T21:19:25Z",
        "merged_at": null,
        "body": "JVM has the optimization for eliminating zeroing when the [allocation is followed by `System.arraycopy`](https://bugs.openjdk.java.net/browse/JDK-7081933). For codepaths that uses `UnsafeUtil.copyMemory` the allocation is allocated and the zeroing takes a fair amount of CPU cycles when array size is large.\r\n\r\nJava 9+ has `jdk.internal.misc.Unsafe.allocateUninitializedArray` which does what we want.\r\n\r\nRelated to [gRPC's optimization](https://github.com/grpc/grpc-java/pull/7330) for passing `Iterable<ByteBuffer>` into Protobuf.\r\n\r\n\r\nI've run the [gRPC transport benchmark](https://github.com/voidzcy/grpc-java/blob/master/benchmarks/src/jmh/java/io/grpc/benchmarks/TransportBenchmark.java) with 1 thread and 2MB response messages on Java 11:\r\n\r\n- Baseline\r\n```\r\nBenchmark                                        (direct)  (transport)   Mode  Cnt          Score          Error  Units\r\nTransportBenchmark.streamingCallsByteThroughput      true        NETTY  thrpt  100  655102314.930 \u00b1 61603907.509  ops/s\r\n```\r\n\r\n- With changes in this PR\r\n```\r\nBenchmark                                        (direct)  (transport)   Mode  Cnt          Score          Error  Units\r\nTransportBenchmark.streamingCallsByteThroughput      true        NETTY  thrpt  100  718053472.436 \u00b1 45752070.587  ops/s\r\n```\r\n(The full benchmark results are [here](https://gist.github.com/voidzcy/3f2b498e752fe45b9b8c98017ce7d372) and [here](https://gist.github.com/voidzcy/718548b69a8092a503b88e2b6713b268). The baseline commit is 70b02861f8e8ba711efd187188dfb930db7bcaba)\r\n\r\n\r\nWe can see this change gives about 9.6% performance improvement for gRPC running on Java 11.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 110,
        "deletions": 173,
        "changed_files": 33,
        "created_at": "2020-08-28T13:42:45Z",
        "closed_at": "2021-08-29T12:43:27Z",
        "merged_at": "2021-08-29T12:43:27Z",
        "body": "There are a few ways of doing a null pointer check in the protobuf code base.  This PR unifies them all on the JDK's `Objects.requireNonNull`\r\n\r\nhttps://docs.oracle.com/javase/7/docs/api/java/util/Objects.html#requireNonNull(T)",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2020-08-28T00:00:09Z",
        "closed_at": "2021-10-13T11:13:06Z",
        "merged_at": "2021-10-13T11:13:06Z",
        "body": "Right-size the list copy from the beginning, utilizing the ArrayList copy constructor, instead of creating a backing array of size 10 (default) and then potentially discarding it when copying a list larger than 10 elements.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 85,
        "deletions": 64,
        "changed_files": 22,
        "created_at": "2020-08-27T23:27:56Z",
        "closed_at": "2021-10-13T17:37:50Z",
        "merged_at": null,
        "body": "Use StandardCharsets included in JDK 1.7 for character set handling.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 23,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2020-08-26T18:56:26Z",
        "closed_at": "2021-07-26T10:39:47Z",
        "merged_at": null,
        "body": "  while using proto2 with optional and default keyword, it always return string, so fix it",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 2073,
        "deletions": 0,
        "changed_files": 6,
        "created_at": "2020-08-26T09:23:13Z",
        "closed_at": "2021-10-13T01:54:10Z",
        "merged_at": null,
        "body": "Prototype, tests, benchmarks for https://github.com/protocolbuffers/protobuf/pull/7039\r\n\r\n@jtattermusch\r\n\r\n```\r\n|                 Method |     Mean |    Error |   StdDev |  Gen 0 | Gen 1 | Gen 2 | Allocated |\r\n|----------------------- |---------:|---------:|---------:|-------:|------:|------:|----------:|\r\n|     DecimalString_Zero | 536.4 ns |  3.70 ns |  3.28 ns | 0.0267 |     - |     - |     112 B |\r\n| DecimalString_MaxValue | 911.4 ns | 14.96 ns | 13.26 ns | 0.0534 |     - |     - |     224 B |\r\n|         Decimal64_Zero | 166.3 ns |  1.99 ns |  1.77 ns | 0.0191 |     - |     - |      80 B |\r\n|     Decimal64_MaxValue | 265.9 ns |  2.65 ns |  2.48 ns | 0.0286 |     - |     - |     120 B |\r\n|        Decimal128_Zero | 171.7 ns |  1.58 ns |  1.48 ns | 0.0229 |     - |     - |      96 B |\r\n|    Decimal128_MaxValue | 327.2 ns |  3.92 ns |  3.27 ns | 0.0324 |     - |     - |     136 B |\r\n```\r\n\r\nDecimal64Version2 and Decimal128Version2 are pretty similar to the other versions. I didn't do anything with them.",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 312,
        "deletions": 121,
        "changed_files": 17,
        "created_at": "2020-08-25T21:29:47Z",
        "closed_at": "2020-08-26T04:33:28Z",
        "merged_at": "2020-08-26T04:33:28Z",
        "body": "**Important:** this integration must be merged, not squashed!",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2020-08-23T09:16:01Z",
        "closed_at": "2020-08-23T16:27:28Z",
        "merged_at": null,
        "body": "There is a typo in PHP_VERSION_ID check.\r\n\r\nThe error message (on FreeBSD) looks like:\r\n```\r\n/wrkdirs/usr/ports/devel/pecl-protobuf/work-php74/protobuf-3.13.0/message.c:269:3: error: non-void function 'Message_write_property' should return a value [-Wreturn-type]\r\n  return;\r\n  ^\r\n/wrkdirs/usr/ports/devel/pecl-protobuf/work-php74/protobuf-3.13.0/message.c:276:3: error: non-void function 'Message_write_property' should return a value [-Wreturn-type]\r\n  return;\r\n  ^\r\n2 errors generated.\r\n*** Error code 1\r\n\r\nStop.\r\nmake[1]: stopped in /wrkdirs/usr/ports/devel/pecl-protobuf/work-php74/protobuf-3.13.0\r\n*** Error code 1\r\n\r\nStop.\r\nmake: stopped in /usr/ports/devel/pecl-protobuf\r\n```",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-08-22T23:39:18Z",
        "closed_at": "2021-10-13T18:43:31Z",
        "merged_at": null,
        "body": "The constructor for `CodedOutputStream` (which takes in a given array offset) is `private`. As it stands, it is only used via one other constructor (which always passes 0 as the offset), making the offset always hard-coded to the initial value of 0. Making this constructor `public` allows for client applications to serialize messages into arrays without superfluous array copies. It is also worth noting that the corresponding constructor on `CodedInputStream` is already public (`public CodedInputStream(byte[] buffer, int offset, int length)`).\r\n\r\nLooking through the history, it seems that this constructor was originally marked private when the library used static factory methods. When migrating over to using constructors directly, this constructor [was not made public](https://github.com/protocolbuffers/protobuf/commit/0e0e0c97e7d5a70b3307c2fcea8793983b6e0680#diff-edc376d7570e8db3f8d8745ef37719f3R82) (perhaps because there was no corresponding factory method?).",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-08-21T23:19:02Z",
        "closed_at": "2020-09-07T17:32:04Z",
        "merged_at": null,
        "body": "Fire an assert if `block_alloc()` fails to allocate memory(returns\r\n`nullptr`). This makes sure the program terminates right there instead of\r\ncontinuing to use the memory on page 0(on systems with no MMU) which could be dangerous! #4616",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-08-21T07:28:53Z",
        "closed_at": "2021-02-09T14:21:59Z",
        "merged_at": null,
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-08-20T16:45:55Z",
        "closed_at": "2020-08-20T22:13:04Z",
        "merged_at": "2020-08-20T22:13:04Z",
        "body": "See https://docs.gradle.org/current/userguide/java_library_plugin.html\r\n> The compile, testCompile, runtime and testRuntime configurations inherited from the Java plugin are still available but are deprecated. You should avoid using them, as they are only kept for backwards compatibility.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 17,
        "deletions": 16,
        "changed_files": 1,
        "created_at": "2020-08-19T22:06:10Z",
        "closed_at": "2020-08-21T23:33:53Z",
        "merged_at": "2020-08-21T23:33:53Z",
        "body": "This commit makes a couple of fixes:\r\n- Make sure we always update the suffix, since even for a non-RC release\r\n  we need to clear the suffix.\r\n- Make sure the suffix is properly quoted and begins with -rc",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-08-19T17:59:36Z",
        "closed_at": "2021-10-16T03:02:37Z",
        "merged_at": "2021-10-16T03:02:37Z",
        "body": "This avoids https://issues.apache.org/jira/browse/SUREFIRE-1439,\nwhich I hit while investigating\nhttps://github.com/protocolbuffers/protobuf/issues/7827",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 27,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2020-08-17T20:30:15Z",
        "closed_at": "2021-10-13T22:52:50Z",
        "merged_at": null,
        "body": "The PHP extension currently segfaults when `serialize()` is called on a `Message` object. Segfaults create difficult to debug situations and are unnecessarily disruptive to production environments. This change throws an exception with a useful error message instead. ",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2020-08-17T20:10:48Z",
        "closed_at": "2020-08-19T17:31:32Z",
        "merged_at": "2020-08-19T17:31:32Z",
        "body": "Now that 3.13.0 has been released, this commit updates CHANGES.txt to\r\nmention 3.13.0 instead of 3.13.0-rc1. I also added a short explanation\r\nof the 3.12.4 release.\r\n\r\nFixes #7820.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2071,
        "deletions": 1556,
        "changed_files": 110,
        "created_at": "2020-08-17T18:29:12Z",
        "closed_at": "2020-08-17T19:56:06Z",
        "merged_at": "2020-08-17T19:56:06Z",
        "body": "",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-08-15T18:39:41Z",
        "closed_at": "2021-03-05T23:28:58Z",
        "merged_at": null,
        "body": "This change proposes a descriptive error for when a bytes value is passed to Timestamp.FromJsonString.\r\n\r\nWithout this code in place, users who pass a bytes object to Timestamp.FromJsonString will get an error telling them that the method requires a 'bytes' object in the first call to value.find.  This is because value.find has been passed a hardcoded string.  This code performs a quick typecheck, then throws a descriptive error.  The try-except is to catch if bytes is not available in the version of python used by the consumer (ref: https://www.python.org/dev/peps/pep-0358/).\r\n\r\nHappy to discuss if there is a better method for handling this.  Did consider writing code to permit bytes type objects to be passed, but that would require knowledge of the appropriate encoding.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 34,
        "deletions": 20,
        "changed_files": 16,
        "created_at": "2020-08-14T21:12:37Z",
        "closed_at": "2020-08-14T22:20:54Z",
        "merged_at": "2020-08-14T22:20:54Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-08-14T18:33:22Z",
        "closed_at": "2020-08-14T19:57:14Z",
        "merged_at": "2020-08-14T19:57:14Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2020-08-14T14:48:37Z",
        "closed_at": "2020-08-18T14:43:38Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-08-14T02:57:22Z",
        "closed_at": "2020-08-14T18:20:38Z",
        "merged_at": "2020-08-14T18:20:38Z",
        "body": " Fixes a segment fault for proto3 optional #7801",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-08-13T20:21:42Z",
        "closed_at": "2020-08-14T16:21:31Z",
        "merged_at": "2020-08-14T16:21:31Z",
        "body": "Somehow we ended up with two conflicting versions listed for C#, so this\r\ncommit removes the incorrect one (the correct one is 3.13.0-rc3).",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1064,
        "deletions": 1073,
        "changed_files": 28,
        "created_at": "2020-08-12T18:29:48Z",
        "closed_at": "2020-08-12T20:18:29Z",
        "merged_at": "2020-08-12T20:18:29Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1096,
        "deletions": 192,
        "changed_files": 38,
        "created_at": "2020-08-12T17:12:21Z",
        "closed_at": "2020-08-12T20:31:53Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 15,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2020-08-12T16:25:14Z",
        "closed_at": "2020-08-19T18:31:51Z",
        "merged_at": "2020-08-19T18:31:51Z",
        "body": "Display the beta version when \"protoc --version\" is executed. Use\r\nPROTOBUF_VERSION_SUFFIX for this purpose. #1639",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 282,
        "deletions": 75,
        "changed_files": 24,
        "created_at": "2020-08-11T03:14:53Z",
        "closed_at": "2020-08-12T02:30:47Z",
        "merged_at": "2020-08-12T02:30:47Z",
        "body": "* Only ported c extension to php8.\r\n* Didn't fixed the issue of throwing warnings for missing arginfo in bundled files.\r\n* Tests not fixed, because syntax of phpunit (<7 vs >9.3) are not compatible.\r\n* In next release, needs to drop php5 and php7.0 support (in order to use phpunit > 7)\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-08-10T03:21:15Z",
        "closed_at": "2020-08-10T17:13:30Z",
        "merged_at": "2020-08-10T17:13:30Z",
        "body": "The previously-linked project hasn't been updated for years.\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 96,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-08-08T18:12:05Z",
        "closed_at": "2020-08-10T21:35:19Z",
        "merged_at": "2020-08-10T21:35:19Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 401,
        "deletions": 220,
        "changed_files": 24,
        "created_at": "2020-08-08T02:17:50Z",
        "closed_at": "2020-08-11T03:15:27Z",
        "merged_at": null,
        "body": "Fixes #7720, #7721 ",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2020-08-08T02:12:06Z",
        "closed_at": "2020-08-10T17:02:37Z",
        "merged_at": "2020-08-10T17:02:37Z",
        "body": "This is done to match an internal Google change necessary to deprecate an old internal API.  Nothing needs to change here, however making the change allows the internal code to continue to match the Github code, which is desirable.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-08-07T11:21:59Z",
        "closed_at": "2020-08-10T17:14:57Z",
        "merged_at": "2020-08-10T17:14:57Z",
        "body": "Add a library that helps develop protoc plugins in Node.js, and an example plugin that can serve as a template for alternative generators.\r\n\r\nLet me know if I have to include Google's license file in these projects.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 386,
        "deletions": 1,
        "changed_files": 6,
        "created_at": "2020-08-07T02:55:27Z",
        "closed_at": "2020-08-31T17:40:58Z",
        "merged_at": "2020-08-31T17:40:58Z",
        "body": "This setuptools extension generates Python protobuf code from .proto files, so they\r\ncan be created as part of a normal Python build. The extension uses an installed\r\nprotoc binary, which can be explicitly specified if needed.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2020-08-06T23:51:05Z",
        "closed_at": "2020-08-11T23:25:42Z",
        "merged_at": "2020-08-11T23:25:42Z",
        "body": "6bbd56dfd9600adc9b084028d99a0aed880d7622 removed the `-source 7 -target 7` javacopts from the //java:{core,lite} Bazel targets in order to improve compatibility with more recent versions of javac. (See that commit for more discussion of motivation.) But the commit left `-source 7 -target 7` javacopts on the related //java/util target. I've [confirmed](https://github.com/protocolbuffers/protobuf/commit/6bbd56dfd9600adc9b084028d99a0aed880d7622#commitcomment-41179138) with the commit author that this was just an oversight, so remove the flags from this target as well.\r\n\r\nTested: build //:protobuf_java_util and confirmed that major byte version 52 is produced, corresponding to Java 8:\r\n```\r\n$ bazel build protobuf_java_util\r\n$ javap -v -cp bazel-bin/java/util/libutil.jar com.google.protobuf.util.Durations | grep major\r\n  major version: 52\r\n```",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 851,
        "deletions": 423,
        "changed_files": 74,
        "created_at": "2020-08-05T19:10:46Z",
        "closed_at": "2020-08-07T21:44:50Z",
        "merged_at": "2020-08-07T21:44:50Z",
        "body": "After doing a couple of 4.0 release candidates, we decided to go ahead with a 3.13 minor release instead. I rebased the 4.0.x branch onto a new 3.13.x branch, starting from the same branch cut. I think this is the best way to transition cleanly to 3.13 while still keeping the history from the 4.0.x branch.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-08-05T11:29:00Z",
        "closed_at": "2020-08-19T22:44:58Z",
        "merged_at": "2020-08-19T22:44:58Z",
        "body": "Using default production Android build and protobuf-lite leads to RuntimeExceptions. The workarounds are documented in issues and I took those discussions and summarized them in the lite.md file.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-08-04T15:11:25Z",
        "closed_at": "2020-08-10T17:19:57Z",
        "merged_at": "2020-08-10T17:19:57Z",
        "body": "release notes: no",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2020-08-03T01:48:16Z",
        "closed_at": "2020-08-11T23:11:11Z",
        "merged_at": null,
        "body": "Allow for alternative implementations of CodedOutputStream. One such\r\nimplementation reduces garbage by using a pool byte buffer internally.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2020-08-02T23:27:26Z",
        "closed_at": "2021-10-16T03:08:54Z",
        "merged_at": null,
        "body": "As described in https://www.gnu.org/software/libc/manual/html_node/Argument-Macros.html\r\nand https://github.com/protocolbuffers/protobuf/issues/2335#issuecomment-579913357:\r\n\r\n1. `va_copy` is not available when building to ISO C90.\r\n2. When `RUBY_PLATFORM` is `linux` or `darwin`, ISO C90 mode is used.\r\n3. Prior to GCC 3.0, GCC provided `__va_copy` as an extension in any\r\nstandard mode. After GCC 3.0, the compiler builtin is available.\r\n\r\nPrior to this change, attempting to load the Ruby google-protobuf gem on\r\na musl-based Linux system (e.g. Alpine Linux) would result in\r\n`__va_copy: symbol not found`. The only workaround would be to build the\r\nRuby gem with `--with-cflags=-D__va_copy=va_copy`.\r\n\r\nTo fix this, we only use the `__va_copy` macro in scenarios where\r\n`__GNUC__ < 3`.\r\n\r\nThis mirrors the change in musl:\r\nhttps://git.musl-libc.org/cgit/musl/commit/?id=def0af189871a499efdc9bc37438d8b20eb702ab.",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2020-07-31T04:32:08Z",
        "closed_at": "2020-09-17T05:19:32Z",
        "merged_at": null,
        "body": "Seems to be just in the PHP. I don't see these typos anywhere else.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 27,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2020-07-29T18:46:53Z",
        "closed_at": "2020-07-30T19:00:14Z",
        "merged_at": "2020-07-30T19:00:14Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2020-07-29T17:54:40Z",
        "closed_at": "2020-08-20T00:03:37Z",
        "merged_at": "2020-08-20T00:03:37Z",
        "body": "I incorrectly used 2 features of newer versions of CMake:\r\n\r\n1. using `NAME_WLE` for `get_filename_component()` which is supported from CMake 3.14.\r\n2. using character escape `\\c` is regular expression which is supported from CMake 3.13.\r\n\r\nSince these parts of code has created problems for users of CMake functions, I updated this part of code to support previous versions of CMake too.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-07-29T06:59:02Z",
        "closed_at": "2020-08-20T00:01:41Z",
        "merged_at": "2020-08-20T00:01:41Z",
        "body": "We may need the shell environment (potentially augmented with\r\n`--action_env`) to invoke protoc on Windows. If protoc was built with\r\nmingw, it probably needs .dll files in non-default locations that must be\r\nin PATH. Previously with `--compiler=mingw-gcc`,\r\n`bazel build //:gen_well_known_protos_java` would fail on Windows. This\r\nCL fixes the issue.\r\n\r\nAlso we have `default_shell_env` set to True for `ProtoCompile`, this makes\r\nthe behavior consistent.\r\n\r\nSee #2933, and\r\nhttps://github.com/bazelbuild/rules_go/blob/585a27ad0ab5bdd185aa3bd5b0877a778d4777ad/proto/compiler.bzl#L130",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 15063,
        "deletions": 143,
        "changed_files": 17,
        "created_at": "2020-07-28T22:28:54Z",
        "closed_at": "2020-08-08T02:16:56Z",
        "merged_at": null,
        "body": "#7720 ",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-07-24T13:58:20Z",
        "closed_at": "2020-08-10T23:58:26Z",
        "merged_at": "2020-08-10T23:58:26Z",
        "body": "~Blocked behind the release of Codespell v2 and #7751 going in.~",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 136,
        "deletions": 136,
        "changed_files": 94,
        "created_at": "2020-07-24T12:58:33Z",
        "closed_at": "2020-08-10T18:08:26Z",
        "merged_at": "2020-08-10T18:08:26Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-07-24T00:43:19Z",
        "closed_at": "2020-07-24T17:15:39Z",
        "merged_at": "2020-07-24T17:15:38Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 14,
        "deletions": 13,
        "changed_files": 1,
        "created_at": "2020-07-23T19:07:26Z",
        "closed_at": "2022-05-16T18:13:30Z",
        "merged_at": null,
        "body": null,
        "comments": 2
    },
    {
        "merged": true,
        "additions": 375,
        "deletions": 0,
        "changed_files": 9,
        "created_at": "2020-07-21T17:50:20Z",
        "closed_at": "2021-03-16T16:28:06Z",
        "merged_at": "2021-03-16T16:28:06Z",
        "body": "This change adds BUILD files to //benchmarks that allow\r\nusers to consume the .proto files in that directory\r\nto run benchmarks (e.g. for custom generators).",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2020-07-21T02:10:53Z",
        "closed_at": "2020-10-22T21:01:01Z",
        "merged_at": null,
        "body": "https://github.com/protocolbuffers/protobuf/pull/5211 broke old behavior which was merging the dictionaries given to the ParseDict function as the documentation mentions in [here](https://googleapis.dev/python/protobuf/latest/google/protobuf/json_format.html#google.protobuf.json_format.ParseDict):\r\n\r\n> **message** \u2013 A protocol buffer message to merge into. \r\n\r\nHere I tried to reach the desired behavior without breaking the old one.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 172,
        "deletions": 285,
        "changed_files": 9,
        "created_at": "2020-07-20T22:21:36Z",
        "closed_at": "2020-07-21T00:14:51Z",
        "merged_at": "2020-07-21T00:14:51Z",
        "body": "Copied from #7734 \r\n\r\nTemporarily disable encode_decode_test.php.\r\n\r\nIn 4.0.0-rc1, repeated primitive field encoding is changed to packed, which is a bug fix. However, this fails the compatibility test which hard coded old encoding. Will reenable the test after making a release. After the version bump, the compatibility test will use the updated test code.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-07-20T11:56:50Z",
        "closed_at": "2020-07-20T17:09:32Z",
        "merged_at": "2020-07-20T17:09:32Z",
        "body": "timestamp.proto is part of the java lite release but duration is not.\r\nI assume this is accidental.",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 151,
        "deletions": 326,
        "changed_files": 8,
        "created_at": "2020-07-19T17:20:58Z",
        "closed_at": "2020-07-20T23:03:14Z",
        "merged_at": null,
        "body": "This fixes most of PHP's remaining conformance failures.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-07-18T03:13:41Z",
        "closed_at": "2020-07-20T16:02:37Z",
        "merged_at": "2020-07-20T16:02:37Z",
        "body": "",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 32,
        "deletions": 18,
        "changed_files": 16,
        "created_at": "2020-07-17T23:38:39Z",
        "closed_at": "2020-07-21T01:09:02Z",
        "merged_at": "2020-07-21T01:09:02Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 244,
        "deletions": 7,
        "changed_files": 6,
        "created_at": "2020-07-17T17:38:22Z",
        "closed_at": "2020-07-17T19:13:26Z",
        "merged_at": "2020-07-17T19:13:26Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 262,
        "deletions": 43,
        "changed_files": 17,
        "created_at": "2020-07-16T19:29:54Z",
        "closed_at": "2020-07-17T20:49:23Z",
        "merged_at": "2020-07-17T20:49:23Z",
        "body": "This PR adds support for proto3 optional fields to PHP, per the guidelines at https://github.com/protocolbuffers/protobuf/blob/master/docs/implementing_proto3_presence.md\r\n\r\n# New Public APIs:\r\n\r\n- Optional fields get `hasFoo()` and `clearFoo()` methods.\r\n- All oneof fields now have `hasFoo()` methods also.\r\n\r\n# Primary Implementation Changes\r\n\r\n- Optional fields are initialized to `null` instead of their default value.\r\n- `hasFoo()` tests `isset($this->field)`\r\n- `clearFoo()` calls `unset($this->field)`\r\n- C extension implements object handlers to handle `isset()` and `unset()` calls.\r\n- PHP serializer calls `hasFoo()` if present to decide whether to serialize a field.\r\n\r\n# Other Implementation Changes\r\n\r\n- We need to regenerate some well-known types to give oneof fields proper `hasFoo()` methods.\r\n- (Longer term, it seems better if well-known types are always regenerated instead of being checked in with modifications).\r\n- Added Valgrind suppression file to silence warnings coming from PHP itself.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-07-16T18:52:00Z",
        "closed_at": "2020-07-16T19:57:45Z",
        "merged_at": "2020-07-16T19:57:45Z",
        "body": "This test has started failing, and I believe the cause is a change in\r\nclass loading behavior in Java 11. As far as I know, that breaks the\r\ntest logic but there is nothing wrong with the non-test code. This\r\nchange temporarily disables the test so that we can unblock the 4.0\r\nrelease while I work on a more permanent fix.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2020-07-16T12:48:25Z",
        "closed_at": "2021-10-13T19:01:15Z",
        "merged_at": null,
        "body": "fixes https://github.com/protocolbuffers/protobuf/issues/6401",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 13,
        "changed_files": 2,
        "created_at": "2020-07-15T20:31:29Z",
        "closed_at": "2020-07-20T19:09:26Z",
        "merged_at": "2020-07-20T19:09:26Z",
        "body": "This PR adds `std::` qualifications to the unqualified uses of `string` within `src/google/protobuf/compiler/ruby/`.  This doesn't affect compilation because `src/google/protobuf/stubs/common.h` contains `using std::string;`, but this code won't compile in environments that lack that using declaration.\r\n\r\nI tested this PR by removing the using declaration and compiling `:protoc_lib`.  This is the full set of changes needed by this directory to get the library to build.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-07-14T19:14:48Z",
        "closed_at": "2020-07-27T17:42:23Z",
        "merged_at": "2020-07-27T17:42:23Z",
        "body": "I was getting TypeScript errors on the generated protobuf file.\r\n\r\nThese directives to turn off ESLint and TypeScript are just comments. They shouldn't affect anyone who is not using ESLint or TypeScript.\r\n\r\nA similar change was made in the grpc/grpc-web project: https://github.com/grpc/grpc-web/pull/752",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-07-14T13:22:59Z",
        "closed_at": "2021-10-13T19:05:24Z",
        "merged_at": null,
        "body": "In python/ json_format.py, I'm confused about this MessagToDict method, if this is going to convert message into dict, it should obey the type claimed in Message other than str() that integer.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-07-14T11:11:34Z",
        "closed_at": "2021-03-05T23:29:04Z",
        "merged_at": null,
        "body": "",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 244,
        "deletions": 7,
        "changed_files": 6,
        "created_at": "2020-07-14T04:53:56Z",
        "closed_at": "2020-07-14T07:01:06Z",
        "merged_at": "2020-07-14T07:01:06Z",
        "body": "Previous tests didn't spot this as each message was either \"all\r\noptional\" or \"all non-optional\", at which point there isn't a problem.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 22,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2020-07-14T00:40:36Z",
        "closed_at": "2020-07-14T03:54:23Z",
        "merged_at": "2020-07-14T03:54:23Z",
        "body": "-  Always use `python -m {pip | virtualenv}` form of commands.\r\n-  Only upgrade in-place, and never use `--ignore-installed`.\r\n\r\nThese changes ensure that multibuilder won't break the system-installed Python\r\non the Kokoro macOS builder, and won't resolve the ancient system version.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 289,
        "deletions": 402,
        "changed_files": 19,
        "created_at": "2020-07-13T09:00:10Z",
        "closed_at": "2021-10-14T18:33:59Z",
        "merged_at": null,
        "body": "Changes made:\r\n* modify docker setup to use go1.14.4\r\n* add benchmarks/go/go.mod for reproducible builds\r\n* modify benchmarks/Makefile to build protoc-gen-go locally\r\n* modify benchmarks/Makefile to drop the unmaintained gogo/protobuf fork\r\n* add examples/go.mod for reproducible builds\r\n* modify examples/Makefile to build protoc-gen-go locally\r\n* modernize Go source files for the current era\r\n* modify examples/addressbook.proto to have a go_package option\r\n* update documentation to reference the latest Go protobuf module",
        "comments": 18
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2020-07-12T13:17:29Z",
        "closed_at": "2020-10-27T11:01:33Z",
        "merged_at": "2020-10-27T11:01:33Z",
        "body": "The change to test solution for issue: \r\n> Can't call ByteString.CopyFrom(ReadOnlySpan<byte> bytes) on net45 #7700\r\n\r\nFixes https://github.com/protocolbuffers/protobuf/issues/7700",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 72,
        "deletions": 57,
        "changed_files": 33,
        "created_at": "2020-07-11T01:54:28Z",
        "closed_at": "2020-07-11T22:40:18Z",
        "merged_at": "2020-07-11T22:40:18Z",
        "body": "Also edited `update_version.py` to handle the new 4.x major version.\r\n\r\nAlso updated the new PHP extension to put the version in `protobuf.h` like the old extension, so `update_version.py` will continue to work.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3006,
        "deletions": 2331,
        "changed_files": 157,
        "created_at": "2020-07-10T01:27:34Z",
        "closed_at": "2020-08-18T16:29:36Z",
        "merged_at": "2020-08-18T16:29:36Z",
        "body": "**Important:** this integration must be merged, not squashed!",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 27,
        "deletions": 13,
        "changed_files": 1,
        "created_at": "2020-07-08T21:54:44Z",
        "closed_at": "2021-03-05T23:29:09Z",
        "merged_at": null,
        "body": "This creates a tar archive for each binary, the same way that a zip file is created for each binary already.\r\n\r\nTar archives preserve file permissions, which simplifies installation on *nix systems.\r\n\r\nA couple issues arise here:\r\n\r\n * The script name is now inappropriate. I am refraining from renaming it here because I suspect it is probably used in some script external to this repository.\r\n * The *win*.tar.gz releases may be useless, although it might be helpful for cygwin installs?\r\n\r\nAddresses the following issues:\r\n * #2397",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2618,
        "deletions": 35530,
        "changed_files": 44,
        "created_at": "2020-07-08T21:32:01Z",
        "closed_at": "2020-07-09T18:06:25Z",
        "merged_at": "2020-07-09T18:06:25Z",
        "body": "Before this PR, the two extensions were checked in side-by-side. This PR removes the old one in favor of the new one.\r\n\r\nThis fixes many conformance failures. There are a handful of failures left; I think nearly all of them will be fixed by https://github.com/protocolbuffers/upb/pull/303.\r\n\r\nThe new extension does not support PHP 5. As a consequence the next version of protobuf will drop C extension support for PHP 5.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 95,
        "deletions": 87,
        "changed_files": 3,
        "created_at": "2020-07-08T15:27:41Z",
        "closed_at": "2020-07-20T23:51:32Z",
        "merged_at": "2020-07-20T23:51:31Z",
        "body": "Removing language-specific targets from the top-level BUILD file\r\nwill allow users to keep their workspaces smaller and easier to\r\nmaintain by not depending on language rules they don't need.\r\n\r\nThe top-level targets are kept as an alias, so this is not a breaking\r\nchange. There is currently no intention to deprecate and remove\r\nthe top-level targets.\r\n\r\nSimilar work was done for Java in #7190.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 2604,
        "deletions": 35362,
        "changed_files": 41,
        "created_at": "2020-07-07T21:08:51Z",
        "closed_at": "2021-10-13T00:45:33Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-07-07T20:18:05Z",
        "closed_at": "2020-09-08T14:12:02Z",
        "merged_at": null,
        "body": "#7629 for `3.12.x`",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2020-07-07T19:45:08Z",
        "closed_at": "2021-01-28T00:59:38Z",
        "merged_at": null,
        "body": "",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-07-06T14:48:05Z",
        "closed_at": "2021-03-04T21:22:48Z",
        "merged_at": null,
        "body": "On some targets, the assertion fails without actually informing why this\r\nis the case:\r\n\r\n   .../protobuf-3.12.2/src/google/protobuf/arena.h:531:30: error: static\r\n   assertion failed: T is overaligned, see b/151247138\r\n\r\nRather than finding out what \"b/151247138\" is or where it fails to guard\r\nor change the assertion test, just remove it to see the full test suite\r\nsucceed.\r\n\r\nBug: https://bugs.gentoo.org/731002\r\nCloses: https://github.com/protocolbuffers/protobuf/issues/7682\r\nSigned-off-by: Jeroen Roovers <jer@gentoo.org>",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 42,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2020-07-03T14:31:15Z",
        "closed_at": "2022-03-14T17:58:26Z",
        "merged_at": null,
        "body": "Hello,\r\n\r\nI created an additional Method overload so other IEnumerable<KeyValuePair> collections can be added. This is especially required as e.g. IReadOnlyDictionary is otherwise not possible to Add.",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 48,
        "deletions": 3,
        "changed_files": 5,
        "created_at": "2020-07-02T22:23:18Z",
        "closed_at": "2022-02-10T17:41:26Z",
        "merged_at": null,
        "body": "Following #7629 this PR introduces test coverage for deprecated message classes.\r\n\r\nThis wasn't included in #7629 as it introduces a new dev dependency on `symfony/phpunit-bridge`, which might not be desirable.\r\n\r\nIf you'd prefer not to test deprecations like this, I'll close this PR.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 57,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2020-07-01T23:45:24Z",
        "closed_at": "2021-10-13T00:44:28Z",
        "merged_at": null,
        "body": "The old extension checks UTF-8 before setting a string in a message, array, or map. This PR brings the same behavior to the new extension.\r\n\r\nWe are still missing a UTF-8 check for string fields at parse time. That needs to go into upb itself.\r\n\r\nThe UTF-8 checking code itself is copy/pasted from the old extension. I have not analyzed or verified it.\r\n\r\nI replicated the behavior of the old extension which raises a PHP error instead of an exception when this validation fails. Unfortunately there does not appear to be any version-independent way of writing a unit test that checks for a PHP error in PHPUnit. This PR includes commented-out code that works for some versions of PHP/PHPUnit but not others.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-07-01T14:02:30Z",
        "closed_at": "2022-07-14T22:16:50Z",
        "merged_at": null,
        "body": "The deprecated option was only missing on enums",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-06-30T18:15:29Z",
        "closed_at": "2021-03-05T23:28:21Z",
        "merged_at": null,
        "body": "Monkey C protobuf compiler plugin + protobuf runtime barrel",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 9,
        "changed_files": 2,
        "created_at": "2020-06-30T12:58:31Z",
        "closed_at": "2020-07-01T05:49:21Z",
        "merged_at": "2020-07-01T05:49:21Z",
        "body": "the 3.0 SDK is no longer supported and dotnet SDK 3.1 is the LTS version.\r\n\r\nThis is a prerequsite for https://github.com/protocolbuffers/protobuf/pull/7658",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 27,
        "deletions": 13,
        "changed_files": 1,
        "created_at": "2020-06-30T03:16:47Z",
        "closed_at": "2020-07-08T21:56:07Z",
        "merged_at": null,
        "body": "This creates a tar archive for each binary, the same way that a zip file is created for each binary already.\r\n\r\nTar archives preserve file permissions, which simplifies installation on *nix systems.\r\n\r\nA couple issues arise here:\r\n * The script name is now inappropriate. I am refraining from renaming it here because I suspect it is probably used in some script external to this repository.\r\n * The `*win*.tar.gz` releases may be useless, although it might be helpful for cygwin installs?\r\n\r\nAddresses the following issues:\r\n * #2397",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 310,
        "deletions": 58,
        "changed_files": 8,
        "created_at": "2020-06-30T02:35:16Z",
        "closed_at": "2021-10-14T19:37:27Z",
        "merged_at": null,
        "body": "Cherry picked from https://github.com/protocolbuffers/protobuf/pull/7576#issuecomment-647272336\r\n\r\n\r\nBefore:\r\n```\r\n|                                               Method | BytesToWrite | encodedSize |      Mean |     Error |    StdDev | Gen 0/1k Op | Gen 1/1k Op | Gen 2/1k Op | Allocated Memory/Op |\r\n|----------------------------------------------------- |------------- |------------ |----------:|----------:|----------:|------------:|------------:|------------:|--------------------:|\r\n| WriteString_WriteContextBufferWriter_LimitBufferSize |        10080 |           1 | 213.53 us | 1.9358 us | 1.8107 us |           - |           - |           - |                   - |\r\n| WriteString_WriteContextBufferWriter_LimitBufferSize |        10080 |           4 |  73.99 us | 0.7287 us | 0.6817 us |           - |           - |           - |                   - |\r\n| WriteString_WriteContextBufferWriter_LimitBufferSize |        10080 |          10 |  52.32 us | 0.4014 us | 0.3558 us |      6.3477 |           - |           - |              5040 B |\r\n| WriteString_WriteContextBufferWriter_LimitBufferSize |        10080 |         105 |  23.72 us | 0.2815 us | 0.2496 us |     15.5945 |           - |           - |             12288 B |\r\n| WriteString_WriteContextBufferWriter_LimitBufferSize |        10080 |       10080 |  10.72 us | 0.2083 us | 0.1949 us |     12.8174 |           - |           - |             10104 B |\r\n```\r\nAfter (not caching Encoder):\r\n```\r\n|                                               Method | BytesToWrite | encodedSize |      Mean |     Error |    StdDev | Gen 0/1k Op | Gen 1/1k Op | Gen 2/1k Op | Allocated Memory/Op |\r\n|----------------------------------------------------- |------------- |------------ |----------:|----------:|----------:|------------:|------------:|------------:|--------------------:|\r\n| WriteString_WriteContextBufferWriter_LimitBufferSize |        10080 |           1 | 144.75 us | 1.6373 us | 1.5316 us |           - |           - |           - |                   - |\r\n| WriteString_WriteContextBufferWriter_LimitBufferSize |        10080 |           4 |  54.72 us | 0.5721 us | 0.5351 us |           - |           - |           - |                   - |\r\n| WriteString_WriteContextBufferWriter_LimitBufferSize |        10080 |          10 |  30.17 us | 0.1616 us | 0.1433 us |           - |           - |           - |                   - |\r\n| WriteString_WriteContextBufferWriter_LimitBufferSize |        10080 |         105 |  20.02 us | 0.1819 us | 0.1612 us |      6.8054 |           - |           - |              5376 B |\r\n| WriteString_WriteContextBufferWriter_LimitBufferSize |        10080 |       10080 |  13.84 us | 0.1661 us | 0.1554 us |      0.0610 |           - |           - |                56 B |\r\n```\r\nAfter (caching Encoder):\r\n```\r\n|                                               Method | BytesToWrite | encodedSize |      Mean |     Error |    StdDev | Gen 0/1k Op | Gen 1/1k Op | Gen 2/1k Op | Allocated Memory/Op |\r\n|----------------------------------------------------- |------------- |------------ |----------:|----------:|----------:|------------:|------------:|------------:|--------------------:|\r\n| WriteString_WriteContextBufferWriter_LimitBufferSize |        10080 |           1 | 146.20 us | 2.3256 us | 2.1753 us |           - |           - |           - |                   - |\r\n| WriteString_WriteContextBufferWriter_LimitBufferSize |        10080 |           4 |  53.98 us | 0.3705 us | 0.3466 us |           - |           - |           - |                   - |\r\n| WriteString_WriteContextBufferWriter_LimitBufferSize |        10080 |          10 |  30.12 us | 0.1255 us | 0.1113 us |           - |           - |           - |                   - |\r\n| WriteString_WriteContextBufferWriter_LimitBufferSize |        10080 |         105 |  19.39 us | 0.4198 us | 0.4666 us |      0.0610 |           - |           - |                56 B |\r\n| WriteString_WriteContextBufferWriter_LimitBufferSize |        10080 |       10080 |  13.60 us | 0.0412 us | 0.0344 us |      0.0610 |           - |           - |                56 B |\r\n```",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 27,
        "deletions": 13,
        "changed_files": 1,
        "created_at": "2020-06-29T21:12:49Z",
        "closed_at": "2020-06-30T03:14:40Z",
        "merged_at": null,
        "body": "This creates a tar archive for each binary, the same way that a zip file is created for each binary already.\r\n\r\nTar archives preserve file permissions, which simplifies installation on *nix systems.\r\n\r\nA couple issues arise here:\r\n * The script name is now inappropriate. I am refraining from renaming it here because I suspect it is probably used in some script external to this repository.\r\n * The `*win*.tar.gz` releases may be useless, although `cygwin` users may be able to use them?\r\n\r\nAddresses the following issue https://github.com/protocolbuffers/protobuf/issues/2397",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-06-29T16:16:16Z",
        "closed_at": "2020-06-29T17:31:21Z",
        "merged_at": "2020-06-29T17:31:21Z",
        "body": "This fixes the user issue: https://github.com/protocolbuffers/protobuf/issues/7611#issuecomment-647025031",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 67,
        "deletions": 23,
        "changed_files": 3,
        "created_at": "2020-06-29T07:57:57Z",
        "closed_at": "2020-07-01T07:02:08Z",
        "merged_at": "2020-07-01T07:02:07Z",
        "body": "- target netcoreapp3.1 (the newest LTS of .NET core)\r\n- add a few more useful write benchmarks\r\n- use `BinaryPrimitives.WriteUInt64LittleEndian` for writing fixed64 values as starting from .NET Core 3.x, this is much faster than the current workaround.\r\n\r\nChanges are mostly taken from https://github.com/JamesNK/protobuf/commit/337780c0e098185d4df76d498c8f435e105f8a56 (as recommended here https://github.com/protocolbuffers/protobuf/pull/7576#issuecomment-647069227 for more context). Thanks @JamesNK  for the improvements!\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-06-28T09:33:40Z",
        "closed_at": "2020-07-01T23:46:15Z",
        "merged_at": "2020-07-01T23:46:15Z",
        "body": "I found follow description at repository [golang/protobuf](https://github.com/golang/protobuf):\r\n\r\n```bash\r\nIt has been superseded by the google.golang.org/protobuf module, \r\n\r\nwhich contains an updated and simplified API, support for protobuf reflection, and many other improvements. We recommend \r\n\r\nthat new code use the google.golang.org/protobuf module.\r\n```\r\n\r\nSo I think we can replace the recommended runtime with [protocolbuffers/protobuf-go](https://github.com/protocolbuffers/protobuf-go) for go.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2020-06-26T17:07:32Z",
        "closed_at": "2020-07-01T20:46:51Z",
        "merged_at": "2020-07-01T20:46:51Z",
        "body": "This prepares protobuf for a future release of Bazel which will make\r\n`ProtoInfo` mandatory for `proto_lang_toolchain.blacklisted_protos`.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 28,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2020-06-24T20:49:37Z",
        "closed_at": "2020-11-25T16:47:37Z",
        "merged_at": null,
        "body": "FieldOptions already has a enum for specifying how numbers are serialized\r\nover the wire - this just hooks up the JSON printer to look at this value.\r\n\r\nThis is both backwards compatible and parsing already supports reading longs\r\nas strings or numbers.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 453,
        "deletions": 70,
        "changed_files": 7,
        "created_at": "2020-06-24T04:35:23Z",
        "closed_at": "2020-11-18T18:26:43Z",
        "merged_at": "2020-11-18T18:26:42Z",
        "body": "Fixes https://github.com/protocolbuffers/protobuf/issues/4206\r\n\r\nChange `ByteString` to use `ReadOnlyMemory<byte>` field, and provide overload that allows `ByteString` to be created without allocating and copying memory.\r\n\r\nBefore:\r\n\r\n```cs\r\nvar array = new byte[1024 * 1024]; // Large allocation\r\nLoadData(array);\r\nvar payload = ByteString.FromBytes(array); // Large allocation and copy\r\nvar response = new MyResponse { Payload = payload };\r\nawait responseStream.WriteAsync(response);\r\n```\r\n\r\nAfter:\r\n\r\n```cs\r\nvar array = ArrayPool<byte>.Shared.Rent(minimumLength: 1024 * 1024); // Note the pool can return a larger array\r\ntry\r\n{\r\n    LoadData(array);\r\n    var payload = UnsafeByteOperations.UnsafeWrap(array.AsMemory(0, 1024 * 1024));\r\n    var response = new MyResponse { Payload = payload };\r\n    await responseStream.WriteAsync(response);\r\n}\r\nfinally\r\n{\r\n    ArrayPool<byte>.Shared.Return(array);\r\n}\r\n```\r\n\r\n~I used `ByteString.Unsafe.FromBytes(bytes)` because it was already there. It was internal and never used. Happy to get rid of the nested class and change to `ByteString.UnsafeFromBytes(bytes)`. Unsafe prefix is the standard in .NET runtime, e.g. https://source.dot.net/#System.Private.CoreLib/Assembly.cs,8536a7569220f81f,references~\r\n\r\nI went ahead and changed it to `UnsafeByteOperations.UnsafeWrap(bytes)`.\r\n\r\nI noticed `GOOGLE_PROTOBUF_SUPPORT_SYSTEM_MEMORY` is now always true. `#ifdefs` can be removed.\r\n\r\n@jtattermusch @jskeet ",
        "comments": 24
    },
    {
        "merged": true,
        "additions": 283,
        "deletions": 81,
        "changed_files": 8,
        "created_at": "2020-06-23T08:41:56Z",
        "closed_at": "2020-07-07T08:44:08Z",
        "merged_at": "2020-07-07T08:44:08Z",
        "body": "Before\r\n```\r\n|                                    Method | BytesToParse | encodedSize |       Mean |     Error |    StdDev | Gen 0/1k Op | Gen 1/1k Op | Gen 2/1k Op | Allocated Memory/Op |\r\n|------------------------------------------ |------------- |------------ |-----------:|----------:|----------:|------------:|------------:|------------:|--------------------:|\r\n|              ParseString_CodedInputStream |        10080 |           1 |  64.871 us | 0.2090 us | 0.1745 us |      0.1221 |           - |           - |               176 B |\r\n|                  ParseString_ParseContext |        10080 |           1 |  66.493 us | 0.8300 us | 0.6931 us |           - |           - |           - |                   - |\r\n| ParseString_ParseContext_MultipleSegments |        10080 |           1 |  80.660 us | 1.5452 us | 1.7175 us |           - |           - |           - |                   - |\r\n|              ParseString_CodedInputStream |        10080 |           4 |  80.335 us | 1.2552 us | 1.1127 us |    102.6611 |           - |           - |             80816 B |\r\n|                  ParseString_ParseContext |        10080 |           4 | 106.574 us | 0.9521 us | 0.8906 us |    102.4170 |           - |           - |             80640 B |\r\n| ParseString_ParseContext_MultipleSegments |        10080 |           4 | 110.729 us | 2.6566 us | 2.4850 us |    102.4170 |           - |           - |             80640 B |\r\n|              ParseString_CodedInputStream |        10080 |          10 |  42.858 us | 0.6439 us | 0.6023 us |     61.7065 |           - |           - |             48560 B |\r\n|                  ParseString_ParseContext |        10080 |          10 |  54.975 us | 0.1663 us | 0.1474 us |     61.4624 |           - |           - |             48384 B |\r\n| ParseString_ParseContext_MultipleSegments |        10080 |          10 |  70.892 us | 0.3835 us | 0.3399 us |     76.7822 |           - |           - |             60480 B |\r\n|              ParseString_CodedInputStream |        10080 |         105 |  10.244 us | 0.0523 us | 0.0490 us |     29.5105 |           - |           - |             23216 B |\r\n|                  ParseString_ParseContext |        10080 |         105 |  10.740 us | 0.1339 us | 0.1187 us |     29.2816 |           - |           - |             23040 B |\r\n| ParseString_ParseContext_MultipleSegments |        10080 |         105 |  29.147 us | 0.1317 us | 0.1100 us |     51.7273 |           - |           - |             40704 B |\r\n|              ParseString_CodedInputStream |        10080 |       10080 |   6.136 us | 0.1177 us | 0.1309 us |     25.6348 |           - |           - |             20360 B |\r\n|                  ParseString_ParseContext |        10080 |       10080 |   5.732 us | 0.0272 us | 0.0241 us |     25.6348 |           - |           - |             20184 B |\r\n| ParseString_ParseContext_MultipleSegments |        10080 |       10080 |  15.753 us | 0.1460 us | 0.1295 us |     38.4521 |           - |           - |             30344 B |\r\n```\r\n\r\nAfter\r\n```\r\n|                                    Method | BytesToParse | encodedSize |       Mean |     Error |    StdDev | Gen 0/1k Op | Gen 1/1k Op | Gen 2/1k Op | Allocated Memory/Op |\r\n|------------------------------------------ |------------- |------------ |-----------:|----------:|----------:|------------:|------------:|------------:|--------------------:|\r\n|              ParseString_CodedInputStream |        10080 |           1 |  65.621 us | 0.3992 us | 0.3539 us |      0.1221 |           - |           - |               184 B |\r\n|                  ParseString_ParseContext |        10080 |           1 |  65.119 us | 1.1548 us | 1.0237 us |           - |           - |           - |                   - |\r\n| ParseString_ParseContext_MultipleSegments |        10080 |           1 |  76.722 us | 0.6850 us | 0.6073 us |           - |           - |           - |                   - |\r\n|              ParseString_CodedInputStream |        10080 |           4 |  84.192 us | 0.7777 us | 0.7274 us |    102.6611 |           - |           - |             80824 B |\r\n|                  ParseString_ParseContext |        10080 |           4 | 106.247 us | 1.1588 us | 1.0840 us |    102.4170 |           - |           - |             80640 B |\r\n| ParseString_ParseContext_MultipleSegments |        10080 |           4 | 109.838 us | 0.4112 us | 0.3645 us |    102.4170 |           - |           - |             80640 B |\r\n|              ParseString_CodedInputStream |        10080 |          10 |  43.997 us | 0.6887 us | 0.6105 us |     61.7065 |           - |           - |             48568 B |\r\n|                  ParseString_ParseContext |        10080 |          10 |  55.625 us | 0.3236 us | 0.2868 us |     61.4624 |           - |           - |             48384 B |\r\n| ParseString_ParseContext_MultipleSegments |        10080 |          10 |  78.260 us | 1.0150 us | 0.8476 us |     61.5234 |           - |           - |             48440 B |\r\n|              ParseString_CodedInputStream |        10080 |         105 |  10.687 us | 0.2087 us | 0.2786 us |     29.5258 |           - |           - |             23224 B |\r\n|                  ParseString_ParseContext |        10080 |         105 |  10.966 us | 0.2136 us | 0.1894 us |     29.2816 |           - |           - |             23040 B |\r\n| ParseString_ParseContext_MultipleSegments |        10080 |         105 |  35.011 us | 0.4347 us | 0.4066 us |     29.3579 |           - |           - |             23096 B |\r\n|              ParseString_CodedInputStream |        10080 |       10080 |   6.284 us | 0.1229 us | 0.1463 us |     25.6348 |           - |           - |             20368 B |\r\n|                  ParseString_ParseContext |        10080 |       10080 |   5.795 us | 0.0716 us | 0.0670 us |     25.6348 |           - |           - |             20184 B |\r\n| ParseString_ParseContext_MultipleSegments |        10080 |       10080 |  19.453 us | 0.2476 us | 0.2316 us |     25.6348 |           - |           - |             20240 B |\r\n```",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2020-06-22T13:30:19Z",
        "closed_at": "2021-10-14T19:43:56Z",
        "merged_at": "2021-10-14T19:43:56Z",
        "body": "Saw in https://github.com/protocolbuffers/protobuf/issues/4120 that this small change was on the cards. It gives a clean way to go from C# property names to ProtoBuf snake_case names.",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2020-06-18T13:57:20Z",
        "closed_at": "2020-07-06T23:41:22Z",
        "merged_at": "2020-07-06T23:41:22Z",
        "body": "There is no need to use ADL here and using it breaks the cases when string iterator is a raw pointer.",
        "comments": 12
    },
    {
        "merged": false,
        "additions": 1600,
        "deletions": 11,
        "changed_files": 6,
        "created_at": "2020-06-15T20:10:01Z",
        "closed_at": "2021-10-13T01:50:20Z",
        "merged_at": null,
        "body": "[gRPC-Web-Ts client](https://github.com/behunin/grpc-web-ts)\r\n\r\nGenerator Options are as follows:\r\n\r\n  Name: this is used with the A~1 ratio option, it is the file name used for the output file.\r\n\r\nexample - protoc -I=$SRC_DIR \u2013ts_out=name=YourNameSpaceHere:$OUT_DIR test.proto test1.proto test2.proto\r\n\r\n  Ratio:  input to output ratio \u2013 if not used the default ratio is one output to each input file.\r\n   ```\r\n S~1 \u2013 print one file for each service definition.\r\n A~1 \u2013 print one file from all input files.\r\n```\r\n\r\nexample - protoc -I=$SRC_DIR --ts_out=ratio=S~1:$OUT_DIR test.proto\r\n\r\n  Deps: currently only used with the default one to one output.\r\n    Print \u2013 prints each dependency in its own file. Then prints import statements for each dependency.\r\n    Import \u2013 just prints the import statements for each dependency.\r\n    Include \u2013 prints dependencies in the output file.\r\n\r\nexample - protoc -I=$SRC_DIR --ts_out=deps=print:$OUT_DIR test.proto\r\n\r\n  Services: print the generic service definitions or not \u2013 can be used with any output ratio.\r\n\r\nexample - protoc -I=$SRC_DIR --ts_out=services:$OUT_DIR test.proto\r\n\r\nI updated cmake to 3.17.3 and CXX flags to c++2017 so that I could use map::insert_or_assign\r\nI am guessing that is a deal breaker, but hopefully that can be dealt with in a separate PR\r\n    ",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 431,
        "deletions": 238,
        "changed_files": 43,
        "created_at": "2020-06-15T19:21:47Z",
        "closed_at": "2020-06-15T20:40:46Z",
        "merged_at": "2020-06-15T20:40:46Z",
        "body": "**Important:** this integration must be merged, not squashed!",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-06-15T18:00:38Z",
        "closed_at": "2020-07-07T20:37:47Z",
        "merged_at": "2020-07-07T20:37:47Z",
        "body": "### Fixed\r\n- `Google\\Protobuf\\Internal\\Descriptor::buildFromProto()` now passes arguments to `Google\\Protobuf\\Internal\\GPBUtil::getFullClassName()` in the correct order, preventing deprecation notices for legacy classes.\r\n\r\n#### Notes:\r\n- Issue was discovered due to unexpected deprecation notices for legacy classes.\r\n- #7447 is a similar issue, but unrelated to this PR.\r\n- [`Google\\Protobuf\\Internal\\EnumDescriptor::buildFromProto()`](https://github.com/protocolbuffers/protobuf/blob/master/php/src/Google/Protobuf/Internal/EnumDescriptor.php#L97) already passes arguments in the correct order.\r\n- Introduced in #4741",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-06-13T10:56:53Z",
        "closed_at": "2020-06-19T17:38:59Z",
        "merged_at": "2020-06-19T17:38:59Z",
        "body": "",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-06-12T21:16:15Z",
        "closed_at": "2020-06-19T17:37:30Z",
        "merged_at": "2020-06-19T17:37:29Z",
        "body": "",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-06-11T17:51:50Z",
        "closed_at": "2020-09-17T18:40:28Z",
        "merged_at": null,
        "body": "And updated the link to github repository",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-06-11T15:39:53Z",
        "closed_at": "2020-06-19T17:42:32Z",
        "merged_at": "2020-06-19T17:42:32Z",
        "body": "This adds ability for Emacs imenu to index types defined in a protobuf file. For example, [addressbook.proto](https://github.com/yuezhu/protobuf/blob/de6cde0c92f8f7da47d62dcfb39258fe2bf55c27/examples/addressbook.proto) in the example directory would have these imenu items:\r\n\r\n![image](https://user-images.githubusercontent.com/1224535/84423823-12d88500-abed-11ea-9d19-0dda66a2f4ee.png)\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 16922,
        "deletions": 108,
        "changed_files": 28,
        "created_at": "2020-06-11T03:35:56Z",
        "closed_at": "2020-06-25T19:21:02Z",
        "merged_at": "2020-06-25T19:21:02Z",
        "body": "This is a rewrite of the C extension for PHP. A bit of code is reused in `names.c`/`names.h`, but most of the rest of the code is new.\r\n\r\nHere is a summary of the design (a more extensive design doc is forthcoming):\r\n\r\n- All protobuf data is stored exclusively in the upb layer, through the types `upb_msg`, `upb_array`, and `upb_map`.\r\n- Each upb object (`upb_msg`, `upb_array`, or `upb_map`) is owned by a `upb_arena`. When the user creates a link between objects in different arenas, we fuse the arenas together so they have the same lifetime.\r\n- All encode/decode operations to binary/JSON are implemented exclusively in upb, without touching any PHP objects.\r\n- PHP wrapper objects for message/map/arena are created on-demand.\r\n- Wrapper objects are cached in a global map so that repeatedly accessing the same message will consistently return the same wrapper object. This map is weak so wrapper objects can be deleted when they are no longer used (which will release the reference on the arena object).\r\n- PHP code for well-known types (`Any`, `Struct`, etc) is bundled inside the extension using `make-preload.py` and registered via autoload. This means we don't have to implement these types again in C.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2020-06-10T20:59:31Z",
        "closed_at": "2021-02-17T18:47:38Z",
        "merged_at": "2021-02-17T18:47:38Z",
        "body": "PHP does not have a long type, and IDEs don't necessarily understand that long is the same as integer. \r\nE.g. PhpStorm will give an error like this: `Expected parameter of type '\\Google\\Protobuf\\Internal\\long', 'int' provided`",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 74,
        "deletions": 73,
        "changed_files": 9,
        "created_at": "2020-06-05T23:54:20Z",
        "closed_at": "2020-06-09T22:40:30Z",
        "merged_at": "2020-06-09T22:40:30Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 64,
        "deletions": 14,
        "changed_files": 10,
        "created_at": "2020-06-05T20:36:43Z",
        "closed_at": "2020-06-09T13:57:18Z",
        "merged_at": "2020-06-09T13:57:18Z",
        "body": "- Remove the `brew install`; the kokoro image already has it, just\r\n  update/upgrade instead.\r\n- Remove `prune`, logs had:\r\n    \"\"\"\r\n    Error: Unknown command: prune\r\n    \"\"\"\r\n- Remove `uninstall`, logs had:\r\n    \"\"\"\r\n    Error: Refusing to uninstall /usr/local/Cellar/cmake/3.16.4 and /usr/local/Cellar/icu4c/64.2\r\n    because they are required by ceres-solver, ffmpeg, harfbuzz, libass and opencv, which are currently installed.\r\n    You can override this and force removal with:\r\n      brew uninstall --ignore-dependencies node icu4c cmake wget\r\n    \"\"\"\r\n- Skip installing some things since they are already in the base image, logs\r\n  had:\r\n    \"\"\"\r\n    Warning: gflags 2.2.2 is already installed and up-to-date\r\n    To reinstall 2.2.2, run `brew reinstall gflags`\r\n    Warning: openssl@1.1 1.1.1g is already installed and up-to-date\r\n    To reinstall 1.1.1g, run `brew reinstall openssl@1.1`\r\n    Warning: pcre 8.44 is already installed and up-to-date\r\n    To reinstall 8.44, run `brew reinstall pcre`\r\n    \"\"\"\r\n- Don't install gpg gpg2 as gnupg is already installed, also use gpg instead of\r\n  gpg2 for commands (and update the commands), logs had:\r\n    \"\"\"\r\n    kokoro/macos/prepare_build_macos_rc: line 44: gpg2: command not found\r\n    kokoro/macos/prepare_build_macos_rc: line 45: gpg2: command not found\r\n    \"\"\"\r\n- Add env guards to control all the option installs and only request them be\r\n  installed in the cases that need it.  This avoids having to install/update\r\n  the things like ruby when some other tool only needed in some configs is\r\n  install differently and could have conflicts.\r\n- Switch to brew for cocoapods to avoid compat issues on the supporting\r\n  libraries.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 502,
        "deletions": 34,
        "changed_files": 7,
        "created_at": "2020-06-05T13:51:42Z",
        "closed_at": "2020-06-29T08:30:21Z",
        "merged_at": "2020-06-29T08:30:21Z",
        "body": "The NullValue enum is typically used as part of the Value well-known type, but can be used elsewhere. In previous code, a NullValue field (other than in Value) would result in a JSON value of the string \"NULL_VALUE\"; it should instead be the null literal.\r\nWhen parsing, we still accept \"NULL_VALUE\" as a valid value for NullValue - this new code being unable to parse old data, and comes for free anyway.",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 33,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2020-06-03T15:11:17Z",
        "closed_at": "2020-06-08T05:56:51Z",
        "merged_at": "2020-06-08T05:56:50Z",
        "body": "the `.Span` and `.Memory` properties weren't properly annotated as `[SecuritySafeCritical]`.\r\nAlso adding tests to verify the fix.\r\n\r\nFixes #7139",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 295,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-06-03T06:25:15Z",
        "closed_at": "2022-02-11T20:14:19Z",
        "merged_at": null,
        "body": "Currently, the Ruby implementation generates classes using reflection/metaprogramming from descriptors. Although this is idiomatic in Ruby, it is also helpful to have class declarations for better IDE support, such as completion.\r\n\r\nThis PR modifies the Ruby generator to generate the following code snippets:\r\n\r\n```ruby\r\n# for documentation purpose\r\nif false\r\n  class MyMessage\r\n    # ...\r\n  end\r\n  # ...\r\nend\r\n```\r\n\r\nThe class declarations can also serve the following purpose @haberman mentioned in #7381:\r\n\r\n> If the generated code simply embedded a binary descriptor, we would have perfect fidelity and we would never have to fix the DSL again. But we'd give up the readability of the DSL. Perhaps the .proto file could be embedded in comments?",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 216,
        "deletions": 131,
        "changed_files": 5,
        "created_at": "2020-06-03T05:03:22Z",
        "closed_at": "2020-06-05T23:39:03Z",
        "merged_at": "2020-06-05T23:39:02Z",
        "body": "Migrated from cl/303184408. \"make check\" passes. Fixes Issue #7591.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 80,
        "deletions": 41,
        "changed_files": 35,
        "created_at": "2020-06-02T20:54:02Z",
        "closed_at": "2020-06-02T22:12:48Z",
        "merged_at": "2020-06-02T22:12:48Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 46,
        "deletions": 89,
        "changed_files": 6,
        "created_at": "2020-06-02T19:27:25Z",
        "closed_at": "2021-02-23T01:38:24Z",
        "merged_at": null,
        "body": "Fixes #6045 ",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2020-06-02T05:38:50Z",
        "closed_at": "2020-06-03T07:12:52Z",
        "merged_at": "2020-06-03T07:12:52Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 387,
        "deletions": 2172,
        "changed_files": 43,
        "created_at": "2020-06-02T00:02:52Z",
        "closed_at": "2020-06-02T01:42:08Z",
        "merged_at": "2020-06-02T01:42:08Z",
        "body": "**Important:** this integration must be merged, not squashed!",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-06-01T11:52:51Z",
        "closed_at": "2021-10-13T23:14:49Z",
        "merged_at": null,
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 54,
        "deletions": 35,
        "changed_files": 33,
        "created_at": "2020-06-01T08:17:53Z",
        "closed_at": "2020-06-01T20:36:51Z",
        "merged_at": "2020-06-01T20:36:50Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-05-30T19:50:54Z",
        "closed_at": "2020-06-08T18:12:52Z",
        "merged_at": "2020-06-08T18:12:52Z",
        "body": "Added Embedded Proto as a new option in the third_party.md file.",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 11022,
        "deletions": 628,
        "changed_files": 80,
        "created_at": "2020-05-29T12:30:51Z",
        "closed_at": "2020-06-29T07:26:26Z",
        "merged_at": "2020-06-29T07:26:26Z",
        "body": "Span-based parsing has been added by https://github.com/protocolbuffers/protobuf/pull/7351 , this PR adds the serialization counterpart, which allows serialization to `IBufferWriter` (which is much more GC friendly).\r\n\r\nBased on https://github.com/protocolbuffers/protobuf/pull/7490\r\n\r\nUpdate 2020-06-29:\r\nThe new benchmarks (as of commit 4f0afc7) are here: https://gist.github.com/jtattermusch/c9e5389a398f7c79710a9bf12aee215f\r\nFor both writing primitives and writing messages the performance is comparable (there are some significant improvement and some slight regressions) to the original state, which seems good enough (as this PR offers an API to serialize directly into a Span and/or to IBufferWriter, which are modern APIs allowing for much better GC efficiency).\r\n",
        "comments": 21
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2020-05-29T12:06:10Z",
        "closed_at": "2021-10-13T01:49:05Z",
        "merged_at": null,
        "body": "Added the capability for the generated cpp code to include the header file that define the export symbol. See this related google group post for reference: https://groups.google.com/forum/#!topic/protobuf/PDR1bqRazts\r\n\r\nAlso added #GOOGLE_PROTOBUF_NO_FINAL to generate cpp class that are not final. In certain controlled cases it is wanted to derive classes from generated protobuf classes to add system specific logic.",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2020-05-28T15:29:10Z",
        "closed_at": "2020-06-22T23:45:05Z",
        "merged_at": "2020-06-22T23:45:04Z",
        "body": "Fix: [5858](https://github.com/protocolbuffers/protobuf/issues/5858)\r\nLanguage: C++",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 14,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2020-05-28T09:32:43Z",
        "closed_at": "2020-05-28T15:00:33Z",
        "merged_at": null,
        "body": "Fix:[5858](https://github.com/protocolbuffers/protobuf/issues/5858)\r\nLanguage: C++",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 8,
        "changed_files": 2,
        "created_at": "2020-05-27T18:06:56Z",
        "closed_at": "2022-02-18T19:49:43Z",
        "merged_at": null,
        "body": "This feature add a flag to protoc for prevent the append of List or Map at the end of the proto fieldName for the javascript generated file.\r\n\r\nExample of use:\r\n\r\n``` Proto\r\nsyntax = \"proto3\";\r\n\r\npackage proto;\r\n\r\nservice TestService {\r\n  rpc GetTest(TestRequest) returns (TestResponse) {}\r\n}\r\n\r\nmessage Test {\r\n  string a = 1;\r\n  string b = 2;\r\n}\r\n\r\nmessage TestRequest {\r\n  string a = 1;\r\n  string b = 2;\r\n}\r\n\r\nmessage TestResponse {\r\n  repeated Test data = 1;\r\n  Test other_data = 2;\r\n}\r\n```\r\n\r\n```\r\nprotoc \\\r\n        --js_out=\"mantain_proto_fieldnames,import_style=commonjs,binary:.\" \\\r\n        test.proto\r\n```\r\n\r\nExpected output:\r\n```\r\n...\r\nproto.proto.TestResponse.toObject = function(includeInstance, msg) {\r\n  var f, obj = {\r\n    data: jspb.Message.toObjectList(msg.getData(),\r\n    proto.proto.Test.toObject, includeInstance),\r\n    otherData: (f = msg.getOtherData()) && proto.proto.Test.toObject(includeInstance, f)\r\n  };\r\n\r\n  if (includeInstance) {\r\n    obj.$jspbMessageInstance = msg;\r\n  }\r\n  return obj;\r\n};\r\n...\r\n}\r\n```\r\n\r\nWithout the flag:\r\n```\r\nprotoc \\\r\n        --js_out=\"import_style=commonjs,binary:.\" \\\r\n        test.proto\r\n```\r\n\r\nExpected output:\r\n```\r\nproto.proto.TestResponse.toObject = function(includeInstance, msg) {\r\n  var f, obj = {\r\n    dataList: jspb.Message.toObjectList(msg.getData(),\r\n    proto.proto.Test.toObject, includeInstance),\r\n    otherData: (f = msg.getOtherData()) && proto.proto.Test.toObject(includeInstance, f)\r\n  };\r\n\r\n  if (includeInstance) {\r\n    obj.$jspbMessageInstance = msg;\r\n  }\r\n  return obj;\r\n};\r\n}\r\n\r\n```\r\nOne feature like this is [added](https://github.com/protocolbuffers/protobuf/pull/1951/files) in the pass, but is lost with the time. \r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-05-27T14:32:32Z",
        "closed_at": "2021-03-05T23:27:45Z",
        "merged_at": null,
        "body": "This addresses #6148 which describes an incompatibility between Xdebug and classes derived from the Protobuf extension's internal `\\Google\\Protobuf\\Internal\\Message` class. This incompatibility causes a segfault due to a null pointer dereference when using Xdebug's overridden `var_dump()` function or whenever a step debugger inspects one of these instances. The following code segfaults when Xdebug and Protobuf extensions are both installed:\r\n\r\n```\r\n<?php\r\n\r\nvar_dump(new \\Google\\Protobuf\\Timestamp());\r\n```\r\n\r\nPHP internal provide two different handlers for accessing an object's properties:\r\n[`get_properties`](https://wiki.php.net/internals/engine/objects#get_properties) and [`get_debug_info`](https://wiki.php.net/internals/engine/objects#get_debug_info).\r\n\r\nThese handlers offer different guidance: `get_debug_info` \"Should not return NULL.\", but for `get_properties`, returning `NULL` is explicitly supported in order to support cases such as invocation by the garbage collector.\r\n\r\nPHP's helpers for accessing object properties (`zend_get_properties_for()` in PHP 7.4, and the various `Z_OBJDEBUG` macros) fall back to `get_properties` if the `get_debug_info` handler isn't defined, and this is where we get into trouble: Xdebug tries to access debug info for these classes but receives `NULL`, unexpectedly.\r\n\r\nAs a fix, I added a separate `get_debug_info` handler to the base `Message` class. This handler initializes an empty array and returns it, setting `is_tmp` to indicate that the caller should take ownership. While it's wasteful to allocate a new array every time, `get_debug_info` is accessed infrequently.\r\n\r\nThis change seemed easier and less invasive than modifying `get_properties()` to return an array. The docs for `get_properties()` indicate that the handler, not the caller, owns the array. This means `get_properties()` cannot allocate a temporary array on the fly. `get_debug_info()`, on the other hand, is designed for this case.\r\n\r\nWith this change in place, the example code above prints out Xdebug's extended `var_dump` output, as expected:\r\n\r\n```\r\n/home/vagrant/proto.php:3:\r\nclass Google\\Protobuf\\Timestamp#1 (0) {\r\n}\r\n```\r\n\r\nWhile it would be nice to get _real_ debug info out of these message classes, that would be a much more involved change. This change only prevents the segfault, without trying to make debug info more useful.",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2020-05-27T12:03:06Z",
        "closed_at": "2020-05-27T15:28:29Z",
        "merged_at": "2020-05-27T15:28:29Z",
        "body": "- allow building with newer dotnet SDK than just 3.0.100\r\n- upgrade Microsoft.SourceLink.GitHub dependency (current version causes trouble with dotnet SDK 3.1.x)",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 134,
        "deletions": 256,
        "changed_files": 39,
        "created_at": "2020-05-26T23:46:55Z",
        "closed_at": "2020-05-27T16:24:58Z",
        "merged_at": "2020-05-27T16:24:58Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 12,
        "deletions": 12,
        "changed_files": 12,
        "created_at": "2020-05-26T22:55:49Z",
        "closed_at": "2021-10-13T20:13:02Z",
        "merged_at": null,
        "body": "The google.golang.org/protobuf module is the new home for the\r\nGo implementation of protocol buffers. Update all go_package options\r\nto reflect this fact. Some files lacked an option, so one is added.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 48,
        "deletions": 34,
        "changed_files": 31,
        "created_at": "2020-05-26T21:07:50Z",
        "closed_at": "2020-05-26T22:46:40Z",
        "merged_at": "2020-05-26T22:46:40Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2020-05-26T18:36:33Z",
        "closed_at": "2020-05-29T20:05:59Z",
        "merged_at": "2020-05-29T20:05:59Z",
        "body": "See\r\nhttps://github.com/protocolbuffers/protobuf/pull/7458#issuecomment-633147682.\r\n\r\nrelease notes: no\r\n\r\nSigned-off-by: Harvey Tuch <htuch@google.com>",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2020-05-26T08:14:29Z",
        "closed_at": "2020-05-29T20:05:24Z",
        "merged_at": "2020-05-29T20:05:24Z",
        "body": "The previous version does not mark the `toolchain_type` as public,\r\nmeaning that users of a CC toolchain using\r\n`@rules_cc//cc:toolchain_type` will get build errors along the lines of\r\n```\r\nERROR:\r\n.../local_config_cc_toolchains/BUILD.bazel:18:1:\r\nin toolchain rule\r\n@local_config_cc_toolchains//:cc-toolchain-armeabi-v7a: alias\r\n'@rules_cc//cc:toolchain_type' referring to target\r\n'@bazel_tools//tools/cpp:toolchain_type' is not visible from target\r\n'@local_config_cc_toolchains//:cc-toolchain-armeabi-v7a'. Check the\r\nvisibility declaration of the former target if you think the dependency\r\nis legitimate\r\n```\r\nSee https://github.com/digital-asset/daml/pull/6063#issuecomment-633580469",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 687,
        "deletions": 365,
        "changed_files": 42,
        "created_at": "2020-05-26T07:42:09Z",
        "closed_at": "2020-05-26T16:57:08Z",
        "merged_at": "2020-05-26T16:57:08Z",
        "body": "**Important:** this integration must be merged, not squashed!",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-05-25T08:39:16Z",
        "closed_at": "2020-06-01T11:55:13Z",
        "merged_at": null,
        "body": "null pointer dereference\r\n```\r\nsyntax = \"proto3\";\r\n\r\npackage tutorial;\r\n\r\nmessage Person0 {\r\n\toption map_entry = true;\r\n}\r\n// ...\r\n```",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-05-24T11:09:14Z",
        "closed_at": "2021-03-05T23:29:34Z",
        "merged_at": null,
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 32,
        "deletions": 210,
        "changed_files": 5,
        "created_at": "2020-05-21T05:27:51Z",
        "closed_at": "2020-05-21T19:45:35Z",
        "merged_at": "2020-05-21T19:45:35Z",
        "body": "This is for https://github.com/grpc/grpc/issues/23011 and #6659 \r\n\r\nApparently this commit: https://github.com/protocolbuffers/protobuf/commit/df7197235872c6193dad97994db3dd7d35e52ee4 has never been merged properly internally, and that got inadvertently merged back here in #7344.\r\n\r\nSo this PR attempts to re-apply this commit df71972\r\n\r\nApparently the commit ID df71972 == 479ec14, and we are cherry-picking this one particular commit in #6869.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 23,
        "deletions": 10,
        "changed_files": 2,
        "created_at": "2020-05-21T05:08:49Z",
        "closed_at": "2020-05-21T19:46:35Z",
        "merged_at": "2020-05-21T19:46:35Z",
        "body": "Fixes #7532 ",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 5,
        "changed_files": 4,
        "created_at": "2020-05-19T02:20:05Z",
        "closed_at": "2020-05-19T22:28:57Z",
        "merged_at": "2020-05-19T22:28:57Z",
        "body": "* Reverts #7453 to restore binary builds for Ruby 2.3 and 2.4.\r\n* Force a `bundle update` when building, to ensure that dependencies are re-resolved after rvm switches to a new Ruby, just in case the requirements are different.\r\n\r\n@haberman is summoned.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-05-19T00:44:47Z",
        "closed_at": "2020-06-02T21:45:31Z",
        "merged_at": "2020-06-02T21:45:31Z",
        "body": "Closes #7507 \r\n\r\nLanguage: Python",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2020-05-17T23:07:52Z",
        "closed_at": "2021-06-08T20:48:01Z",
        "merged_at": "2021-06-08T20:48:01Z",
        "body": "Hi!\r\n\r\nI've opened an issue about suspicious String field processing earlier:\r\n#6719 \r\n\r\nThis patch is trying to fix code generation in case this is actually a bug.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-05-17T18:16:57Z",
        "closed_at": "2020-05-20T00:15:36Z",
        "merged_at": "2020-05-20T00:15:36Z",
        "body": "This is a very minor improvement to the Emacs `protobuf-mode.el` file, that just declares the file as using lexical binding. This allows some improvements in how the file is byte-compiled by Emacs, including letting it be optimized in Andrea Corallo's upstream `feature/native-comp` branch, which can only optimize elisp files that use lexical binding (which is how I discovered that the file wasn't using lexical binding in the first place).\r\n\r\nThe protobuf-mode.el file already requires Emacs >= 24.4, and lexical-binding was added in Emacs 24.1, so there's no chance this will break protobuf-mode for anyone using older Emacs versions.\r\n\r\nI have already signed a Google individual CLA.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2020-05-16T20:14:41Z",
        "closed_at": "2021-10-13T19:31:38Z",
        "merged_at": null,
        "body": "This is an updated pull request that includes changes required to build the Ruby extension with Visual Studio 2019.\r\n\r\nruby",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 109,
        "deletions": 39,
        "changed_files": 20,
        "created_at": "2020-05-16T00:14:22Z",
        "closed_at": "2020-05-16T23:42:03Z",
        "merged_at": "2020-05-16T23:42:03Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-05-15T02:01:02Z",
        "closed_at": "2020-10-13T00:27:34Z",
        "merged_at": "2020-10-13T00:27:34Z",
        "body": "The setuptools package was added to allow definition of namespaces using\r\nthe now outdated (and discouraged from use) pkg_resources-style.\r\n\r\nThe code here, for a long while now, uses a try/except (`ImportError`)\r\nprotection around the setuptools code, and falls back to the more\r\nencoraged pkgutil-style.\r\n\r\nRemoving this library won't affect any current workflow, and in the case\r\nof setuptools not found, it'll actually use a more modern (and\r\nencouraged) flow.\r\n\r\nMore info: https://packaging.python.org/guides/packaging-namespace-packages/",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-05-15T01:35:49Z",
        "closed_at": "2020-08-20T00:16:37Z",
        "merged_at": "2020-08-20T00:16:37Z",
        "body": "Fixes #7493\r\n\r\nBy removing all test files from the distribution, we've reduced the .whl\r\nfile size from 1259808B (1.2MB) to 996042B (973K), which is 21% reduction,\r\nAnd reduced the unpacked size from 5317178B (5.1MB) to 3251811B (3.2MB),\r\nwhich is 39% reduction.\r\n\r\nSize was measured for the protobuf-3.11.3-cp35-cp35m-manylinux1_x86_64.whl release.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 24,
        "deletions": 19,
        "changed_files": 2,
        "created_at": "2020-05-14T19:35:56Z",
        "closed_at": "2020-05-15T00:04:21Z",
        "merged_at": "2020-05-15T00:04:21Z",
        "body": "Fixes: https://github.com/protocolbuffers/protobuf/issues/7505",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 7,
        "changed_files": 4,
        "created_at": "2020-05-13T21:19:23Z",
        "closed_at": "2020-05-13T22:36:22Z",
        "merged_at": "2020-05-13T22:36:22Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 304,
        "deletions": 745,
        "changed_files": 35,
        "created_at": "2020-05-13T20:53:57Z",
        "closed_at": "2020-05-14T00:28:27Z",
        "merged_at": "2020-05-14T00:28:27Z",
        "body": "**Important**: this integration must be merged, not squashed!",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 14,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2020-05-13T06:54:59Z",
        "closed_at": "2021-10-13T01:44:39Z",
        "merged_at": null,
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 34,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2020-05-13T00:32:06Z",
        "closed_at": "2021-10-15T22:03:03Z",
        "merged_at": "2021-10-15T22:03:02Z",
        "body": "Closes #7484.\r\n\r\nThis PR exposes the C++ `FileDescriptor` `DebugString` method through to the Python C++ implementation, and adds a test for it.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 198,
        "deletions": 59,
        "changed_files": 35,
        "created_at": "2020-05-13T00:01:44Z",
        "closed_at": "2020-05-13T01:53:51Z",
        "merged_at": "2020-05-13T01:53:51Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 37,
        "deletions": 37,
        "changed_files": 16,
        "created_at": "2020-05-12T22:59:52Z",
        "closed_at": "2020-05-14T14:47:26Z",
        "merged_at": "2020-05-14T14:47:26Z",
        "body": "Fixing a small typo in an internal namespace. Auxillary becomes Auxiliary.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-05-12T20:05:00Z",
        "closed_at": "2020-05-12T22:05:24Z",
        "merged_at": "2020-05-12T22:05:24Z",
        "body": "A proper integration test should be hermetic such that its operation\r\nis agnostic to whatever happens outside of its controlled environment.\r\nThe script is not so since it uses a fixed (and very old) version of Go,\r\nbut continues to build protoc-gen-go from head, leading to an eventual\r\nbreakage when protoc-gen-go at head no longer operates on such an old\r\nversion of Go.\r\n\r\nFix the script to pin to an older version of protoc-gen-go (i.e., v1.3.5).",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-05-12T19:00:51Z",
        "closed_at": "2020-05-14T01:47:40Z",
        "merged_at": null,
        "body": "I believe this constructor is not intended to be a conversion one.\r\n\r\nRelated to https://github.com/protocolbuffers/protobuf/issues/7374.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 931,
        "deletions": 1095,
        "changed_files": 25,
        "created_at": "2020-05-12T18:43:01Z",
        "closed_at": "2020-05-12T19:45:17Z",
        "merged_at": "2020-05-12T19:45:17Z",
        "body": "Cherry-picks:\r\n\r\n# C++ (and Python/C++):\r\n- fix for https://github.com/protocolbuffers/protobuf/issues/7463\r\n\r\n# Java\r\n- fix for #7480\r\n\r\n# C#\r\n- [Remove Has/Clear members for C# message fields in proto2](https://github.com/protocolbuffers/protobuf/pull/7429)\r\n- [Implement HasPresence for C#](https://github.com/protocolbuffers/protobuf/pull/7466)\r\n- [C#: Mark GetOption API as obsolete and expose the \"GetOptions()\" method on descriptors instead]()",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 12165,
        "deletions": 643,
        "changed_files": 49,
        "created_at": "2020-05-12T13:39:03Z",
        "closed_at": "2020-06-02T07:26:26Z",
        "merged_at": "2020-06-02T07:26:26Z",
        "body": "Followup for https://github.com/protocolbuffers/protobuf/pull/7351.\r\n\r\nAttempts to fix the issue mentioned in https://github.com/protocolbuffers/protobuf/pull/7351#issuecomment-627160415\r\n\r\nIntroduces the `GOOGLE_PROTOBUF_COMPATIBILITY_MODE` define which allows to avoid referencing the `ParseContext` ref struct in the generated code.\r\nThe consequences are basically:\r\n- if the user doesn't have a roslyn-generation compiler, they can still build the generated code (after setting GOOGLE_PROTOBUF_COMPATIBILITY_MODE the generated code ends up being pretty much identical as pre #7351). Another option for the users on older compilers is to simply not regenerate their generated code.\r\n- there is some performance overhead (because CodedInputStream's parsing methods are now considered legacy). The overhead is removed by getting a newer compiler and recompiling.\r\n- Folks with older compiler won't be able to use new `ParseFrom(ReadOnlySequence<byte> data)`, because that one requires that the messages implement `IBufferMessage` ( = support parsing from ParseContext).\r\n- One important realization is that if the generated code is shipped in a pre-compiled form (e.g. in a nuget package), users with an old compiler will still be able to use the pre-compiled generated code even without the compatibility_mode enabled, as long as they don't touch the APIs utilizing `ref struct` directly (which they generally don't need to do). E.g. someone with an old compiler can still use the `ParseFrom(ReadOnlySequence<byte> data)` method as long as the generated code was compiled using a newer compiler in advance. That is a good news for the client libraries.\r\n\r\nThe differences compared to the old approach https://github.com/protocolbuffers/protobuf/pull/5888:\r\n- we still avoid duplicating the parsing logic in the runtime\r\n- the Span based parsing is now supported by default, users with legacy compilers will need to explicitly set the `GOOGLE_PROTOBUF_COMPATIBILITY_MODE` define to be able to compile the regenerated code.",
        "comments": 19
    },
    {
        "merged": true,
        "additions": 118,
        "deletions": 41,
        "changed_files": 5,
        "created_at": "2020-05-11T08:54:36Z",
        "closed_at": "2020-06-11T05:43:30Z",
        "merged_at": "2020-06-11T05:43:30Z",
        "body": "Fixes #7486.\r\n\r\nThe semantics are relatively complex to explain, even though the\r\ncode isn't particularly complex. We need to be certain that these\r\nare the semantics we want.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 574,
        "deletions": 94,
        "changed_files": 25,
        "created_at": "2020-05-11T07:21:39Z",
        "closed_at": "2020-05-12T04:35:31Z",
        "merged_at": "2020-05-12T04:35:31Z",
        "body": "**Important**: this integration must be merged, not squashed!",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-05-09T00:00:37Z",
        "closed_at": "2020-05-11T15:59:36Z",
        "merged_at": "2020-05-11T15:59:36Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-05-08T23:42:28Z",
        "closed_at": "2020-05-11T15:32:00Z",
        "merged_at": "2020-05-11T15:31:59Z",
        "body": "This was causing problems in OCMock due to recursion when OCMock was trying\r\nto mock a protobuf.\r\n\r\n`_forwardStackInvocation:` was being called as part of the resolution of `descriptor`.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2020-05-08T01:10:01Z",
        "closed_at": "2020-05-08T20:06:51Z",
        "merged_at": null,
        "body": "Project import generated by Copybara\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 268,
        "deletions": 148,
        "changed_files": 27,
        "created_at": "2020-05-07T23:36:38Z",
        "closed_at": "2020-05-08T05:00:23Z",
        "merged_at": "2020-05-08T05:00:23Z",
        "body": "**Important**: this integration must be merged, not squashed!",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 2759,
        "deletions": 2910,
        "changed_files": 486,
        "created_at": "2020-05-06T20:31:24Z",
        "closed_at": "2021-10-21T21:23:53Z",
        "merged_at": null,
        "body": "Previously the custom `PROTOBUF_NAMESPACE_*` macros were used in some\r\nplaces but not others. With this change they're used everywhere which\r\nallows consumers to replace these to namespace protobuf differently, in\r\norder to link multiple versions of it into the same binary.\r\n\r\nRelated: https://groups.google.com/forum/#!topic/protobuf/hyOliJg4_J8",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 526,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2020-05-05T23:48:24Z",
        "closed_at": "2021-03-05T23:29:28Z",
        "merged_at": null,
        "body": "Project import generated by Copybara\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 619,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2020-05-05T21:30:47Z",
        "closed_at": "2022-02-09T00:01:41Z",
        "merged_at": null,
        "body": "##### Overview\r\n\r\nThis patch proposes a new python_opt option, `replace_import_package`, for the Python code generator that provides a lightweight mechanism for replacing the package name ordinarily generated by protoc in Python import statements (the \"generated\" package name) with a user supplied package name (the \"preferred\" package name) in order to allow the imported modules to be found more easily at runtime.\r\n\r\nIn the simplest case, given a message file (say, \"MainMessage.proto\") that imports another message file (say, \"ImportedMessage.proto\") from within the same directory, invoking the new option like:\r\n\r\n`protoc --proto_path /protobuf/files --python_out ./my_package --python_opt replace_import_package MainMessage.proto`\r\n\r\nwill replace the currently generated statement `import ImportedMessage_pb2 as ...` (with no `from` clause), with the preferred statement `from . import ImportedMessage_pb2 as ...` (with a `from` clause referencing an explicit package).\r\n\r\n##### Issue Background\r\n\r\nWhen generating Python code from input files that import other protobuf files, protoc will generate Python import statements that either contain no `from` clause (if the input file's import statement contains no relative path prefix) or contain a `from` clause listing a package name derived solely from the relative path used in the protobuf import statement (protoc always ignores the protobuf package statement when generating Python code).  This behavior occasionally results in Python import statements that don't work as expected: for example, import statements with no `from` clause are no longer interpreted as implicit relative imports in Python3.\r\n\r\nCurrent workarounds include:\r\n\r\n- extending the PYTHONPATH at runtime to include packages that previously were implicitly searched\r\n- structuring the protobuf input directories to match the desired Python package structure\r\n- post processing the generated code with 2to3 (in simple cases) or sed/awk/etc (in more complex cases) to recast the Python import statements\r\n\r\nEach has drawbacks.  Extended discussion of issues and workarounds can be found [here](https://github.com/protocolbuffers/protobuf/issues/1491).\r\n\r\n##### A Few Preliminaries\r\n\r\nNote that the scope of the new option is limited.  In particular:\r\n\r\n1. If you do not supply the new `replace_import_package` option for Python compiles, there is no change in behavior for protoc.\r\n\r\n2. If you do not use the protobuf \"import\" statement in any input files, the new `replace_import_package` option (even if present) is inoperative; it only changes the form of the Python import statements produced by protoc when generating Python code from protobuf files that themselves contain import statements.\r\n\r\n3. If your protobuf files happen to be arranged in a directory hierarchy that precisely matches the desired Python package structure, then the new `replace_import_package` option is unnecessary; protoc already creates output files in the desired locations (relative to the directory named in `--python_out`) and produces correct import statements in the generated Python code.\r\n\r\n4. The new `replace_import_package` option does not change the protoc dataflow; output files are still generated 1:1 with input files and the location of the generated files is still controlled by the `--python_out` option\r\n\r\n##### Proposed Option Operation\r\n\r\n- the new option is supplied as a flag to the `--python_opt` command line argument\r\n- the option has the form `replace_import_package=MAPPINGS`\r\n- each mapping in the MAPPINGS string has the form `generated.package|preferred.package`\r\n\t- the `generated.package` name:\r\n\t\t- may be empty (with a special meaning, see below)\r\n\t\t- if present, must be absolute (because protoc generates only absolute package names)\r\n\t- the `preferred.package` name:\r\n\t\t- must be non-empty\r\n\t\t- may be relative (like . or ..my_package)\r\n- multiple mappings may be specified separated by semicolons\r\n- if the package name in a generated import statement *exactly matches* the `generated.package` in one of the mappings, that generated package name is *fully replaced* by the `preferred.package` name in that mapping\r\n\r\n> For example, given the mapping string \"a|p;b|q.b;c|c\", if protoc generates the import statements:  \r\n>  `from a import m`  \r\n>  `from b import n`  \r\n>  `from c import o`  \r\n> They will be transformed into:  \r\n>  `from p import m`  \r\n>  `from q.b import n`  \r\n>  `from c import o`  \r\n\r\n- an import statement with **no** generated package name (that is, a generated import statement with no `from` clause) matches a mapping with an empty `generated.package`, causing the insertion of a `from` clause containing the `preferred.package` name in that mapping\r\n> For example, given the mapping string \"|.\", if protoc generates the import statement:  \r\n>  `import m`  \r\n> It will be transformed into:  \r\n>  `from . import m`  \r\n- a generated package name that is not matched by any mapping is left unchanged\r\n> For example, given the mapping string \"|.;a|p;b|q\", if protoc generates the import statement:  \r\n>  `from c import o`  \r\n> It will not be transformed in any way. \r\n- the MAPPINGS value is optional; if no value is supplied then the implied mapping string is \"|.\"\r\n- some minutiae:\r\n\t- if the `replace_import_package` flag appears more than once, the effective set of mappings will be the union of the mappings from all the mapping strings  \r\n\t- if the same `generated.package` value appears in more than one mapping, the latest appearing mapping (the rightmost mapping in the rightmost mapping string) is operative \r\n\r\n> For example, the command line option `--python_opt 'replace_import_package=a|p;b|q,replace_import_package=c|r'`, is equivalent to `--python_opt 'replace_import_package=a|p;b|q;c|r'`.  \r\n>  \r\n> And the mapping string \"a|p;b|q;a|z\" is equivalent to \"b|q;a|z\".\r\n\r\n##### Usage Scenarios\r\n\r\nSome example usage scenarios for the new option (with runnable code) can be found [here](https://github.com/tpboudreau/protoc_python_import_examples).",
        "comments": 16
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2020-05-05T13:11:49Z",
        "closed_at": "2020-05-08T16:27:48Z",
        "merged_at": "2020-05-08T16:27:48Z",
        "body": "There is a note in the documentation to `Reflection::GetRepeatedFieldRef()`\r\nabout file `net/proto2/public/reflection.h` which contains a definition of\r\n`RepeatedFieldRef`. Since there are few places in code with rewrite of\r\n`net...` path to `google/protobuf/...` it looks like the first one is a\r\nlegacy path and should be renamed to `google/protobuf` in documentation\r\nas well.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 221,
        "deletions": 64,
        "changed_files": 4,
        "created_at": "2020-05-05T05:56:16Z",
        "closed_at": "2020-05-08T05:17:52Z",
        "merged_at": "2020-05-08T05:17:51Z",
        "body": "FieldDescriptor.HasPresence returns true if both ClearValue and HasValue (on the accessor) can be expected to work. Some fields have a working ClearValue, but no HasValue; HasPresence returns false for those fields.\r\n\r\nGenerally:\r\n\r\n- Extension fields have presence if and only if they're singular\r\n- Repeated fields do not support presence\r\n- Map fields do not support presence\r\n- Message fields support presence\r\n- Oneof fields support presence (this includes synthetic oneof fields, so that covers proto3 optional singular fields)\r\n- Proto2 singular primitive fields support presence\r\n- Proto3 singular primitive fields do not support presence (unless they're in a oneof, covered above)",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2020-05-05T02:18:30Z",
        "closed_at": "2020-05-05T17:56:48Z",
        "merged_at": "2020-05-05T17:56:48Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 241,
        "deletions": 67,
        "changed_files": 26,
        "created_at": "2020-05-05T00:13:10Z",
        "closed_at": "2020-05-05T17:56:22Z",
        "merged_at": "2020-05-05T17:56:22Z",
        "body": "**Important:** this integration must be merged, not squashed!",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3007,
        "deletions": 2755,
        "changed_files": 5,
        "created_at": "2020-05-04T21:37:11Z",
        "closed_at": "2020-05-06T01:12:27Z",
        "merged_at": "2020-05-06T01:12:27Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 284,
        "deletions": 69,
        "changed_files": 9,
        "created_at": "2020-05-04T14:24:00Z",
        "closed_at": "2020-05-05T05:57:12Z",
        "merged_at": null,
        "body": "FieldAccessor.HasPresence returns true if both ClearValue and HasValue can be expected to work. Some fields have a working ClearValue, but no HasValue; HasPresence returns false for those fields.\r\n\r\nGenerally:\r\n- Repeated fields return false\r\n- Map fields return false\r\n- Message fields return true\r\n- Oneof member fields return true\r\n- Singular primitive proto2 fields return true\r\n- Singular explicitly-optional proto3 fields return true\r\n- Singular not-explicitly-optional proto3 fields return false\r\n- Repeated extension fields return false\r\n- Singular extension fields return true",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-05-04T02:24:01Z",
        "closed_at": "2020-05-08T16:34:28Z",
        "merged_at": "2020-05-08T16:34:28Z",
        "body": "",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 9,
        "changed_files": 1,
        "created_at": "2020-05-04T00:36:14Z",
        "closed_at": "2020-05-14T14:45:58Z",
        "merged_at": "2020-05-14T14:45:58Z",
        "body": "Envoy was experiencing failed builds due to lots of duplicate -I in the\r\nCLI. The solution is to generally use depset() as per Starlark best\r\npractice for this sort of thing.\r\n\r\nMight fix other issues beyond py_proto_library, anything that depends on\r\nproto_gen.\r\n\r\nrelease notes: no\r\n\r\nSigned-off-by: Harvey Tuch <htuch@google.com>",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 3007,
        "deletions": 2755,
        "changed_files": 5,
        "created_at": "2020-05-01T23:58:00Z",
        "closed_at": "2020-05-04T21:34:06Z",
        "merged_at": "2020-05-04T21:34:06Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2020-05-01T18:10:38Z",
        "closed_at": "2020-05-01T19:35:09Z",
        "merged_at": "2020-05-01T19:35:09Z",
        "body": "It is no longer possible to \"bundle install\" these versions:\r\n\r\n$ bundle install\r\nFetching gem metadata from https://rubygems.org/.................\r\nreline-0.1.3 requires ruby version >= 2.5, which is incompatible with the current version, ruby 2.4.9p362",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 57,
        "deletions": 10,
        "changed_files": 4,
        "created_at": "2020-05-01T07:57:33Z",
        "closed_at": "2020-05-11T17:19:20Z",
        "merged_at": "2020-05-11T17:19:20Z",
        "body": "Adds the \"WITH_PROTOC\" definition when configuring a build with cmake, which specifies an existing 'protoc' binary to use.  This is required when building for another target.\r\n\r\n\"WITH_PROTOC\" was chosen to specifically mimick the \"--with-protoc\" option used when using the standard 'automake' based build system.\r\n\r\nFurthermore, 'libprotoc' is now only built if it is actually required, which can save some porting effort.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 395,
        "deletions": 0,
        "changed_files": 6,
        "created_at": "2020-04-30T15:27:53Z",
        "closed_at": "2020-05-11T11:15:30Z",
        "merged_at": "2020-05-11T11:15:30Z",
        "body": "Based on https://github.com/protocolbuffers/protobuf/pull/7434\r\n\r\nThe new C# test is passing, so I think https://github.com/protocolbuffers/protobuf/pull/7434 can be merged separately and this PR can go in as a followup (as it's not directly related to the Options API, it just makes sure that we are correctly handling some unusual cases).",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2020-04-29T23:46:11Z",
        "closed_at": "2021-10-15T20:37:05Z",
        "merged_at": null,
        "body": "It is no longer the case so we don't need to add headers into src. With the srcs added it break if zlib is used as rules_foreign_cc dependency.\r\n\r\nSigned-off-by: Lizan Zhou <lizan@tetrate.io>",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 107,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-04-29T23:06:30Z",
        "closed_at": "2020-04-30T00:16:04Z",
        "merged_at": "2020-04-30T00:16:04Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-04-29T18:53:56Z",
        "closed_at": "2021-03-05T23:30:18Z",
        "merged_at": null,
        "body": "",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2020-04-29T17:14:28Z",
        "closed_at": "2021-10-13T01:42:33Z",
        "merged_at": null,
        "body": "This fixes https://github.com/protocolbuffers/protobuf/issues/7422.\r\nCopy pasting my findings for good measure:\r\n\r\nI was feeding [GeneratedMessageLite#parseFrom](https://github.com/protocolbuffers/protobuf/blob/2db0e9812a8774f5266370b7a6eae4e4e5a2cdd0/java/core/src/main/java/com/google/protobuf/GeneratedMessageLite.java#L1690-L1693) with an [`UnsafeDirectNioDecoder`](https://github.com/protocolbuffers/protobuf/blob/e667bf6eaaa2fb1ba2987c6538df81f88500d030/java/core/src/main/java/com/google/protobuf/CodedInputStream.java#L186). However, on Android [`supportsUnsafeByteBufferOperations`](https://github.com/protocolbuffers/protobuf/blob/2228af689f5ff4d929c85079025c49f6945b136a/java/core/src/main/java/com/google/protobuf/UnsafeUtil.java#L387-L389) should actually return `false` because the AndroidXMemoryAccessors [do not support unsafe ByteBuffer operations](https://github.com/protocolbuffers/protobuf/blob/2228af689f5ff4d929c85079025c49f6945b136a/java/core/src/main/java/com/google/protobuf/UnsafeUtil.java#L714-L742).",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 540,
        "deletions": 195,
        "changed_files": 41,
        "created_at": "2020-04-28T15:42:41Z",
        "closed_at": "2020-04-28T16:52:25Z",
        "merged_at": "2020-04-28T16:52:25Z",
        "body": "**Important**: this integration must be merged, not squashed!",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 176,
        "deletions": 70,
        "changed_files": 9,
        "created_at": "2020-04-28T12:16:42Z",
        "closed_at": "2020-05-11T07:40:52Z",
        "merged_at": "2020-05-11T07:40:52Z",
        "body": "The currently existing new API for getting custom options (introduced in https://github.com/protocolbuffers/protobuf/pull/5350 as part of proto2 extensions support) has some serious issues\r\n- it is incomplete: it doesn't allow distinguishing between the custom option not being present at all VS being present and having the default value.\r\n- the GetOption API basically just mimics the existing GetExtension API (with repeated / non-repeated overloads), creating unnecessary duplication (which then leads to problems such as https://github.com/protocolbuffers/protobuf/issues/7127)\r\n- the new API offers no way of accessing the \"standard\" (non-custom) options at all.\r\n- the GetOption API is not consistent with what other protobuf implementations (C++, java, python) do to access custom options.\r\n\r\nThis PR removes the unnecessary (and partially broken) GetOption API  and replaces it by a more straightforward approach:\r\n- expose Options property for each descriptor that allows one to access the corresponding \"options\" message (but use a defensive copy because C# messages are inherently mutable).\r\n- the custom options are retrieved just as any other extensions, using the standard extension API (HasExtension, GetExtension). This is the same approach that is used in C++, Java and Python\r\n\r\n(the GetOption API has been marked as \"experimental and subject to change\" when releasing the C# proto2 support, so removing it if fine to do).",
        "comments": 30
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2020-04-27T19:29:05Z",
        "closed_at": "2020-04-28T15:51:05Z",
        "merged_at": "2020-04-28T15:51:05Z",
        "body": "The Markdown formatting for these installation instructions is (currently) broken, specifically in the section for Mac users.\r\n\r\nSince the entire file uses indentation, instead of fenced code blocks, I updated the other two references to be consistent (and remove extra indentation from the code snippet).",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 388,
        "deletions": 953,
        "changed_files": 5,
        "created_at": "2020-04-27T06:22:45Z",
        "closed_at": "2020-05-01T08:06:45Z",
        "merged_at": "2020-05-01T08:06:45Z",
        "body": "cc @ObsidianMinor ",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-04-27T05:21:16Z",
        "closed_at": "2020-04-29T17:42:38Z",
        "merged_at": "2020-04-29T17:42:38Z",
        "body": "no-rtti build is broken due to forced use of typeid() introduced in commit b99994d994e399174fe688a5efbcb6d91f36952a\r\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 1039,
        "deletions": 1,
        "changed_files": 11,
        "created_at": "2020-04-24T21:30:29Z",
        "closed_at": "2021-10-21T00:04:02Z",
        "merged_at": null,
        "body": "Redo of PR #7417 \r\n\r\nThis PR is meant to add support for carthage when building in iOS (from issue #5530).\r\n\r\nFor some background, the main idea of how carthage works is that it will search the root for a xcprojfile or xcworkspace file, verify it has a buildable candidate and run through the build script.\r\n\r\nCarthage also requires that the exposed build targets are frameworks and not static libraries. In this change I've added new targets that mirror over the static targets and added a xcworkspace file to the root of this repo that points to the xcworkspace files. This allows carthage to find the files and generate the frameworks as expected.\r\n\r\nThis can be tested by running:\r\n`carthage build --archive` \r\nfrom either the root of this repo of in the objectivec directory, another test can be to make an empty project with a Cartfile, adding this repo and running `carthage bootstrap`",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-04-24T18:46:41Z",
        "closed_at": "2020-04-27T15:21:53Z",
        "merged_at": "2020-04-27T15:21:53Z",
        "body": " release notes: no",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1027,
        "deletions": 449,
        "changed_files": 41,
        "created_at": "2020-04-24T13:41:44Z",
        "closed_at": "2020-04-24T20:36:16Z",
        "merged_at": "2020-04-24T20:36:16Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 14,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-04-24T03:42:45Z",
        "closed_at": "2021-03-05T23:30:35Z",
        "merged_at": null,
        "body": "Unfortunately gcc and clang at high warning levels have incompatible requirements about \"override\" and \"final\". Gcc -Wsuggest-override issues warnings on members that have only \"final\", demanding to also see \"override\". Clang at high warning levels demands at most one of \"virtual\", \"override\", and \"final\". PROTOBUF_FINAL expands to only \"final\", so compiling protoc-generated files with gcc at high warning levels results in numerous warnings (or warnings-as-errors): \"virtual Something* Something::New() const\u2019 can be marked override [-Werror=suggest-override]\".\r\n\r\nThis change follows the example in FileGenerator::GenerateInlineFunctionDefinitions() for suppressing spurious strict-aliasing warnings by adding a #pragma GCC push/pop within which the suggest-override warning is suppressed.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2097,
        "deletions": 0,
        "changed_files": 33,
        "created_at": "2020-04-24T00:49:51Z",
        "closed_at": "2020-04-24T15:19:29Z",
        "merged_at": null,
        "body": "This PR is meant to add support for carthage when building in iOS (from issue #5530).\r\n\r\nFor some background, the main idea of how carthage works is that it will search the root for a xcprojfile or xcworkspace file, verify it has a buildable candidate and run through the build script. \r\n\r\nIn this case here, since there is no project file associated with this I used the Protobuf.podspec to generate a xcworkspace (and associated xcprojfiles). This is so I didn't have to do any guess work in setup and keep it 1:1 with the podspec file but it does add a lot more files than needed. \r\n\r\nThese are the steps I took to get here: (on a mac with Xcode installed)\r\n\r\n1.) install both cocoapods and cocoapods-generate\r\ngem 'cocoapods'\r\ngem 'cocoapods-generate'\r\n2.) install carthage (not needed for setup but used just for verifying this all works)\r\n3.) Run the following commands:\r\n`pod gen Protobuf.podspec --local-sources=./ --platforms=ios`\r\n`ln -s gen/Protobuf/Protobuf.xcworkspace Protobuf.xcworkspace` # this is a requirement for carthage, it needs to find an xcproj or xcworkspace in the root\r\n4.) Done! Verify it works by running `carthage build --archive` this will make a Carthage directory that should not be checked in as well as a zip file with the build products\r\n\r\nOnce again, this might be more complicated in this way rather than simply making a xcprojfile and adding the source code there, this just removes all that work by having cocoapods do it for you. I'm open to suggestions and other ideas.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 173,
        "deletions": 4,
        "changed_files": 4,
        "created_at": "2020-04-23T04:17:46Z",
        "closed_at": "2020-06-03T06:55:05Z",
        "merged_at": "2020-06-03T06:55:04Z",
        "body": "Based on https://github.com/protocolbuffers/protobuf/pull/7351. Will rebase on master once it is merged.\r\n\r\nActual changes: https://github.com/JamesNK/protobuf/commit/d0d576e316a0944bc6eb2f38b371ccc2ddce15c8\r\n\r\n@jtattermusch \r\n\r\nBefore:\r\n```\r\n|                                                          Method | messageCount |        Mean |      Error |     StdDev | Gen 0/1k Op | Gen 1/1k Op | Gen 2/1k Op | Allocated Memory/Op |\r\n|---------------------------------------------------------------- |------------- |------------:|-----------:|-----------:|------------:|------------:|------------:|--------------------:|\r\n|                         RepeatedFieldMessage_ParseFromByteArray |            ? |    13.44 us |  0.1718 us |  0.1523 us |     21.4996 |           - |           - |            16.54 KB |\r\n|                  RepeatedFieldMessage_ParseFromReadOnlySequence |            ? |    13.11 us |  0.0688 us |  0.0610 us |     21.2708 |           - |           - |            16.36 KB |\r\n|        RepeatedFieldMessage_ParseDelimitedMessagesFromByteArray |           10 |   133.31 us |  1.8114 us |  1.6944 us |    212.6465 |           - |           - |           163.77 KB |\r\n| RepeatedFieldMessage_ParseDelimitedMessagesFromReadOnlySequence |           10 |   126.78 us |  0.8992 us |  0.7971 us |    212.6465 |           - |           - |           163.59 KB |\r\n|        RepeatedFieldMessage_ParseDelimitedMessagesFromByteArray |          100 | 1,332.55 us | 28.6365 us | 25.3855 us |   2126.9531 |           - |           - |          1636.12 KB |\r\n| RepeatedFieldMessage_ParseDelimitedMessagesFromReadOnlySequence |          100 | 1,273.07 us | 13.5838 us | 10.6054 us |   2126.9531 |           - |           - |          1635.94 KB |\r\n```\r\nAfter:\r\n```\r\n|                                                          Method | messageCount |       Mean |      Error |     StdDev | Gen 0/1k Op | Gen 1/1k Op | Gen 2/1k Op | Allocated Memory/Op |\r\n|---------------------------------------------------------------- |------------- |-----------:|-----------:|-----------:|------------:|------------:|------------:|--------------------:|\r\n|                         RepeatedFieldMessage_ParseFromByteArray |            ? |   6.127 us |  0.0373 us |  0.0330 us |     10.6354 |           - |           - |             8.25 KB |\r\n|                  RepeatedFieldMessage_ParseFromReadOnlySequence |            ? |   6.095 us |  0.0695 us |  0.0581 us |     10.4141 |           - |           - |             8.07 KB |\r\n|        RepeatedFieldMessage_ParseDelimitedMessagesFromByteArray |           10 |  60.599 us |  0.5330 us |  0.4725 us |    105.2246 |           - |           - |            80.88 KB |\r\n| RepeatedFieldMessage_ParseDelimitedMessagesFromReadOnlySequence |           10 |  59.789 us |  0.2847 us |  0.2377 us |    104.1260 |           - |           - |             80.7 KB |\r\n|        RepeatedFieldMessage_ParseDelimitedMessagesFromByteArray |          100 | 622.160 us | 12.3938 us | 20.7072 us |   1041.0156 |           - |           - |           807.21 KB |\r\n| RepeatedFieldMessage_ParseDelimitedMessagesFromReadOnlySequence |          100 | 597.545 us |  5.5646 us |  4.9328 us |   1041.0156 |           - |           - |           807.03 KB |\r\n```",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2020-04-22T21:12:55Z",
        "closed_at": "2020-05-15T16:55:15Z",
        "merged_at": "2020-05-15T16:55:17Z",
        "body": "Project import generated by Copybara\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 274,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-04-21T23:50:16Z",
        "closed_at": "2020-04-23T20:00:31Z",
        "merged_at": "2020-04-23T20:00:31Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 336,
        "deletions": 831,
        "changed_files": 12,
        "created_at": "2020-04-21T21:08:38Z",
        "closed_at": "2020-04-23T19:54:25Z",
        "merged_at": "2020-04-23T19:54:25Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 88,
        "deletions": 87,
        "changed_files": 11,
        "created_at": "2020-04-20T01:06:13Z",
        "closed_at": "2020-04-20T19:28:09Z",
        "merged_at": "2020-04-20T19:28:09Z",
        "body": "**Important**: this integration must be merged, not squashed!",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 52,
        "deletions": 17,
        "changed_files": 3,
        "created_at": "2020-04-18T00:32:19Z",
        "closed_at": "2020-04-20T22:51:06Z",
        "merged_at": "2020-04-20T22:51:06Z",
        "body": "Previously if you assigned 'nil' to a submessage in proto2\r\nthe field would be set to 'nil' but would still have its hasbit\r\nset. This was a clear bug so I'm fixing it outright, even though\r\nit is an observable behavior change.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 127,
        "deletions": 260,
        "changed_files": 31,
        "created_at": "2020-04-17T19:19:32Z",
        "closed_at": "2020-04-18T21:39:53Z",
        "merged_at": "2020-04-18T21:39:53Z",
        "body": "The previous one cannot build, because python3.6 was removed from\r\nstretch.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 476,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-04-16T09:12:10Z",
        "closed_at": "2020-04-23T19:59:52Z",
        "merged_at": "2020-04-23T19:59:52Z",
        "body": "Singular, non-message typed fields in proto3 experimentally support explicit presence tracking (see docs/field_presence.md for details).",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-04-16T05:00:55Z",
        "closed_at": "2020-04-16T16:22:53Z",
        "merged_at": "2020-04-16T16:22:53Z",
        "body": "Adds the `betterproto` Python module to the list of implementations.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 68,
        "deletions": 2,
        "changed_files": 11,
        "created_at": "2020-04-16T02:27:06Z",
        "closed_at": "2020-04-24T16:50:28Z",
        "merged_at": "2020-04-24T16:50:28Z",
        "body": "Split from #7027. This PR focuses on testing on Ruby 2.7, while #7027 focuses on building artifacts for Ruby 2.7.\r\n\r\nI guess someone needs to run `kokoro/linux/dockerfile/push_testing_images.sh` before running CI, because I modified a dockerfile in `kokoro/linux/dockerfile/test`?",
        "comments": 16
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2020-04-16T01:03:15Z",
        "closed_at": "2020-04-23T19:49:05Z",
        "merged_at": "2020-04-23T19:49:05Z",
        "body": "In Ruby, the oneof case returns a symbol with the name of the field that is set. These were not previously tested.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 159,
        "deletions": 109,
        "changed_files": 2,
        "created_at": "2020-04-15T15:37:34Z",
        "closed_at": "2020-04-15T17:22:06Z",
        "merged_at": "2020-04-15T17:22:06Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1652,
        "deletions": 209,
        "changed_files": 24,
        "created_at": "2020-04-15T11:01:40Z",
        "closed_at": "2020-04-24T16:39:15Z",
        "merged_at": "2020-04-24T16:39:15Z",
        "body": "This is the generator part of the C# proto3 optional fields work.\r\n\r\nStill to do:\r\n\r\n- Reflection API changes\r\n- Write unit tests against the (now generated) UnittestProto3Optional.cs",
        "comments": 20
    },
    {
        "merged": false,
        "additions": 88,
        "deletions": 9,
        "changed_files": 6,
        "created_at": "2020-04-15T07:11:22Z",
        "closed_at": "2021-10-13T01:41:13Z",
        "merged_at": null,
        "body": "This patch adds `packed: true` / `packed: false` options to `repeated` descriptor declaration, and uses that information when encoding packable fields.\r\n\r\n```ruby\r\n    add_message \"basic_test.TestMessage\" do\r\n      optional :optional_int32, :int32, 1\r\n      optional :optional_int64, :int64, 2\r\n      optional :optional_uint32, :uint32, 3\r\n      optional :optional_uint64, :uint64, 4\r\n      optional :optional_bool, :bool, 5\r\n      optional :optional_float, :float, 6\r\n      optional :optional_double, :double, 7\r\n      optional :optional_string, :string, 8\r\n      optional :optional_bytes, :bytes, 9\r\n      optional :optional_msg, :message, 10, \"basic_test.TestMessage2\"\r\n      optional :optional_enum, :enum, 11, \"basic_test.TestEnum\"\r\n      repeated :repeated_int32, :int32, 12, packed: true\r\n      repeated :repeated_int64, :int64, 13, packed: true\r\n      repeated :repeated_uint32, :uint32, 14, packed: true\r\n      repeated :repeated_uint64, :uint64, 15, packed: true\r\n      repeated :repeated_bool, :bool, 16, packed: true\r\n      repeated :repeated_float, :float, 17, packed: true\r\n      repeated :repeated_double, :double, 18, packed: true\r\n      repeated :repeated_string, :string, 19\r\n      repeated :repeated_bytes, :bytes, 20\r\n      repeated :repeated_msg, :message, 21, \"basic_test.TestMessage2\"\r\n      repeated :repeated_enum, :enum, 22, \"basic_test.TestEnum\", packed: true\r\n    end\r\n```\r\n\r\nTODO: implementation for JRuby",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 26,
        "deletions": 115,
        "changed_files": 3,
        "created_at": "2020-04-15T02:59:16Z",
        "closed_at": "2020-08-31T20:30:24Z",
        "merged_at": "2020-08-31T20:30:24Z",
        "body": "The current JS implementation doesn't comply with the following criteria:\r\n\r\n> Note that although there's usually no reason to encode more than one key-value pair for a packed repeated field, encoders must be prepared to accept multiple key-value pairs. In this case, the payloads should be concatenated. Each pair must contain a whole number of elements.\r\n> https://developers.google.com/protocol-buffers/docs/encoding#packed\r\n\r\n> Protocol buffer parsers must be able to parse repeated fields that were compiled as `packed` as if they were not packed, and vice versa. This permits adding `[packed=true]` to existing fields in a forward- and backward-compatible way.\r\n>\r\n> https://developers.google.com/protocol-buffers/docs/encoding#packed\r\n\r\nIn this PR, the parser checks `WireType` before parsing packable fields, and then always append to the existing array, instead of replacing it.\r\n\r\nFixes #1701.",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2020-04-14T15:50:11Z",
        "closed_at": "2020-04-14T22:19:42Z",
        "merged_at": "2020-04-14T22:19:42Z",
        "body": "@rafi-kamal @acozzette ",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2810,
        "deletions": 1964,
        "changed_files": 5,
        "created_at": "2020-04-09T22:02:56Z",
        "closed_at": "2020-04-11T16:46:21Z",
        "merged_at": "2020-04-11T16:46:21Z",
        "body": "A few APIs have changed.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2020-04-09T01:34:06Z",
        "closed_at": "2021-10-13T19:38:58Z",
        "merged_at": null,
        "body": "Target os: Android arm64-v8a\r\nError infomation:\r\n\r\n/home/android-sdk/ndk/21.0.6113669/toolchains/llvm/prebuilt/linux-x86_64/bin/clang++ --target=x86_64-none-linux-android24 --gcc-toolchain=/home/android-sdk/ndk/21.0.6113669/toolchains/llvm/prebuilt/linux-x86_64 --sysroot=/home/android-sdk/ndk/21.0.6113669/toolchains/llvm/prebuilt/linux-x86_64/sysroot -fPIC -g -DANDROID -fdata-sections -ffunction-sections -funwind-tables -fstack-protector-strong -no-canonical-prefixes -D_FORTIFY_SOURCE=2 -Wformat -Werror=format-security   -O2 -DNDEBUG  -Wl,--exclude-libs,libgcc_real.a -Wl,--exclude-libs,libatomic.a -static-libstdc++ -Wl,--build-id -Wl,--fatal-warnings -Wl,--no-undefined -Qunused-arguments  -shared -Wl,-soname,libprotobuf.so -o libprotobuf.so CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/any_lite.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/arena.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/extension_set.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/generated_enum_util.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/generated_message_table_driven_lite.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/generated_message_util.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/implicit_weak_message.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/io/coded_stream.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/io/io_win32.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/io/strtod.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/io/zero_copy_stream.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/io/zero_copy_stream_impl.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/io/zero_copy_stream_impl_lite.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/message_lite.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/parse_context.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/repeated_field.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/stubs/bytestream.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/stubs/common.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/stubs/int128.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/stubs/status.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/stubs/statusor.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/stubs/stringpiece.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/stubs/stringprintf.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/stubs/structurally_valid.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/stubs/strutil.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/stubs/time.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/wire_format_lite.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/any.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/any.pb.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/api.pb.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/compiler/importer.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/compiler/parser.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/descriptor.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/descriptor.pb.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/descriptor_database.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/duration.pb.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/dynamic_message.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/empty.pb.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/extension_set_heavy.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/field_mask.pb.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/generated_message_reflection.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/generated_message_table_driven.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/io/gzip_stream.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/io/printer.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/io/tokenizer.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/map_field.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/message.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/reflection_ops.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/service.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/source_context.pb.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/struct.pb.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/stubs/substitute.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/text_format.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/timestamp.pb.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/type.pb.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/unknown_field_set.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/util/delimited_message_util.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/util/field_comparator.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/util/field_mask_util.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/util/internal/datapiece.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/util/internal/default_value_objectwriter.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/util/internal/error_listener.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/util/internal/field_mask_utility.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/util/internal/json_escaping.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/util/internal/json_objectwriter.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/util/internal/json_stream_parser.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/util/internal/object_writer.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/util/internal/proto_writer.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/util/internal/protostream_objectsource.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/util/internal/protostream_objectwriter.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/util/internal/type_info.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/util/internal/type_info_test_helper.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/util/internal/utility.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/util/json_util.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/util/message_differencer.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/util/time_util.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/util/type_resolver_util.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/wire_format.cc.o CMakeFiles/libprotobuf.dir/home/protobuf/src/google/protobuf/wrappers.pb.cc.o /home/android-sdk/ndk/21.0.6113669/toolchains/llvm/prebuilt/linux-x86_64/sysroot/usr/lib/x86_64-linux-android/libz.a -latomic -lm \r\n/home/protobuf/src/google/protobuf/stubs/common.cc:150: error: undefined reference to '__android_log_write'\r\n/home/protobuf/src/google/protobuf/stubs/common.cc:158: error: undefined reference to '__android_log_write'\r\nclang++: error: linker command failed with exit code 1 (use -v to see invocation)\r\nmake[2]: *** [CMakeFiles/libprotobuf.dir/build.make:2127: libprotobuf.so] Error 1\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 797,
        "deletions": 201,
        "changed_files": 27,
        "created_at": "2020-04-08T19:09:48Z",
        "closed_at": "2020-04-08T20:19:02Z",
        "merged_at": "2020-04-08T20:19:02Z",
        "body": "**Important**: this integration must be merged, not squashed!",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 198,
        "deletions": 126,
        "changed_files": 5,
        "created_at": "2020-04-06T16:29:13Z",
        "closed_at": "2020-04-13T15:34:23Z",
        "merged_at": "2020-04-13T15:34:23Z",
        "body": "Preparations for https://github.com/protocolbuffers/protobuf/pull/7351.\r\n\r\n- make it clearer that the original \"SerializationBenchmark\" should only be used with standard language-agnostic benchmarking datasets.\r\n\r\n- turn WrapperBenchmark into a general-purpose benchmark for benchmarking parsing speed of various messages.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 21,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2020-04-04T17:18:11Z",
        "closed_at": "2020-04-07T17:27:13Z",
        "merged_at": "2020-04-07T17:27:13Z",
        "body": "This pull request contains 2 commit and both are small changes in `protobuf_generate` function in `protobuf-config.cmake.in` file:\r\n1- A one character commit to correct naming of files.\r\n2- A multiple line commit to correct generation of output file names to match how protoc selects output folders based on provided proto folders(by `-I` option).\r\nBoth changes are described in detail in commit comments.",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2020-04-02T17:21:24Z",
        "closed_at": "2020-04-06T15:33:50Z",
        "merged_at": "2020-04-06T15:33:50Z",
        "body": "This patch has almost no change in behaviour where users have not\r\npatched the implementation of new on either a specific proto object\r\nclass, or `Google::Protobuf::MessageExts::ClassMethods`. The default\r\nimplementation of `new`, and `rb_class_new_instance` have the same\r\nbehaviour.\r\n\r\nBy default when we call `new` on a class in Ruby, it goes to the `Class`\r\nclass's implementation:\r\n\r\n```ruby\r\nclass Foo\r\nend\r\n\r\n>> Foo.method(:new).owner\r\n=> Class\r\n```\r\n\r\nthe `Class` implementation of `new` is (pseudocode, it's actually in c):\r\n\r\n```ruby\r\nclass Class\r\n  def new(*args, &blk)\r\n    instance = alloc\r\n    instance.initialize(*args, &blk)\r\n    instance\r\n  end\r\nend\r\n```\r\n\r\n`rb_class_new_instance` does the same thing, it calls down to\r\n[`rb_class_s_new`](https://github.com/ruby/ruby/blob/v2_5_5/object.c#L2147),\r\nwhich calls `rb_class_alloc`, then `rb_obj_call_init`.\r\n\r\n`rb_funcall` is a variadic c function for calling a ruby method on an object,\r\nit takes:\r\n\r\n* A `VALUE` on to which the method should be called\r\n* An `ID` which should be an ID of a method, usually created with `rb_intern`,\r\n  to get an ID from a string\r\n* An integer, the number of arguments calling the  method with,\r\n* A number of `VALUE`s, to send to the method call.\r\n\r\n`rb_funcall` is the same as calling a method directly in Ruby, and will perform\r\nancestor chain respecting method lookup.\r\n\r\nThis means that in C extensions, if nobody has defined the `new` method on any\r\nclasses or modules in a class's inheritance chain calling\r\n`rb_class_new_instance` is the same as calling `rb_funcall(klass,\r\nrb_intern(\"new\"))`, *however* this removes the ability for users to define or\r\nmonkey patch their own constructors in to the objects created by the C\r\nextension.\r\n\r\nIn Ads, we define [`new`](https://git.io/JvFC9) on\r\n`Google::Protobuf::MessageExts::ClassMethods` to allow us to insert a\r\nmonkeypatch which makes it possible to assign primitive values to wrapper type\r\nfields (e.g. Google::Protobuf::StringValue). The monkeypatch we apply works for\r\nobjects that we create for the user via the `new` method. Before this commit,\r\nhowever, the patch does not work for the `decode` method, for the reasons\r\noutlined above. Before this commit, protobuf uses `rb_class_new_instance`.\r\n\r\nAfter this commit, we use `rb_funcall(klass, rb_intern(\"new\"), 0);` to construct\r\nprotobuf objects during decoding. While I haven't measured it this will have\r\na very minor performance impact for decoding (`rb_funcall` will have to go to the\r\nmethod cache, which `rb_class_new_instance` will not). This does however do\r\nthe \"more rubyish\" thing of respecting the protobuf object's inheritance chain\r\nto construct them during decoding. What this means practically is that the monkeypatch where we override new works for the ads library in decoding. Other users could override new on `Google::Protobuf::MessageExts::ClassMethods` to introduce their own behaviours\r\n\r\nI have run both Ads and Cloud's test suites for Ruby libraries against this\r\npatch, as well as the protobuf Ruby gem's test suite locally. I also tested what happens if a user does not return the right object type from their overriden new method. A reasonable exception is produced:  `TypeError: wrong argument type Object (expected Message)`, and no crash occurs in the C code.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 6088,
        "deletions": 2573,
        "changed_files": 76,
        "created_at": "2020-04-02T14:37:57Z",
        "closed_at": "2020-05-05T14:57:52Z",
        "merged_at": "2020-05-05T14:57:52Z",
        "body": "A big refactor of C# parsing logic to allow parsing from ReadOnlySequence<byte> (which would allow parsing directly from the data as received on the wire without requiring to copy the buffers and thus reducing the GC pressure a lot).\r\n\r\nMain changes:\r\n- refactor out the parsing logic to helper classes (to avoid any duplication of the parsing logic)\r\n- store all the parsing state into a struct (currently called ParserInternalState)\r\n- introduce a ParseContext ref struct that has public methods, but they are only meant to be invoked by the generated code\r\n- generate a InternalMergeFrom(ref ParseContext ctx) method, which has the actual parsing code (and is only supposed to be called by the generated code, never directly by the users.\r\n- allow easy and fast conversion from CodedInputStream into a ParseContext (because the parsing state is encapsulated in the ParserInternalState, so bringing the state between the two only requires copying a struct.\r\n- the original IMessage.MergeFrom(CodedInputStream cis) methods redirects to InternalMergeFrom(ref ParseContext). This transition has some (very small = copying a struct) overhead, but is basically only done once in the entire parsing tree, so that seem acceptable.\r\n- all the public APIs that take CodedInputStream still behave exactly the same.\r\n- compatibility with old generated code: if one uses old generated code against a newer runtime, everything will still work, but there might be some performance penalty (see benchmarks). Regenerating the code will speed things up.\r\n- the public API increase is kept as small as possible. Basically the only new method we provide is Parse.ParseFrom(ReadOnlySequence<byte> byte) as entry point for the more efficient parsing. There are a few other additions (parsing maps, repeated fields etc.), but they are only meant to be invoked by the generated code.\r\n- this PR only addresses memory-efficient parsing. Memory efficient serialization can be added in a followup PR.\r\n\r\nThis PR drops netstandard1.0 support (which doesn't support the Span type we need) and adds netstandard1.1 instead. The impact on supported platforms should be minimal (almost everyone supports netstandard2.0 these days anyway).\r\n\r\nBasically this PR a new and simpler take on https://github.com/protocolbuffers/protobuf/pull/5888 (which is much bigger, introduces much more code duplication and leads to bigger public API increase).",
        "comments": 20
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-04-01T22:23:19Z",
        "closed_at": "2020-04-02T16:07:17Z",
        "merged_at": "2020-04-02T16:07:17Z",
        "body": "Fixes #7339.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 0,
        "changed_files": 166,
        "created_at": "2020-04-01T21:14:50Z",
        "closed_at": "2020-04-01T22:28:26Z",
        "merged_at": "2020-04-01T22:28:26Z",
        "body": "Git only tracks the 'x' (executable) bit on each file. Prior to this\r\nCL, our files were a random mix of executable and non-executable.\r\nThis change imposes some order by making files executable if and only\r\nif they have shebang (#!) lines at the beginning.\r\n\r\nWe don't have any executable binaries checked into the repo, so\r\nwe shouldn't need to worry about that case.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 9571,
        "deletions": 6747,
        "changed_files": 236,
        "created_at": "2020-04-01T00:10:25Z",
        "closed_at": "2020-04-01T16:42:58Z",
        "merged_at": "2020-04-01T16:42:58Z",
        "body": "**Important:** this integration must be merged, *not* squashed!",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-03-29T01:21:46Z",
        "closed_at": "2021-03-05T23:30:41Z",
        "merged_at": null,
        "body": "Add composer instructions update README.md",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 6677,
        "deletions": 4502,
        "changed_files": 202,
        "created_at": "2020-03-27T04:06:54Z",
        "closed_at": "2020-04-01T18:44:55Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2020-03-27T02:23:54Z",
        "closed_at": "2021-10-13T01:40:24Z",
        "merged_at": null,
        "body": "Add descriptor.proto to javalite #7331",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2020-03-25T05:21:57Z",
        "closed_at": "2020-08-20T21:42:54Z",
        "merged_at": "2020-08-20T21:42:53Z",
        "body": "UnknownField::AddAll() is called (multiple times) from UnknownField::MergeFrom(). The `extras` parameter is one of: `varintList`, `fixed32List`, `fixed64List`, `lengthDelimitedList`, or `groupList`. All of these members can be null, and are appropriately checked in other usage. If attempting to parse a proto with unknown extensions, and exception is thrown (NRE).\r\nThis adds the appropriate null check inside UnknownField::AddAll().",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-03-23T09:09:25Z",
        "closed_at": "2021-03-05T23:30:49Z",
        "merged_at": null,
        "body": "",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 1089,
        "changed_files": 10,
        "created_at": "2020-03-21T18:37:50Z",
        "closed_at": "2021-02-17T18:41:17Z",
        "merged_at": null,
        "body": "This greatly simplifies the code and will help us iterate on performance improvements.\r\n\r\nPHP 7.0 and 5.6 have not been supported by the PHP developers since December 2018.\r\n\r\nThere is no change to the pure-PHP implementation at this time, so that is still available (for now) for users on old PHP versions.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-03-20T04:24:17Z",
        "closed_at": "2021-10-15T05:25:11Z",
        "merged_at": null,
        "body": "When building on VS2019 and using CMake, the proto generation creates an output directory structure that matches the input side. The MSBuild is given the correct information, but protoc will put it in the current CMAKE binary path without the correct structure.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-03-19T10:29:36Z",
        "closed_at": "2021-10-05T05:19:09Z",
        "merged_at": null,
        "body": "Unit test case `TextFormatMapTest.DynamicMessage` is failing due to the line endings when checking out on Windows with `autocrlf = true` settings in Git. Git will automatically convert the `src/google/protobuf/testdata/map_test_data.txt` to CRLF line endings. \r\n\r\nHowever, in the code the generated data to compare against expected data (read directly from map_test_data.txt) uses LF line endings, leading to the error.\r\n\r\nThis solution cleans line endings in the read string.\r\n\r\nfixes #5136 ",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-03-19T10:21:13Z",
        "closed_at": "2020-03-20T15:49:49Z",
        "merged_at": "2020-03-20T15:49:48Z",
        "body": "Unit test `CommandLineInterfaceTest.Win32ErrorMessage` fails on non-English Windows due to the hardcoded English in the unit test.\r\n\r\nThis PR forces the Win32 error message produced to be in U.S. English, so the tests passes. Alternative solution can be to use messages in proper language to compare against the actual string.\r\n\r\nFixes #4317",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-03-18T16:14:27Z",
        "closed_at": "2020-03-19T21:20:02Z",
        "merged_at": "2020-03-19T21:20:02Z",
        "body": "SummaFT develops a protoc plugin for both internal and external use that allows specific extensions to be made to extend the platform for GraphQL and OpenAPI 3.",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 13,
        "changed_files": 1,
        "created_at": "2020-03-17T18:54:36Z",
        "closed_at": "2020-03-18T23:29:29Z",
        "merged_at": "2020-03-18T23:29:29Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2020-03-17T06:15:51Z",
        "closed_at": "2020-03-17T19:16:12Z",
        "merged_at": "2020-03-17T19:16:12Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-03-17T01:18:53Z",
        "closed_at": "2020-03-19T15:40:40Z",
        "merged_at": "2020-03-19T15:40:40Z",
        "body": "Note, I've selected 1080 assuming #7308 gets merged first, which registers 1079.\n\nI've requested a block of 5 extension numbers. We already have two concrete extensions that we need ids for. Our project is under active development and we can imagine a number of other extensions that we will want in future, so we thought we'd start by registering a block of 5, instead of raising a new PR here each time we need a new one. See [here](https://github.com/cloudstateio/cloudstate/issues/20) for discussion on that.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-03-17T00:47:00Z",
        "closed_at": "2020-03-17T15:27:21Z",
        "merged_at": "2020-03-17T15:27:20Z",
        "body": "Fixes issue #7302.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 178,
        "deletions": 113,
        "changed_files": 6,
        "created_at": "2020-03-16T01:01:00Z",
        "closed_at": "2020-03-17T06:09:57Z",
        "merged_at": "2020-03-17T06:09:57Z",
        "body": "Project import generated by Copybara\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 20,
        "changed_files": 3,
        "created_at": "2020-03-15T13:03:51Z",
        "closed_at": "2020-05-11T17:01:01Z",
        "merged_at": "2020-05-11T17:01:01Z",
        "body": "The primary reason to drop that compatibility is because Bazel is\r\nadding unconditionally -parameters option that is not compatible\r\nwith JDK 7. This pollutes the build log with annoying warnings:\r\n\r\n  warning: -parameters is not supported for target value 1.7. Use 1.8 or later.\r\n\r\nSecond reason is that nobody in the wild relies on JDK 7 any more\r\nbecause it was discontinued years ago.\r\n\r\nTest Plan:\r\n\r\nBuild :protobuf_java and confirm, that there are no warnings any more\r\nand that major byte version 52 is produced, that corresponds to Java 8:\r\n\r\n  $ bazel build protobuf_java\r\n  $ javap -v -cp bazel-bin/java/core/libcore.jar com.google.protobuf.Any | grep major\r\n  major version: 52",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 728,
        "deletions": 38,
        "changed_files": 8,
        "created_at": "2020-03-13T16:58:03Z",
        "closed_at": "2021-10-20T23:55:21Z",
        "merged_at": null,
        "body": "",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2020-03-11T20:05:02Z",
        "closed_at": "2020-03-12T23:32:03Z",
        "merged_at": null,
        "body": " Fixed name collisions between `winsock2.h` (and `windows.h`) min and max macros and `std::numeric_limits<uint32_t>::max/min` generated for protobuf enums.\r\n\r\n#6683 ",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 377,
        "deletions": 286,
        "changed_files": 8,
        "created_at": "2020-03-10T03:54:56Z",
        "closed_at": "2020-03-10T19:57:31Z",
        "merged_at": "2020-03-10T19:57:31Z",
        "body": "This change updates docstrings and comments so that they will produce nicer\r\nformatting and cross-references from Sphinx. There are a few broad categories of\r\nchanges:\r\n\r\n- Paramter and attribute docs are updated so that types will be recognized by\r\n  Napoleon (https://sphinxcontrib-napoleon.readthedocs.io/en/latest/) This\r\n  usually just means moving a colon in the docstring, so\r\n  `name: (type) description` becomes `name (type): description`.\r\n\r\n- References to other symbols can be cross-references if they have the right\r\n  format. For example, \"attr_name\" might become \":attr:`attr_name`\".\r\n  https://www.sphinx-doc.org/en/master/usage/restructuredtext/domains.html#cross-referencing-python-objects\r\n\r\n- For fenced code blocks, adding a double-colon `::` signifies a literal block.\r\n  https://www.sphinx-doc.org/en/master/usage/restructuredtext/basics.html#literal-blocks\r\n\r\n- Some bits of docstrings move from docstring to comments. For TODOs, this\r\n  means we won't be putting stale (or otherwise unrelated) noise into the docs.\r\n  For `Message.DESCRIPTOR`, the change means it gets appropriate documentation.\r\n\r\n- There are some wording tweaks for consistency, and some new docstrings\r\n  (especially for methods in Message).\r\n\r\nFor types, I used the convention of `list[Foo]` and `dict(foo, bar)`, which seem\r\nto be common among other Python rst docstrings. Sphinx should generally\r\nrecognize both, and cross-links them correctly (both internally and to Python\r\nlibrary documentation). Upgrading to Python3-style type annotations would allow\r\nus to use `sphinx-autodoc-typehints`; the changes in this commit are very\r\nsimilar to typing-based hints.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 49,
        "deletions": 8,
        "changed_files": 3,
        "created_at": "2020-03-10T03:28:38Z",
        "closed_at": "2020-04-23T04:41:13Z",
        "merged_at": "2020-04-23T04:41:13Z",
        "body": "This includes some changes to generate_docs.py to explicitly allow named modules.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2020-03-10T00:18:44Z",
        "closed_at": "2020-03-13T07:58:36Z",
        "merged_at": null,
        "body": "Project import generated by Copybara\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2020-03-10T00:03:34Z",
        "closed_at": "2020-03-10T17:09:02Z",
        "merged_at": null,
        "body": "Project import generated by Copybara\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 480,
        "deletions": 13,
        "changed_files": 16,
        "created_at": "2020-03-09T20:14:34Z",
        "closed_at": "2020-03-11T16:52:34Z",
        "merged_at": "2020-03-11T16:52:34Z",
        "body": "Fixes #7238",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 31,
        "deletions": 13,
        "changed_files": 2,
        "created_at": "2020-03-09T07:24:15Z",
        "closed_at": "2020-03-11T17:29:38Z",
        "merged_at": "2020-03-11T17:29:38Z",
        "body": "I found this when doing some refactorings to how parsing code works.\r\n\r\nThe purpose of the following snipped at the end of CodedInputStream.ReadTag is unclear.\r\nI don't see a reason why this would be necessary and it actually seems wrong.\r\n- What it does is that if we just read a tag that that is immediately followed by the limit of the stream (but the tag itself is still readable just fine) we will artificially return a tag of 0 and there seems to be no reason we we would want that\r\n- this also potentially affects performance (one extra check after reading a tag).\r\n- if I remove the check, the tests still seem to be passing.\r\n```\r\nif (ReachedLimit)\r\n{\r\n    return 0;\r\n}\r\n```\r\n\r\nThe snippet was by #5183\r\nhttps://github.com/protocolbuffers/protobuf/commit/6f73c509365fcb9bca614f31d0d1234ff1323b58#diff-1d948236189c1eb142de5ed1ed631a40R386\r\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2020-03-08T11:52:06Z",
        "closed_at": "2020-10-13T22:15:09Z",
        "merged_at": "2020-10-13T22:15:09Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2020-03-07T19:27:04Z",
        "closed_at": "2021-03-05T23:30:56Z",
        "merged_at": null,
        "body": "",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 255,
        "deletions": 1,
        "changed_files": 16,
        "created_at": "2020-03-05T20:45:11Z",
        "closed_at": "2020-05-11T07:43:30Z",
        "merged_at": null,
        "body": "Adds:\r\n  * IExtendableMessage.TryGetExtension\r\n  * *Descriptor.TryGetOption",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-03-05T14:22:25Z",
        "closed_at": "2020-03-10T20:05:02Z",
        "merged_at": "2020-03-10T20:05:02Z",
        "body": "This eliminates an ODR violation where users compile and install\r\nProtobuf's C++ runtime without RTTI but do not define\r\nGOOGLE_PROTOBUF_NO_RTTI when compiling their project with\r\nthe generated code.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 266,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2020-03-05T11:12:28Z",
        "closed_at": "2020-03-12T18:11:40Z",
        "merged_at": "2020-03-12T18:11:40Z",
        "body": "- useful for measuring the maximum theoretical raw parsing speed\r\n- currently only for CodedInputStream, other implementations can be added later.",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2020-03-04T23:30:14Z",
        "closed_at": "2020-03-09T21:41:39Z",
        "merged_at": null,
        "body": "Compiling protoc generated code on Windows usually leads to errors because of clash between min/max macros defined in Windows SDK headers and the std:: min/max methods.\r\n\r\nGenerated protobuf code will include parentheses around min and max methods (which are used in enums) to fix this.\r\n\r\nFixes #6174\r\n\r\nPS: It's not so easy for consumers of protobuf code to just define `NOMINMAX` to get rid of this issue as this will cause a lot of Windows code to not compile correctly.\r\n\r\nC++\r\nRelease Notes: No",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-03-04T18:06:16Z",
        "closed_at": "2020-05-08T23:59:56Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-03-03T08:40:19Z",
        "closed_at": "2021-10-16T03:12:00Z",
        "merged_at": "2021-10-16T03:12:00Z",
        "body": "After https://github.com/protocolbuffers/protobuf/pull/5735, something like\r\n\r\n```proto\r\noption ruby_package = \"SomeTopLevelPb\";\r\n```\r\n\r\nleads to the following warning with false description:\r\n\r\n```\r\n[libprotobuf WARNING ../../../../../src/google/protobuf/compiler/ruby/ruby_generator.cc:417] ruby_package option should be in the form of: 'A::B::C' and not 'A.B.C'\r\n```\r\n\r\nThis patch suppresses the warning as this warning is not helpful in this case.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2020-03-02T21:42:14Z",
        "closed_at": "2020-03-02T23:11:44Z",
        "merged_at": "2020-03-02T23:11:44Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 268,
        "deletions": 0,
        "changed_files": 4,
        "created_at": "2020-03-02T01:35:27Z",
        "closed_at": "2021-10-21T20:54:54Z",
        "merged_at": null,
        "body": "#7216 prototyping\r\n\r\nHi, here's a Java util to validate json data, it basically traverses dynamic json tree to examine every possible mismatch, current supported json type includes: `number/string/bool/null/list/struct`.\r\n\r\n**Usage**\r\nUse `JsonValidator.validate(Value, Class)` as static function\r\n```java\r\nValue.Builder builder = Value.newBuilder();\r\nmergeFromJson(\"JSONSTRING\", builder);\r\nList<String> result = JsonValidator.validate(builder.build(), TestJsonValidator.class);\r\n```\r\n\r\n**Output**\r\nGenerate following mismatch warnings:\r\n```\r\n<field> supposed to be object but not.\r\n<field> supposed to be list but not.\r\n<field> supposed to be map but not.\r\n<field> supposed to be string but not.\r\n<field> supposed to be numeric but not.\r\n<field> supposed to be boolean but not.\r\n```\r\nThrow following exceptions\r\n```\r\nUnsupportedOperationException - Java type is not supported\r\nerr message: Cannot convert protobuf type: unsupported type <java type>\r\nUnsupportedOperationException - dynamic map key or value is null\r\nerr message: Both map key and value are required.\r\n```\r\n\r\nSome tunable behavior/engineering opportunities \r\n- It collects all mismatches(warnings) into a list.\r\n- It does not differentiate fields with same name (e.g., heterogeneous list, nested struct). \r\n- For null value in json data, it skips further validation on that field. \r\n- It skips protobuf \"optional\" field if json data doesn't have it. (commented out)\r\n- Format of warnings",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 38,
        "deletions": 9,
        "changed_files": 3,
        "created_at": "2020-02-29T00:48:16Z",
        "closed_at": "2020-03-11T18:31:29Z",
        "merged_at": "2020-03-11T18:31:30Z",
        "body": "Project import generated by Copybara\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 216,
        "deletions": 169,
        "changed_files": 9,
        "created_at": "2020-02-28T21:38:55Z",
        "closed_at": "2021-06-29T17:00:01Z",
        "merged_at": "2021-06-29T17:00:01Z",
        "body": "release notes: yes\r\n\r\nUpdates the list of reserved names to be consistent with the [official PHP documentation](https://www.php.net/manual/en/reserved.other-reserved-words.php)\r\n\r\nEdit: Updated with \"match\" for PHP 8.0 and \"fn\" for PHP 7.4",
        "comments": 13
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 11,
        "changed_files": 4,
        "created_at": "2020-02-28T20:59:39Z",
        "closed_at": "2020-03-10T00:00:54Z",
        "merged_at": "2020-03-10T00:00:55Z",
        "body": "Project import generated by Copybara\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2020-02-28T20:48:27Z",
        "closed_at": "2020-03-02T19:59:54Z",
        "merged_at": null,
        "body": "Project import generated by Copybara\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-02-27T20:20:05Z",
        "closed_at": "2020-02-28T02:55:43Z",
        "merged_at": "2020-02-28T02:55:43Z",
        "body": "Project import generated by Copybara\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 23,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-02-27T19:39:54Z",
        "closed_at": "2020-02-27T23:56:08Z",
        "merged_at": "2020-02-27T23:56:08Z",
        "body": "Project import generated by Copybara\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 25,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-02-26T13:18:50Z",
        "closed_at": "2020-05-20T09:41:21Z",
        "merged_at": null,
        "body": "When creating a protobuf map<key,value> in c++ there is no way to avoid rvalues being copied. This impacts performance expecially for large value types.\r\n\r\n### An example\r\nConsider this proto file:\r\n```\r\nsyntax = \"proto3\";\r\npackage example;\r\n\r\nmessage mapMessage {\r\n  map<uint64,string> my_map = 1;\r\n}\r\n```\r\n\r\nand this source code:\r\n```\r\ninclude \"ExampleProto.pb.h\"\r\n\r\nint main()\r\n{\r\n    example::mapMessage msg;\r\n    msg.mutable_my_map()->insert({ 10U, std::string(\"X\", 1000000U) });\r\n}\r\n```\r\n\r\noutput AS IS when analyzed with valgrind memcheck\r\n\r\n```\r\n==29246== Memcheck, a memory error detector\r\n==29246== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\r\n==29246== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info\r\n==29246== HEAP SUMMARY:\r\n==29246==     in use at exit: 3,640 bytes in 55 blocks\r\n==29246==   total heap usage: 734 allocs, 679 frees, 3,042,616 bytes allocated\r\n\r\n```\r\n\r\n### Remove first unneeded copy\r\n\r\nafter adding\r\n```\r\n  MapPair(Key&& other_first, T&& other_second)\r\n      : first(std::move(other_first)), second(std::move(other_second)) {}\r\n```\r\n\r\noutput when analyzed with valgrind memcheck:\r\n```\r\n==29167== Memcheck, a memory error detector\r\n==29167== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\r\n==29167== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info\r\n==29167== HEAP SUMMARY:\r\n==29167==     in use at exit: 3,640 bytes in 55 blocks\r\n==29167==   total heap usage: 733 allocs, 678 frees, 2,042,600 bytes allocated\r\n```\r\n\r\n### Remove second unneeded copy\r\n\r\nafter adding:\r\n`  MapPair(MapPair&& other) : first(std::move(other.first)), second(std::move(other.second)) {}`\r\nand  \r\n```\r\n  std::pair<iterator, bool> insert(value_type&& value) {\r\n    std::pair<typename InnerMap::iterator, bool> p =\r\n        elements_->insert(value.first);\r\n    if (p.second) {\r\n      p.first->value() = CreateValueTypeInternal(std::move(value));\r\n    }\r\n    return std::pair<iterator, bool>(iterator(p.first), p.second);\r\n  }\r\n```\r\nand\r\n```\r\n  value_type* CreateValueTypeInternal(value_type&& value) {\r\n    if (arena_ == NULL) {\r\n      return new value_type(std::move(value));\r\n    } else {\r\n      value_type* p = reinterpret_cast<value_type*>(\r\n          Arena::CreateArray<uint8>(arena_, sizeof(value_type)));\r\n      Arena::CreateInArenaStorage(const_cast<Key*>(&p->first), arena_);\r\n      Arena::CreateInArenaStorage(&p->second, arena_);\r\n      const_cast<Key&>(p->first) = value.first;\r\n      p->second = std::move(value.second);\r\n      return p;\r\n    }\r\n  }\r\n```\r\noutput when analyzed with valgrind memcheck:\r\n```\r\n==28734== Memcheck, a memory error detector\r\n==28734== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\r\n==28734== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info\r\n==28734== HEAP SUMMARY:\r\n==28734==     in use at exit: 3,640 bytes in 55 blocks\r\n==28734==   total heap usage: 732 allocs, 677 frees, 1,042,584 bytes allocated\r\n```",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 12182,
        "deletions": 0,
        "changed_files": 127,
        "created_at": "2020-02-25T23:40:51Z",
        "closed_at": "2021-03-06T00:55:13Z",
        "merged_at": null,
        "body": "Hello protobuf team!\r\nThis is @lowasser's implementation of protobuf for Kotlin, and follows this [Kotlin Design](https://github.com/lowasser/protobuf/blob/master/kotlin-design.md) doc.\r\n \r\nThe libraries are built with Gradle, and fall into two major components:\r\n   - `kotlin/protoc-plugin-common` - Tools for building Kotlin using **protoc**, used by both `proto-kotlin` (below) and [`grpc-kotlin`](https://github.com/grpc/grpc-kotlin) (the gRPC implementation for Kotlin which will be added to the grpc repo)\r\n   - `kotlin/protobuf` - The **protoc** plugin for generating native kotlin classes using protos.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 75624,
        "deletions": 23863,
        "changed_files": 986,
        "created_at": "2020-02-25T02:23:12Z",
        "closed_at": "2020-06-02T12:44:03Z",
        "merged_at": null,
        "body": "protobufTest",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2020-02-24T16:38:35Z",
        "closed_at": "2020-03-09T22:03:09Z",
        "merged_at": "2020-03-09T22:03:08Z",
        "body": "Added an optional `PLUGIN` argument to `protobuf_generate` which\r\nwill be forwarded to the `--plugin=` argument of `protoc`.\r\n\r\nThis can be used, among other things, to run `protoc` with the grpc extension, as is done here:\r\nhttps://github.com/faaxm/exmpl-cmake-grpc/blob/master/proto/CMakeLists.txt\r\n\r\nAddresses issue #5493.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2020-02-23T23:11:50Z",
        "closed_at": "2021-10-13T12:45:34Z",
        "merged_at": "2021-10-13T12:45:34Z",
        "body": "Fixes #7241 ",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 57,
        "deletions": 11,
        "changed_files": 3,
        "created_at": "2020-02-21T13:50:04Z",
        "closed_at": "2020-03-02T23:15:22Z",
        "merged_at": "2020-03-02T23:15:22Z",
        "body": "This change updates the gtest-version used by Bazel.\r\nAlso, `//external:{gtest,gtest_main}` is deprecated so we can remove some\r\nof the uses of the discouraged `bind` function.\r\n\r\nRELNOTES[bazel]: Starting with Protobuf 3.13.0, building and running\r\nProtobuf tests requires `@com_google_googletest//:{gtest,gtest_main}`\r\ninstead of `//external:{gtest,gtest_main}`. Use\r\n`--@com_google_protobuf//:incompatible_use_com_google_googletest=true`\r\nto verify your workspace is not affected by this change.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-02-21T08:17:23Z",
        "closed_at": "2021-10-14T16:45:40Z",
        "merged_at": "2021-10-14T16:45:40Z",
        "body": "Protobuf source files use utf-8 encoding.\r\nBut, Visual Studio assumes that the source files is encoded using the current user code page.\r\n\r\nThis PR sets the source and executable charset to utf-8 when Visual Studio 2015 or later.\r\n\r\nrefs: #4762\r\n\r\nsee also:\r\nhttps://docs.microsoft.com/en-us/cpp/build/reference/utf-8-set-source-and-executable-character-sets-to-utf-8?view=vs-2015\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-02-21T03:50:32Z",
        "closed_at": "2021-10-13T16:41:37Z",
        "merged_at": null,
        "body": "release notes: no",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2020-02-20T20:47:54Z",
        "closed_at": "2020-02-21T22:49:19Z",
        "merged_at": "2020-02-21T22:49:19Z",
        "body": "Merge with master instead of 3.11.x branch.\r\nOld PR: https://github.com/protocolbuffers/protobuf/pull/7168",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 147,
        "deletions": 59,
        "changed_files": 42,
        "created_at": "2020-02-19T00:34:54Z",
        "closed_at": "2020-02-19T01:39:41Z",
        "merged_at": "2020-02-19T01:39:41Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-02-18T23:25:20Z",
        "closed_at": "2020-02-19T19:33:48Z",
        "merged_at": "2020-02-19T19:33:48Z",
        "body": "JsonStreamParser::GetNextTokenType() uses HasPrefixString a lot on StringPiece as input. For each call two std::strings are constructed, compared and destroyed. Parsing of json-files with 50-60 MB in debug mode takes minutes.\r\n\r\nWith this modification the speed is comparable with other Json parsers.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 33,
        "deletions": 31,
        "changed_files": 2,
        "created_at": "2020-02-15T12:34:50Z",
        "closed_at": "2020-03-04T17:25:43Z",
        "merged_at": "2020-03-04T17:25:43Z",
        "body": "Bazel had a native `cc_proto_library` for more than 2 years now.\r\nThis is the first step towards removing that rule from the Protobuf\r\nrepo.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 41,
        "deletions": 39,
        "changed_files": 9,
        "created_at": "2020-02-15T00:14:24Z",
        "closed_at": "2021-10-21T20:27:40Z",
        "merged_at": "2021-10-21T20:27:40Z",
        "body": "Update the Go example to use Go modules: Move the example into a\r\ndirectory containing a go.mod file, change the installation instructions\r\nto use \"go install\".\r\n\r\nAdd a go_package option to addressbook.proto.\r\n\r\nUpdate examples to use the Go APIv2 package\r\n(google.golang.org/protobuf/proto).",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2020-02-14T19:04:11Z",
        "closed_at": "2021-04-06T17:56:11Z",
        "merged_at": null,
        "body": "Project import generated by Copybara\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 108,
        "deletions": 8,
        "changed_files": 3,
        "created_at": "2020-02-14T08:39:24Z",
        "closed_at": "2020-02-14T18:17:06Z",
        "merged_at": "2020-02-14T18:17:06Z",
        "body": "Backports https://github.com/protocolbuffers/protobuf/pull/7132",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2020-02-13T02:10:51Z",
        "closed_at": "2020-02-13T19:49:33Z",
        "merged_at": null,
        "body": "Building protoc with Xcode 11.3 gives an error: `ld: library not found for -latomic`\r\n\r\nSponge link: https://sponge.corp.google.com/target?id=c9ac8abf-af0c-453c-a027-18720243aa58&target=protobuf%2Fgithub%2F3.11.x%2Frelease%2Fprotoc%2Fmacos%2Frelease&searchFor=",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 48,
        "deletions": 34,
        "changed_files": 31,
        "created_at": "2020-02-12T21:28:30Z",
        "closed_at": "2020-02-12T22:41:17Z",
        "merged_at": "2020-02-12T22:41:16Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-02-12T20:51:59Z",
        "closed_at": "2020-02-12T22:41:32Z",
        "merged_at": "2020-02-12T22:41:32Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 20,
        "changed_files": 3,
        "created_at": "2020-02-12T19:47:05Z",
        "closed_at": "2020-02-12T21:27:37Z",
        "merged_at": "2020-02-12T21:27:37Z",
        "body": "* Fixed Ruby JSON serialization of 0/empty wrapper fields.\r\n\r\n* Removed newly-passing conformance tests from the failure list.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 165,
        "deletions": 21,
        "changed_files": 3,
        "created_at": "2020-02-12T00:14:33Z",
        "closed_at": "2020-02-12T20:37:20Z",
        "merged_at": "2020-02-12T20:37:20Z",
        "body": "* Add failing tests for issues with wrapped values where the value is the default\r\n\r\n* Add test for wrapped values without a value set\r\n\r\n* Bugfix for wrapper types with default values.\r\n\r\nThe previous optimizations for wrapper types had a bug that prevented\r\nwrappers from registering as \"present\" if the \"value\" field was not\r\npresent on the wire.\r\n\r\nIn practice the \"value\" field will not be serialized when it is zero,\r\naccording to proto3 semantics, but due to the optimization this\r\nprevented it from creating a new object to represent the presence of the\r\nfield.\r\n\r\nThe fix is to ensure that if the wrapper message is present on the wire,\r\nwe always initialize its value to zero.\r\n\r\nCo-authored-by: Dan Quan <dan@quan.io>",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2020-02-11T19:19:47Z",
        "closed_at": "2020-02-11T20:59:50Z",
        "merged_at": "2020-02-11T20:59:50Z",
        "body": "Lots of CI tests have been failing recently with error messages like\r\nthis from \"docker pull\":\r\n\r\n  Error response from daemon: unexpected EOF\r\n\r\nThis seems to be an issue affecting other projects as well:\r\nhttps://forums.docker.com/t/docker-pull-causes-error-response-from-daemon-unexpected-eof/88608\r\n\r\nThis commit tries to mitigate the problem by periodically retrying\r\nfailed Docker pulls.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 20,
        "changed_files": 3,
        "created_at": "2020-02-11T16:32:48Z",
        "closed_at": "2020-02-11T21:18:33Z",
        "merged_at": "2020-02-11T21:18:33Z",
        "body": "Fixes: https://github.com/protocolbuffers/protobuf/issues/6903\r\nFixes: https://github.com/protocolbuffers/protobuf/issues/6754",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2020-02-11T15:31:37Z",
        "closed_at": "2020-02-12T21:09:00Z",
        "merged_at": "2020-02-12T21:09:00Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 165,
        "deletions": 21,
        "changed_files": 3,
        "created_at": "2020-02-11T03:25:32Z",
        "closed_at": "2020-02-11T16:20:02Z",
        "merged_at": "2020-02-11T16:20:01Z",
        "body": "The previous optimizations for wrapper types had a bug that prevented    \r\nwrappers from registering as \"present\" if the \"value\" field was not    \r\npresent on the wire.    \r\n    \r\nIn practice the \"value\" field will not be serialized when it is zero,    \r\naccording to proto3 semantics, but due to the optimization this    \r\nprevented it from creating a new object to represent the presence of the    \r\nfield.    \r\n    \r\nThe fix is to ensure that if the wrapper message is present on the wire,    \r\nwe always initialize its value to zero.\r\n\r\nFixes https://github.com/protocolbuffers/protobuf/issues/7029",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 387,
        "deletions": 145,
        "changed_files": 8,
        "created_at": "2020-02-10T19:31:32Z",
        "closed_at": "2020-02-11T23:44:41Z",
        "merged_at": "2020-02-11T23:44:41Z",
        "body": "Instead of calling initOnce of dependencies, initialize metadata of dependencies in the same file.\r\n\r\nNeeds to pass aggregate_metadata option to protoc to trigger, e.g.:\r\n--php_out=aggregate_metadata=foo#bar:generated_dir\r\nFor each input file, transitive dependencies (including itself), whose package name has the prefix of foo or bar, will be aggregated, in which their metadata string will be aggregated in the same internalAddGeneratedFile call. For other dependencies, initOnce is called as before.\r\n\r\nThis feature is EXPERIMENTAL. DO NOT USE!!!",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 295,
        "deletions": 177,
        "changed_files": 12,
        "created_at": "2020-02-08T13:37:56Z",
        "closed_at": "2020-02-13T21:04:15Z",
        "merged_at": "2020-02-13T21:04:15Z",
        "body": "This change moves `java_library` targets from the top-level BUILD file\r\ninto `//java/{core,lite,util}` and declares `alias` targets to point to\r\ntheir new locations (hence, this is not a breaking change).\r\n\r\nThis will allow users that don't use Java to stop depending on\r\n`@rules_java` (e.g. as requested in\r\nhttps://github.com/bazelbuild/rules_scala/pull/989#issuecomment-583405161).\r\n\r\nNote that there is no intention to deprecate + remove the top-level\r\ntargets in the foreseeable future.",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 453,
        "deletions": 3,
        "changed_files": 12,
        "created_at": "2020-02-07T18:29:47Z",
        "closed_at": "2020-02-10T18:46:20Z",
        "merged_at": "2020-02-10T18:46:20Z",
        "body": "\r\nCherry-pick https://github.com/protocolbuffers/protobuf/pull/6938",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 17,
        "deletions": 11,
        "changed_files": 4,
        "created_at": "2020-02-06T16:49:28Z",
        "closed_at": "2020-11-24T17:15:06Z",
        "merged_at": "2020-11-24T17:15:06Z",
        "body": "I followed the deprecation message to fix the compilation for C++ 20. It works like a charm with gcc 10 (almost HEAD).\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 25118,
        "deletions": 0,
        "changed_files": 70,
        "created_at": "2020-02-05T23:47:57Z",
        "closed_at": "2020-02-06T01:09:38Z",
        "merged_at": "2020-02-06T01:09:38Z",
        "body": "PiperOrigin-RevId: 293139128",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2020-02-05T12:51:06Z",
        "closed_at": "2020-02-12T21:06:53Z",
        "merged_at": "2020-02-12T21:06:53Z",
        "body": "Repeatable protoc output is useful because it's sometimes checked into version control, and rerunning protoc should not generate unnecessary diffs.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2449,
        "deletions": 2408,
        "changed_files": 50,
        "created_at": "2020-02-04T18:48:41Z",
        "closed_at": "2020-02-10T17:20:06Z",
        "merged_at": "2020-02-10T17:20:06Z",
        "body": "There are have been a few issues around people using case sensitive file systems\r\nwhat Xcode/clang does when looking at the paths. In attempts to solve one set of\r\nwarnings, new warnings/errors happened in different setup. So, to hopefully put\r\nthese problem away for got, move the WKTs to be at the same level as the other\r\nheaders.\r\n\r\n- Revert \"Override CocoaPods module to lowercase (#6464)\"\r\n  This reverts commit 479ba8226bed9c0986693f240c4d6f72dc2d0368.\r\n- Move WKTs to the objectivec directory and make the old headers shim back to\r\n  the new locations.\r\n- Update objectivec/generate_well_known_types.sh to check them one at a time\r\n  and to deal with the new locations for them.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 122,
        "deletions": 39,
        "changed_files": 39,
        "created_at": "2020-02-03T23:31:22Z",
        "closed_at": "2020-03-02T23:12:55Z",
        "merged_at": null,
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-02-03T17:56:05Z",
        "closed_at": "2020-02-25T22:40:37Z",
        "merged_at": "2020-02-25T22:40:37Z",
        "body": "The Bazel project (https://github.com/bazelbuild/bazel) intends to\r\nenrich its server app's (protobuf-defined) command service's status\r\nmessage with a structured representation of what, if anything, went\r\nwrong while processing a command. We wish to use custom options to add\r\nmetadata to the protobuf constructs involved.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2020-02-03T17:31:52Z",
        "closed_at": "2021-09-24T16:41:07Z",
        "merged_at": "2021-09-24T16:41:07Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2020-02-02T23:54:02Z",
        "closed_at": "2020-02-20T20:48:01Z",
        "merged_at": null,
        "body": "Same as https://github.com/protocolbuffers/protobuf/pull/7088 but for `ERROR`.\r\nIssue: https://github.com/protocolbuffers/protobuf/issues/7076",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2020-02-02T13:40:12Z",
        "closed_at": "2020-02-12T21:08:26Z",
        "merged_at": "2020-02-12T21:08:26Z",
        "body": "These were the only 2 remaining occurrences of this pattern.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-01-31T17:42:35Z",
        "closed_at": "2020-02-01T00:00:29Z",
        "merged_at": "2020-02-01T00:00:29Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 27,
        "deletions": 10,
        "changed_files": 3,
        "created_at": "2020-01-30T23:38:02Z",
        "closed_at": "2020-01-31T22:07:59Z",
        "merged_at": null,
        "body": "Adds several C++ keywords to the reserved keyword list.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-01-30T22:37:51Z",
        "closed_at": "2020-01-31T17:43:25Z",
        "merged_at": "2020-01-31T17:43:25Z",
        "body": "deps: update errorprone to 2.3.4\r\n\r\n@rafi-kamal ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-01-30T22:30:01Z",
        "closed_at": "2020-01-31T17:43:58Z",
        "merged_at": "2020-01-31T17:43:58Z",
        "body": "Cherry-pick of https://github.com/protocolbuffers/protobuf/pull/7144\r\n\r\nRef: https://bundler.io/blog/2019/05/14/solutions-for-cant-find-gem-bundler-with-executable-bundle.html",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 387,
        "deletions": 145,
        "changed_files": 8,
        "created_at": "2020-01-30T22:17:39Z",
        "closed_at": "2020-02-10T19:27:28Z",
        "merged_at": "2020-02-10T19:27:28Z",
        "body": "Instead of calling initOnce of dependencies, initialize metadata of dependencies in the same file.\r\n\r\nNeeds to pass aggregate_metadata option to protoc to trigger, e.g.:\r\n     ```--php_out=aggregate_metadata=foo#bar:generated_dir```\r\n   For each input file, transitive dependencies (including itself), whose package name has the prefix of foo or bar, will be aggregated, in which their metadata string will be aggregated in the same internalAddGeneratedFile call. For other dependencies, initOnce is called as before.\r\n\r\nThis feature is EXPERIMENTAL. DO NOT USE!!!",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 124,
        "deletions": 0,
        "changed_files": 5,
        "created_at": "2020-01-30T21:06:23Z",
        "closed_at": "2020-02-27T22:30:55Z",
        "merged_at": "2020-02-27T22:30:55Z",
        "body": "**Background:**\r\n\r\nThis is a follow-up to https://github.com/protocolbuffers/protobuf/pull/6525, which adds sphinx docs.\r\n\r\nGoogleapis.dev hosts client library documentation for several languages as\r\nwell as documentation for core packages such as google-api-core. It is owned\r\nand maintained by the Cloud DevRel Core team.\r\n\r\n**About this change:**\r\n\r\nThe `kokoro/docs/publish-python.sh` script builds the docs with sphinx, then\r\nuses the [googleapis/docuploader](https://github.com/googleapis/docuploader)\r\ntool to publish to googleapis.dev. The publish script is triggered manually\r\nwith a Kokoro RELEASE type job. Googlers, see go link\r\nprotobuf-docs-python-design for additional internal references.\r\n\r\nTowards #4498",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 376,
        "deletions": 14,
        "changed_files": 28,
        "created_at": "2020-01-29T21:01:27Z",
        "closed_at": "2020-02-29T04:28:05Z",
        "merged_at": "2020-02-29T04:28:05Z",
        "body": "**Background:**\r\n\r\nThis is a follow-up to https://github.com/protocolbuffers/protobuf/pull/6525, which adds sphinx docs.\r\n\r\nRead the Docs is a hosting platform for documentation, primarily Python\r\ndocs. It supports builds at commit time as well as at specific git\r\nlabels to support versioned docs. I have claimed the\r\nprotobuf.readthedocs.io project and can add any Googlers who need access\r\nto be able to configure and trigger builds.\r\nhttps://readthedocs.org/projects/protobuf/builds/ It's also relatively\r\neasy to create a new project to test the documentation builds from a\r\nfork, such as https://readthedocs.org/projects/tswast-protobuf/builds/\r\n\r\n**About this change:**\r\n\r\nOnce web hooks are configured, Read the Docs will automatically build\r\nthe docs for the latest changes on the master branch.\r\n\r\nI needed to update `python/setup.py` to support installation from the\r\nroot of the repository because Read the Docs does not `cd python` before\r\ninstalling the protobuf package with `setup.py install`. To support\r\nthis, I updated the file paths to use the absolute path to files. The\r\n`__file__` special variable comes in handy for this, as it provides the\r\npath to the `setup.py` file.\r\n\r\nA banner is added to the docs when published to readthedocs. This links\r\nto the official documentation and the future home of the stable API\r\nreference on googleapis.dev.\r\n\r\nTowards #4498",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2020-01-29T16:51:39Z",
        "closed_at": "2020-01-29T20:51:47Z",
        "merged_at": "2020-01-29T20:51:47Z",
        "body": "release notes: no\r\ndeps: update JUnit and Truth to latest versions\r\njava\r\n\r\n@rafi-kamal",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2020-01-29T16:46:38Z",
        "closed_at": "2020-03-02T14:05:16Z",
        "merged_at": null,
        "body": "@haberman\r\n\r\nrelease notes: no\r\njava",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2020-01-29T14:38:33Z",
        "closed_at": "2020-01-31T00:47:33Z",
        "merged_at": "2020-01-31T00:47:33Z",
        "body": "This fixes an issue where protobuf php extension would not compile on php7.4.\r\n\r\nThis is tested working on Mac OS X Catalina with homebrew php7.4.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-01-29T04:57:01Z",
        "closed_at": "2021-10-13T19:43:38Z",
        "merged_at": null,
        "body": "\r\n### What\r\n\r\nThis PR adds `php_namespace` option to google/protobuf.descriptor.proto in order to place generated files under `\\Google\\Protobuf\\Internal` namespace for php.\r\n\r\n### Problem\r\n\r\nWhen we use messages in google/protobuf/descriptor.proto, the generated php files refer nonexistent class.\r\n\r\nFor example, in this `test.proto` file\r\n\r\n```\r\nsyntax = \"proto3\";\r\n\r\npackage test;\r\n\r\nimport \"google/protobuf/descriptor.proto\";\r\n\r\nmessage TestMessage {\r\n  google.protobuf.FileDescriptorSet fds = 1;\r\n  google.protobuf.FileDescriptorProto fdp = 2;\r\n  google.protobuf.DescriptorProto dp = 3;\r\n}\r\n```\r\n\r\nthen run `protoc --php_out=. test.proto`. That generates this php file.\r\n\r\n```\r\nclass TestMessage extends \\Google\\Protobuf\\Internal\\Message\r\n{\r\n\r\n... \r\n\r\n    /**\r\n     * Generated from protobuf field <code>.google.protobuf.FileDescriptorSet fds = 1;</code>\r\n     * @return \\Google\\Protobuf\\FileDescriptorSet\r\n     */\r\n    public function getFds()\r\n    {\r\n        return $this->fds;\r\n    }\r\n\r\n    /**\r\n     * Generated from protobuf field <code>.google.protobuf.FileDescriptorSet fds = 1;</code>\r\n     * @param \\Google\\Protobuf\\FileDescriptorSet $var\r\n     * @return $this\r\n     */\r\n    public function setFds($var)\r\n    {\r\n        GPBUtil::checkMessage($var, \\Google\\Protobuf\\FileDescriptorSet::class);\r\n        $this->fds = $var;\r\n\r\n        return $this;\r\n    }\r\n\r\n...\r\n\r\n}\r\n```\r\n\r\nThe generated file refer `FileDescriptorSet` message as `\\Google\\Protobuf\\FileDescriptorSet` but it does not exist in [protobuf-php](https://github.com/protocolbuffers/protobuf-php/tree/master/src/Google/Protobuf). It exists under `\\Google\\Protobuf\\Internal` as [here](https://github.com/protocolbuffers/protobuf-php/blob/master/src/Google/Protobuf/Internal/FileDescriptorSet.php). It seems all messages in google/protobuf/descriptor.proto exist under `\\Google\\Protobuf\\Internal` namespace for php.\r\n\r\n\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2020-01-29T04:23:30Z",
        "closed_at": "2020-01-29T14:37:43Z",
        "merged_at": null,
        "body": "",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-01-28T23:30:25Z",
        "closed_at": "2020-01-30T21:08:32Z",
        "merged_at": "2020-01-30T21:08:32Z",
        "body": "Ref: https://bundler.io/blog/2019/05/14/solutions-for-cant-find-gem-bundler-with-executable-bundle.html",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 48,
        "deletions": 34,
        "changed_files": 31,
        "created_at": "2020-01-28T20:14:07Z",
        "closed_at": "2020-01-31T21:47:10Z",
        "merged_at": "2020-01-31T21:47:10Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-01-28T16:39:35Z",
        "closed_at": "2021-10-13T22:02:41Z",
        "merged_at": null,
        "body": "This macro will by default use `__FILE__` macro, so in C++ compiled\r\nbinary filenames are present. This is not always wanted. Also\r\nwhen classes from proto files are generated and compiled at the\r\nsame time as protobuf runtime is compiled, there is no need to\r\ncheck the compatibility of the versions.\r\n\r\nNow you can define `GOOGLE_PROTOBUF_VERIFY_VERSION` as empty and thus\r\ndisable the version checks altogether.\r\n\r\nThe solution was proposed as part of #5995.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 9,
        "changed_files": 1,
        "created_at": "2020-01-24T18:59:01Z",
        "closed_at": "2020-05-04T00:37:58Z",
        "merged_at": null,
        "body": "Envoy was experiencing failed builds due to lots of duplicate -I in the\r\nCLI. The solution is to generally use depset() as per Starlark best\r\npractice for this sort of thing.\r\n\r\nMight fix other issues beyond py_proto_library, anything that depends on\r\nproto_gen.\r\n\r\nrelease notes: no\r\n\r\nSigned-off-by: Harvey Tuch <htuch@google.com>",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 108,
        "deletions": 8,
        "changed_files": 3,
        "created_at": "2020-01-24T15:02:22Z",
        "closed_at": "2020-02-10T23:30:48Z",
        "merged_at": "2020-02-10T23:30:48Z",
        "body": "See b/147012414 for details.",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 72,
        "deletions": 16,
        "changed_files": 9,
        "created_at": "2020-01-23T21:57:56Z",
        "closed_at": "2020-05-11T07:42:53Z",
        "merged_at": null,
        "body": "Fixes #7127 \r\n\r\nNull continues to erode away at my soul.\r\n\r\nShould we add a TryGetOption API in another PR to better match up with the CustomOptions API @jtattermusch?",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-01-23T16:56:10Z",
        "closed_at": "2020-01-28T20:16:18Z",
        "merged_at": "2020-01-28T20:16:17Z",
        "body": "release notes: no\r\ndeps: update errorprone to 2.3.4\r\njava",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 45,
        "deletions": 40,
        "changed_files": 14,
        "created_at": "2020-01-23T16:20:52Z",
        "closed_at": "2020-01-24T16:51:38Z",
        "merged_at": "2020-01-24T16:51:38Z",
        "body": "Add GPB_FINAL macro to block subclassing of generated ObjC classes.\r\n\r\nThis will prevent subclassing of any of the protobuf classes generated by the compiler.\r\nIf you need to be able to do this, please let us know. You can temporarily \"reenable\" it by\r\nredefining the GPB_FINAL macro.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-01-23T08:49:08Z",
        "closed_at": "2022-02-02T16:29:25Z",
        "merged_at": "2022-02-02T16:29:25Z",
        "body": "We use protobuf library as `git submodule` with CMake and embedded on my project. Then, We cannot install my project without protobuf libraries, binaries, etc.\r\n\r\nThis pull request is added for `make install` without protobuf. Turn off protobuf install option is not inclusion `install.cmake`\r\n\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 82,
        "deletions": 54,
        "changed_files": 1,
        "created_at": "2020-01-22T22:57:42Z",
        "closed_at": "2020-01-23T13:30:52Z",
        "merged_at": "2020-01-23T13:30:52Z",
        "body": "Didn't really handle when a file was missing, but all the other were up to date,\r\nthis handles that case also.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 984,
        "deletions": 21,
        "changed_files": 15,
        "created_at": "2020-01-22T22:02:52Z",
        "closed_at": "2022-02-02T16:37:32Z",
        "merged_at": null,
        "body": "This PR enables the user to load modules equivalent to a \"_pb2.py\" file using code like this:\r\n\r\n```python\r\nfrom google import protobuf\r\nprotos = protobuf.protos(\"foo.proto\")\r\n```\r\nThe `protos` object is an instance of type `types.ModuleType` whose public members are the same as those present in the equivalent `foo_pb2.py` file.\r\n\r\nAs requested by the Protobuf Team, the machinery behind this function *does not* generate textual Python code. Instead, we create a `FileDescriptor` object and use it to reflectively instantiate message classes, enum classes, etc.\r\n\r\nThere are three public API changes in this PR:\r\n\r\n - `google.protobuf.protos`: The function outlined above.\r\n - `google.protobuf.FileDescriptor.FromFile`: This static method enables the instantiation of a python-level `FileDescriptor` object from a \".proto\" file.\r\n - `google.protobuf.FileDescriptor.CopySourceCodeInfoToProto`: This static method enables the extraction of source code info into a `google.protobuf.descriptor_pb2.FileDescriptorProto` object, mirroring [the C++ method](https://github.com/protocolbuffers/protobuf/blob/a104dffcb6b1958a424f5fa6f9e6bdc0ab9b6f9e/src/google/protobuf/descriptor.h#L1427). This is not used in this PR, but I intend to use it to extract docstrings for use in service help text in gRPC.\r\n\r\nIf the reviewers do not like the addition of either of the latter two methods as public APIs, I'm more than happy to make them private.\r\n\r\nThis is my first PR to the repo, so it's entirely possible that I've missed some aspect of the development process, such as special formatting/linting. Please let me know if any of that sort of thing is off.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 14,
        "changed_files": 2,
        "created_at": "2020-01-22T18:29:21Z",
        "closed_at": "2020-01-22T19:42:58Z",
        "merged_at": "2020-01-22T19:42:58Z",
        "body": "- size vs empty\r\n- unused decls",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 4,
        "created_at": "2020-01-21T23:44:48Z",
        "closed_at": "2020-01-22T20:29:57Z",
        "merged_at": "2020-01-22T20:29:57Z",
        "body": "cherry pick",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 323,
        "deletions": 9,
        "changed_files": 26,
        "created_at": "2020-01-20T21:48:54Z",
        "closed_at": "2020-01-21T18:14:02Z",
        "merged_at": "2020-01-21T18:14:02Z",
        "body": "Add clang-format off/on directives around pddm expansions to simplify formatting other code.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2020-01-20T20:07:17Z",
        "closed_at": "2020-01-21T15:07:47Z",
        "merged_at": null,
        "body": "I find it significantly easier to work in Xcode when I have access to the compiler code as well. This just adds folder references to the compiler/objectivec code to all of the projects so they can be searched and edited.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 4,
        "created_at": "2020-01-20T19:57:28Z",
        "closed_at": "2020-01-21T03:23:07Z",
        "merged_at": "2020-01-21T03:23:07Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 78,
        "deletions": 84,
        "changed_files": 12,
        "created_at": "2020-01-20T01:54:08Z",
        "closed_at": "2020-01-21T17:12:12Z",
        "merged_at": "2020-01-21T17:12:12Z",
        "body": "Allows easy replacing of class names in generated code using #define to redefine class names at compile time.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 66,
        "deletions": 6,
        "changed_files": 5,
        "created_at": "2020-01-14T17:14:12Z",
        "closed_at": "2020-01-15T18:22:17Z",
        "merged_at": "2020-01-15T18:22:17Z",
        "body": "Backports https://github.com/protocolbuffers/protobuf/pull/7075 into 3.11.x branch",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2020-01-14T02:26:01Z",
        "closed_at": "2020-04-17T17:20:39Z",
        "merged_at": "2020-04-17T17:20:39Z",
        "body": "Following the script for ruby 2.6, this adds a build script line for ruby 2.7\r\n\r\nUsage:\r\n`./tests.sh ruby27`\r\n\r\nCurrent failure is a segfault:\r\n```\r\n[snip]\r\n../src/protoc -I../src -I. --ruby_out=tests ../src/google/protobuf/wrappers.proto\r\n/Users/ericwalker/src/github.com/protocolbuffers/protobuf/ruby/tests/gc_test.rb:94: warning: assigned but unused variable - to\r\n/Users/ericwalker/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/rubygems/core_ext/kernel_require.rb:72: [BUG] Segmentation fault at 0x0000000000000000\r\nruby 2.7.0p0 (2019-12-25 revision 647ee6f091) [x86_64-darwin19]\r\n[snip]\r\n```",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-01-13T19:49:16Z",
        "closed_at": "2020-01-21T00:32:11Z",
        "merged_at": "2020-01-21T00:32:11Z",
        "body": "As per https://docs.phpdoc.org/latest/references/phpdoc/tags/return.html, the first token after the @return tag should be the return type.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2020-01-13T16:13:59Z",
        "closed_at": "2020-01-13T23:21:41Z",
        "merged_at": "2020-01-13T23:21:41Z",
        "body": "fixes #7076 \r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2020-01-13T16:00:31Z",
        "closed_at": "2020-01-13T23:21:28Z",
        "merged_at": "2020-01-13T23:21:28Z",
        "body": "fixes #7076 ",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 12,
        "deletions": 10,
        "changed_files": 5,
        "created_at": "2020-01-13T10:32:28Z",
        "closed_at": "2021-10-13T19:49:40Z",
        "merged_at": null,
        "body": "Based on https://github.com/protocolbuffers/protobuf/pull/7027/\r\n\r\nI finally managed to reproduce locally with:\r\n\r\n```\r\ndocker run -v $PWD:/tmpfs/src/github/protobuf/ruby -e UID\\=1000 -e GID\\=1000 -e USER\\=kbuilder -e GROUP\\=kbuilder -e GEM_PRIVATE_KEY_PASSPHRASE -e ftp_proxy -e http_proxy -e https_proxy -e RCD_HOST_RUBY_PLATFORM\\=x86_64-linux -e RCD_HOST_RUBY_VERSION\\=2.4.1 -e RCD_IMAGE\\=protobuftesting/ruby_rake_compiler_52bbc96c6d72ba1b25e99e19bdcfeb240438566c -w /tmpfs/src/github/protobuf/ruby --rm -i protobuftesting/ruby_rake_compiler_52bbc96c6d72ba1b25e99e19bdcfeb240438566c runas sigfw bash -c 'bundle && IN_DOCKER=true rake cross native gem RUBY_CC_VERSION\\=2.7.0:2.6.0:2.5.0:2.4.0:2.3.0]'\r\n```\r\n\r\nInstalling `bundler` just before `bundle install` like this is not super elegant, but given that I don't have a proper  feedback loop, it seems like the most straightforward fix.\r\n\r\n@qnighy @haberman \r\n\r\n",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 25,
        "deletions": 22,
        "changed_files": 1,
        "created_at": "2020-01-13T01:25:21Z",
        "closed_at": "2020-01-18T00:08:03Z",
        "merged_at": "2020-01-18T00:08:03Z",
        "body": "Remove dead links and update the ones that were moved.\r\n\r\nUse https when possible.\r\n\r\nIsolate inactive projects (not updated in the last few years) in a subsection.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2020-01-11T21:46:06Z",
        "closed_at": "2021-03-05T23:31:08Z",
        "merged_at": null,
        "body": "Makes the conformance_test_runner declared sources in\r\ncmake/conformance.cmake match the corresponding sources in\r\nconformance/Makefile.am, which allows the test runner to build\r\nsuccessfully with CMake.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 55,
        "deletions": 1,
        "changed_files": 5,
        "created_at": "2020-01-10T21:27:49Z",
        "closed_at": "2021-02-17T18:35:15Z",
        "merged_at": null,
        "body": "",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2020-01-10T18:29:15Z",
        "closed_at": "2020-01-21T23:38:43Z",
        "merged_at": "2020-01-21T23:38:43Z",
        "body": "Fixes #7055 ",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 66,
        "deletions": 6,
        "changed_files": 5,
        "created_at": "2020-01-10T18:25:51Z",
        "closed_at": "2020-01-15T18:27:36Z",
        "merged_at": "2020-01-15T18:27:36Z",
        "body": "",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 9,
        "changed_files": 5,
        "created_at": "2020-01-10T09:20:58Z",
        "closed_at": "2020-01-11T00:07:16Z",
        "merged_at": "2020-01-11T00:07:16Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 25,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2020-01-09T18:32:21Z",
        "closed_at": "2020-01-09T22:10:36Z",
        "merged_at": "2020-01-09T22:10:36Z",
        "body": "* Blacklist .proto source files is Bazel allows us to\r\n\r\nThis is a partial revert of https://github.com/protocolbuffers/protobuf/commit/7b28278c7d4f4175e70aef2f89d304696eb85ae3 to unblock, e.g., https://github.com/grpc/grpc/pull/21590 or https://github.com/lyft/envoy-mobile/issues/617 until Bazel is fixed.\r\n\r\nNote: this is a forward-compatible change that automatically switches to the behavior intended by https://github.com/protocolbuffers/protobuf/commit/7b28278c7d4f4175e70aef2f89d304696eb85ae3 when a compatible Bazel is released without requiring users to upgrade Protobuf. We will revert this change when Bazel is fixed.\r\n\r\n* Remove trailing ,\r\n\r\n* Update BUILD",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2020-01-09T14:07:45Z",
        "closed_at": "2021-10-13T01:33:15Z",
        "merged_at": null,
        "body": "Current error message:\r\n`...invalid UTF-8 data when parsinga protocol buffer: surrogates not allowed. Usethe bytes type if you intend to send raw bytes.` ",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 19,
        "deletions": 19,
        "changed_files": 8,
        "created_at": "2020-01-08T20:40:02Z",
        "closed_at": "2020-12-28T21:05:31Z",
        "merged_at": null,
        "body": "We don't yet know if 3.10 or 4.0 will follow Python 3.9, but whichever it is, it will probably happen in [2020 when Python 3.9 reaches beta](https://www.python.org/dev/peps/pep-0596/#schedule) and work begins on Python 3.9+1.\r\n\r\nThere's some code which uses `six.PY3`:\r\n\r\n```python\r\nif six.PY3:\r\n    print(\"Python 3+ code\")\r\nelse:\r\n    print \"Python 2 code\"\r\n```\r\n\r\nWhere:\r\n\r\n```python\r\nPY3 = sys.version_info[0] == 3\r\n```\r\n\r\nWhen run on Python 4, this will run the Python 2 code!\r\n\r\nInstead, use `six.PY2`.\r\n\r\nSimilarly, use `sys.version_info[0] >= 3` instead of `sys.version_info[0] == 3`.\r\n\r\nFound using https://github.com/asottile/flake8-2020.\r\n\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-01-08T20:32:49Z",
        "closed_at": "2020-01-09T18:23:03Z",
        "merged_at": "2020-01-09T18:23:03Z",
        "body": "This is a partial revert of https://github.com/protocolbuffers/protobuf/commit/7b28278c7d4f4175e70aef2f89d304696eb85ae3 to unblock, e.g., https://github.com/grpc/grpc/pull/21590 or https://github.com/lyft/envoy-mobile/issues/617 until Bazel is fixed.\r\n\r\nNote: this is a forward-compatible change that automatically switches to the behavior intended by https://github.com/protocolbuffers/protobuf/commit/7b28278c7d4f4175e70aef2f89d304696eb85ae3 when a compatible Bazel is released without requiring users to upgrade Protobuf. We will revert this change when Bazel is fixed.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 816,
        "deletions": 625,
        "changed_files": 65,
        "created_at": "2020-01-07T19:51:10Z",
        "closed_at": "2020-01-08T20:24:21Z",
        "merged_at": "2020-01-08T20:24:21Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 11,
        "changed_files": 3,
        "created_at": "2020-01-02T14:20:15Z",
        "closed_at": "2022-05-16T18:14:19Z",
        "merged_at": null,
        "body": "See protocolbuffers/protobuf-javascript#77\r\n\r\nI think that support for the `browser` import style was broken in 3b3c8abb9635eb3ea078a821a99c9ef29d66dff7 and I notice there are no tests for it (nor for `es6`, which is just a dummy option planned to be implemented from my understanding), thus the breakage slipped through unnoticed.\r\n\r\n(To see the breakage, search in that commit for `js_generator.cc`, expand the large diff and search for `IMPORT_BROWSER` which is visible only in removed lines.)\r\n\r\nI tried to fix this with a patch:\r\n```diff\r\n--- a/src/google/protobuf/compiler/js/js_generator.cc\r\n+++ b/src/google/protobuf/compiler/js/js_generator.cc\r\n@@ -1877,6 +1877,9 @@ void Generator::GenerateRequiresImpl(const GeneratorOptions& options,\r\n                                      std::set<std::string>* provided,\r\n                                      bool require_jspb, bool require_extension,\r\n                                      bool require_map) const {\r\n+  if (options.import_style == GeneratorOptions::kImportBrowser)\r\n+    return;\r\n+\r\n   if (require_jspb) {\r\n     required->insert(\"jspb.Message\");\r\n     required->insert(\"jspb.BinaryReader\");\r\n```\r\nHowever this fails also because of an undefined `goog` object, so it was a dead end.\r\n\r\nIn this PR I propose remove the two unused `kImportBrowser` and `kImportEs6` and I update the documentation to not state that it is possible to use google-protobuf without npm.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-01-02T12:47:55Z",
        "closed_at": "2021-10-13T01:31:03Z",
        "merged_at": null,
        "body": "support arch mips64le ",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2019-12-30T20:56:42Z",
        "closed_at": "2022-02-03T02:01:29Z",
        "merged_at": null,
        "body": "This PR adds the ability to specify custom proto plugins for the `py_proto_library` rule\r\nI wanted to use https://github.com/dropbox/mypy-protobuf but it seems like it not possible with the current rule.\r\nI made the PR backward compatible, let me know what to do think\ud83d\ude42",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2019-12-30T13:28:34Z",
        "closed_at": "2020-01-10T18:52:49Z",
        "merged_at": "2020-01-10T18:52:49Z",
        "body": "release note: no",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-12-30T02:25:44Z",
        "closed_at": "2019-12-30T06:04:29Z",
        "merged_at": null,
        "body": "",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 26,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-12-27T02:06:49Z",
        "closed_at": "2020-06-13T15:54:53Z",
        "merged_at": null,
        "body": "Creates `Package.swift` to fix #7047",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 254,
        "deletions": 254,
        "changed_files": 163,
        "created_at": "2019-12-26T13:42:30Z",
        "closed_at": "2020-01-08T18:18:21Z",
        "merged_at": "2020-01-08T18:18:21Z",
        "body": "Should be non-semantic.\r\n\r\nUses https://en.wikipedia.org/wiki/Wikipedia:Lists_of_common_misspellings/For_machines to find likely typos, with https://github.com/bwignall/typochecker to help automate the checking.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2019-12-25T13:11:31Z",
        "closed_at": "2021-11-04T14:24:01Z",
        "merged_at": null,
        "body": "- Add support for various `__attribute__` where supported for Sun Studio\r\n- Fill in implementation for deprecation messages for Sun Studio\r\n- Add appropriate system libraries for linking on Solaris with sunstudio",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 31,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2019-12-25T12:45:48Z",
        "closed_at": "2020-02-11T22:30:59Z",
        "merged_at": "2020-02-11T22:30:59Z",
        "body": "GCC does not allow mixing __attribute__(()) syntax alignas()\r\nsyntax. Re-use approach from chromium base/compiler_specific.h\r\nrelease notes: no",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 348,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-12-20T16:00:31Z",
        "closed_at": "2021-04-08T14:32:32Z",
        "merged_at": null,
        "body": "This is basically a copy of the internal proposal (as we currently don't have a open source proposal process in place for protobuf).\r\n\r\nSee https://github.com/protocolbuffers/protobuf/issues/4406",
        "comments": 37
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-12-19T20:00:13Z",
        "closed_at": "2019-12-19T22:06:29Z",
        "merged_at": "2019-12-19T22:06:29Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 79,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-12-19T15:47:54Z",
        "closed_at": "2021-10-13T19:52:05Z",
        "merged_at": null,
        "body": "This is in reference to https://github.com/protocolbuffers/protobuf/issues/7029.\r\n\r\nThe expected behavior is \r\n1.) wrapped values with the default value set should serialize to a wrapped value with the default value set, but instead, they are being set to nil.\r\n\r\nThe first test fails with:\r\n`Error: test_map_wrappers_with_default_values(BasicTest::MessageContainerTest): NoMethodError: undefined method value for nil:NilClass`, which matches what https://github.com/protocolbuffers/protobuf/issues/7029 is seeing.\r\n\r\n2.) The second test I added for completeness.  A test that asserts the correct behavior for wrapped values with no value set.\r\n\r\nThe test structure followed the test introduced by @haberman  here, https://github.com/protocolbuffers/protobuf/pull/6797.  My understanding of C is limited, but that PR seems to be  one of the PRs that touched the Ruby code between the upgrade from 3.10.1 to 3.11.0, where this issue was introduced.  ",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 34,
        "deletions": 18,
        "changed_files": 6,
        "created_at": "2019-12-18T05:41:34Z",
        "closed_at": "2020-04-17T06:31:48Z",
        "merged_at": "2020-04-17T06:31:48Z",
        "body": "I've made two groundworks for building protobuf extensions for Ruby 2.7:\r\n\r\n- Reporting ruby issue at https://bugs.ruby-lang.org/issues/16384, which was fixed in https://github.com/ruby/ruby/commit/40026a408df5e3576380f6c1d8bf6c119fa2e32b\r\n- Reporting rake-compiler issue at https://github.com/rake-compiler/rake-compiler/pull/161, which was fixed in https://github.com/rake-compiler/rake-compiler/commit/6822686f0c45e752974de02a980365515e843267\r\n\r\nNow that 2.7.0-rc2 has been released, can we start building extensions for Ruby 2.7?",
        "comments": 28
    },
    {
        "merged": true,
        "additions": 554,
        "deletions": 155,
        "changed_files": 31,
        "created_at": "2019-12-18T01:36:35Z",
        "closed_at": "2020-01-15T20:01:54Z",
        "merged_at": "2020-01-15T20:01:54Z",
        "body": "This switches the compiler and library to use objective-c class references instead of class names (that are resolved using objc_getClass/NSClassFromString). \r\n\r\nThis should:\r\n1. Reduce binary size slightly as we no longer need the strings.\r\n2. Add a small performance improvement as we no longer need to look up classes.\r\n3. Help enforce proper linkage by having actual class references for the linker to resolve. In cases where we are linking static archives there were cases where some of the Objective-C classes were not being pulled into the linkage requiring the use of the -ObjC linker flag (or other linker tricks). There are some other places in the code that we need to do this to get full coverage, but this is a good start.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 772,
        "deletions": 10,
        "changed_files": 9,
        "created_at": "2019-12-18T00:23:12Z",
        "closed_at": "2019-12-18T20:58:44Z",
        "merged_at": null,
        "body": "This PR is an alternative to https://github.com/protocolbuffers/protobuf/pull/7012 and a sibling to https://github.com/grpc/grpc/pull/21504.\r\n\r\nIn simple cases, this will allow users of the library to use messages defined in `foo.proto` like so:\r\n\r\n```python\r\nfrom google import protobuf\r\nprotos = protobuf.protos(\"foo.proto\")\r\nprint(protos.FooMessage())\r\n```\r\nwithout ever invoking `protoc`.\r\n\r\nThe difference from https://github.com/protocolbuffers/protobuf/pull/7012 is that one additional API has been added to enable plugin systems like gRPC's to take advantage of the same dynamic import machinery. At the time of writing, the two additions to the API look like this:\r\n\r\n```python\r\ndef protos(protobuf_path: Text,\r\n           include_paths: Optional[Sequence[Text]] = None) -> module:\r\n  pass\r\n\r\nImportFunction = Callable[[Text], module] # signature of google.protobuf.protos function\r\n\r\ndef get_import_machinery(module_suffix: Text,\r\n                         code_generator: CodeGenerator) ->\r\n                         Tuple[importlib.abc.MetaPathFinder, ImportFunction]:\r\n  pass\r\n```\r\nwhere CodeGenerator is a protocol requiring only the `__int__` method to be defined. It is expected that this method return an integer corresponding to a C++ `const ::google::protobuf::compiler::CodeGenerator*` where the underlying object has static storage duration (in order to avoid the tricky issue of managing memory allocated outside of CPython itself).\r\n\r\nThis code generator is then used to generate the code for the `.proto` file requested, along with its dependency tree.\r\n\r\nThis mechanism cuts down substantially on the amount of code duplication between the gRPC and Protobuf repos, as well as enabling other systems built on top of Protobuf (e.g. Stubby) to easily do the same in the future.\r\n\r\nI am completely flexible on the naming and module placement of this function, as only library authors such as gRPC itself will ever need to use it.\r\n\r\nThis PR is still a work in-progress:\r\n - [ ] Port existing detailed codegen tests from gRPC PR\r\n - [ ] Ensure various versions of CPython are being tested\r\n - [ ] Format Code\r\n - [ ] Add documentation\r\n - [ ] Integrate with the repo's C++-style Python APIs (i.e. ScopedPythonPtr)",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2019-12-17T04:56:15Z",
        "closed_at": "2020-01-07T19:57:00Z",
        "merged_at": "2020-01-07T19:57:00Z",
        "body": "release notes: no",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-12-17T02:15:57Z",
        "closed_at": "2019-12-17T18:27:26Z",
        "merged_at": "2019-12-17T18:27:26Z",
        "body": "release notes: no",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2019-12-16T23:57:59Z",
        "closed_at": "2019-12-19T18:27:39Z",
        "merged_at": "2019-12-19T18:27:39Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2019-12-16T15:32:49Z",
        "closed_at": "2021-10-15T21:59:57Z",
        "merged_at": "2021-10-15T21:59:57Z",
        "body": "The PyInt_FromLong() conversion function will truncate 64 bit integer\r\nvalues on 32 bit architectures. We will now use the PyLong_* functions\r\nwith the appropriate minimum size for each field.\r\n\r\nNote that this commit also switches to the unsigned versions, since the\r\nunknown integer fields have been declared unsigned anyway.\r\n\r\nFixes #6205",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 617,
        "deletions": 10,
        "changed_files": 8,
        "created_at": "2019-12-13T02:20:19Z",
        "closed_at": "2019-12-18T20:58:56Z",
        "merged_at": null,
        "body": "This PR is meant to serve as a basis for discussion and is not yet ready for a thorough review.\r\n\r\nCompanion to https://github.com/grpc/grpc/pull/21458.\r\n\r\nThis PR adds a runtime dependency on `libprotoc` and enables users to import `.proto` files without first manually invoking `protoc`.\r\n\r\nThe only change to the API surface is the addition of a function `google.protobuf.protos`, which accepts the path to a `.proto` file (as well as some optional configuration) and returns the corresponding Python module. The new API is only made available to users running Python 3+ and using the cpp implementation. All other users who attempt to use the new function will get a `NotImplementedError`.\r\n\r\nCC @anandolee ",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 60,
        "changed_files": 2,
        "created_at": "2019-12-13T00:22:58Z",
        "closed_at": "2019-12-13T02:23:56Z",
        "merged_at": "2019-12-13T02:23:56Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 106,
        "deletions": 0,
        "changed_files": 10,
        "created_at": "2019-12-12T01:00:41Z",
        "closed_at": "2019-12-13T23:49:19Z",
        "merged_at": "2019-12-13T23:49:19Z",
        "body": "fixes #6958",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 133,
        "deletions": 21,
        "changed_files": 8,
        "created_at": "2019-12-11T06:54:08Z",
        "closed_at": "2019-12-12T21:59:51Z",
        "merged_at": "2019-12-12T21:59:51Z",
        "body": "Fixes #7006 ",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 67,
        "deletions": 67,
        "changed_files": 22,
        "created_at": "2019-12-11T06:38:21Z",
        "closed_at": "2019-12-11T16:24:15Z",
        "merged_at": null,
        "body": "Hi. I couldn't add protobuf to iOS App. using CocoaPods with compile errors:\r\n\r\n<img width=\"777\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2019-12-11 11 43 43\" src=\"https://user-images.githubusercontent.com/51456946/70596676-cbffd780-1c29-11ea-9a70-173a81884d6c.png\">\r\n\r\nI figured out `Any.pbobjc.h` is located on `Protobuf`, not `protobuf`, and also, my disk is formatted as case-sensitive APFS. So that the objc compiler cannot find the header.\r\n\r\nHere is my podfile:\r\n\r\n```\r\n# Uncomment this line to define a global platform for your project\r\nplatform :ios, '11.0'\r\nuse_modular_headers!\r\ninhibit_all_warnings!\r\n# use_frameworks!\r\n\r\ntarget '*****' do\r\n    ....\r\n    pod 'Protobuf'\r\n    ....\r\nend\r\n```\r\n\r\nThis patch may also fixes: https://github.com/invertase/react-native-firebase/issues/2780",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 3513,
        "deletions": 157,
        "changed_files": 17,
        "created_at": "2019-12-11T01:05:38Z",
        "closed_at": "2021-02-08T09:32:12Z",
        "merged_at": null,
        "body": "Fixes #6956. Old generated code that used custom options will now be able to continue to use CustomOptions to access the extensions without generated identifiers. I still need to add tests to make sure it properly works.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 48,
        "deletions": 34,
        "changed_files": 31,
        "created_at": "2019-12-10T21:47:49Z",
        "closed_at": "2019-12-11T01:50:29Z",
        "merged_at": "2019-12-11T01:50:29Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 26,
        "deletions": 17,
        "changed_files": 1,
        "created_at": "2019-12-10T21:25:43Z",
        "closed_at": "2019-12-10T22:31:26Z",
        "merged_at": "2019-12-10T22:31:26Z",
        "body": "VLAs complicate static analysis and bloat stack size. Replace VLA allocation\r\nwith calls to malloc and free.  This will alos the code to build with -Wvla.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2019-12-09T21:43:56Z",
        "closed_at": "2019-12-10T19:26:52Z",
        "merged_at": "2019-12-10T19:26:52Z",
        "body": "Plugins (and some built-in generators) allow passing parameters\r\nwith `--<lang>_opt` one-by-one instead of passing them as\r\n`--<lang>_out=<params>:<out_base>`. This PR changes protoc to\r\nallow using `--<lang>_opt` for all (built-in) generators.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 425,
        "deletions": 144,
        "changed_files": 7,
        "created_at": "2019-12-06T00:27:40Z",
        "closed_at": "2019-12-13T17:55:03Z",
        "merged_at": null,
        "body": "protoc --php_out=aggremetadata=<aggregate_metadata_file>:. foo.proto bar.proto\r\nproto files needs to follow dependency order in which dependencies comes before dependents.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-12-05T23:03:05Z",
        "closed_at": "2019-12-06T18:33:26Z",
        "merged_at": "2019-12-06T18:33:26Z",
        "body": "Fixes #6924.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2019-12-05T09:29:54Z",
        "closed_at": "2019-12-10T19:32:45Z",
        "merged_at": "2019-12-10T19:32:45Z",
        "body": "",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 89,
        "deletions": 37,
        "changed_files": 33,
        "created_at": "2019-12-03T21:16:12Z",
        "closed_at": "2020-01-07T18:52:47Z",
        "merged_at": null,
        "body": "",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 7,
        "changed_files": 3,
        "created_at": "2019-12-03T20:24:55Z",
        "closed_at": "2020-11-04T23:32:32Z",
        "merged_at": null,
        "body": "It appears this was broken in:\r\nhttps://github.com/protocolbuffers/protobuf/pull/6893/files#r351384126\r\n\r\nThis is an actual bug, not just a warning issue:\r\n\r\n```python\r\nIn [1]: '' == b''\r\nOut[1]: False\r\n```\r\n\r\nThis can be caught by adding the `-bb` flag to CI:\r\n\r\n```\r\nrwilliams at rwilliams-mbp114 in ~\r\n$ python3 -c '\"\" == b\"\"'\r\n\r\nrwilliams at rwilliams-mbp114 in ~\r\n$ python3 -bb -c '\"\" == b\"\"'\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\nBytesWarning: Comparison between bytes and string\r\n```\r\nLyft runs all Python 3 CI jobs with this flag to catch just such issues.\r\n\r\nLyft has signed the Google CLA.",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 10334,
        "deletions": 6047,
        "changed_files": 183,
        "created_at": "2019-12-03T19:03:01Z",
        "closed_at": "2019-12-05T17:44:51Z",
        "merged_at": null,
        "body": "Creating pull request",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2019-12-03T00:24:39Z",
        "closed_at": "2019-12-03T21:06:32Z",
        "merged_at": "2019-12-03T21:06:32Z",
        "body": "So that javalite can be used from Bazel. Related discussion: #6867\r\n\r\n----\r\n\r\nThis is a backport of #6882",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 24,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2019-12-02T22:56:33Z",
        "closed_at": "2019-12-03T19:11:29Z",
        "merged_at": "2019-12-03T19:11:29Z",
        "body": "In case the internal value is default",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 89,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2019-12-02T18:04:23Z",
        "closed_at": "2019-12-02T23:33:06Z",
        "merged_at": "2019-12-02T23:33:06Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 19,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2019-12-02T17:35:35Z",
        "closed_at": "2019-12-05T18:30:00Z",
        "merged_at": "2019-12-05T18:30:00Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 437,
        "deletions": 567,
        "changed_files": 17,
        "created_at": "2019-12-01T16:47:50Z",
        "closed_at": "2019-12-10T01:02:10Z",
        "merged_at": "2019-12-10T01:02:10Z",
        "body": "Fixes #6624, #6180 ",
        "comments": 13
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 14,
        "changed_files": 13,
        "created_at": "2019-11-28T17:06:06Z",
        "closed_at": "2019-12-11T19:43:56Z",
        "merged_at": "2019-12-11T19:43:56Z",
        "body": "Clang currently displays an error if source files generated with protoc are compiled with -Wcomma. This change fixes this as suggested by the compiler itself. Fixes issue #6619.",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 18,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2019-11-27T06:37:53Z",
        "closed_at": "2020-06-04T11:42:07Z",
        "merged_at": null,
        "body": "Fix ```ArgumentException: An item with the same key has already been added. Key: Google.Protobuf.ObjectIntPair``` when using Descriptor with proto file with any proto file with extensions is imported multiple times(imported directly or imported by dependencies proto files).\r\n\r\nI think this PR is related to #6936 #6938 . The latest release (by now) [v3.11.0](https://github.com/protocolbuffers/protobuf/releases/tag/v3.11.0) also has this problem.\r\n\r\nHere is a simple sample to reproduction this problem:\r\n\r\n**test-a.proto**\r\n\r\n```protobuf\r\nsyntax = \"proto3\";\r\n\r\nimport \"test-ext.proto\";\r\nimport \"test-b.proto\";\r\n\r\nmessage TestMessageA {\r\n    option (msg_description_1) = \"description of TestMessageA\";\r\n    \r\n    string id      = 1;\r\n    TestMessageB b = 2;\r\n}\r\n```\r\n\r\n**test-b.proto**\r\n\r\n```protobuf\r\nsyntax = \"proto3\";\r\n\r\nimport \"test-ext.proto\";\r\n\r\nmessage TestMessageB {\r\n    option (msg_description_1) = \"description of TestMessageB\";\r\n    \r\n    string id = 1;\r\n}\r\n```\r\n\r\n\r\n**test-ext.proto**\r\n\r\n```protobuf\r\nsyntax = \"proto3\";\r\n\r\nimport \"google/protobuf/descriptor.proto\";\r\n\r\nextend google.protobuf.MessageOptions {\r\n    string msg_description_1         = 1001; // description 1\r\n    // other options 2000 to max;\r\n}\r\n```\r\n\r\n**Generate csharp code with** ```protoc -I./extensions ./extensions/test-a.proto ./extensions/test-b.proto ./extensions/test-ext.proto ./extensions/google/protobuf/descriptor.proto --csharp_out=.```\r\n\r\n**Ant then run these codes below:**\r\n\r\n```csharp\r\nusing System;\r\n\r\nnamespace DotnetCoreConsoleApp2\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            // protoc -I./extensions ./extensions/test-a.proto ./extensions/test-b.proto ./extensions/test-ext.proto ./extensions/google/protobuf/descriptor.proto --csharp_out=.\r\n            var desc = TestAReflection.Descriptor.FindTypeByName<Google.Protobuf.Reflection.MessageDescriptor>(\"TestMessageA\");\r\n            Console.WriteLine(desc.FullName);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nWe will got a exception like this:\r\n\r\n```bash\r\nUnhandled exception. System.TypeInitializationException: The type initializer for 'TestAReflection' threw an exception.\r\n ---> System.ArgumentException: An item with the same key has already been added. Key: Google.Protobuf.ObjectIntPair`1[System.Type]\r\n   at System.Collections.Generic.Dictionary`2.TryInsert(TKey key, TValue value, InsertionBehavior behavior)\r\n   at System.Collections.Generic.Dictionary`2.Add(TKey key, TValue value)\r\n   at Google.Protobuf.ExtensionRegistry.Add(Extension extension) in D:\\prebuilt\\protobuf\\protobuf-3.11.0\\csharp\\src\\Google.Protobuf\\ExtensionRegistry.cs:line 83\r\n   at Google.Protobuf.ExtensionRegistry.AddRange(IEnumerable`1 extensions) in D:\\prebuilt\\protobuf\\protobuf-3.11.0\\csharp\\src\\Google.Protobuf\\ExtensionRegistry.cs:line 92\r\n   at Google.Protobuf.Reflection.FileDescriptor.AddAllExtensions(FileDescriptor[] dependencies, GeneratedClrTypeInfo generatedInfo, ExtensionRegistry registry) in D:\\prebuilt\\protobuf\\protobuf-3.11.0\\csharp\\src\\Google.Protobuf\\Reflection\\FileDescriptor.cs:line 451\r\n   at Google.Protobuf.Reflection.FileDescriptor.FromGeneratedCode(Byte[] descriptorData, FileDescriptor[] dependencies, GeneratedClrTypeInfo generatedCodeInfo) in D:\\prebuilt\\protobuf\\protobuf-3.11.0\\csharp\\src\\Google.Protobuf\\Reflection\\FileDescriptor.cs:line 425\r\n   at TestAReflection..cctor() in D:\\workspace\\test\\DotnetCoreConsoleApp2\\TestA.cs:line 29\r\n   --- End of inner exception stack trace ---\r\n   at TestAReflection.get_Descriptor() in D:\\workspace\\test\\DotnetCoreConsoleApp2\\TestA.cs:line 18\r\n   at DotnetCoreConsoleApp2.Program.Main(String[] args) in D:\\workspace\\test\\DotnetCoreConsoleApp2\\Program.cs:line 10\r\n```\r\n\r\nWe find the problem is in the call ```Google.Protobuf.Reflection.FileDescriptor.AddAllExtensions(...)```  when generate extensions for ```test-a.proto``` . ```msg_description_1``` is added twice from ```test-a.proto/test-ext.proto/descriptor.proto``` and ```test-a.proto/test-b.proto/test-ext.proto/descriptor.proto``` .\r\n\r\n\r\nIf ```test-a.proto``` import ```test-b.proto``` and ```test-c.proto``` when both ```test-b.proto``` and ```test-c.proto``` import ```test-ext.proto``` with extensions in it. The same problem happens.",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-11-26T22:30:15Z",
        "closed_at": "2019-12-17T01:23:51Z",
        "merged_at": null,
        "body": "Now that there's something interesting to pass to the Python generator (cpp_generated_lib_linked), add the option flag to allow it.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2019-11-26T18:51:12Z",
        "closed_at": "2021-10-13T22:07:29Z",
        "merged_at": null,
        "body": "Array#concat accepts multiple arrays:\r\nhttps://ruby-doc.org/core-2.6.5/Array.html#method-i-concat\r\n\r\nIn C, RepeatedField#push accepts multiple arguments since #5736 (a8346bc):\r\nhttps://github.com/protocolbuffers/protobuf/blob/8393d48/ruby/ext/google/protobuf_c/repeated_field.c#L538-L541\r\n\r\nBut not in JRuby:\r\nhttps://github.com/protocolbuffers/protobuf/blob/8393d48/ruby/src/main/java/com/google/protobuf/jruby/RubyRepeatedField.java#L159-L173",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2019-11-26T17:41:10Z",
        "closed_at": "2019-12-05T18:36:59Z",
        "merged_at": "2019-12-05T18:36:58Z",
        "body": "release note: no\r\n\r\n@haberman",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-11-26T11:13:58Z",
        "closed_at": "2021-10-14T20:15:52Z",
        "merged_at": null,
        "body": "* Fix CMake builds for *.protoc files that are not within the ${CMAKE_CURRENT_SOURCE_DIR}",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2019-11-26T08:07:31Z",
        "closed_at": "2019-11-27T09:00:52Z",
        "merged_at": "2019-11-27T09:00:52Z",
        "body": "Fixes #6945 ",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 34,
        "deletions": 20,
        "changed_files": 16,
        "created_at": "2019-11-25T19:53:09Z",
        "closed_at": "2019-11-25T23:12:01Z",
        "merged_at": "2019-11-25T23:12:01Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 453,
        "deletions": 3,
        "changed_files": 12,
        "created_at": "2019-11-24T20:29:50Z",
        "closed_at": "2019-12-05T09:36:49Z",
        "merged_at": "2019-12-05T09:36:48Z",
        "body": "Adds a Distinct filter for extensions loaded from depended descriptors. Fixes #6936 \r\n\r\ncc: @jtattermusch @rafi-kamal ",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2019-11-23T11:19:24Z",
        "closed_at": "2021-08-29T12:05:57Z",
        "merged_at": null,
        "body": "Hello, Team!\r\n\r\nI tried to use the commands written for the Windows section, but they were lacking the .\\ in the beginning. I added them. Now they work.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 24,
        "changed_files": 3,
        "created_at": "2019-11-22T18:30:16Z",
        "closed_at": "2019-11-22T19:40:57Z",
        "merged_at": "2019-11-22T19:40:57Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 24,
        "changed_files": 3,
        "created_at": "2019-11-22T06:56:41Z",
        "closed_at": "2019-11-22T17:36:27Z",
        "merged_at": "2019-11-22T17:36:27Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2019-11-22T00:09:25Z",
        "closed_at": "2019-11-22T06:46:53Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 181,
        "deletions": 79,
        "changed_files": 6,
        "created_at": "2019-11-21T18:35:19Z",
        "closed_at": "2019-11-22T18:06:46Z",
        "merged_at": "2019-11-22T18:06:46Z",
        "body": "* Implement lazy loading of php class for proto messages\r\n\r\n* Fix php 7.1\r\n\r\n* Fix encode\r\n\r\n* Fix memory leak\r\n\r\n* Fix enum descriptor",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-11-21T15:38:51Z",
        "closed_at": "2019-11-25T14:11:23Z",
        "merged_at": null,
        "body": "This otherwise causes problems with too-long argument lists to \"protoc\".\r\n\r\nGiven \"foo.proto\" and \"bar.proto\" that both depend on \"baz.proto\", any proto_gen rule that depends on both \"foo.proto\" and \"bar.proto\" will pull in the includes and dependencies from \"baz.proto\" twice. When depending on proto targets that all depend on some common, large proto target, this leads to an explosion of import flags and causes \"Argument list too long\" errors on some platforms (Windows has 32k, MacOS hast 256k limits).\r\n\r\nThe proposed change converts \"import_flags\" and \"deps\" from lists to sets, and back to lists again, thus removing any duplicates. I'm not sure what this does with the order of the values, but the way they are aggregated does not make it look like it's important.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2019-11-21T09:48:29Z",
        "closed_at": "2019-11-25T19:29:48Z",
        "merged_at": "2019-11-25T19:29:48Z",
        "body": "Reverts protocolbuffers/protobuf#6888\r\n\r\nBrings back #6877. The 3.11.x release branch has been cut to it should be fine to merge PRs now.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 68,
        "deletions": 14,
        "changed_files": 3,
        "created_at": "2019-11-21T00:43:49Z",
        "closed_at": "2019-11-21T02:03:30Z",
        "merged_at": "2019-11-21T02:03:29Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-11-20T23:11:43Z",
        "closed_at": "2019-12-05T18:48:37Z",
        "merged_at": "2019-12-05T18:48:36Z",
        "body": "QuickBuffers is a Proto2 implementation that is targetted at performance and latency sensitive use cases.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 181,
        "deletions": 79,
        "changed_files": 6,
        "created_at": "2019-11-20T00:59:03Z",
        "closed_at": "2019-11-21T04:33:28Z",
        "merged_at": "2019-11-21T04:33:28Z",
        "body": "Previously, when creating a message, all messages defined in the same proto file and transitive proto files need to be resolved by php engine, even though some of them are not needed.\r\nThis change lazily resolve php classes of proto messages, so that they are only needed if the actual message is created.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 35,
        "changed_files": 3,
        "created_at": "2019-11-19T23:48:04Z",
        "closed_at": "2019-11-26T16:18:06Z",
        "merged_at": "2019-11-26T16:18:06Z",
        "body": "It also fixes the exception message for unsupported output formats in Google.Protobuf.Conformance.\r\n\r\ncc: @jtattermusch \r\n\r\nFixes https://github.com/protocolbuffers/protobuf/issues/6865",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 53,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-11-19T23:46:42Z",
        "closed_at": "2019-11-20T18:45:25Z",
        "merged_at": "2019-11-20T18:45:25Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-11-19T00:42:54Z",
        "closed_at": "2020-05-13T13:44:02Z",
        "merged_at": "2020-05-13T13:44:01Z",
        "body": "To allow calling e.g. FileStream.WriteAsync() that requires ReadOnlyMemory<byte>.\r\nYou can go from a Memory<T> to a Span<T> but not vice versa.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 554,
        "deletions": 246,
        "changed_files": 9,
        "created_at": "2019-11-16T01:20:09Z",
        "closed_at": "2019-11-18T21:13:26Z",
        "merged_at": "2019-11-18T21:13:25Z",
        "body": "Previously, because it's possible that different php requests may have conflicting proto message (different message with the same fully qualified name), it is required that the internal descriptor pool is refreshed after each request, which hurts performance.\r\n\r\nThis change implements persistent descriptor pool. Users needs to make sure there is no conflicting messages by themselves.\r\n\r\nBy default, this feature is disabled. To enable it, add ```protobuf.keep_descriptor_pool_after_request=1``` into php.ini. Or on command line, add ```-d protobuf.keep_descriptor_pool_after_request=1```.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 120,
        "deletions": 106,
        "changed_files": 38,
        "created_at": "2019-11-15T19:50:15Z",
        "closed_at": "2019-11-16T01:44:11Z",
        "merged_at": "2019-11-16T01:44:11Z",
        "body": "",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 32,
        "deletions": 20,
        "changed_files": 1,
        "created_at": "2019-11-15T14:56:12Z",
        "closed_at": "2019-12-06T19:15:19Z",
        "merged_at": "2019-12-06T19:15:19Z",
        "body": "Envoy's CI caught UBSan warnings with the update to 3.10:\r\n\r\n* external/com_google_protobuf/src/google/protobuf/stubs/strutil.cc:1472:15: runtime error: null pointer passed as argument 2, which is declared to never be null\r\n/usr/include/string.h:43:28: note: nonnull attribute specified here\r\n\r\nStack trace:\r\n    #0 0xff9a8b5 in google::protobuf::Append4(char*, google::protobuf::strings::AlphaNum const&, google::protobuf::strings::AlphaNum const&, google::protobuf::strings::AlphaNum const&, google::protobuf::strings::AlphaNum const&) /proc/self/cwd/external/com_google_protobuf/src/google/protobuf/stubs/strutil.cc:1472:3\r\n    #1 0xff9a21f in google::protobuf::StrCat(google::protobuf::strings::AlphaNum const&, google::protobuf::strings::AlphaNum const&, google::protobuf::strings::AlphaNum const&, google::protobuf::strings::AlphaNum const&) /proc/self/cwd/external/com_google_protobuf/src/google/protobuf/stubs/strutil.cc:1506:15\r\n    #2 0xf9bc4d2 in google::protobuf::util::(anonymous namespace)::StatusErrorListener::InvalidName(google::protobuf::util::converter::LocationTrackerInterface const&, google::protobuf::StringPiece, google::protobuf::StringPiece) /proc/self/cwd/external/com_google_protobuf/src/google/protobuf/util/json_util.cc:140:24\r\n    #3 0xfb617d1 in google::protobuf::util::converter::ProtoWriter::InvalidName(google::protobuf::StringPiece, google::protobuf::StringPiece) /proc/self/cwd/external/com_google_protobuf/src/google/protobuf/util/internal/proto_writer.cc:442:14\r\n\r\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior external/com_google_protobuf/src/google/protobuf/stubs/strutil.cc:1472:15 in \r\n\r\nSigned-off-by: Asra Ali <asraa@google.com>",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 182,
        "deletions": 96,
        "changed_files": 14,
        "created_at": "2019-11-15T00:36:52Z",
        "closed_at": "2019-11-15T18:40:11Z",
        "merged_at": "2019-11-15T18:40:11Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-11-14T23:24:47Z",
        "closed_at": "2021-10-13T22:22:14Z",
        "merged_at": null,
        "body": "Note: this is currently blocking the release of github.com/google/fhir on MacOS, which we are trying to get out for the major FHIR conference of the year starting next week\r\n\r\nCurrently, if many protos are included from the same location, the paths will be added once per import, which is redundant.  In extreme cases, such as https://github.com/google/fhir/blob/master/proto/r4/core/resources/bundle_and_contained_resource.proto , this causes the generation to fail entirely on certain platforms, including MacOS\r\n\r\nThe pathological case is a proto_library X which depends on a large\r\nnumber of proto_libraries Y1...Yn, each of which depends on a common\r\nset of proto_libraries Z1...Zm. Without deduplication, import paths for\r\nZ1...Zm will be repeated n times.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 7,
        "changed_files": 2,
        "created_at": "2019-11-14T19:49:33Z",
        "closed_at": "2019-11-14T21:44:34Z",
        "merged_at": "2019-11-14T21:44:34Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2019-11-14T19:22:23Z",
        "closed_at": "2019-11-14T21:40:46Z",
        "merged_at": null,
        "body": "Kokoro tests in Mac are failing because gpg2 is not getting installed. According to https://rvm.io/rvm/security, using either gpg or gpg2 will be fine.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 161,
        "deletions": 47,
        "changed_files": 5,
        "created_at": "2019-11-14T02:03:46Z",
        "closed_at": "2019-11-16T01:19:18Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2019-11-14T00:22:16Z",
        "closed_at": "2019-11-27T19:10:46Z",
        "merged_at": "2019-11-27T19:10:46Z",
        "body": "So that javalite can be used from Bazel. Related discussion: https://github.com/protocolbuffers/protobuf/issues/6867",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2019-11-13T21:39:28Z",
        "closed_at": "2019-11-27T00:47:58Z",
        "merged_at": null,
        "body": "Reverts protocolbuffers/protobuf#6272",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 53,
        "deletions": 10,
        "changed_files": 2,
        "created_at": "2019-11-13T14:31:28Z",
        "closed_at": "2022-01-05T17:06:56Z",
        "merged_at": null,
        "body": "Adds the option `require_relative` to the ruby code generator to emit\r\n```\r\nrequire_relative 'imported_proto'\r\n```\r\ninstead of the default\r\n```\r\nrequire 'imported_proto'\r\n```\r\n\r\nIt can be enabled with `protoc --ruby_out=require_relative:/output/directory`\r\n\r\nThis is useful, for instance, when integrating with a Ruby on Rails app.\r\n\r\nThere are a few issues with this still, but I thought I'd ask for feedback before going too far:\r\n* No tests for the new behaviour.\r\n* No documentation for the new behaviour.\r\n* I'm not sure what the correct way to deal with importing well known protobuf types here would be. Right now they would not work, but we could whitelist them to always be absolute imports, for instance.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2019-11-13T10:04:45Z",
        "closed_at": "2019-11-14T17:39:32Z",
        "merged_at": "2019-11-14T17:39:32Z",
        "body": "As a prerequisite for https://github.com/protocolbuffers/protobuf/pull/5888, we need to be able to build with the latest stable dotnet SDK on our CI.\r\nAlso see https://github.com/protocolbuffers/protobuf/pull/6874.\r\n\r\nRegardless of https://github.com/protocolbuffers/protobuf/pull/5888, this will be needed sooner or later anyway.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 114,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-11-12T17:58:39Z",
        "closed_at": "2020-07-09T15:03:26Z",
        "merged_at": null,
        "body": "To facilitate conversation and to document design decisions, I've created this doc.\r\nFeedback/additions are welcome.\r\n\r\nPrototype PR: https://github.com/protocolbuffers/protobuf/pull/5888\r\nIssue: ttps://github.com/grpc/grpc-dotnet/issues/30\r\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 3022,
        "deletions": 2755,
        "changed_files": 147,
        "created_at": "2019-11-12T01:23:04Z",
        "closed_at": "2019-11-12T21:39:00Z",
        "merged_at": "2019-11-12T21:39:00Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-11-08T20:35:17Z",
        "closed_at": "2021-04-06T17:55:32Z",
        "merged_at": null,
        "body": "Add instructions for how to merge a pull request.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3317,
        "deletions": 2529,
        "changed_files": 127,
        "created_at": "2019-11-08T01:36:53Z",
        "closed_at": "2019-11-12T06:46:13Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 24,
        "deletions": 25,
        "changed_files": 4,
        "created_at": "2019-11-07T21:32:55Z",
        "closed_at": "2019-11-08T09:06:55Z",
        "merged_at": "2019-11-08T09:06:55Z",
        "body": "Fixes issues with moving test codegen in #6832\r\n\r\ncc: @jtattermusch ",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 10,
        "changed_files": 1,
        "created_at": "2019-11-07T15:52:17Z",
        "closed_at": "2019-12-04T17:49:52Z",
        "merged_at": "2019-12-04T17:49:52Z",
        "body": "[Linkage Monitor](https://github.com/GoogleCloudPlatform/cloud-opensource-java/tree/master/linkage-monitor) checks compatibility with other Google libraries. It recently got an enhancement to avoid relying on \"snapshot\" version. With that, the test script for Linkage Monitor does not need to modify the version of checkout repository copy.\r\n\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2019-11-05T17:14:15Z",
        "closed_at": "2021-03-08T19:01:30Z",
        "merged_at": null,
        "body": "Alpine linux (at least in 3.10) does not have __va_copy, so it is not possible to use google-protobuf without some really ugly hack around build process. c99 is 20 years old and should be fine to use.",
        "comments": 12
    },
    {
        "merged": true,
        "additions": 8147,
        "deletions": 39,
        "changed_files": 9,
        "created_at": "2019-11-05T17:11:23Z",
        "closed_at": "2019-11-06T18:27:29Z",
        "merged_at": "2019-11-06T18:27:29Z",
        "body": "Backports \r\nhttps://github.com/protocolbuffers/protobuf/pull/6836/commits and https://github.com/protocolbuffers/protobuf/pull/6843 to 3.10.x branch",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2019-11-05T08:49:20Z",
        "closed_at": "2019-12-06T19:15:58Z",
        "merged_at": "2019-12-06T19:15:58Z",
        "body": "make cpp won't compile since it requires `-std=c++11` com",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-11-04T23:27:51Z",
        "closed_at": "2019-12-10T21:35:39Z",
        "merged_at": "2019-12-10T21:35:39Z",
        "body": "In consuming this useful string utility, it was discovered\r\nthat the interpretation of leading byte codes 0xf8-0xff\r\ndid not conform to either the RFC 3629 nor ISO/IEC 10646\r\ndefinitions of utf-8.\r\n\r\nThe IETF RFC describes only 1-4 byte encodings (a limited\r\nnumber of 4 byte encodings at that), and plainly states in\r\nsection 1. Introduction;\r\n   o  The octet values C0, C1, F5 to FF never appear.\r\n\r\nAlternately, the ISO definition \"R.2 Specification of UTF-8\"\r\npreseented in the original IETF RFC 2279 clearly define the\r\nmeaning of leading byte values F5 through FD, and RFC 3629\r\nSection 10. Security paragraph 3 calls out this alternate\r\nreading (alterative to \"never appears\".) F5-F7 begin an\r\ninvalid (in the domain of unicode code points) 4-byte UTF-8\r\nsequence (similar to F0-F4), while F8-FC begin a 5-byte\r\nsequence, FC and FD begin a 6 byte sequence.\r\n\r\nThe curent code is wrong in that it doesn't treat the codes\r\nF8-FF as invalid 1-byte characters, nor does it treat the\r\ncodes F8-FD as the correct number of bytes. No valid parser\r\nwill land these lead characters 4 bytes forward. Most will\r\ntreat these as the 5 or 6 byte utf-32 character and may then\r\ntreat the resulting character as invalid, while some parsers\r\nmay reject all leading F5-FF characters as a single byte of\r\nerronious input, followed by each invalid continuation byte.\r\n\r\nWe propose the conventional reading of F8-FD as 5 and 6 byte\r\nsequences as originally defined, while FE-FF must be read\r\nas single byte invalid code points.\r\n\r\nSigned-off-by: William A Rowe Jr <wrowe@pivotal.io>\r\nSigned-off-by: Yechiel Kalmenson <ykalmenson@pivotal.io>",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 492,
        "deletions": 28,
        "changed_files": 3,
        "created_at": "2019-11-04T17:01:24Z",
        "closed_at": "2019-11-05T17:04:54Z",
        "merged_at": "2019-11-05T17:04:54Z",
        "body": "Benchmark on my Windows 10 machine.\r\n\r\nBefore:\r\n```\r\n|               Method |     Mean |    Error |    StdDev |   Median | Gen 0/1k Op | Gen 1/1k Op | Gen 2/1k Op | Allocated Memory/Op |\r\n|--------------------- |---------:|---------:|----------:|---------:|------------:|------------:|------------:|--------------------:|\r\n|   ParseWrapperFields | 965.8 ns | 61.36 ns | 180.91 ns | 884.7 ns |      0.8869 |           - |           - |             1.82 KB |\r\n| ParsePrimitiveFields | 409.3 ns | 14.55 ns |  41.98 ns | 393.8 ns |      0.4873 |           - |           - |                1 KB |\r\n```\r\n\r\nAfter:\r\n```\r\n|               Method |     Mean |     Error |    StdDev |   Median | Gen 0/1k Op | Gen 1/1k Op | Gen 2/1k Op | Allocated Memory/Op |\r\n|--------------------- |---------:|----------:|----------:|---------:|------------:|------------:|------------:|--------------------:|\r\n|   ParseWrapperFields | 692.2 ns | 40.284 ns | 118.78 ns | 660.4 ns |      0.8879 |           - |           - |             1.82 KB |\r\n| ParsePrimitiveFields | 325.9 ns |  6.636 ns |  12.63 ns | 324.8 ns |      0.4878 |           - |           - |                1 KB |\r\n```",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 15,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2019-11-04T16:04:27Z",
        "closed_at": "2022-02-12T03:57:34Z",
        "merged_at": null,
        "body": "This helps debuggability for dev builds, by allowing us to print the git\r\nversion the gem was built against.",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 355,
        "deletions": 10,
        "changed_files": 18,
        "created_at": "2019-11-04T15:31:27Z",
        "closed_at": "2019-11-04T16:34:07Z",
        "merged_at": "2019-11-04T16:34:07Z",
        "body": "Backports https://github.com/protocolbuffers/protobuf/pull/6824, https://github.com/protocolbuffers/protobuf/pull/6826",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 330,
        "changed_files": 11,
        "created_at": "2019-11-04T13:20:05Z",
        "closed_at": "2019-11-04T16:39:28Z",
        "merged_at": null,
        "body": "Reverts protocolbuffers/protobuf#6824\r\n\r\n(creating in case the PR actually broke something).",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 7655,
        "deletions": 11,
        "changed_files": 6,
        "created_at": "2019-11-04T11:05:18Z",
        "closed_at": "2019-11-04T17:55:09Z",
        "merged_at": "2019-11-04T17:55:09Z",
        "body": "This is for testing the improvements to wrapper type parsing\r\n\r\nThe first results I got is that wrapper type parsing more than 2x slower than the same message with primitive types.\r\n\r\n```\r\nBenchmarkDotNet=v0.11.4, OS=macOS Mojave 10.14.6 (18G87) [Darwin 18.7.0]\r\nIntel Core i7-7567U CPU 3.50GHz (Kaby Lake), 1 CPU, 4 logical and 2 physical cores\r\n.NET Core SDK=2.1.504\r\n  [Host]     : .NET Core 2.1.9 (CoreCLR 4.6.27414.06, CoreFX 4.6.27415.01), 64bit RyuJIT\r\n  DefaultJob : .NET Core 2.1.9 (CoreCLR 4.6.27414.06, CoreFX 4.6.27415.01), 64bit RyuJIT\r\n\r\n\r\n|               Method |     Mean |     Error |    StdDev |   Median | Gen 0/1k Op | Gen 1/1k Op | Gen 2/1k Op | Allocated Memory/Op |\r\n|--------------------- |---------:|----------:|----------:|---------:|------------:|------------:|------------:|--------------------:|\r\n|   ParseWrapperFields | 731.2 ns | 51.855 ns | 148.78 ns | 656.6 ns |      0.8879 |           - |           - |             1.82 KB |\r\n| ParsePrimitiveFields | 316.3 ns |  6.366 ns |  14.63 ns | 312.6 ns |      0.4878 |           - |           - |                1 KB |\r\n```",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 991,
        "deletions": 177,
        "changed_files": 12,
        "created_at": "2019-11-01T01:34:51Z",
        "closed_at": "2019-11-14T20:17:05Z",
        "merged_at": "2019-11-14T20:17:05Z",
        "body": "In order to mimic proto2 presence semantic in proto3, some users use lots of well known wrapper to replace primitive fields. This causes the problem of performance, because object creation is expensive.\r\n\r\nThis change lazily creates wrapper objects, which saves lots of time for unnecessary object creation/deletion.\r\n\r\nIn order to use the new feature, users needs to use the protoc in this change to update their generated code. However, old generated code is still compatible with the new runtime.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 52,
        "deletions": 18,
        "changed_files": 20,
        "created_at": "2019-10-31T20:39:08Z",
        "closed_at": "2019-11-11T18:14:31Z",
        "merged_at": "2019-11-11T18:14:31Z",
        "body": "Many of the recent issues with proto2 extensions were accidentally caused by tests passing when code-gen didn't actually compile outside of internal visibility which the Google.Protobuf.Test project has. To prevent mistakes like this in the future, this separates the code-gen from the test project to:\r\n\r\n * Keep the `InternalAccessVisibleTo` attribute out of the test code-gen\r\n * Allow us to use a separate minimum framework and standard version when compiling the code-gen\r\n\r\n/cc: @jtattermusch",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 24,
        "deletions": 8,
        "changed_files": 9,
        "created_at": "2019-10-31T20:22:02Z",
        "closed_at": "2019-11-04T15:40:00Z",
        "merged_at": null,
        "body": "Forgot to reintroduce them when writing #6760 and that's my bad. This also adds tests from #6826.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 19,
        "deletions": 19,
        "changed_files": 2,
        "created_at": "2019-10-31T03:18:32Z",
        "closed_at": "2019-11-05T16:18:51Z",
        "merged_at": "2019-11-05T16:18:51Z",
        "body": "`Encoding.GetString(byte[])` is actually incompatible with .NET Standard 1.0.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 24,
        "deletions": 8,
        "changed_files": 9,
        "created_at": "2019-10-30T12:01:13Z",
        "closed_at": "2019-11-04T13:06:01Z",
        "merged_at": "2019-11-04T13:06:01Z",
        "body": "Even though the property is deprecated, it still shouldn't throw.",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 330,
        "deletions": 1,
        "changed_files": 11,
        "created_at": "2019-10-30T09:49:19Z",
        "closed_at": "2019-11-04T13:12:07Z",
        "merged_at": "2019-11-04T13:12:07Z",
        "body": "Fixes #6822.",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-10-29T14:44:30Z",
        "closed_at": "2019-10-29T17:32:11Z",
        "merged_at": null,
        "body": "Reserve an option extension number for Ocaml protoc plugin, to be used for extending FileOptions and ServiceOptions",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 80,
        "deletions": 1,
        "changed_files": 5,
        "created_at": "2019-10-28T22:18:45Z",
        "closed_at": "2020-02-27T17:10:17Z",
        "merged_at": "2020-02-27T17:10:17Z",
        "body": "I have found that protoc compiler incorrectly set field values in proto3 generated message wrappers in JavaScript. Incorrect implementation of jspb.Message.setFieldIgnoringDefault_ could lead to data array corruption or incorrect property value load  if field number > 500.\r\n\r\nI have prepared simple test case at https://github.com/artiz/google-protobuf-invalid-message-pivot-selection to verify incorrect behavior",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-10-28T19:36:07Z",
        "closed_at": "2019-10-28T20:53:38Z",
        "merged_at": null,
        "body": "I have found that protoc compiler incorrectly set suggested pivot for generated message wrappers in JavaScript. So if new message is created in JS runtime without reading of real binary data then it is created with incorrect pivot and it breaks `jspb.Message.setFieldIgnoringDefault_` and so some message properties setters calls lead to data array corruption or incorrect property value load.\r\n\r\nI have prepared simple test case at https://github.com/artiz/google-protobuf-invalid-message-pivot-selection\r\n\r\n\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2019-10-28T11:12:14Z",
        "closed_at": "2019-10-29T18:49:10Z",
        "merged_at": "2019-10-29T18:49:10Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2019-10-28T10:57:55Z",
        "closed_at": "2019-10-29T18:37:07Z",
        "merged_at": "2019-10-29T18:37:07Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2019-10-27T20:03:32Z",
        "closed_at": "2019-10-29T18:53:35Z",
        "merged_at": null,
        "body": "In the Java's Readme has the previous version of protobuf-java and protobuf-java-utils.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 25,
        "changed_files": 1,
        "created_at": "2019-10-25T23:56:03Z",
        "closed_at": "2020-01-07T18:53:18Z",
        "merged_at": "2020-01-07T18:53:18Z",
        "body": "Currently this is managed by the release script. We should also possibly remove the section for \"Push artifacts to Maven Central\"",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-10-25T17:00:31Z",
        "closed_at": "2019-10-25T19:38:09Z",
        "merged_at": null,
        "body": "@TeBoring @rafi-kamal I'm designing a new presubmit check that would use git command. (The presubmit would git-checkout our tool before running it) This PR is to confirm `git` is available when running a protobuf-java's presubmit. Would you trigger the Kokoro build?\r\n\r\nThis PR is not intended to merge.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-10-25T13:06:07Z",
        "closed_at": "2019-10-28T23:29:16Z",
        "merged_at": "2019-10-28T23:29:15Z",
        "body": "protoc-3.10.0 generates broken javadocs for repeated enum values:\r\n\r\n````java\r\n/**\r\n * <pre>\r\n * A list of types.\r\n * </pre>\r\n * <code>repeated .foo.bar.ItemType types = 1;</code>\r\n * @param value The types to add.\r\n */\r\npublic int getTypesCount() {\r\n    return types_.size();\r\n}\r\n````\r\n\r\nwhich causes an `error` during javadoc generation.\r\n\r\nThis PR fixes that issue by using the correct parameter.\r\nThe error was accidentally added by me in #6231\r\n\r\nMaybe this fix could be added to a 3.10.1 release.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 25,
        "deletions": 31,
        "changed_files": 2,
        "created_at": "2019-10-25T06:15:11Z",
        "closed_at": "2019-11-20T19:23:55Z",
        "merged_at": null,
        "body": "Cherry picking 69cb61c6 from master to help resolve some issues that I'm currently facing.  Also found that someone else was facing the same issue #5441, and noted that it may be blocking of #658.",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 742,
        "deletions": 190,
        "changed_files": 10,
        "created_at": "2019-10-24T21:50:29Z",
        "closed_at": "2019-11-07T23:53:47Z",
        "merged_at": "2019-11-07T23:53:47Z",
        "body": "This optimization avoids creating Ruby objects for wrapper types until they are accessed. Ruby has significant per-object overheads, both at allocation and GC time. In messages with lots of wrapper fields, this optimization speeds up parsing greatly.\r\n\r\nAt parse time, we store wrappers as primitive values in the message. If the field is never accessed, or is only accessed as `foo.bar_as_value`, we never need to allocate a true Ruby object. Only if a user accesses `foo.bar` directly do we lazily create the Ruby object.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2019-10-24T18:06:57Z",
        "closed_at": "2019-10-28T23:28:42Z",
        "merged_at": "2019-10-28T23:28:42Z",
        "body": "This PR adds a load statement for `py_library` to make `@six` compatible with https://github.com/bazelbuild/bazel/issues/9006.\r\n\r\n//cc @aaliddell @gnossen",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2019-10-23T21:42:08Z",
        "closed_at": "2019-10-24T19:04:37Z",
        "merged_at": "2019-10-24T19:04:37Z",
        "body": "Looks like earlier I committed https://github.com/protocolbuffers/protobuf/pull/6757 to master instead of 3.10.x. ",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-10-23T21:31:01Z",
        "closed_at": "2019-10-24T19:06:06Z",
        "merged_at": "2019-10-24T19:06:06Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 492,
        "deletions": 125,
        "changed_files": 59,
        "created_at": "2019-10-23T11:38:31Z",
        "closed_at": "2021-03-05T23:27:18Z",
        "merged_at": null,
        "body": "ie: run `cpack -G RPM` (or \"DEB\") after building with CMake.\r\n\r\nA number of install components were renamed to consolidate them into a single development package - as would normally be expected with packages.  The development package includes protoc (with shared library).\r\n\r\nThe components now are:\r\n- devel\r\n- libprotobuf-lite\r\n- libprotobuf\r\n\r\nTesting status:\r\n- RPM tested on OpenSUSE Leap 15.1\r\n- DEB tested on Ubuntu Core 19.04\r\n- NSIS (Windows/setup.exe) not tested, but might work anyway.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2019-10-23T03:05:42Z",
        "closed_at": "2019-10-23T18:40:16Z",
        "merged_at": "2019-10-23T18:40:16Z",
        "body": "This goes hand-in-hand with other dependencies like junit, but seems to\r\nonly have been used from util/pom.xml.\r\n\r\nrelease note: no",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 48,
        "deletions": 34,
        "changed_files": 31,
        "created_at": "2019-10-22T18:54:08Z",
        "closed_at": "2019-10-23T19:37:18Z",
        "merged_at": "2019-10-23T19:37:18Z",
        "body": "Preparing for the Ruby and C# 3.10.1 release.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-10-22T18:01:31Z",
        "closed_at": "2019-11-13T00:39:01Z",
        "merged_at": null,
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-10-22T17:46:28Z",
        "closed_at": "2019-10-23T19:32:35Z",
        "merged_at": "2019-10-23T19:32:35Z",
        "body": "There is a problem in current test script related to protobuf-java BOM such as https://github.com/protocolbuffers/protobuf/pull/6752 in https://source.cloud.google.com/results/invocations/44587680-210c-4cdc-aa0b-fb1559e0e798/targets/protobuf%2Fgithub%2Fmaster%2Fubuntu%2Fjava_jdk7%2Fpresubmit/log .\r\n\r\n> [DEBUG] Using connector WagonRepositoryConnector with priority 0 for https://repo.maven.apache.org/maven2\r\nDownloading: https://repo.maven.apache.org/maven2/com/google/protobuf/protobuf-bom/3.11.0-rc-0/protobuf-bom-3.11.0-rc-0.pom\r\n> [DEBUG] Writing resolution tracking file /var/maven_local_repository/com/google/protobuf/protobuf-bom/3.11.0-rc-0/protobuf-bom-3.11.0-rc-0.pom.lastUpdated\r\n> [ERROR] The build could not read 1 project -> [Help 1]\r\norg.apache.maven.project.ProjectBuildingException: Some problems were encountered while processing the POMs:\r\n> [ERROR] Non-resolvable import POM: Could not find artifact com.google.protobuf:protobuf-bom:pom:3.11.0-rc-0 in central (https://repo.maven.apache.org/maven2) @ com.google.protobuf:protobuf-parent:3.11.0-rc-0, /tmp/protobuf/protobuf/java/pom.xml, line 68, column 19\r\n> [ERROR] 'dependencies.dependency.version' for com.google.protobuf:protobuf-java:jar is missing. @ line 17, column 17\r\n\r\nThis PR fixes the problem by installing the BOM locally before running the Java tests.\r\n\r\nNote: when releasing artifacts, please ensure that the BOM is also released.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 16,
        "changed_files": 1,
        "created_at": "2019-10-21T11:40:59Z",
        "closed_at": "2019-10-30T23:31:07Z",
        "merged_at": "2019-10-30T23:31:06Z",
        "body": "DLL linked with MSVC static runtime libraries doesn't require VC runtime at runtime.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2019-10-17T12:29:02Z",
        "closed_at": "2019-10-18T22:39:21Z",
        "merged_at": "2019-10-18T22:39:21Z",
        "body": "I updated the Cmake guide to the work with the newest version of visual studio 2019. ",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2019-10-16T00:58:38Z",
        "closed_at": "2019-10-18T22:40:16Z",
        "merged_at": "2019-10-18T22:40:16Z",
        "body": "In my windows project, i build protobuf from source using the WIN32_LEAN_AND_MEAN define via cmake flags.\r\nBut: common.cc also defines this macro, causing MSVC to warn about macro redifinition\r\nSolution: only define the macro when it's not already defined",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2019-10-15T17:40:47Z",
        "closed_at": "2021-10-13T00:41:08Z",
        "merged_at": null,
        "body": "cc @veblush @jtattermusch ",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 91,
        "deletions": 89,
        "changed_files": 12,
        "created_at": "2019-10-15T12:22:31Z",
        "closed_at": "2019-12-06T22:35:13Z",
        "merged_at": "2019-12-06T22:35:13Z",
        "body": "Remove following conversion warnings in generated code:\r\n\r\n`conversion from 'google::protobuf::uint64' to 'google::protobuf::uint32', possible loss of data`\r\n\r\nIn _cpp_helpers.cc:GenerateFieldBody(..field) in 1631pp_ the fields size and sign is queried and then the corresponding \"ReadVarint\"-variant is called. _TYPE_UINT32_ and _TYPE_UINT64_ are both done by \"ReadVarint\"(returning a uint64) and this leads to conversion warnings in the _TYPE_UINT32_ case.\r\n\r\nThis PR addresses the issue, by splitting (parse_context.h)ReadVarint into ReadVarint32 and ReadVarint64.\r\n\r\nAs there is no more ReadVarint function, the *.pb.cc files had to be re-generated and map_type_handler.h had to be adapted too.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2019-10-15T11:48:37Z",
        "closed_at": "2019-10-23T21:49:29Z",
        "merged_at": "2019-10-23T21:49:29Z",
        "body": "The generated code sometimes emits code, that issues the follwing warnings:\r\n\r\n`C4065: switch statement contains 'default' but no 'case' labels\r\n`\r\n\r\nThis PR solves it by suppressing \"switch / case / default\" when encountering empty ordered-fields lists.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-10-15T11:20:35Z",
        "closed_at": "2019-10-18T23:30:03Z",
        "merged_at": "2019-10-18T23:30:03Z",
        "body": "Removes following conversion warning:\r\n\r\n```\r\ngoogle/protobuf/map_entry_lite.h(131): warning C4267: 'argument': conversion from 'size_t' to 'google::protobuf::uint32', possible loss of data\r\ngoogle/protobuf/map_entry_lite.h(127): note: while compiling class template member function 'size_t google::protobuf::internal::MapEntryFuncs<Key,Value,google::protobuf::internal::WireFormatLite::TYPE_STRING,google::protobuf::internal::WireFormatLite::TYPE_BYTES>::ByteSizeLong(const Key &,const Value &)'\r\n        with\r\n       [\r\n            Key=std::string,\r\n            Value=std::string\r\n        ]\r\nnote: see reference to function template instantiation 'size_t google::protobuf::internal::MapEntryFuncs<Key,Value,google::protobuf::internal::WireFormatLite::TYPE_STRING,google::protobuf::internal::WireFormatLite::TYPE_BYTES>::ByteSizeLong(const Key &,const Value &)' being compiled\r\n        with\r\n        [\r\n            Key=std::string,\r\n            Value=std::string\r\n        ]\r\nnote: see reference to class template instantiation 'google::protobuf::internal::MapEntryFuncs<Key,Value,google::protobuf::internal::WireFormatLite::TYPE_STRING,google::protobuf::internal::WireFormatLite::TYPE_BYTES>' being compiled\r\n        with\r\n        [\r\n            Key=std::string,\r\n            Value=std::string\r\n        ]\r\n```\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2019-10-15T11:04:31Z",
        "closed_at": "2019-10-18T23:31:27Z",
        "merged_at": "2019-10-18T23:31:27Z",
        "body": "This PR removes the following unused parameter warnings.\r\n\r\n```\r\ngoogle/protobuf/message_lite.h:437:50: warning: unused parameter 'ptr' [-Wunused-parameter]\r\n  virtual const char* _InternalParse(const char* ptr,\r\n                                                 ^\r\n\r\ngoogle/protobuf/message_lite.h:438:62: warning: unused parameter 'ctx' [-Wunused-parameter]\r\n                                     internal::ParseContext* ctx) {\r\n                                                             ^\r\n\r\ngoogle/protobuf/parse_context.h:494:63: warning: unused parameter 'max_tag' [-Wunused-parameter]\r\ninline const char* ReadTag(const char* p, uint32* out, uint32 max_tag = 0) {\r\n                                                              ^\r\n\r\ngoogle/protobuf/extension_set.h:763:52: warning: unused parameter 'ctx' [-Wunused-parameter]\r\n                     const internal::ParseContext* ctx,\r\n                                                   ^\r\n```\r\n\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2019-10-14T07:40:15Z",
        "closed_at": "2020-05-16T07:38:12Z",
        "merged_at": null,
        "body": "The two commits fix a MSCV compiler error, compiler warning and crash.\r\n\r\n* Commit 63073d3 - MSCV does not support variable length arrays (VLAs), so instead use alloca when using MSVC.\r\n\r\n* Commit 1783b9c - Usage of the VOIDPTR_AT macro results in compiler error (or warning) C4146, \"unary minus operator applied to unsigned type, result still unsigned\".  If you manually expand the macro, it becomes (for line 1162):\r\n\r\nVOIDPTR_AT(msg, -sizeof(upb_msg_internal))\r\n(void*)(char*)(msg, (int)-sizeof(upb_msg_internal));\r\n\r\nsize_of returns size_t, which in MSVC is defined as typedef unsigned __int64 size_t. So you are taking the negative value of an unsigned type.\r\n\r\nThis change simply stops using the macro removing the (int)-sizeof bit causing this issue.\r\n\r\nIn addition, before this change I would randomly (but frequently) get segmentation faults when loading ruby generated protobuf classes (so just requiring the ruby files, not processing any data). The error was always a pointer at 0xFFFFFFFF. This change fixed the error.\r\n\r\nNote I did try and go back to replicate the original crash (I have been running with this patch for about a week), but failed to do.\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 509,
        "deletions": 1075,
        "changed_files": 55,
        "created_at": "2019-10-12T02:05:43Z",
        "closed_at": "2019-10-22T08:54:45Z",
        "merged_at": "2019-10-22T08:54:45Z",
        "body": "This fixes #6749, #6510, and #6509\r\n\r\n(Backports #6759 into 3.10.x branch).",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 20,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2019-10-12T02:04:07Z",
        "closed_at": "2019-10-22T06:24:44Z",
        "merged_at": "2019-10-22T06:24:44Z",
        "body": "This fixes #6749 and #6510",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2019-10-12T00:25:36Z",
        "closed_at": "2019-10-16T06:41:30Z",
        "merged_at": "2019-10-16T06:41:29Z",
        "body": "`OneOfDescriptor_each` is registered as a Ruby method which takes zero\r\nparameters, which means it should take one argument.\r\n\r\nWhen Ruby invokes `OneOfDescriptor_each`, it calls it with one parameter\r\nonly, which is one less than what `OneOfDescriptor_each` takes before\r\nthis commit. Calling a function with the wrong number of argument is\r\ntechnically undefined behavior.\r\n\r\nSee also: \u00a76.5.2.2, N1256",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2019-10-11T22:00:33Z",
        "closed_at": "2019-10-14T05:24:38Z",
        "merged_at": "2019-10-14T05:24:38Z",
        "body": "This is the same change as https://github.com/protocolbuffers/protobuf/pull/6756",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2019-10-11T21:25:47Z",
        "closed_at": "2019-10-14T17:55:01Z",
        "merged_at": "2019-10-14T17:55:01Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-10-11T19:30:46Z",
        "closed_at": "2019-10-15T19:05:15Z",
        "merged_at": "2019-10-15T19:05:15Z",
        "body": "",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1074,
        "deletions": 1151,
        "changed_files": 78,
        "created_at": "2019-10-11T19:06:27Z",
        "closed_at": "2019-10-24T19:03:06Z",
        "merged_at": "2019-10-24T19:03:06Z",
        "body": "",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 64,
        "deletions": 10,
        "changed_files": 4,
        "created_at": "2019-10-10T19:52:58Z",
        "closed_at": "2019-10-10T23:03:53Z",
        "merged_at": "2019-10-10T23:03:53Z",
        "body": "Default value of string/message map is not encoded (#6605)",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-10-08T21:57:57Z",
        "closed_at": "2019-10-15T19:03:09Z",
        "merged_at": "2019-10-15T19:03:09Z",
        "body": "This fixes build on, at least, NetBSD 8.1 with gcc 5.5 and SmartOS with gcc 7.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2019-10-08T19:45:14Z",
        "closed_at": "2019-10-15T16:00:07Z",
        "merged_at": "2019-10-15T16:00:07Z",
        "body": "release notes: no",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 138,
        "deletions": 0,
        "changed_files": 7,
        "created_at": "2019-10-08T13:25:21Z",
        "closed_at": "2019-10-08T16:26:29Z",
        "merged_at": null,
        "body": "Always !",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2019-10-04T20:00:30Z",
        "closed_at": "2021-10-13T01:22:43Z",
        "merged_at": null,
        "body": "`GOOGLE_LOG` had been used for reporting of a specific input file related warning. Use error collector instead and fix `SingleFileErrorCollector` to allow propagation of warnings.",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 39,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2019-10-04T13:38:49Z",
        "closed_at": "2022-02-02T22:37:09Z",
        "merged_at": null,
        "body": "Added option --create_phony_dependencies that generates phony target  dependencies for .d files like -MP in gcc #",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 39,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2019-10-04T12:22:40Z",
        "closed_at": "2019-10-04T13:29:02Z",
        "merged_at": null,
        "body": "Added option --create_phony_dependencies that generates phony target dependencies for .d files like -MP in gcc",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 281,
        "deletions": 120,
        "changed_files": 37,
        "created_at": "2019-10-03T21:30:30Z",
        "closed_at": "2019-10-10T23:56:19Z",
        "merged_at": "2019-10-10T23:56:19Z",
        "body": "",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 5,
        "changed_files": 3,
        "created_at": "2019-10-03T19:28:55Z",
        "closed_at": "2019-10-04T15:37:30Z",
        "merged_at": "2019-10-04T15:37:30Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-10-02T23:14:19Z",
        "closed_at": "2019-10-04T15:39:16Z",
        "merged_at": "2019-10-04T15:39:16Z",
        "body": "When importing dependencies of `com_google_protobuf` with `protobuf_deps`\r\n\r\n```bzl\r\nload(\"@com_google_protobuf//:protobuf_deps.bzl\", \"protobuf_deps\")\r\n\r\nprotobuf_deps()\r\n```\r\n\r\nIt currently gives an error because the associated build files are not exported:\r\n\r\n```plaintext\r\nERROR: /var/lib/jenkins/.cache/bazel/_bazel_jenkins/de8446692c11da2ee9ac26006b0c07ab/external/com_google_protobuf/protobuf_deps.bzl:9:9: no such target '@com_google_protobuf//:third_party/zlib.BUILD': target 'third_party/zlib.BUILD' not declared in package ''; however, a source file of this name exists.  (Perhaps add 'exports_files([\"third_party/zlib.BUILD\"])' to /BUILD?) defined by /var/lib/jenkins/.cache/bazel/_bazel_jenkins/de8446692c11da2ee9ac26006b0c07ab/external/com_google_protobuf/BUILD and referenced by '//external:zlib'\r\n```\r\n\r\nThis PR exports the build files so they can be accessible by external consumers.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 271,
        "deletions": 164,
        "changed_files": 7,
        "created_at": "2019-10-01T23:25:19Z",
        "closed_at": "2019-10-29T19:48:25Z",
        "merged_at": "2019-10-29T19:48:25Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 82,
        "deletions": 61,
        "changed_files": 4,
        "created_at": "2019-09-30T21:48:02Z",
        "closed_at": "2019-09-30T22:53:30Z",
        "merged_at": "2019-09-30T22:53:30Z",
        "body": "* Initialize well known type values\r\n\r\nAlso fixes #6667\r\n\r\n* Revert unwanted change",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2019-09-29T05:49:48Z",
        "closed_at": "2019-10-03T08:43:28Z",
        "merged_at": null,
        "body": "",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-09-27T07:21:46Z",
        "closed_at": "2019-09-27T21:41:44Z",
        "merged_at": "2019-09-27T21:41:44Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2019-09-27T03:11:29Z",
        "closed_at": "2019-09-30T02:49:18Z",
        "merged_at": "2019-09-30T02:49:18Z",
        "body": "Fixed spelling error",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-09-26T18:22:22Z",
        "closed_at": "2019-09-27T22:44:35Z",
        "merged_at": "2019-09-27T22:44:34Z",
        "body": "protocolbuffers/protobuf#6098",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2019-09-26T17:14:46Z",
        "closed_at": "2019-09-26T18:38:44Z",
        "merged_at": "2019-09-26T18:38:44Z",
        "body": "3.9.2 is on the Github releases page.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2019-09-25T08:31:20Z",
        "closed_at": "2021-10-13T17:47:40Z",
        "merged_at": null,
        "body": "I recently upgraded to the latest `protobuf-javalite` in a project that used a version prior to 3.4.1 before. After upgrading and regenerating the protobuf Java source files from the `*.proto` files, the resulting code fails to compile with the Eclipse compiler. Any place the method `createBuilder()` is used, appears this type of error message:\r\n\r\n    Cannot cast from GeneratedMessageLite.Builder<GeneratedMessageLite<MessageType,BuilderType>,GeneratedMessageLite.Builder<MessageType,BuilderType>> to Fileformat.Blob.Builder\r\n\r\nThe ordinary `javac` compiles the code fine. Digging into this, I found that the two versions of `createBuilder()` were introduced in 1a7a7fca804afa1c which is between version 3.4.0 and 3.4.1. Looking at the code in `GeneratedMessageLite` closely, it appears that there are generic type arguments on some methods that have the same name of the type arguments on the main class and hence hide the outer type argument. Seems to me like this is not good practice in general because it is confusing. Specifically with the methods `createBuilder()` I think the additional type arguments aren't necessary at all and correctly lead to an error. I haven't been able to run the tests (`mvn package` fails on my setup here on the master branch). Maybe somebody else can check whether the changes I suggest break anything. Thanks!",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-09-25T02:20:44Z",
        "closed_at": "2021-05-10T23:14:56Z",
        "merged_at": null,
        "body": "protocolbuffers/protobuf-javascript#50",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 27,
        "deletions": 27,
        "changed_files": 2,
        "created_at": "2019-09-25T00:16:37Z",
        "closed_at": "2019-09-25T01:26:02Z",
        "merged_at": "2019-09-25T01:26:02Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 35,
        "deletions": 41,
        "changed_files": 2,
        "created_at": "2019-09-24T22:37:36Z",
        "closed_at": "2019-09-25T00:10:25Z",
        "merged_at": "2019-09-25T00:10:25Z",
        "body": "The new function name also better reflects the semantics of the\r\nfunction.  Like timegm(), this function always converts to/from\r\nUTC, not local time.\r\n\r\nThis PR is against the 3.10 branch.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 42,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-09-24T19:48:12Z",
        "closed_at": "2019-09-26T20:04:08Z",
        "merged_at": "2019-09-26T20:04:08Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 35,
        "deletions": 41,
        "changed_files": 2,
        "created_at": "2019-09-24T18:32:51Z",
        "closed_at": "2019-09-25T00:11:27Z",
        "merged_at": null,
        "body": "The new function name also better reflects the semantics of the\r\nfunction.  Like timegm(), this function always converts to/from\r\nUTC, not local time.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 44,
        "deletions": 17,
        "changed_files": 3,
        "created_at": "2019-09-24T17:44:23Z",
        "closed_at": "2019-09-27T23:08:59Z",
        "merged_at": "2019-09-27T23:08:59Z",
        "body": "When browsing around the strutil files I found a function\r\nthat was never referenced inside the code base (but might be used by others since it's exported):\r\n\r\n`void StripString(string* s, const char* remove, char replacewith)`\r\n\r\nThe name was kind of **misleading** as well and it seems like\r\nit's a carbon copy of:\r\n\r\n`void ReplaceCharacters(string* s, const char* remove, char replacewith);`\r\n\r\n(even the parameter names are the same, the code is 100% the same.., makes me think it might have been a merge conflict gone wrong?)\r\n\r\nIs it intentional? Maybe for compatibility reasons? If so,\r\nlet's make it deprecated and use the ReplaceCharacters method inside\r\nor the other way around?\r\n\r\nAlso, noticed there were no tests for \"StripString\" or \"Replace\".\r\nAdded some for both. This might help with refactoring.\r\n\r\nIn any case, please do tell if this is something interesting or we should leave it be.\r\nI'll continue browsing through the strutils.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2019-09-24T16:15:10Z",
        "closed_at": "2019-10-29T18:43:50Z",
        "merged_at": "2019-10-29T18:43:50Z",
        "body": "Fixes https://github.com/protocolbuffers/protobuf/issues/5984.\r\n\r\nPl. let me know if you prefer different error handling.",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2019-09-24T15:46:57Z",
        "closed_at": "2021-10-13T01:18:28Z",
        "merged_at": null,
        "body": "Should fix https://github.com/protocolbuffers/protobuf/issues/6271.",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 24,
        "changed_files": 7,
        "created_at": "2019-09-24T15:27:28Z",
        "closed_at": "2019-09-27T22:07:45Z",
        "merged_at": null,
        "body": "Fixes https://github.com/protocolbuffers/protobuf/issues/4561 I think.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 60325,
        "deletions": 53506,
        "changed_files": 332,
        "created_at": "2019-09-24T14:45:14Z",
        "closed_at": "2019-09-27T22:24:35Z",
        "merged_at": null,
        "body": "Heyo folks! \r\n\r\n[clang-format](https://clang.llvm.org/docs/ClangFormat.html) is great tool for fixing the clang-format warnings and have been used for many open source projects. I ran clang-format across protobuf, hope you find my pr useful.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2019-09-23T17:43:05Z",
        "closed_at": "2019-11-04T17:49:33Z",
        "merged_at": null,
        "body": "Previously, you would have to instantiate a timestamp class then call #from_time on that object to mutate its state. Instead provides a mechanism to instantiate the object with the correct state.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 47,
        "deletions": 33,
        "changed_files": 30,
        "created_at": "2019-09-20T20:46:36Z",
        "closed_at": "2019-09-20T21:50:53Z",
        "merged_at": "2019-09-20T21:50:53Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 26,
        "deletions": 14,
        "changed_files": 2,
        "created_at": "2019-09-20T19:57:13Z",
        "closed_at": "2019-09-20T20:58:13Z",
        "merged_at": "2019-09-20T20:58:13Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 26,
        "deletions": 14,
        "changed_files": 2,
        "created_at": "2019-09-20T19:44:09Z",
        "closed_at": "2019-09-20T20:52:19Z",
        "merged_at": "2019-09-20T20:52:19Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 19,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2019-09-20T10:44:56Z",
        "closed_at": "2019-09-27T17:56:20Z",
        "merged_at": null,
        "body": "## REF\r\n[Google::Protobuf::Timestamp.decode_json sometimes return incorrect timestamp values in Ruby #6616](https://github.com/protocolbuffers/protobuf/issues/6616)\r\n\r\n## WHY\r\nIn current implementation of protobuf/ruby, the result of counting leap days was wrong.\r\nThis caused the wrong result of `Google::Protobuf::Timestamp.decode_json`.\r\n\r\n```ruby\r\n[1] pry(main)> t = Google::Protobuf::Timestamp.decode_json('\"1993-02-10T00:00:00.000+00:00\"'); Time.at(t.seconds)\r\n=> 1993-02-09 00:00:00 +0000  # This is the wrong result. The input is 1993-02-10, but the decoded value is 1993-02-09.\r\n```\r\n\r\nHere are some other examples.\r\n\r\n<details>\r\n\r\n```ruby\r\n[2] pry(main)> [*1900..2010].each { |year| t = Google::Protobuf::Timestamp.decode_json(\"\\\"#{year}-02-10T00:00:00.000+00:00\\\"\"); print Time.at(t.seconds).to_s + \"#{'  # wrong' if Time.at(t.seconds).day != 10 }\\n\";  }\r\n\r\n1900-02-10 09:00:00 +0900\r\n1901-02-10 09:00:00 +0900\r\n1902-02-10 09:00:00 +0900\r\n1903-02-11 09:00:00 +0900  # wrong\r\n1904-02-11 09:00:00 +0900  # wrong\r\n1905-02-10 09:00:00 +0900\r\n1906-02-10 09:00:00 +0900\r\n1907-02-11 09:00:00 +0900  # wrong\r\n1908-02-11 09:00:00 +0900  # wrong\r\n1909-02-10 09:00:00 +0900\r\n1910-02-10 09:00:00 +0900\r\n1911-02-11 09:00:00 +0900  # wrong\r\n1912-02-11 09:00:00 +0900  # wrong\r\n1913-02-10 09:00:00 +0900\r\n1914-02-10 09:00:00 +0900\r\n1915-02-11 09:00:00 +0900  # wrong\r\n1916-02-11 09:00:00 +0900  # wrong\r\n1917-02-10 09:00:00 +0900\r\n1918-02-10 09:00:00 +0900\r\n1919-02-11 09:00:00 +0900  # wrong\r\n1920-02-11 09:00:00 +0900  # wrong\r\n1921-02-10 09:00:00 +0900\r\n1922-02-10 09:00:00 +0900\r\n1923-02-11 09:00:00 +0900  # wrong\r\n1924-02-11 09:00:00 +0900  # wrong\r\n1925-02-10 09:00:00 +0900\r\n1926-02-10 09:00:00 +0900\r\n1927-02-11 09:00:00 +0900  # wrong\r\n1928-02-11 09:00:00 +0900  # wrong\r\n1929-02-10 09:00:00 +0900\r\n1930-02-10 09:00:00 +0900\r\n1931-02-11 09:00:00 +0900  # wrong\r\n1932-02-11 09:00:00 +0900  # wrong\r\n1933-02-10 09:00:00 +0900\r\n1934-02-10 09:00:00 +0900\r\n1935-02-11 09:00:00 +0900  # wrong\r\n1936-02-11 09:00:00 +0900  # wrong\r\n1937-02-10 09:00:00 +0900\r\n1938-02-10 09:00:00 +0900\r\n1939-02-11 09:00:00 +0900  # wrong\r\n1940-02-11 09:00:00 +0900  # wrong\r\n1941-02-10 09:00:00 +0900\r\n1942-02-10 09:00:00 +0900\r\n1943-02-11 09:00:00 +0900  # wrong\r\n1944-02-11 09:00:00 +0900  # wrong\r\n1945-02-10 09:00:00 +0900\r\n1946-02-10 09:00:00 +0900\r\n1947-02-11 09:00:00 +0900  # wrong\r\n1948-02-11 09:00:00 +0900  # wrong\r\n1949-02-10 09:00:00 +0900\r\n1950-02-10 09:00:00 +0900\r\n1951-02-11 09:00:00 +0900  # wrong\r\n1952-02-11 09:00:00 +0900  # wrong\r\n1953-02-10 09:00:00 +0900\r\n1954-02-10 09:00:00 +0900\r\n1955-02-11 09:00:00 +0900  # wrong\r\n1956-02-11 09:00:00 +0900  # wrong\r\n1957-02-10 09:00:00 +0900\r\n1958-02-10 09:00:00 +0900\r\n1959-02-11 09:00:00 +0900  # wrong\r\n1960-02-11 09:00:00 +0900  # wrong\r\n1961-02-10 09:00:00 +0900\r\n1962-02-10 09:00:00 +0900\r\n1963-02-11 09:00:00 +0900  # wrong\r\n1964-02-11 09:00:00 +0900  # wrong\r\n1965-02-10 09:00:00 +0900\r\n1966-02-10 09:00:00 +0900\r\n1967-02-11 09:00:00 +0900  # wrong\r\n1968-02-11 09:00:00 +0900  # wrong\r\n1969-02-10 09:00:00 +0900\r\n1970-02-10 09:00:00 +0900\r\n1971-02-10 09:00:00 +0900\r\n1972-02-10 09:00:00 +0900\r\n1973-02-09 09:00:00 +0900  # wrong\r\n1974-02-10 09:00:00 +0900\r\n1975-02-10 09:00:00 +0900\r\n1976-02-10 09:00:00 +0900\r\n1977-02-09 09:00:00 +0900  # wrong\r\n1978-02-10 09:00:00 +0900\r\n1979-02-10 09:00:00 +0900\r\n1980-02-10 09:00:00 +0900\r\n1981-02-09 09:00:00 +0900  # wrong\r\n1982-02-10 09:00:00 +0900\r\n1983-02-10 09:00:00 +0900\r\n1984-02-10 09:00:00 +0900\r\n1985-02-09 09:00:00 +0900  # wrong\r\n1986-02-10 09:00:00 +0900\r\n1987-02-10 09:00:00 +0900\r\n1988-02-10 09:00:00 +0900\r\n1989-02-09 09:00:00 +0900  # wrong\r\n1990-02-10 09:00:00 +0900\r\n1991-02-10 09:00:00 +0900\r\n1992-02-10 09:00:00 +0900\r\n1993-02-09 09:00:00 +0900  # wrong\r\n1994-02-10 09:00:00 +0900\r\n1995-02-10 09:00:00 +0900\r\n1996-02-10 09:00:00 +0900\r\n1997-02-09 09:00:00 +0900  # wrong\r\n1998-02-10 09:00:00 +0900\r\n1999-02-10 09:00:00 +0900\r\n2000-02-10 09:00:00 +0900\r\n2001-02-09 09:00:00 +0900  # wrong\r\n2002-02-10 09:00:00 +0900\r\n2003-02-10 09:00:00 +0900\r\n2004-02-10 09:00:00 +0900\r\n2005-02-09 09:00:00 +0900  # wrong\r\n2006-02-10 09:00:00 +0900\r\n2007-02-10 09:00:00 +0900\r\n2008-02-10 09:00:00 +0900\r\n2009-02-09 09:00:00 +0900  # wrong\r\n2010-02-10 09:00:00 +0900\r\n```\r\n\r\n</details>\r\n\r\n## WHAT\r\nI fixed the logic to count leap days.\r\n",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2019-09-20T07:30:05Z",
        "closed_at": "2019-09-23T10:31:58Z",
        "merged_at": null,
        "body": "When compiling protoc generated code in 64bit windows, we get conversion warnings.\r\n\r\nThe reason being, that the size method of std::string returns a size_t, while VerifyUtf8String accepts an int.\r\n\r\n```\r\n\"  static bool ValidateKey(std::string* s) {\\n\"\r\n             \"    return ::$proto_ns$::internal::WireFormatLite::\"\r\n-            \"VerifyUtf8String(s->data(), s->size(), \"\r\n```\r\n\r\nMotivated by _cpp_string_field.cc(call of GenerateUtf8CheckCodeForString)_ this PR solves the issue by static-casting the return value of the size method to int.\r\n\r\nBy approving this PR protobuf will get rid of these warnings:\r\n\r\n```\r\nFile: XyzProto.pb.h, Line: xxx\r\nMessage: 'argument': conversion from 'size_t' to 'int', possible loss of data\r\n\r\n```\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 20,
        "deletions": 19,
        "changed_files": 6,
        "created_at": "2019-09-20T03:56:47Z",
        "closed_at": "2019-12-05T09:38:11Z",
        "merged_at": "2019-12-05T09:38:11Z",
        "body": "While adding nullable annotations throughout the lib, I found a few missing null-checks and some IsInitialized checks accidentally left in MessageParser. Additionally, ExtensionCollection.CrossLink did some unnecessary things so this simplifies that.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 12,
        "changed_files": 1,
        "created_at": "2019-09-19T16:09:05Z",
        "closed_at": "2019-09-20T14:52:35Z",
        "merged_at": "2019-09-20T14:52:35Z",
        "body": "The code in question hasn't change in a long time so there likely is a compiler\r\nchange that is causing this to suddenly be an issue. memcpy should be a better\r\ncode pattern in general.\r\n\r\nShould address https://github.com/firebase/firebase-ios-sdk/issues/3851",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2019-09-19T14:30:37Z",
        "closed_at": "2019-09-20T22:14:49Z",
        "merged_at": "2019-09-20T22:14:49Z",
        "body": "The parameters in these two functions are not used and trigger corresponding warnings.\r\n\r\nThis PR comments out the parameter-names according to the Google C++ Style Guide ( section: Function_Declarations_and_Definitions ).",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 14,
        "changed_files": 7,
        "created_at": "2019-09-19T09:41:01Z",
        "closed_at": "2019-09-19T12:49:07Z",
        "merged_at": "2019-09-19T12:49:07Z",
        "body": "Always remember to copy-paste responsibly.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-09-18T13:18:19Z",
        "closed_at": "2020-10-09T07:39:43Z",
        "merged_at": null,
        "body": "Hello,\r\n\r\nI found `protobuf-mode` doesn't utilize `imenu`. `imenu` is a framework for Emacs to index specific major mode buffer.\r\n\r\nThis patch will enable `protobuf-mode` to make use of  `imenu`.\r\n\r\n<img width=\"692\" alt=\"\u5c4f\u5e55\u5feb\u7167 2019-09-18 \u4e0b\u53488 59 59\" src=\"https://user-images.githubusercontent.com/10190397/65151741-4967e180-da59-11e9-93bd-b9dbdf91acf7.png\">",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2019-09-18T02:16:46Z",
        "closed_at": "2019-09-30T16:28:28Z",
        "merged_at": "2019-09-30T16:28:28Z",
        "body": "Currently, the generated header file might cause warnings if user specifies `-Wconversion` compiler option. This commit should be able to fix it.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 108,
        "deletions": 83,
        "changed_files": 32,
        "created_at": "2019-09-17T23:10:38Z",
        "closed_at": "2019-09-18T20:30:04Z",
        "merged_at": "2019-09-18T20:30:04Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 25,
        "deletions": 110,
        "changed_files": 23,
        "created_at": "2019-09-17T03:25:30Z",
        "closed_at": "2021-10-30T18:57:35Z",
        "merged_at": null,
        "body": "Support for py2.6 was dropped in #4049, but the py2.6 compatible code was unfortunately not removed. ",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 30,
        "deletions": 209,
        "changed_files": 4,
        "created_at": "2019-09-16T19:41:02Z",
        "closed_at": "2019-09-17T22:55:23Z",
        "merged_at": "2019-09-17T22:55:22Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 12,
        "deletions": 5,
        "changed_files": 4,
        "created_at": "2019-09-13T23:13:27Z",
        "closed_at": "2021-10-13T00:19:12Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 54,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-09-13T23:10:31Z",
        "closed_at": "2019-09-16T22:35:54Z",
        "merged_at": "2019-09-16T22:35:53Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2019-09-13T21:45:17Z",
        "closed_at": "2022-05-16T18:13:36Z",
        "merged_at": null,
        "body": "See deprecation details here: https://nodejs.org/api/buffer.html#buffer_class_buffer\r\n\r\nThis will fix the following error message:\r\n```\r\n(node:30530) [DEP0005] DeprecationWarning: Buffer() is deprecated due to \r\nsecurity and usability issues. Please use the Buffer.alloc(), \r\nBuffer.allocUnsafe(), or Buffer.from() methods instead.\r\n```\r\nwhich is seen commonly in Github issues, here and in the wild:\r\n- #5429\r\n- https://github.com/gatsbyjs/gatsby/issues/13094\r\n- https://github.com/microsoft/vscode/issues/67534\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 34,
        "deletions": 20,
        "changed_files": 16,
        "created_at": "2019-09-13T18:10:27Z",
        "closed_at": "2019-09-18T22:32:10Z",
        "merged_at": "2019-09-18T22:32:10Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-09-13T06:46:30Z",
        "closed_at": "2022-02-03T22:58:55Z",
        "merged_at": null,
        "body": "This cuts out what is currently 209 lines of ~junk spat out while the tests are running:\r\n```\r\n/protobuf/python/google/protobuf/descriptor_database.py:157: RuntimeWarning: Conflict register for file \"other_file\": protobuf_unittest.TestAllTypes is already defined in file \"google/protobuf/unittest.proto\"\r\n```\r\nThe warning is already explicitly tested for and is unaffected by this change.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-09-11T20:30:19Z",
        "closed_at": "2019-09-12T16:33:23Z",
        "merged_at": "2019-09-12T16:33:23Z",
        "body": "Submitting [Kroto plus](https://github.com/marcoferrer/kroto-plus) as a third party add-on.\r\nKroto is a protoc plugin which produces type safe Kotlin DSLs from proto definitions. It also performs DSL marker annotation insertions for generated java classes. ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-09-11T15:38:06Z",
        "closed_at": "2019-09-11T16:54:02Z",
        "merged_at": "2019-09-11T16:54:02Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-09-11T10:48:00Z",
        "closed_at": "2019-09-11T17:36:01Z",
        "merged_at": "2019-09-11T17:36:01Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1048,
        "deletions": 652,
        "changed_files": 93,
        "created_at": "2019-09-11T01:00:13Z",
        "closed_at": "2019-09-12T18:03:28Z",
        "merged_at": "2019-09-12T18:03:28Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-09-07T12:38:47Z",
        "closed_at": "2019-09-10T07:06:18Z",
        "merged_at": "2019-09-10T07:06:18Z",
        "body": "On the linked Wiki page, it can be seen that the creator is `opticron`, whose Github repository is also linked, and contains a more up-to-date implementation.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-09-06T14:02:31Z",
        "closed_at": "2019-09-06T18:13:26Z",
        "merged_at": "2019-09-06T18:13:26Z",
        "body": "Fixes #6627 .\r\n\r\nThe problem was that when Linkage Monitor temporarily updates the project version to \"-SNAPSHOT\", it needed \"-rc-1\" BOM in Maven Central.\r\n\r\n```\r\n++ mvn -e -B -Dhttps.protocols=TLSv1.2 versions:set -DnewVersion=3.10.0-SNAPSHOT\r\n[INFO] Error stacktraces are turned on.\r\n[INFO] Scanning for projects...\r\n[INFO] Downloading: https://repo.maven.apache.org/maven2/com/google/protobuf/protobuf-bom/3.10.0-rc-1/protobuf-bom-3.10.0-rc-1.pom\r\n[ERROR] [ERROR] Some problems were encountered while processing the POMs:\r\n[ERROR] Non-resolvable import POM: Could not find artifact com.google.protobuf:protobuf-bom:pom:3.10.0-rc-1 in central (https://repo.maven.apache.org/maven2) @ line 68, column 19\r\n```\r\n\r\nAfter the change (local installation of protobuf-bom before updating the version), the command stops downloading the BOM from Maven Central.\r\n\r\n```\r\n++ mvn -e -B -Dhttps.protocols=TLSv1.2 versions:set -DnewVersion=3.9.1-SNAPSHOT\r\n[INFO] Error stacktraces are turned on.\r\n[INFO] Scanning for projects...\r\n[INFO] Downloading: https://repo.maven.apache.org/maven2/org/apache/felix/maven-bundle-plugin/3.0.1/maven-bundle-plugin-3.0.1.pom\r\n[INFO] Downloaded: https://repo.maven.apache.org/maven2/org/apache/felix/maven-bundle-plugin/3.0.1/maven-bundle-plugin-3.0.1.pom (9 KB at 27.4 KB/sec)\r\n```\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-09-06T07:28:17Z",
        "closed_at": "2021-03-05T23:31:24Z",
        "merged_at": null,
        "body": "See #6624 ",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 173,
        "deletions": 0,
        "changed_files": 4,
        "created_at": "2019-09-05T17:51:06Z",
        "closed_at": "2019-09-09T20:31:54Z",
        "merged_at": "2019-09-09T20:31:54Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 45,
        "deletions": 31,
        "changed_files": 19,
        "created_at": "2019-09-05T16:46:15Z",
        "closed_at": "2021-03-05T23:37:17Z",
        "merged_at": null,
        "body": "To keep master always have newer version to the released version, update the master version to next rc1.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2019-09-05T07:39:35Z",
        "closed_at": "2021-10-13T00:33:29Z",
        "merged_at": null,
        "body": "This PR fix compile warning refer in issue #6419.",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 68,
        "deletions": 54,
        "changed_files": 31,
        "created_at": "2019-09-04T20:30:47Z",
        "closed_at": "2019-09-06T00:22:41Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 15,
        "deletions": 4,
        "changed_files": 5,
        "created_at": "2019-09-04T18:23:13Z",
        "closed_at": "2019-09-30T21:29:26Z",
        "merged_at": "2019-09-30T21:29:26Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 28,
        "deletions": 23,
        "changed_files": 17,
        "created_at": "2019-09-04T18:07:32Z",
        "closed_at": "2019-09-05T16:44:51Z",
        "merged_at": null,
        "body": "This will be used after release at merge back to master",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 20,
        "deletions": 23,
        "changed_files": 2,
        "created_at": "2019-09-04T17:22:32Z",
        "closed_at": "2019-09-04T19:30:58Z",
        "merged_at": "2019-09-04T19:30:58Z",
        "body": "- use final instead of obvious types for local variables\r\n- add missing `void` return type\r\n- make the comments into doccomments (///)",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2019-09-04T01:58:40Z",
        "closed_at": "2019-09-04T18:52:06Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-09-02T10:28:34Z",
        "closed_at": "2019-09-03T23:44:46Z",
        "merged_at": "2019-09-03T23:44:46Z",
        "body": "",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-08-30T13:42:47Z",
        "closed_at": "2019-08-30T17:36:37Z",
        "merged_at": "2019-08-30T17:36:37Z",
        "body": "@rafi-kamal ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2019-08-29T23:37:52Z",
        "closed_at": "2019-08-30T17:47:26Z",
        "merged_at": "2019-08-30T17:47:26Z",
        "body": "* When length is zero, substr returns null instead of emptry string, which breaks the invariable for message.\r\n* Tested in https://github.com/protocolbuffers/protobuf/pull/6560",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 27,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2019-08-29T21:09:31Z",
        "closed_at": "2019-08-30T13:46:31Z",
        "merged_at": "2019-08-30T13:46:31Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-08-29T20:40:45Z",
        "closed_at": "2021-10-13T00:29:34Z",
        "merged_at": null,
        "body": "This updates GoogleTest to include load statements for `@rules_cc`, which will be required by a future version of Bazel.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 392,
        "deletions": 113,
        "changed_files": 4,
        "created_at": "2019-08-29T20:29:00Z",
        "closed_at": "2020-10-22T21:00:49Z",
        "merged_at": null,
        "body": "In a future version of Bazel, all languages will require\r\na protoc plugin instead of having some of them built\r\ndirectly into protoc [1]. This change prepares Protobuf\r\nfor that by splitting //:protoc_lib into language-specific\r\ntargets. For other build-systems, this is effectively a no-op.\r\n\r\nBy exporting all language-specific targets as //:protoc_lib,\r\nthis remains fully compatible with previous versions.\r\n\r\n[1] https://docs.google.com/document/d/1u95vlQ1lWeQNR4bUw5T4cMeHTGJla2_e1dHHx7v4Dvg/edit",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 32,
        "deletions": 8,
        "changed_files": 2,
        "created_at": "2019-08-29T20:00:42Z",
        "closed_at": "2019-08-29T22:27:49Z",
        "merged_at": "2019-08-29T22:27:49Z",
        "body": "* For missing message value, map should create a default message\r\ninstance in order to keep its invariable.\r\n* On 32-bit platform, int64 map key should be string\r\n\r\nIntegration test implemented in #6560, which will catch bugs fixed in this issue.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2019-08-29T04:42:15Z",
        "closed_at": "2019-08-29T18:11:20Z",
        "merged_at": "2019-08-29T18:11:20Z",
        "body": "We've notice significant issues downloading from zlib.net. Since there\r\nare already other archives coming from GitHub, this shouldn't negatively\r\naffect reliability.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-08-27T18:29:00Z",
        "closed_at": "2019-08-27T20:16:29Z",
        "merged_at": "2019-08-27T20:16:29Z",
        "body": "fixes #6527",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 17,
        "deletions": 9,
        "changed_files": 1,
        "created_at": "2019-08-27T08:12:12Z",
        "closed_at": "2019-08-29T22:35:15Z",
        "merged_at": "2019-08-29T22:35:15Z",
        "body": " This PR fix #6548 ,  add NULL pointer checks in `encode_decode.c`",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 6528,
        "deletions": 6950,
        "changed_files": 6,
        "created_at": "2019-08-26T23:27:56Z",
        "closed_at": "2019-08-27T20:14:58Z",
        "merged_at": "2019-08-27T20:14:58Z",
        "body": "* https://github.com/protocolbuffers/upb/pull/208",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 19,
        "deletions": 7,
        "changed_files": 3,
        "created_at": "2019-08-26T22:19:40Z",
        "closed_at": "2019-08-30T17:58:12Z",
        "merged_at": "2019-08-30T17:58:11Z",
        "body": "This commit removes the question template. It also updates the bug report and feature request templates to direct questions to the mailing list.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2019-08-26T14:24:46Z",
        "closed_at": "2019-08-30T20:56:18Z",
        "merged_at": "2019-08-30T20:56:18Z",
        "body": "This PR adds `Automatic-Module-Name` entries to the Manifest files. This allows Java9+ users to depend on protobuf, without having any impact for users of earlier versions.\r\n\r\nThe module names match the OSGI symbolic names as recommended in [JLBP-20](https://github.com/GoogleCloudPlatform/cloud-opensource-java/blob/master/library-best-practices/JLBP-20.md)\r\n\r\nThis fixes #3903 and #6493\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 346,
        "deletions": 5,
        "changed_files": 7,
        "created_at": "2019-08-23T20:10:58Z",
        "closed_at": "2019-09-03T17:47:33Z",
        "merged_at": "2019-09-03T17:47:33Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2019-08-23T18:11:22Z",
        "closed_at": "2019-08-23T19:25:45Z",
        "merged_at": "2019-08-23T19:25:45Z",
        "body": "\u2026ot be released.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 30,
        "deletions": 2,
        "changed_files": 5,
        "created_at": "2019-08-23T13:21:29Z",
        "closed_at": "2019-08-30T18:44:44Z",
        "merged_at": "2019-08-30T18:44:44Z",
        "body": "PR for #6486 ",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2019-08-23T00:36:49Z",
        "closed_at": "2019-08-23T22:12:39Z",
        "merged_at": "2019-08-23T22:12:39Z",
        "body": "@rafi-kamal ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5271,
        "deletions": 7824,
        "changed_files": 159,
        "created_at": "2019-08-22T23:23:59Z",
        "closed_at": "2019-08-23T05:04:52Z",
        "merged_at": "2019-08-23T05:04:52Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-08-22T21:54:10Z",
        "closed_at": "2019-09-03T23:29:54Z",
        "merged_at": "2019-09-03T23:29:54Z",
        "body": "This adds links under the Clojure header to\r\n\r\nhttps://protojure.github.io\r\n\r\nSigned-off-by: Greg Haskins <gregory.haskins@gmail.com>",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 192,
        "deletions": 124,
        "changed_files": 6,
        "created_at": "2019-08-22T21:26:35Z",
        "closed_at": "2019-08-23T19:20:20Z",
        "merged_at": "2019-08-23T19:20:20Z",
        "body": "* Defautl values in proto3 should not be encoded.\r\n* Values should be converted to the canonical representation (e.g.,\r\nlong int64 value may be truncated for int32 field)",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2019-08-22T18:50:01Z",
        "closed_at": "2019-08-22T20:25:20Z",
        "merged_at": "2019-08-22T20:25:20Z",
        "body": "Proto2 has been tested for invalid cases. Check implementation of\r\nExpectParseFailureForProto (https://github.com/protocolbuffers/protobuf/blob/master/conformance/binary_json_conformance_suite.cc#L322)",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-08-22T09:46:38Z",
        "closed_at": "2019-08-30T08:39:40Z",
        "merged_at": null,
        "body": "#6182 ",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 82,
        "deletions": 27,
        "changed_files": 7,
        "created_at": "2019-08-22T01:04:30Z",
        "closed_at": "2019-08-28T22:08:31Z",
        "merged_at": "2019-08-28T22:08:31Z",
        "body": "This avoids most of the work of layout_init() by creating a template object we can `memcpy()` from when initializing a new object.\r\n\r\nThere is a bit of complication since we must eagerly allocate maps and repeated fields. So we have to `dup` these still in `layout_init()`.\r\n\r\nIn the benchmark on my machine this takes us from 8 seconds to 2.3 seconds, or a 70% reduction in runtime overall.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 5251,
        "deletions": 7819,
        "changed_files": 156,
        "created_at": "2019-08-21T23:07:13Z",
        "closed_at": "2019-08-23T17:02:45Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 395,
        "deletions": 391,
        "changed_files": 7,
        "created_at": "2019-08-21T15:50:23Z",
        "closed_at": "2019-08-23T00:13:31Z",
        "merged_at": "2019-08-23T00:13:31Z",
        "body": "This change was automated by\r\n`buildifier -lint=fix -warnings=all WORKSPACE $(find . -name \"*.bzl\" -o -name \"BUILD\" -o -name \"*.BUILD\")`",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-08-20T23:49:41Z",
        "closed_at": "2019-08-23T00:57:17Z",
        "merged_at": "2019-08-23T00:57:17Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 21,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-08-20T21:10:49Z",
        "closed_at": "2019-08-20T22:17:15Z",
        "merged_at": "2019-08-20T22:17:15Z",
        "body": "This fixes https://github.com/protocolbuffers/protobuf/issues/6532.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 42,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2019-08-20T02:33:21Z",
        "closed_at": "2020-05-18T10:55:21Z",
        "merged_at": null,
        "body": "Provides very efficient access to the underlying data at the expense of foregoing null checks.\r\n\r\n#6217",
        "comments": 11
    },
    {
        "merged": true,
        "additions": 235,
        "deletions": 31,
        "changed_files": 4,
        "created_at": "2019-08-19T22:10:34Z",
        "closed_at": "2019-09-03T23:39:26Z",
        "merged_at": "2019-09-03T23:39:26Z",
        "body": "LIBPROTOBUF_EXPORTS currently only works on MSVC, this patch should allow it to work on clang/gcc.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 20,
        "deletions": 17,
        "changed_files": 1,
        "created_at": "2019-08-19T16:53:09Z",
        "closed_at": "2019-08-22T21:36:28Z",
        "merged_at": "2019-08-22T21:36:28Z",
        "body": "We were creating a map decoding frame when starting the *map*,\r\nbut clearing the GC slot when finishing each *map entry*.  This\r\nmeans that the decoding frame could be collected in the meantime.\r\n\r\nHopefully this will fix https://github.com/protocolbuffers/protobuf/issues/6532 (needs to be tested/verified).\r\n\r\nI have not verified that this fixes anything yet, but it does seem to correct a correctness error in the previous code.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 82,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2019-08-17T23:15:47Z",
        "closed_at": "2019-10-18T15:35:13Z",
        "merged_at": "2019-10-18T15:35:13Z",
        "body": "This property is useful for efficiently initializing long RepeatedFields.\r\n\r\nI used System.Collections.Generic.List's design as a model.  It should feel the most familiar to C# developers.\r\n\r\nFixes: #5501",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 728,
        "deletions": 1,
        "changed_files": 32,
        "created_at": "2019-08-15T23:29:06Z",
        "closed_at": "2020-02-11T19:40:18Z",
        "merged_at": "2020-02-11T19:40:18Z",
        "body": "**Background:**\r\n\r\nFormerly, the Python protobuf reference documentation was built with\r\n[Epydoc](http://epydoc.sourceforge.net/). This package has not been\r\nupdated since 2008, and it has inconsistent formatting (see internal\r\nissue 131415575) with most Python documentation. Sphinx is used for the\r\nofficial docs.python.org docs as well as most other Python packages,\r\nincluding the Google client libraries and related packages, such as\r\nhttps://googleapis.dev/python/google-api-core/latest/\r\n\r\nTo build the docs with Sphinx:\r\n\r\n1. Install the needed packages (`sphinx`, `sphinxcontrib-napoleon` for\r\nGoogle-style docstring support). I've created a conda environment file\r\nto make this easier:\r\n\r\n```\r\nconda env create -f python/docs/environment.yml\r\n```\r\n\r\n2. (Optional) Generate reference docs files and regenerate index:\r\n\r\n```\r\ncd python\r\npython generate_docs.py\r\ncd ..\r\n```\r\n\r\n3. Run Sphinx.\r\n\r\n```\r\ncd python/docs\r\nmake html\r\n```\r\n\r\n**About this change:**\r\n\r\nThe script at `python/generate_docs.py` creates a ReStructured Text file\r\nfor each public module in the protobuf Python package. The script also\r\nupdates the table of contents in `python/docs/index.rst` to point to\r\nthese module references.\r\n\r\n**Future work:**\r\n\r\nTesting the docs build on PRs requires contributors to actually do some\r\nsetup work to configure builds on their fork. It'd be better if CI had a\r\ndocs build session to verify that the Sphinx docs generation at least\r\nruns.\r\n\r\nThere are many warnings due to not-quite-correct docstrings in the\r\nactual Python code itself. I'm choosing to ignore these errors to keep\r\nthe PR small, but I recommend you fix these and then enable \"fail on\r\nwarnings\" in the docs build on CI.\r\n\r\nTowards #4498",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-08-15T23:01:37Z",
        "closed_at": "2019-08-23T16:47:43Z",
        "merged_at": "2019-08-23T16:47:42Z",
        "body": "clang-cl requires the order to be the opposite of what it currently is.\r\nIt should not affect other compilers since this is the only compiler\r\nthat has both macros defined.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 131,
        "deletions": 104,
        "changed_files": 4,
        "created_at": "2019-08-15T13:40:37Z",
        "closed_at": "2019-08-20T21:23:14Z",
        "merged_at": "2019-08-20T21:23:14Z",
        "body": "",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 27,
        "deletions": 29,
        "changed_files": 3,
        "created_at": "2019-08-15T12:16:59Z",
        "closed_at": "2019-08-16T22:23:07Z",
        "merged_at": "2019-08-16T22:23:07Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-08-14T20:11:09Z",
        "closed_at": "2019-08-23T16:48:53Z",
        "merged_at": "2019-08-23T16:48:53Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 16,
        "changed_files": 2,
        "created_at": "2019-08-14T19:49:23Z",
        "closed_at": "2019-08-23T16:52:30Z",
        "merged_at": "2019-08-23T16:52:30Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 9,
        "changed_files": 2,
        "created_at": "2019-08-14T19:25:18Z",
        "closed_at": "2019-08-14T21:07:30Z",
        "merged_at": null,
        "body": "For RepeatedPtrField<> `explicit instantiation declaration should not be\r\n'dllexport'` (you cant put dllexport in the declaration of templated types only the definition)\r\n\r\nFor WrappedMutex `__attribute__(())` must come before `__declspec()`",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 491,
        "deletions": 1075,
        "changed_files": 55,
        "created_at": "2019-08-14T14:13:03Z",
        "closed_at": "2019-09-17T13:29:59Z",
        "merged_at": null,
        "body": "Should fix #6509 and #6510.\r\n\r\nThe reason this issue wasn't caught before is because Google.Protobuf has an attribute that exposes `internal` items to Google.Protobuf.Test. So when extension identifiers were created for custom options, they didn't cause errors since they were in a valid accessibility.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2019-08-13T17:32:36Z",
        "closed_at": "2019-08-13T18:36:18Z",
        "merged_at": "2019-08-13T18:36:18Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 57,
        "deletions": 30,
        "changed_files": 2,
        "created_at": "2019-08-13T12:38:50Z",
        "closed_at": "2019-08-14T18:22:52Z",
        "merged_at": null,
        "body": "so we can use `int64_type=string` in the protoc option and don't need to add `[ jstype = JS_STRING ]` on every field.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 49,
        "deletions": 15,
        "changed_files": 3,
        "created_at": "2019-08-13T12:03:07Z",
        "closed_at": "2019-08-14T08:39:20Z",
        "merged_at": "2019-08-14T08:39:20Z",
        "body": "Prior to this CL, creating an empty message object would create\r\ntwo empty string objects for every declared field.  First we\r\ncreated a unique string object for the field's default.  Then\r\nwe created yet another string object when we assigned the\r\ndefault value into the message: we called #encode to ensure\r\nthat the string would have the correct encoding and be frozen.\r\n\r\nI optimized these unnecessary objects away with two fixes:\r\n\r\n1. Memoize the empty string so that we don't create a new empty\r\n   string for every field's default.\r\n2. If we are assigning a string to a message object, avoid creating\r\n   a new string if the assigned string has the correct encoding and\r\n   is already frozen.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 184,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-08-13T08:52:52Z",
        "closed_at": "2019-09-03T10:15:53Z",
        "merged_at": "2019-09-03T10:15:53Z",
        "body": "@jtattermusch ",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-08-10T22:47:37Z",
        "closed_at": "2019-08-15T18:38:25Z",
        "merged_at": "2019-08-15T18:38:24Z",
        "body": "I'm currently using protobuf with godot and during compilation of godot the compiler fails because godot has a similar \"Map\" type.\r\nThis 2 lines of forward declaration fixes this.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 32,
        "deletions": 17,
        "changed_files": 3,
        "created_at": "2019-08-08T18:13:26Z",
        "closed_at": "2019-08-20T00:16:59Z",
        "merged_at": "2019-08-20T00:16:59Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 943,
        "deletions": 271,
        "changed_files": 69,
        "created_at": "2019-08-07T21:11:27Z",
        "closed_at": "2019-08-09T20:21:19Z",
        "merged_at": "2019-08-09T20:21:19Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 29,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2019-08-07T17:20:06Z",
        "closed_at": "2019-08-07T20:17:21Z",
        "merged_at": "2019-08-07T20:17:21Z",
        "body": "This fix the segfault when some other error happens",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 23,
        "deletions": 15,
        "changed_files": 5,
        "created_at": "2019-08-06T19:16:25Z",
        "closed_at": "2019-08-06T23:50:33Z",
        "merged_at": "2019-08-06T23:50:33Z",
        "body": "This should be the last change to make Protobuf compatible with `--incompatible_load_*_rules_from_bzl`. For full compatibility, we'll have to update third_party/googletest after https://github.com/google/googletest/pull/2364 has landed.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 25,
        "deletions": 27,
        "changed_files": 4,
        "created_at": "2019-08-05T07:08:25Z",
        "closed_at": "2019-08-09T23:04:07Z",
        "merged_at": "2019-08-09T23:04:07Z",
        "body": "Add move constructor for Reflection's SetString\r\nadd feature https://github.com/protocolbuffers/protobuf/issues/6399",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-08-04T00:11:39Z",
        "closed_at": "2020-08-05T21:40:52Z",
        "merged_at": "2020-08-05T21:40:52Z",
        "body": "",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 47,
        "deletions": 33,
        "changed_files": 31,
        "created_at": "2019-08-02T23:33:11Z",
        "closed_at": "2019-08-05T17:07:29Z",
        "merged_at": "2019-08-05T17:07:29Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2019-08-02T21:12:27Z",
        "closed_at": "2019-08-08T16:59:46Z",
        "merged_at": null,
        "body": "changed the example a little bit to follow the design guide.\r\nAdditionally on enums it is a good practice to use 0 for the unknown and use prefixes.\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-08-02T20:41:37Z",
        "closed_at": "2019-08-22T21:32:07Z",
        "merged_at": "2019-08-22T21:32:07Z",
        "body": "As a developer, I would like to easily find the source code origin for this gem when browsing through https://rubygems.org/gems/google-protobuf.\r\n\r\nIn order to solve this, I've followed instructions at https://guides.rubygems.org/specification-reference/#metadata by adding the source_code_uri metadata key pair.\r\n\r\n# Impact\r\n\r\nThis will cause https://rubygems.org/gems/google-protobuf to show the link in the following place:\r\n\r\n![nokogiri___RubyGems_org___your_community_gem_host](https://user-images.githubusercontent.com/3586/62397800-3a7eab80-b54d-11e9-89b5-0aa4dea09b98.png)\r\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 70,
        "deletions": 69,
        "changed_files": 24,
        "created_at": "2019-08-02T16:09:06Z",
        "closed_at": "2019-08-06T19:05:25Z",
        "merged_at": "2019-08-06T19:05:25Z",
        "body": "Fix #3218 \r\n\r\nImplement suggestion from @BugsBunnyBR at https://github.com/protocolbuffers/protobuf/issues/3218#issuecomment-517643842 to use `module_name` in podspec to make the module name consistent with the directory structure.\r\n\r\nPresumably another change is needed to create the generated files properly?",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2019-07-30T17:50:05Z",
        "closed_at": "2019-07-31T21:52:54Z",
        "merged_at": "2019-07-31T21:52:54Z",
        "body": "This PR adds tests to check some basic behavior of a descriptor's nested types container.\r\nIt fixes a bug that appear in the C++ implementation (Python extension) when trying to check if an object with an invalid (non-descriptor) type is present in the nested_types container :\r\n\r\n======================================================================\r\nERROR: testDescriptorNestedTypesContainer (google.protobuf.internal.descriptor_test.GeneratedDescriptorTest)\r\n----------------------------------------------------------------------\r\nTypeError: Not a BaseDescriptor\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"/protobuf/python/google/protobuf/internal/descriptor_test.py\", line 657, in testDescriptorNestedTypesContainer\r\n    self.assertFalse(None in message_descriptor.nested_types)\r\nSystemError: PyEval_EvalFrameEx returned a result with an error set\r\n\r\n----------------------------------------------------------------------",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 137,
        "deletions": 4,
        "changed_files": 4,
        "created_at": "2019-07-29T23:21:35Z",
        "closed_at": "2019-08-07T20:16:55Z",
        "merged_at": null,
        "body": "Previously, jspb.BinaryReader.prototype.readMessage complains it cannot accept null.\r\nAlso added test to it.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-07-29T19:27:43Z",
        "closed_at": "2019-07-29T23:31:52Z",
        "merged_at": null,
        "body": "Address https://github.com/protocolbuffers/protobuf/pull/6394#issuecomment-516090227\r\n\r\n@TeBoring ",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 53,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2019-07-29T13:02:11Z",
        "closed_at": "2022-03-09T00:35:51Z",
        "merged_at": null,
        "body": "## Background\r\n\r\nCurrently, ``struct_pb2.Struct`` behaves somewhat like a Python dictionary, but not quite. It doesn't handle nested structs (aka complex types) correctly.\r\n\r\nFor example:\r\n\r\nThe following script (https://gist.github.com/Kami/e40375f5cae99f8ee28dd4780b26486a), will return this:\r\n\r\n```python\r\n{'x': True, 'a': 1.0, 'b': 2.0, 'c': 'foo bar'}\r\n{'foo': 'bar', 'nested': fields {\r\n  key: \"a\"\r\n  value {\r\n    list_value {\r\n      values {\r\n        number_value: 1.0\r\n      }\r\n      values {\r\n        number_value: 2.0\r\n      }\r\n      values {\r\n        number_value: 3.0\r\n      }\r\n    }\r\n  }\r\n}\r\nfields {\r\n  key: \"c\"\r\n  value {\r\n    string_value: \"d\"\r\n  }\r\n}\r\nfields {\r\n  key: \"f\"\r\n  value {\r\n    struct_value {\r\n      fields {\r\n        key: \"g\"\r\n        value {\r\n          struct_value {\r\n            fields {\r\n              key: \"h\"\r\n              value {\r\n                string_value: \"j\"\r\n              }\r\n            }\r\n            fields {\r\n              key: \"m\"\r\n              value {\r\n                list_value {\r\n                  values {\r\n                    struct_value {\r\n                      fields {\r\n                        key: \"a\"\r\n                        value {\r\n                          string_value: \"1\"\r\n                        }\r\n                      }\r\n                      fields {\r\n                        key: \"d\"\r\n                        value {\r\n                          bool_value: true\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n}\r\n```\r\n\r\nIn the first example where struct only contains simple types, correct / expected value is returned. But in the second example, it won't recurse into complex / nested types and incorrect / unexpected value is returned.\r\n\r\nThis brakes Python ``dict()`` API and makes structs hard to work with since you need extra glue code to work around those limitations.\r\n\r\nIn reality, I would expect it to return something like this (as in my proposed solution below):\r\n\r\n```python\r\n{'x': True, 'a': 1.0, 'b': 2.0, 'c': 'foo bar'}\r\n{'foo': 'bar', 'nested': {'f': {'g': {'h': 'j', 'm': [{'a': '1', 'd': True}]}}, 'a': [1.0, 2.0, 3.0], 'c': 'd'}}\r\n```\r\n\r\n## Proposed Solution\r\n\r\nI believe calling ``dict()`` on Struct class instance should return a Python dictionary which only contains simple types (aka behaves like a regular Python dictionary).\r\n\r\nThis means we need to update the code to recurse into complex types.\r\n\r\nIn my proposed solution, I added new ``to_dict()`` method, but I think the best course of action would be to modify ``__getitem__`` to call ``_GetStructValue``. This way calling ``dict()`` on the struct instance will behave as expected.\r\n\r\nThe reason I didn't make that change is because it breaks one of the tests and it's not backward compatible - we need to decide how to handle backward compatibility.",
        "comments": 12
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 7,
        "changed_files": 2,
        "created_at": "2019-07-28T19:52:42Z",
        "closed_at": "2019-07-29T23:52:38Z",
        "merged_at": null,
        "body": "Reverts protocolbuffers/protobuf#6394",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 347,
        "deletions": 19,
        "changed_files": 9,
        "created_at": "2019-07-26T22:15:42Z",
        "closed_at": "2019-08-02T21:35:45Z",
        "merged_at": "2019-08-02T21:35:45Z",
        "body": "Tests explicit packed/unpacked fields.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 39,
        "deletions": 50,
        "changed_files": 10,
        "created_at": "2019-07-26T11:20:27Z",
        "closed_at": "2019-07-29T21:14:06Z",
        "merged_at": "2019-07-29T21:14:05Z",
        "body": "This change adds the required loads to examples and zlib. Sorry for missing them in the first PR.\r\nFor full compatibility with --incompatible_load_{cc,java,proto}_rules_from_bzl,\r\nwe will need to roll gtest to a newer version.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 17,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2019-07-26T05:18:47Z",
        "closed_at": "2021-10-13T20:13:19Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 28,
        "deletions": 116,
        "changed_files": 6,
        "created_at": "2019-07-25T23:38:52Z",
        "closed_at": "2019-08-01T00:49:26Z",
        "merged_at": "2019-08-01T00:49:26Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 416,
        "deletions": 130,
        "changed_files": 10,
        "created_at": "2019-07-25T00:35:20Z",
        "closed_at": "2019-07-26T17:05:15Z",
        "merged_at": "2019-07-26T17:05:15Z",
        "body": "1) Both packed and unpacked encoding should be accepted for parsing.\r\n2) Encode should follow the default way for the syntax.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 19,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2019-07-24T23:22:18Z",
        "closed_at": "2022-05-16T18:13:43Z",
        "merged_at": null,
        "body": "Working towards resolving the issue below.\r\n\r\nprotocolbuffers/protobuf-javascript#50",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 37,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2019-07-24T21:38:17Z",
        "closed_at": "2019-07-25T03:24:45Z",
        "merged_at": "2019-07-25T03:24:45Z",
        "body": "@acozzette Thank you for your reviews! Can we cherry-pick this onto 3.9.x and possibly get a new release in the next 2-3 weeks before Bazel 0.29.0 drops?",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 40,
        "deletions": 8,
        "changed_files": 3,
        "created_at": "2019-07-24T16:23:05Z",
        "closed_at": "2019-07-24T20:47:19Z",
        "merged_at": "2019-07-24T20:47:19Z",
        "body": "Fixes #6378.\r\n\r\nThis was always emitting a location for the label, even if no label was present. This resulted in a malformed span -- since the label did not actually exist, the associated span had an end that was _before_ the start.\r\n\r\nThis patch makes it so that the location is simply omitted if there is no location in source (e.g. optional fields in a file with proto3 syntax).",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 64,
        "deletions": 10,
        "changed_files": 4,
        "created_at": "2019-07-24T06:38:42Z",
        "closed_at": "2019-07-24T19:26:41Z",
        "merged_at": "2019-07-24T19:26:41Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2019-07-23T20:15:46Z",
        "closed_at": "2019-07-23T22:07:27Z",
        "merged_at": "2019-07-23T22:07:26Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 30,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2019-07-23T14:38:38Z",
        "closed_at": "2019-07-24T17:10:24Z",
        "merged_at": "2019-07-24T17:10:24Z",
        "body": "Starting with Bazel 0.29.0, C++, Java, and Protobuf rules will require explicit load statements (https://github.com/bazelbuild/bazel/issues/8743, https://github.com/bazelbuild/bazel/issues/8746, https://github.com/bazelbuild/bazel/issues/8922).",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 27,
        "deletions": 42,
        "changed_files": 4,
        "created_at": "2019-07-23T09:50:24Z",
        "closed_at": "2019-07-25T11:41:13Z",
        "merged_at": "2019-07-25T11:41:13Z",
        "body": "- backporting some changes suggested in https://github.com/protocolbuffers/protobuf/pull/5350/files review.\r\n\r\nMost importantly, the new extension APIs are marked as experimental so that we can do some minor adjustments in 3.10 if needed.\r\n\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2019-07-23T00:49:42Z",
        "closed_at": "2019-07-23T19:42:31Z",
        "merged_at": "2019-07-23T19:42:31Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2019-07-22T21:58:40Z",
        "closed_at": "2019-07-22T23:52:47Z",
        "merged_at": "2019-07-22T23:52:47Z",
        "body": "https://github.com/matthew-brett/multibuild/pull/240\r\n\r\nThis is a cherrypick change.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 181,
        "deletions": 16,
        "changed_files": 1,
        "created_at": "2019-07-22T08:11:14Z",
        "closed_at": "2019-07-22T17:36:23Z",
        "merged_at": "2019-07-22T17:36:23Z",
        "body": "Backport https://github.com/protocolbuffers/protobuf/pull/6380 ",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-07-22T07:11:03Z",
        "closed_at": "2019-07-22T20:41:15Z",
        "merged_at": "2019-07-22T20:41:15Z",
        "body": "fix typo in io/printer.h\r\nchange `ofset` to `offset`",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 117,
        "deletions": 9,
        "changed_files": 8,
        "created_at": "2019-07-20T10:54:33Z",
        "closed_at": "2019-07-24T17:23:57Z",
        "merged_at": "2019-07-24T17:23:57Z",
        "body": "",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2019-07-19T22:55:57Z",
        "closed_at": "2019-07-22T23:52:31Z",
        "merged_at": "2019-07-22T23:52:31Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 6016,
        "deletions": 2902,
        "changed_files": 168,
        "created_at": "2019-07-19T20:13:01Z",
        "closed_at": "2019-07-19T21:49:01Z",
        "merged_at": "2019-07-19T21:49:01Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-07-19T18:48:27Z",
        "closed_at": "2019-07-19T19:55:58Z",
        "merged_at": "2019-07-19T19:55:58Z",
        "body": "I'm not exactly sure why, but this fixes the failing Bazel presubmit\r\ntest. Using the most recent version seems like a good idea anyway so\r\nthat we can make sure we're compatible with any new Bazel changes.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 6102,
        "deletions": 2816,
        "changed_files": 139,
        "created_at": "2019-07-19T17:34:31Z",
        "closed_at": "2019-07-19T19:59:04Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-07-19T07:54:19Z",
        "closed_at": "2019-07-23T01:05:41Z",
        "merged_at": null,
        "body": "google.protobuf.json_format.MessageToDict incorrectly casts ints to strs. This fixes that. ",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 8236,
        "deletions": 2784,
        "changed_files": 186,
        "created_at": "2019-07-18T23:28:16Z",
        "closed_at": "2019-07-19T17:05:15Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 78,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2019-07-18T22:13:54Z",
        "closed_at": "2019-07-25T21:31:01Z",
        "merged_at": "2019-07-25T21:31:01Z",
        "body": "#6379",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2019-07-18T21:50:56Z",
        "closed_at": "2019-07-19T00:09:03Z",
        "merged_at": "2019-07-19T00:09:03Z",
        "body": "https://github.com/matthew-brett/multibuild/pull/240",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2019-07-18T21:20:00Z",
        "closed_at": "2019-07-19T14:14:55Z",
        "merged_at": "2019-07-19T14:14:55Z",
        "body": "Since true for objc is external, changes should always start on the github\r\nside, so the fact that something got pushed out is a sign something was\r\nbroken in the process.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 47,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2019-07-18T18:56:32Z",
        "closed_at": "2019-07-23T20:51:22Z",
        "merged_at": "2019-07-23T20:51:22Z",
        "body": "",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 15,
        "deletions": 24,
        "changed_files": 1,
        "created_at": "2019-07-18T14:01:11Z",
        "closed_at": "2019-07-18T20:59:41Z",
        "merged_at": "2019-07-18T20:59:41Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-07-17T20:53:24Z",
        "closed_at": "2019-07-17T22:38:57Z",
        "merged_at": "2019-07-17T22:38:57Z",
        "body": "Fixes #6382.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 24,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2019-07-17T14:27:52Z",
        "closed_at": "2019-08-20T12:41:56Z",
        "merged_at": null,
        "body": "This contains the minim set of my recommendations from https://github.com/protocolbuffers/protobuf/issues/6395 to help users understand that the classes in `well_known_types.py` are not intended for direct use and are in fact mixin classes.\r\n\r\nA better (but possibly more disruptive) approach would be to explicitly rename these classes with `Mixin` (ex: `TimestampMixin`) to avoid confusion and prevent identically named classes, just in different packages.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2019-07-17T12:06:11Z",
        "closed_at": "2019-07-24T23:32:22Z",
        "merged_at": "2019-07-24T23:32:22Z",
        "body": "We recently recently detected JS protobuf library fail to deserialize any map<uint64,double> data where value is 0. \r\n\r\nThere has been many cases being reported:\r\n\r\nhttps://github.com/protocolbuffers/protobuf/issues/3351 \r\nhttps://github.com/grpc/grpc-web/issues/533\r\nhttps://github.com/protocolbuffers/protobuf/issues/4500\r\n\r\nIn binary format, default map values are not sent, however this is not probably handled in JS library. \r\n\r\nThis fix is inspired by:\r\n\r\nhttps://github.com/protocolbuffers/protobuf/pull/4687",
        "comments": 17
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2019-07-17T09:09:51Z",
        "closed_at": "2021-05-17T21:43:17Z",
        "merged_at": "2021-05-17T21:43:17Z",
        "body": "- **Problem**: In the example code, the \"js\" folder appeared for the first time and there is no clue where the current folder is.\r\n\r\n- **Consequence**: Otherwise, like me, spent a lot of time guessing what codes - some release version or the source code - should be downloaded to go to the \"js\" directory.\r\n\r\n- **Solution**: Therefore, there should be some comments describing what the folder is.\r\n\r\n- **Labels**: release notes: no  language: javascript",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 14,
        "changed_files": 4,
        "created_at": "2019-07-16T15:22:02Z",
        "closed_at": "2019-08-15T21:54:00Z",
        "merged_at": "2019-08-15T21:54:00Z",
        "body": "When the @six//:six library is used on a target without the `legacy_create_init` flag disabled, the library will not be usable due to __init__.py being empty and the six code will be in six.py. This change forces six to occupy the __init__ name, preventing this file getting created regardless of the `legacy_create_init` setting.\r\n\r\nSee comments on a74c43bbd906a42b6bf70668c5d515c6f1d8d2cb for context.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 33,
        "deletions": 32,
        "changed_files": 16,
        "created_at": "2019-07-15T20:13:40Z",
        "closed_at": "2019-07-16T16:54:09Z",
        "merged_at": null,
        "body": "Could you please point me to the version that  builds with C99 and C03",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2019-07-15T16:05:26Z",
        "closed_at": "2019-07-17T16:45:45Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 80,
        "deletions": 24,
        "changed_files": 4,
        "created_at": "2019-07-13T16:03:12Z",
        "closed_at": "2021-10-13T20:15:06Z",
        "merged_at": null,
        "body": "Fixes #6178\r\n\r\nAdds the option to print enums as int values instead of the default strings for Ruby (similar to the option present for C++).\r\n\r\nExample:\r\n\r\ntest.proto\r\n```\r\nenum TestEnum {\r\n  Default = 0;\r\n  Foo = 1;\r\n}\r\nenum TestMessage {\r\n  TestEnum test_enum = 1;\r\n}\r\n```\r\ncode.rb\r\n```\r\nmymessage = TestMessage.new(:test_enum => 1)\r\nputs TestMessage.encode(mymessage, {always_show_enums_as_ints: true})\r\n```\r\nwill output:\r\n```\r\n{\"testEnum\":1}\r\n```\r\n\r\n\r\n",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2019-07-13T13:08:50Z",
        "closed_at": "2019-07-17T20:02:55Z",
        "merged_at": "2019-07-17T20:02:55Z",
        "body": "```\r\ngoogle/protobuf/testing/zcgzip.cc:61:25: error: unknown type name 'STDOUT_FILENO'\r\n  FileOutputStream fout(STDOUT_FILENO);\r\n                        ^\r\ngoogle/protobuf/testing/zcgzip.cc:61:24: warning: parentheses were disambiguated as a function declaration [-Wvexing-parse]\r\n  FileOutputStream fout(STDOUT_FILENO);\r\n                       ^~~~~~~~~~~~~~~\r\ngoogle/protobuf/testing/zcgzip.cc:61:25: note: add a pair of parentheses to declare a variable\r\n  FileOutputStream fout(STDOUT_FILENO);\r\n                        ^\r\n                        (\r\ngoogle/protobuf/testing/zcgzip.cc:75:20: error: use of undeclared identifier 'STDIN_FILENO'\r\n    readlen = read(STDIN_FILENO, outptr, outlen);\r\n                   ^\r\n1 warning and 2 errors generated.\r\ngmake[3]: *** [Makefile:4009: google/protobuf/testing/zcgzip.o] Error 1\r\n```\r\n```\r\ngoogle/protobuf/testing/zcgunzip.cc:62:23: error: unknown type name 'STDIN_FILENO'\r\n  FileInputStream fin(STDIN_FILENO);\r\n                      ^\r\ngoogle/protobuf/testing/zcgunzip.cc:62:22: warning: parentheses were disambiguated as a function declaration [-Wvexing-parse]\r\n  FileInputStream fin(STDIN_FILENO);\r\n                     ^~~~~~~~~~~~~~\r\ngoogle/protobuf/testing/zcgunzip.cc:62:23: note: add a pair of parentheses to declare a variable\r\n  FileInputStream fin(STDIN_FILENO);\r\n                      ^\r\n                      (\r\ngoogle/protobuf/testing/zcgunzip.cc:74:23: error: use of undeclared identifier 'STDOUT_FILENO'\r\n      int err = write(STDOUT_FILENO, inptr, inlen);\r\n                      ^\r\n1 warning and 2 errors generated.\r\ngmake[3]: *** [Makefile:4009: google/protobuf/testing/zcgunzip.o] Error 1\r\n```\r\nReference:\thttps://bugs.FreeBSD.org/bugzilla/show_bug.cgi?id=215346\r\n\t\thttps://svnweb.FreeBSD.org/changeset/ports/428734",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 181,
        "deletions": 16,
        "changed_files": 1,
        "created_at": "2019-07-13T07:09:42Z",
        "closed_at": "2019-07-19T23:25:00Z",
        "merged_at": "2019-07-19T23:25:00Z",
        "body": "Fix for #6379.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2019-07-12T20:29:13Z",
        "closed_at": "2019-07-19T22:47:53Z",
        "merged_at": "2019-07-19T22:47:53Z",
        "body": "This fixes bug https://github.com/protocolbuffers/protobuf/issues/6376\r\n\r\nCurrently, if you access a ListValue or Struct from a Struct and attempt\r\nto assign it into another Struct, you get an exception:\r\n\r\n```python\r\n> import google.protobuf.struct_pb2 as spb\r\n> s1 = spb.Struct()\r\n> s1['a'] = [1]\r\n> s2 = spb.Struct()\r\n> s2['a'] = s1['a']\r\nValueError: Unexpected type\r\n> s1['b'] = {'x': 'y'}\r\n> s2['b'] = s1['b']\r\nValueError: Unexpected type\r\n```\r\n\r\nThis fixes that case.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 15,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2019-07-12T13:14:14Z",
        "closed_at": "2021-10-14T20:11:43Z",
        "merged_at": null,
        "body": "Support comparison of `Google::Protobuf::Timestamp` in Ruby\r\n\r\nFor example, you write as follows below if you'd like to sort an array of message.\r\n\r\n```ruby\r\nmessages.sort_by { |message| message.time.seconds }\r\n```\r\n\r\nYou can write as follows if merge this feature.\r\n\r\n```ruby\r\nmessages.sort_by(&:time)\r\n```",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-07-12T00:02:44Z",
        "closed_at": "2019-07-23T19:57:09Z",
        "merged_at": "2019-07-23T19:57:09Z",
        "body": "Actual fixes of the javadoc will be followed up",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2019-07-11T22:17:14Z",
        "closed_at": "2019-07-23T00:11:59Z",
        "merged_at": "2019-07-23T00:11:59Z",
        "body": "Fix for an error with the string terminator placement in #5739.\r\n\r\nThanks for pointing it out @tenderlove!",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-07-11T21:04:47Z",
        "closed_at": "2019-07-28T17:10:51Z",
        "merged_at": "2019-07-28T17:10:50Z",
        "body": "proto3 ruby extensions have been broken by the proto2 support.\r\n\r\n```proto\r\nsyntax = \"proto3\";\r\n\r\npackage test;\r\n\r\nimport \"google/protobuf/descriptor.proto\";\r\n\r\nextend google.protobuf.ServiceOptions {\r\n  bool custom_option = 12345;\r\n}\r\n```\r\n\r\nwill no longer compile\r\n\r\n```\r\n--ruby_out: test.proto: Extensions are not yet supported for proto2 .proto files.\r\n```\r\n\r\nFixes https://github.com/protocolbuffers/protobuf/issues/6209\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 33,
        "deletions": 19,
        "changed_files": 15,
        "created_at": "2019-07-10T23:50:56Z",
        "closed_at": "2019-07-11T14:52:05Z",
        "merged_at": "2019-07-11T14:52:05Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2019-07-10T17:25:59Z",
        "closed_at": "2019-07-17T20:17:03Z",
        "merged_at": "2019-07-17T20:17:03Z",
        "body": "Currently, when compiling on Windows in certain circumstances the `copts` flags to zlib would result in the following error, due the flags not being understood by `cl`:\r\n\r\n```\r\n\r\n(16:56:05) ERROR: D:/b/m3jvdz2w/external/zlib/BUILD.bazel:32:1: Couldn't build file external/zlib/_objs/zlib/zutil.obj: C++ compilation of rule '@zlib//:zlib' failed (Exit 2)\r\ncl : Command line error D8021 : invalid numeric argument '/Wno-unused-variable'\r\n```\r\n\r\nThis PR removes these flags when on Windows but keeps them for other platforms.\r\n\r\nFull build error example here: https://buildkite.com/bazel/rules-proto/builds/229#a4859c25-6548-4239-a26e-57a790ff131d",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-07-10T14:05:37Z",
        "closed_at": "2019-07-12T00:22:01Z",
        "merged_at": "2019-07-12T00:22:01Z",
        "body": "Requestion Extension Id 1072 for a kotlin generator and runtime supporting Protocol Buffers language version 3.\r\n\r\nThe library will be open sourced by Toast Inc under the Apache2 license by the end of Q4 2019, and is currently used in production at Toast.\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2019-07-09T15:37:55Z",
        "closed_at": "2019-07-10T16:41:12Z",
        "merged_at": "2019-07-10T16:41:12Z",
        "body": "This changes to_time to use Ruby's built in Time.at with nanos support\r\nrather than calculating a float and passing it to Time.at. The new\r\nversion runs about 3 times faster than the original version and\r\nallocates fewer objects.\r\n\r\nAfter opening the PR I realized the new signature for Time.at was added in Ruby 2.5 so I have included a fallback for older versions of Ruby.\r\n\r\n```\r\nWarming up --------------------------------------\r\n    protobuf#to_time    57.296k i/100ms\r\n      faster#to_time   133.229k i/100ms\r\nCalculating -------------------------------------\r\n    protobuf#to_time    635.361k (\u00b1 2.1%) i/s -      3.209M in   5.052169s\r\n      faster#to_time      1.873M (\u00b1 3.3%) i/s -      9.459M in   5.055169s\r\n\r\nComparison:\r\n      faster#to_time:  1873368.8 i/s\r\n    protobuf#to_time:   635361.4 i/s - 2.95x  slower\r\n\r\nCalculating -------------------------------------\r\n    protobuf#to_time   326.000  memsize (   126.000  retained)\r\n                         7.000  objects (     2.000  retained)\r\n                         0.000  strings (     0.000  retained)\r\n      faster#to_time    86.000  memsize (     0.000  retained)\r\n                         1.000  objects (     0.000  retained)\r\n                         0.000  strings (     0.000  retained)\r\n\r\nComparison:\r\n      faster#to_time:         86 allocated\r\n    protobuf#to_time:        326 allocated - 3.79x more\r\n```\r\n\r\nBenchmarks ran with Ruby 2.6.3p62 on Linux 5.1.14\r\n```ruby\r\nrequire \"benchmark/ips\"\r\nrequire \"benchmark/memory\"\r\nrequire \"google/protobuf\"\r\nrequire \"google/protobuf/well_known_types\"\r\n\r\n::Google::Protobuf::Timestamp.class_eval do\r\n  def fast_to_time\r\n    Time.at(seconds, nanos, :nanosecond)\r\n  end\r\nend\r\n\r\npb = ::Google::Protobuf::Timestamp.new\r\npb.from_time(Time.now)\r\n\r\nBenchmark.ips do |x|\r\n  x.report(\"protobuf#to_time\") { pb.to_time }\r\n  x.report(\"faster#to_time\")   { pb.fast_to_time }\r\n\r\n  x.compare!\r\nend\r\n\r\nBenchmark.memory do |x|\r\n  x.report(\"protobuf#to_time\") { pb.to_time }\r\n  x.report(\"faster#to_time\")   { pb.fast_to_time }\r\n\r\n  x.compare!\r\nend\r\n```",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2019-07-09T14:14:45Z",
        "closed_at": "2019-07-09T17:45:23Z",
        "merged_at": null,
        "body": "js-field genereted by protoc NOT respect definition in .proto file && always lowercase. #6357\r\n\r\nSigned-off-by: Daniel <jmzwcn@gmail.com>",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 36,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2019-07-08T20:58:40Z",
        "closed_at": "2021-09-14T17:14:21Z",
        "merged_at": null,
        "body": "Fixes #6353 \r\n\r\n- [openjdk-7-jdk](https://packages.debian.org/search?keywords=openjdk-7-jdk) is available in Debian Jessie.\r\n- Because of [Oracle Java (JDK) 8 Installer PPA (DISCONTINUED) via WebUpd8 team](https://launchpad.net/~webupd8team/+archive/ubuntu/java), not touching Oracle JDK 7 test image with this PR.\r\n\r\n@TeBoring Would you publish the image to DockerHub?",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2019-07-08T20:32:59Z",
        "closed_at": "2019-07-09T18:22:39Z",
        "merged_at": "2019-07-09T18:22:39Z",
        "body": "I'm using protobuf in a Qt project, and (using clang++ on macOS) see a number of unused-parameter warnings in generated code coming from two places; `GetArenaInternal` in arena.h, and in methods generated by `READ_METHOD` in `map_type_handler.h`.  In both cases, there is indeed a parameter that goes unused.\r\n\r\nThe fix here is dumb and simple - just a plain `(void) param` statement.  I noticed that there's a `PROTOBUF_UNUSED` macro, which I didn't use because it seemed to break the `READ_METHOD` macro, and in any case is not defined for clang.  In fact, the `PROTOBUF_UNUSED` macro itself seems to be entirely unused outside of `port_def.inc` and `port_undef.inc`.\r\n\r\nIt's certainly possible for me to ignore these warnings in my project, but a) that requires silencing them for _my_ code, too, and b) it seems simple and inoffensive to just fix this here.  Please let me know if there's a better approach here.\r\n\r\nHere's an example of the kinds of warnings I'm seeing:\r\n<img width=\"1255\" alt=\"image\" src=\"https://user-images.githubusercontent.com/512212/60840651-d6064180-a184-11e9-9fe1-a89223e55c36.png\">\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 2,
        "changed_files": 4,
        "created_at": "2019-07-08T19:52:21Z",
        "closed_at": "2019-07-08T21:20:46Z",
        "merged_at": "2019-07-08T21:20:46Z",
        "body": "Forgot to set it previously.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-07-08T18:20:26Z",
        "closed_at": "2019-07-09T03:30:05Z",
        "merged_at": "2019-07-09T03:30:05Z",
        "body": "The check for builtin atomics, added in #6337, was incorrect in that it relied on universal initialization (c++11) without including a compiler flag specifying c++11.  Consequently the check always fails, resulting in the linker getting a `-latomic` argument that breaks builds (for me, at least, on macOS 10.14, with a compiler that definitely has builtin atomics).\r\n\r\nThe fix here is to provide `-std=c++11` in `CMAKE_REQUIRED_FLAGS` just prior to executing the check.  Because it's cmake, of course this is a global variable so we need to take care to reset it to its old value.\r\n\r\nLLVM itself does the same thing here: https://llvm.org/svn/llvm-project/libcxx/trunk/cmake/Modules/CheckLibcxxAtomic.cmake\r\n\r\nFixes #6349 \r\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2019-07-08T14:12:30Z",
        "closed_at": "2019-07-10T18:43:09Z",
        "merged_at": "2019-07-10T18:43:09Z",
        "body": "to 3.8.0",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-07-07T03:40:51Z",
        "closed_at": "2019-07-08T19:00:58Z",
        "merged_at": "2019-07-08T19:00:58Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-07-05T02:30:40Z",
        "closed_at": "2019-07-30T14:41:28Z",
        "merged_at": "2019-07-30T14:41:27Z",
        "body": "i found the function Generate() in cpp_generator.cc and there are no test cases to override the exception statement. i personally think that we can supplement the test cases of the corresponding scene.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 22,
        "deletions": 17,
        "changed_files": 1,
        "created_at": "2019-07-05T00:36:03Z",
        "closed_at": "2019-07-08T19:00:32Z",
        "merged_at": "2019-07-08T19:00:32Z",
        "body": "spare people the time deleting $ from text.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 23,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2019-07-03T15:14:02Z",
        "closed_at": "2019-07-03T22:32:31Z",
        "merged_at": "2019-07-03T22:32:31Z",
        "body": "Some systems don't support builtin atomic intrinsics, or don't support the 8 byte variety used in [arena.cc](https://github.com/protocolbuffers/protobuf/blob/master/src/google/protobuf/arena.cc).  In these situations [GCC falls back to a software implementation](https://gcc.gnu.org/wiki/Atomic/) provided by `libatomic` which we must link with.\r\n\r\nFor example, building on a RPi with the latest Raspbian image produces errors like `undefined reference to __atomic_fetch_add_8`.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2019-07-02T18:15:26Z",
        "closed_at": "2019-07-03T22:21:16Z",
        "merged_at": "2019-07-03T22:21:16Z",
        "body": "Fixing a UBSAN error reproduced from an OSS-Fuzz testcase\r\n\r\n* external/com_google_protobuf/src/google/protobuf/stubs/strutil.cc:1071:9: runtime error: negation of -2147483648 cannot be represented in type 'google::protobuf::int32' (aka 'int'); cast to an unsigned type to negate this value to itself\r\n\r\nSimilar to #5901 for 32-bit integers.\r\n\r\nSigned-off-by: Asra Ali <asraa@google.com>",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2019-07-02T16:03:52Z",
        "closed_at": "2019-07-10T19:55:11Z",
        "merged_at": "2019-07-10T19:55:11Z",
        "body": "release note: no",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-07-02T16:02:43Z",
        "closed_at": "2019-07-10T19:48:14Z",
        "merged_at": "2019-07-10T19:48:14Z",
        "body": "release note: no",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-07-01T19:26:22Z",
        "closed_at": "2019-07-08T17:21:19Z",
        "merged_at": "2019-07-08T17:21:19Z",
        "body": "Support for using `proto_library` in this attribute was added in:\r\nbazelbuild/bazel@a5ee2c4\r\n\r\nLegacy support for using `.proto` files will be removed in a future\r\nversion of Bazel.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 93,
        "deletions": 51,
        "changed_files": 1,
        "created_at": "2019-07-01T19:24:03Z",
        "closed_at": "2019-07-01T21:10:32Z",
        "merged_at": "2019-07-01T21:10:32Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-07-01T17:26:38Z",
        "closed_at": "2019-07-01T21:05:32Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-06-30T04:42:43Z",
        "closed_at": "2020-10-22T20:59:18Z",
        "merged_at": null,
        "body": "get error: undefined bswapXXX on Android & UE4; so add a macro for Android",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 23,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-06-28T18:22:50Z",
        "closed_at": "2019-07-01T21:03:05Z",
        "merged_at": "2019-07-01T21:03:04Z",
        "body": "Fixes #6303 \r\n\r\n@TeBoring Would you check this PR and cl/255388739 ? Once the CL is submitted, the presubmit on this PR should run Linkage Monitor.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 18,
        "deletions": 26,
        "changed_files": 4,
        "created_at": "2019-06-28T13:40:40Z",
        "closed_at": "2019-09-03T17:17:22Z",
        "merged_at": "2019-09-03T17:17:22Z",
        "body": "followup for https://github.com/protocolbuffers/protobuf/pull/5835/files.\r\n\r\n",
        "comments": 14
    },
    {
        "merged": false,
        "additions": 84,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2019-06-28T05:40:25Z",
        "closed_at": "2019-07-01T19:28:18Z",
        "merged_at": null,
        "body": "Fixes protocolbuffers/protobuf-javascript#51\r\n\r\nAdds type conversions to the generated javascript setters for primitives & repeated primitives:\r\n\r\nFirst checks if the argument is of the correct type or null (which will clear the field).\r\nIf not, convert to the correct type using the appropriate wrapper function(Number(x), String(x) or Boolean(x)).\r\n\r\nFor repeated fields, first the type of the passed variable is an array. If not, throw an error. If it is an array, iterate through the array and perform the same conversion logic as above for each element.\r\n\r\nExamples\r\n\r\nprotofile:\r\n\r\nmessage MyMessage {\r\n    String pkid = 1;\r\n}\r\nafter compiling:\r\n\r\n```\r\n> protoConfig.setPkid(123);\r\n> protoConfig.getPkid();\r\n123\r\n> MyMessage.deserializeBinary((protoConfig.serializeBinary())).getPkid()\r\n123\r\n```\r\n\r\nprotofile:\r\n\r\nmessage MyMessage {\r\n    repeated String pkid = 1;\r\n}\r\n\r\n```\r\n> protoConfig.setPkidList([true, 123]);\r\n> protoConfig.getPkidList();\r\n[ 'true', '123' ]\r\n> MyMessage.deserializeBinary((protoConfig.serializeBinary())).getPkidList()\r\n[ 'true', '123' ]\r\n```",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 7,
        "changed_files": 3,
        "created_at": "2019-06-27T11:40:46Z",
        "closed_at": "2019-07-15T23:35:20Z",
        "merged_at": "2019-07-15T23:35:20Z",
        "body": "Using `//external:six` works when protobuf is the root repo, but fails when protobuf is a third party dependency of another workspace. `@six//:six` works in both situations once the relevant workspace rule has been updated to match.\r\n\r\nAlso added six to the protobuf_deps.bzl file.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 5190,
        "deletions": 7081,
        "changed_files": 98,
        "created_at": "2019-06-26T20:31:23Z",
        "closed_at": "2019-06-26T23:39:17Z",
        "merged_at": "2019-06-26T23:39:17Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 732,
        "deletions": 704,
        "changed_files": 2,
        "created_at": "2019-06-26T20:31:08Z",
        "closed_at": "2022-02-11T23:55:47Z",
        "merged_at": "2022-02-11T23:55:46Z",
        "body": "Fixes #6299",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 82,
        "deletions": 0,
        "changed_files": 5,
        "created_at": "2019-06-26T19:34:50Z",
        "closed_at": "2019-06-27T23:08:10Z",
        "merged_at": "2019-06-27T23:08:10Z",
        "body": "Towards #6303 \r\n\r\n@haon4 This PR prepares JDK8 in the docker image, before setting up Linkage Monitor, which needs Java 8 runtime. (The logic of Linkage Monitor is in this PR yet)\r\n\r\nCorresponding Kokoro Job config: cl/255388739",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-06-26T06:30:45Z",
        "closed_at": "2019-07-01T20:58:25Z",
        "merged_at": null,
        "body": "This removes the need to use --incompatible_disable_deprecated_attr_params when using protobuf.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-06-25T09:23:06Z",
        "closed_at": "2019-07-08T17:20:38Z",
        "merged_at": "2019-07-08T17:20:38Z",
        "body": "Usage of `single_file` is not allowed by default in Bazel 0.27.0 and newer.\r\n\r\nThis change was made to the master-branch in #5050",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 210,
        "deletions": 198,
        "changed_files": 33,
        "created_at": "2019-06-24T17:25:51Z",
        "closed_at": "2019-06-24T23:15:16Z",
        "merged_at": "2019-06-24T23:15:16Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 390,
        "deletions": 393,
        "changed_files": 51,
        "created_at": "2019-06-21T20:32:39Z",
        "closed_at": "2019-06-24T17:15:25Z",
        "merged_at": "2019-06-24T17:15:25Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 47,
        "deletions": 47,
        "changed_files": 2,
        "created_at": "2019-06-21T05:44:52Z",
        "closed_at": "2019-06-21T20:25:24Z",
        "merged_at": "2019-06-21T20:25:24Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-06-21T05:13:34Z",
        "closed_at": "2019-07-01T23:26:18Z",
        "merged_at": "2019-07-01T23:26:18Z",
        "body": "File io_win32.h is not in directory google\\protobuf\\stubs under directory google\\protobuf\\io",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2019-06-20T17:03:50Z",
        "closed_at": "2019-11-01T14:42:13Z",
        "merged_at": null,
        "body": "This PR migrates protobuf.bzl for Bazel's incompatible change bazelbuild/bazel#7152.\r\n\r\nPR for master branch is https://github.com/protocolbuffers/protobuf/pull/6288.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2019-06-20T15:53:33Z",
        "closed_at": "2019-06-20T17:08:38Z",
        "merged_at": null,
        "body": "This PR migrates protobuf.bzl for Bazel's incompatible change https://github.com/bazelbuild/bazel/issues/7152.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 23,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-06-19T22:40:39Z",
        "closed_at": "2019-06-19T23:57:01Z",
        "merged_at": null,
        "body": "Fixes protocolbuffers/protobuf-javascript#51 \r\n\r\nAdds type checking to the generated javascript setters for primitives:\r\n- First checks if the argument is of the correct type\r\n- If not, certain objects will still be allowed (i.e. for numbers, the Number wrapper object should be allowed)\r\n- Check will be, if the argument of the setter can be converted to the correct primitive, it will be allowed\r\n- Allowed wrapper objects will be converted to their primitives for storage\r\n- Otherwise, throw an error message indicating an invalid type\r\n\r\nExamples\r\n\r\nprotofile:\r\n```\r\nmessage MyMessage {\r\n    String pkid = 1;\r\n}\r\n```\r\n\r\nafter compiling:\r\n```\r\n> protoConfig.setPkid(123);\r\nCannot set type. Expected type string and got number.\r\n```\r\n\r\n```\r\n> protoConfig.setPkid(\"123\");\r\n> protoConfig.getPkid();\r\n123\r\n> MyMessage.deserializeBinary((protoConfig.serializeBinary())).getPkid()\r\n123\r\n```\r\n\r\n```\r\n> protoConfig.setPkid(new String(123));\r\n> protoConfig.getPkid();\r\n123\r\n> MyMessage.deserializeBinary((protoConfig.serializeBinary())).getPkid()\r\n123\r\n```\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 104,
        "changed_files": 3,
        "created_at": "2019-06-19T16:38:39Z",
        "closed_at": "2019-06-21T03:59:49Z",
        "merged_at": "2019-06-21T03:59:49Z",
        "body": "Reverts protocolbuffers/protobuf#6169\r\nNo longer needed.\r\n@michaelbausor ",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 67,
        "deletions": 38,
        "changed_files": 9,
        "created_at": "2019-06-19T16:34:19Z",
        "closed_at": "2019-06-21T20:38:52Z",
        "merged_at": null,
        "body": "There are a few fixes on the 3.8.x branch that we need to merge into 3.9.x.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-06-19T11:52:14Z",
        "closed_at": "2019-06-19T16:25:54Z",
        "merged_at": "2019-06-19T16:25:54Z",
        "body": "Otherwise, sandbox and remote execution will complain `google/protobuf/port_def.inc` doesn't exist.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-06-19T10:03:31Z",
        "closed_at": "2019-06-21T18:33:13Z",
        "merged_at": null,
        "body": "File io_win32.h is not in directory  google\\protobuf\\stubs under directory google\\protobuf\\io",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 28,
        "deletions": 28,
        "changed_files": 29,
        "created_at": "2019-06-18T18:41:18Z",
        "closed_at": "2019-06-19T00:12:56Z",
        "merged_at": "2019-06-19T00:12:56Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-06-18T17:08:46Z",
        "closed_at": "2019-06-18T19:20:46Z",
        "merged_at": "2019-06-18T19:20:45Z",
        "body": "This fixes #5918.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 83,
        "deletions": 147,
        "changed_files": 5,
        "created_at": "2019-06-18T07:47:56Z",
        "closed_at": "2019-06-18T22:07:37Z",
        "merged_at": "2019-06-18T22:07:37Z",
        "body": "Other languages will have this removed inside Google first.\r\nThese functions are subject to ADL and cause problems.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-06-17T22:16:23Z",
        "closed_at": "2019-11-12T22:40:48Z",
        "merged_at": "2019-11-12T22:40:48Z",
        "body": "Fixes https://github.com/protocolbuffers/protobuf/issues/5335.\r\nFixes https://github.com/protocolbuffers/protobuf/issues/5865.",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2019-06-17T21:06:40Z",
        "closed_at": "2019-06-17T23:24:38Z",
        "merged_at": "2019-06-17T23:24:38Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2019-06-17T20:53:57Z",
        "closed_at": "2019-06-18T16:43:51Z",
        "merged_at": "2019-06-18T16:43:51Z",
        "body": "\u2026rst\"\r\n\r\nWe found that some code depended on the behavior of appending to the\r\nstring without clearing it first. The comments in json_util.h also make\r\nit appear that the appending behavior is intentional, so I think we need\r\nto stick with the old behavior.\r\n\r\nThis reverts commit 3cbe45a4b55952609dff0b3a9e2e7043679af93f.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-06-17T01:05:21Z",
        "closed_at": "2019-06-17T16:53:13Z",
        "merged_at": "2019-06-17T16:53:13Z",
        "body": "New bundler doesn't work with old gem: https://github.com/rbenv/rbenv/issues/1138",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2019-06-16T23:03:45Z",
        "closed_at": "2019-06-17T20:13:55Z",
        "merged_at": "2019-06-17T20:13:54Z",
        "body": "Fixes #4079",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 23,
        "deletions": 13,
        "changed_files": 3,
        "created_at": "2019-06-15T09:09:38Z",
        "closed_at": "2019-06-16T22:20:19Z",
        "merged_at": "2019-06-16T22:20:19Z",
        "body": "value_field_typeclass should be a enum module, not EnumDescriptor\nobject.\n\nAlso expanding tests for enum valued maps.\n\nFixes #4580\n\n----\n\n(I'm just curious that current Ruby binding's `map` implementation tries to resolve enum values to Ruby native `Symbol` on decoding, while normal enum fields are stored as is on decoding, and resolved to `Symbol` on getter method calls...)",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-06-14T15:26:46Z",
        "closed_at": "2019-08-23T19:09:26Z",
        "merged_at": null,
        "body": "",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-06-14T11:32:18Z",
        "closed_at": "2019-06-19T11:53:22Z",
        "merged_at": null,
        "body": "Otherwise, sandbox and remote execution will complain `google/protobuf/port_def.inc` doesn't exist.\r\n\r\nI fixed this at https://github.com/protocolbuffers/protobuf/commit/5902e759108d14ee8e6b0b07653dac2f4e70ac73 before, but apparently that commit is not merged into master.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 76,
        "deletions": 9,
        "changed_files": 4,
        "created_at": "2019-06-13T22:41:41Z",
        "closed_at": "2019-06-19T00:13:16Z",
        "merged_at": null,
        "body": "Previously mock cannot be used for proto message because it cannot be extended.\r\nNow, it can be extended by doing:\r\n1) Avoid freeing internal data, since it was not initialized for subclass\r\n2) Resort to standard handlers for subclass's properties",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 64,
        "deletions": 36,
        "changed_files": 6,
        "created_at": "2019-06-12T23:45:22Z",
        "closed_at": "2019-06-17T20:14:28Z",
        "merged_at": "2019-06-17T20:14:28Z",
        "body": "Fixes #5663 ",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2019-06-12T19:34:35Z",
        "closed_at": "2019-06-13T19:09:58Z",
        "merged_at": "2019-06-13T19:09:58Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2019-06-12T13:17:26Z",
        "closed_at": "2019-06-12T17:00:37Z",
        "merged_at": "2019-06-12T17:00:37Z",
        "body": "@acozzette ",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2019-06-12T02:30:35Z",
        "closed_at": "2019-06-20T18:17:23Z",
        "merged_at": "2019-06-20T18:17:23Z",
        "body": "The compatibility tests should pull dependencies over HTTPS instead of HTTP.\r\n\r\nIf these tests are run as part of a release, then previous releases of protobuf need to be audited for malicious compromise.\r\n\r\n## Related\r\n\r\n[Internal Google Security Vulnerability Report](https://issuetracker.google.com/issues/132071216)\r\n\r\n[![mitm_build](https://user-images.githubusercontent.com/1323708/59226671-90645200-8ba1-11e9-8ab3-39292bef99e9.jpeg)](https://medium.com/@jonathan.leitschuh/want-to-take-over-the-java-ecosystem-all-you-need-is-a-mitm-1fc329d898fb?source=friends_link&sk=3c99970c55a899ad9ef41f126efcde0e)\r\n[Want to take over the Java ecosystem? All you need is a MITM!](https://medium.com/@jonathan.leitschuh/want-to-take-over-the-java-ecosystem-all-you-need-is-a-mitm-1fc329d898fb?source=friends_link&sk=3c99970c55a899ad9ef41f126efcde0e)\r\n^^ Industry wide public disclosure of the security vulnerability impacting a huge swath of the JVM ecosystem.\r\n\r\n---\r\n\r\nBelow this line is my pre-canned issue template when I find issues like this.\r\n\r\n---\r\n\r\n# [SECURITY] Releases are built/executed/released in the context of insecure/untrusted code \r\n\r\n[CWE-829: Inclusion of Functionality from Untrusted Control Sphere](https://cwe.mitre.org/data/definitions/829.html)\r\n[CWE-494: Download of Code Without Integrity Check](https://cwe.mitre.org/data/definitions/494.html)\r\n\r\nThe build files indicate that this project is resolving dependencies over HTTP instead of HTTPS. Any of these artifacts could have been MITM to maliciously compromise them and infect the build artifacts that were produced. Additionally, if any of these JARs or other dependencies were compromised, any developers using these could continue to be infected past updating to fix this.\r\n\r\nThis vulnerability has a CVSS v3.0 Base Score of 8.1/10\r\nhttps://nvd.nist.gov/vuln-metrics/cvss/v3-calculator?vector=AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H\r\n\r\n### This isn't just theoretical\r\nPOC code has existed since 2014 to maliciously compromise a JAR file inflight.\r\nSee:\r\n* https://max.computer/blog/how-to-take-over-the-computer-of-any-java-or-clojure-or-scala-developer/\r\n* https://github.com/mveytsman/dilettante\r\n\r\n### MITM Attacks Increasingly Common\r\nSee:\r\n* https://serverfault.com/a/153065\r\n* https://security.stackexchange.com/a/12050\r\n* [Comcast continues to inject its own code into websites you visit](https://thenextweb.com/insights/2017/12/11/comcast-continues-to-inject-its-own-code-into-websites-you-visit/#) (over HTTP)\r\n\r\n### Public Disclosure\r\n\r\n#### Option 1: File for a CVE\r\n\r\nA project maintainer for this project should probably file for a CVE number to inform the public about this vulnerability in the build for this project. The goal is to inform the public that there was a potential for published build artifacts to have been maliciously compromised in earlier releases.\r\n\r\nIf a maintainer on this project works for or is associated with a CNA, please have them file it with them:\r\n[cve.mitre.org/cve/request_id.html](https://cve.mitre.org/cve/request_id.html)\r\n\r\nOtherwise, an open source CVE should be filed for here:\r\n[iwantacve.org](https://iwantacve.org/)\r\n\r\n#### Option 2: Manually validate the release artifacts\r\n\r\nIf this project's build is [fully reproducible](https://en.wikipedia.org/wiki/Reproducible_builds). An alternative to filing for a CVE is to go back and build the earlier releases (with the HTTPS patch applied) to confirm the artifacts were not tampered when they were built. This can be done by comparing the hashes of the artifacts built locally with the ones published. If the hashes of all previous artifacts match those that are published, you can safely assume that the releases were not tampered with.\r\n\r\nAgain, this assumes that the build if fully reproducible and will require significantly more work.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1794,
        "deletions": 2012,
        "changed_files": 64,
        "created_at": "2019-06-11T23:00:38Z",
        "closed_at": "2019-06-12T13:03:42Z",
        "merged_at": "2019-06-12T13:03:42Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2019-06-11T22:57:18Z",
        "closed_at": "2019-06-12T13:04:31Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-06-11T13:27:28Z",
        "closed_at": "2019-06-11T14:34:43Z",
        "merged_at": "2019-06-11T14:34:42Z",
        "body": "Fixes https://github.com/protocolbuffers/protobuf/issues/6235\r\n\r\nThanks!",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-06-10T23:51:04Z",
        "closed_at": "2019-06-11T17:07:40Z",
        "merged_at": "2019-06-11T17:07:40Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-06-09T12:49:22Z",
        "closed_at": "2019-06-10T16:41:33Z",
        "merged_at": "2019-06-10T16:41:33Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 551,
        "deletions": 267,
        "changed_files": 14,
        "created_at": "2019-06-08T21:06:22Z",
        "closed_at": "2019-06-27T17:46:22Z",
        "merged_at": "2019-06-27T17:46:22Z",
        "body": "Currently the protoc generated java classes will cause javadoc compilation warnings due to missing `@param` and `@return` values.\r\n\r\nI first thought this was an easy change, but I soon discovered that this takes quite some effort.\r\nThat's why I would like to get some feedback whether these changes have a chance to be merged at all / are appreciated.\r\n\r\n![example diff get](https://user-images.githubusercontent.com/1579362/59152315-9e9b5c80-8a41-11e9-9db0-87bdc7bf1f23.png)\r\n\r\n![example diff set and clear](https://user-images.githubusercontent.com/1579362/59152326-f20daa80-8a41-11e9-8449-b1cd33f52f32.png)\r\n\r\n\r\n\r\nThis PR is by no means complete, I just changed about 50/430 occurances of `WriteFieldDocComment`.",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 33,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2019-06-07T20:43:29Z",
        "closed_at": "2019-08-14T00:20:40Z",
        "merged_at": null,
        "body": "\r\n",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-06-07T18:11:21Z",
        "closed_at": "2019-06-11T03:52:53Z",
        "merged_at": "2019-06-11T03:52:53Z",
        "body": "This was found while integrating Protobuf 3.8.0 into a downstream project. @SuperOxigen noticed that our build files, which are autogenerated from the BUILD file, were out of order. So that we don't have to keep manually fixing our build files, I am pushing this fix upstream.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 23,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-06-07T15:30:41Z",
        "closed_at": "2019-08-29T16:25:45Z",
        "merged_at": null,
        "body": "Related to #3166\r\n",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-06-07T00:32:34Z",
        "closed_at": "2019-06-10T21:40:52Z",
        "merged_at": "2019-06-10T21:40:52Z",
        "body": "Hello google package maintainer,\r\nThe badge being added to the README in this PR will indicate your compatibility with other google packages. This addresses a set of user bugs which have happened when a user depends on two Cloud libraries (or runtimes that bundle libraries), say A and B, which both depend on library C. If the two libraries require different versions of C, the users can run into issues both when they pip install the libraries, and when they deploy their code. Our compatibility server checks that all libraries we make including this one are self and pairwise compatible as well as not having any deprecated dependencies. The badge will mark the build for your project green when the latest version available on PyPI meets all compatibility checks with itself and all other libraries. The badge target will link to a details page that elaborates on the current status. This should help you fix issues pre-release, to avoid user surprises. For more information, please take a look at our project charter at go/python-cloud-dependencies-project-charter and the badging PRD https://docs.google.com/document/d/1GYRFrfUou2ssY71AtnLkc8Sg1SD4dxqN4GzlatGHHyI/edit?ts=5c6f031d",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2019-06-06T17:33:26Z",
        "closed_at": "2019-06-21T23:17:10Z",
        "merged_at": "2019-06-21T23:17:10Z",
        "body": "This should fix issue #6186.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-06-04T13:02:17Z",
        "closed_at": "2019-06-05T00:00:23Z",
        "merged_at": "2019-06-05T00:00:23Z",
        "body": "In issue #5060 ,  there is a typo about `CodedInputStream`,  and it has been fixed in the current version.\r\nBut there is still an item missing, this PR fix `CodedOutputStream`   ",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-06-04T12:27:56Z",
        "closed_at": "2019-06-06T19:45:33Z",
        "merged_at": null,
        "body": "This is another fix for `--incompatible_no_support_tools_in_action_inputs`\r\nhttps://github.com/bazelbuild/bazel/issues/5826\r\n\r\nTensorFlow is broken due to this:\r\nhttps://buildkite.com/bazel/bazel-at-head-plus-downstream/builds/1014#f7a58799-a361-4087-82fb-f0c54ed2be49\r\n```\r\nTraceback (most recent call last):\r\n\tFile \"/var/lib/buildkite-agent/builds/bk-docker-g96n/bazel-downstream-projects/tensorflow/tensorflow/contrib/rpc/python/kernel_tests/BUILD\", line 14\r\n\t\tproto_gen(name = 'test_example_proto_py_genproto')\r\n\tFile \"/var/lib/buildkite-agent/.cache/bazel/_bazel_buildkite-agent/ad505fa787dc3fe473b54762d1a7f9ae/external/protobuf_archive/protobuf.bzl\", line 137, in _proto_gen_impl\r\n\t\tctx.actions.run(inputs = inputs, outputs = outs, arg...]), <3 more arguments>)\r\nFound tool(s) 'bazel-out/host/bin/external/grpc/grpc_python_plugin' in inputs. A tool is an input with executable=True set. All tools should be passed using the 'tools' argument instead of 'inputs' in order to make their runfiles available to the action. This safety check will not be performed once the action is modified to take a 'tools' argument. To temporarily disable this check, set --incompatible_no_support_tools_in_action_inputs=false.\r\n```",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2019-06-03T15:57:32Z",
        "closed_at": "2019-06-06T19:48:56Z",
        "merged_at": "2019-06-06T19:48:56Z",
        "body": "As a followup to ca3ead7745581b24d9e84471b5dee6921fcd369d, treat plugin executables as well as protoc as host tools.",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-06-03T01:39:36Z",
        "closed_at": "2019-06-05T17:39:04Z",
        "merged_at": "2019-06-05T17:39:04Z",
        "body": "In some platforms ${CMAKE_INSTALL_LIBDIR} expands to `lib64`. The libraries\r\nare correctly installed in that directory, but the RPATH is set to point to\r\n`$ORIGIN/../lib`, where it should be `$ORIGIN/../lib64`.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-05-31T23:03:10Z",
        "closed_at": "2019-06-10T21:35:40Z",
        "merged_at": "2019-06-10T21:35:40Z",
        "body": "Make the JSON util string output functions match the Message::SerializeToString() behavior.  This is helpful when packing the output into string fields of reused protobuf messages.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 348,
        "deletions": 78,
        "changed_files": 41,
        "created_at": "2019-05-31T22:19:30Z",
        "closed_at": "2019-06-01T18:27:58Z",
        "merged_at": "2019-06-01T18:27:58Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 800,
        "deletions": 402,
        "changed_files": 47,
        "created_at": "2019-05-31T13:23:02Z",
        "closed_at": "2019-05-31T16:53:52Z",
        "merged_at": "2019-05-31T16:53:52Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2019-05-30T22:04:20Z",
        "closed_at": "2019-05-31T22:46:06Z",
        "merged_at": "2019-05-31T22:46:06Z",
        "body": "The wire_format_lite_inl.h header file was made unnecessary in #5839\r\nand deleted in #5921, so remove the comment about it.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-05-30T06:30:10Z",
        "closed_at": "2019-05-31T21:26:21Z",
        "merged_at": "2019-05-31T21:26:21Z",
        "body": "there is a small typo in examples/README.md, this PR fix it ",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 10,
        "changed_files": 21,
        "created_at": "2019-05-29T21:45:21Z",
        "closed_at": "2019-07-31T14:08:59Z",
        "merged_at": null,
        "body": "Fix #3218 \r\n\r\nVerified that warnings go away in Protobuf and FirebaseMessaging client build when installed with `use-frameworks!`, `use-modular-headers`, and static libraries.\r\n\r\nI realize this might not be a great solution for non-CocoaPods users, but I'm not sure there is a solution that wouldn't be a breaking change for one or the other user set.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 17,
        "deletions": 30,
        "changed_files": 6,
        "created_at": "2019-05-28T15:55:03Z",
        "closed_at": "2021-10-13T00:28:08Z",
        "merged_at": null,
        "body": "I forgot to commit some stuff in #6128, this just adds it.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-05-28T14:47:33Z",
        "closed_at": "2019-05-28T18:09:42Z",
        "merged_at": "2019-05-28T18:09:42Z",
        "body": "I'm getting `src/google/protobuf/map_field.cc(284): error C2899: typename cannot be used outside a template declaration`\r\n\r\nremoving `typename` fixes the issue",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 102,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2019-05-24T14:32:20Z",
        "closed_at": "2019-06-20T18:15:08Z",
        "merged_at": "2019-06-20T18:15:08Z",
        "body": "that builds the JavaLite runtime.\r\n\r\nContents based on java/lite/pom.xml.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-05-24T11:45:14Z",
        "closed_at": "2019-06-20T18:18:53Z",
        "merged_at": "2019-06-20T18:18:53Z",
        "body": "This project is used by the [Envoy proxy](https://www.envoyproxy.io/) and several others.\r\n\r\nThe existing code is using the extension value [919191](https://github.com/envoyproxy/protoc-gen-validate/blob/54b08a686ff6548d8a248218664254c422fc4599/validate/validate.proto#L29) but since maintaining binary compatibility is not important, it shouldn't be a problem to change once this allocation is approved.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 13,
        "changed_files": 2,
        "created_at": "2019-05-23T22:26:44Z",
        "closed_at": "2019-05-24T17:12:58Z",
        "merged_at": "2019-05-24T17:12:58Z",
        "body": "Cherrypicking https://github.com/protocolbuffers/protobuf/commit/9276cb502e13458b4812ec3012fb97f48be8804f and https://github.com/protocolbuffers/protobuf/pull/6088/commits/983fd4e2ace542f19593e510550e02b5386cadb2 to fix JS on MacOS",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 104,
        "deletions": 13,
        "changed_files": 3,
        "created_at": "2019-05-23T05:37:39Z",
        "closed_at": "2019-05-24T17:00:10Z",
        "merged_at": "2019-05-24T17:00:10Z",
        "body": "Previously, foo_value and foo (wrapper field) will both have get/setFooValue",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 4,
        "changed_files": 4,
        "created_at": "2019-05-22T21:06:34Z",
        "closed_at": "2019-06-10T23:02:20Z",
        "merged_at": "2019-06-10T23:02:20Z",
        "body": "The Ruby implementation creates the explicit coercion `#to_h` method and the implicit coercion `#to_hash` method on Message and Map. Ruby treats objects that respond to implicit coercion methods differently. I do not think Protobuf intends that Message and Map are to be treated implicitly as hashes. In fact, I think this should actually be considered a bug.\r\n\r\nFor example, here are how the explicit and implicit methods such as `#to_h` and `#to_hash` are used:\r\n\r\n```ruby\r\n# assuming these primitive objects\r\nary = [1, 2, 3]\r\nhash = { foo: :bar }\r\nint = 42\r\nstr = \"Hello world!\"\r\n\r\n# hash has an array representation it itself\r\nhash.to_a #=> [[:foo, :bar]]\r\n# but that doesn't mean it _is_ an array\r\nhash.to_ary # NoMethodError (undefined method `to_ary' for {:foo=>:bar}:Hash)\r\n\r\n# similarily, an array doesn't know how to be a hash\r\nary.to_h #TypeError (wrong element type Integer at 0 (expected array))\r\n# but an array does have a string representation\r\nary.to_s #=> \"[1, 2, 3]\"\r\n# and a hash has a string representation\r\nhash.to_s #=> \"{:foo=>:bar}\"\r\n# and an integer has a string representation\r\nint.to_s #=> \"42\"\r\n# but none of them _are_ strings\r\nary.to_str # NoMethodError (undefined method `to_str' for [1, 2, 3]:Array)\r\nhash.to_str # NoMethodError (undefined method `to_str' for {:foo=>:bar}:Hash)\r\nint.to_str # NoMethodError (undefined method `to_str' for 42:Integer)\r\n\r\n# and a string doesn't know how to be an array, hash, or integer\r\nstr.to_a # NoMethodError (undefined method `to_a' for \"Hello world!\":String)\r\nstr.to_h # NoMethodError (undefined method `to_h' for \"Hello world!\":String)\r\nstr.to_i # NoMethodError (undefined method `to_i' for \"Hello world!\":String)\r\n```\r\n\r\nSimilarily, Protobuf Messages and Maps are not Ruby Hashes. They can generate hash representations, but they are not themselves hashes. They should not be used in place of hashes.\r\n\r\nWhat does the presence of the `#to_hash` method mean? It means Ruby will treat these objects as if they were hashes. Consider the following method:\r\n\r\n```ruby\r\ndef do_a_thing req_resource, opt_resource = nil, show_warnings: true\r\n  p req_resource\r\n  p opt_resource\r\n  p show_warnings\r\nend\r\n```\r\n\r\nYou would expect you could pass two Protobuf objects to the method, but you cannot.\r\n\r\n```ruby\r\ngem \"googleapis-common-protos-types\"\r\nrequire \"google/type/color_pb\"\r\n\r\nred = Google::Type::Color.new red: 1.0\r\nblue = Google::Type::Color.new blue: 1.0\r\n\r\n# call the method\r\ndo_a_thing red, blue # ArgumentError (unknown keywords: red, green, blue, alpha)\r\n```\r\n\r\nThis is because Ruby sees that the `blue` object has defined `#to_hash` and treats it as a hash, and tries to match the optional named argument instead of the positional object.\r\n\r\nBecause of this, and because there is no documentation that states that this method is intended to be part of the public API, I think these methods can and should be removed.",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-05-22T17:58:08Z",
        "closed_at": "2019-05-22T20:55:48Z",
        "merged_at": "2019-05-22T20:55:48Z",
        "body": "This reverts commit a7180caf19ae150d9a3f9724600b0eed4b5da830.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2019-05-22T00:37:02Z",
        "closed_at": "2019-07-03T05:01:41Z",
        "merged_at": null,
        "body": "This fixes issues if you build a `proto_gen` rule with the\r\n`--incompatible_disable_legacy_proto_provider` flag that will be enabled\r\nwith an upcoming bazel release. https://github.com/bazelbuild/bazel/issues/7152",
        "comments": 19
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-05-22T00:32:19Z",
        "closed_at": "2019-05-28T17:46:16Z",
        "merged_at": "2019-05-28T17:46:16Z",
        "body": "This fixes compatibility with bazel when passing `--incompatible_no_support_tools_in_action_inputs` which will be flipped in an upcoming release.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 87,
        "deletions": 79,
        "changed_files": 11,
        "created_at": "2019-05-21T23:07:03Z",
        "closed_at": "2019-05-22T21:30:50Z",
        "merged_at": "2019-05-22T21:30:50Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 32,
        "deletions": 18,
        "changed_files": 14,
        "created_at": "2019-05-21T21:07:56Z",
        "closed_at": "2019-05-24T18:06:50Z",
        "merged_at": "2019-05-24T18:06:50Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-05-21T07:25:07Z",
        "closed_at": "2019-05-21T18:25:20Z",
        "merged_at": "2019-05-21T18:25:20Z",
        "body": "Even though I just proofread this file, I noticed one more thing that needed correcting, which I fixed. The word \"genereated\" had to be corrected to \"generated\". My apologies for missing this on the initial check.\r\nThis is in reference to my pull request here: #6153 ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 31,
        "deletions": 14,
        "changed_files": 3,
        "created_at": "2019-05-18T15:29:00Z",
        "closed_at": "2019-06-18T17:31:51Z",
        "merged_at": "2019-06-18T17:31:51Z",
        "body": "This fixes the following issues for php's native Duration class:\r\n* Missing nanoseconds. The nanoseconds where divided as a float and implicitly converted to a string before being passed to `bcadd` (Most bcmath functions accept their parameters as strings!). This can result in a float formatted in scientific/exponential notation, which bcmath doesn't understand.\r\n  E.g. a Duration instance with 123s and 456ns can previously result in an invocation like\r\n  ```php\r\n  strval(bcadd('123', '4.56e-7', 9)) === '123.000000000'\r\n  ```\r\n  Using a regular `sprintf` seems like a far simpler solution to me.\r\n* Durations are supposed to be formatted without trailing zeroes.\r\n  I've added a simple call to `rtrim` for this.",
        "comments": 12
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 14,
        "changed_files": 1,
        "created_at": "2019-05-18T05:06:24Z",
        "closed_at": "2019-05-20T03:30:28Z",
        "merged_at": "2019-05-20T03:30:28Z",
        "body": "I corrected a few grammatical mistakes and increased the document's readability by easing the language flow.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 95,
        "deletions": 94,
        "changed_files": 14,
        "created_at": "2019-05-17T19:09:53Z",
        "closed_at": "2019-05-20T17:26:26Z",
        "merged_at": "2019-05-20T17:26:26Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-05-16T08:34:45Z",
        "closed_at": "2019-05-17T00:30:36Z",
        "merged_at": null,
        "body": "I run 'autogen.sh' and 'configure' as default, and then run make&make install.\r\nAnd then try to build 'g++ -c addressbook.pb.cc' (example from\r\nhttps://developers.google.com/protocol-buffers/docs/cpptutorial) and found errors:\r\n\r\nIn file included from /usr/include/c++/5/atomic:38:0,\r\n                 from /usr/local/include/google/protobuf/io/coded_stream.h:113,\r\n                 from addressbook.pb.h:23,\r\n                 from addressbook.pb.cc:4:\r\n/usr/include/c++/5/bits/c++0x_warning.h:32:2: error: #error This file requires compiler and library support for the ISO C++ 2011 standa\r\nrd. This support must be enabled with the -std=c++11 or -std=gnu++11 compiler options.\r\n #error This file requires compiler and library support \\\r\n  ^\r\n\r\nSo, I think c++11 is always needed, and should be added into .pc file.\r\n\r\nrelease note: no",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-05-14T17:49:19Z",
        "closed_at": "2019-05-15T00:52:16Z",
        "merged_at": "2019-05-15T00:52:16Z",
        "body": "Trivial spelling fix\r\n\r\nChanged 'pythong' to 'python'\r\n\r\nNote:\r\n- Language: Does not apply\r\n- Label: cleanup",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-05-14T00:26:15Z",
        "closed_at": "2019-05-14T02:36:44Z",
        "merged_at": "2019-05-14T02:36:44Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-05-13T23:39:42Z",
        "closed_at": "2019-05-14T02:16:23Z",
        "merged_at": "2019-05-14T02:16:23Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 17,
        "deletions": 27,
        "changed_files": 5,
        "created_at": "2019-05-13T18:55:39Z",
        "closed_at": "2019-05-14T18:04:31Z",
        "merged_at": "2019-05-14T18:04:31Z",
        "body": "In general, I think it will help us to debug issues if we have less C\r\ncode and more Ruby code.  This method can be implemented in pure Ruby,\r\nso this commit converts it to pure Ruby.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1613,
        "deletions": 1780,
        "changed_files": 37,
        "created_at": "2019-05-13T17:58:56Z",
        "closed_at": "2019-05-14T00:00:13Z",
        "merged_at": "2019-05-14T00:00:13Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 102,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-05-13T14:48:36Z",
        "closed_at": "2019-05-13T17:09:37Z",
        "merged_at": "2019-05-13T17:09:37Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2019-05-09T13:15:41Z",
        "closed_at": "2019-05-09T14:17:13Z",
        "merged_at": "2019-05-09T14:17:13Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 85,
        "deletions": 7,
        "changed_files": 3,
        "created_at": "2019-05-09T05:17:43Z",
        "closed_at": "2019-05-10T03:51:35Z",
        "merged_at": "2019-05-10T03:51:35Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-05-09T02:37:25Z",
        "closed_at": "2019-05-24T17:01:59Z",
        "merged_at": "2019-05-24T17:01:59Z",
        "body": "Fix #5965 ",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-05-09T02:16:59Z",
        "closed_at": "2019-05-17T22:19:46Z",
        "merged_at": "2019-05-17T22:19:46Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2019-05-09T00:06:35Z",
        "closed_at": "2019-05-15T01:04:33Z",
        "merged_at": "2019-05-15T01:04:33Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2019-05-07T22:24:09Z",
        "closed_at": "2019-05-09T02:15:21Z",
        "merged_at": "2019-05-09T02:15:21Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1001,
        "deletions": 794,
        "changed_files": 16,
        "created_at": "2019-05-07T21:02:24Z",
        "closed_at": "2019-05-13T17:12:11Z",
        "merged_at": null,
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-05-07T00:10:06Z",
        "closed_at": "2019-05-10T18:36:36Z",
        "merged_at": "2019-05-10T18:36:36Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-05-06T06:42:03Z",
        "closed_at": "2019-05-10T18:10:28Z",
        "merged_at": "2019-05-10T18:10:28Z",
        "body": "",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 659,
        "deletions": 290,
        "changed_files": 26,
        "created_at": "2019-05-03T21:36:17Z",
        "closed_at": "2019-05-04T00:03:33Z",
        "merged_at": "2019-05-04T00:03:33Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-05-03T12:54:01Z",
        "closed_at": "2019-05-03T20:21:10Z",
        "merged_at": "2019-05-03T20:21:10Z",
        "body": "should close protocolbuffers#6095",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-05-01T04:07:13Z",
        "closed_at": "2019-05-10T18:32:21Z",
        "merged_at": "2019-05-10T18:32:21Z",
        "body": "Reverts https://github.com/protocolbuffers/protobuf/pull/5755\r\n\r\nIncluding `-std=c++11` in the Cflags causes compiler warnings for the reasonably common practice of leaving C++ libraries in the `pkg-config --cflags` modules list when compiling C code in mixed C and C++ projects, and projects using later versions of C++ have to be sure to include their `-std=...` argument after the pkg-config output in the compiler command line so it overrides. The first issue seems to affect gRPC:\r\n```\r\ncc1: error: command line option '-std=c++11' is valid for C++/ObjC++ but not for C [-Werror]\r\n```",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-05-01T01:34:41Z",
        "closed_at": "2021-03-05T23:31:40Z",
        "merged_at": null,
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 268,
        "deletions": 728,
        "changed_files": 36,
        "created_at": "2019-04-30T22:31:56Z",
        "closed_at": "2019-05-01T21:31:57Z",
        "merged_at": "2019-05-01T21:31:56Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 256,
        "deletions": 702,
        "changed_files": 34,
        "created_at": "2019-04-30T21:01:16Z",
        "closed_at": "2019-04-30T22:26:12Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 21,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-04-29T23:53:20Z",
        "closed_at": "2019-05-01T18:36:01Z",
        "merged_at": "2019-05-01T18:36:01Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 71,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-04-29T20:05:54Z",
        "closed_at": "2019-04-30T17:10:29Z",
        "merged_at": "2019-04-30T17:10:29Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2019-04-29T17:44:35Z",
        "closed_at": "2019-04-29T19:50:49Z",
        "merged_at": "2019-04-29T19:50:49Z",
        "body": "Cherry-picking #6077 into the 3.8.x branch.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 218,
        "deletions": 50,
        "changed_files": 18,
        "created_at": "2019-04-28T15:30:42Z",
        "closed_at": "2021-10-21T18:33:32Z",
        "merged_at": null,
        "body": "Support for support multiline strings is provided in the following two\r\nways\r\n\r\n* backtick delimited string literals - for \"lite\" multiline strings\r\n* triple double quotes - for strings that might include a backtick,\r\n  e.g. Markdown documentation\r\n\r\nStrings are now categorized in two manors, each with their own lexical\r\ntoken\r\n\r\n* string names - strings that cannot be multiline, e.g. names\r\n* string values - strings values, e.g. default and custom values\r\n\r\nNOTE: There may be some tooling that has layered additional semantics\r\non top of the Protobuf spec that assumes strings are single line, e.g.\r\npackage paths.  Since these are layered on top of the Protobuf spec,\r\nthere is no way that the compiler can protect them.  This, however,\r\nshould not cause undue concern since providing multiline values for\r\nsuch elements is no different than misspelling a path.",
        "comments": 28
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2019-04-26T23:13:12Z",
        "closed_at": "2019-04-27T00:42:24Z",
        "merged_at": "2019-04-27T00:42:24Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2019-04-25T21:09:06Z",
        "closed_at": "2021-03-11T18:55:15Z",
        "merged_at": "2021-03-11T18:55:15Z",
        "body": "This commit removes an unused reference and registers globals with the\r\nGC so that they will never die.  Ruby is getting a compacting GC, and it\r\nmeans that these references can move.  Registering them with\r\n`rb_gc_register_mark_object` will ensure the constants don't move and\r\nwill not be collected.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 16,
        "changed_files": 7,
        "created_at": "2019-04-25T20:16:43Z",
        "closed_at": "2019-04-25T21:41:37Z",
        "merged_at": "2019-04-25T21:41:37Z",
        "body": "This partially reverts commit 029f2c7cda91403038355e86e08c7319c08436d9. Only Simple{DF}toa are kept. SimpleItoa is completely replaced with StrCat.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-04-24T00:07:15Z",
        "closed_at": "2019-04-24T21:37:59Z",
        "merged_at": "2019-04-24T21:37:58Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 69,
        "deletions": 55,
        "changed_files": 30,
        "created_at": "2019-04-23T23:15:53Z",
        "closed_at": "2019-04-26T20:17:55Z",
        "merged_at": "2019-04-26T20:17:55Z",
        "body": "",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1909,
        "deletions": 1825,
        "changed_files": 47,
        "created_at": "2019-04-23T00:14:30Z",
        "closed_at": "2019-04-23T16:54:54Z",
        "merged_at": "2019-04-23T16:54:54Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 910,
        "deletions": 225,
        "changed_files": 18,
        "created_at": "2019-04-22T07:59:50Z",
        "closed_at": "2022-08-02T14:00:09Z",
        "merged_at": null,
        "body": "fix csharp : repeated messages should be deep merge, not just copy references",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 47,
        "deletions": 10,
        "changed_files": 4,
        "created_at": "2019-04-22T06:37:10Z",
        "closed_at": "2019-04-22T07:46:56Z",
        "merged_at": null,
        "body": "RepeatedField<Message>.MergeFrom and MapField<Message>.MergeFrom should be deep merge, not just copy references",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 96,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-04-21T12:31:42Z",
        "closed_at": "2019-05-23T22:30:49Z",
        "merged_at": null,
        "body": "that builds the JavaLite runtime",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2019-04-20T01:53:21Z",
        "closed_at": "2019-05-10T18:11:28Z",
        "merged_at": "2019-05-10T18:11:28Z",
        "body": "It appears this file was including winsock2.h just to get the timeval struct definition. There are platforms, such as Xbox One, that don't use winsock but do compile with _MSC_VER set, so just drop in the struct definition we needed instead of including all of winsock. This fixes compilation of this file for Xbox One. Without this change, there were numerous `timeval` complaints such as\r\n```\r\n1>c:\\dev\\protobuf\\src\\google\\protobuf\\util\\time_util.h(153): error C4430: missing type specifier - int assumed. Note: C++ does not support default-int (compiling source file C:\\dev\\protobuf\\src\\google\\protobuf\\util\\time_util.cc)\r\n1>c:\\dev\\protobuf\\src\\google\\protobuf\\util\\time_util.h(153): error C2143: syntax error: missing ',' before '&' (compiling source file C:\\dev\\protobuf\\src\\google\\protobuf\\util\\time_util.cc)\r\n```\r\netc.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-04-20T01:31:09Z",
        "closed_at": "2019-05-03T00:18:23Z",
        "merged_at": "2019-05-03T00:18:23Z",
        "body": "Some versions of clang report an error such as\r\n```\r\nC:\\dev\\protobuf\\src\\google/protobuf/parse_context.h(227,5): error : no type named 'uintptr_t' in namespace 'std'; did you mean simply 'uintptr_t'?\r\n```\r\nprotobufs had mixed usage of plain `uintptr_t` and `std::uintptr_t` (and others such as `uint32_t`). This removes all instances of the leading namespace which allows compilation to succeed under MSVC and clang.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 124,
        "deletions": 443,
        "changed_files": 53,
        "created_at": "2019-04-17T19:58:34Z",
        "closed_at": "2019-04-18T01:14:46Z",
        "merged_at": "2019-04-18T01:14:45Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2019-04-17T17:01:40Z",
        "closed_at": "2019-04-23T00:09:36Z",
        "merged_at": null,
        "body": "This allows the `javalite` branch to be used with latest Bazel versions.\r\n\r\nRef: https://github.com/googlesamples/android-testing/issues/239\r\n\r\ncc @laurentlb\r\n\r\n",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-04-17T00:49:18Z",
        "closed_at": "2019-07-15T23:40:58Z",
        "merged_at": "2019-07-15T23:40:58Z",
        "body": "Following the instructions as is does not work, the new_local_repository rule needs to be called \"python_headers\"",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 51,
        "deletions": 51,
        "changed_files": 12,
        "created_at": "2019-04-16T23:04:32Z",
        "closed_at": "2019-04-24T22:27:07Z",
        "merged_at": "2019-04-24T22:27:07Z",
        "body": "This makes for easier rewrites between internal and external.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-04-15T14:14:34Z",
        "closed_at": "2019-05-02T17:52:40Z",
        "merged_at": "2019-05-02T17:52:40Z",
        "body": "`RDTSC` is unavailable when using [seccomp](https://en.wikipedia.org/wiki/Seccomp) while setting  `PR_SET_TSC` to `PR_TSC_SIGSEGV`. There may be other odd cases as well.\r\n\r\nSince the value of `RDTSC` is only used conditionally anyway (`#if defined(__x86_64__) && defined(__GNUC__)`) I suggest simply removing the relevant code. It's used for making a random seed more random, but I doubt this is really necessary.\r\n\r\nEDIT: See discussion below. `RDTSC` is disabled optionally by macro.",
        "comments": 12
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2019-04-13T20:52:12Z",
        "closed_at": "2019-04-15T20:45:24Z",
        "merged_at": "2019-04-15T20:45:24Z",
        "body": "GCC 8 added a -Wclass-memaccess that is enabled in -Wall that warns when\r\nmaking direct memory modifications to non-trivial objects. The objects\r\nthat are modified here are only \"non-trivial\" in non-interesting ways\r\n(e.g., removal of copy constructor) and can be safely modified as is\r\nbeing done.\r\n\r\nThis simply explicitly casts the pointers before calling memset to\r\nindicate that they should be treated as raw memory.\r\n\r\nFixes #5067",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 8,
        "changed_files": 2,
        "created_at": "2019-04-12T22:45:50Z",
        "closed_at": "2019-04-15T20:43:06Z",
        "merged_at": "2019-04-15T20:43:06Z",
        "body": "This brings the BUILD file into compliance with Bazel recommendations to not use bind (see [here](https://docs.bazel.build/versions/master/be/workspace.html#bind)). \r\n\r\nMy Bazel recommendation compliant code wouldn't work with protobuf because it forced me to use bind() to remap \"@zlib//:zlib\" to \"//external:zlib\". ",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1886,
        "deletions": 1011,
        "changed_files": 40,
        "created_at": "2019-04-12T20:13:00Z",
        "closed_at": "2019-04-12T22:19:36Z",
        "merged_at": "2019-04-12T22:19:36Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 18,
        "deletions": 18,
        "changed_files": 8,
        "created_at": "2019-04-12T18:51:05Z",
        "closed_at": "2019-04-12T20:28:44Z",
        "merged_at": "2019-04-12T20:28:44Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 17,
        "deletions": 16,
        "changed_files": 6,
        "created_at": "2019-04-12T00:17:23Z",
        "closed_at": "2019-04-15T23:07:28Z",
        "merged_at": "2019-04-15T23:07:28Z",
        "body": "These were found attempting to enable -Werror",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2019-04-11T21:08:28Z",
        "closed_at": "2019-05-23T22:31:12Z",
        "merged_at": null,
        "body": "Improve the documentation significantly, and make the docs match the implementation.\r\n\r\ncleanup\r\nrelease notes: no",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 141,
        "deletions": 36,
        "changed_files": 5,
        "created_at": "2019-04-11T20:51:15Z",
        "closed_at": "2020-01-22T18:22:42Z",
        "merged_at": null,
        "body": "Improves compilation of objective-c protos by ~7%\r\n\r\nobjective-c\r\nrelease notes: no\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-04-11T19:57:14Z",
        "closed_at": "2019-04-16T16:49:24Z",
        "merged_at": "2019-04-16T16:49:24Z",
        "body": "Fixes https://github.com/protocolbuffers/protobuf/issues/6015",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 314,
        "deletions": 341,
        "changed_files": 26,
        "created_at": "2019-04-10T20:10:50Z",
        "closed_at": "2019-04-10T22:07:05Z",
        "merged_at": "2019-04-10T22:07:04Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-04-10T18:18:20Z",
        "closed_at": "2019-04-11T22:41:27Z",
        "merged_at": "2019-04-11T22:41:27Z",
        "body": "This field isn't used yet, but it will be in the future so we don't want\r\nto remove it. This fixes the warning in the meantime.\r\n",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-04-10T18:17:00Z",
        "closed_at": "2019-04-16T16:50:00Z",
        "merged_at": "2019-04-16T16:50:00Z",
        "body": "All bazel crosstools automatically pass -Wall to compiles. The order of\r\noperations is:\r\n\r\n- bazel crosstool flags\r\n- `--host_copt` flags and other variations like `--host_cxxopt`\r\n- the `copts` defined on the rule\r\n\r\nBecause of this when protobuf produces warnings, there's no way to\r\ndisable them from the consumer side if they are re-enabled later by\r\nanother `-Wall` flag.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2019-04-10T18:08:35Z",
        "closed_at": "2019-04-11T22:41:56Z",
        "merged_at": "2019-04-11T22:41:56Z",
        "body": "When compiling protobuf these produce warnings",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 18,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-04-10T00:34:21Z",
        "closed_at": "2019-04-10T01:39:17Z",
        "merged_at": "2019-04-10T01:39:16Z",
        "body": "Add Mergeable config to require release notes and language label (or cleanup).",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 57,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-04-09T22:06:36Z",
        "closed_at": "2019-04-10T03:05:40Z",
        "merged_at": "2019-04-10T03:05:40Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 33,
        "changed_files": 1,
        "created_at": "2019-04-09T20:08:13Z",
        "closed_at": "2019-04-10T03:05:57Z",
        "merged_at": "2019-04-10T03:05:57Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 10,
        "changed_files": 2,
        "created_at": "2019-04-09T15:56:23Z",
        "closed_at": "2020-09-24T04:10:22Z",
        "merged_at": null,
        "body": "setup.py does not declare these packages to be namespace packages, so they shouldn't have the boilerplate.\r\n\r\nFixes https://github.com/protocolbuffers/protobuf/issues/5194.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 58703,
        "deletions": 25949,
        "changed_files": 405,
        "created_at": "2019-04-09T13:49:22Z",
        "closed_at": "2019-04-09T17:40:47Z",
        "merged_at": "2019-04-09T17:40:47Z",
        "body": "Down integration + include the changes to enable building JavaLite module",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-04-08T18:14:08Z",
        "closed_at": "2019-04-11T22:54:24Z",
        "merged_at": "2019-04-11T22:54:24Z",
        "body": "To check whether a field is set, we make \"field != 0\" comparisons; however, this makes the generated *.pb.cc files to throw the following warning if float-equal flag is set:\r\n\r\n```\r\nfile.pb.cc:494:34:  warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\r\n   // float field_name = 10;\r\n   if (this->field_name() != 0) {\r\n                             ^\r\n```\r\n\r\nIn case of a float, we can can avoid the float-equal warnings by using `<=` and `>=` to handle `==`.\r\n\r\nhttps://groups.google.com/d/msg/protobuf/H8_D1hfg3p4/mSJKQB75AAAJ",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 58628,
        "deletions": 25888,
        "changed_files": 401,
        "created_at": "2019-04-06T00:20:15Z",
        "closed_at": "2019-04-09T13:45:46Z",
        "merged_at": null,
        "body": "Also include the changes to enable building JavaLite module.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 58071,
        "deletions": 25566,
        "changed_files": 400,
        "created_at": "2019-04-05T22:00:41Z",
        "closed_at": "2019-04-06T00:37:41Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2019-04-05T00:45:27Z",
        "closed_at": "2019-04-11T22:53:10Z",
        "merged_at": "2019-04-11T22:53:10Z",
        "body": "This will enable [kythe](https://github.com/kythe/kythe) to associate the generated accessors in C++ with the definition in the proto file.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 57331,
        "deletions": 25228,
        "changed_files": 393,
        "created_at": "2019-04-03T22:16:18Z",
        "closed_at": "2019-04-05T21:09:22Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-04-03T07:36:41Z",
        "closed_at": "2019-04-03T16:29:59Z",
        "merged_at": "2019-04-03T16:29:59Z",
        "body": "To prevent us from getting such error with sandbox or remote execution:\r\n```\r\nbazel-out/k8-opt/genfiles/tensorflow/core/lib/core/error_codes.pb.h:10:40: fatal error: google/protobuf/port_def.inc: No such file or directory\r\n #include <google/protobuf/port_def.inc>\r\n                                        ^\r\n```",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-04-02T12:12:42Z",
        "closed_at": "2019-04-08T21:01:35Z",
        "merged_at": "2019-04-08T21:01:35Z",
        "body": "As [bazel docs](https://docs.bazel.build/versions/0.21.0/android-ndk.html#configuring-the-stl) says, we can configure C++ STL by `crosstool_top`.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-04-02T07:53:04Z",
        "closed_at": "2019-04-04T08:04:39Z",
        "merged_at": null,
        "body": "To prevent us from getting such error with sandbox or remote execution:\r\n```\r\nbazel-out/k8-opt/genfiles/tensorflow/core/lib/core/error_codes.pb.h:10:40: fatal error: google/protobuf/port_def.inc: No such file or directory\r\n #include <google/protobuf/port_def.inc>\r\n                                        ^\r\n```",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 2666,
        "deletions": 827,
        "changed_files": 93,
        "created_at": "2019-04-01T08:43:47Z",
        "closed_at": "2019-04-02T21:55:32Z",
        "merged_at": null,
        "body": "learning\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-03-29T04:31:34Z",
        "closed_at": "2019-05-23T22:31:18Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 0,
        "changed_files": 4,
        "created_at": "2019-03-28T18:10:12Z",
        "closed_at": "2019-04-24T22:29:18Z",
        "merged_at": "2019-04-24T22:29:18Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 57,
        "changed_files": 3,
        "created_at": "2019-03-27T17:34:03Z",
        "closed_at": "2019-03-28T00:07:58Z",
        "merged_at": "2019-03-28T00:07:58Z",
        "body": "Fixes preprocessor definitions assumed to be `0` by being undefined.\r\n\r\n~~The `mathlimits.cc` change is what worries me most, but the code is obviously wrong right now by using `__cpluscplus` instead of `__cplusplus`. If this change is correct, the `DEF_*` macros and their usages should probably just go away.~~ Resolved in https://github.com/protocolbuffers/protobuf/pull/5962#discussion_r269690058",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 39,
        "deletions": 5,
        "changed_files": 5,
        "created_at": "2019-03-26T23:17:41Z",
        "closed_at": "2019-03-28T16:54:14Z",
        "merged_at": "2019-03-28T16:54:13Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-03-26T21:41:32Z",
        "closed_at": "2019-03-27T17:47:37Z",
        "merged_at": null,
        "body": "",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2757,
        "deletions": 1494,
        "changed_files": 80,
        "created_at": "2019-03-26T21:38:08Z",
        "closed_at": "2019-03-29T00:28:22Z",
        "merged_at": "2019-03-29T00:28:22Z",
        "body": "The 3.7.x branch has a bunch of fixes for 3.7.1, so let's merge them into master.",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 10876,
        "deletions": 13205,
        "changed_files": 145,
        "created_at": "2019-03-26T00:43:11Z",
        "closed_at": "2019-03-28T17:02:22Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2019-03-25T21:25:19Z",
        "closed_at": "2019-03-26T00:19:48Z",
        "merged_at": "2019-03-26T00:19:48Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 67,
        "deletions": 37,
        "changed_files": 29,
        "created_at": "2019-03-25T20:27:31Z",
        "closed_at": "2019-03-26T16:30:13Z",
        "merged_at": "2019-03-26T16:30:13Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-03-25T04:00:49Z",
        "closed_at": "2019-03-25T16:52:01Z",
        "merged_at": "2019-03-25T16:52:01Z",
        "body": "This is a cherry-pick of #5864 from `master` branch.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 28,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2019-03-22T09:13:54Z",
        "closed_at": "2021-10-13T00:23:55Z",
        "merged_at": null,
        "body": "This makes JsonObjectWriter fit the ObjectWriter interface, mirroring the behaviour of ProtoWriter.",
        "comments": 17
    },
    {
        "merged": true,
        "additions": 32176,
        "deletions": 403,
        "changed_files": 45,
        "created_at": "2019-03-22T01:51:58Z",
        "closed_at": "2019-09-03T10:15:39Z",
        "merged_at": "2019-09-03T10:15:39Z",
        "body": "This wraps up all the previous feature PRs. Changes include:\r\n\r\n * Many tests for previous feature PRs\r\n * The proto3 constraint on C# code-gen has been removed\r\n * Conformance tests for proto2 are ran instead of skipped\r\n * GetOption APIs have been added to descriptors\r\n * CustomOptions are now deprecated\r\n * The generated descriptor code has been made public\r\n\r\nWhen pulled, this PR will fix numerous proto2 feature issues, including: #5759, #4591, #4407, #3487, #2991",
        "comments": 36
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-03-21T23:38:30Z",
        "closed_at": "2019-03-25T16:52:47Z",
        "merged_at": "2019-03-25T16:52:47Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 5,
        "changed_files": 4,
        "created_at": "2019-03-21T19:31:03Z",
        "closed_at": "2019-03-25T20:38:07Z",
        "merged_at": "2019-03-25T20:38:07Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 58,
        "deletions": 58,
        "changed_files": 13,
        "created_at": "2019-03-21T18:09:54Z",
        "closed_at": "2019-03-25T16:37:06Z",
        "merged_at": "2019-03-25T16:37:06Z",
        "body": "We need to mark messages as final soon, but before we do that we need to\r\nprovide a temporary opt-out mechanism to accommodate existing code that\r\ninherits from generated messages. For 3.7.1 let's stop marking messages\r\nfinal but in 3.8 we can reintroduce \"final\" with an opt-out option.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-03-21T16:21:00Z",
        "closed_at": "2019-03-21T18:07:33Z",
        "merged_at": "2019-03-21T18:07:33Z",
        "body": "The bazel-bin/ and bazel-genfiles/ directories are going to be merged\r\nsoon. That change was causing some test failures on Windows, and I\r\nbelieve it is because the logic for locating test data files was getting\r\nconfused and mistakenly looking for them under bazel-bin/. This commit\r\nupdates that logic to look for a more specific file (descriptor.cc)\r\nwhich does not appear under any Bazel-related directories.\r\n\r\nIt sounds like the more official solution is to use the Bazel runfiles\r\nlibrary (i.e. //tools/cpp/runfiles). However, I decided not to do that\r\nbecause we currently still support multiple build systems, and if we\r\nused a separate solution for Bazel then I suspect we would need even\r\nmore #ifdefs in the code to handle the different systems.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 31,
        "deletions": 6,
        "changed_files": 3,
        "created_at": "2019-03-21T04:34:51Z",
        "closed_at": "2019-03-25T17:51:19Z",
        "merged_at": "2019-03-25T17:51:19Z",
        "body": "Fix #5911 ",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2019-03-20T21:50:28Z",
        "closed_at": "2019-03-25T18:00:20Z",
        "merged_at": "2019-03-25T18:00:20Z",
        "body": "We ran into problems with precompiled protoc binaries not working on\r\nsome systems because of the dependence on a dynamically linked\r\nlibatomic. However, I found that linking against libatomic is not\r\nactually necessary in our protoc build environment. Inside configure.ac\r\nthere's a test which figures out if we need to pass -latomic, and it\r\ndoes this by attempting to build a test binary. That binary was failing\r\nto build, but it turns out this was because we need to pass -std=c++11,\r\nnot -latomic.\r\n\r\nThis fixes #5875.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1675,
        "deletions": 1116,
        "changed_files": 105,
        "created_at": "2019-03-20T18:47:43Z",
        "closed_at": "2019-03-21T22:24:08Z",
        "merged_at": "2019-03-21T22:24:08Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 26,
        "deletions": 10,
        "changed_files": 1,
        "created_at": "2019-03-18T17:02:45Z",
        "closed_at": "2019-03-18T21:21:06Z",
        "merged_at": "2019-03-18T21:21:06Z",
        "body": "Reverts protocolbuffers/protobuf#5014",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3531,
        "deletions": 1499,
        "changed_files": 6,
        "created_at": "2019-03-17T05:31:04Z",
        "closed_at": "2019-03-20T05:27:13Z",
        "merged_at": "2019-03-20T05:27:13Z",
        "body": "Fix #5884 ",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 30,
        "deletions": 93,
        "changed_files": 5,
        "created_at": "2019-03-16T08:52:51Z",
        "closed_at": "2019-04-08T21:02:42Z",
        "merged_at": null,
        "body": "There was some interest in a statically linked protoc in #5053. Statically linked binaries can prevent loader issues when running protoc such as in the linked issues while making the build process simpler, as not as much care has to be taken in using dependencies outside of system dependencies. This means that modern OS distributions can be used to build protoc instead of intentionally using an old one to link to old versions of libc.\r\n\r\n## Pros of static link\r\n- All Linux users will be able to run the binary, no matter what distribution\r\n- No restrictions on build environment - an OS with modern GCC and libc can be used without issue since the resulting binaries are loadable anywhere\r\n\r\n## Cons of static link\r\n- Larger binary. Comparing 3.7.0, a statically linked one is 5.7MB vs 4.7MB for the released dynamically linked one\r\n\r\nI didn't see any strong objection to statically linking in #5053 and it seemed to get closed since the immediate issue at hand was solved. But as we've seen with `libatomic`, these issues will continue to crop up as long as the binaries are dynamically linked. Hopefully this PR makes sense - if there is a reason to avoid statically linking though, feel free to close it. Merging and using it will fix the `libatomic` issue though :) The best part of it, IMO, is that the same process is used to build all the targets - currently, aarch64 and ppc64 are built on the Kokoro debian host and others built in a CentOS docker container. This discrepancy doesn't seem intuitive or ideal. I suspect the `libatomic` release issues happened in the first place since developers use debian, which includes `libatomic` automatically when installing a build chain, and not centos.\r\n\r\n## Changes\r\n- Switch build image from old centos to modern debian, which includes good support for cross-compiling all the target architectures\r\n- Pass `--static` to `LDFLAGS` on linux, ensuring resulting binary is not a dynamic executable\r\n- Update dependency checker to verify the linux binaries are statically linked\r\n- Kokoro script uses the same docker image to build all Linux targets\r\n\r\n## Testing\r\n\r\nI ran all builds using the changed `Dockerfile` using something like\r\n\r\n```\r\n$ docker build -t protobuf/build protoc-artifacts\r\n$ docker run -it --rm protobuf/build\r\n$ apt-get install -y git\r\n$ git clone https://github.com/anuraaga/protobuf\r\n$ git fetch origin static-link\r\n$ git checkout static-link\r\n$ ./autogen.sh\r\n$ cd protoc-artifacts\r\n$ ./build-protoc.sh linux x86_64 protoc\r\n$ ./build-protoc.sh linux x86_32 protoc\r\n$ ./build-protoc.sh linux aarch_64 protoc\r\n$ ./build-protoc.sh linux ppcle_64 protoc\r\n$ file target/linux/aarch_64/protoc.exe\r\n$ file target/linux/ppcle_64/protoc.exe\r\n```\r\n\r\nAll the built binaries ran fine. The aarch / ppcle ones I think have the qemu runtime layer statically linked in, but the binaries seem to not be much larger as a result so hopefully this is fine.\r\n\r\nFixes #5875 ",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2019-03-15T21:41:13Z",
        "closed_at": "2019-04-01T21:00:40Z",
        "merged_at": "2019-04-01T21:00:40Z",
        "body": "* external/com_google_protobuf/src/google/protobuf/stubs/strutil.cc:1122:9: runtime error: negation of -9223372036854775808 cannot be represented in type 'google::protobuf::int64' (aka 'long'); cast to an unsigned type to negate this value to itself\r\n\r\n* Bad external/com_google_protobuf/src/google/protobuf/text_format.cc:1320:14: runtime error: null pointer passed as argument 1, which is declared to never be null\r\n  /usr/include/string.h:62:62: note: nonnull attribute specified here\r\n\r\nSigned-off-by: Harvey Tuch <htuch@google.com>",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-03-15T09:40:40Z",
        "closed_at": "2019-03-15T10:41:26Z",
        "merged_at": "2019-03-15T10:41:26Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2019-03-14T20:36:38Z",
        "closed_at": "2019-03-21T18:51:14Z",
        "merged_at": "2019-03-21T18:51:14Z",
        "body": "Hello,\r\n\r\nI do not know if you are interested in fixing such warnings, but this is a little patch to fix remaining `DeprecationWarning: invalid escape sequence`.\r\n\r\nSigned-off-by: Micka\u00ebl Schoentgen <contact@tiger-222.fr>",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 230,
        "deletions": 36,
        "changed_files": 10,
        "created_at": "2019-03-14T19:20:40Z",
        "closed_at": "2019-03-15T05:21:18Z",
        "merged_at": "2019-03-15T05:21:18Z",
        "body": "Cherry-pick of #5659.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-03-14T14:47:46Z",
        "closed_at": "2019-03-14T16:47:34Z",
        "merged_at": "2019-03-14T16:47:34Z",
        "body": "We enabled Windows C# presubmit test, but I didn't realize the presubmit.cfg was missing (so currently all the Win C# tests on PR are failing).",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2019-03-14T12:19:56Z",
        "closed_at": "2019-03-14T21:58:36Z",
        "merged_at": "2019-03-14T21:58:36Z",
        "body": "Fixes #5850 (according to my experiments)",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2019-03-14T10:38:39Z",
        "closed_at": "2019-04-01T21:06:19Z",
        "merged_at": "2019-04-01T21:06:19Z",
        "body": "protobuf_lite now needs `strtod.cc`. The changes were obtained by running `./update_file_lists.sh`.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 27250,
        "deletions": 2801,
        "changed_files": 102,
        "created_at": "2019-03-13T21:36:57Z",
        "closed_at": "2020-05-11T07:01:09Z",
        "merged_at": null,
        "body": "This is very WIP/rough. I had to create a new `ISpanMessage<T>` interface, and some areas do not have full support for it yet (they are throwing NotSupportException right now).\r\n\r\nNothing has been done on the code gen side. The way the reader and writer are used compared to the streams is almost identitical so code gen changes should be minimal.\r\n\r\n### Perf numbers:\r\n\r\nWriteToByteArray and ParseFromByteArray both allocate the byte array. This matches how serialization from gRPC works today.\r\n\r\nWriteToBufferWriter writes to an `IBufferWriter<byte>` and doesn't allocate at all. For a small message CodedOutputWriter is slower than CodedOutputStream. It is faster for medium/large messages. Still some tuning to be done.\r\n\r\nParseFromReadOnlySequence reads from a sequence. Its allocations are related to creating the message and whatever strings exist on the message. Using CodedInputReader is consistently faster than CodedInputStream.\r\n\r\n```\r\n|                    Method |     Mean |     Error |    StdDev |   Median | Gen 0/1k Op | Gen 1/1k Op | Gen 2/1k Op | Allocated Memory/Op |\r\n|-------------------------- |---------:|----------:|----------:|---------:|------------:|------------:|------------:|--------------------:|\r\n|          WriteToByteArray | 377.5 ns | 11.210 ns | 32.876 ns | 370.3 ns |      0.0682 |           - |           - |               288 B |\r\n|        ParseFromByteArray | 385.2 ns |  8.280 ns | 23.624 ns | 377.5 ns |      0.2666 |           - |           - |              1120 B |\r\n|       WriteToBufferWriter | 294.0 ns |  3.658 ns |  3.421 ns | 293.6 ns |           - |           - |           - |                   - |\r\n| ParseFromReadOnlySequence | 338.6 ns |  6.696 ns | 10.621 ns | 336.0 ns |      0.1903 |           - |           - |               800 B |\r\n```\r\n\r\n@jskeet @davidfowl @JunTaoLuo @jtattermusch",
        "comments": 58
    },
    {
        "merged": true,
        "additions": 69,
        "deletions": 7,
        "changed_files": 6,
        "created_at": "2019-03-13T17:39:36Z",
        "closed_at": "2019-03-13T20:31:56Z",
        "merged_at": "2019-03-13T20:31:56Z",
        "body": "Cherry pick of #5871 with a few minor adjustments as there was some refactoring done between 3.7.x and master.\r\n\r\n/cc @TeBoring",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2019-03-13T05:34:43Z",
        "closed_at": "2019-03-15T18:17:23Z",
        "merged_at": "2019-03-15T18:17:23Z",
        "body": "* Define PROTOBUF_MIN_PROTOC_VERSION in port_def.inc\r\n* Remove duplicated GOOGLE_PROTOBUF_MIN_LIBRARY_VERSION from common.h\r\nFix #5863 ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 11,
        "changed_files": 6,
        "created_at": "2019-03-12T22:35:52Z",
        "closed_at": "2019-06-25T18:45:31Z",
        "merged_at": "2019-06-25T18:45:31Z",
        "body": "Second stab at https://github.com/protocolbuffers/protobuf/pull/4167\r\n\r\nHaving `google` in the package namespace generates unusable ruby code.\r\n\r\n```proto\r\nsyntax = \"proto3\";\r\n\r\npackage foo.vendor.google;\r\n\r\nmessage Bar {\r\n  int32 baz = 1;\r\n}\r\n```\r\n\r\n```ruby\r\n# Generated by the protocol buffer compiler.  DO NOT EDIT!\r\n# source: test.proto\r\n\r\nrequire 'google/protobuf'\r\n\r\nGoogle::Protobuf::DescriptorPool.generated_pool.build do\r\n  add_message \"foo.vendor.google.Bar\" do\r\n    optional :baz, :int32, 1\r\n  end\r\nend\r\n\r\nmodule Foo\r\n  module Vendor\r\n    module Google\r\n      Bar = Google::Protobuf::DescriptorPool.generated_pool.lookup(\"foo.vendor.google.Bar\").msgclass\r\n    end\r\n  end\r\nend\r\n```\r\n\r\nwhich obviously doesn't work:\r\n\r\n```\r\n<module:Google>: uninitialized constant Foo::Vendor::Google::Protobuf (NameError)\r\n```\r\n\r\n`Google::Protobuf::DescriptorPool` must be prefixed with `::` to fix this.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 52,
        "deletions": 7,
        "changed_files": 10,
        "created_at": "2019-03-12T09:21:54Z",
        "closed_at": "2019-03-13T06:27:30Z",
        "merged_at": "2019-03-13T06:27:30Z",
        "body": "- linux: switch tests to use netcoreapp2.1 (**currently some tests are being skipped due to the failure to update buildall.sh in #5838**)\r\n- add kokoro testing scripts for windows (will be enabled on pull requests later)\r\n- a bit more cleanup\r\n\r\n",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2019-03-11T21:42:31Z",
        "closed_at": "2019-03-12T17:15:51Z",
        "merged_at": "2019-03-12T17:15:51Z",
        "body": "It appears that some versions of Clang do not support this flag, and\r\nthis came up as a problem for Homebrew builds in issue #5815.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2019-03-11T19:15:15Z",
        "closed_at": "2019-03-11T20:20:06Z",
        "merged_at": "2019-03-11T20:20:06Z",
        "body": "For reasons I don't follow, when passing CXXFLAGS to configure, the build\r\nends up breaking because something along the way fails to detect C++11\r\nsupport within the third_party/googletest part of the build.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 69,
        "deletions": 7,
        "changed_files": 6,
        "created_at": "2019-03-11T16:42:45Z",
        "closed_at": "2019-03-13T04:30:07Z",
        "merged_at": "2019-03-13T04:30:07Z",
        "body": "Closes: https://github.com/protocolbuffers/protobuf/issues/5837\r\n\r\nIt turns out for PHP5 `zend_lookup_class` expects a null terminated string.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 146,
        "deletions": 55,
        "changed_files": 8,
        "created_at": "2019-03-11T04:09:34Z",
        "closed_at": "2019-03-12T17:56:59Z",
        "merged_at": "2019-03-12T17:56:59Z",
        "body": "Fix #5827 ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 10752,
        "deletions": 18426,
        "changed_files": 16,
        "created_at": "2019-03-11T02:10:50Z",
        "closed_at": "2019-08-14T21:41:38Z",
        "merged_at": "2019-08-14T21:41:38Z",
        "body": "Updates the Ruby protobuf library to a new version of upb, the C library used for proto parsing. This removes some APIs that allowed setting fields directly on descriptor objects, but these were internal-only. Any code generated by the protocol compiler, and any code that uses the Ruby/Protobuf DSL should continue to work.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-03-10T04:15:59Z",
        "closed_at": "2019-03-12T16:08:51Z",
        "merged_at": "2019-03-12T16:08:51Z",
        "body": "Problem\r\n=====\r\n\r\nI am trying to update `vcpkg`'s `protobuf` to v3.7.0 recently: https://github.com/Microsoft/vcpkg/pull/5502, and encountered a strange error when I tried to install `google-cloud-cpp` with this new version of `protobuf`: https://github.com/Microsoft/vcpkg/pull/5502#issuecomment-471164970\r\n\r\nIn VS2013 and after, `stdlib.h` already have `strtoll` and `strtoull` in it. Redefining them will cause an error if the users use `std::strtoull` in their code:\r\n\r\n>error C2039: '_strtoui64': is not a member of 'std'\r\n\r\nHow to reproduce?\r\n=====\r\n\r\n```cpp\r\n#include <fstream>\r\n#include <iostream>\r\n\r\n#include \"person.pb.h\"\r\n\r\n\r\nint main()\r\n{\r\n    std::cout << std::strtoull(\"12345678\", nullptr, 0) << std::endl;\r\n\r\n    {\r\n        Person person;\r\n        person.set_name(\"John Doe\");\r\n        person.set_id(1234);\r\n        person.set_email(\"jdoe@example.com\");\r\n\r\n        std::ofstream out_stream(\"person.dat\", std::ios::binary);\r\n        if (out_stream.is_open())\r\n           person.SerializeToOstream(&out_stream);\r\n   }\r\n\r\n   {\r\n        std::ifstream in_stream(\"person.dat\", std::ios::binary);\r\n        if (in_stream.is_open())\r\n        {\r\n            Person person;\r\n            person.ParseFromIstream(&in_stream);\r\n    \r\n            std::cout << \"Name: \" << person.name() << std::endl;\r\n            std::cout << \"Email: \" << person.email() << std::endl;\r\n        }\r\n    }\r\n\r\n    return 0;\r\n}\r\n```\r\n\r\n>1>ongoing-study\\cpp\\protobuf\\person_example\\person.cpp(9): error C2039: '_strtoui64': is not a member of 'std'\r\n\r\nReferences\r\n=====\r\nhttps://stackoverflow.com/questions/21911652/c-strtoull-function-undefined\r\nhttps://github.com/SOCI/soci/pull/217\r\n[_MSC_VER](https://docs.microsoft.com/en-us/cpp/preprocessor/predefined-macros?view=vs-2017)\r\nhttps://github.com/flavio/qjson/issues/23",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2019-03-08T19:31:29Z",
        "closed_at": "2019-03-08T20:54:50Z",
        "merged_at": "2019-03-08T20:54:50Z",
        "body": "Recently dependency to error_prone_annotations was added to the code,\r\nbut only Maven build tool chain was updated.\r\n\r\nCloses #5795.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 92,
        "deletions": 3,
        "changed_files": 5,
        "created_at": "2019-03-08T18:48:22Z",
        "closed_at": "2019-03-08T20:50:34Z",
        "merged_at": "2019-03-08T20:50:34Z",
        "body": "* add check for overflow\r\n\r\n* de-nestify\r\n\r\n* break long lines",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 57,
        "deletions": 24,
        "changed_files": 5,
        "created_at": "2019-03-08T06:33:31Z",
        "closed_at": "2019-03-11T00:33:47Z",
        "merged_at": "2019-03-11T00:33:47Z",
        "body": "Fix #5824 ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 58,
        "deletions": 0,
        "changed_files": 4,
        "created_at": "2019-03-07T19:03:03Z",
        "closed_at": "2019-03-07T22:34:29Z",
        "merged_at": "2019-03-07T22:34:29Z",
        "body": "This will remove the need for step 3 in our release process.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 24,
        "changed_files": 3,
        "created_at": "2019-03-07T18:53:09Z",
        "closed_at": "2019-03-08T01:16:32Z",
        "merged_at": "2019-03-08T01:16:32Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-03-07T15:34:18Z",
        "closed_at": "2019-03-25T21:28:27Z",
        "merged_at": null,
        "body": "Pharo is a Smalltalk-80 derived programming environment and has\r\ngained a protobuf implementation.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 36,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-03-07T02:31:24Z",
        "closed_at": "2019-03-07T04:21:34Z",
        "merged_at": "2019-03-07T04:21:34Z",
        "body": "This change introduces a CriticalSectionLock class as a lightweight replacement for std::mutex on Windows platforms. This code is conditionally compiled only when GOOGLE_PROTOBUF_SUPPORT_WINDOWS_XP is #defined.\r\n\r\nstd::mutex does not work on Windows XP SP2 with the latest VC++ libraries, because it utilizes the Concurrency Runtime that uses ::GetLogicalProcessorInformation which is only supported on Windows XP SP3 and above.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-03-06T01:29:03Z",
        "closed_at": "2019-03-06T07:01:49Z",
        "merged_at": "2019-03-06T07:01:49Z",
        "body": "Some of the Ruby tests are successfully terminating without actually running.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 17255,
        "deletions": 17148,
        "changed_files": 295,
        "created_at": "2019-03-06T01:18:28Z",
        "closed_at": "2019-03-06T20:39:12Z",
        "merged_at": "2019-03-06T20:39:12Z",
        "body": "",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 86,
        "deletions": 30,
        "changed_files": 14,
        "created_at": "2019-03-05T23:58:54Z",
        "closed_at": "2019-03-11T20:03:59Z",
        "merged_at": "2019-03-11T20:03:59Z",
        "body": "Moved global.json up to root of repo, changed SDK version to 2.2.100.\r\nChanged .NET Core SDK in dockerfile for kokoro to version 2.2.100.\r\n\r\n.NET Core 1.0 is reaching end of life, it's hard to install, and it's getting in the way of everyone's fun.\r\n\r\nThis should fix issues with #5802",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 17249,
        "deletions": 17148,
        "changed_files": 293,
        "created_at": "2019-03-05T17:47:42Z",
        "closed_at": "2019-03-06T00:07:12Z",
        "merged_at": null,
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 28,
        "deletions": 13,
        "changed_files": 2,
        "created_at": "2019-03-05T12:20:51Z",
        "closed_at": "2019-03-18T23:28:03Z",
        "merged_at": "2019-03-18T23:28:03Z",
        "body": "Also add useful Span-based methods for ByteString\r\n\r\nSystem.Memory dependency is only added for netstandard2.0 target, netstandard1.0 and net45 stay unchanged (we actually could add System.Memory dependency for net45 too, but it seems that most users that will benefit from Span optimizations will already have access to netstandard2.0).\r\n\r\nThis PR is mostly preparation for future span-based optimizations, but to make at least some use of the new dependency, two utility ByteString methods are being added.\r\n\r\nSee https://github.com/grpc/grpc-dotnet/issues/30 for more details about the planned serialization/deserialization API.",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 221,
        "deletions": 16,
        "changed_files": 4,
        "created_at": "2019-03-05T00:43:33Z",
        "closed_at": "2019-03-10T18:13:19Z",
        "merged_at": null,
        "body": "this fixes issue #5822\r\n\r\nThis applies the same style optimizations that are done in WriteString, handling the \"common case\".\r\nI need to sort out indentation to match the project. I'm opening this up for initial feedback. I've moved incrementing the position member variable to outside of the loops as I saw it generated less assembly and appeared to perform better on Release builds for my profiling.\r\n\r\nI'm seeing about 100% speed improvements for repeated fields on primitives, so I'd be curious if others see the same too. These optimizations are applied only if the entire array fits within the buffer, otherwise performance should be the same. This optimization should be covered by the existing unit tests which test varying buffer sizes, but the test data could be added to providing longer repeated fields.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 116,
        "deletions": 169,
        "changed_files": 37,
        "created_at": "2019-03-05T00:17:01Z",
        "closed_at": "2019-03-07T20:55:46Z",
        "merged_at": "2019-03-07T20:55:46Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 39,
        "deletions": 38,
        "changed_files": 3,
        "created_at": "2019-03-04T21:18:37Z",
        "closed_at": "2019-03-07T02:58:59Z",
        "merged_at": "2019-03-07T02:58:59Z",
        "body": "#5726 and #5659 added references to `FrozenError` and `Integer`, which were added to Ruby in 2.5 and 2.4, and will cause test failures for older rubies. This updates the tests so that they are compatible. ",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2019-03-04T18:37:00Z",
        "closed_at": "2019-04-08T21:05:26Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 604,
        "deletions": 210,
        "changed_files": 75,
        "created_at": "2019-03-04T18:20:42Z",
        "closed_at": "2019-03-04T21:24:44Z",
        "merged_at": "2019-03-04T21:24:44Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2019-03-03T19:56:21Z",
        "closed_at": "2019-03-08T17:38:30Z",
        "merged_at": "2019-03-08T17:38:29Z",
        "body": "Recently dependency to error_prone_annotations was added to the code,\r\nbut only Maven build tool chain was updated.\r\n\r\nCloses #5795.",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 12,
        "changed_files": 4,
        "created_at": "2019-03-03T17:18:25Z",
        "closed_at": "2019-03-08T22:35:22Z",
        "merged_at": "2019-03-08T22:35:22Z",
        "body": "this commit fixes #5809 \r\n\r\nRemoves repeated calls to the size calculator inside CalculatePackedDataSize. This improves performance for large vectors of primitives. This should benefit the repeated fields.",
        "comments": 13
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-03-03T00:55:15Z",
        "closed_at": "2019-03-04T22:00:41Z",
        "merged_at": "2019-03-04T22:00:41Z",
        "body": "You can check following commits:\r\nhttps://github.com/protocolbuffers/protobuf/commit/769b693564aaf8625905e5488e425d27ea123949#diff-5f83a7f49398fa05465b00c6ec8e7477\r\nhttps://github.com/protocolbuffers/protobuf/commit/13fd045dbb2b4dacea32be162a41d5a4b0d1802f#diff-5f83a7f49398fa05465b00c6ec8e7477\r\nFirst of them changed cerr to cout in PrintHelpText.\r\nSecond added another output to cerr. I'm changing this to cout also.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2019-03-01T23:28:16Z",
        "closed_at": "2019-03-04T22:16:30Z",
        "merged_at": "2019-03-04T22:16:30Z",
        "body": "This will enable [kythe](https://github.com/kythe/kythe) to associate the generated extension id in C++ with the definition in the proto file.\r\n\r\nNote that this annotation is already added for generated java code:\r\nhttps://github.com/justbuchanan/protobuf/blob/8c3d0f4806f9e8ca7c2046ff0066dc737f70d4a8/src/google/protobuf/compiler/java/java_extension.cc#L145",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2547,
        "deletions": 6,
        "changed_files": 11,
        "created_at": "2019-03-01T16:31:40Z",
        "closed_at": "2019-03-13T15:26:59Z",
        "merged_at": "2019-03-13T15:26:58Z",
        "body": "For simplicity - and consistency with the conformance tests - I've put the benchmarking code in the same area of source control as the main Google.Protobuf code.\r\n\r\nI'm sure I'll need to edit Makefile.am to list files etc before we merge, but I wanted to get everything else approved first.",
        "comments": 23
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-03-01T14:31:39Z",
        "closed_at": "2019-05-23T22:29:46Z",
        "merged_at": null,
        "body": "While the suggested change in behavior would have been nice,\r\nit has gone un-addressed for 11 years. At this point in time,\r\nswitching the encoding to base64 is almost certainly not going\r\nto happen without breaking many users who already had to implement\r\ntheir own C string parser.\r\n\r\nRather than keeping the TODO, just delete it since it does appear\r\nin the documentation of the generated proto for most languages.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 139,
        "deletions": 55,
        "changed_files": 11,
        "created_at": "2019-02-28T21:27:25Z",
        "closed_at": "2019-03-02T18:38:11Z",
        "merged_at": "2019-03-02T18:38:11Z",
        "body": "Reverts #5791, to restore #5735 with the additional change of adding newly added files to `src/Makefile.am'",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 35,
        "deletions": 18,
        "changed_files": 16,
        "created_at": "2019-02-28T18:21:31Z",
        "closed_at": "2019-02-28T20:55:15Z",
        "merged_at": "2019-02-28T20:55:15Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-02-27T00:37:13Z",
        "closed_at": "2019-03-04T18:03:57Z",
        "merged_at": "2019-03-04T18:03:56Z",
        "body": "Replaced shortn URL with intended URL.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 27,
        "deletions": 24,
        "changed_files": 3,
        "created_at": "2019-02-26T18:08:58Z",
        "closed_at": "2019-02-26T19:27:22Z",
        "merged_at": "2019-02-26T19:27:22Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 6,
        "changed_files": 3,
        "created_at": "2019-02-26T00:09:15Z",
        "closed_at": "2019-02-26T20:52:07Z",
        "merged_at": "2019-02-26T20:52:06Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 37,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-02-25T23:56:45Z",
        "closed_at": "2019-02-26T17:25:38Z",
        "merged_at": "2019-02-26T17:25:38Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2019-02-25T22:08:56Z",
        "closed_at": "2019-02-25T23:14:00Z",
        "merged_at": "2019-02-25T23:14:00Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 16,
        "changed_files": 1,
        "created_at": "2019-02-25T06:50:07Z",
        "closed_at": "2019-04-03T17:51:34Z",
        "merged_at": "2019-04-03T17:51:34Z",
        "body": "Screenshot of one of the warnings while compiling.\r\n<img width=\"716\" alt=\"screen shot 2019-02-25 at 12 10 11 pm\" src=\"https://user-images.githubusercontent.com/17698714/53319095-8a4eac00-38f7-11e9-9faf-9483daa618fc.png\">\r\n",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2019-02-25T04:43:43Z",
        "closed_at": "2019-02-26T00:06:41Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-02-24T19:00:52Z",
        "closed_at": "2019-02-27T20:02:05Z",
        "merged_at": "2019-02-27T20:02:05Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-02-22T22:22:25Z",
        "closed_at": "2019-03-21T17:30:38Z",
        "merged_at": "2019-03-21T17:30:38Z",
        "body": "This should fix #5717 and ensure that this header gets installed\r\nproperly on Windows.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 70,
        "deletions": 44,
        "changed_files": 15,
        "created_at": "2019-02-22T19:37:21Z",
        "closed_at": "2019-02-22T22:53:16Z",
        "merged_at": "2019-02-22T22:53:16Z",
        "body": "Also cherry-picked #5750 ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5783,
        "deletions": 6057,
        "changed_files": 147,
        "created_at": "2019-02-22T10:15:39Z",
        "closed_at": "2019-02-27T06:11:09Z",
        "merged_at": "2019-02-27T06:11:09Z",
        "body": "Waiting for #5762 get merged",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 252,
        "deletions": 252,
        "changed_files": 22,
        "created_at": "2019-02-22T05:51:34Z",
        "closed_at": "2019-02-25T01:09:50Z",
        "merged_at": "2019-02-25T01:09:50Z",
        "body": "#5758 caused tests failure because it changed golden file and some generated files.\r\n\r\nThis PR fixes the bug by run `./generate_descriptor_proto.sh` and reverted`src/google/protobuf/testdata/golden_message_maps`",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 984,
        "deletions": 984,
        "changed_files": 141,
        "created_at": "2019-02-21T01:56:04Z",
        "closed_at": "2019-02-21T03:28:51Z",
        "merged_at": "2019-02-21T03:28:51Z",
        "body": "Signed-off-by: Xiang Dai <764524258@qq.com>",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-02-20T15:34:42Z",
        "closed_at": "2019-02-22T04:49:26Z",
        "merged_at": "2019-02-22T04:49:26Z",
        "body": "Currently, downstream libraries such as RProtoBuf fail because\r\n`-std=c++11` is required via `configure.ac`, but RProtobuf has no way\r\nof knowing this by consulting `pkg-config --cflags protobuf`.\r\n\r\nCf #5725 ",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 92,
        "deletions": 3,
        "changed_files": 5,
        "created_at": "2019-02-20T07:27:06Z",
        "closed_at": "2019-02-28T04:26:15Z",
        "merged_at": "2019-02-28T04:26:14Z",
        "body": "JSON encoding in Ruby can segfault in cases such as:\r\nhttps://github.com/googleapis/google-cloud-ruby/issues/2876 when deeply nested messages are given. For example, the added test `test_deep_json` will crash with a segmentation fault.\r\n\r\nThis change adds an extra check to raise an error instead of crashing.\r\n\r\ncc\\ @quartzmo",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 97,
        "deletions": 3,
        "changed_files": 4,
        "created_at": "2019-02-19T23:43:19Z",
        "closed_at": "2019-03-26T23:48:25Z",
        "merged_at": "2019-03-26T23:48:25Z",
        "body": "Resolves #3121 by adding additional setters for fields of type `Google::Protobuf::Timestamp` and `Google::Protobuf::Duration`.\r\n\r\nThis allows a message with a `Timestamp` field to be set via:\r\n```ruby\r\nmy_message.timestamp = Time.at(1)\r\nmy_message.timestamp\r\n# => <Google::Protobuf::Timestamp: seconds: 1, nanos: 0>\r\n```\r\n\r\nSimilarly, for `Duration` fields:\r\n```ruby\r\nMyMessage.new(duration: 1.1)\r\n# => MyMessage: duration: <Google::Protobuf::Duration: seconds: 1, nanos: 100000000>>\r\n```",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 46,
        "deletions": 17,
        "changed_files": 1,
        "created_at": "2019-02-19T21:58:09Z",
        "closed_at": "2019-02-20T19:25:40Z",
        "merged_at": "2019-02-20T19:25:40Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 41,
        "deletions": 18,
        "changed_files": 15,
        "created_at": "2019-02-19T20:58:10Z",
        "closed_at": "2019-02-19T23:54:46Z",
        "merged_at": "2019-02-19T23:54:46Z",
        "body": "",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-02-17T00:02:42Z",
        "closed_at": "2019-02-21T03:24:38Z",
        "merged_at": "2019-02-21T03:24:38Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2019-02-16T06:37:14Z",
        "closed_at": "2019-03-06T17:47:08Z",
        "merged_at": "2019-03-06T17:47:08Z",
        "body": "If you don't mind, i propose to improve the implementation of `default_value_objectwriter` with smart pointer for `string_values_`.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 289,
        "deletions": 2,
        "changed_files": 6,
        "created_at": "2019-02-16T02:55:18Z",
        "closed_at": "2019-03-27T16:44:44Z",
        "merged_at": "2019-03-27T16:44:44Z",
        "body": "Resolves #5656 by adding additional helper methods for fields of wrapper types (defined `wrappers.proto`). \r\n\r\nFor example: https://github.com/protocolbuffers/protobuf/blob/3bf05b88eaf938526f7daee85ab6fb1efb0e809c/src/google/protobuf/wrappers.proto#L56-L59)\r\n\r\nA message like this:\r\n```proto\r\nmessage Wrapper {\r\n  google.protobuf.DoubleValue double = 1;\r\n}\r\n```\r\n\r\nWill have getters and setters defined as follows:\r\n```ruby\r\nmsg = Wrapper.new\r\nmsg.double_as_value = 2.2\r\nmsg.double\r\n# => <Google::Protobuf::DoubleValue: value: 2.2>\r\nmsg.double_as_value\r\n# => 2.2\r\n```\r\n\r\nThis avoids having to use the wrapper types directly, such as:\r\n```ruby\r\nmsg = Wrapper.new\r\nmsg.double = Google::Protobuf::DoubleValue.new value: 2.2\r\nmsg.double.value\r\n# => 2.2\r\n```\r\n\r\nThis change has a bit of overlap with #5670 and it would be best to handle that one first.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 240,
        "deletions": 13,
        "changed_files": 4,
        "created_at": "2019-02-16T00:20:04Z",
        "closed_at": "2019-02-19T18:46:09Z",
        "merged_at": "2019-02-19T18:46:09Z",
        "body": "\u2026r (#5723)\r\n\r\n* Exclude repeated and map fields from normalization\r\n\r\n* Remove erroneous comments\r\n\r\n* Remove unnecessary check for map type\r\n\r\n* Add support for repeated/map fields, add tests\r\n\r\n* Fix wrapper message in repeated/map fields in array constructor\r\n\r\n* Address PR comments\r\n\r\n* Removed unused code\r\n\r\n* Update docs",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 32,
        "deletions": 6,
        "changed_files": 3,
        "created_at": "2019-02-15T22:10:55Z",
        "closed_at": "2019-02-28T02:05:07Z",
        "merged_at": "2019-02-28T02:05:07Z",
        "body": "Allow the `push` method on repeated fields to accept multiple values and resolve #4278.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 131,
        "deletions": 53,
        "changed_files": 10,
        "created_at": "2019-02-15T21:27:04Z",
        "closed_at": "2019-02-28T04:27:00Z",
        "merged_at": "2019-02-28T04:27:00Z",
        "body": "Resolves #5584 by ensure that the Ruby module name is always generated in the following format:\r\n\r\n```ruby\r\nmodule A\r\n  module B\r\n    # ....\r\n```\r\n\r\ninstead of:\r\n\r\n```ruby\r\nmodule A::B\r\n```\r\n\r\nI also added some tests for the `ruby_package` option.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 23,
        "changed_files": 1,
        "created_at": "2019-02-15T20:22:42Z",
        "closed_at": "2019-02-21T04:00:54Z",
        "merged_at": "2019-02-21T04:00:54Z",
        "body": "First, we don't need it. Second, it avoids a bug in Proguard's `field/removal/writeonly` optimization that resulted in a crash when processing the JavaLite runtime (see https://stackoverflow.com/questions/26942430/proguard-optimization-settings-enabling-class-merging-casts-and-field-in-mod?rq=1)",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 23,
        "changed_files": 3,
        "created_at": "2019-02-15T18:04:24Z",
        "closed_at": "2019-02-15T19:11:30Z",
        "merged_at": "2019-02-15T19:11:30Z",
        "body": "Reverts protocolbuffers/protobuf#5661\r\nThis change doesn't work internally. Please send this change to internal google repo first.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 22,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2019-02-14T18:46:40Z",
        "closed_at": "2019-02-24T17:53:25Z",
        "merged_at": "2019-02-24T17:53:24Z",
        "body": "This change adds the `eql?` method to message types, improves hash key handling, and resolves #4455.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 34,
        "deletions": 8,
        "changed_files": 2,
        "created_at": "2019-02-14T04:36:23Z",
        "closed_at": "2019-02-14T16:57:13Z",
        "merged_at": "2019-02-14T16:57:13Z",
        "body": "Fix #5714 ",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 57,
        "deletions": 0,
        "changed_files": 4,
        "created_at": "2019-02-14T01:46:20Z",
        "closed_at": "2019-03-02T18:37:38Z",
        "merged_at": "2019-03-02T18:37:38Z",
        "body": "An attempt to implement `.freeze` support for protobuf message types and resolve #907.",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 240,
        "deletions": 13,
        "changed_files": 4,
        "created_at": "2019-02-13T18:56:05Z",
        "closed_at": "2019-02-16T00:16:43Z",
        "merged_at": "2019-02-16T00:16:43Z",
        "body": "This PR:\r\n- Exclude repeated and map fields over wrapper types from trying to convert a primitive value to a wrapper type in the protobuf message constructor\r\n- Adds tests\r\n\r\ncc @TeBoring ",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 12,
        "changed_files": 1,
        "created_at": "2019-02-13T09:52:36Z",
        "closed_at": "2022-05-16T18:13:50Z",
        "merged_at": null,
        "body": "Fixes protocolbuffers/protobuf-javascript#56\r\n\r\nAdd `true` and the newer keywords `await`, `let`, and `yield` to the list of JavaScript keywords.",
        "comments": 12
    },
    {
        "merged": true,
        "additions": 76,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2019-02-12T22:50:49Z",
        "closed_at": "2019-07-25T18:17:53Z",
        "merged_at": "2019-07-25T18:17:52Z",
        "body": "This change simplifies working with `Google::Protobuf::Struct` and `Google::Protobuf::Value` so that code like this:\r\n\r\n```ruby\r\nGoogle::Protobuf::Struct.new(fields: {\r\n  'a' => Google::Protobuf::Value.new({number_value: 2.0})\r\n})\r\n```\r\ncan be written as:\r\n\r\n```ruby\r\nGoogle::Protobuf::Struct.new(fields: {\r\n   'a' => {number_value: 2.0}\r\n})\r\n```\r\n\r\nThis would simplify struct usage in many practical cases, such as: https://github.com/googleapis/google-cloud-ruby/issues/2839\r\n\r\nI believe this also resolves #3120.",
        "comments": 17
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-02-12T19:21:24Z",
        "closed_at": "2019-02-12T22:13:33Z",
        "merged_at": "2019-02-12T22:13:32Z",
        "body": "This should fix #5696.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2019-02-12T15:43:52Z",
        "closed_at": "2019-02-26T23:09:21Z",
        "merged_at": "2019-02-26T23:09:21Z",
        "body": "We need to cast to a constant charpointer here.\r\n\r\nThis has already been done in other files of the module, so I analogously applied the existing fix.\r\n\r\nThe error occured to me when building tensorflow against protobuf:\r\n\r\n```\r\nexternal/protobuf_archive/python/google/protobuf/pyext/message_factory.cc:69:45: error: invalid conversion from 'const char*' to 'char*' [-fpermissive]\r\n        ((*(charpp) = PyUnicode_AsUTF8AndSize(ob, (sizep))) == NULL? -1: 0): \\\r\n                      ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~\r\n```",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2019-02-12T01:23:55Z",
        "closed_at": "2019-02-12T17:50:58Z",
        "merged_at": "2019-02-12T17:50:57Z",
        "body": "Resolves #3998 by adding a `to_s` method that behaves the same as `inspect`.\r\n\r\nOriginally requested here: https://github.com/googleapis/google-cloud-ruby/issues/1868",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 67,
        "deletions": 4,
        "changed_files": 9,
        "created_at": "2019-02-11T23:36:33Z",
        "closed_at": "2019-03-20T16:50:05Z",
        "merged_at": "2019-03-20T16:50:05Z",
        "body": "Protoc can produce invalid code when a reserved name is used in extensions. For example this field, named `package`, results in code that will not compile: https://github.com/googleapis/api-common-protos/blob/3f5a16b2c94a60a1aeb5424d490e62e3a69485ba/google/api/client.proto#L89\r\n\r\nThis change checks for reserved words and adds a suffix `_` to the name if there is a match.\r\n\r\nNote that this PR does not include all reserved names yet and I used `_` for no particular reason. I can add them or change the naming pattern, but wanted to get feedback on the approach first.\r\n\r\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 91,
        "deletions": 10,
        "changed_files": 1,
        "created_at": "2019-02-09T05:55:21Z",
        "closed_at": "2020-03-10T08:14:13Z",
        "merged_at": null,
        "body": "As explained in this issue: protocolbuffers/protobuf-javascript#62 javascript imports are sometimes generated incorrectly and also inefficient (i.e. same directory imports could be way shorter than they currently are).\r\n\r\nThis PR aims to improve javascript imports. \r\n\r\n(I'm sorry if there is more efficient ways to do this, this was my very first time to write c++ code)\r\n\r\nRemaining question:\r\n* this PR works under the assumption, that if the first part of an import compared to the source file does not match it has to be a third-party module. This could be changed to:\r\n   * Only assume this for `google/protobuf` as currently and for other cases return `../../ .....` like the current compiler is doing it.\r\n* The way I currently implemented it has an issue with the following imports as they would be seen as third party npm modules but there are none for these types:\r\n    * `import \"google/api/annotations.proto\";`\r\n    * `import \"google/type/date.proto\";`\r\n\r\nMaybe this PR can start a discussion on how this can be improved further. I also couldn't find where to add test code for this on the repo so please let me know where I could put tests \ud83d\ude47 . For now I tested it with one of my own projects where I need to compile to nodejs.",
        "comments": 13
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-02-08T19:25:50Z",
        "closed_at": "2019-02-12T02:08:09Z",
        "merged_at": "2019-02-12T02:08:09Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2019-02-08T02:25:15Z",
        "closed_at": "2019-02-12T02:35:30Z",
        "merged_at": "2019-02-12T02:35:30Z",
        "body": "This simple performance optimization allows to skip the overhead of reflection (in the `is()` method [here](https://github.com/protocolbuffers/protobuf/blob/de3be6c225cdb92548648cb899391ef5368051fa/src/google/protobuf/compiler/java/java_message.cc#L1449)) when the message has been already unpacked once.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-02-07T17:59:35Z",
        "closed_at": "2019-02-20T18:00:59Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-02-06T21:04:12Z",
        "closed_at": "2019-02-19T18:48:18Z",
        "merged_at": null,
        "body": "We need to revert the following changes: \r\nhttps://github.com/protocolbuffers/protobuf/commit/94a1819c7ae8509ab6ad37d867d3ea60a5809aaa#diff-99c613b6f4f530783572bbbffc822412\r\n\r\n  [Generator::GenerateClassFieldToObject](https://github.com/protocolbuffers/protobuf/blob/94a1819c7ae8509ab6ad37d867d3ea60a5809aaa/src/google/protobuf/compiler/js/js_generator.cc#L2387) generate a code which use _f_ variable in cases when class contains a complex type fields.\r\n\r\nFor example for the following .proto message definition:\r\n\r\n`message MyMessage {\r\n\tgoogle.protobuf.Timestamp timestamp = 1;\r\n}` \r\n\r\nit will produce following output: \r\n\r\n`proto.MyMessage.toObject = function(includeInstance, msg) {\r\n  var obj = {\r\n    timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)\r\n  };\r\n};`\r\n\r\nand here we get `ReferenceError: f is not defined`",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2019-02-06T19:47:45Z",
        "closed_at": "2019-02-14T19:34:16Z",
        "merged_at": "2019-02-14T19:34:16Z",
        "body": "Changes MessageType != null checks in MessageExtensions.IsInitialized to FieldType == Message || Group. This will close #5687",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 167,
        "deletions": 450,
        "changed_files": 26,
        "created_at": "2019-02-06T19:41:09Z",
        "closed_at": "2019-02-11T23:12:41Z",
        "merged_at": "2019-02-11T23:12:41Z",
        "body": "Related to #5676. This reverts the generated unknown field handling to it's original form from before #5183 so now the compiler will add a switch case to generated group messages for the end tag.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 22,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2019-02-05T23:27:43Z",
        "closed_at": "2019-02-06T01:28:05Z",
        "merged_at": "2019-02-06T01:28:05Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 136,
        "deletions": 5,
        "changed_files": 4,
        "created_at": "2019-02-02T02:42:44Z",
        "closed_at": "2019-03-02T18:36:29Z",
        "merged_at": "2019-03-02T18:36:29Z",
        "body": "This is an example of a potential solution to #4598. It causes the generator to create an extra method for types with enum fields in the following form:\r\n\r\n```ruby\r\nclass MyMessage\r\n  def type_const\r\n    Google::Example::Resource::Type.const_get(type)\r\n  end\r\nend\r\n```\r\n\r\n`type` is the field name of an enum type in the `MyMessage` proto message in this example.\r\n\r\nI'm not sure if there's a better way to add something like this via the DSL (I couldn't find any docs).",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 78,
        "deletions": 35,
        "changed_files": 9,
        "created_at": "2019-02-01T22:12:57Z",
        "closed_at": "2019-02-02T02:43:56Z",
        "merged_at": "2019-02-02T02:43:56Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 23,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2019-02-01T01:40:17Z",
        "closed_at": "2019-02-04T17:57:34Z",
        "merged_at": "2019-02-04T17:57:34Z",
        "body": "It already exists for wire and json formats",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 82,
        "deletions": 6,
        "changed_files": 12,
        "created_at": "2019-01-31T23:57:51Z",
        "closed_at": "2019-02-01T18:09:34Z",
        "merged_at": "2019-02-01T18:09:34Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 225,
        "deletions": 34,
        "changed_files": 9,
        "created_at": "2019-01-31T22:54:53Z",
        "closed_at": "2019-02-06T15:57:14Z",
        "merged_at": "2019-02-06T15:57:14Z",
        "body": "This change adds more details (field name and type) to the error messages in Ruby when an object is created with invalid arguments (#5655). I think a stringified version of the value might also be helpful, but I didn't see an obvious way to do that.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2019-01-31T18:38:57Z",
        "closed_at": "2019-02-01T19:27:21Z",
        "merged_at": "2019-02-01T19:27:21Z",
        "body": "GeneratedMessageV3#setUnknownFieldsProto3 was trying to delegate to\r\nsetUnknownFields but was inadvertently resulting in infinite recursion.\r\nThis commit makes setUnknownFields and setUnknownFieldsProto3 delegate\r\nto a common private method to fix the problem and avoid confusion.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 14,
        "changed_files": 13,
        "created_at": "2019-01-30T22:05:50Z",
        "closed_at": "2019-01-31T05:08:05Z",
        "merged_at": "2019-01-31T05:08:05Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2019-01-30T16:48:46Z",
        "closed_at": "2019-01-31T19:06:48Z",
        "merged_at": "2019-01-31T19:06:48Z",
        "body": "\u2026comment-458596374\r\n\r\nThis PR fixes a bunch of \"unused variable warnings\" that were emitted by the compiler (clang) when another project that included protobuf headers had a stricter compiler setting (e.g., `-Werror`) than the compiler setting used for protobuf itself.\r\n\r\nThis fix ensures that projects that depend on protobuf AND have a strict compiler setting build cleanly :)",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-01-29T15:04:56Z",
        "closed_at": "2019-02-04T23:09:57Z",
        "merged_at": null,
        "body": "Add missing if for MSVC",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-01-29T03:48:48Z",
        "closed_at": "2019-01-31T22:35:59Z",
        "merged_at": "2019-01-31T22:35:59Z",
        "body": "libprotobuf being targeted before libprotoc was causing Visual Studio to fail in linking protoc.\r\n\r\nThis fix addresses the issue in [#5384](https://github.com/protocolbuffers/protobuf/issues/5384).",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 15,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2019-01-28T19:31:54Z",
        "closed_at": "2019-01-28T20:48:55Z",
        "merged_at": "2019-01-28T20:48:55Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 1,
        "changed_files": 4,
        "created_at": "2019-01-28T08:58:16Z",
        "closed_at": "2019-01-28T23:16:00Z",
        "merged_at": "2019-01-28T23:16:00Z",
        "body": "json_decode automatically convert numeric string to integer, so that\r\nwe need to convert it back. However, this will suceed to parse invalid\r\njson data with string field set as integer even though it should have failed.\r\nBecause, the failure case is less often than the succeeding case, we decided\r\nto make this change. Users should make sure their data don't use integer for\r\nstring fields by themselves.\r\n\r\nFix #4765 ",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 15,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2019-01-28T08:19:16Z",
        "closed_at": "2019-01-28T19:25:53Z",
        "merged_at": "2019-01-28T19:25:53Z",
        "body": "Fix #4389",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 67,
        "deletions": 5,
        "changed_files": 5,
        "created_at": "2019-01-27T19:57:07Z",
        "closed_at": "2019-01-28T19:29:47Z",
        "merged_at": "2019-01-28T19:29:47Z",
        "body": "#5615 had been merged to 3.7.x",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2019-01-26T00:20:24Z",
        "closed_at": "2019-01-26T05:05:22Z",
        "merged_at": "2019-01-26T05:05:22Z",
        "body": "Make the test fail if any command returns non-zero.\r\nUse -std=c++14 to -latomic would work.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 65,
        "deletions": 3,
        "changed_files": 4,
        "created_at": "2019-01-25T19:11:58Z",
        "closed_at": "2019-01-26T00:19:08Z",
        "merged_at": "2019-01-26T00:19:08Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 220,
        "deletions": 209,
        "changed_files": 21,
        "created_at": "2019-01-25T10:25:14Z",
        "closed_at": "2021-02-17T18:34:47Z",
        "merged_at": null,
        "body": "When I was creating PR for php part of this repo, test base looked a bit ancient to me. That's probably also because PHP 5.5 is supported. So I tried to clean it up a bit. Replace manually requiring files with PSR-4 autoloading for tests.",
        "comments": 12
    },
    {
        "merged": false,
        "additions": 45,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2019-01-25T03:04:47Z",
        "closed_at": "2021-11-04T14:21:12Z",
        "merged_at": null,
        "body": "Add tests to ensure that AllowOversizeProtos also handles deeper levels of recursion.\r\n\r\nEDIT: Was originally intending to try to fix a problem where `SetAllowOversizeProtos` was supposed to set the maximum Protobuf message size _and_ recursion depth arbitrarily high, but under most non-trivial circumstances the recursion depth setting didn't actually seem to be affected. This happened to be fixed as part of 3.7.0 and I erroneously thought my changes fixed the problem.\r\n\r\nIncluded a test case which would have failed without the accompanying code change that intentionally creates a deeper message that the C++ parser implementation for Python would normally allow.",
        "comments": 13
    },
    {
        "merged": false,
        "additions": 100,
        "deletions": 37,
        "changed_files": 10,
        "created_at": "2019-01-24T23:47:47Z",
        "closed_at": "2021-08-10T10:36:29Z",
        "merged_at": null,
        "body": "You can quickly run the test here https://3v4l.org/TLTnK\r\n\r\nThe issue was that method `GPBUtil::checkUint32` was converting high values to negative ones. Eg. `4200010096` was being converted to `-94957199`. Also it was not handling overflow properly.\r\n\r\nThis patch respect unsigned behaviour so on overflow the number resets to 0 (can be seen in test).",
        "comments": 16
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-01-24T21:41:11Z",
        "closed_at": "2019-01-25T15:07:08Z",
        "merged_at": "2019-01-25T15:07:08Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 99,
        "deletions": 77,
        "changed_files": 5,
        "created_at": "2019-01-24T21:24:49Z",
        "closed_at": "2019-01-25T03:10:02Z",
        "merged_at": "2019-01-25T03:10:02Z",
        "body": "Previously, internalAddGeneratedFile has to depend on old non-nested name for sub-messages.\r\nThis creates a hard dependency on old generated code for compatibility usage.\r\nIf user's code has custome error handler, the deprecation warning in the old generated code\r\nwill also be thrown (even though users haven't explicitly depended on the old message name).\r\n\r\nTo fix this problem, this change added an additional flag in the generated code to tell run\r\ntime that it's safe to use new message name. In this way, internalAddGeneratedFile can safely\r\ndepend on new name and don't trigger unnecessary deprecation warning.\r\n\r\nAfter this change is released, users need to use the new protoc to re-generate code.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2019-01-24T20:15:16Z",
        "closed_at": "2019-01-25T18:15:37Z",
        "merged_at": "2019-01-25T18:15:37Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 63,
        "deletions": 49,
        "changed_files": 28,
        "created_at": "2019-01-24T18:23:36Z",
        "closed_at": "2019-01-24T20:11:58Z",
        "merged_at": "2019-01-24T20:11:58Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-01-24T09:14:26Z",
        "closed_at": "2019-01-31T22:39:08Z",
        "merged_at": "2019-01-31T22:39:08Z",
        "body": "Fix below issue:\r\nsrc/Makefile.am:210: warning: whitespace following trailing backslash\r\n\r\nSigned-off-by: Xiang Dai <764524258@qq.com>",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 17407,
        "deletions": 8076,
        "changed_files": 365,
        "created_at": "2019-01-23T23:49:06Z",
        "closed_at": "2019-01-24T18:02:49Z",
        "merged_at": null,
        "body": "",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 39,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2019-01-23T23:01:48Z",
        "closed_at": "2019-02-01T00:58:59Z",
        "merged_at": "2019-02-01T00:58:59Z",
        "body": "This patch is similar to the one for Java #1929\r\nproto3 should support unknown enum values. WireFormat already writes and parse them and it's covered with tests. TextFormat however writes them successfully but was unable to parse.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-01-23T22:11:51Z",
        "closed_at": "2019-01-24T18:06:18Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 17407,
        "deletions": 8076,
        "changed_files": 365,
        "created_at": "2019-01-23T20:54:45Z",
        "closed_at": "2019-01-24T01:31:18Z",
        "merged_at": "2019-01-24T01:31:18Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-01-23T20:42:51Z",
        "closed_at": "2019-01-23T21:57:31Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 19,
        "deletions": 8,
        "changed_files": 2,
        "created_at": "2019-01-23T01:02:57Z",
        "closed_at": "2019-01-23T18:55:37Z",
        "merged_at": "2019-01-23T18:55:37Z",
        "body": "Install libatomic in protoc Docker file.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 181,
        "deletions": 25,
        "changed_files": 6,
        "created_at": "2019-01-22T23:32:15Z",
        "closed_at": "2019-01-23T20:44:21Z",
        "merged_at": "2019-01-23T20:44:20Z",
        "body": "Fix #5091 ",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 61,
        "deletions": 0,
        "changed_files": 5,
        "created_at": "2019-01-22T21:23:10Z",
        "closed_at": "2019-01-23T18:02:52Z",
        "merged_at": "2019-01-23T18:02:52Z",
        "body": "Some tests are leaking memory, so we may not be able enable it by default yet.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-01-22T00:01:47Z",
        "closed_at": "2019-02-06T16:08:31Z",
        "merged_at": "2019-02-06T16:08:31Z",
        "body": "I tried finding an active repo on github with no success.  The only ProtoSharp I found wasn't related to PB at all.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 15,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2019-01-21T22:19:42Z",
        "closed_at": "2019-01-31T21:00:24Z",
        "merged_at": "2019-01-31T21:00:23Z",
        "body": "This PR fixes an issue with `json_format.ParseDict` in Python, in which certain Protobuf definitions that contain extensions fail to be parsed. See [`protobuf-python-bug`](https://github.com/psobot/protobuf-python-bug) for a direct example of the bug outside of the `protobuf` codebase itself, but the gist of it is that any attempt to use `ParseDict` to deserialize a dict representation of a message containing a non-repeating extension field of scalar type currently fails. (I believe that's the simplest and smallest reproducible case of this bug that I could find, but my understanding of the problem could be incomplete.)",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 17,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-01-19T22:25:59Z",
        "closed_at": "2019-04-08T21:09:06Z",
        "merged_at": null,
        "body": "Default constructor and private attributes prevented this previously.\r\n\r\nThis is to allow full configuration of public attributes from an initializer-list within a class declaration.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 318,
        "deletions": 878,
        "changed_files": 6,
        "created_at": "2019-01-19T06:07:13Z",
        "closed_at": "2019-01-22T23:35:13Z",
        "merged_at": "2019-01-22T23:35:13Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 9043,
        "deletions": 14877,
        "changed_files": 10,
        "created_at": "2019-01-19T01:09:02Z",
        "closed_at": "2019-03-06T20:04:18Z",
        "merged_at": "2019-03-06T20:04:18Z",
        "body": "",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 43,
        "deletions": 0,
        "changed_files": 4,
        "created_at": "2019-01-18T05:08:44Z",
        "closed_at": "2019-01-22T22:02:45Z",
        "merged_at": "2019-01-22T22:02:45Z",
        "body": "Fix #5581 ",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2019-01-17T19:49:15Z",
        "closed_at": "2019-01-18T01:13:32Z",
        "merged_at": "2019-01-18T01:13:32Z",
        "body": "The extra space causes an improper GoDoc to be generated after imported to the golang/protobuf repo at https://github.com/golang/protobuf/ due to Examples 3 and 4 having an extra leading space causing  them to appear as part of Example 2 rather than distinct snippets\r\n\r\nhttps://i.imgur.com/FSwehb1.png\r\nhttps://godoc.org/github.com/golang/protobuf/ptypes/any#Any",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2019-01-17T19:23:07Z",
        "closed_at": "2019-01-29T01:20:28Z",
        "merged_at": "2019-01-29T01:20:28Z",
        "body": "Fix for the #5565 ",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1216,
        "deletions": 373,
        "changed_files": 6,
        "created_at": "2019-01-17T05:39:01Z",
        "closed_at": "2019-01-17T18:24:42Z",
        "merged_at": "2019-01-17T18:24:42Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1424,
        "deletions": 492,
        "changed_files": 9,
        "created_at": "2019-01-17T04:01:24Z",
        "closed_at": "2019-01-17T18:18:43Z",
        "merged_at": "2019-01-17T18:18:43Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-01-17T03:47:31Z",
        "closed_at": "2019-01-18T23:57:43Z",
        "merged_at": "2019-01-18T23:57:43Z",
        "body": "pb3-gen-sol is a proto3 to solidity library generator that supports proto3 native types and uses field option for solidity native types. Both the message and generated code are more efficient than other solutions. It also includes a library to decode protobuf wireformat.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 79,
        "deletions": 79,
        "changed_files": 6,
        "created_at": "2019-01-17T01:47:23Z",
        "closed_at": "2019-01-18T23:05:57Z",
        "merged_at": "2019-01-18T23:05:57Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 62,
        "deletions": 2,
        "changed_files": 5,
        "created_at": "2019-01-16T23:36:08Z",
        "closed_at": "2019-02-26T23:31:30Z",
        "merged_at": "2019-02-26T23:31:30Z",
        "body": "Fixes #5513:\r\n 1. First example already throws an `InvalidProtocolBufferException` on master\r\n 2. Fixed with a length check in `CodedInputStream.ReadString()`\r\n 3. Throw an `InvalidProtocolBufferException` in `UnknownFieldSet.MergeFieldFrom(CodedInputStream)` rather than an `InvalidOperationException`",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-01-13T03:35:45Z",
        "closed_at": "2019-01-14T02:25:17Z",
        "merged_at": "2019-01-14T02:25:17Z",
        "body": "Variadic assignment in javascript where the right hand expression is an\r\nobject yields a single set assignment with the right most lefthand variable,\r\nwhile leaving the other left side expressions undefined.\r\n\r\nFor example:\r\nvar a,b = {}\r\n\r\nwill only initialize a to undefined. But will set b to the {} value.\r\n\r\n--\r\n\r\nFor this code since f is never used, it is a safe operation to remove\r\nit.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 22,
        "deletions": 27,
        "changed_files": 11,
        "created_at": "2019-01-12T01:13:34Z",
        "closed_at": "2021-10-13T00:18:28Z",
        "merged_at": null,
        "body": "",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2019-01-11T16:09:23Z",
        "closed_at": "2019-05-03T21:00:23Z",
        "merged_at": null,
        "body": "### In a nutshell\r\nMake the generated python work even when message names are python keyworks\r\n\r\n### Context\r\n- This PR complets #5281 \r\n- This PR helps fixing #4833\r\n----\r\n\r\n### Example of the issue\r\n\r\nSource with python-reserved keyword \"None\" used as message name...\r\n```proto\r\nsyntax = \"proto3\";\r\nmessage None {\r\n    string name = 1;\r\n}\r\n```\r\n\r\n...compiles into invalid python:\r\n```python\r\n# ...\r\nNone = _reflection.GeneratedProtocolMessageType('None', (_message.Message,), dict(\r\n  DESCRIPTOR = _NONE,\r\n  __module__ = 'test_pb2'\r\n  # @@protoc_insertion_point(class_scope:None)\r\n  ))\r\n_sym_db.RegisterMessage(None)\r\n```\r\n\r\n```bash\r\n  File \"test_pb2.py\", line 61\r\n    None = _reflection.GeneratedProtocolMessageType('None', (_message.Message,), dict(\r\nSyntaxError: cannot assign to None\r\n```\r\n\r\n### Proposal: Escape message name that are Python keywords\r\n\r\nLike in #5281 this PR proposes change the generator so it appends underscore _ character to reserved Python keywords as stated in [PEP8](https://www.python.org/dev/peps/pep-0008/)\r\n> If a function argument's name clashes with a reserved keyword, it is generally better to append a single trailing underscore rather than use an abbreviation or spelling corruption. Thus class_ is better than clss. (Perhaps better is to avoid such clashes by using a synonym.)\r\n\r\n### Result\r\nDiff of the generated files for the above example\r\n\r\n```bash\r\n--- test_pb2.py.before\r\n+++ test_pb2.py.after\r\n@@ -58,12 +59,12 @@ _NONE = _descriptor.Descriptor(\r\n DESCRIPTOR.message_types_by_name['None'] = _NONE\r\n _sym_db.RegisterFileDescriptor(DESCRIPTOR)\r\n\r\n-None = _reflection.GeneratedProtocolMessageType('None', (_message.Message,), dict(\r\n+None_ = _reflection.GeneratedProtocolMessageType('None_', (_message.Message,), dict(\r\n   DESCRIPTOR = _NONE,\r\n   __module__ = 'test_pb2'\r\n   # @@protoc_insertion_point(class_scope:None)\r\n   ))\r\n-_sym_db.RegisterMessage(None)\r\n+_sym_db.RegisterMessage(None_)\r\n\r\n\r\n # @@protoc_insertion_point(module_scope)\r\n```\r\n\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2019-01-10T14:40:03Z",
        "closed_at": "2019-01-10T18:14:22Z",
        "merged_at": "2019-01-10T18:14:22Z",
        "body": "Even though the comments were indented to appear to go with the jspb\r\ncase/field, protoc doesn't collect comments like that, so these \"hanging\"\r\ncomments actually \"attach\" to the next thing added to each.  Looking at\r\nhttps://github.com/protocolbuffers/protobuf/pull/5566 you see where\r\nthe generated code picked up the comment on the wrong field.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 220,
        "deletions": 57,
        "changed_files": 8,
        "created_at": "2019-01-10T00:38:57Z",
        "closed_at": "2019-01-11T19:40:53Z",
        "merged_at": "2019-01-11T19:40:53Z",
        "body": "",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2019-01-09T21:27:28Z",
        "closed_at": "2019-01-16T04:01:42Z",
        "merged_at": "2019-01-16T04:01:42Z",
        "body": "#4852\r\nCapitalize all prefix while printing out all nested messages.",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 24,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2019-01-09T06:28:05Z",
        "closed_at": "2019-01-09T18:22:41Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 945,
        "deletions": 584,
        "changed_files": 65,
        "created_at": "2019-01-07T22:38:46Z",
        "closed_at": "2019-01-08T23:06:31Z",
        "merged_at": "2019-01-08T23:06:31Z",
        "body": "",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 1723,
        "deletions": 15,
        "changed_files": 10,
        "created_at": "2019-01-07T21:48:44Z",
        "closed_at": "2019-01-08T13:22:13Z",
        "merged_at": "2019-01-08T13:22:13Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2019-01-04T21:08:29Z",
        "closed_at": "2019-02-22T19:19:39Z",
        "merged_at": "2019-02-22T19:19:39Z",
        "body": "That should be only on the CFlags. When using the compiler\r\nas the linker driver, one may want to also call pkg-config to get the\r\ncflags, but when invoking the linker, there should be no compiler flags.",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 9317,
        "deletions": 15751,
        "changed_files": 13,
        "created_at": "2019-01-04T20:04:58Z",
        "closed_at": "2019-03-06T18:20:19Z",
        "merged_at": "2019-03-06T18:20:19Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 8,
        "changed_files": 6,
        "created_at": "2019-01-04T19:48:07Z",
        "closed_at": "2019-01-08T03:44:55Z",
        "merged_at": "2019-01-08T03:44:55Z",
        "body": "",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-01-04T18:42:47Z",
        "closed_at": "2019-01-04T20:20:49Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-01-04T09:05:33Z",
        "closed_at": "2019-02-26T23:34:59Z",
        "merged_at": null,
        "body": "Added python version 3.7",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 4167,
        "deletions": 1651,
        "changed_files": 11,
        "created_at": "2019-01-04T00:58:18Z",
        "closed_at": "2019-01-08T18:53:35Z",
        "merged_at": "2019-01-08T18:53:35Z",
        "body": "This reverts commit be1716a6d0346de7a990b60f4afc9aebe2e06f36.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 128,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2019-01-03T22:14:50Z",
        "closed_at": "2019-01-08T22:11:33Z",
        "merged_at": "2019-01-08T22:11:33Z",
        "body": "",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 122,
        "deletions": 8,
        "changed_files": 14,
        "created_at": "2019-01-02T18:44:43Z",
        "closed_at": "2019-01-03T22:25:51Z",
        "merged_at": "2019-01-03T22:25:51Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 203,
        "deletions": 67,
        "changed_files": 11,
        "created_at": "2019-01-02T18:05:34Z",
        "closed_at": "2019-01-02T23:10:39Z",
        "merged_at": "2019-01-02T23:10:39Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2018-12-30T10:40:50Z",
        "closed_at": "2019-02-04T23:14:16Z",
        "merged_at": null,
        "body": "Cherry-pick #5522 back to 3.6.x branch with conflicts resolved.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2018-12-30T09:47:59Z",
        "closed_at": "2019-04-08T21:09:28Z",
        "merged_at": null,
        "body": "Resolve #5521 ",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2018-12-29T00:42:52Z",
        "closed_at": "2019-01-02T17:51:32Z",
        "merged_at": "2019-01-02T17:51:32Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-12-27T21:59:55Z",
        "closed_at": "2019-01-02T17:48:34Z",
        "merged_at": "2019-01-02T17:48:34Z",
        "body": "The -Wno-writable-strings warning flag is Clang-specific. GCC's\r\nequivalent is -Wno-write-strings, which Clang also supports as a\r\nsynonym. So, -Wno-write strings is more compatible and there is no need\r\nto specify both.\r\n\r\nhttps://clang.llvm.org/docs/DiagnosticsReference.html#wwrite-strings\r\nhttps://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html\r\n\r\nCompiled with both GCC 8.2 and Clang trunk.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1650,
        "deletions": 4063,
        "changed_files": 8,
        "created_at": "2018-12-26T18:59:33Z",
        "closed_at": "2018-12-26T20:26:25Z",
        "merged_at": "2018-12-26T20:26:25Z",
        "body": "Reverts protocolbuffers/protobuf#5373\r\nBreaks continuous test.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 274,
        "deletions": 61,
        "changed_files": 9,
        "created_at": "2018-12-26T09:47:50Z",
        "closed_at": "2022-05-16T18:13:59Z",
        "merged_at": null,
        "body": "Fixes protocolbuffers/protobuf-javascript#92\r\n\r\nAfter optimization the bundle size went from ~156KB to ~47KB (uncompressed)",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 2966,
        "deletions": 2608,
        "changed_files": 117,
        "created_at": "2018-12-20T22:23:22Z",
        "closed_at": "2018-12-21T00:27:27Z",
        "merged_at": "2018-12-21T00:27:27Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 19,
        "deletions": 15,
        "changed_files": 1,
        "created_at": "2018-12-20T18:44:46Z",
        "closed_at": "2019-01-31T22:41:47Z",
        "merged_at": null,
        "body": "If the C++ protocol buffer code is loaded into memory multiple times as a shared library (which happens quite often when multiple different Python modules use the \"fast cpp\" protobuf implementation), arenastring.h's IsDefault check isn't quite right, because the current default_value can be different than the default_value the protocol buffer was initialized with.  This pull request adds a #define named \"SHARED_LIBRARY_SAFE\" that, if enabled, will use a safer but sometimes more expensive check.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 33,
        "deletions": 32,
        "changed_files": 16,
        "created_at": "2018-12-20T06:34:51Z",
        "closed_at": "2019-01-03T06:51:51Z",
        "merged_at": null,
        "body": "public function __construct($size)\r\n    {\r\n        $this->current = 0;\r\n        $this->buffer_size = $size;\r\n        $this->buffer = str_repeat(chr(0), $this->buffer_size);\r\n    }\r\nwhy you create this buffer , it weel course memory double.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1057,
        "deletions": 298,
        "changed_files": 8,
        "created_at": "2018-12-19T23:46:14Z",
        "closed_at": "2018-12-26T18:36:11Z",
        "merged_at": "2018-12-26T18:36:11Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 53,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2018-12-19T23:05:21Z",
        "closed_at": "2021-10-13T21:50:41Z",
        "merged_at": null,
        "body": "In order to fix the invalidation of oneOf in `MergeMessage, we firstly need to come up with the reason why the invalidation occurs. \r\n\r\nLet's take a look at the example from the issue.\r\n\r\n```proto\r\nmessage OneOfDemo {\r\n  int64 id = 1;\r\n\r\n  oneof demo {\r\n    string foo = 2;\r\n    SubMsg bar = 3;\r\n  }\r\n}\r\n\r\nmessage SubMsg {\r\n  string baz = 1;\r\n}\r\n```\r\n\r\n```cpp\r\nOneOfDemo demo;\r\ndemo.set_id(123);\r\ndemo.set_foo(\"foo\");\r\n\r\ngoogle::protobuf::FieldMask mask;\r\nmask.add_paths(\"bar.baz\");\r\n\r\nOneOfDemo dest;\r\ngoogle::protobuf::util::FieldMaskUtil::MergeMessageTo(demo, mask, {}, &dest);\r\n```\r\n\r\nThe reason for the invalidation of oneOf is because when merging `bar.baz`, we determine a *sub-message* `bar`, existence of which **is not** checked in the source of merging. \r\nTherefore, it is being created and then traversed to `baz`. Since `baz` is not set in the source, `ClearField` is called.  But the problem here is that we should have checked the existence of *sub-message* and cleared the appropriate field in merging destination. \r\n\r\nIn the example above, once we figure out that `bar` does not exist in the source of merging, we must clear `bar` field in the destination object and skip all its children.  \r\n\r\nRFC @acozzette @xfxyjwf @BSBandme \r\n\r\nFix #4555",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 33,
        "deletions": 4,
        "changed_files": 4,
        "created_at": "2018-12-19T19:27:46Z",
        "closed_at": "2018-12-20T00:27:50Z",
        "merged_at": "2018-12-20T00:27:50Z",
        "body": "Also lower the severity of lower-case ruby enum to warning.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 6,
        "changed_files": 4,
        "created_at": "2018-12-19T02:56:48Z",
        "closed_at": "2018-12-22T05:07:35Z",
        "merged_at": "2018-12-22T05:07:35Z",
        "body": "Received errors parsing json files with decimal floats from European colleagues",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 39,
        "changed_files": 3,
        "created_at": "2018-12-18T21:45:10Z",
        "closed_at": "2018-12-18T23:28:39Z",
        "merged_at": "2018-12-18T23:28:39Z",
        "body": "This Kokoro configuration is no longer being used and the build.sh\r\nscript does not work anymore, so let's delete this configuration.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2018-12-18T16:39:35Z",
        "closed_at": "2018-12-19T17:23:28Z",
        "merged_at": null,
        "body": "I had issues with a colleague reading in json protobuf files with a decimal float separator rather than a comma.\r\n\r\nThis fixed his reading errors\r\nI replaced all the std strtod calls with io::NoLocaleStrtod just to be safe.\r\n\r\nThis also was the only file still using the std strtod calls",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-12-18T09:22:49Z",
        "closed_at": "2021-06-07T16:06:33Z",
        "merged_at": null,
        "body": "My projects builds protobuf together when building itself, using CMake ExternalProject; on Windows the CMake build works very well, but on Linux the file names are a little bit surprising.  UNIX-like systems typically do not ship separately release and debug libraries.\r\n\r\nI am aware that I can use autotools on Linux, but the CMake build integrates better, e.g. parallel builds get controlled together.",
        "comments": 11
    },
    {
        "merged": true,
        "additions": 126,
        "deletions": 113,
        "changed_files": 6,
        "created_at": "2018-12-18T00:38:15Z",
        "closed_at": "2018-12-19T00:20:24Z",
        "merged_at": "2018-12-19T00:20:24Z",
        "body": "Currently still under testing in VM. Will add reviewers after testing passed",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 78,
        "deletions": 3,
        "changed_files": 5,
        "created_at": "2018-12-17T22:23:37Z",
        "closed_at": "2018-12-18T13:11:59Z",
        "merged_at": "2018-12-18T13:11:59Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 106,
        "deletions": 3,
        "changed_files": 6,
        "created_at": "2018-12-17T18:31:27Z",
        "closed_at": "2018-12-19T19:15:05Z",
        "merged_at": "2018-12-19T19:15:05Z",
        "body": "Cherry-pick #5389 into 3.7.x release",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-12-17T02:51:28Z",
        "closed_at": "2019-01-03T22:18:04Z",
        "merged_at": null,
        "body": "Add php test case.",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 635,
        "deletions": 0,
        "changed_files": 40,
        "created_at": "2018-12-17T00:53:54Z",
        "closed_at": "2018-12-19T02:07:25Z",
        "merged_at": "2018-12-19T02:07:25Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 54,
        "deletions": 12,
        "changed_files": 4,
        "created_at": "2018-12-16T20:26:37Z",
        "closed_at": "2021-06-04T20:36:31Z",
        "merged_at": null,
        "body": "When having two fields with the same json name `protoc` did not fail with error neither showed a warning.\r\n\r\nFor example:\r\n```proto\r\nsyntax = \"proto3\";\r\nmessage Hi {\r\n    int32 f1 = 1 [json_name = \"fooBar\"];\r\n    int32 f2 = 2 [json_name = \"fooBar\"];\r\n}\r\n```\r\n\r\nThis MR shows warning when using `protoc` in the following format:\r\n>> dup_json_test.proto: warning: Fields with names \"Hi.f2\" and \"Hi.f1\" have the same JSON name \"fooBar\". This may cause problems.\r\n\r\nI decided to show warning instead of error in order to save backwards compatibility. It could be replaced with error later on.\r\n\r\ncc: @xfxyjwf @acozzette @TeBoring @dsnet \r\n\r\n\r\nFix #5063",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 74,
        "deletions": 4,
        "changed_files": 11,
        "created_at": "2018-12-16T17:48:20Z",
        "closed_at": "2021-10-21T17:53:49Z",
        "merged_at": null,
        "body": "Hello!\r\n\r\nI have been trying to come up with an idea on how to resolve the #5414 issue. The main reason why this issue was created is because `ToJsonName` does not make the first letter lower comparing to `ToCamelCase` function which indeed makes the first letter lower.\r\n\r\nOf course, one the solutions is just to change the documentation and change the status of this issue into \"Won't Fix\" :)\r\n\r\nBut I thought that it might be somehow useful to support find fields in UpperCamelCase when composing a proto object from JSON.\r\n\r\nSince we are not allowed to break backwards compatibility and may not change the behaviour of `ToJsonName` function, I have came up with the following solution:\r\n\r\n1. Add new option (`try_lower_camel_for_unknown_fields`) to `JsonParseOptions` which will be responsible for the needed check.\r\n2. If the flag is set, we just need to check that the field name is UpperCamelCase of the name we are looking for (this logic is implemented in `FindLowerCamelFieldInTypeOrNull`).\r\n\r\nLooking forward to hear your opinion! @acozzette @TeBoring @BSBandme \r\n\r\nFix #5414 \r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2018-12-14T11:55:21Z",
        "closed_at": "2018-12-19T01:57:08Z",
        "merged_at": "2018-12-19T01:57:08Z",
        "body": "This will allow `bazel test //:all` to pass on Windows, thus we can enable Windows platform for protobuf on Bazel CI.\r\n@acozzette Can you take a look?",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 31,
        "deletions": 30,
        "changed_files": 2,
        "created_at": "2018-12-14T02:25:43Z",
        "closed_at": "2018-12-14T15:29:14Z",
        "merged_at": "2018-12-14T15:29:14Z",
        "body": "These changes allow us to import the code back into google3 with a minimum of fuss.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1124,
        "deletions": 597,
        "changed_files": 34,
        "created_at": "2018-12-13T23:33:19Z",
        "closed_at": "2018-12-15T00:05:04Z",
        "merged_at": "2018-12-15T00:05:04Z",
        "body": "Besides internal changes, I also did:\r\n1) updated generated code for csharp, php and objc.\r\n2) added missing dependency into conformance_php.php",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 83,
        "deletions": 19,
        "changed_files": 2,
        "created_at": "2018-12-13T21:37:19Z",
        "closed_at": "2018-12-13T22:45:34Z",
        "merged_at": "2018-12-13T22:45:34Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 133,
        "deletions": 25,
        "changed_files": 6,
        "created_at": "2018-12-12T23:40:58Z",
        "closed_at": "2018-12-13T22:40:48Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 2,
        "changed_files": 4,
        "created_at": "2018-12-12T15:21:10Z",
        "closed_at": "2019-04-08T21:11:54Z",
        "merged_at": null,
        "body": "Based on commit for issue #5448:\r\n```\r\ncommit 291d9a0ab0b452537d22a81b551eaea53fd157a8\r\nAuthor: Ivan Shynkarenka <chronoxor@gmail.com>\r\nDate:   Tue May 15 23:19:58 2018 +0300\r\n\r\n    Fix issue with version.rc\r\n```\r\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2018-12-12T11:54:14Z",
        "closed_at": "2018-12-17T02:18:31Z",
        "merged_at": null,
        "body": "PHP function `serializeToJsonString` when have an empty ListValue, it return an invalid json, just like this\r\n\r\n# bug\r\n```\r\n{\r\n    \"name\": \"jack\",\r\n    \"friends\":,  // here should have an empty `[]`\r\n    \"age\": 22\r\n}\r\n```\r\n\r\n# after fix\r\n```\r\n{\r\n    \"name\": \"jack\",\r\n    \"friends\": [],\r\n    \"age\": 22\r\n}\r\n```",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 90,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2018-12-12T01:00:49Z",
        "closed_at": "2018-12-12T23:38:14Z",
        "merged_at": "2018-12-12T23:38:14Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 81,
        "deletions": 27,
        "changed_files": 11,
        "created_at": "2018-12-12T00:37:32Z",
        "closed_at": "2018-12-13T13:53:51Z",
        "merged_at": "2018-12-13T13:53:51Z",
        "body": "By putting the NSAssert behind a DEBUG flag we aren't copying filepaths\r\ninto release builds.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 17,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2018-12-12T00:00:35Z",
        "closed_at": "2018-12-13T05:56:18Z",
        "merged_at": "2018-12-13T05:56:18Z",
        "body": "To make this work, I created a symlink to the existing zlib.BUILD file.\r\nMaybe there is a better way to do this, but this is at least a quick\r\nworkaround to fix the build.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 15,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-12-11T15:47:03Z",
        "closed_at": "2021-04-23T05:40:03Z",
        "merged_at": null,
        "body": "This is kind of a proof of concept.\r\n\r\nI'm happy to add requisite tests and whatnot though I confess I'm not really sure (as of right now) how/where I would do that. It works for me\u2122. Suggestions/guidance appreciated.\r\n\r\nWould fix protocolbuffers/protobuf-javascript#93. ",
        "comments": 19
    },
    {
        "merged": true,
        "additions": 195,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2018-12-10T23:16:08Z",
        "closed_at": "2018-12-11T00:32:57Z",
        "merged_at": "2018-12-11T00:32:57Z",
        "body": "The docker image has been uploaded to: https://hub.docker.com/r/protobuf/php_d8639c5a3c995af7ad06352d44152a0fee6636fa/",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2018-12-10T19:08:39Z",
        "closed_at": "2018-12-10T21:49:45Z",
        "merged_at": "2018-12-10T21:49:45Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 66,
        "deletions": 52,
        "changed_files": 5,
        "created_at": "2018-12-10T18:31:10Z",
        "closed_at": "2018-12-11T22:19:39Z",
        "merged_at": "2018-12-11T22:19:39Z",
        "body": "Fix internal C# compilation issue.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-12-10T13:56:23Z",
        "closed_at": "2018-12-10T18:57:48Z",
        "merged_at": "2018-12-10T18:57:48Z",
        "body": "",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 9,
        "changed_files": 1,
        "created_at": "2018-12-07T17:13:24Z",
        "closed_at": "2018-12-08T00:28:15Z",
        "merged_at": "2018-12-08T00:28:15Z",
        "body": "In the past we used sched_yield for some initialization code, but we are\r\nno longer using it. This change removes the configure script check for\r\nsched_yield so that we can still build even if sched_yield does not seem\r\nto be available. This fixes #5435.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 309,
        "deletions": 87,
        "changed_files": 17,
        "created_at": "2018-12-06T22:33:57Z",
        "closed_at": "2018-12-18T18:57:03Z",
        "merged_at": "2018-12-18T18:57:03Z",
        "body": "#4933 ",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2018-12-06T20:43:59Z",
        "closed_at": "2018-12-08T01:32:12Z",
        "merged_at": "2018-12-08T01:32:12Z",
        "body": "This replays this [commit](f00e06c95bc117fb2ed0ca56c96041c93039f1fe) on 3.6.x branch.\r\nWithout this commit, tests are failing on closure compiler, because Buffer class is undefined.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 58,
        "deletions": 25,
        "changed_files": 9,
        "created_at": "2018-12-06T18:40:22Z",
        "closed_at": "2018-12-06T23:49:50Z",
        "merged_at": "2018-12-06T23:49:50Z",
        "body": "- Avoid using typeid() so that we don't depend on RTTI\r\n- Change internal AP MapData() to MutableMapData() and added\r\n  GetMapData()",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 6,
        "changed_files": 5,
        "created_at": "2018-12-04T18:41:59Z",
        "closed_at": "2018-12-04T23:05:41Z",
        "merged_at": "2018-12-04T23:05:41Z",
        "body": "This cherry-picks the fix from PR #4862 so that we can include it in a 3.6.1.2 patch release.",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 220,
        "deletions": 220,
        "changed_files": 4,
        "created_at": "2018-12-04T16:01:37Z",
        "closed_at": "2018-12-05T16:08:19Z",
        "merged_at": "2018-12-05T16:08:19Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 25,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2018-11-29T22:08:16Z",
        "closed_at": "2018-12-03T15:20:25Z",
        "merged_at": "2018-12-03T15:20:25Z",
        "body": "For deprecated fields, Include the full name of the deprecated field and the file containing the deprecated field in deprecation messages. For deprecated files, include the deprecated file in deprecation message. This additional context will help provide more details/context to help developers seek recommended alternatives to deprecated fields.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2018-11-27T23:37:51Z",
        "closed_at": "2018-11-28T20:33:39Z",
        "merged_at": null,
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 28,
        "deletions": 0,
        "changed_files": 4,
        "created_at": "2018-11-27T22:24:35Z",
        "closed_at": "2018-11-29T00:45:16Z",
        "merged_at": "2018-11-29T00:45:16Z",
        "body": "https://developer.apple.com/documentation/xcode_release_notes/xcode_10_release_notes",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2018-11-27T19:22:46Z",
        "closed_at": "2018-11-29T05:40:06Z",
        "merged_at": "2018-11-29T05:40:06Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2018-11-26T23:18:08Z",
        "closed_at": "2018-11-27T18:17:57Z",
        "merged_at": "2018-11-27T18:17:57Z",
        "body": "The code now matches what the comment above it actually generates.\r\n\r\nAlso tweak that code so it actually compiles for me, and to avoid\r\nembedding /* and */ in comments because that's generally a reasonable\r\nthing to trigger warnings.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2018-11-26T13:00:47Z",
        "closed_at": "2021-10-19T17:18:18Z",
        "merged_at": null,
        "body": "Fixes protocolbuffers/protobuf-javascript#96",
        "comments": 14
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-11-26T11:36:14Z",
        "closed_at": "2018-12-10T21:41:44Z",
        "merged_at": "2018-12-10T21:41:44Z",
        "body": "Some headers are missing when installing protobuf using CMake on windows. This commit installs the missing headers.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 147,
        "deletions": 30,
        "changed_files": 7,
        "created_at": "2018-11-21T23:22:30Z",
        "closed_at": "2018-11-27T13:06:37Z",
        "merged_at": "2018-11-27T13:06:37Z",
        "body": "In some cases proto files that want/need to use the objc_class_prefix option have\r\ntypes that already have the prefix on a subset of their names. In this case we don't\r\nwant to duplicate the prefix.\r\n\r\nAdded tests for this (and prefixes in general).",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 89,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2018-11-21T18:29:05Z",
        "closed_at": "2018-12-11T19:58:27Z",
        "merged_at": "2018-12-11T19:58:27Z",
        "body": "Allow downstream Bazel clients to build protobuf library with zlib support.",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2018-11-21T02:45:36Z",
        "closed_at": "2018-11-21T05:44:53Z",
        "merged_at": "2018-11-21T05:44:53Z",
        "body": "Fixed typo in a function name.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 24,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2018-11-20T00:59:22Z",
        "closed_at": "2018-11-21T19:00:46Z",
        "merged_at": "2018-11-21T19:00:45Z",
        "body": "Bazel 0.20 requires these fixes, so let's cherry-pick them to the 3.6.x branch and tag a 3.6.1.1 release.\r\nThis should unblock the Bazel release.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 21,
        "deletions": 21,
        "changed_files": 5,
        "created_at": "2018-11-20T00:27:15Z",
        "closed_at": "2019-01-12T18:25:07Z",
        "merged_at": "2019-01-12T18:25:07Z",
        "body": "Added a few \\ on the comments to match the exceptions scope when is referenced while in a namespace. So the IDEs can be happy.\r\n\r\nI think i got them all.\r\n\r\nBest regards!",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 15,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2018-11-19T14:32:24Z",
        "closed_at": "2018-11-19T16:42:47Z",
        "merged_at": "2018-11-19T16:42:47Z",
        "body": "For messages that have multiple extension ranges, this will improve things\r\nby avoiding repeated work.  For messages with a single range, it should\r\nbe a wash.\r\n\r\n- Sort the list of set extensions once during serialization and reuse the list.\r\n- Break out of the serialization loop as soon as the loop has moved pasted at\r\n  accepted range for field ids.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2018-11-19T13:56:32Z",
        "closed_at": "2018-11-19T21:38:13Z",
        "merged_at": "2018-11-19T21:38:13Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 24,
        "deletions": 25,
        "changed_files": 4,
        "created_at": "2018-11-17T12:04:07Z",
        "closed_at": "2018-11-26T21:41:10Z",
        "merged_at": "2018-11-26T21:41:10Z",
        "body": "",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 4058,
        "deletions": 1645,
        "changed_files": 8,
        "created_at": "2018-11-16T19:30:01Z",
        "closed_at": "2018-12-22T18:10:41Z",
        "merged_at": "2018-12-22T18:10:41Z",
        "body": "This synchronizes the latest changes in upb.c and upb.h to enable these options",
        "comments": 27
    },
    {
        "merged": true,
        "additions": 79,
        "deletions": 104,
        "changed_files": 19,
        "created_at": "2018-11-16T01:53:39Z",
        "closed_at": "2018-11-19T17:21:29Z",
        "merged_at": "2018-11-19T17:21:29Z",
        "body": "- removed use of GOOGLE_DISALLOW_EVIL_CONSTRUCTORS\r\n  in favor of deleting them C++11 style.\r\n- removed forward declarations of protobuf core types.\r\n- ensured that namespaces \"google\" and \"protobuf\" are\r\n  always opened/closed together.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2018-11-15T22:47:56Z",
        "closed_at": "2018-11-16T02:19:06Z",
        "merged_at": "2018-11-16T02:19:06Z",
        "body": "This allows building with --incompatible_new_actions_api.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-11-15T22:01:58Z",
        "closed_at": "2018-11-16T02:47:08Z",
        "merged_at": "2018-11-16T02:47:08Z",
        "body": "Updated README.md to work with Visual studio 15 2017. ",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-11-14T23:16:03Z",
        "closed_at": "2018-11-15T20:48:41Z",
        "merged_at": "2018-11-15T20:48:41Z",
        "body": "Generated code now pulls in this header transitively, so it needs to be\r\ninstalled. This fixes #5361.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2942,
        "deletions": 789,
        "changed_files": 72,
        "created_at": "2018-11-14T04:05:00Z",
        "closed_at": "2019-05-03T20:54:42Z",
        "merged_at": "2019-05-03T20:54:41Z",
        "body": "We're at the final stretch.\r\n\r\nThis PR adds support for extensions in the C# library and code generator.",
        "comments": 12
    },
    {
        "merged": true,
        "additions": 22,
        "deletions": 7,
        "changed_files": 3,
        "created_at": "2018-11-13T22:58:31Z",
        "closed_at": "2018-11-14T18:26:33Z",
        "merged_at": "2018-11-14T18:26:33Z",
        "body": "Previously --cpp_out:lite was available to force the optimization mode\r\nto the lite runtime. This change generalizes that change to work for\r\n--cpp_out=speed:... and --cpp_out=code_size:...\r\nThis is needed to override the file specific options in cases where\r\nlibprotobuf-mutator is used for fuzzing since it depends on reflection.\r\n\r\nSigned-off-by: Allen Webb <allenwebb@google.com>",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 67,
        "changed_files": 2,
        "created_at": "2018-11-13T17:53:39Z",
        "closed_at": "2018-11-14T18:36:37Z",
        "merged_at": "2018-11-14T18:36:37Z",
        "body": "This header is no longer used, so we can delete it. This PR also tweaks Makefile.am\r\nto fix the failing distcheck test.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 633,
        "deletions": 2,
        "changed_files": 15,
        "created_at": "2018-11-12T23:17:01Z",
        "closed_at": "2018-11-29T00:44:54Z",
        "merged_at": "2018-11-29T00:44:54Z",
        "body": "This PR migrates the changes in https://github.com/protocolbuffers/protobuf/pull/4534 and rebases them onto master branch. cc @TeBoring @fiboknacky",
        "comments": 12
    },
    {
        "merged": false,
        "additions": 853,
        "deletions": 34,
        "changed_files": 12,
        "created_at": "2018-11-12T17:14:57Z",
        "closed_at": "2018-11-13T05:12:25Z",
        "merged_at": null,
        "body": "`protoc` that is able to generate convenient Kotlin builders on top of generated Java classes.\r\n\r\nI submit this as minimal implementation for early review. So that it can be discussed and correct direction is chosen from the start. \r\n\r\nExample proto file:\r\n```protobuf\r\nsyntax = \"proto2\";\r\n\r\npackage tutorial;\r\n\r\noption java_package = \"com.example.tutorial\";\r\noption java_outer_classname = \"AddressBookProtos\";\r\n\r\nmessage Person {\r\n  required string name = 1;\r\n  required int32 id = 2;\r\n  optional string email = 3;\r\n\r\n  enum PhoneType {\r\n    MOBILE = 0;\r\n    HOME = 1;\r\n    WORK = 2;\r\n  }\r\n\r\n  message PhoneNumber {\r\n    required string number = 1;\r\n    optional PhoneType type = 2 [default = HOME];\r\n  }\r\n\r\n  repeated PhoneNumber phones = 4;\r\n  optional PhoneNumber dedicatedPhone = 5;\r\n}\r\n\r\nmessage AddressBook {\r\n  repeated Person people = 1;\r\n}\r\n```\r\n\r\nExample code using builders:\r\n```kotlin\r\npackage example\r\n\r\nimport com.example.tutorial.*\r\nimport com.example.tutorial.AddressBookProtosDSL.PhoneNumber.buildPhoneNumber\r\nimport com.example.tutorial.AddressBookProtosDSL.buildAddressBook\r\nimport com.example.tutorial.AddressBookProtosDSL.buildPerson\r\n\r\nfun main(args: Array<String>) {\r\n    println(buildPerson {\r\n        id = 2\r\n        name = \"fff\"\r\n    })\r\n\r\n    println(buildPhoneNumber {\r\n        number = \"123\"\r\n    })\r\n\r\n    println(buildAddressBook {\r\n        people {\r\n            addPerson {\r\n                id = 1234\r\n                name = \"John Doe\"\r\n                email = \"jdoe@example.com\"\r\n                dedicatedPhone {\r\n                    type = AddressBookProtos.Person.PhoneType.WORK\r\n                    name = \"abc\"\r\n                    number = \"2222-3333\"\r\n                }\r\n                phones {\r\n                    addPhoneNumber {\r\n                        type = AddressBookProtos.Person.PhoneType.HOME\r\n                        name = \"def\"\r\n                        number = \"555-4321\"\r\n                    }\r\n                    addPhoneNumber {\r\n                        type = AddressBookProtos.Person.PhoneType.WORK\r\n                        name = \"ghi\"\r\n                        number = \"555-3421\"\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    })\r\n}\r\n```\r\nExample generated code:\r\n```kotlin\r\n// Generated by the protocol buffer compiler.  DO NOT EDIT!\r\n// source: tutorial.proto\r\n\r\npackage com.example.tutorial;\r\n\r\nobject AddressBookProtosDSL {\r\n  fun buildPerson(\r\n    block: com.example.tutorial.AddressBookProtos.Person.Builder.() -> Unit\r\n  ) = com.example.tutorial.AddressBookProtos.Person.newBuilder()\r\n    .apply(block)\r\n    .build()\r\n\r\n  object PhoneNumber {\r\n    fun buildPhoneNumber(\r\n      block: com.example.tutorial.AddressBookProtos.Person.PhoneNumber.Builder.() -> Unit\r\n    ) = com.example.tutorial.AddressBookProtos.Person.PhoneNumber.newBuilder()\r\n      .apply(block)\r\n      .build()\r\n\r\n  }\r\n\r\n  fun buildAddressBook(\r\n    block: com.example.tutorial.AddressBookProtos.AddressBook.Builder.() -> Unit\r\n  ) = com.example.tutorial.AddressBookProtos.AddressBook.newBuilder()\r\n    .apply(block)\r\n    .build()\r\n\r\n\r\n  // @@protoc_insertion_point(outer_dsl_object_scope)\r\n}\r\n\r\nfun com.example.tutorial.AddressBookProtos.Person.Builder.phones(\r\n  block: MutableList<com.example.tutorial.AddressBookProtos.Person.PhoneNumber>.() -> Unit\r\n) {\r\n  addAllPhones(\r\n    mutableListOf<com.example.tutorial.AddressBookProtos.Person.PhoneNumber>()\r\n      .apply(block)\r\n  )\r\n}\r\n\r\nfun com.example.tutorial.AddressBookProtos.Person.Builder.dedicatedPhone(\r\n    block: com.example.tutorial.AddressBookProtos.Person.PhoneNumber.Builder.() -> Unit\r\n) {\r\n  dedicatedPhoneBuilder.apply(block)\r\n}\r\n\r\nfun com.example.tutorial.AddressBookProtos.AddressBook.Builder.people(\r\n  block: MutableList<com.example.tutorial.AddressBookProtos.Person>.() -> Unit\r\n) {\r\n  addAllPeople(\r\n    mutableListOf<com.example.tutorial.AddressBookProtos.Person>()\r\n      .apply(block)\r\n  )\r\n}\r\n\r\nfun MutableList<com.example.tutorial.AddressBookProtos.Person>.addPerson(\r\n    block: com.example.tutorial.AddressBookProtos.Person.Builder.() -> Unit\r\n) {\r\n    add(\r\n      com.example.tutorial.AddressBookProtos.Person.newBuilder()\r\n       .apply(block)\r\n       .build()\r\n    )\r\n}\r\n\r\nfun MutableList<com.example.tutorial.AddressBookProtos.Person.PhoneNumber>.addPhoneNumber(\r\n    block: com.example.tutorial.AddressBookProtos.Person.PhoneNumber.Builder.() -> Unit\r\n) {\r\n    add(\r\n      com.example.tutorial.AddressBookProtos.Person.PhoneNumber.newBuilder()\r\n       .apply(block)\r\n       .build()\r\n    )\r\n}\r\n\r\nfun MutableList<com.example.tutorial.AddressBookProtos.AddressBook>.addAddressBook(\r\n    block: com.example.tutorial.AddressBookProtos.AddressBook.Builder.() -> Unit\r\n) {\r\n    add(\r\n      com.example.tutorial.AddressBookProtos.AddressBook.newBuilder()\r\n       .apply(block)\r\n       .build()\r\n    )\r\n}\r\n```",
        "comments": 16
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 12,
        "changed_files": 3,
        "created_at": "2018-11-12T09:49:09Z",
        "closed_at": "2018-11-13T18:21:31Z",
        "merged_at": "2018-11-13T18:21:31Z",
        "body": "This matches the Java and C++ defaults.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-11-10T09:05:02Z",
        "closed_at": "2019-05-03T21:12:08Z",
        "merged_at": null,
        "body": "for closing #4489",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 7826,
        "deletions": 4287,
        "changed_files": 237,
        "created_at": "2018-11-09T19:44:54Z",
        "closed_at": "2018-11-12T21:55:01Z",
        "merged_at": "2018-11-12T21:55:01Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 904,
        "deletions": 904,
        "changed_files": 30,
        "created_at": "2018-11-08T06:00:23Z",
        "closed_at": "2018-11-13T19:41:13Z",
        "merged_at": "2018-11-13T19:41:13Z",
        "body": "This avoids compiler errors/warnings if zero-as-null-pointer-constant is considered an error or warning.\r\n\r\nNot sure this is something you want as is. May be an option would be to pass a flag to `protoc` to specify if you want code for c++11 or older, for example?",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2018-11-08T01:52:17Z",
        "closed_at": "2018-11-19T18:33:42Z",
        "merged_at": "2018-11-19T18:33:42Z",
        "body": "Instead of using DEPRECATED_ATTRIBUTE from AvailabilityMacros.h, we should introduce a Google-specific Objective-C protobuf deprecation annotation. This helps address IWYU issues with using DEPRECATED_ATTRIBUTE and also enables allows clients to redefine the macro to treat protobuf warnings differently than other types of warnings (e.g., treating protobuf deprecation warnings as errors or ignoring them).",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 7608,
        "deletions": 4239,
        "changed_files": 230,
        "created_at": "2018-11-07T23:23:07Z",
        "closed_at": "2018-11-09T19:44:00Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-11-06T16:34:40Z",
        "closed_at": "2018-11-09T21:04:54Z",
        "merged_at": "2018-11-09T21:04:54Z",
        "body": "",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-11-06T08:43:27Z",
        "closed_at": "2018-11-08T22:11:10Z",
        "merged_at": "2018-11-08T22:11:10Z",
        "body": "This unbreaks the Windows shared-library build of Chrome when using\r\nClang versions based on r344987 or later, see https://crbug.com/901776\r\n\r\nimplicit_weak_message.cc is part of protobuf_lite.dll, and it includes\r\nwire_format_lite.h, which includes the dllexport inline function\r\nWireFormatLite::WriteGroupToArray which will therefore be emitted.\r\n\r\nWriteGroupToArray in turn calls the inline function\r\nInternalWriteGroupToArray, however that definition is provided in the\r\n_inl file. To make sure the definition is available, the _inl file must\r\nbe included.\r\n\r\nBefore Clang r344987 the build worked anyway due to luck, because\r\nInternalWriteGroupToArray was emitted into other object files (e.g. in\r\nwire_format_lite.obj). After that Clang revision, those definitions\r\nstarted getting inlined, and so are longer available and cause a link\r\nfailure for the reference from implicit_weak_message.obj.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 17,
        "changed_files": 4,
        "created_at": "2018-11-04T01:31:41Z",
        "closed_at": "2018-11-18T08:06:40Z",
        "merged_at": "2018-11-18T08:06:40Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 32,
        "changed_files": 3,
        "created_at": "2018-11-02T15:37:00Z",
        "closed_at": "2018-11-02T17:28:34Z",
        "merged_at": "2018-11-02T17:28:34Z",
        "body": "No changes were needed, but since the Xcode projects pick up the updated\r\nsetting, the tests require a newer Xcode that supports Swift 4.\r\n\r\nThis is being done because Xcode 10 starting warning about Swift 3 support\r\ngoing away in the future, so we might as well do the updates since most\r\nfolks shouldn't be on those really old Xcode versions any more.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 20,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2018-11-01T15:30:55Z",
        "closed_at": "2018-11-01T21:18:25Z",
        "merged_at": "2018-11-01T21:18:25Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 74,
        "deletions": 81,
        "changed_files": 1,
        "created_at": "2018-11-01T13:45:14Z",
        "closed_at": "2018-11-01T16:52:20Z",
        "merged_at": "2018-11-01T16:52:20Z",
        "body": "Not sure the history for why there were two objc_library targets, but\r\ngiven the one has an issue about not working, merge them into a single\r\ntarget and an alias.\r\n\r\n- Use the alias for :objectivec since that naming doesn't seem to follow\r\n  the other targets *_library targets here.\r\n- Update :protobuf_objc to be use for the working target and just inline\r\n  the sources/headers lists so there is less indirection in the file.\r\n\r\nFixes #5284",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-10-31T09:20:34Z",
        "closed_at": "2018-11-12T21:45:06Z",
        "merged_at": "2018-11-12T21:45:06Z",
        "body": "The xcode 10 removes the deprecated libstdc++ library. We could set\r\n\"MACOSX_DEPLOYMENT_TARGET\" to \"10.9\" to use libc++ instead.",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 34,
        "deletions": 16,
        "changed_files": 2,
        "created_at": "2018-10-31T03:40:42Z",
        "closed_at": "2019-02-04T23:17:35Z",
        "merged_at": null,
        "body": "When the moving semantics is used on a Type in the statically built library, the following error will be thrown: `error LNK2019: unresolved external symbol \"const NAMESPACE::Type::`vftable'\"`. It can be solved by moving the implementation of the moving constructor to the source file.",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2018-10-30T12:50:50Z",
        "closed_at": "2021-05-17T21:53:28Z",
        "merged_at": "2021-05-17T21:53:28Z",
        "body": "Make language instructions' documentation links clickable. (See 86208c5.)\r\n\r\nAdd a `git submodules` check to autogen.sh. Running `./autogen.sh && ./configure && make` happens to work without initializing git submodules - but autogen.sh writes to what is supposed to be a git submodules directory, so trying to later initialize git submodules fails. Adding a check makes building a bit more reliable for people who miss this step.",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2018-10-30T05:00:44Z",
        "closed_at": "2018-11-12T21:36:15Z",
        "merged_at": "2018-11-12T21:36:15Z",
        "body": "@bazel_skylib//:lib is supposedly deprecated. The 'versions' struct in lib.bzl was committed to bazel-skylib at the same time as //lib:versions.bzl, so there should be no backward incompatibility.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2018-10-29T23:48:09Z",
        "closed_at": "2018-10-31T16:48:54Z",
        "merged_at": "2018-10-31T16:48:54Z",
        "body": "They're not doing anything, so might as well get rid of them.\r\n\r\nI was running a static analysis tool over protobuf, looking for things to fix in local changes, and noticed these.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-10-29T22:16:12Z",
        "closed_at": "2018-11-12T22:05:19Z",
        "merged_at": "2018-11-12T22:05:19Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-10-29T22:13:35Z",
        "closed_at": "2018-11-12T21:44:11Z",
        "merged_at": "2018-11-12T21:44:11Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2018-10-28T02:28:15Z",
        "closed_at": "2018-10-29T18:32:51Z",
        "merged_at": "2018-10-29T18:32:51Z",
        "body": "Given an argument, the previous implementation was off by one (`.first(2)` would return 3 elements) compared to the `Enumerable#first` method.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 587,
        "deletions": 87,
        "changed_files": 6,
        "created_at": "2018-10-25T19:51:02Z",
        "closed_at": "2018-11-08T15:29:05Z",
        "merged_at": "2018-11-08T15:29:05Z",
        "body": "We have code for converting C/C++/Objc keywords that appear in protos\r\nto convert them so that they can be compiled.\r\nOne of the things we need to be careful of is accidentally overriding methods\r\nthat Apple declares in NSObject. It turns out that we have run into issues\r\nwhere we conflict with \"hidden\" methods in NSObject or methods added by\r\ncategories. method_dump.sh collects all of the methods we care about for\r\nmacOS and iOS and dumps them into objectivec_nsobject_methods.h which\r\nis then included in objectivec_helpers.cc as part of the build.\r\n\r\nAdded a pile of tests to verify that conversions are happening as expected.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2018-10-23T02:03:49Z",
        "closed_at": "2018-10-23T19:50:58Z",
        "merged_at": "2018-10-23T19:50:58Z",
        "body": "Reopened PR for #5025.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-10-22T23:02:10Z",
        "closed_at": "2019-05-03T21:01:09Z",
        "merged_at": null,
        "body": "At the moment protobuf compiler for Python is not taking into account Python keywords then generating top level enums e.g. following pb:\r\n```protobuf\r\nsyntax = \"proto3\";\r\n\r\nenum TestEnum {\r\n    None = 0;\r\n    Something = 1;\r\n    for = 2;\r\n    class = 3;\r\n}\r\n```\r\nWill generate invalid python code:\r\n```python\r\n# Top of the file omitted\r\nTestEnum = enum_type_wrapper.EnumTypeWrapper(_TESTENUM)\r\nNone = 0\r\nSomething = 1\r\nfor = 2\r\nclass = 3\r\n```\r\n\r\nThis merge requests proposes change to generator so it will append underscore `_` character to reserved Python keywords as stated in [PEP8](https://www.python.org/dev/peps/pep-0008/)\r\n\r\n> If a function argument's name clashes with a reserved keyword, it is generally better to append a single trailing underscore rather than use an abbreviation or spelling corruption. Thus class_ is better than clss. (Perhaps better is to avoid such clashes by using a synonym.)\r\n\r\nGenerating following code from proto file:\r\n```python\r\n# Generated by the protocol buffer compiler.  DO NOT EDIT!\r\n# source: tests.proto\r\n\r\nimport sys\r\n_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))\r\nfrom google.protobuf.internal import enum_type_wrapper\r\nfrom google.protobuf import descriptor as _descriptor\r\nfrom google.protobuf import message as _message\r\nfrom google.protobuf import reflection as _reflection\r\nfrom google.protobuf import symbol_database as _symbol_database\r\n# @@protoc_insertion_point(imports)\r\n\r\n_sym_db = _symbol_database.Default()\r\n\r\n\r\n\r\n\r\nDESCRIPTOR = _descriptor.FileDescriptor(\r\n  name='tests.proto',\r\n  package='',\r\n  syntax='proto3',\r\n  serialized_options=None,\r\n  serialized_pb=_b('\\n\\x0btests.proto*7\\n\\x08TestEnum\\x12\\x08\\n\\x04None\\x10\\x00\\x12\\r\\n\\tSomething\\x10\\x01\\x12\\x07\\n\\x03\\x66or\\x10\\x02\\x12\\t\\n\\x05\\x63lass\\x10\\x03\\x62\\x06proto3')\r\n)\r\n\r\n_TESTENUM = _descriptor.EnumDescriptor(\r\n  name='TestEnum',\r\n  full_name='TestEnum',\r\n  filename=None,\r\n  file=DESCRIPTOR,\r\n  values=[\r\n    _descriptor.EnumValueDescriptor(\r\n      name='None', index=0, number=0,\r\n      serialized_options=None,\r\n      type=None),\r\n    _descriptor.EnumValueDescriptor(\r\n      name='Something', index=1, number=1,\r\n      serialized_options=None,\r\n      type=None),\r\n    _descriptor.EnumValueDescriptor(\r\n      name='for', index=2, number=2,\r\n      serialized_options=None,\r\n      type=None),\r\n    _descriptor.EnumValueDescriptor(\r\n      name='class', index=3, number=3,\r\n      serialized_options=None,\r\n      type=None),\r\n  ],\r\n  containing_type=None,\r\n  serialized_options=None,\r\n  serialized_start=15,\r\n  serialized_end=70,\r\n)\r\n_sym_db.RegisterEnumDescriptor(_TESTENUM)\r\n\r\nTestEnum = enum_type_wrapper.EnumTypeWrapper(_TESTENUM)\r\nNone_ = 0\r\nSomething = 1\r\nfor_ = 2\r\nclass_ = 3\r\n\r\n\r\nDESCRIPTOR.enum_types_by_name['TestEnum'] = _TESTENUM\r\n_sym_db.RegisterFileDescriptor(DESCRIPTOR)\r\n\r\n\r\n# @@protoc_insertion_point(module_scope)\r\n```\r\n\r\nThis Pull Request also fixes #4833",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-10-22T13:04:22Z",
        "closed_at": "2018-10-22T21:05:32Z",
        "merged_at": "2018-10-22T21:05:32Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 92,
        "changed_files": 11,
        "created_at": "2018-10-20T21:04:31Z",
        "closed_at": "2018-10-22T22:09:37Z",
        "merged_at": "2018-10-22T22:09:37Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-10-19T19:41:16Z",
        "closed_at": "2018-11-04T22:39:51Z",
        "merged_at": "2018-11-04T22:39:51Z",
        "body": "Added safety checks to prevent exceptions/crash when malloc returns nil in **GPBDescriptor**",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 19,
        "deletions": 19,
        "changed_files": 1,
        "created_at": "2018-10-18T12:57:46Z",
        "closed_at": "2018-10-29T16:46:24Z",
        "merged_at": "2018-10-29T16:46:23Z",
        "body": "",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2018-10-17T10:28:58Z",
        "closed_at": "2018-11-26T19:08:55Z",
        "merged_at": "2018-11-26T19:08:55Z",
        "body": "This resolves #5243.",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 157,
        "deletions": 10,
        "changed_files": 2,
        "created_at": "2018-10-16T22:13:59Z",
        "closed_at": "2018-11-12T23:55:26Z",
        "merged_at": null,
        "body": "Allow users to add plugin functions that evaluate the protobuf object and inject customized fields in JSON.\r\n\r\nFor example, given a protobuf IDL like:\r\n```\r\nmessage TestWrappers {\r\n  google.protobuf.Int32Value int32_value = 1;\r\n  google.protobuf.UInt32Value uint32_value = 2;\r\n  google.protobuf.Int64Value int64_value = 3;\r\n  google.protobuf.UInt64Value uint64_value = 4;\r\n  google.protobuf.FloatValue float_value = 5;\r\n  google.protobuf.DoubleValue double_value = 6;\r\n  google.protobuf.BoolValue bool_value = 7;\r\n  google.protobuf.StringValue string_value = 8;\r\n  google.protobuf.BytesValue bytes_value = 9;\r\n}\r\n```\r\n\r\nuser may want to add a tag in JSON that counts the number fields set in the protobuf object:\r\n```\r\n{\r\n  \"number_of_fields_set\": 2,\r\n  \"bool_value\": false,\r\n  \"string_value\": \"\"\r\n}\r\n```\r\n\r\nThe user can add a plugin function that evaluate the structure of the protobuf\r\nobject and then inject custom fields in JSON.\r\n\r\n\r\n\r\n\r\n",
        "comments": 25
    },
    {
        "merged": true,
        "additions": 156,
        "deletions": 1,
        "changed_files": 5,
        "created_at": "2018-10-16T09:19:37Z",
        "closed_at": "2018-11-06T15:36:22Z",
        "merged_at": "2018-11-06T15:36:22Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 30,
        "deletions": 10,
        "changed_files": 15,
        "created_at": "2018-10-16T03:42:14Z",
        "closed_at": "2018-10-17T03:14:51Z",
        "merged_at": "2018-10-17T03:14:51Z",
        "body": "This should help fix #5259.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2018-10-14T13:42:33Z",
        "closed_at": "2019-07-23T00:24:11Z",
        "merged_at": null,
        "body": "so the code generated passes rubocop check automatically.",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 125,
        "deletions": 12,
        "changed_files": 12,
        "created_at": "2018-10-14T05:06:14Z",
        "closed_at": "2018-10-18T18:16:56Z",
        "merged_at": "2018-10-18T18:16:56Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 66,
        "deletions": 2,
        "changed_files": 10,
        "created_at": "2018-10-12T18:10:24Z",
        "closed_at": "2018-10-12T19:36:34Z",
        "merged_at": "2018-10-12T19:36:34Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-10-12T07:12:37Z",
        "closed_at": "2018-11-13T00:56:22Z",
        "merged_at": "2018-11-13T00:56:22Z",
        "body": "backport of #2811 to 3.6.x branch",
        "comments": 11
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 10,
        "changed_files": 1,
        "created_at": "2018-10-11T10:13:25Z",
        "closed_at": "2018-10-15T19:05:42Z",
        "merged_at": "2018-10-15T19:05:42Z",
        "body": "Fixes #5139. See the issue for a more thorough description of the problem.\r\n\r\nThe fix is tested on Ubuntu 16.04 with the project I created for demonstrating the issue (https://github.com/slovdahl/protobuf-java-warnings). With the fix, the generated code doesn't cause the Java compiler to show any warnings any more. This is needed in environments where Java warnings as treated as errors.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 18,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2018-10-11T01:51:44Z",
        "closed_at": "2018-11-01T20:39:03Z",
        "merged_at": null,
        "body": "the goal of these changes is to allow the csharp code generator to emit named constants for the extensions defined in the proto file so that fetching them in csharp code doesn't need to use literal number constants, which are error prone and not very readable",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2018-10-10T14:34:16Z",
        "closed_at": "2018-10-10T17:12:11Z",
        "merged_at": "2018-10-10T17:12:11Z",
        "body": "Removing links to Erlang projects which are no longer maintained.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 219,
        "deletions": 61,
        "changed_files": 2,
        "created_at": "2018-10-09T01:55:08Z",
        "closed_at": "2018-10-12T20:46:27Z",
        "merged_at": "2018-10-12T20:46:27Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-10-08T21:46:41Z",
        "closed_at": "2018-12-01T00:35:53Z",
        "merged_at": null,
        "body": "The xcode 10 removes the deprecated libstdc++ library. Now, we should\r\nuse libc++ instead.\r\n\r\nHere is the error message when I try to build the protobuf with cpp implementation.\r\n> warning: include path for stdlibc++ headers not found; pass '-std=libc++' on the command line to use the libc++ standard library instead [-Wstdlibcxx-not-found]\r\n> In file included from google/protobuf/pyext/extension_dict.cc:34:\r\n> ./google/protobuf/pyext/extension_dict.h:39:10: fatal error: 'memory' file not found\r\n> #include <memory>",
        "comments": 18
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-10-08T06:47:19Z",
        "closed_at": "2018-10-10T20:43:55Z",
        "merged_at": null,
        "body": "py_grpc_validator is  a python GRPC plugin which try to validate GRPC client request. \r\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 105,
        "deletions": 97,
        "changed_files": 4,
        "created_at": "2018-10-07T21:12:07Z",
        "closed_at": "2018-10-08T20:16:57Z",
        "merged_at": "2018-10-08T20:16:57Z",
        "body": "",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 40,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2018-10-07T17:33:02Z",
        "closed_at": "2019-02-28T00:39:52Z",
        "merged_at": "2019-02-28T00:39:52Z",
        "body": "This is so you can do `MyEnum.FOO` as an alternative to `MyEnum.Value(\"FOO\")`, more like [Python's enums](https://docs.python.org/3/library/enum.html)",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2018-10-05T18:55:44Z",
        "closed_at": "2018-10-23T01:11:06Z",
        "merged_at": null,
        "body": "This pull request fixes #5025. It fixes the problem that the protobuf library is built under debug mode for Windows / MINGW environment.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 20,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2018-10-05T03:41:54Z",
        "closed_at": "2018-10-11T23:16:59Z",
        "merged_at": "2018-10-11T23:16:59Z",
        "body": "This PR fixes #5219. It implements detection of whether `std::atomic` can be used without linking to `libatomic` and adds `libatomic` to the linker arguments if this fails.\r\n\r\nIt is likely mostly harmless to always link to `libatomic` (at least with gcc and clang), but this solution was chosen because many other projects have similar logic in their build systems. It is only implemented for the autotools based build, not bazel or cmake, but this was deemed adequate in #5219. I assume the bazel build has the same issue, but I have not tested it.\r\n\r\nI tested this on Linux on x86_64, armv6l and armv7l, but I am not very familiar with autotools so this may need to be cleaned up/tweaked.",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 505,
        "deletions": 74,
        "changed_files": 14,
        "created_at": "2018-10-04T03:20:22Z",
        "closed_at": "2018-10-08T20:38:46Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2018-10-04T03:16:01Z",
        "closed_at": "2018-10-04T17:29:22Z",
        "merged_at": "2018-10-04T17:29:22Z",
        "body": "#4816 ",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 1535,
        "deletions": 3298,
        "changed_files": 23,
        "created_at": "2018-10-03T03:50:17Z",
        "closed_at": "2018-10-04T17:30:17Z",
        "merged_at": null,
        "body": "Reverts protocolbuffers/protobuf#4816\r\nThis change has broken continuous test: https://source.cloud.google.com/results/invocations/0cf66438-ad5f-4fe1-b576-d371dfe5f33d/targets/protobuf%2Fgithub%2Fmaster%2Fubuntu%2Fruby_all%2Fpresubmit/log\r\n\r\nPlease fix tests and submit again.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2018-10-02T21:01:49Z",
        "closed_at": "2018-10-04T17:13:55Z",
        "merged_at": "2018-10-04T17:13:55Z",
        "body": "Fixed a warning on newer compilers",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 52,
        "deletions": 21,
        "changed_files": 6,
        "created_at": "2018-10-02T20:56:59Z",
        "closed_at": "2018-11-19T21:51:34Z",
        "merged_at": null,
        "body": "These commits are just a little clean up around encoding handling in the Ruby extension.  Each commit has commits for why I made the change.  In some cases, we can avoid some runtime overhead, in addition to deleting some code.\r\n\r\nI *think* we can eventually remove the `kRubyStringUtf8Encoding` encoding constants.  (It looks like `kRubyStringASCIIEncoding` isn't used at all and can be removed).\r\n\r\nThanks!",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 133,
        "deletions": 11,
        "changed_files": 5,
        "created_at": "2018-10-02T16:38:12Z",
        "closed_at": "2018-10-02T17:45:19Z",
        "merged_at": "2018-10-02T17:45:19Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2018-10-02T11:12:45Z",
        "closed_at": "2018-10-08T20:41:52Z",
        "merged_at": "2018-10-08T20:41:51Z",
        "body": "fix #5213 If nothing else, this will be one less network connection to Maven central on build. ",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-10-02T10:17:09Z",
        "closed_at": "2018-10-02T22:43:17Z",
        "merged_at": "2018-10-02T22:43:17Z",
        "body": "The former is the proper converse of _open, which is used in\r\n::google::protobuf::internal::win32::open. This resolves issue #5209.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2018-10-01T23:23:13Z",
        "closed_at": "2018-10-05T23:38:17Z",
        "merged_at": "2018-10-05T23:38:17Z",
        "body": "This fixes a bug. When parsing a struct from JSON like\r\n```python\r\nstruct = json_format.Parse('{\"k\": {}}', Struct())\r\n```\r\nthen the struct's \"k\" value would end up not initialized, and accessing\r\nthe value would raise an error.\r\n```python\r\nIn[1]: struct['k']\r\nValueError: Value not set\r\n```\r\nThat seems to be because the Struct field of the Value was not set.\r\n```python\r\nIn[2]: struct\r\nOut[2]:\r\nfields {\r\n  key: \"k\"\r\n  value {\r\n  }\r\n}\r\n```\r\n\r\nThis commit makes sure that the Value's Struct field is initialized even\r\nif the Struct has no values itself.\r\n\r\nThis commit also extends a test to cover this case.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-10-01T19:41:57Z",
        "closed_at": "2018-10-01T20:52:46Z",
        "merged_at": "2018-10-01T20:52:46Z",
        "body": "Added link to VSCode-Proto3 extension in Other Utilities section",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 1,
        "changed_files": 4,
        "created_at": "2018-10-01T06:40:06Z",
        "closed_at": "2018-10-05T18:06:03Z",
        "merged_at": "2018-10-05T18:06:03Z",
        "body": "Adds option \"`serializable`\" for C# protoc compiler that adds a `[global::System.SerializableAttribute]` above all generated classes.\r\n\r\nResolves #5148 ",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 24,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2018-10-01T04:14:03Z",
        "closed_at": "2018-10-05T18:06:58Z",
        "merged_at": "2018-10-05T18:06:58Z",
        "body": "Adds method `Any.Is` plus tests\r\n\r\nResolves #5066 ",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-10-01T01:19:52Z",
        "closed_at": "2018-10-01T03:59:55Z",
        "merged_at": "2018-10-01T03:59:55Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2018-09-29T14:06:52Z",
        "closed_at": "2018-10-10T17:50:09Z",
        "merged_at": "2018-10-10T17:50:09Z",
        "body": "this pull request try to solve the issue #5200",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-09-28T09:10:10Z",
        "closed_at": "2018-10-15T20:55:00Z",
        "merged_at": "2018-10-15T20:55:00Z",
        "body": "This reverts commit 93f6b67eb217812266fb29a00977046789863aca.\r\n\r\nProtoc adds already the relative path to the output directory.\r\nTherefore, we have to remove this again from the output directory\r\nto prevent adding it twice.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 9,
        "changed_files": 1,
        "created_at": "2018-09-27T21:47:28Z",
        "closed_at": "2018-10-04T23:06:53Z",
        "merged_at": "2018-10-04T23:06:53Z",
        "body": "Many classes within collections were moved to collections.abc in Python\r\n3.3 -- their usage as imported directly from collections is now\r\ndeprecated as of Python 3.7 and will be removed soon.\r\n\r\nThe fallback import added in this PR can be removed entirely when\r\nsupport for versions of Python prior to 3.3 is dropped.\r\n\r\nFixes #5135 \r\n\r\n@anandolee I believe you wanted to review this.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2018-09-27T14:57:51Z",
        "closed_at": "2018-10-02T21:13:01Z",
        "merged_at": null,
        "body": "Last attempt. Having problems with CLA.\r\n\r\nThis is to fix #4865, but it looks like the user never submitted a PR.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2018-09-27T03:11:46Z",
        "closed_at": "2018-09-27T14:53:38Z",
        "merged_at": null,
        "body": "This is to fix #4865, but it looks like the user never submitted a PR.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 136,
        "deletions": 33,
        "changed_files": 7,
        "created_at": "2018-09-25T23:06:06Z",
        "closed_at": "2018-10-22T02:59:55Z",
        "merged_at": "2018-10-22T02:59:54Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 619,
        "deletions": 173,
        "changed_files": 30,
        "created_at": "2018-09-25T03:05:00Z",
        "closed_at": "2018-11-05T21:37:09Z",
        "merged_at": "2018-11-05T21:37:09Z",
        "body": "Another day, another proto2 PR for C#.\r\n\r\nThis PR adds support for groups (including unknown field support) in the C# library and code generator.\r\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-09-24T00:08:29Z",
        "closed_at": "2018-09-24T05:52:57Z",
        "merged_at": "2018-09-24T05:52:57Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 27,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2018-09-23T12:34:28Z",
        "closed_at": "2021-03-04T21:00:19Z",
        "merged_at": null,
        "body": "If the number of Fields is greater than 16, specifying initialCapacity can improve performance.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-09-21T11:47:38Z",
        "closed_at": "2018-09-24T17:51:53Z",
        "merged_at": "2018-09-24T17:51:53Z",
        "body": "Add build status badge for Dart",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 39,
        "deletions": 33,
        "changed_files": 3,
        "created_at": "2018-09-19T19:57:19Z",
        "closed_at": "2018-09-24T20:52:53Z",
        "merged_at": "2018-09-24T20:52:53Z",
        "body": "Update comments to discuss leap smearing in detail.\r\n\r\nFixes #1890.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 26,
        "deletions": 305,
        "changed_files": 6,
        "created_at": "2018-09-19T19:42:40Z",
        "closed_at": "2021-06-07T13:42:37Z",
        "merged_at": null,
        "body": "and related functions.\r\n\r\nCloses: #4794 ",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 43,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-09-19T04:08:29Z",
        "closed_at": "2018-09-19T11:38:06Z",
        "merged_at": null,
        "body": "This PR is for issue #5138.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 90,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2018-09-19T00:43:30Z",
        "closed_at": "2021-06-04T20:23:37Z",
        "merged_at": null,
        "body": "For #3965\r\n- [x] add comparisons to Timestamp\r\n  - [x] Timestamp\r\n  - [x] ~~datetime~~ requires `timetuple` attribute for python2. Didn't add to avoid surprises\r\n  - [x] test\r\n- [x] add comparisons to Duration\r\n  - [x] Duration\r\n  - [x] ~~timedelta~~ not doable in python2 (without a big mess?)\r\n  - [x] test\r\n- [x] ~~add comparisons to FieldMask~~ moved to a separate [branch](https://github.com/Code0x58/protobuf/tree/fieldmask-total-ordering)",
        "comments": 11
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2018-09-18T14:48:00Z",
        "closed_at": "2018-10-05T18:07:55Z",
        "merged_at": "2018-10-05T18:07:55Z",
        "body": "ParseFromString is documented as returning the number of bytes parsed,\r\nand the C++ implementation does this, so the Python implementation\r\nshould too.\r\n\r\nSee #5165.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-09-16T15:05:59Z",
        "closed_at": "2018-09-17T20:53:19Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2018-09-15T05:49:08Z",
        "closed_at": "2018-09-19T19:18:24Z",
        "merged_at": null,
        "body": "As of January 12, 2016, Microsoft no longer supports .NET 4.5 or .NET 4.5.1, so let's use 4.5.2 instead.",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-09-14T03:54:55Z",
        "closed_at": "2019-01-30T22:17:59Z",
        "merged_at": null,
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 801,
        "deletions": 48,
        "changed_files": 14,
        "created_at": "2018-09-13T13:10:31Z",
        "closed_at": "2018-09-22T08:09:16Z",
        "merged_at": "2018-09-22T08:09:16Z",
        "body": "This is primarily for access to comments, which would be expected to be available in a protoc plugin.\r\n\r\nThe implementation has two fiddly aspects:\r\n\r\n- We use a Lazy<T> to avoid building the map before cross-linking. An alternative would be to crosslink at the end of the constructor, and remove the calls to CrossLink elsewhere. This would be generally better IMO, but deviate from the Java code.\r\n- The casts to IReadOnlyList<DescriptorBase> are unfortunate. They'll always work, because these lists are always ReadOnlyCollection<T> for a descriptor type... but we can't use IList<DescriptorBase> as that's not covariant, and it's annoyingly fiddly to change the field to be of type ReadOnlyCollection<T>.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 8,
        "changed_files": 3,
        "created_at": "2018-09-13T02:21:59Z",
        "closed_at": "2018-11-19T21:53:51Z",
        "merged_at": "2018-11-19T21:53:51Z",
        "body": "Sun Studio 12.4 is required because it provides the first C++11 compiler from Sun. However, SunCC in 12.4 fails to configure because it is so buggy. The SunCC compiler in Sun Studio 12.5 crashes on the m4 macro test test_type_deduction (line 257). The m4 test can probably be reworked so Sun Studio 12.5 is supported.\r\n\r\nThe Sun Studio 12.6 compiler finishes configuring. At the moment it looks like Sun Studio 12.6 is the only one supported.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 19,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2018-09-08T00:50:50Z",
        "closed_at": "2018-09-17T20:41:26Z",
        "merged_at": "2018-09-17T20:41:26Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 512,
        "deletions": 74,
        "changed_files": 14,
        "created_at": "2018-09-07T20:18:21Z",
        "closed_at": "2018-10-07T23:56:42Z",
        "merged_at": "2018-10-07T23:56:42Z",
        "body": "This PR adds support for automatic conversion from PHP native types to protobuf wrapper types in message setters. Still pending:\r\n- Support for repeated fields\r\n- PHPDoc updates\r\n\r\n@TeBoring PTAL and let me know if this is the approach you had in mind",
        "comments": 22
    },
    {
        "merged": true,
        "additions": 279,
        "deletions": 0,
        "changed_files": 8,
        "created_at": "2018-09-07T19:34:32Z",
        "closed_at": "2018-09-07T23:47:47Z",
        "merged_at": "2018-09-07T23:47:47Z",
        "body": "That directory is missing in upstream/master so the artifact builds are failing:\r\n\r\n```\r\n[09:11:59][ERROR] Failed to get build config\r\ncom.google.devtools.kokoro.config.ConfigException: Build config /tmp/workspace/workspace/protobuf/github/master/release/python/macos/release/src/github/protobuf/kokoro/release/python/macos/release.cfg does not exist\r\n```\r\n\r\nCopying the missing files from 3.6.x branch.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 69,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2018-09-07T16:19:50Z",
        "closed_at": "2018-09-07T19:23:09Z",
        "merged_at": "2018-09-07T19:23:09Z",
        "body": "- the collection job will run once build_all_artifacts finishes (i.e. when all child subjobs for individual languages/platforms finish).\r\n- it collects all the artifacts from the predecessor jobs into a single directory tree (right now the directory layout is messy, improvements can be done as a followup to make the resulting directory structure more intuitive).\r\n- as a side effect, it also collects all the protoc artifacts needed to build Google.Protobuf.Tools  nuget package and builds it.\r\n\r\nImprovements can definitely be made but the current scripts works so IMHO it's worth merging and improve the script as a followup.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-09-07T12:35:09Z",
        "closed_at": "2018-09-10T20:46:38Z",
        "merged_at": "2018-09-10T20:46:38Z",
        "body": "fix #5116 ",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 105,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2018-09-07T09:49:10Z",
        "closed_at": "2018-11-12T19:31:43Z",
        "merged_at": "2018-11-12T19:31:43Z",
        "body": "@garrettjonesgoogle Is this what you were thinking of?",
        "comments": 31
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2018-09-06T20:48:03Z",
        "closed_at": "2018-09-10T20:35:39Z",
        "merged_at": "2018-09-10T20:35:39Z",
        "body": "Python protobuf has long been a single-source codebase. 2to3 shouldn't need to run in setup.py.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-09-06T07:44:26Z",
        "closed_at": "2018-09-07T19:06:49Z",
        "merged_at": "2018-09-07T19:06:48Z",
        "body": "Added a few details to help users with gradle get started. I felt like this was missing when doing a project setup.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 15849,
        "deletions": 15969,
        "changed_files": 364,
        "created_at": "2018-09-04T18:02:16Z",
        "closed_at": "2018-09-07T23:15:38Z",
        "merged_at": "2018-09-07T23:15:38Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3407,
        "deletions": 3797,
        "changed_files": 7,
        "created_at": "2018-09-03T18:43:21Z",
        "closed_at": "2018-09-23T01:57:44Z",
        "merged_at": "2018-09-23T01:57:44Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2018-09-03T12:27:42Z",
        "closed_at": "2018-09-10T20:47:08Z",
        "merged_at": "2018-09-10T20:47:08Z",
        "body": "This will find .bat files as well as .exe files when searching for a plugin on the PATH.\r\n\r\nOnly affects the case when plugins are invoked from PATH.\r\n\r\nThis does not change the behavior when compiled under Cygwin.\r\n\r\nThis is a fix of https://github.com/protocolbuffers/protobuf/issues/5084",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-09-03T07:59:57Z",
        "closed_at": "2018-09-06T02:31:59Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-09-02T21:24:32Z",
        "closed_at": "2018-09-03T03:57:46Z",
        "merged_at": "2018-09-03T03:57:46Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2018-08-31T03:51:29Z",
        "closed_at": "2018-08-31T17:47:59Z",
        "merged_at": "2018-08-31T17:47:59Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 41,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2018-08-30T15:48:15Z",
        "closed_at": "2018-09-03T03:33:13Z",
        "merged_at": "2018-09-03T03:33:13Z",
        "body": "This change resolves #5086.  Thanks to @mercret as well for the help.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2018-08-30T05:58:49Z",
        "closed_at": "2018-08-31T17:48:18Z",
        "merged_at": "2018-08-31T17:48:18Z",
        "body": "Previously, well known types only implement Message interface but not inhert it.\r\nFix the problem by calling zend_do_inheritance.\r\n\r\nFixes #5090 ",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2018-08-30T05:10:06Z",
        "closed_at": "2018-09-03T18:35:21Z",
        "merged_at": null,
        "body": "Sync with upb",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 85,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-08-29T23:05:12Z",
        "closed_at": "2018-09-01T15:59:09Z",
        "merged_at": "2018-09-01T15:59:09Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 44,
        "deletions": 12,
        "changed_files": 2,
        "created_at": "2018-08-29T09:36:30Z",
        "closed_at": "2018-09-10T21:00:37Z",
        "merged_at": "2018-09-10T21:00:37Z",
        "body": "This performs more testing for field descriptors built from byte\r\nstrings too, but that's mostly incidental. The chief intent is to\r\ncheck that cross-linking occurs.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 24,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2018-08-28T12:18:52Z",
        "closed_at": "2018-09-10T23:47:23Z",
        "merged_at": "2018-09-10T23:47:22Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2018-08-28T01:55:41Z",
        "closed_at": "2018-08-29T21:20:32Z",
        "merged_at": "2018-08-29T21:20:31Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2018-08-24T21:12:31Z",
        "closed_at": "2018-08-29T21:15:33Z",
        "merged_at": "2018-08-29T21:15:33Z",
        "body": "Update my projects' (DCCL / Goby) URLs.\r\nPropose new extension for CGSN Mooring project.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 53,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2018-08-24T19:32:06Z",
        "closed_at": "2018-09-02T17:07:14Z",
        "merged_at": "2018-09-02T17:07:14Z",
        "body": "I want to use the conformance tests from upb, which is switching\r\nto CMake.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-08-24T14:19:43Z",
        "closed_at": "2018-08-29T21:13:05Z",
        "merged_at": "2018-08-29T21:13:05Z",
        "body": "Update options.md | fix website url for C# port of protocol buffers.. From `http://github.com/jskeet/dotnet-protobufs` to `https://github.com/jskeet/protobuf-csharp-port`",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2018-08-24T13:51:15Z",
        "closed_at": "2018-09-24T20:45:01Z",
        "merged_at": null,
        "body": "In the instructions for filing for global extensions, remove the language about creating\r\na service in the future, and add a pointer to\r\nhttps://github.com/protocolbuffers/protobuf/blob/master/docs/options.md",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2018-08-23T19:45:04Z",
        "closed_at": "2018-08-23T23:17:25Z",
        "merged_at": "2018-08-23T23:17:25Z",
        "body": "These changes require building new docker images and without new images\r\nour kokoro tests are all failing.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-08-23T19:26:36Z",
        "closed_at": "2018-08-31T03:52:02Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 202,
        "deletions": 230,
        "changed_files": 4,
        "created_at": "2018-08-22T20:51:06Z",
        "closed_at": "2018-09-06T22:02:05Z",
        "merged_at": "2018-09-06T22:02:05Z",
        "body": "This change adds a source dependency of the test suite implementaion\r\nclass in the main function. For generality reason, the main function is\r\nmoved to the file of the test suite implemetation.  New test suite\r\nimplementation will need to implement the main function.\r\nIn order to make it easy for test suite implementation to implement the\r\nmain function, this change also refactor out the common code out of the\r\nmain function.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 84,
        "deletions": 84,
        "changed_files": 52,
        "created_at": "2018-08-22T18:57:19Z",
        "closed_at": "2018-08-23T01:32:11Z",
        "merged_at": "2018-08-23T01:32:11Z",
        "body": "Replaced every github/google/protobuf with github/protocolbuffers/protobuf.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-08-21T19:00:09Z",
        "closed_at": "2019-06-13T13:17:17Z",
        "merged_at": null,
        "body": "Calling `Timestamp.FromJsonString()` with a string that contains no timezone will result in a Python `UnboundLocalError` exception. For example:\r\n\r\n```python\r\nTimestamp.FromJsonString('2018-08-21T18:56:51.707893')\r\n```\r\n\r\nThis change causes a `ParseError` to be raised if a matched `-` comes from the initial `YYYY-MM-DD` date.\r\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 24,
        "deletions": 9,
        "changed_files": 1,
        "created_at": "2018-08-21T14:37:33Z",
        "closed_at": "2018-09-24T20:45:12Z",
        "merged_at": null,
        "body": "Hi, \r\nI saw the bug #4907 and decided to fix the printer to print the values of repeated primitives to be as in c++.\r\nI didn't touch the parser, because the parser already knows to work with this prints already.\r\n\r\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-08-15T19:09:17Z",
        "closed_at": "2018-08-20T20:40:02Z",
        "merged_at": "2018-08-20T20:40:02Z",
        "body": "This removes the need for --incompatible_disable_deprecated_attr_params when using Protobuf",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2018-08-15T14:13:54Z",
        "closed_at": "2018-08-16T18:40:49Z",
        "merged_at": "2018-08-16T18:40:49Z",
        "body": "xref: #4717",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 80,
        "deletions": 4,
        "changed_files": 7,
        "created_at": "2018-08-15T13:46:18Z",
        "closed_at": "2018-08-20T20:37:39Z",
        "merged_at": "2018-08-20T20:37:39Z",
        "body": "The 3.6.x branch contains part of the code from the #4579 (the `libprotoc_rc_files` in `make/libprotoc.cmake` file)\r\n\r\nThis backports the `version.rc` implementation to the 3.6.x branch.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1262,
        "deletions": 17,
        "changed_files": 6,
        "created_at": "2018-08-14T15:35:35Z",
        "closed_at": "2018-10-08T19:54:06Z",
        "merged_at": "2018-10-08T19:54:06Z",
        "body": "Fixes #4325 \r\n\r\nI ported the functionality from Java to C#. Still a bit unsure if we should keep the classes seperate as `Utils` or just merging it all into `FieldMaskTreePartial` (would be getting a huge class...). All other `Utils` from Java have been ported into the `*Partial` classes, but those were mainly static classes anyway. The `FieldMaskUtil` has a complete `FieldMaskTree` helper class.\r\n\r\nRight now, this would allow for easy portability by keeping the `Util` but also fit with the other classes by creating static helpers in `Partial`. Any preferences?\r\n\r\n@anandolee offered in #4325 to do the PR",
        "comments": 13
    },
    {
        "merged": true,
        "additions": 289,
        "deletions": 21,
        "changed_files": 5,
        "created_at": "2018-08-14T14:07:22Z",
        "closed_at": "2019-07-29T21:07:44Z",
        "merged_at": "2019-07-29T21:07:44Z",
        "body": "release notes: no\r\n\r\nFixes https://github.com/google/protobuf/issues/3957\r\n",
        "comments": 15
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-08-13T23:45:30Z",
        "closed_at": "2018-08-14T00:49:03Z",
        "merged_at": "2018-08-14T00:49:03Z",
        "body": "Document the cases where the wrapper well-known types are not useful.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2018-08-13T20:53:24Z",
        "closed_at": "2018-08-14T18:17:17Z",
        "merged_at": "2018-08-14T18:17:17Z",
        "body": "fixes #5029",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 125,
        "deletions": 124,
        "changed_files": 38,
        "created_at": "2018-08-13T19:33:37Z",
        "closed_at": "2018-08-13T21:41:06Z",
        "merged_at": "2018-08-13T21:41:06Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 24,
        "deletions": 20,
        "changed_files": 5,
        "created_at": "2018-08-13T08:10:00Z",
        "closed_at": "2018-08-20T20:48:47Z",
        "merged_at": null,
        "body": "",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 121,
        "deletions": 5,
        "changed_files": 7,
        "created_at": "2018-08-13T06:15:38Z",
        "closed_at": "2018-08-13T17:18:41Z",
        "merged_at": null,
        "body": "Though this won't work in javascript, keeping this option will be useful for other languages.\r\nRelated issue: https://github.com/google/protobuf/issues/2679",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 123,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2018-08-11T00:10:28Z",
        "closed_at": "2018-08-13T17:33:57Z",
        "merged_at": "2018-08-13T17:33:57Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-08-10T23:44:25Z",
        "closed_at": "2018-08-13T22:20:49Z",
        "merged_at": "2018-08-13T22:20:49Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 589,
        "deletions": 221,
        "changed_files": 3,
        "created_at": "2018-08-10T18:11:07Z",
        "closed_at": "2018-08-13T20:36:09Z",
        "merged_at": "2018-08-13T20:36:09Z",
        "body": "Copy paste upb change into protobuf repository.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 728,
        "deletions": 34,
        "changed_files": 22,
        "created_at": "2018-08-10T05:35:52Z",
        "closed_at": "2018-08-11T00:27:30Z",
        "merged_at": null,
        "body": "This PR is created for code review purpose. It doesn't include the actual down-integration commit but only commits used to fix issues caused by the down-integration commit.\r\n\r\n1. Fix C++ tests.\r\n  * Add missing files to Makefile.am and fix distcheck in tests.sh\r\n  * Remove BUILT_SOURCES from conformance/Makefile.am.\r\n  * Add some missing override keyword.\r\n  * Add a type cast to int64 because our StrCat() in stubs can't handle size_t.\r\n2. Fix Java tests.\r\n  * Add missing test dependency on guava in pom.xml.\r\n  * Include newly referenced test data in test resources.\r\n  * Manually fix map_lite_test.proto which is overwritten because it's mapped\r\n    from map_test.proto in google3.\r\n  * Add back \"optimize_for = LITE_RUNTIME\" which is still needed to keep the\r\n    opensource test passing as it's still running lite tests.\r\n  * Add a type cast in newBuilder() because without it the code doesn't compile\r\n    with openjdk javac 1.8 (the compiler can't figure if it's the right type\r\n    due to complex generic typing).\r\n3. Fix Python tests.\r\n  * Remove/replace references to <hash_map>.\r\n  * Suppress more warnings in setup.py.\r\n  * Replace incorrect header inclusion for google/protobuf/proto_api.h.\r\n  * Add strings::EndsWith to google/protobuf/stubs/strutil.h because it's\r\n    referenced in the updated python C extension code.\r\n  * Replace proto2 with google::protobuf. The proto2 name is leaked to\r\n    opensource because we removed the subsitition rule for proto2 namespace\r\n    but only fixed C++ source code and forgot to update python C extension code.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-08-09T14:49:59Z",
        "closed_at": "2018-08-20T20:50:17Z",
        "merged_at": "2018-08-20T20:50:17Z",
        "body": "On Windows, both '/' and '\\' are valid path separators. So when creating\r\nthe parent directories, split the filename on both\r\n\r\nSigned-off-by: Akshat Gokhale <agokhale@pivotal.io>",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 168,
        "deletions": 40,
        "changed_files": 6,
        "created_at": "2018-08-09T02:54:08Z",
        "closed_at": "2018-08-20T21:00:03Z",
        "merged_at": "2018-08-20T21:00:03Z",
        "body": "Related to #658 and #5007.\r\n\r\nThis doesn't yet implement DynamicMessage, but my intention is to do that next, as well as possibly including plugin.proto into the package (with a change, which I'll explain as I go). I'd include a sample protoc plugin too.\r\n\r\ncc @chrisbacon",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-08-09T00:28:30Z",
        "closed_at": "2018-08-09T03:40:42Z",
        "merged_at": "2018-08-09T03:40:42Z",
        "body": "The old version had a NOP for loop, which doesn't make sense. I'm pretty\r\nsure this was the original intention. Newer GCC's\r\n-Wunused-but-set-variable flags the old version.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 31210,
        "deletions": 19409,
        "changed_files": 451,
        "created_at": "2018-08-09T00:22:54Z",
        "closed_at": "2018-08-10T05:30:08Z",
        "merged_at": "2018-08-10T05:30:08Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-08-08T23:30:35Z",
        "closed_at": "2018-09-10T20:57:32Z",
        "merged_at": null,
        "body": "> .../include/google/protobuf/wire_format_lite.h(863):\r\n> warning C4146: unary minus operator applied to unsigned type, result\r\n> still unsigned",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 26,
        "changed_files": 1,
        "created_at": "2018-08-07T18:46:12Z",
        "closed_at": "2019-03-01T01:11:49Z",
        "merged_at": "2019-03-01T01:11:49Z",
        "body": "The std::iterator class is being deprecated on MSVC++,\r\nand currently if the compilation flag /std:c++latest\r\nis used a warning is issued in this regard if any\r\niterators use the class as a base class.\r\n\r\nIf an external source file being compiled includes\r\nthe repeated_field.h header, the iterator clases\r\nRepeatedPtrIterator and RepeatedPtrOverPtrsIterator\r\ntrigger the warning.\r\n\r\nThis change solves the warning and should avoid it in\r\nthe future when the default is to deprecate the class.",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-08-07T14:47:51Z",
        "closed_at": "2018-08-08T00:47:58Z",
        "merged_at": "2018-08-08T00:47:58Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 148,
        "deletions": 148,
        "changed_files": 23,
        "created_at": "2018-08-06T15:11:46Z",
        "closed_at": "2018-08-07T19:05:29Z",
        "merged_at": "2018-08-07T19:05:29Z",
        "body": "\u2026bug/stubs",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-08-05T09:59:44Z",
        "closed_at": "2018-08-06T20:34:14Z",
        "merged_at": "2018-08-06T20:34:14Z",
        "body": "To resolve the #5004 ",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 101,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2018-08-04T02:11:03Z",
        "closed_at": "2018-08-07T05:07:53Z",
        "merged_at": "2018-08-07T05:07:53Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 19,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2018-08-03T21:43:56Z",
        "closed_at": "2018-08-03T23:26:19Z",
        "merged_at": "2018-08-03T23:26:19Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 18,
        "deletions": 2,
        "changed_files": 4,
        "created_at": "2018-08-03T08:06:39Z",
        "closed_at": "2018-08-03T19:11:19Z",
        "merged_at": "2018-08-03T19:11:19Z",
        "body": "Backports https://github.com/google/protobuf/pull/4869 and https://github.com/google/protobuf/pull/4912 to 3.6.x branch.\r\n\r\nWith this, we should be able to build Google.Protobuf nuget for v3.6.1 release with kokoro.\r\n\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 53,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2018-08-03T04:10:31Z",
        "closed_at": "2018-08-14T04:40:11Z",
        "merged_at": null,
        "body": "When developing with Ruby on Rails, I would like to reload the protobuf definition. \r\nIf I can clean generate_pool, I can accomplish this purpose.\r\n\r\n```\r\nGoogle::Protobuf::DescriptorPool.generated_pool.build do\r\n  add_message \"proto.example\" do\r\n    optional :test, :string, 1\r\n  end\r\nend\r\n\r\nGoogle::Protobuf::DescriptorPool.generated_pool.clear  # added\r\n\r\nGoogle::Protobuf::DescriptorPool.generated_pool.build do\r\n    add_message \"proto.example\" do\r\n      optional :test, :int32, 1\r\n    end\r\nend\r\n```\r\n\r\nThis fixes #3814.",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-08-02T19:25:30Z",
        "closed_at": "2018-08-24T18:32:26Z",
        "merged_at": null,
        "body": "A Bazel project wishing to depend on this target, for, say, linking in the objc\r\nruntime with protoc-generated objc files needs to have the hdrs/textual_hdrs\r\nfully defined to avoid import/link errors.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 126,
        "deletions": 80,
        "changed_files": 38,
        "created_at": "2018-08-01T20:47:10Z",
        "closed_at": "2018-08-01T21:56:09Z",
        "merged_at": "2018-08-01T21:56:09Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 8,
        "changed_files": 2,
        "created_at": "2018-08-01T19:03:36Z",
        "closed_at": "2018-08-01T23:11:23Z",
        "merged_at": "2018-08-01T23:11:23Z",
        "body": "This was fairly straightforward using the existing build-protoc.sh\r\nscript. The only problem I ran into was that the x86 Docker builds\r\ncreate output directories owned by root, which caused some permission\r\nissues. Fortunately it was easy to get around that just by doing those\r\nDocker builds last.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 789,
        "deletions": 155,
        "changed_files": 6,
        "created_at": "2018-08-01T17:43:05Z",
        "closed_at": "2018-08-07T07:42:46Z",
        "merged_at": null,
        "body": "/cc: @jtattermusch \r\n\r\nThis is the pull request for #3431  \r\n\r\nIt will consist of multiple commits introducing incremental, but reverse compatible changes.\r\n\r\n1) [Breaking change] Changes compatibility from .NET Standard 1.0 to .NET Standard 1.1. `System.Memory` requires .NET Standard 1.1 and .NET Standard 1.0 has no real use (see https://docs.microsoft.com/en-us/dotnet/standard/net-standard). Keeping .NET Standard 1.0 compatibility will be costly in terms of maintenance a lot of `#if`'s are required.\r\n\r\n\u2026 more to come",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-08-01T11:54:49Z",
        "closed_at": "2018-08-03T19:09:18Z",
        "merged_at": null,
        "body": "`make install` will add missed header files to appropriate path",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-08-01T11:38:05Z",
        "closed_at": "2018-08-02T07:02:27Z",
        "merged_at": null,
        "body": "`make install` will add missed header files to appropriate path",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-08-01T09:37:35Z",
        "closed_at": "2018-08-03T02:49:45Z",
        "merged_at": "2018-08-03T02:49:45Z",
        "body": "adding of hyperlink for the instruction for getting the download php version",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 21,
        "deletions": 9,
        "changed_files": 3,
        "created_at": "2018-07-31T18:37:53Z",
        "closed_at": "2018-08-08T18:01:54Z",
        "merged_at": "2018-08-08T18:01:54Z",
        "body": "Previously skip group forgot to call skipField. \r\nFix this and make the test case more complicated.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-07-31T04:56:57Z",
        "closed_at": "2018-07-31T20:25:23Z",
        "merged_at": "2018-07-31T20:25:23Z",
        "body": "Fixes #2543",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-07-30T10:16:49Z",
        "closed_at": "2018-07-30T17:34:57Z",
        "merged_at": "2018-07-30T17:34:57Z",
        "body": "I have added the xsrpcj RPC implementation for java",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2018-07-28T01:00:43Z",
        "closed_at": "2018-07-30T18:43:15Z",
        "merged_at": "2018-07-30T18:43:15Z",
        "body": "Just found recent dashboard build failed due to benchmark submodule init failed.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2018-07-27T22:53:32Z",
        "closed_at": "2018-07-30T16:30:09Z",
        "merged_at": "2018-07-30T16:30:09Z",
        "body": "I made a few small fixes to the documentation related to publishing\r\nprotoc artifacts:\r\n- The target directory for Mac should be called osx instead of macos.\r\n- There needs to be a directory for aarch_64.\r\n- We need to avoid calling \"mvn clean\" inside the protoc-artifacts\r\n  directory, since that will delete the contents of the target/\r\n  subdirectory.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 57,
        "deletions": 45,
        "changed_files": 27,
        "created_at": "2018-07-27T17:57:14Z",
        "closed_at": "2018-07-27T20:30:29Z",
        "merged_at": "2018-07-27T20:30:29Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 30,
        "deletions": 7,
        "changed_files": 2,
        "created_at": "2018-07-26T06:40:20Z",
        "closed_at": "2018-07-26T20:52:23Z",
        "merged_at": "2018-07-26T20:52:23Z",
        "body": "php c extension has different result for conformance test for different\r\nphp version and architecture. Try to add conformance back for php 7.1 c extension first.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 111,
        "deletions": 80,
        "changed_files": 15,
        "created_at": "2018-07-25T21:59:27Z",
        "closed_at": "2018-07-27T19:24:43Z",
        "merged_at": "2018-07-27T19:24:43Z",
        "body": "This change introduce a TestCategory enum to ConformanceRequest. Existing tests\r\nare divided into three categories: binary format test, json format test and json\r\nformat (ignore unknown when parsing) test. For the previous two categories, there\r\nis no change to existing testee programs. For tests with the last category, testee programs\r\nshould either enable ignoring unknown field during json parsing or skip the test.",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 40,
        "deletions": 9,
        "changed_files": 3,
        "created_at": "2018-07-25T18:31:58Z",
        "closed_at": "2019-03-15T00:15:50Z",
        "merged_at": null,
        "body": "This fixes a bug in the Python code where reflection generates classes structurally identical to, and with almost the same names as, but not actually equal to, the protoc-generated classes. This means that MergeFrom between two seemingly identical classes fails because of a type mismatch.\r\n\r\nThis breaks one of the most important ways to use MessageFactory (reflection), where someone stores both the bytes of a protobuf and the name of the proto class, and later on reads it back using the same: the resulting object created is of one of the reflected types, and any other code trying to interoperate will be using a generated type, and Hilarity Ensues.\r\n\r\nThis PR is a resurrection of a previous one (https://github.com/google/protobuf/pull/3597) which fixed this issue in `reflection.MakeClass`; that PR was closed when MakeClass was deprecated in favor of MessageFactory, but the bug persists. This PR fixes the bug in MessageFactory.",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2018-07-24T22:55:45Z",
        "closed_at": "2018-08-06T18:03:06Z",
        "merged_at": null,
        "body": "For example, for this proto file:\r\n\r\n```\r\nsyntax = \"proto3\";\r\nimport \"google/protobuf/struct.proto\";\r\n\r\nmessage Parent {\r\n  map<string, Child> children = 1;\r\n}\r\n\r\nmessage Child {\r\n  string name = 1;\r\n}\r\n```\r\n\r\nWe used to have:\r\n\r\n```\r\nirb(main):001:0> Parent.new(children: {'a' => Child.new(name: 'a')}).to_h\r\n=> {:children=>{\"a\"=>{:name=>\"a\"}}}\r\n```\r\n\r\nNow:\r\n\r\n```\r\nirb(main):001:0> Parent.new(children: {'a' => Child.new(name: 'a')}).to_h\r\n=> {:children=>{\"a\"=><Child: name: \"a\">}}\r\n```\r\n\r\nIt appears this changed in #2847 / #396, but it's unclear what the intent\r\nwas with these lines, so I'm assuming this was an unintended side-effect\r\n(it's not needed to solve #1761).",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-07-22T09:01:40Z",
        "closed_at": "2018-07-23T20:35:42Z",
        "merged_at": "2018-07-23T20:35:42Z",
        "body": "Visual studio keeps a lot of own state in .vs folder. This makes development much easier.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 134,
        "deletions": 49,
        "changed_files": 11,
        "created_at": "2018-07-21T21:19:09Z",
        "closed_at": "2018-07-30T20:34:12Z",
        "merged_at": null,
        "body": "Before sending a request for optional feature, test runner first send a handshake request to testee.\r\nThe handshake request has a string field \"optional_test_name\" which is the name of test to be tested.\r\nIf testee thinks it's ok to run the specified test, it should set the \"optional_test_needed\" in the\r\nresponse. Test runner will run the actual test if found \"optional_teset_needed\" is set.\r\n\r\nSome optional tests require additional changes in testee. Therefore, some testees may have simply\r\nadded these tests to their failure list instead of making the testee work. For these testees, they need\r\nto remove those tests from their failure list after this change.\r\n\r\nFor other testee, this change won't break them.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 96,
        "changed_files": 6,
        "created_at": "2018-07-21T16:00:32Z",
        "closed_at": "2018-07-23T00:14:24Z",
        "merged_at": "2018-07-23T00:14:24Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-07-21T14:33:10Z",
        "closed_at": "2018-07-21T15:34:17Z",
        "merged_at": "2018-07-21T15:34:17Z",
        "body": "Added Netifi Proteus to Registered Extensions",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 266,
        "deletions": 2,
        "changed_files": 6,
        "created_at": "2018-07-20T23:10:45Z",
        "closed_at": "2018-08-10T18:07:05Z",
        "merged_at": "2018-08-10T18:07:05Z",
        "body": "Protobuf.js performance:\r\n```\r\n\r\nProtobufJs Benchmark: \r\nbenchmarking message benchmarks.proto2.GoogleMessage2 of dataset file /usr/local/google/home/yilunchong/mygit/protobuf/benchmarks/datasets/google_message2/dataset.google_message2.pb's performance ...\r\n\r\nprotobuf.js static decoding x 2,618 ops/sec \u00b11.23% (90 runs sampled)\r\nprotobuf.js static encoding x 782 ops/sec \u00b11.16% (91 runs sampled)\r\nThroughput for decoding: 208.55442550417717MB/s\r\nThroughput for encoding: 62.331349090264304MB/s\r\n\r\nbenchmarking message benchmarks.proto3.GoogleMessage1 of dataset file /usr/local/google/home/yilunchong/mygit/protobuf/benchmarks/datasets/google_message1/proto3/dataset.google_message1_proto3.pb's performance ...\r\n\r\nprotobuf.js static decoding x 526,123 ops/sec \u00b10.66% (88 runs sampled)\r\nprotobuf.js static encoding x 192,045 ops/sec \u00b11.30% (92 runs sampled)\r\nThroughput for decoding: 113.64940927321399MB/s\r\nThroughput for encoding: 41.2206793225958MB/s\r\n\r\nbenchmarking message benchmarks.proto2.GoogleMessage1 of dataset file /usr/local/google/home/yilunchong/mygit/protobuf/benchmarks/datasets/google_message1/proto2/dataset.google_message1_proto2.pb's performance ...\r\n\r\nprotobuf.js static decoding x 514,598 ops/sec \u00b10.34% (93 runs sampled)\r\nprotobuf.js static encoding x 198,119 ops/sec \u00b11.66% (90 runs sampled)\r\nThroughput for decoding: 111.50854424334813MB/s\r\nThroughput for encoding: 42.376785111378936MB/s\r\n\r\nbenchmarking message benchmarks.google_message4.GoogleMessage4 of dataset file /usr/local/google/home/yilunchong/mygit/protobuf/benchmarks/dataset.google_message4.pb's performance ...\r\n\r\nprotobuf.js static decoding x 4.00 ops/sec \u00b113.52% (15 runs sampled)\r\nprotobuf.js static encoding x 2.66 ops/sec \u00b12.70% (11 runs sampled)\r\nThroughput for decoding: 254.4844855864752MB/s\r\nThroughput for encoding: 187.23144405093612MB/s\r\n\r\nbenchmarking message benchmarks.google_message3.GoogleMessage3 of dataset file /usr/local/google/home/yilunchong/mygit/protobuf/benchmarks/dataset.google_message3_4.pb's performance ...\r\n\r\nprotobuf.js static decoding x 748 ops/sec \u00b13.19% (91 runs sampled)\r\nprotobuf.js static encoding x 70.24 ops/sec \u00b13.04% (60 runs sampled)\r\nThroughput for decoding: 21884.69869469849MB/s\r\nThroughput for encoding: 2057.0803901879262MB/s\r\n\r\nbenchmarking message benchmarks.google_message3.GoogleMessage3 of dataset file /usr/local/google/home/yilunchong/mygit/protobuf/benchmarks/dataset.google_message3_3.pb's performance ...\r\n\r\nprotobuf.js static decoding x 8.67 ops/sec \u00b11.12% (26 runs sampled)\r\nprotobuf.js static encoding x 8.02 ops/sec \u00b10.36% (24 runs sampled)\r\nThroughput for decoding: 69.01108086947248MB/s\r\nThroughput for encoding: 64.36748934222535MB/s\r\n\r\nbenchmarking message benchmarks.google_message3.GoogleMessage3 of dataset file /usr/local/google/home/yilunchong/mygit/protobuf/benchmarks/dataset.google_message3_5.pb's performance ...\r\n\r\nprotobuf.js static decoding x 0.68 ops/sec \u00b10.30% (6 runs sampled)\r\nprotobuf.js static encoding x 1.02 ops/sec \u00b11.88% (7 runs sampled)\r\nThroughput for decoding: 29.436660572775427MB/s\r\nThroughput for encoding: 43.48865012783289MB/s\r\n\r\nbenchmarking message benchmarks.google_message3.GoogleMessage3 of dataset file /usr/local/google/home/yilunchong/mygit/protobuf/benchmarks/dataset.google_message3_2.pb's performance ...\r\n\r\nprotobuf.js static decoding x 5.75 ops/sec \u00b111.18% (19 runs sampled)\r\nprotobuf.js static encoding x 3.55 ops/sec \u00b15.58% (13 runs sampled)\r\nThroughput for decoding: 520.6985165501093MB/s\r\nThroughput for encoding: 338.3808865696768MB/s\r\n\r\nbenchmarking message benchmarks.google_message3.GoogleMessage3 of dataset file /usr/local/google/home/yilunchong/mygit/protobuf/benchmarks/dataset.google_message3_1.pb's performance ...\r\n\r\nprotobuf.js static decoding x 0.86 ops/sec \u00b13.01% (7 runs sampled)\r\nprotobuf.js static encoding x 0.30 ops/sec \u00b14.30% (5 runs sampled)\r\nThroughput for decoding: 159.0772900797546MB/s\r\nThroughput for encoding: 54.414657014769276MB/s\r\n```\r\n\r\nOur js performance:\r\n```\r\nJs Benchmark: \r\nbenchmarking message benchmarks.proto2.GoogleMessage2 of dataset file /usr/local/google/home/yilunchong/mygit/protobuf/benchmarks/datasets/google_message2/dataset.google_message2.pb's performance ...\r\n\r\njs deserialize x 204 ops/sec \u00b11.63% (85 runs sampled)\r\njs serialize x 123 ops/sec \u00b10.57% (76 runs sampled)\r\nThroughput for deserialize: 16.223843442033584MB/s\r\nThroughput for serialize: 9.841474048590564MB/s\r\n\r\nbenchmarking message  benchmarks.proto3.GoogleMessage1 of dataset file /usr/local/google/home/yilunchong/mygit/protobuf/benchmarks/datasets/google_message1/proto3/dataset.google_message1_proto3.pb's performance ...\r\n\r\njs deserialize x 103,224 ops/sec \u00b10.22% (88 runs sampled)\r\njs serialize x 37,875 ops/sec \u00b11.47% (91 runs sampled)\r\nThroughput for deserialize: 22.39488326426736MB/s\r\nThroughput for serialize: 8.11572385771003MB/s\r\n\r\nbenchmarking message  benchmarks.proto2.GoogleMessage1 of dataset file /usr/local/google/home/yilunchong/mygit/protobuf/benchmarks/datasets/google_message1/proto2/dataset.google_message1_proto2.pb's performance ...\r\n\r\njs deserialize x 105,884 ops/sec \u00b10.47% (93 runs sampled)\r\njs serialize x 39,795 ops/sec \u00b10.30% (91 runs sampled)\r\nThroughput for deserialize: 22.91463026268381MB/s\r\nThroughput for serialize: 8.627453797348524MB/s\r\n\r\nbenchmarking message benchmarks.google_message4.GoogleMessage4 of dataset file /usr/local/google/home/yilunchong/mygit/protobuf/benchmarks/dataset.google_message4.pb's performance ...\r\n\r\njs deserialize x 0.53 ops/sec \u00b16.36% (6 runs sampled)\r\njs serialize x 0.47 ops/sec \u00b18.94% (6 runs sampled)\r\nThroughput for deserialize: 36.256882188294746MB/s\r\nThroughput for serialize: 31.388194824577834MB/s\r\n\r\nbenchmarking message benchmarks.google_message3.GoogleMessage3 of dataset file /usr/local/google/home/yilunchong/mygit/protobuf/benchmarks/dataset.google_message3_4.pb's performance ...\r\n\r\njs deserialize x 140 ops/sec \u00b11.90% (78 runs sampled)\r\njs serialize x 36.42 ops/sec \u00b12.65% (39 runs sampled)\r\nThroughput for deserialize: 4135.529528816034MB/s\r\nThroughput for serialize: 1070.8321706832446MB/s\r\n\r\nbenchmarking message benchmarks.google_message3.GoogleMessage3 of dataset file /usr/local/google/home/yilunchong/mygit/protobuf/benchmarks/dataset.google_message3_3.pb's performance ...\r\n\r\njs deserialize x 1.96 ops/sec \u00b10.59% (9 runs sampled)\r\njs serialize x 0.91 ops/sec \u00b10.66% (7 runs sampled)\r\nThroughput for deserialize: 15.666419434960796MB/s\r\nThroughput for serialize: 7.265023049809358MB/s\r\n\r\nbenchmarking message benchmarks.google_message3.GoogleMessage3 of dataset file /usr/local/google/home/yilunchong/mygit/protobuf/benchmarks/dataset.google_message3_5.pb's performance ...\r\n\r\njs deserialize x 0.12 ops/sec \u00b10.95% (5 runs sampled)\r\njs serialize x 0.10 ops/sec \u00b12.18% (5 runs sampled)\r\nThroughput for deserialize: 4.998142523979117MB/s\r\nThroughput for serialize: 4.2440661775676265MB/s\r\n\r\nbenchmarking message benchmarks.google_message3.GoogleMessage3 of dataset file /usr/local/google/home/yilunchong/mygit/protobuf/benchmarks/dataset.google_message3_2.pb's performance ...\r\n\r\njs deserialize x 0.85 ops/sec \u00b17.28% (7 runs sampled)\r\njs serialize x 0.80 ops/sec \u00b10.90% (7 runs sampled)\r\nThroughput for deserialize: 79.98802717792567MB/s\r\nThroughput for serialize: 79.39654909159722MB/s\r\n\r\nbenchmarking message benchmarks.google_message3.GoogleMessage3 of dataset file /usr/local/google/home/yilunchong/mygit/protobuf/benchmarks/dataset.google_message3_1.pb's performance ...\r\n\r\njs deserialize x 0.24 ops/sec \u00b15.27% (5 runs sampled)\r\njs serialize x 0.06 ops/sec \u00b12.34% (5 runs sampled)\r\nThroughput for deserialize: 44.071942529917074MB/s\r\nThroughput for serialize: 11.191425420911754MB/s\r\n```\r\n\r\nWhat's more, our js use more memory than protobuf.js so that I have to declare more heap memory for node.js to run our js benchmark.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 17,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2018-07-20T18:07:02Z",
        "closed_at": "2018-07-23T18:05:29Z",
        "merged_at": "2018-07-23T18:05:29Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 20,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2018-07-20T14:36:30Z",
        "closed_at": "2018-07-20T16:55:45Z",
        "merged_at": null,
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 7,
        "changed_files": 2,
        "created_at": "2018-07-20T08:02:09Z",
        "closed_at": "2018-07-20T18:03:47Z",
        "merged_at": "2018-07-20T18:03:47Z",
        "body": "This change only makes assertEquals pass for message in c extension. However, it actually does nothing.\r\nThis is the same behavior before 3.6.0 release.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 199,
        "deletions": 20,
        "changed_files": 5,
        "created_at": "2018-07-20T07:52:36Z",
        "closed_at": "2021-06-04T18:33:27Z",
        "merged_at": null,
        "body": "This change makes protobuf message checkable via assertEquals. Although\r\nthis change expose the array representation for assertEquals, we don't guarantee\r\nthe content of the array not changing.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 15,
        "deletions": 10,
        "changed_files": 7,
        "created_at": "2018-07-20T01:40:09Z",
        "closed_at": "2018-07-20T17:47:02Z",
        "merged_at": "2018-07-20T17:47:02Z",
        "body": "This should put an end to all of the reports of unit test failures on Windows machines: #547, #3319, #2548",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 1403,
        "deletions": 1303,
        "changed_files": 2,
        "created_at": "2018-07-19T16:35:26Z",
        "closed_at": "2018-07-20T07:53:05Z",
        "merged_at": null,
        "body": "This change makes protobuf message checkable via assertEquals. Although\r\nthis change expose the array representation for assertEquals, we don't guarantee\r\nthe content of the array not changing. Currently, the assertEquals still\r\ncannot check difference regarding to oneof, repeated and map fields.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 4,
        "changed_files": 4,
        "created_at": "2018-07-19T13:17:59Z",
        "closed_at": "2018-12-20T00:00:08Z",
        "merged_at": null,
        "body": "Given that #4862 has recently been merged, it is possible to start testing Python 3.7?  There might be issues related to __OpenSSL 1.0.2+__ similar to https://github.com/travis-ci/travis-ci/issues/9069\r\n\r\nProbably need to step up to __Ubuntu xenial__ here:\r\n* https://github.com/google/protobuf/blob/master/.travis.yml#L87",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-07-19T01:15:45Z",
        "closed_at": "2018-07-19T17:23:23Z",
        "merged_at": "2018-07-19T17:23:23Z",
        "body": "The definition of `GOOGLE_FALLTHROUGH_INTENDED` assumed that `[[gnu::fallthrough]]` was always available on GCC 7+. While `gnu::fallthrough` is supported on GCC 7+, C++ attributes themselves are not supported on GCC if the C++ standard is before C++11. As a fix, the guard on this definition has been expanded to include a check for C++ attribute support. The form of this check is the one recommended by GCC at https://gcc.gnu.org/projects/cxx-status.html.\r\n\r\nThis fixes #4935.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2018-07-17T01:44:16Z",
        "closed_at": "2018-07-23T20:35:16Z",
        "merged_at": "2018-07-23T20:35:16Z",
        "body": "pyext build fails with protobuf-3.6.0 in linux:\r\n`16:58:58 gcc -pthread -fno-strict-aliasing -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -D_GNU_SOURCE -fPIC -fwrapv -DNDEBUG -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -D_GNU_SOURCE -fPIC -fwrapv -fPIC -I. -I../src -I/usr/include/python2.7 -c google/protobuf/pyext/descriptor.cc -o build/temp.linux-x86_64-2.7/google/protobuf/pyext/descriptor.o -Wno-write-strings -Wno-invalid-offsetof -Wno-sign-compare\r\n16:58:58 In file included from \u001b[01m\u001b[K/usr/include/c++/4.8.2/mutex:35:0\u001b[m\u001b[K,\r\n16:58:58                  from \u001b[01m\u001b[K../src/google/protobuf/stubs/mutex.h:33\u001b[m\u001b[K,\r\n16:58:58                  from \u001b[01m\u001b[K../src/google/protobuf/stubs/common.h:52\u001b[m\u001b[K,\r\n16:58:58                  from \u001b[01m\u001b[K../src/google/protobuf/stubs/hash.h:39\u001b[m\u001b[K,\r\n16:58:58                  from \u001b[01m\u001b[Kgoogle/protobuf/pyext/descriptor.cc:35\u001b[m\u001b[K:\r\n16:58:58 \u001b[01m\u001b[K/usr/include/c++/4.8.2/bits/c++0x_warning.h:32:2:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[K#error This file requires compiler and library support for the ISO C++ 2011 standard. This support is currently experimental, and must be enabled with the -std=c++11 or -std=gnu++11 compiler options.\r\n16:58:58  #error This file requires compiler and library support for the \\\r\n16:58:58 \u001b[01;32m\u001b[K  ^\u001b[m\u001b[K\r\n16:58:58 In file included from \u001b[01m\u001b[K../src/google/protobuf/arena.h:51:0\u001b[m\u001b[K,\r\n16:58:58                  from \u001b[01m\u001b[K../src/google/protobuf/descriptor.pb.h:23\u001b[m\u001b[K,\r\n16:58:58                  from \u001b[01m\u001b[Kgoogle/protobuf/pyext/descriptor.cc:39\u001b[m\u001b[K:\r\n16:58:58 \u001b[01m\u001b[K../src/google/protobuf/arena_impl.h:311:3:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kidentifier \u2018\u001b[01m\u001b[Kstatic_assert\u001b[m\u001b[K\u2019 is a keyword in C++11 [-Wc++0x-compat]\r\n16:58:58    static_assert(kBlockHeaderSize % 8 == 0,\r\n16:58:58 \u001b[01;32m\u001b[K   ^\u001b[m\u001b[K\r\n16:58:59 In file included from \u001b[01m\u001b[K../src/google/protobuf/stubs/common.h:52:0\u001b[m\u001b[K,\r\n16:58:59                  from \u001b[01m\u001b[K../src/google/protobuf/stubs/hash.h:39\u001b[m\u001b[K,\r\n16:58:59                  from \u001b[01m\u001b[Kgoogle/protobuf/pyext/descriptor.cc:35\u001b[m\u001b[K:\r\n16:58:59 \u001b[01m\u001b[K../src/google/protobuf/stubs/mutex.h:50:20:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kdefaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by default]\r\n16:58:59    WrappedMutex() = default;\r\n16:58:59 \u001b[01;32m\u001b[K                    ^\u001b[m\u001b[K\r\n16:58:59 \u001b[01m\u001b[K../src/google/protobuf/stubs/mutex.h:58:3:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[K\u2018\u001b[01m\u001b[Kmutex\u001b[m\u001b[K\u2019 in namespace \u2018\u001b[01m\u001b[Kstd\u001b[m\u001b[K\u2019 does not name a type\r\n16:58:59    std::mutex mu_;\r\n16:58:59 \u001b[01;32m\u001b[K   ^\u001b[m\u001b[K\r\n16:58:59 \u001b[01m\u001b[K../src/google/protobuf/stubs/mutex.h:\u001b[m\u001b[K In member function \u2018\u001b[01m\u001b[Kvoid google::protobuf::internal::WrappedMutex::Lock()\u001b[m\u001b[K\u2019:\r\n16:58:59 \u001b[01m\u001b[K../src/google/protobuf/stubs/mutex.h:51:17:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[K\u2018\u001b[01m\u001b[Kmu_\u001b[m\u001b[K\u2019 was not declared in this scope\r\n16:58:59    void Lock() { mu_.lock(); }\r\n16:58:59 \u001b[01;32m\u001b[K                 ^\u001b[m\u001b[K\r\n16:58:59 \u001b[01m\u001b[K../src/google/protobuf/stubs/mutex.h:\u001b[m\u001b[K In member function \u2018\u001b[01m\u001b[Kvoid google::protobuf::internal::WrappedMutex::Unlock()\u001b[m\u001b[K\u2019:\r\n16:58:59 \u001b[01m\u001b[K../src/google/protobuf/stubs/mutex.h:52:19:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[K\u2018\u001b[01m\u001b[Kmu_\u001b[m\u001b[K\u2019 was not declared in this scope\r\n16:58:59    void Unlock() { mu_.unlock(); }\r\n16:58:59 \u001b[01;32m\u001b[K                   ^\u001b[m\u001b[K\r\n16:58:59 \u001b[01m\u001b[K../src/google/protobuf/stubs/mutex.h:\u001b[m\u001b[K At global scope:\r\n16:58:59 \u001b[01m\u001b[K../src/google/protobuf/stubs/mutex.h:61:7:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kexpected nested-name-specifier before \u2018\u001b[01m\u001b[KMutex\u001b[m\u001b[K\u2019\r\n16:58:59  using Mutex = WrappedMutex;\r\n16:58:59 \u001b[01;32m\u001b[K       ^\u001b[m\u001b[K\r\n16:58:59 \u001b[01m\u001b[K../src/google/protobuf/stubs/mutex.h:61:7:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[K\u2018\u001b[01m\u001b[KMutex\u001b[m\u001b[K\u2019 has not been declared\r\n16:58:59 \u001b[01m\u001b[K../src/google/protobuf/stubs/mutex.h:61:13:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kexpected \u2018\u001b[01m\u001b[K;\u001b[m\u001b[K\u2019 before \u2018\u001b[01m\u001b[K=\u001b[m\u001b[K\u2019 token\r\n16:58:59  using Mutex = WrappedMutex;\r\n16:58:59 \u001b[01;32m\u001b[K             ^\u001b[m\u001b[K\r\n16:58:59 \u001b[01m\u001b[K../src/google/protobuf/stubs/mutex.h:61:13:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kexpected unqualified-id before \u2018\u001b[01m\u001b[K=\u001b[m\u001b[K\u2019 token\r\n16:58:59 \u001b[01m\u001b[K../src/google/protobuf/stubs/mutex.h:66:28:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kexpected \u2018\u001b[01m\u001b[K)\u001b[m\u001b[K\u2019 before \u2018\u001b[01m\u001b[K*\u001b[m\u001b[K\u2019 token\r\n16:58:59    explicit MutexLock(Mutex *mu) : mu_(mu) { this->mu_->Lock(); }\r\n16:58:59 \u001b[01;32m\u001b[K                            ^\u001b[m\u001b[K\r\n16:58:59 \u001b[01m\u001b[K../src/google/protobuf/stubs/mutex.h:69:3:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[K\u2018\u001b[01m\u001b[KMutex\u001b[m\u001b[K\u2019 does not name a type\r\n16:58:59    Mutex *const mu_;\r\n16:58:59 \u001b[01;32m\u001b[K   ^\u001b[m\u001b[K\r\n16:58:59 \u001b[01m\u001b[K../src/google/protobuf/stubs/mutex.h:\u001b[m\u001b[K In destructor \u2018\u001b[01m\u001b[Kgoogle::protobuf::internal::MutexLock::~MutexLock()\u001b[m\u001b[K\u2019:\r\n16:58:59 \u001b[01m\u001b[K../src/google/protobuf/stubs/mutex.h:67:24:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[K\u2018\u001b[01m\u001b[Kclass google::protobuf::internal::MutexLock\u001b[m\u001b[K\u2019 has no member named \u2018\u001b[01m\u001b[Kmu_\u001b[m\u001b[K\u2019\r\n16:58:59    ~MutexLock() { this->mu_->Unlock(); }\r\n16:58:59 \u001b[01;32m\u001b[K                        ^\u001b[m\u001b[K\r\n16:58:59 \u001b[01m\u001b[K../src/google/protobuf/stubs/mutex.h:\u001b[m\u001b[K At global scope:\r\n16:58:59 \u001b[01m\u001b[K../src/google/protobuf/stubs/mutex.h:80:33:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kexpected \u2018\u001b[01m\u001b[K)\u001b[m\u001b[K\u2019 before \u2018\u001b[01m\u001b[K*\u001b[m\u001b[K\u2019 token\r\n16:58:59    explicit MutexLockMaybe(Mutex *mu) :\r\n16:58:59 \u001b[01;32m\u001b[K                                 ^\u001b[m\u001b[K\r\n16:58:59 In file included from \u001b[01m\u001b[K../src/google/protobuf/arena.h:48:0\u001b[m\u001b[K,\r\n16:58:59                  from \u001b[01m\u001b[K../src/google/protobuf/descriptor.pb.h:23\u001b[m\u001b[K,\r\n16:58:59                  from \u001b[01m\u001b[Kgoogle/protobuf/pyext/descriptor.cc:39\u001b[m\u001b[K:\r\n16:58:59 \u001b[01m\u001b[K/usr/include/c++/4.8.2/typeinfo:39:37:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kexpected \u2018\u001b[01m\u001b[K}\u001b[m\u001b[K\u2019 before end of line\r\n16:58:59  #pragma GCC visibility push(default)\r\n16:58:59 \u001b[01;32m\u001b[K                                     ^\u001b[m\u001b[K\r\n16:58:59 \u001b[01m\u001b[K/usr/include/c++/4.8.2/typeinfo:39:37:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kexpected unqualified-id before end of line\r\n16:58:59 \u001b[01m\u001b[K/usr/include/c++/4.8.2/typeinfo:39:37:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kexpected \u2018\u001b[01m\u001b[K}\u001b[m\u001b[K\u2019 before end of line\r\n16:58:59 \u001b[01m\u001b[K/usr/include/c++/4.8.2/typeinfo:39:37:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kexpected \u2018\u001b[01m\u001b[K}\u001b[m\u001b[K\u2019 before end of line\r\n16:58:59 \u001b[01m\u001b[K/usr/include/c++/4.8.2/typeinfo:39:37:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kexpected \u2018\u001b[01m\u001b[K}\u001b[m\u001b[K\u2019 before end of line\r\n16:58:59 \u001b[01m\u001b[K/usr/include/c++/4.8.2/typeinfo:39:37:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kexpected declaration before end of line\r\n16:58:59 distcc[69695] ERROR: compile google/protobuf/pyext/descriptor.cc on localhost failed\r\n16:58:59 error: command 'gcc' failed with exit status 1`",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 82,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2018-07-16T20:54:34Z",
        "closed_at": "2018-07-23T20:45:23Z",
        "merged_at": "2018-07-23T20:45:23Z",
        "body": "Fix for #3474. This updates the `SerializedForm` to include the `Class` object rather than just the class name as suggested here https://github.com/google/protobuf/issues/3474#issuecomment-401096085 This shifts the burden of finding the right classloader from us to the JVM (which will hopefully handle it better). Based on my understanding of the Java serialization format, this change should be both forwards and backwards compatible",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 663,
        "deletions": 506,
        "changed_files": 33,
        "created_at": "2018-07-16T04:09:34Z",
        "closed_at": "2018-07-18T01:50:05Z",
        "merged_at": "2018-07-18T01:50:05Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 29,
        "deletions": 107,
        "changed_files": 5,
        "created_at": "2018-07-13T23:58:15Z",
        "closed_at": "2018-07-16T01:13:35Z",
        "merged_at": "2018-07-16T01:13:35Z",
        "body": "1. Added C++ tests under the release docker image.\r\n2. Fixed a compile issue with the docker image.\r\n3. Cleaned up tests.sh and removed traivis stuff.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 167,
        "deletions": 166,
        "changed_files": 3,
        "created_at": "2018-07-13T19:43:37Z",
        "closed_at": "2018-07-13T22:43:06Z",
        "merged_at": "2018-07-13T22:43:06Z",
        "body": "1. Changed maven script to only do artifact uploading and removed build\r\nscript invocation from it. We didn't use maven to invoke the build\r\nscript before (we built protoc manually and editted pom.xml to only do\r\nuploading for previous releases), and will not use it in the future (we\r\nwill use kokoro to build artifacts).\r\n2. Cleaned up build-protoc.sh and README.md: removed the part about\r\nusing maven to build and listed supported platforms explicitly.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2018-07-13T11:13:17Z",
        "closed_at": "2018-07-18T18:05:00Z",
        "merged_at": "2018-07-18T18:05:00Z",
        "body": "",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 29,
        "deletions": 24,
        "changed_files": 6,
        "created_at": "2018-07-13T03:48:25Z",
        "closed_at": "2018-07-13T16:55:17Z",
        "merged_at": "2018-07-13T16:55:17Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 3,
        "changed_files": 4,
        "created_at": "2018-07-12T21:23:03Z",
        "closed_at": "2018-07-13T16:54:44Z",
        "merged_at": "2018-07-13T16:54:44Z",
        "body": "",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-07-12T19:56:07Z",
        "closed_at": "2018-07-12T22:45:18Z",
        "merged_at": "2018-07-12T22:45:17Z",
        "body": "Additional fix for #4299",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 19,
        "deletions": 19,
        "changed_files": 10,
        "created_at": "2018-07-11T23:30:20Z",
        "closed_at": "2018-07-12T00:42:07Z",
        "merged_at": "2018-07-12T00:42:07Z",
        "body": "Fixes https://github.com/google/protobuf/issues/4884\r\n\r\nCurrent layout of kokoro/release\r\n```\r\n+ linux\r\n + ruby\r\n+ macos\r\n + ruby\r\n+ protoc\r\n + macos\r\n + windows\r\n```\r\n\r\nThis PR puts ruby release scripts into a ruby directory to be consistent with protoc.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 36,
        "deletions": 20,
        "changed_files": 7,
        "created_at": "2018-07-11T17:10:09Z",
        "closed_at": "2018-07-12T19:34:19Z",
        "merged_at": "2018-07-12T19:34:19Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-07-10T16:20:51Z",
        "closed_at": "2018-07-10T21:15:54Z",
        "merged_at": "2018-07-10T21:15:54Z",
        "body": "Without this fix, protobuf_generate() sets the variable _generated_srcs to\r\n`${protobuf_generate_PROTOC_OUT_DIR}/${_rel_dir}/${_basename}${_ext}`\r\nbut generates the files in\r\n`${protobuf_generate_PROTOC_OUT_DIR}/${_basename}${_ext}`",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-07-10T10:20:41Z",
        "closed_at": "2018-07-10T21:17:12Z",
        "merged_at": "2018-07-10T21:17:12Z",
        "body": "https://github.com/google/protobuf/issues/4887",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 17,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2018-07-09T21:24:14Z",
        "closed_at": "2018-07-12T18:04:30Z",
        "merged_at": "2018-07-12T18:04:29Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 132,
        "deletions": 319,
        "changed_files": 11,
        "created_at": "2018-07-09T16:49:55Z",
        "closed_at": "2018-07-09T18:45:40Z",
        "merged_at": "2018-07-09T18:45:40Z",
        "body": "We need to merge 3.6.x into master so that master picks up #4878, which fixes #4773 (MSVC initialization problems with debug builds).",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 60,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-07-09T00:32:59Z",
        "closed_at": "2018-07-12T06:06:49Z",
        "merged_at": null,
        "body": "This PR adds C++ support for Cocoapods.",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 29,
        "deletions": 11,
        "changed_files": 2,
        "created_at": "2018-07-09T00:25:53Z",
        "closed_at": "2018-07-09T20:26:40Z",
        "merged_at": "2018-07-09T20:26:40Z",
        "body": "Added support for native building ppcle_64 artifacts and cross compiling ppcle_64 artifacts on linux x86_64.\r\n\r\nUpdated README.md to reflect additional capability.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-07-07T00:47:59Z",
        "closed_at": "2018-07-09T16:32:18Z",
        "merged_at": "2018-07-09T16:32:18Z",
        "body": "This avoids the need to use \"yum update && yum upgrade\" in the container\r\nto be able to contact GitHub, which requires TLS 1.2[1].\r\n\r\nI have verified that binaries built with this container still run in the\r\nprevious container; no errors like \"/lib64/libc.so.6: version\r\n`GLIBC_2.14' not found\", which occur if using too new of a glibc when\r\ncompiling. CentOS 6.6 has glibc version 2.12 release 1.209.el6. CentOS\r\n6.9 has glibc version 2.12 release 1.149.el6. Both would upgrade to\r\nrelease 1.212.el6 via \"yum update && yum upgrade\".\r\n\r\n1. https://githubengineering.com/crypto-deprecation-notice/",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 132,
        "deletions": 319,
        "changed_files": 11,
        "created_at": "2018-07-06T22:51:40Z",
        "closed_at": "2018-07-09T16:35:49Z",
        "merged_at": "2018-07-09T16:35:49Z",
        "body": "It appears that Visual Studio does not work well with std::once_flag\r\nbecause it has a bug causing it to initialize that during dynamic\r\ninitialization instead of constant initialization. This change works\r\naround the problem by using function static initializers instead.\r\n\r\n@gerben-s originally wrote this change for the Google-internal codebase\r\nbut I am just cherry-picking it here.\r\n\r\nThis fixes #4773.",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 10,
        "changed_files": 3,
        "created_at": "2018-07-06T19:39:10Z",
        "closed_at": "2018-07-06T22:50:50Z",
        "merged_at": "2018-07-06T22:50:50Z",
        "body": "Now that we depend on C++11, we need at least GCC 4.8 instead of 4.7.\r\nThis change updates the Docker setup to continue using CentOS 6.6 but\r\nwith GCC 4.8.\r\n\r\nI also added libm to the whitelist for dynamically linked libraries for\r\nthe ARM64 protoc binary.\r\n\r\nThis fixes #4868.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2018-07-06T19:27:26Z",
        "closed_at": "2018-07-09T20:57:56Z",
        "merged_at": "2018-07-09T20:57:56Z",
        "body": "Fix #4864",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 36,
        "deletions": 20,
        "changed_files": 7,
        "created_at": "2018-07-06T08:32:49Z",
        "closed_at": "2018-07-11T17:15:08Z",
        "merged_at": null,
        "body": "",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2018-07-06T05:37:20Z",
        "closed_at": "2018-07-06T21:56:26Z",
        "merged_at": "2018-07-06T21:56:26Z",
        "body": "Without this the error of un-moveable GenericTypeHandler will pop until\r\n'TypeHandler::New(arena_, std::move(value))' is called.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 26,
        "deletions": 26,
        "changed_files": 13,
        "created_at": "2018-07-06T00:28:09Z",
        "closed_at": "2018-07-06T22:52:15Z",
        "merged_at": "2018-07-06T22:52:15Z",
        "body": "This pull request was already submitted as #4160, which was closed as causing issues. Note, this is a pull request against the 3.5.x branch, not against master. I'm not sure what could have changed, since the 3.5.x branch hasn't been modified since the original submission. Please clarify before closing this.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2018-07-05T15:10:35Z",
        "closed_at": "2018-07-12T14:27:24Z",
        "merged_at": "2018-07-12T14:27:24Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 6,
        "changed_files": 5,
        "created_at": "2018-07-03T16:55:58Z",
        "closed_at": "2018-07-12T17:58:10Z",
        "merged_at": "2018-07-12T17:58:10Z",
        "body": "Compilation of Python wrappers fails with Python 3.7 because\r\nthe Python folks changed their C API such that\r\nPyUnicode_AsUTF8AndSize() now returns a const char* rather\r\nthan a char*. Add a patch to work around. Relates #4086.",
        "comments": 13
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2018-07-03T05:23:32Z",
        "closed_at": "2018-07-06T04:41:23Z",
        "merged_at": null,
        "body": "Minor tweak to facilitate the creation of release zip where $TARGET is not found in the Maven repository.\r\n\r\nE.g. \r\n\r\n[ERROR] Failed to download http://repo1.maven.org/maven2/com/google/protobuf/protoc/3.6.0/protoc-3.6.0-linux-ppcle_64.exe\r\nUse local file (./target/protoc.exe)? [y/N] y\r\n[INFO] Successfully created /home/nashimus/protobuf/protoc-artifacts/dist/protoc-3.6.0-linux-ppcle_64.zip\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 186,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-07-03T00:09:47Z",
        "closed_at": "2018-07-03T16:48:06Z",
        "merged_at": "2018-07-03T16:48:06Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2018-07-01T19:57:04Z",
        "closed_at": "2018-07-02T17:50:52Z",
        "merged_at": "2018-07-02T17:50:52Z",
        "body": "Please don't drop these exports again in the near future when merging from the 'internal' sources ;-)\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-06-30T20:20:13Z",
        "closed_at": "2018-07-02T16:33:06Z",
        "merged_at": "2018-07-02T16:33:06Z",
        "body": "Node.js/Browser RPC using protocol buffers over binary websockets",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 263,
        "deletions": 3,
        "changed_files": 4,
        "created_at": "2018-06-29T21:46:50Z",
        "closed_at": "2018-07-16T21:40:58Z",
        "merged_at": "2018-07-16T21:40:57Z",
        "body": "Benchmark results with c extension:\r\n```\r\nPHP protobuf benchmark result:\r\n\r\nresult for test data file: /usr/local/google/home/yilunchong/mygit/protobuf/benchmarks/tmp/proto3_data/datasets/google_message2/dataset.google_message2.pb\r\n   Throughput for benchmark parse_php: 111.84 MB/s\r\n   Throughput for benchmark serailize_php: 210.17 MB/s\r\nresult for test data file: /usr/local/google/home/yilunchong/mygit/protobuf/benchmarks/tmp/proto3_data/datasets/google_message1/proto3/dataset.google_message1_proto3.pb\r\n   Throughput for benchmark parse_php: 14.41 MB/s\r\n   Throughput for benchmark serailize_php: 21.91 MB/s\r\nresult for test data file: /usr/local/google/home/yilunchong/mygit/protobuf/benchmarks/tmp/proto3_data/datasets/google_message1/proto2/dataset.google_message1_proto2.pb\r\n   Throughput for benchmark parse_php: 14.84 MB/s\r\n   Throughput for benchmark serailize_php: 22.52 MB/s\r\nresult for test data file: /usr/local/google/home/yilunchong/mygit/protobuf/benchmarks/tmp/proto3_data/dataset.google_message4.pb\r\n   Throughput for benchmark parse_php: 117.44 MB/s\r\n   Throughput for benchmark serailize_php: 180.51 MB/s\r\nresult for test data file: /usr/local/google/home/yilunchong/mygit/protobuf/benchmarks/tmp/proto3_data/dataset.google_message3_4.pb\r\n   Throughput for benchmark parse_php: 1903.16 MB/s\r\n   Throughput for benchmark serailize_php: 3091.22 MB/s\r\nresult for test data file: /usr/local/google/home/yilunchong/mygit/protobuf/benchmarks/tmp/proto3_data/dataset.google_message3_3.pb\r\n   Throughput for benchmark parse_php: 11.89 MB/s\r\n   Throughput for benchmark serailize_php: 30.06 MB/s\r\nresult for test data file: /usr/local/google/home/yilunchong/mygit/protobuf/benchmarks/tmp/proto3_data/dataset.google_message3_5.pb\r\n   Throughput for benchmark parse_php: 3.43 MB/s\r\n   Throughput for benchmark serailize_php: 11.91 MB/s\r\nresult for test data file: /usr/local/google/home/yilunchong/mygit/protobuf/benchmarks/tmp/proto3_data/dataset.google_message3_2.pb\r\n   Throughput for benchmark parse_php: 75.69 MB/s\r\n   Throughput for benchmark serailize_php: 87.16 MB/s\r\nresult for test data file: /usr/local/google/home/yilunchong/mygit/protobuf/benchmarks/tmp/proto3_data/dataset.google_message3_1.pb\r\n   Throughput for benchmark parse_php: 108.19 MB/s\r\n   Throughput for benchmark serailize_php: 108.04 MB/s\r\n```",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-06-28T22:57:21Z",
        "closed_at": "2018-07-02T16:48:11Z",
        "merged_at": "2018-07-02T16:48:11Z",
        "body": "This change reduces the excessive warnings when compiling C++ protobufs like \"external/protobuf_archive/python/google/protobuf/pyext/message.cc:2629:1: warning: ISO C++ forbids converting a string constant to 'char*' [-Wwrite-strings]\"",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-06-28T21:27:54Z",
        "closed_at": "2018-06-30T04:44:56Z",
        "merged_at": "2018-06-30T04:44:56Z",
        "body": "The __MIPSEL__ is mips little endian, specific and we needed\r\nto compile for a big endian mips target that also happened\r\nto be a mips64, so replaced the __MIPSEL__ with a __mip__\r\nwhich should preserve the build on little endian and allow a\r\nbuild for a big endian setup.\r\n\r\n\t$ echo | mips64-linux-gcc -E -dM -\r\n\t... snip snip ...\r\n\t#define __mips__ 1\r\n\t#define __MIPSEB__ 1\r\n\r\nSigned-off-by: Charles Hardin <ckhardin@gmail.com>",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 12,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2018-06-28T18:22:05Z",
        "closed_at": "2018-07-16T20:38:20Z",
        "merged_at": null,
        "body": "Fix for #3474. This updates the `SerializedForm` to include the `Class` object rather than just the class name as suggested here https://github.com/google/protobuf/issues/3474#issuecomment-401096085 This shifts the burden of finding the right classloader from us to the JVM (which will hopefully handle it better). Based on my understanding of the Java serialization format, this change should be both forwards and backwards compatible",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2018-06-28T12:40:05Z",
        "closed_at": "2018-06-28T17:14:44Z",
        "merged_at": null,
        "body": "Fix for #3474, thanks for the quick response @xfxyjwf \r\n\r\nI kept the existing behavior on Android, because grpc/grpc-java#1273 suggests that using the context `ClassLoader` may not be relied upon. I wasn't aware of any way to reuse the grpc code, so I just copied the relevant bits over.\r\n\r\nI'm also not entirely sure about the change to `java_file.cc`, I don't have much experience with extensions but I think we'd want the same behavior there. \r\n\r\nI followed the instructions [here](https://github.com/google/protobuf/tree/master/src) to build and then I ran the Maven build and all the tests passed. Setting up a unit test to verify that it fixes #3474 would be a bit involved but I'm happy to do it if you think it's worthwhile.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 406,
        "deletions": 238,
        "changed_files": 22,
        "created_at": "2018-06-28T06:32:17Z",
        "closed_at": "2018-07-09T21:29:24Z",
        "merged_at": "2018-07-09T21:29:24Z",
        "body": "Also refactored conformance test to allow different option during json parsing.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-06-26T14:45:02Z",
        "closed_at": "2018-06-29T18:07:29Z",
        "merged_at": "2018-06-29T18:07:29Z",
        "body": "I'm not entirely sure how the capsule name works, but this string empirically works (i.e., PyCapsule_Import(proto2::python::PyProtoAPICapsuleName(), 0) returns the right thing)\r\nand the old one didn't.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-06-26T14:28:50Z",
        "closed_at": "2018-07-03T20:52:28Z",
        "merged_at": "2018-07-03T20:52:28Z",
        "body": "Add missing piece from pull request #4698:  actually initialize the new API object.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 42,
        "deletions": 37,
        "changed_files": 11,
        "created_at": "2018-06-26T01:02:05Z",
        "closed_at": "2018-06-28T20:48:06Z",
        "merged_at": "2018-06-28T20:48:06Z",
        "body": "Fixes #3711",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 150,
        "deletions": 36,
        "changed_files": 6,
        "created_at": "2018-06-26T00:00:21Z",
        "closed_at": "2018-07-02T22:11:37Z",
        "merged_at": "2018-07-02T22:11:37Z",
        "body": "",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-06-25T23:43:22Z",
        "closed_at": "2018-06-27T00:01:22Z",
        "merged_at": "2018-06-27T00:01:22Z",
        "body": "Removed forward declaration of MemBlock class.\r\n\r\nDeclaration is in conflict with declaration `::strings::MemBlock`",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 628,
        "deletions": 93,
        "changed_files": 59,
        "created_at": "2018-06-25T21:44:50Z",
        "closed_at": "2018-06-25T22:52:30Z",
        "merged_at": "2018-06-25T22:52:30Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-06-25T09:35:38Z",
        "closed_at": "2018-06-25T21:48:45Z",
        "merged_at": "2018-06-25T21:48:45Z",
        "body": "In case proto files are stored relative to the CMakeLists.txt file that contains the protobuf_generate call, the files will be generated into a subfolder of ${CMAKE_CURRENT_BINARY_DIR} but the OUTPUT property of the custom_command does not reflect this.\r\n\r\nExample:\r\nadd_library(foo\r\n  STATIC\r\n  ./some/relative/bar.proto\r\n)\r\n\r\nThe bar.pb.* files will now be generated into ${CMAKE_CURRENT_BINARY_DIR}/some/relative (if PROTOC_OUT_DIR is not set) but the generated_srcs variable points to ${CMAKE_CURRENT_BINARY_DIR}.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 63,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2018-06-25T07:51:45Z",
        "closed_at": "2018-07-30T20:36:47Z",
        "merged_at": "2018-07-30T20:36:47Z",
        "body": "Ignore unknown enum received in json when ignoreUnknownFields flag is set.\n\n<!-- Reviewable:start -->\n---\nThis change is\u2002[<img src=\"https://reviewable.io/review_button.svg\" height=\"34\" align=\"absmiddle\" alt=\"Reviewable\"/>](https://reviewable.io/reviews/google/protobuf/4825)\n<!-- Reviewable:end -->\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 0,
        "changed_files": 22,
        "created_at": "2018-06-25T06:18:17Z",
        "closed_at": "2018-06-25T21:55:04Z",
        "merged_at": "2018-06-25T21:55:04Z",
        "body": "This potentially avoids compiler warnings.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 65,
        "deletions": 1,
        "changed_files": 7,
        "created_at": "2018-06-23T00:04:57Z",
        "closed_at": "2018-06-25T18:14:50Z",
        "merged_at": "2018-06-25T18:14:50Z",
        "body": "For mac, linux, windows",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 14,
        "changed_files": 1,
        "created_at": "2018-06-22T19:24:59Z",
        "closed_at": "2018-06-25T22:21:30Z",
        "merged_at": "2018-06-25T22:21:30Z",
        "body": "/cc @kkm000 @anandolee ",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 3298,
        "deletions": 1535,
        "changed_files": 23,
        "created_at": "2018-06-22T17:16:44Z",
        "closed_at": "2018-09-27T22:23:11Z",
        "merged_at": "2018-09-27T22:23:11Z",
        "body": "This PR is basically the same as that created by @zanker in [#3606](https://github.com/google/protobuf/pull/3606), plus a few bug fixes. Opening a new PR as suggested by @xfxyjwf \r\n\r\nI have left the commits as it is for now (for ease of review), but will squash them before merging.\r\n\r\nThe next steps for a full proto2 support are to support extensions and then options. I am currently working on adding extensions support in the UPB library, so that the Ruby gem can support extensions.\r\n\r\ncc: @yurokle",
        "comments": 44
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2018-06-22T12:37:52Z",
        "closed_at": "2018-06-22T17:01:13Z",
        "merged_at": "2018-06-22T17:01:13Z",
        "body": "Fix declaration of SerializeInternal and SerializeInternalToArray.\r\nThe linker of arm-none-eabi-gcc cannot found these functions without this modification.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 98,
        "deletions": 0,
        "changed_files": 4,
        "created_at": "2018-06-21T23:52:48Z",
        "closed_at": "2018-06-22T17:26:18Z",
        "merged_at": "2018-06-22T17:26:18Z",
        "body": "If this works well, we can also add protoc here.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 21,
        "deletions": 2,
        "changed_files": 4,
        "created_at": "2018-06-21T19:29:03Z",
        "closed_at": "2018-06-21T23:37:38Z",
        "merged_at": "2018-06-21T23:37:38Z",
        "body": "\u2026map.\r\n\r\nThis came up when trying to round-trip the JSON<->proto3 conversion for\r\nEnvoy's envoy.admin.v2alpha.ConfigDump\r\n(https://github.com/envoyproxy/envoy/blob/b903c1dc984593f8e95e0569c1503dc5d85fbe34/api/envoy/admin/v2alpha/config_dump.proto#L29).\r\n\r\nValidated fix on the Envoy code base and via the provided unit test.\r\n\r\nSigned-off-by: Harvey Tuch <htuch@google.com>",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 88,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2018-06-21T18:42:28Z",
        "closed_at": "2018-06-21T23:37:23Z",
        "merged_at": "2018-06-21T23:37:23Z",
        "body": "Fixes #4771. Based on the solution included in the issues from\r\n@wangjinhua.\r\n\r\nValidated this works with Envoy's /config_dump JSON rendering.\r\n\r\nSigned-off-by: Harvey Tuch <htuch@google.com>",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-06-21T18:00:33Z",
        "closed_at": "2018-06-21T19:37:37Z",
        "merged_at": "2018-06-21T19:37:37Z",
        "body": "This is invaluable for chasing down the culprit in failed JSON -> proto\r\nconversions. We often see in Envoy that a failed JSON (or indirectly via\r\nYAML) configuration won't load but it's unclear why.\r\n\r\nSigned-off-by: Harvey Tuch <htuch@google.com>",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 392,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2018-06-21T09:02:50Z",
        "closed_at": "2021-10-19T17:17:11Z",
        "merged_at": null,
        "body": "Increase conversion support for JSON format",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-06-20T23:15:09Z",
        "closed_at": "2018-06-22T22:23:42Z",
        "merged_at": null,
        "body": "This function seemed to have a bug where it would encode its result in\r\nthe \"raw_unicode_escape\" format, which is an unusual Python-specific\r\nformat. The docstring indicates it should return UTF-8 bytes, so this\r\ncommit changes it to do that. This should fix a bug that was causing\r\ntext format protos with non-ASCII characters to be unparseable (#4721).",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-06-20T13:39:18Z",
        "closed_at": "2018-06-20T16:36:23Z",
        "merged_at": null,
        "body": "\n\n<!-- Reviewable:start -->\nThis change is\u2002[<img src=\"https://reviewable.io/review_button.svg\" height=\"34\" align=\"absmiddle\" alt=\"Reviewable\"/>](https://reviewable.io/reviews/google/protobuf/4801)\n<!-- Reviewable:end -->\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-06-18T23:22:13Z",
        "closed_at": "2018-06-20T17:48:09Z",
        "merged_at": "2018-06-20T17:48:09Z",
        "body": "https://github.com/google/protobuf/issues/4747",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2018-06-18T16:41:10Z",
        "closed_at": "2018-06-18T18:38:07Z",
        "merged_at": "2018-06-18T18:38:07Z",
        "body": "MSVC seems to have a bug where it does not use constant initialization\r\nfor std::atomic, which ends up causing crashes during initialization.\r\nThis change introduces a workaround by putting the std::atomic inside a\r\nunion, which causes the compiler to use constant initialization for it.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2018-06-17T02:49:02Z",
        "closed_at": "2018-06-20T19:09:43Z",
        "merged_at": null,
        "body": "Specifically:\r\n  Error: Type is already not null. Please remove the redundant !.\r\n  Cause: * @return {!boolean}\r\n\r\n  Error: Name Array in JSDoc is implicitly nullable, and is discouraged by the\r\n         guide. Please add a ! to make it non-nullable, or a ? to make it\r\n         explicitly nullable.\r\n  Cause: * @param {Array=} opt_data Optional initial data array, typically from\r\n\r\n  Error: Function must have JSDoc.\r\n  Cause: $PROTO_CLASS.prototype.clear$FIELD_NAME = function() {",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2018-06-16T20:42:32Z",
        "closed_at": "2018-06-18T20:27:52Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 31,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2018-06-15T19:02:41Z",
        "closed_at": "2018-06-18T21:34:15Z",
        "merged_at": "2018-06-18T21:34:15Z",
        "body": "This configuration builds both 32-bit and 64-bit binaries for Mac OS X.\r\nOne thing I had to change was to increase our minimum supported version\r\nfor 10.7 to 10.9, because 10.9 (Mavericks) appears to be the earliest\r\nversion supporting C++11.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 35,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2018-06-14T22:48:23Z",
        "closed_at": "2018-06-14T23:48:53Z",
        "merged_at": "2018-06-14T23:48:53Z",
        "body": "This should make it easy to automatically build 32-bit and 64-bit\r\nWindows protoc binaries.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2018-06-13T09:07:12Z",
        "closed_at": "2018-06-13T17:25:47Z",
        "merged_at": "2018-06-13T17:25:47Z",
        "body": "Fixes https://github.com/bazelbuild/bazel/issues/5383.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2018-06-12T12:03:23Z",
        "closed_at": "2018-06-12T17:17:07Z",
        "merged_at": "2018-06-12T17:17:06Z",
        "body": "Fixes #4727.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 27,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2018-06-12T10:32:52Z",
        "closed_at": "2018-06-18T20:50:57Z",
        "merged_at": null,
        "body": "http://flake8.pycqa.org tests can find Python syntax errors and undefined names on each pull request before they are reviewed.\r\n\r\nResults on Python 2.7:\r\n* 3     F821 undefined name\r\n\r\nResults on Python 3.6:\r\n* 10    E999 SyntaxError: invalid syntax\r\n* 5     F821 undefined name\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-06-12T06:00:17Z",
        "closed_at": "2018-06-12T20:40:00Z",
        "merged_at": "2018-06-12T20:40:00Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 31,
        "deletions": 27,
        "changed_files": 3,
        "created_at": "2018-06-12T05:07:51Z",
        "closed_at": "2018-06-20T22:18:21Z",
        "merged_at": "2018-06-20T22:18:21Z",
        "body": "This PR should enable us to run the benchmarks under both Python 2 and Python 3.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-06-12T01:31:29Z",
        "closed_at": "2018-06-25T17:50:41Z",
        "merged_at": "2018-06-25T17:50:41Z",
        "body": "This declaration helps both humans and linters to understand the unusual method of instantiating this global variable.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-06-11T16:21:21Z",
        "closed_at": "2018-06-12T20:22:49Z",
        "merged_at": "2018-06-12T20:22:49Z",
        "body": "The creation of the new proto_api (https://github.com/google/protobuf/pull/4698, https://github.com/google/protobuf/pull/4725) is almost usable but just needs the proto_api target to be visible.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 134,
        "deletions": 22,
        "changed_files": 7,
        "created_at": "2018-06-07T23:03:40Z",
        "closed_at": "2018-06-08T01:16:46Z",
        "merged_at": "2018-06-08T01:16:46Z",
        "body": "Old generated code cannot work with new runtime, because the new runtime\r\nassumes new class name for nested message. For details see #4738.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-06-07T16:27:18Z",
        "closed_at": "2018-06-18T20:53:20Z",
        "merged_at": "2018-06-18T20:53:20Z",
        "body": "See https://github.com/tensorflow/tensorflow/issues/19657 for\r\nmotivation. But long story short, without this change:\r\n\r\n```c++\r\nm.SerializeToArray(buffer, m.ByteSizeLong());\r\n```\r\n\r\nwould result in a CHECK failure if `m.ByteSizeLong()` returned a value >2GB.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 20,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2018-06-07T00:42:37Z",
        "closed_at": "2018-06-07T02:04:25Z",
        "merged_at": "2018-06-07T02:04:25Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 10,
        "changed_files": 5,
        "created_at": "2018-06-05T20:51:43Z",
        "closed_at": "2018-06-06T16:41:27Z",
        "merged_at": "2018-06-06T16:41:27Z",
        "body": "These fixes are from pull request #4729.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-06-04T20:39:09Z",
        "closed_at": "2018-06-10T06:25:56Z",
        "merged_at": "2018-06-10T06:25:56Z",
        "body": "",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 34,
        "deletions": 12,
        "changed_files": 1,
        "created_at": "2018-06-03T03:07:39Z",
        "closed_at": "2018-06-06T02:03:25Z",
        "merged_at": "2018-06-06T02:03:25Z",
        "body": "Make Bazel on Windows build log less noisy.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2018-06-03T02:54:05Z",
        "closed_at": "2018-06-19T20:26:42Z",
        "merged_at": "2018-06-19T20:26:42Z",
        "body": "This allows functional construction of Any objects, e.g., as fields of other protos.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-06-02T09:12:31Z",
        "closed_at": "2018-06-03T21:27:48Z",
        "merged_at": "2018-06-03T21:27:48Z",
        "body": "[protobuf-d](https://github.com/dcarp/protobuf-d) is a conformance tested proto3 runtime library and code generator for D.\r\n\r\nThis is probably the most complete proto3 implementation in D.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 89,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2018-06-01T20:59:26Z",
        "closed_at": "2018-06-06T16:49:37Z",
        "merged_at": "2018-06-06T16:49:37Z",
        "body": "I also made a small tweak to the release script to remove a reference to javanano.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2018-06-01T07:47:43Z",
        "closed_at": "2018-06-01T16:42:59Z",
        "merged_at": "2018-06-01T16:42:59Z",
        "body": "Upport  #4706 from 3.6.x to master.\r\n\r\nBased on my local testing, this should finally unbreak https://github.com/grpc/grpc/issues/14862",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 226,
        "deletions": 161,
        "changed_files": 6,
        "created_at": "2018-06-01T06:18:51Z",
        "closed_at": "2018-06-01T18:00:04Z",
        "merged_at": "2018-06-01T18:00:04Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-05-31T22:21:33Z",
        "closed_at": "2018-06-18T20:54:32Z",
        "merged_at": "2018-06-18T20:54:32Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2018-05-31T17:10:01Z",
        "closed_at": "2018-05-31T18:28:12Z",
        "merged_at": "2018-05-31T18:28:12Z",
        "body": "This commit updates the Autotools build to require a C++11 compiler and\r\nexplicitly pass -std=c++11. This seems to be necessary for enabling\r\nC++11 support in older compilers.\r\n\r\nThis should fix issue #4705.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 17,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2018-05-30T21:20:48Z",
        "closed_at": "2018-05-31T18:20:01Z",
        "merged_at": "2018-05-31T18:20:01Z",
        "body": "For Clang's thread safety analysis (-Wthread-safety) to pass without warnings,\r\nwe need to annotate WrappedMutex to indicate that Lock() acquires the lock and\r\nUnlock() releases it. This CL adds the annotations and guards them with an\r\nifdef to make sure they're a no-op on compilers other than Clang.\r\n\r\nThis is a cherry-pick of a change I already made to the Google-internal\r\ncodebase.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 26,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2018-05-30T17:49:00Z",
        "closed_at": "2018-05-30T21:40:43Z",
        "merged_at": "2018-05-30T21:40:43Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 356,
        "deletions": 46,
        "changed_files": 7,
        "created_at": "2018-05-30T01:25:54Z",
        "closed_at": "2018-06-04T19:03:59Z",
        "merged_at": "2018-06-04T19:03:59Z",
        "body": "\n\n<!-- Reviewable:start -->\nThis change is\u2002[<img src=\"https://reviewable.io/review_button.svg\" height=\"34\" align=\"absmiddle\" alt=\"Reviewable\"/>](https://reviewable.io/reviews/google/protobuf/4699)\n<!-- Reviewable:end -->\n",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 148,
        "deletions": 1,
        "changed_files": 6,
        "created_at": "2018-05-29T22:32:58Z",
        "closed_at": "2018-06-03T21:54:54Z",
        "merged_at": "2018-06-03T21:54:54Z",
        "body": "",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 26,
        "deletions": 15,
        "changed_files": 2,
        "created_at": "2018-05-29T21:36:06Z",
        "closed_at": "2018-05-30T04:51:55Z",
        "merged_at": "2018-05-30T04:51:55Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2018-05-29T21:31:03Z",
        "closed_at": "2018-05-30T17:40:01Z",
        "merged_at": "2018-05-30T17:40:01Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 18,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2018-05-29T17:31:41Z",
        "closed_at": "2018-05-29T21:32:01Z",
        "merged_at": "2018-05-29T21:32:01Z",
        "body": "cherry-pick from master",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2018-05-29T15:13:10Z",
        "closed_at": "2018-06-01T18:01:12Z",
        "merged_at": null,
        "body": "The well_known_types_embed.cc source file is generated during the build;\r\nas a result, it should be generated in the build directory, not the\r\nsource directory, during an out-of-tree build. The autotools build does\r\nthis right, but the CMake build was doing it wrong.",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-05-29T06:47:04Z",
        "closed_at": "2018-06-22T17:37:47Z",
        "merged_at": null,
        "body": "add tool installation procedure of  yum",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 18,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2018-05-29T04:32:48Z",
        "closed_at": "2018-05-29T17:25:06Z",
        "merged_at": "2018-05-29T17:25:05Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 119,
        "deletions": 14,
        "changed_files": 4,
        "created_at": "2018-05-25T05:15:56Z",
        "closed_at": "2018-05-29T12:08:00Z",
        "merged_at": "2018-05-29T12:08:00Z",
        "body": "Changes to provide API in Objective-C to the values and names for enums.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 22,
        "changed_files": 4,
        "created_at": "2018-05-24T23:48:38Z",
        "closed_at": "2018-05-25T00:50:31Z",
        "merged_at": "2018-05-25T00:50:31Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2018-05-24T23:01:31Z",
        "closed_at": "2018-05-30T18:07:12Z",
        "merged_at": "2018-05-30T18:07:12Z",
        "body": "I removed references to javanano, since that implementation no longer\r\nexists. While I was at it I found a couple places where it looked like\r\nthe wrong directory was used by mistake and I fixed them.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2738,
        "deletions": 832,
        "changed_files": 101,
        "created_at": "2018-05-24T20:47:56Z",
        "closed_at": "2018-05-25T20:43:23Z",
        "merged_at": "2018-05-25T20:43:23Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 19,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2018-05-24T20:21:32Z",
        "closed_at": "2018-05-24T23:10:42Z",
        "merged_at": "2018-05-24T23:10:42Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2645,
        "deletions": 814,
        "changed_files": 93,
        "created_at": "2018-05-24T19:16:54Z",
        "closed_at": "2018-05-24T20:39:42Z",
        "merged_at": "2018-05-24T20:39:42Z",
        "body": "1) Support array constructor\r\n2) Use namespace instead of '_' for nested messages/enums.\r\n3) Fixed the issue that reserved name in package or proto file path is not skipped.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2018-05-24T00:01:57Z",
        "closed_at": "2018-05-24T01:14:35Z",
        "merged_at": "2018-05-24T01:14:35Z",
        "body": "In old generated code, the constructor of message doesn't provide a\r\ndefault null to parent's constructor. Previously, in c extesnion, this\r\ncase was not handled.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-05-23T09:10:31Z",
        "closed_at": "2018-05-30T20:07:23Z",
        "merged_at": null,
        "body": "This has been silently failing for a while, it looks like.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-05-22T16:57:46Z",
        "closed_at": "2018-05-22T19:59:53Z",
        "merged_at": "2018-05-22T19:59:53Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2018-05-22T02:00:32Z",
        "closed_at": "2018-05-22T19:27:59Z",
        "merged_at": "2018-05-22T19:27:59Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-05-21T22:38:49Z",
        "closed_at": "2018-05-24T23:35:17Z",
        "merged_at": "2018-05-24T23:35:17Z",
        "body": "This fixes #4658.",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-05-21T16:28:11Z",
        "closed_at": "2018-06-22T17:43:55Z",
        "merged_at": null,
        "body": "The __MIPSEL__ is mips little endian, specific and we needed\r\nto compile for a big endian mips target that also happened\r\nto be a mips64, so replaced the __MIPSEL__ with a __mip__\r\nwhich should preserve the build on little endian and allow a\r\nbuild for a big endian setup.\r\n\r\n\t$ echo | mips64-linux-gcc -E -dM -\r\n\t... snip snip ...\r\n\t#define __mips__ 1\r\n\t#define __MIPSEB__ 1\r\n\r\nSigned-off-by: Charles Hardin <ckhardin@gmail.com>",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2018-05-19T07:21:56Z",
        "closed_at": "2018-05-21T20:48:11Z",
        "merged_at": "2018-05-21T20:48:11Z",
        "body": "Hi,\r\nWe (rules_scala) use this repository as a bazel source repository.\r\nWe want to run with bazel 0.13.0 with `--all_incompatible_changes` and fail because of https://docs.bazel.build/versions/master/skylark/backward-compatibility.html#package-name-is-a-function\r\nThis PR fixes it.\r\n@dslomov should there be a process to make sure very root projects (like protobuf) support the above flag?\r\ncc @johnynek",
        "comments": 22
    },
    {
        "merged": true,
        "additions": 19,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2018-05-19T04:59:19Z",
        "closed_at": "2018-06-21T21:53:31Z",
        "merged_at": "2018-06-21T21:53:31Z",
        "body": "Adds msbuild properties to Google.Protobuf.Tools that point to each protoc compiler executable. Also includes a \"protoc\" property that points to the protoc compiler for the current OS and OS architecture.\r\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2018-05-18T01:05:31Z",
        "closed_at": "2018-05-21T19:20:37Z",
        "merged_at": null,
        "body": "The final paragraph of the license is not really part of the license, and\r\nis confusing some license detection software, most important the one\r\nrun by GitHub.\r\n\r\nMove that paragraph to the README.md, which turns the license\r\nback into a standard BSD 3-clause.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2018-05-17T21:40:49Z",
        "closed_at": "2018-05-18T16:41:59Z",
        "merged_at": "2018-05-18T16:41:59Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2018-05-17T21:34:28Z",
        "closed_at": "2018-05-30T17:43:31Z",
        "merged_at": "2018-05-30T17:43:31Z",
        "body": "",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 3777,
        "deletions": 2375,
        "changed_files": 51,
        "created_at": "2018-05-17T19:26:48Z",
        "closed_at": "2018-09-24T20:42:24Z",
        "merged_at": "2018-09-24T20:42:24Z",
        "body": "This adds field presence and default values to the C# protoc compiler and library. This also includes some fixes for existing hacks in reflection that were created due to only supporting proto3 at the time of creation.\r\n\r\nThis PR also includes breaking changes. For required fields to work properly, a method is added the IMessage interface and breaks backwards compatibility with previous versions.\r\n\r\nThis is the first PR in a set of four PRs implementing all the changes required to support proto2 in the C# library and compiler.\n\n<!-- Reviewable:start -->\n---\nThis change is\u2002[<img src=\"https://reviewable.io/review_button.svg\" height=\"34\" align=\"absmiddle\" alt=\"Reviewable\"/>](https://reviewable.io/reviews/google/protobuf/4642)\n<!-- Reviewable:end -->\n",
        "comments": 26
    },
    {
        "merged": false,
        "additions": 40321,
        "deletions": 43,
        "changed_files": 79,
        "created_at": "2018-05-16T20:10:05Z",
        "closed_at": "2018-06-18T20:55:29Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 27,
        "deletions": 36,
        "changed_files": 4,
        "created_at": "2018-05-16T00:24:59Z",
        "closed_at": "2018-05-21T22:16:27Z",
        "merged_at": "2018-05-21T22:16:27Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 18,
        "deletions": 34,
        "changed_files": 1,
        "created_at": "2018-05-15T21:03:08Z",
        "closed_at": "2018-05-17T19:55:56Z",
        "merged_at": "2018-05-17T19:55:56Z",
        "body": "Protobuf was showing Stackoverflow hits in the code base, primarily code written to calculate long division. This code was copied from a stackoverflow post, which means it would be licensed under CC BY-SA 3.0. Due to this license, IBM Legal did not want to include this OSS in our products and advised us to re-write this particular piece of code to avoid the license restriction. We have re-written the code for our own distribution, and are willing to merge it into the main code base for others who want to avoid the stackoverflow license issues to benefit as well.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 0,
        "changed_files": 4,
        "created_at": "2018-05-15T20:23:30Z",
        "closed_at": "2018-05-15T21:26:02Z",
        "merged_at": "2018-05-15T21:26:02Z",
        "body": "Fix CMake build issue with version.rc for non-MSVC environment",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-05-15T17:14:32Z",
        "closed_at": "2018-05-16T20:19:26Z",
        "merged_at": "2018-05-16T20:19:26Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 31,
        "deletions": 3,
        "changed_files": 5,
        "created_at": "2018-05-15T00:02:45Z",
        "closed_at": "2018-05-18T00:11:07Z",
        "merged_at": "2018-05-18T00:11:07Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 39,
        "deletions": 39,
        "changed_files": 13,
        "created_at": "2018-05-14T23:20:25Z",
        "closed_at": "2018-06-19T03:45:50Z",
        "merged_at": "2018-06-19T03:45:50Z",
        "body": "This avoids compile warnings when compiling generated code with the\r\n-Wmissing-declarations option.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 43,
        "deletions": 43,
        "changed_files": 25,
        "created_at": "2018-05-14T23:07:33Z",
        "closed_at": "2018-05-15T22:20:51Z",
        "merged_at": "2018-05-15T22:20:51Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2018-05-14T22:56:50Z",
        "closed_at": "2018-05-15T23:33:02Z",
        "merged_at": "2018-05-15T23:33:02Z",
        "body": "Remove signed integer overflow.\r\nSigned integer overflow creates undefined behavior that may lead to unpredictable fails on different platforms.\r\nOne known example of the hardware where this code did fail is Apple A6 (32-bit Apple Swift CPU)\r\n\r\nHash function updated.\r\n16777619, 16777499 - two prime numbers that typically used to get better dispersion.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2018-05-14T19:01:25Z",
        "closed_at": "2018-05-14T23:14:05Z",
        "merged_at": "2018-05-14T23:14:05Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 41,
        "deletions": 17,
        "changed_files": 4,
        "created_at": "2018-05-14T17:35:35Z",
        "closed_at": "2018-05-14T23:08:48Z",
        "merged_at": "2018-05-14T23:08:48Z",
        "body": "The php_metadata_namespace is corresponded to the relative directory of\r\nthe metadata file. e.g., previously, the metadata file of foo.proto was\r\nGPBMetadata/Foo.php. If the php_metadata_namespace is \"Metadata\\\\Bar\",\r\nthe metadata file will be Metadata/Bar/Foo.php.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 19,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2018-05-14T07:45:16Z",
        "closed_at": "2018-05-22T19:52:08Z",
        "merged_at": "2018-05-22T19:52:08Z",
        "body": "CMake has introduced [CMP0042](https://cmake.org/cmake/help/latest/policy/CMP0042.html) in CMake 3.0\r\n\r\nContext:\r\nI'm currently moving google/or-tools from static dependencies to dynamic one, unfortunately protobuf don't use `@rpath/` as prefix path contrary to gflags and glog so it is difficult for me to recreate our sdk since libprotobuf.dylib contains absolute (build) path...\r\n\r\nOn MacOS library need to find itself and by default they use an absolute path pointing to the build dir (i.e. everyhing blow up at install and it is no relocatable ;)). Like on Unix world, you can use rpath and $ORIGIN like.\r\n- First use `@rpath/` as --install-name prefix (done by enabling CMP0042)\r\n- then you could add some `@loader_path;@loader_path/../lib;etc` to LC_RPATH list (cf [working example](https://github.com/Mizux/cmake-cpp/blob/master/FooBarApp/CMakeLists.txt#L11) if you are curious..)\r\nnote: `@loader_path` is the equivalent to `$ORIGIN`\r\nnote2: contrary to UNIX it seems you need several calls to  -Wl,-rpath, i.e. one path at a time while on unix you can add several path using colon ':' (on CMake with RPATH_INSTALL you can use item separator semicolon ';' so cmake will add several calls (otools -l will show you all LC_RPATH entries))\r\n\r\n**WARNING**: On MacOS `protoc` depends on `libprotoc.dylib` and `libprotobuf.dylib`,  so while it's work in build dir since cmake add an `LC_RPATH`, **BUT** it's not working if using `make install DESTDIR=foo` with:\r\nfoo/usr/local:\r\n + /bin\r\n      - protoc\r\n + /lib\r\n     - libprotoc.dylib\r\n     - libprotobuf.dylib\r\n\r\ni.e. cmake remove build dir rpath (good) but doesn't add a `@loader_path/..` entry (bad but expected), working on it...\r\nEDIT: my last commit add the correct rpath -> everything seems to work and are relocatable\r\nToDo: check if this fix the python setup.py use of protoc cf https://github.com/google/protobuf/blame/master/python/README.md#L60",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2018-05-14T07:32:33Z",
        "closed_at": "2018-05-17T17:17:58Z",
        "merged_at": "2018-05-17T17:17:58Z",
        "body": "I made two changes to cmake protobuf_generate\r\n * The parameter GENERATE_EXTENSIONS has been ignored, because the variable was named protobuf_GENERATE_EXTENSIONS instead of protobuf_generate_GENERATE_EXTENSIONS\r\n * Add the parameter PROTOC_OUT_DIR to specify an alternative output directory for the generated files. If this parameter is not set, all generated files will be placed in ${CMAKE_CURRENT_BINARY_DIR} as before.\r\n\r\nExample:\r\n```\r\nfind_package(protobuf REQUIRED CONFIG)\r\n\r\nadd_library(FooBarTarget Foo.proto)\r\nprotobuf_generate(TARGET FooBarTarget PROTOC_OUT_DIR ${CMAKE_CURRENT_SOURCE_DIR}/src-gen)\r\n```",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 35,
        "changed_files": 2,
        "created_at": "2018-05-11T05:29:14Z",
        "closed_at": "2018-05-14T20:41:03Z",
        "merged_at": "2018-05-14T20:41:03Z",
        "body": "\u2026nt Java versions and removes some reliance on JDK internals.\r\n\r\nAddresses https://github.com/google/protobuf/pull/3824#discussion_r187363523",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 751,
        "deletions": 222,
        "changed_files": 6,
        "created_at": "2018-05-10T20:27:21Z",
        "closed_at": "2018-05-11T20:57:07Z",
        "merged_at": "2018-05-11T20:57:07Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 474,
        "deletions": 449,
        "changed_files": 36,
        "created_at": "2018-05-10T18:03:51Z",
        "closed_at": "2018-06-25T20:52:55Z",
        "merged_at": "2018-06-25T20:52:55Z",
        "body": "Add PROTOBUF_OVERRIDE macro, which is defined to be\r\n\"override\" for c++11 and nothing for older versions.\r\nPROTOBUF_OVERRIDE is added for overridden virtual\r\nfunctions.\r\nPlease refer following issue for discussion on this.\r\nhttps://github.com/google/protobuf/issues/67",
        "comments": 14
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-05-09T14:29:54Z",
        "closed_at": "2018-05-14T17:36:09Z",
        "merged_at": null,
        "body": "Hi!  I'm Thomas Colthurst, and I work on the Nucleus project (github.com/google/nucleus).\r\n\r\nFor that project, I've written a custom Clif_PyObjAs converter that bypasses the expensive copies that Clif normally imposes when passing protocol buffers between C++ and Python.  But that function needs to call MutableCProtoInsidePyProto, and to do that, I need that function to be exported by some cc_library target.  Thus this pull request.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2018-05-08T22:36:31Z",
        "closed_at": "2018-05-10T17:52:40Z",
        "merged_at": "2018-05-10T17:52:40Z",
        "body": "#4031 ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2018-05-08T21:03:05Z",
        "closed_at": "2018-05-10T17:52:00Z",
        "merged_at": "2018-05-10T17:52:00Z",
        "body": "So that subclasses can also be ok. Check #4462",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2018-05-04T18:39:48Z",
        "closed_at": "2018-05-06T18:48:44Z",
        "merged_at": "2018-05-06T18:48:44Z",
        "body": "Pointer Arguments to memcpy can not be null in UndefinedBehaviorSanitizer.\r\nIn this case, both the memory and the size was zero. This change allows\r\nprotoc to run under UndefinedBehaviorSanitizer.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 26,
        "deletions": 6,
        "changed_files": 3,
        "created_at": "2018-05-03T00:21:55Z",
        "closed_at": "2018-05-14T20:44:30Z",
        "merged_at": "2018-05-14T20:44:30Z",
        "body": "MinGW Appveyor build protobuf lib and compiler.\r\n\r\nTest currently disabled with -Dprotobuf_BUILD_TESTS=0 because some tests are failed to link with following errors: Fatal error: can't close map_lite_unittest.pb.cc.obj: File too big",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-05-02T12:16:26Z",
        "closed_at": "2018-05-02T20:45:29Z",
        "merged_at": "2018-05-02T20:45:29Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2018-05-01T10:11:12Z",
        "closed_at": "2018-05-02T01:07:42Z",
        "merged_at": "2018-05-02T01:07:42Z",
        "body": "",
        "comments": 23
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-04-30T12:03:00Z",
        "closed_at": "2018-04-30T17:55:01Z",
        "merged_at": "2018-04-30T17:55:01Z",
        "body": "Add a third-party RPC implementation: raster - a network framework supports pbrpc by 'service' keyword.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 81,
        "deletions": 5,
        "changed_files": 7,
        "created_at": "2018-04-30T08:00:16Z",
        "closed_at": "2018-05-14T20:47:29Z",
        "merged_at": "2018-05-14T20:47:29Z",
        "body": "Windows binaries of protobuf (DLLs built in shared mode and the protoc.exe) will contain version information in file details.\r\n\r\nThis fixes #3380\r\n\r\n![image](https://user-images.githubusercontent.com/287778/39418850-016ab726-4c5d-11e8-99f5-e72fd15a64b4.png)\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-04-29T16:06:14Z",
        "closed_at": "2018-04-30T18:00:47Z",
        "merged_at": "2018-04-30T18:00:47Z",
        "body": "The class name was linked to the next word in the sentence.\r\n\"User\\UserRequestis not found in descriptor pool.\"",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2018-04-29T11:19:24Z",
        "closed_at": "2018-04-30T17:48:32Z",
        "merged_at": null,
        "body": "Newly created travis machines uses docker without **sudo**, so `tests.sh` will fail when installing gcc manualy. This ensures gcc 4.8 is installed on travis machine for testing **csharp** language.\r\n\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2018-04-28T08:59:58Z",
        "closed_at": "2018-05-15T18:25:23Z",
        "merged_at": "2018-05-15T18:25:23Z",
        "body": "Use correct VS version in comment",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-04-27T17:44:18Z",
        "closed_at": "2018-04-27T19:19:21Z",
        "merged_at": null,
        "body": "Fixes #4570",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-04-27T00:27:43Z",
        "closed_at": "2018-04-27T19:21:15Z",
        "merged_at": "2018-04-27T19:21:15Z",
        "body": "comparison was spelled wrong",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 47,
        "deletions": 18,
        "changed_files": 2,
        "created_at": "2018-04-26T15:37:29Z",
        "closed_at": "2018-04-27T15:47:47Z",
        "merged_at": "2018-04-27T15:47:47Z",
        "body": "With this fix, Unity using IL2CPP should work with one of two\r\napproaches:\r\n\r\n- Call `FileDescriptor.ForceReflectionInitialization<T>` for every\r\n  enum present in generated code (including oneof case enums)\r\n- Ensure that IL2CPP uses the same code for int and any int-based\r\n  enums\r\n\r\nThe former approach is likely to be simpler, unless IL2CPP changes\r\nits default behavior. We *could* potentially generate the code\r\nautomatically, but that makes me slightly uncomfortable in terms of\r\ngenerating code that's only relevant in one specific scenario. It\r\nwould be reasonably easy to write a tool (separate from protoc) to\r\ngenerate the code required for any specific set of assemblies, so\r\nthat Unity users can include it in their application. We can always\r\ndecide to change to generate it automatically later.",
        "comments": 14
    },
    {
        "merged": false,
        "additions": 60,
        "deletions": 22,
        "changed_files": 1,
        "created_at": "2018-04-26T06:01:36Z",
        "closed_at": "2018-05-14T20:53:08Z",
        "merged_at": null,
        "body": "Ref #3781\r\n\r\nThis is an attempt to workaround the Unsafe warning on JDK 9+.\r\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2018-04-26T05:53:44Z",
        "closed_at": "2018-04-30T15:44:42Z",
        "merged_at": "2018-04-30T15:44:42Z",
        "body": "Currently exceptions raised by RaiseException() is never deallocated because:\r\n\r\n* ARC is disabled for this library: https://github.com/google/protobuf/blob/master/BUILD#L913\r\n* The NSException is constructed with `+alloc` but is never `-release`d.\r\n\r\nThis change fixes the issue by using `-[NSException exceptionWithName:...]` instead, which returns an autoreleased instance, so it is deallocated properly.\r\n\r\nThis also follows a common practice that you should pass an autoreleased exception to `-raise`. Otherwise every `@catch` clause for that exception must `-release` it.\r\n\r\nI found this issue because Leaks Instruments reported this NSException instance as a Root Leak in our app, which uses this library. Verified that the leak has gone away in Leaks Instruments by applying this pull request.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-04-25T16:54:54Z",
        "closed_at": "2018-04-25T21:16:14Z",
        "merged_at": "2018-04-25T21:16:14Z",
        "body": "From:\r\nhttps://github.com/rake-compiler/rake-compiler/issues/146#issuecomment-368539245",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-04-25T07:38:12Z",
        "closed_at": "2018-05-11T05:43:38Z",
        "merged_at": null,
        "body": "set(CMAKE_CXX_FLAGS \"-std=c++11\") overrides all other setting passed by NDK",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2018-04-25T06:32:00Z",
        "closed_at": "2018-04-27T19:11:25Z",
        "merged_at": "2018-04-27T19:11:25Z",
        "body": "Add -std=c++11 using CMake default target properties...\r\nIt follows #4475 and #4509\r\n\r\n/!\\ THIS WILL BUMP MINIMUM CMAKE VERSION TO 3.1.3 /!\\\r\n\r\nref:\r\nhttps://cmake.org/cmake/help/latest/prop_tgt/CXX_STANDARD.html\r\nhttps://cmake.org/cmake/help/latest/prop_tgt/CXX_STANDARD_REQUIRED.html\r\nhttps://cmake.org/cmake/help/latest/prop_tgt/CXX_EXTENSIONS.html",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 17,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2018-04-20T21:38:01Z",
        "closed_at": "2018-04-21T16:04:04Z",
        "merged_at": "2018-04-21T16:04:04Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 20,
        "deletions": 8,
        "changed_files": 2,
        "created_at": "2018-04-20T11:52:08Z",
        "closed_at": "2018-05-11T05:44:48Z",
        "merged_at": "2018-05-11T05:44:48Z",
        "body": "For google/or-tools, on windows, we need to use `import \"google/protobuf/wrappers.proto\";` since we want \"optional\" int64 and in version3 POD get default value...\r\n-> so we use \"google.protobuf.Int64Value\" since 0 is a valid value and different from \"not set\" for our use case.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-04-19T23:03:24Z",
        "closed_at": "2018-05-09T22:35:04Z",
        "merged_at": "2018-05-09T22:35:04Z",
        "body": "",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 1482,
        "deletions": 660,
        "changed_files": 77,
        "created_at": "2018-04-19T02:54:09Z",
        "closed_at": "2018-05-23T23:43:31Z",
        "merged_at": "2018-05-23T23:43:31Z",
        "body": "The proto\r\n\r\n```\r\nmessage TestMessage {\r\n  NestedEnum nested_enum = 1;\r\n  NestedMessage nested_message = 2;\r\n\r\n  enum NestedEnum {\r\n      ZERO = 0;\r\n  }\r\n\r\n  // Test nested messages\r\n  message NestedMessage {\r\n      int32 a = 1;\r\n  }\r\n}\r\n```\r\nWill result in the files\r\n```\r\nTestMessage.php\r\nTestMessage/NestedEnum.php\r\nTestMessage/NestedMessage.php\r\n```\r\n\r\nWith namespaces corresponding to the classes, e.g.\r\n\r\n```php\r\nnamespace TestMessage;\r\n\r\nclass NestedEnum\r\n{\r\n    // ...\r\n}\r\n```",
        "comments": 12
    },
    {
        "merged": false,
        "additions": 86,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2018-04-19T00:25:38Z",
        "closed_at": "2018-04-23T21:31:11Z",
        "merged_at": null,
        "body": "https://github.com/google/protobuf/issues/4531",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 228,
        "deletions": 2,
        "changed_files": 15,
        "created_at": "2018-04-19T00:14:13Z",
        "closed_at": "2018-12-01T00:40:28Z",
        "merged_at": null,
        "body": "In accordance with [Python](https://developers.google.com/protocol-buffers/docs/reference/python-generated#enum), this PR adds `name` and `value` methods to PHP Protobuf Enums, so that conversion is programmatically possible between the two.\r\n\r\n```php\r\n$this->assertEquals('VALUE_A', SomeEnum::name(SomeEnum::VALUE_A));\r\n$this->assertEquals(5, SomeEnum::value('VALUE_B'))\r\n```\r\n\r\ncc @michaelbausor @dwsupplee @tmatsuo",
        "comments": 12
    },
    {
        "merged": true,
        "additions": 21,
        "deletions": 13,
        "changed_files": 9,
        "created_at": "2018-04-19T00:13:12Z",
        "closed_at": "2018-06-19T20:20:57Z",
        "merged_at": "2018-06-19T20:20:56Z",
        "body": "same as #3331, but to the `php-generated-dev` branch\r\n\r\nThis adds typehints for all Message setters. A few other interesting things have happened as a result:\r\n\r\n  1. Setters for Message types no longer pass-by-reference, since this is implicit for PHP objects\r\n  1. Setters for Message types now accept an optional `null`, since the base `Message` class requires passing `null` to the public setters in order for the method `clear()` to work.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1082,
        "deletions": 161,
        "changed_files": 31,
        "created_at": "2018-04-18T19:31:04Z",
        "closed_at": "2018-05-02T21:40:16Z",
        "merged_at": "2018-05-02T21:40:16Z",
        "body": "Same as #3349, but to the `php-generated-dev` branch",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-04-17T21:08:19Z",
        "closed_at": "2018-05-03T22:55:28Z",
        "merged_at": "2018-05-03T22:55:28Z",
        "body": "Kokoro is using c++ 4.8, which needs explicitly declare \"-std=c++11\" arg",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2018-04-17T12:19:48Z",
        "closed_at": "2018-04-17T20:45:57Z",
        "merged_at": null,
        "body": "\u957f\u5ea6\u8fc7\u6ee4\u4e4b\u540e\u5bfc\u81f4js\u89e3\u6790\u62a5\u9519",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 59,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2018-04-17T07:25:57Z",
        "closed_at": "2018-04-17T21:15:54Z",
        "merged_at": null,
        "body": "\u2026hort.\r\n\r\n  where it equal ~short~, the name of enum's value liked C# or Java style.\r\n  such as:\r\nenum kGenderType\r\n{\r\n  kGenderType_None = 0;\r\n  kGenderType_Male = 1;\r\n  kGenderType_Female = 2;\r\n};\r\n\r\nwill generated JS code like:\r\nproto.kGenderType = {\r\n  NONE : 0,\r\n  MALE: 1,\r\n  FEMALE: 2\r\n}",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 8,
        "changed_files": 2,
        "created_at": "2018-04-17T00:02:20Z",
        "closed_at": "2018-04-20T17:08:02Z",
        "merged_at": "2018-04-20T17:08:02Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 20,
        "changed_files": 8,
        "created_at": "2018-04-16T08:04:33Z",
        "closed_at": "2018-04-16T23:08:31Z",
        "merged_at": "2018-04-16T23:08:31Z",
        "body": "The current 15.6.x versions of Visual Studio 2017 contain a bug that\r\nprevent them from compiling the following construct under certain\r\nconditions:\r\n\r\nstd::unique_ptr<std::unique_ptr<Foo> []> foos;\r\n\r\nThis will fail to compile if Foo is an abstract class. To work-around\r\nthe problem the whole construct was change into:\r\n\r\nstd::vector<std::unique_ptr<Foo>> foos;\r\n\r\nThis not only fixes the compiler error but is also more readable than\r\nprevious version.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 117,
        "changed_files": 3,
        "created_at": "2018-04-13T22:08:49Z",
        "closed_at": "2018-04-16T22:27:15Z",
        "merged_at": "2018-04-16T22:27:15Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-04-13T09:12:57Z",
        "closed_at": "2018-04-23T20:57:25Z",
        "merged_at": null,
        "body": "append compiler flags but not overwrite\r\nCMAKE_CXX_FLAGS may contains special flags used in cmake cross-compiling\r\nthis change fix build with android-ndk-r16b unified header, which needs the \"-D__ANDROID_API__=21\" flag\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-04-13T07:08:54Z",
        "closed_at": "2018-04-23T20:57:49Z",
        "merged_at": null,
        "body": "This wraps up all the well known protos into one proto_library that\r\nconsumers can add to deps.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 70,
        "deletions": 19,
        "changed_files": 2,
        "created_at": "2018-04-13T03:35:16Z",
        "closed_at": "2018-05-14T20:56:26Z",
        "merged_at": null,
        "body": "This feature request is similar to https://github.com/google/protobuf/issues/2838\r\n\r\nExcept instead of ignoring fields, we should be able to ignore an unknown type when parsing an Any message.\r\n\r\nI added IgnoreUnknownTypes to JsonParser.Settings just like IgnoreUnknownFields to opt into this.",
        "comments": 14
    },
    {
        "merged": true,
        "additions": 122,
        "deletions": 274,
        "changed_files": 8,
        "created_at": "2018-04-13T01:07:51Z",
        "closed_at": "2018-04-18T23:42:25Z",
        "merged_at": "2018-04-18T23:42:25Z",
        "body": "A few things:\r\n1. Removed java/lite directory and entries about lite in pom.xml.\r\n2. Updated protoc to generate a warning when optimize_for = LITE_RUNTIME is present when generating Java code. The warning links to instructions about how to use the Java lite plugin.\r\n3. Updated java/README.md about how to use protobuf Java and links to the new doc about using Java lite.\r\n4. Added a java/lite.md doc about how to use Java Lite runtime.\r\n\r\nPartially fixes https://github.com/google/protobuf/issues/4314",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 584,
        "deletions": 53,
        "changed_files": 6,
        "created_at": "2018-04-05T00:56:40Z",
        "closed_at": "2018-04-10T22:56:12Z",
        "merged_at": "2018-04-10T22:56:11Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 119,
        "deletions": 27,
        "changed_files": 2,
        "created_at": "2018-04-04T20:09:08Z",
        "closed_at": "2018-06-22T18:02:54Z",
        "merged_at": null,
        "body": "Motivation:\r\nBeing able to human write byte arrays.\r\n\r\nSupose a Byte Array field in the context of\r\nthe application consists of an array of\r\nintegers or floats, in order to write\r\na text format protobuf message\r\nthe string may have to look something like this:\r\n\r\nInt8Array: \"\\000\\001\\002\\003\"\r\n\r\nKeeping in mind scalar size (8bit,16bit,32bit,etc)\r\nas well as escape character values makes this task\r\nhumanly complicated, being able to supply custom parsers\r\nallows for this syntax:\r\n\r\nInt8Array: \"0,1,2,3\"\r\n\r\nor even\r\n\r\nMatrix: \"1,0,0,0,\"\r\n\t\"0,1,0,0,\"\r\n\t\"0,0,1,0,\"\r\n\t\"0,0,0,1\"\r\n\r\nThe parser would then expect a CSV, handle white space,\r\nand build the byte array properly.\r\n\r\nIn the case of regular strings the parser may be used\r\nas a formater, removing whitespace, etc,\r\nand for integer and float scalar values transformation\r\nsuch as degrees to radians may be performed.\r\n\r\nDetailed description of the introduced feature:\r\n\r\nThis commit implements a functionality\r\nsimilar to TextFormat::(Fast)FieldValuePrinter\r\nbut on the parser side.\r\n\r\nThis allows the creation of custom parse\r\nfunctions to preprocess strings,\r\nintegers and doubles, based on the\r\nio::Tokeinzer::Parse* api.\r\n\r\nThe default introduced parser is just a wrapper\r\nfor the tokenizer functions,\r\nso functionality should not change,\r\nand no old should break.\r\n\r\nOn the public API side,\r\nbesides the FieldValueParser class,\r\ntwo member functions are introduced:\r\n\r\nTextFormat::Parser::RegisterFieldValueParser\r\nTextFormat::Parser::SetDefaultFieldValueParser\r\n\r\nWhich follow the same structure as their paralells in\r\nTextFormat::Printer.\r\n\r\nThe FieldValueParser class contains only four member functions:\r\n\r\nvirtual double ParseFloat(const string& text) const;\r\nvirtual void ParseString(const string& text, string* output) const;\r\nvirtual void ParseStringAppend(const string& text, string* output) const;\r\nvirtual bool ParseInteger(const string& text, uint64 max_value,uint64* output) const;\r\n\r\nParseFloat and ParseInteger have limited utility,\r\nthough perhaps they maybe useful to hook a degree to radians\r\nconversion or similar situation.\r\n\r\nParseString is currently not being used but included for completeness,\r\nwhile ParseStringAppend is likely the one to see most use.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-04-04T02:31:18Z",
        "closed_at": "2018-04-05T23:46:07Z",
        "merged_at": "2018-04-05T23:46:07Z",
        "body": "CMakeLists.txt adds c++11 flags for clang",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 286,
        "deletions": 155,
        "changed_files": 16,
        "created_at": "2018-04-03T06:27:59Z",
        "closed_at": "2018-04-05T23:48:18Z",
        "merged_at": null,
        "body": "According to the SQLite author, this might make things go between 5% and 10%\r\nfaster: https://www.sqlite.org/amalgamation.html\r\n\r\nIt reduced `du -sh bazel-bin/external/protobuf_archive` from to 20MB to 14MB.\r\nIt also reduced the latency on one of my builds by about 10 seconds. If I also\r\nuse the --distinct_host_configuration=false it reduced by 20 seconds.\r\n\r\nPlease note mine editor runs buildifier automatically.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2018-04-02T23:05:38Z",
        "closed_at": "2018-04-06T22:43:33Z",
        "merged_at": "2018-04-06T22:43:33Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 53,
        "deletions": 19,
        "changed_files": 14,
        "created_at": "2018-04-02T17:51:44Z",
        "closed_at": "2018-04-02T22:55:28Z",
        "merged_at": "2018-04-02T22:55:28Z",
        "body": "Merge 3.5.x to master.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1351,
        "deletions": 40,
        "changed_files": 43,
        "created_at": "2018-04-02T13:56:23Z",
        "closed_at": "2018-04-02T18:09:20Z",
        "merged_at": "2018-04-02T18:09:20Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 85,
        "deletions": 71,
        "changed_files": 2,
        "created_at": "2018-03-29T20:18:43Z",
        "closed_at": "2018-04-02T18:18:27Z",
        "merged_at": "2018-04-02T18:18:27Z",
        "body": "1. Make it clear that there are two ways to get protobuf source and explain what .tar.gz/.zip package users should be downloading.\r\n2. Some format fixes and minor cleanups.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 19,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-03-29T16:19:10Z",
        "closed_at": "2018-04-06T07:05:33Z",
        "merged_at": "2018-04-06T07:05:33Z",
        "body": "The SampleEnumMethod method was previously only called via\r\nreflection, so the Unity linker thought it could be removed.\r\nThis PR should avoid that issue, reducing the work needed by\r\ncustomers to use Google.Protobuf from Unity.\r\n\r\n@SetoKaiba could you try this change, removing the linker options in your Unity project? (It would be so nice if Unity developers could just use it without extra configuration.)",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 1417,
        "deletions": 41,
        "changed_files": 51,
        "created_at": "2018-03-29T14:03:48Z",
        "closed_at": "2018-04-02T13:55:27Z",
        "merged_at": null,
        "body": "fyi - @sergiocampama @dmaclach ",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 32,
        "deletions": 11,
        "changed_files": 3,
        "created_at": "2018-03-29T00:40:22Z",
        "closed_at": "2018-04-02T20:55:13Z",
        "merged_at": "2018-04-02T20:55:13Z",
        "body": "You'll want to look at each commit independently, including its description.\r\nI'll want to submit the commits separately as well.\r\n\r\nThis does not fix the git clone TLS problem. But it allows you to workaround it\r\nmanually using wget instead.\r\n\r\nThe scl-enable-devtoolset.sh is a more powerful change than it may look\r\nat first glance. It is taken from grpc-java (https://github.com/grpc/grpc-java/commit/9c5e96e376754cf922b1417af184fd8552f9feef) as part of\r\nour work to improve our release process. Coupled with run_in_docker.sh\r\nit allows an improved release and development process as the files are\r\nstored on the host in a normal checkout and the computation is performed\r\nin the docker environment.\r\n\r\nrun_in_docker.sh (in that referenced commit) is overly complex to\r\nworkaround Java issues when running as a uid that does not exist in\r\n/etc/passwd. If not for Java, it would be a single \"docker run\" line notably\r\nusing -v to mount a host directory into the container and -u/-g to set\r\nthe user to run as so that created files have the correct permissions.\r\n\r\nIf one of the commits is unsettling, then I can split it out.\r\n\r\nFixes #4419",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 14,
        "changed_files": 1,
        "created_at": "2018-03-28T00:49:07Z",
        "closed_at": "2018-03-28T17:58:27Z",
        "merged_at": "2018-03-28T17:58:27Z",
        "body": "Moved the badges to the language table as they are per-language based.\r\nSome badges are not yet available due to stuck kokoro jobs.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 10,
        "changed_files": 2,
        "created_at": "2018-03-27T22:58:27Z",
        "closed_at": "2018-03-28T21:15:26Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 692,
        "changed_files": 10,
        "created_at": "2018-03-27T22:43:42Z",
        "closed_at": "2018-03-28T00:30:22Z",
        "merged_at": "2018-03-28T00:30:22Z",
        "body": "jenkins has been replaced by kokoro and we never use more_tests.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 15,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2018-03-27T18:21:47Z",
        "closed_at": "2018-06-08T18:56:23Z",
        "merged_at": null,
        "body": "Fixes #2365",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 53,
        "deletions": 53,
        "changed_files": 11,
        "created_at": "2018-03-27T18:11:35Z",
        "closed_at": "2018-04-19T18:57:32Z",
        "merged_at": "2018-04-19T18:57:32Z",
        "body": "Resolves #4316",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 238,
        "changed_files": 2,
        "created_at": "2018-03-27T17:12:33Z",
        "closed_at": "2018-03-27T19:47:36Z",
        "merged_at": "2018-03-27T19:47:36Z",
        "body": "We can delete this file since it is no longer used.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-03-26T22:15:38Z",
        "closed_at": "2018-03-26T23:39:50Z",
        "merged_at": "2018-03-26T23:39:50Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 11,
        "changed_files": 1,
        "created_at": "2018-03-26T22:08:57Z",
        "closed_at": "2018-03-28T21:10:14Z",
        "merged_at": "2018-03-28T21:10:14Z",
        "body": "Remove copyright attributions to files that no longer exist; Change the\r\nyear to 2008 to be consistent with the copyright header of other source\r\nfiles.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 78,
        "changed_files": 6,
        "created_at": "2018-03-26T21:46:08Z",
        "closed_at": "2018-03-26T23:40:21Z",
        "merged_at": "2018-03-26T23:40:21Z",
        "body": "Their job configs are being deleted in cl/190526138",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 173,
        "deletions": 49,
        "changed_files": 22,
        "created_at": "2018-03-26T16:45:35Z",
        "closed_at": "2018-03-26T20:44:24Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2018-03-25T16:56:12Z",
        "closed_at": "2018-03-26T19:12:46Z",
        "merged_at": "2018-03-26T19:12:46Z",
        "body": "This makes possible to build grpc_php_plugin with protobuf in shared mode.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 748,
        "deletions": 208,
        "changed_files": 15,
        "created_at": "2018-03-22T23:35:52Z",
        "closed_at": "2018-04-10T21:23:08Z",
        "merged_at": "2018-04-10T21:23:08Z",
        "body": "The dashboard can be accessed from [here](http://performance-dot-grpc-testing.appspot.com/explore?dashboard=5715350830186496)\r\nI'll add job configuration for this internally after this landed.\r\n\r\nStill haven't found why using \"-fPIC\" is so slow for CPP and py-cpp, and I kept the flag unchanged.\n\n<!-- Reviewable:start -->\n---\nThis change is\u2002[<img src=\"https://reviewable.io/review_button.svg\" height=\"34\" align=\"absmiddle\" alt=\"Reviewable\"/>](https://reviewable.io/reviews/google/protobuf/4415)\n<!-- Reviewable:end -->\n",
        "comments": 11
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 13,
        "changed_files": 1,
        "created_at": "2018-03-22T20:16:06Z",
        "closed_at": "2018-03-23T22:24:04Z",
        "merged_at": "2018-03-23T22:24:04Z",
        "body": "Switch to using the MSVC options, not based on the cpu, but based on the compiler name. This allows building on Windows with MSYS or MinGW's gcc.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 4907,
        "changed_files": 24,
        "created_at": "2018-03-22T16:50:27Z",
        "closed_at": "2018-03-22T23:12:25Z",
        "merged_at": "2018-03-22T23:12:25Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2018-03-22T14:49:33Z",
        "closed_at": "2018-04-02T20:56:23Z",
        "merged_at": "2018-04-02T20:56:23Z",
        "body": "For supporting ppc64le, the scripts under \"protoc-artifacts\" have been modified. \r\nHave tested on RHEL 7.2 as well as Ubuntu 16.04, build and tests were successful.",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 66,
        "deletions": 17,
        "changed_files": 5,
        "created_at": "2018-03-19T08:00:43Z",
        "closed_at": "2018-03-26T20:35:44Z",
        "merged_at": "2018-03-26T20:35:44Z",
        "body": "\u2026ys print the default value of enums as strings\r\n\r\ndescription of the problem:\r\n\r\ncall the function MessageToJsonString, and set both always_print_primitive_fields and always_print_enums_as_ints to true. it print the default value of enums as strings, does not as ints.\r\n\r\nThis submission resolved the issue\r\n\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 15463,
        "deletions": 14342,
        "changed_files": 312,
        "created_at": "2018-03-14T18:42:36Z",
        "closed_at": "2018-03-20T23:14:33Z",
        "merged_at": "2018-03-20T23:14:33Z",
        "body": "This pull request also deletes scoped_ptr and scoped_array, now that we have switched\r\nto C++11 and can use std::unique_ptr.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 36,
        "deletions": 7,
        "changed_files": 3,
        "created_at": "2018-03-14T03:20:05Z",
        "closed_at": "2021-06-04T18:33:03Z",
        "merged_at": null,
        "body": "While you can do `message.repeated_field.replace([])`, this is not a very intuitive interface for a Ruby developer. This allows using the `#{field_name}=` method which essentially falls back to the replace method",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-03-12T12:26:09Z",
        "closed_at": "2018-06-14T08:01:42Z",
        "merged_at": null,
        "body": "Protobuf contains a `protobuf_generate` CMake function to simplify the compilation of proto files. The custom command behind this function uses an obsolete variable `ABS_FIL` to define the dependent input files. Hence, modification of the input file would not trigger a recompilation via protoc.\r\n\r\nThis pull request fixes this.",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-03-12T09:34:28Z",
        "closed_at": "2018-04-09T21:14:31Z",
        "merged_at": "2018-04-09T21:14:31Z",
        "body": "This fixes the placement of the JSON_BIGINT_AS_STRING option passed to json_decode, this is being passed as the $assoc parameter which decodes the JSON as an associative array.",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2018-03-11T21:48:52Z",
        "closed_at": "2018-03-12T22:27:11Z",
        "merged_at": "2018-03-12T22:27:11Z",
        "body": "Start outputting missing *_pb2_grpc.py files when  use_grpc_plugin is set to True for py_proto_library.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-03-09T23:18:28Z",
        "closed_at": "2018-03-13T22:53:48Z",
        "merged_at": "2018-03-13T22:53:48Z",
        "body": "This reverts commit f00e06c95bc117fb2ed0ca56c96041c93039f1fe.\r\n\r\nAlthough Node Buffers are not covered by the tests, it seems that there\r\nare users relying on them, so we need to add back in support for them.\r\n\r\nThis fixes issue #4359.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2018-03-09T06:35:47Z",
        "closed_at": "2018-03-09T18:49:38Z",
        "merged_at": "2018-03-09T18:49:38Z",
        "body": "Replace //:protoc and similar default macro arguments with @com_google_protobuf prefixed versions. This allows them to work in 3rd party repositories.\r\nFix a bad visibility rule. :hidden does not exist, but :private does.\r\n\r\nFixes: #4374 ",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2783,
        "deletions": 195,
        "changed_files": 2,
        "created_at": "2018-03-08T23:01:01Z",
        "closed_at": "2018-03-09T01:35:23Z",
        "merged_at": "2018-03-09T01:35:23Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-03-08T17:37:41Z",
        "closed_at": "2018-03-16T05:58:21Z",
        "merged_at": "2018-03-16T05:58:21Z",
        "body": "",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2018-03-08T15:28:13Z",
        "closed_at": "2018-03-14T21:23:10Z",
        "merged_at": "2018-03-14T21:23:10Z",
        "body": "I was recently debugging an unrelated bug that made me look into a few details of the protobuf code and came across [this]( https://github.com/google/protobuf/blob/master/objectivec/GPBCodedOutputStream.m#L945), a call to `-[NSOutputStream write:maxLength:]` that doesn't check the return value (bytes written). A few lines up, in `GPBRefreshBuffer`, the bytes written [are checked](https://github.com/google/protobuf/blob/a48d58df9643781947da57bdc13a23ac8d868346/objectivec/GPBCodedOutputStream.m#L70-L74). This pull requests adds a test case and implements the check.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 64,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2018-03-08T12:03:12Z",
        "closed_at": "2018-03-26T20:47:45Z",
        "merged_at": null,
        "body": "This is complementing another PR which is not yet merged in master https://github.com/google/protobuf/pull/4145",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 66,
        "deletions": 17,
        "changed_files": 5,
        "created_at": "2018-03-08T10:30:22Z",
        "closed_at": "2018-03-19T08:05:01Z",
        "merged_at": null,
        "body": "description of the problem:\r\n\r\ncall the function MessageToJsonString, and set both always_print_primitive_fields and always_print_enums_as_ints to true.  it print the default value of enums as strings,  does not as ints.\r\n\r\nThis submission resolved the issue",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2018-03-08T05:49:04Z",
        "closed_at": "2018-03-19T21:32:19Z",
        "merged_at": null,
        "body": "This fixes a segmentation fault triggered by the following command, see the gdb backtrace in issue #2911:\r\n    \r\n`python -c 'from google.protobuf import duration_pb2; help(duration_pb2.Duration)'`\r\n\r\nOrivej Desh [writes](https://github.com/google/protobuf/issues/2974#issuecomment-354191487):\r\n\r\n    The crash in accessing\r\n    google.protobuf.pyext._message.Message._extensions_by_name happens\r\n    because metaclass getters [1] shadow class getters [2] and the intended\r\n    dispatch from the latter to the former [3] does not run. This can be\r\n    fixed by replacing message_meta::Getters with 0 at [1].\r\n\r\n[1] https://github.com/google/protobuf/blob/099d99759101c295244c24d8954ec85b8ac65ce3/python/google/protobuf/pyext/message.cc#L443\r\n[2] https://github.com/google/protobuf/blob/099d99759101c295244c24d8954ec85b8ac65ce3/python/google/protobuf/pyext/message.cc#L2849\r\n[3] https://github.com/google/protobuf/blob/099d99759101c295244c24d8954ec85b8ac65ce3/python/google/protobuf/pyext/message.cc#L2615-L2616\r\n\r\nSee: https://github.com/google/protobuf/issues/2974#issuecomment-354191487\r\nFixes: https://github.com/google/protobuf/issues/2974",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2018-03-07T18:22:44Z",
        "closed_at": "2018-03-12T22:38:34Z",
        "merged_at": null,
        "body": "The _pb2_grpc.py files were added on Oct 20, 2016 in\r\ngrpc/grpc@d953959#diff-d5adca4a2d1e65549a73db695e0db419R768",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 8,
        "changed_files": 2,
        "created_at": "2018-03-07T14:20:12Z",
        "closed_at": "2018-06-22T18:40:42Z",
        "merged_at": null,
        "body": "This is the same fix, as in #3248, but for modern version of protobuf (#3248 had conflicts with master and thus was frozen)\r\n\r\nIt makes protobuf work with overloaded str* functions (when mbstring.func_overload PHP param is greater than 2).",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 243,
        "deletions": 15,
        "changed_files": 9,
        "created_at": "2018-03-07T08:41:37Z",
        "closed_at": "2018-03-20T22:38:53Z",
        "merged_at": "2018-03-20T22:38:53Z",
        "body": "Reorganize internal one to open source. ",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2018-03-06T23:39:04Z",
        "closed_at": "2018-07-02T21:07:18Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-03-06T21:54:53Z",
        "closed_at": "2018-03-06T23:07:05Z",
        "merged_at": "2018-03-06T23:07:05Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-03-05T22:24:18Z",
        "closed_at": "2018-03-05T23:39:08Z",
        "merged_at": "2018-03-05T23:39:08Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 13,
        "changed_files": 2,
        "created_at": "2018-03-05T19:06:26Z",
        "closed_at": "2018-03-06T21:30:04Z",
        "merged_at": "2018-03-06T21:30:04Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2018-03-04T12:27:14Z",
        "closed_at": "2018-03-26T20:42:12Z",
        "merged_at": "2018-03-26T20:42:12Z",
        "body": "This pull request fixes MSVC warning C4800: \"forcing value to bool true or false\"\r\n\r\nhttps://msdn.microsoft.com/en-us/library/b6801kcy.aspx",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 27,
        "deletions": 31,
        "changed_files": 3,
        "created_at": "2018-03-03T16:12:46Z",
        "closed_at": "2018-03-20T22:09:58Z",
        "merged_at": null,
        "body": "This is an alternative to the partial revert proposed in <https://github.com/google/protobuf/pull/4347>. See <https://github.com/google/protobuf/pull/4334> for additional context.\r\n\r\nNote: please make sure all CI builds (including AppVeyor) are green before merging.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 4,
        "created_at": "2018-03-02T01:08:33Z",
        "closed_at": "2018-03-09T18:50:24Z",
        "merged_at": "2018-03-09T18:50:24Z",
        "body": "This reverts commit 724f0be33d0eb42055ebe81ce0c8c7bf88ea666c, which is part of PR https://github.com/google/protobuf/pull/4334 to fix a bazel build issue.\r\n\r\nThe commit in question moves plugin.pb.cc from libprotoc to libprotobuf. However, because libprotoc uses different dllimport/export macros from libprotobuf, the move causes appveyor tests to fail:\r\nhttps://ci.appveyor.com/project/protobuf/protobuf/build/1.0.5732/job/h436akiwyf78f3b5",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 318,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2018-03-01T16:03:57Z",
        "closed_at": "2018-03-23T00:09:26Z",
        "merged_at": "2018-03-23T00:09:26Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 37,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2018-03-01T13:46:32Z",
        "closed_at": "2018-03-20T22:19:43Z",
        "merged_at": "2018-03-20T22:19:43Z",
        "body": "Fixed the C#, and added a conformance test - we'll let CI see whether the other languages are broken too.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 748,
        "deletions": 68,
        "changed_files": 4,
        "created_at": "2018-02-28T15:24:41Z",
        "closed_at": "2018-03-26T20:49:32Z",
        "merged_at": "2018-03-26T20:49:32Z",
        "body": "Fixes #3819 \r\n\r\nI broke this up into multiple commits to make the changes easier to follow:\r\n1. Compute paths (in the `SourceCodeInfo.Location` meaning of path) to options when building the file descriptor.\r\n2. Use the computed paths from step 1 to construct a map from \"path to uninterpreted option\" to \"path to interpreted option\" during the option interpretation step.\r\n3. After options are interpreted, apply the mapping constructed in step 2 to modify the file's source code info.\r\n\r\nWhile testing this (with my own Go test harness that I also used to test my [protoparse](https://godoc.org/github.com/jhump/protoreflect/desc/protoparse) package), I discovered that protoc was also constructing the paths to extension range options incorrectly. The paths that ended up in the source code info were missing the extension range index. So I added a fourth commit so that things looked good:\r\n\r\n4. Fix the way paths to extension range options are generated.\r\n\r\nI have not yet added a test in this repo. I am a little uncertain of *how* I should test it. FWIW, in my custom Go test harness, I simply process a proto source file that has lots of options (normal and custom options) across various descriptor types (including on extension ranges). My harness can print a human-readable interpretation of the source code info which I visually inspect. I can then commit the results as *golden test files* and have a unit test just process the same source file and verifies that the output matches the \"blessed\" golden result.\r\n\r\nI have looked through some of the existing test code, expecting/hoping to find similar tests (that match outputs against \"golden test files\") but couldn't quite find any. Since my changes impact both parsing (for the extension range options fix) and descriptors (for interpreting options and re-writing source code info), I think I probably need two tests: (1) a test in `compiler/parser_unittest.cc` that parses source with extension range options and verifies the resulting source code info; and (2) a test in `descriptor_unittest.cc` that builds a descriptor using a proto with uninterpreted options and corresponding source code info and then verifies that the source code info is modified correctly.\r\n\r\nIf someone can advise, maybe provide pointers to similar kinds of tests, I would greatly appreciate.\n\n<!-- Reviewable:start -->\n---\nThis change is\u2002[<img src=\"https://reviewable.io/review_button.svg\" height=\"34\" align=\"absmiddle\" alt=\"Reviewable\"/>](https://reviewable.io/reviews/google/protobuf/4342)\n<!-- Reviewable:end -->\n",
        "comments": 17
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2018-02-27T06:23:05Z",
        "closed_at": "2018-03-07T18:24:11Z",
        "merged_at": null,
        "body": "The _pb2_grpc.py files were added on Oct 20, 2016 in \r\nhttps://github.com/grpc/grpc/commit/d953959e2bafd645b6ed674861a310daba5f80ae#diff-d5adca4a2d1e65549a73db695e0db419R768",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 48,
        "deletions": 5,
        "changed_files": 3,
        "created_at": "2018-02-26T03:16:14Z",
        "closed_at": "2018-06-22T18:47:01Z",
        "merged_at": null,
        "body": "Add a --fatal_warnings flag that requests that protoc exit with a failing status code if any warnings are generated during compilation.\r\n\r\nPartially address #3980.\r\n\r\n/cc @pherl\r\n\r\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 3,
        "changed_files": 4,
        "created_at": "2018-02-24T19:43:30Z",
        "closed_at": "2018-02-26T18:45:15Z",
        "merged_at": "2018-02-26T18:45:15Z",
        "body": "This prevents the Bazel `CcProtoAspect` from generating and linking\r\nC++ object code for these files. Without this blacklist, symbols for\r\nprotobuf types depended on by `libprotobuf` may be defined multiple\r\ntimes and violate the ODR rule.\r\n\r\nFixes #4311 \r\nSee also https://github.com/bazelbuild/bazel/issues/4650",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-02-24T19:35:23Z",
        "closed_at": "2018-02-26T20:18:49Z",
        "merged_at": "2018-02-26T20:18:49Z",
        "body": "I noticed that running this script as `./update_file_lists.sh` on MacOS\r\nwas corrupting `cmake/extract_includes.bat.in`. Forcing the shell to\r\nBash fixes the generated file output.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-02-24T18:22:36Z",
        "closed_at": "2018-04-02T22:44:29Z",
        "merged_at": "2018-04-02T22:44:29Z",
        "body": "Naive attempt to fix #4025. I'm not familiar with how to test a fork of an npm package, so any guidance on that would be great.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 30,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2018-02-22T21:52:54Z",
        "closed_at": "2018-08-08T21:49:21Z",
        "merged_at": null,
        "body": "\u2026 changes during iteration",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-02-21T07:19:34Z",
        "closed_at": "2018-02-22T23:33:28Z",
        "merged_at": "2018-02-22T23:33:28Z",
        "body": "Using two configuration flags `DZLIB_INCLUDE_DIR` and `DZLIB_LIB` we can locate an existing ZLIB on the system",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2018-02-20T16:15:20Z",
        "closed_at": "2018-07-02T21:00:06Z",
        "merged_at": "2018-07-02T21:00:06Z",
        "body": "This makes it behave the same way as the other implementations.\r\nIt is also nice to always encode an empty message as {}.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 205,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2018-02-19T13:03:56Z",
        "closed_at": "2018-07-09T21:26:36Z",
        "merged_at": "2018-07-09T21:26:36Z",
        "body": "I've implemented ```IComparable<Timestamp>``` for the ```Timestamp``` class.\r\n\r\nI have also implemented comparison operators ```<, >, <=, >=, ==, !=```.\r\n\r\nThis fixes #4267 and is intended to make usage much more natural:\r\n\r\n```c#\r\nif (thing.Happened > setting.Deadline)\r\n{\r\n    // This is late\r\n}\r\n\r\nvar inChronologicalOrder = listOfEvents.OrderBy(e => e.WhenItHappened);\r\n```",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2018-02-15T19:44:59Z",
        "closed_at": "2018-03-14T18:38:13Z",
        "merged_at": null,
        "body": "Verifying Kokoro builds are public",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-02-15T15:13:03Z",
        "closed_at": "2018-06-25T22:31:16Z",
        "merged_at": null,
        "body": "other numeric types are allowed to be quoted, but boolean not...",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2018-02-14T23:23:38Z",
        "closed_at": "2018-03-14T20:22:02Z",
        "merged_at": "2018-03-14T20:22:02Z",
        "body": "",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 57,
        "deletions": 14,
        "changed_files": 5,
        "created_at": "2018-02-14T02:47:23Z",
        "closed_at": "2018-06-19T03:37:49Z",
        "merged_at": null,
        "body": "Fixes issue #2128. Hope this hasn't been fixed internally already, I assumed it hadn't since the issue was last updated almost a year ago. Feel free to review @haberman.\r\n\r\nThere are a few ways to fix this, but I decided to leave this whitespace handling to the parser instead of the tokenizer. I tried adding support for fullIdent tokens to the tokenizer, but realized I'd need to add additional support for option names as well, and felt this was stepping too far into what the parser should be doing. The solution I ended on here allows the tokenizer to mark whether or not whitespace was present before it, and the parser can use that information as it wishes. Right now I've only added this support to package parsing, but this support can also be extended to option names (where this bug is also present.)\r\n\r\nAlso, I had to modify the ParsePackageWithSpaces unit test, which was actually testing to make sure this bug existed! I think we should instead be checking for failure on this case, so I modified the unit test to reflect that.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-02-13T03:19:18Z",
        "closed_at": "2018-06-19T03:52:53Z",
        "merged_at": "2018-06-19T03:52:53Z",
        "body": "Add GDScript Protobuf implementation",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 71,
        "deletions": 20,
        "changed_files": 8,
        "created_at": "2018-02-11T18:23:02Z",
        "closed_at": "2018-06-25T20:42:27Z",
        "merged_at": null,
        "body": "Currently the json parser raises a ParseError in the case that an\r\nunexpected field is present. To better preserve forwards and backwards\r\ncompatible changes, an option to ignore these unknown fields can be\r\npassed to decode_json. This fixes a long standing TODO by @haberman \r\nand adopts functionality already present in the json parsers for Go, C++, \r\nand Java.\r\n\r\nFixes #4251\r\n\r\nI've noticed that this same upb code is used for PHP and in a standalone library. Should I make changes to those projects in addition?",
        "comments": 30
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-02-09T06:01:29Z",
        "closed_at": "2018-02-13T03:10:39Z",
        "merged_at": null,
        "body": "Append link to GDScript implemetation",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 202,
        "deletions": 11,
        "changed_files": 8,
        "created_at": "2018-02-08T22:10:57Z",
        "closed_at": "2018-07-02T20:58:43Z",
        "merged_at": "2018-07-02T20:58:43Z",
        "body": "The `protoc` output pollutes the global scope by attaching the messages to the global object per namespaces. It works fine while the process doesn't require multiple version of the generated output.\r\n\r\nTo avoid conflicts but keep backward compatibility I added the `import_style=commonjs_strict` mode that doesn't use the global scope.\r\n\r\n**Related issues:**\r\n\r\n- https://github.com/google/protobuf/issues/4271\r\n",
        "comments": 19
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-02-08T19:22:07Z",
        "closed_at": "2018-06-19T03:53:37Z",
        "merged_at": null,
        "body": "Compiling with Green Hills Integrity compiler will generate the following compiler error:\r\n\r\n\"..\\vendor\\protobuf\\src\\google/protobuf/reflection_internal.h\", line 306: error #1001:\r\n          class member designated by a using-declaration must be visible in a\r\n          direct base class\r\n    using RepeatedFieldAccessor::Add;\r\n\r\nIt appears that Green Hills compiler is more strict than MS Visual Studio or GNU compiler in order to comply with clause 13.3.3/17 of the C++ standard (see http://cpp14.centaur.ath.cx/namespace.udecl.html).",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 8,
        "changed_files": 2,
        "created_at": "2018-02-08T18:38:47Z",
        "closed_at": "2018-06-23T00:45:59Z",
        "merged_at": null,
        "body": "This should make it easier to debug invalid formats when writing out\r\nserialized proto json by hand.\r\n\r\nAnother option would be to have the StatusErrorListener add the name of the field when constructing the `util::Status` object, but I don't really have a sense of which option is preferable. \r\n\r\nAlso open for suggestions as to how to format the error message",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2018-02-07T21:00:51Z",
        "closed_at": "2018-04-30T23:04:14Z",
        "merged_at": "2018-04-30T23:04:13Z",
        "body": "Make RepeatedField#delete_if consistent with Array#delete_if.\n\nFixes #4285.",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 189,
        "deletions": 61,
        "changed_files": 12,
        "created_at": "2018-02-07T18:24:02Z",
        "closed_at": "2018-02-26T18:05:10Z",
        "merged_at": "2018-02-26T18:05:10Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 34,
        "changed_files": 5,
        "created_at": "2018-02-07T14:35:15Z",
        "closed_at": "2018-08-13T20:42:56Z",
        "merged_at": null,
        "body": "Mostly -Wunused-function warnings that are mostly true positives,\r\nbut also one -Wunused-but-set-variable that pointed out that one\r\ntest wasn't testing what it intended to test.",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 16,
        "changed_files": 2,
        "created_at": "2018-02-07T13:59:02Z",
        "closed_at": "2018-02-08T18:53:42Z",
        "merged_at": "2018-02-08T18:53:42Z",
        "body": "Chrome is running into two issues with the use of this macro\r\nin open-source protobuf (https://crbug.com/809157):\r\n\r\n1. GOOGLE_FALLTHROUGH_INTENDED is defined to nothing on `__APPLE__`\r\n   platforms, which blocks us from enabling -Wimplicit-fallthrough\r\n   on Mac and iOS. (We use a hermetic self-built modern clang,\r\n   so whatever Xcode bug that exclusion might be for doesn't apply\r\n   to us.)\r\n\r\n2. It's in a public header file, and it's included in a public header file.\r\n   When clang suggests adding [[clang::fallthrough]], it checks if it knows of\r\n   a macro expanding to that and if so, suggests inserting that. Since lots of\r\n   chrome code includes protobuf headers, it often suggests inserting\r\n   GOOGLE_FALLTHROUGH_INTENDED (from protobuf) instead of the correct\r\n   FALLTHROUGH (from chrome's base).\r\n\r\nSince the fallthrough doens't do anyting useful, just remove it.\r\nLong ago, this might have had perf impact, but d64a2d9941c36a7bc added a\r\nparsing fast path that calls this switch as slow fallback, so it should\r\nbe off the hot path nowadays.\r\n\r\nNo intended behavior change.\r\n\r\nThis is the public version of internal change 184824132.",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 60,
        "changed_files": 6,
        "created_at": "2018-02-06T19:08:33Z",
        "closed_at": "2018-04-05T00:01:10Z",
        "merged_at": "2018-04-05T00:01:10Z",
        "body": "This PR updates NUnit to 3.9.0, adds the NUnit3TestAdapter and Microsoft.NET.Test.Sdk packages, removes the bootstrap Program.cs, and updates the test command in buildall.sh and AppVeyor.bat from dotnet run to dotnet test.",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2018-02-06T00:11:31Z",
        "closed_at": "2018-02-08T23:33:49Z",
        "merged_at": null,
        "body": "I was able to replicate the error in #3038 and confirmed that this patch fixes the issue. I guess [[clang::fallthrough]] does work for macOS now.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-02-01T04:09:33Z",
        "closed_at": "2018-02-01T17:41:52Z",
        "merged_at": "2018-02-01T17:41:52Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2018-01-31T23:55:25Z",
        "closed_at": "2018-02-01T21:50:46Z",
        "merged_at": "2018-02-01T21:50:46Z",
        "body": "Fix #4244",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2018-01-31T19:55:49Z",
        "closed_at": "2018-02-09T23:54:04Z",
        "merged_at": "2018-02-09T23:54:03Z",
        "body": "Cython is not using .py file. Only check filenames when end with .py in _CalledFromGeneratedFile()\r\n\r\nFixes #2896",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 5,
        "changed_files": 5,
        "created_at": "2018-01-31T13:40:26Z",
        "closed_at": "2018-02-02T19:47:32Z",
        "merged_at": "2018-02-02T19:47:32Z",
        "body": "1) Add alias so when using protobuf as subproject you can still use `protobuf::libprotobuf` like in the module Protobuf cf https://cmake.org/cmake/help/latest/module/FindProtobuf.html\r\n\r\n2) Change MSVC default behaviour to be the same than unix for zlib default behaviour -> let's discuss about  it !  \r\nPersonally for using protobuf for google/or-tools on windows, I didn't find difficult to provide zlib as well\r\n(and protobuf cmake know how to deal if zlib is not found BTW)  \r\n\r\n3) Concerning /MD as default even for static library I'm based on:\r\n- gRPC default to /MD cf https://github.com/grpc/grpc/blob/master/cmake/msvc_static_runtime.cmake#L15\r\n- Different modules (i.e. DLLs or EXEs) can exchange \"memory ownership\". For example, a memory allocated through new/malloc in one module can be reallocated/deleted/freed by another...\r\n- merging different DLLs shipped with different versions of CRT static lib can have some unexpected behaviour\r\n",
        "comments": 13
    },
    {
        "merged": true,
        "additions": 15,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-01-31T08:17:06Z",
        "closed_at": "2018-02-01T23:11:56Z",
        "merged_at": "2018-02-01T23:11:56Z",
        "body": "Fixes: #4256.\r\n\r\nBazel@HEAD supports Java 9.\r\n\r\nThe current code has one single issue with Java 9 compliance: the usage\r\nof sun.misc package. We add sun.misc module with --add-modules compiler\r\noption for now. Long term, the usage of non poblic API should be\r\navoided.\r\n\r\nTo build (or test) with Java 9, build custom bazel version and issue:\r\n\r\n  $ bazel --host_javabase=/usr/lib64/jvm/java-9-openjdk build \\\r\n    --javacopt='--release 9' \\\r\n    --java_toolchain=@bazel_tools//tools/jdk:toolchain_jdk9 \\\r\n   :protobuf_java",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 53,
        "deletions": 44,
        "changed_files": 7,
        "created_at": "2018-01-31T01:27:22Z",
        "closed_at": "2018-06-27T03:24:25Z",
        "merged_at": "2018-06-27T03:24:25Z",
        "body": "  * This allows for ruby code to catch and handle Protobuf\r\n    TypeErrors separately from the standard Ruby TypeError\r\n\r\n  * Maintains backwards compatibility by having the new\r\n    Google::Protobuf::TypeError inherit from the base\r\n    TypeError. Any code that was catching TypeError should\r\n    continue to work.",
        "comments": 12
    },
    {
        "merged": false,
        "additions": 18,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2018-01-30T21:49:24Z",
        "closed_at": "2018-04-20T18:27:20Z",
        "merged_at": null,
        "body": "https://github.com/google/protobuf/pull/2519 landed on master in November 2017, but hasn't been queued for release.\r\n\r\nOpening a new PR to the 3.5.x development branch to try and bump this along - the original PR is from December 2016 \ud83d\ude25 \r\n\r\ncc @haberman and @TeBoring from the original pull request",
        "comments": 11
    },
    {
        "merged": true,
        "additions": 28,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2018-01-30T19:33:31Z",
        "closed_at": "2018-05-22T15:14:04Z",
        "merged_at": "2018-05-22T15:14:04Z",
        "body": "The JSON marshaller accepts both the preseve_field_names and emit_defaults options in the C bindings, but these options are not easily exposed to the Ruby encode/decode methods. This PR adds an options hash, empty by default, that can be used to pass options at runtime.",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 72,
        "deletions": 45,
        "changed_files": 5,
        "created_at": "2018-01-30T15:29:46Z",
        "closed_at": "2018-05-24T18:59:46Z",
        "merged_at": null,
        "body": "Currently the TypeErrors thrown by the generated classes do not include the field name in the error description, which can make debugging these issues a matter of bisecting messages until the error is repeatable. Including the name of the field in the TypeErrors thrown by these classes helps immensely with their debug-ability.\r\n\r\nI've added extra tests to demonstrate this new behavior, but wanted to get some feedback before tackling the field names for the RepeatedField and Map type containers, neither of which currently hold their field name. If the above approach for primitives seems sane, I'd love some guidance on how to add the field names to those type containers so they can be passed to the type checkers for richer error messages.\r\n\r\n* TODO: Add field name for repeated fields and maps (anything using the typed field containers)\r\n* TODO: jRuby support. I am happy to add the jRuby support here as well once we everyone is onboard with this change.",
        "comments": 13
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-01-30T12:59:28Z",
        "closed_at": "2018-01-30T21:39:16Z",
        "merged_at": "2018-01-30T21:39:16Z",
        "body": "Has support for protobuf v2.",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-01-30T10:51:08Z",
        "closed_at": "2018-07-12T18:10:58Z",
        "merged_at": null,
        "body": "I don't know what I'm doing but this worked for me.",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 30,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2018-01-27T14:19:29Z",
        "closed_at": "2018-01-30T00:21:51Z",
        "merged_at": "2018-01-30T00:21:51Z",
        "body": "Partially fixes #4230.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2018-01-27T13:26:45Z",
        "closed_at": "2018-01-31T22:31:59Z",
        "merged_at": "2018-01-31T22:31:59Z",
        "body": "Instead of just owned by the Arena, std::string objects are now created in the Arena memory.\r\nString payload that exceeds the small string optimization is still allocated on the heap.\r\n\r\nAs the lifetime of strings was already bound to the lifetime of the Arena, this should not require any other changes.\r\n\r\nI ran the benchmarks on a Ryzen 5 1600 with gcc-7.2 and clang-5.0 with default compiler flags and had an average improvement of ~8% on the *_parse_newarena tests.\r\n\r\nOn the top end, the speed of _google_message3_2_parse_newarena_ and _google_message2_parse_newarena_ improved by 15% while  _google_message3_4_parse_newarena_ had only 1% speed improvement.\r\n\r\nDespite the fact that I disabled speed stepping, the variations were quite high.",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-01-26T06:28:05Z",
        "closed_at": "2018-01-26T19:11:41Z",
        "merged_at": "2018-01-26T19:11:41Z",
        "body": "Remove broken link to RPC implementation https://code.google.com/p/protorpc/. Going to this URL displays a 404 error message, with no indication that the project has a new location or still exists.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-01-25T08:52:45Z",
        "closed_at": "2018-01-25T18:49:34Z",
        "merged_at": "2018-01-25T18:49:34Z",
        "body": "Add Awake Security's Haskell Protobuf and GRPC implementations to third party impl list",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2018-01-25T05:07:20Z",
        "closed_at": "2018-01-25T07:41:33Z",
        "merged_at": "2018-01-25T07:41:33Z",
        "body": "Fixes #4220.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-01-25T03:34:11Z",
        "closed_at": "2018-06-22T19:18:03Z",
        "merged_at": null,
        "body": "(allows TextFormatTest to pass on Windows too)",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 86,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2018-01-25T01:33:52Z",
        "closed_at": "2018-03-14T20:25:20Z",
        "merged_at": "2018-03-14T20:25:20Z",
        "body": "I increased `CodedInputStream.DefaultSizeLimit` to `Int32.MaxValue` to make it consistent with the Java implementation, and added some relevant unit tests.\r\n\r\nMy changes are based on those made by @saintstack to the Java implementation (PR #2431).",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 155,
        "deletions": 155,
        "changed_files": 7,
        "created_at": "2018-01-24T01:34:49Z",
        "closed_at": "2018-02-28T07:34:31Z",
        "merged_at": null,
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 44,
        "deletions": 1,
        "changed_files": 4,
        "created_at": "2018-01-23T18:42:23Z",
        "closed_at": "2018-01-25T17:18:40Z",
        "merged_at": "2018-01-25T17:18:40Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 117,
        "deletions": 27,
        "changed_files": 7,
        "created_at": "2018-01-22T21:42:57Z",
        "closed_at": "2018-01-25T19:31:05Z",
        "merged_at": "2018-01-25T19:31:05Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 146,
        "deletions": 151,
        "changed_files": 38,
        "created_at": "2018-01-22T18:58:39Z",
        "closed_at": "2018-01-29T19:34:40Z",
        "merged_at": "2018-01-29T19:34:40Z",
        "body": "These statements pulled a bunch of symbols from the std namespace into\r\nthe global namespace. This commit removes all of them except for\r\nstd::string, which is a bit trickier to remove.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 17,
        "deletions": 6,
        "changed_files": 3,
        "created_at": "2018-01-22T07:55:47Z",
        "closed_at": "2018-01-25T19:42:16Z",
        "merged_at": "2018-01-25T19:42:16Z",
        "body": "This will allow SourceLink as per #4179, and mean that we can use C#\r\n7.X language features in the library (but not in generated code).\r\n\r\nThis does not affect which platforms we're *targeting*, so end users\r\nwon't see any difference.\r\n\r\n(Will assign a reviewer when CI is happy.)",
        "comments": 11
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 13,
        "changed_files": 4,
        "created_at": "2018-01-22T00:47:05Z",
        "closed_at": "2018-06-25T22:20:54Z",
        "merged_at": "2018-06-25T22:20:54Z",
        "body": "Python 2.6 is marked as dropped elsewhere.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-01-21T15:09:45Z",
        "closed_at": "2018-01-24T00:06:13Z",
        "merged_at": "2018-01-24T00:06:13Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 29,
        "deletions": 26,
        "changed_files": 4,
        "created_at": "2018-01-21T09:09:02Z",
        "closed_at": "2018-02-02T18:26:20Z",
        "merged_at": null,
        "body": "- removing bind is recommended \r\nhttps://github.com/bazelbuild/bazel/issues/1952\r\nand\r\nhttps://docs.bazel.build/versions/master/best-practices.html#repository-rules\r\n\r\n- it conflicts with other external repos that have `@six` like `rules_docker`\r\n\r\nI recommend the rest of bind rules be removed as well.",
        "comments": 13
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-01-19T17:06:23Z",
        "closed_at": "2018-01-30T00:40:37Z",
        "merged_at": "2018-01-30T00:40:37Z",
        "body": "Public sources get added to dependencies of the target as well which can\r\ncause duplicate symbols.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 72,
        "deletions": 6,
        "changed_files": 5,
        "created_at": "2018-01-19T14:23:41Z",
        "closed_at": "2018-02-26T18:42:32Z",
        "merged_at": "2018-02-26T18:42:31Z",
        "body": "This PR adds `JsonParseOptions::ignore_unknown_enum_values` option to treat unknown enum values as 0.\r\n\r\nFor example, if we have an application compiled with the following protobuf scheme:\r\n```\r\nsyntax = \"proto3\";\r\nenum ShapeType\r\n{\r\n    DEFAULT = 0;\r\n    RECTANGLE = 1;\r\n    ELLIPSE = 2;\r\n}\r\nmessage Shape\r\n{\r\n    ShapeType type = 1;\r\n}\r\n```\r\n\r\nIt will fail to parse the following JSON created with the newer version of an application:\r\n```json\r\n{\r\n  \"type\":\"ROUNDED_RECTANGLE\"\r\n}\r\n```\r\nIf you set the `ignore_unknown_enum_values` option to `true`, the application will be able to parse this JSON. The `Shape.type` field will be set to `DEFAULT` value (0). The application can handle this situation, for instance, by replacing a shape with one of the supported shape types.\r\nIf the `ignore_unknown_enum_values` option is `false`, the JSON parser will have existing behavior.",
        "comments": 12
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2018-01-19T03:43:25Z",
        "closed_at": "2018-07-10T00:00:03Z",
        "merged_at": "2018-07-10T00:00:03Z",
        "body": "Add the `JSON_UNESCAPED_UNICODE` options so that characters like **\u4e2d\u56fd** will not be escaped into **\\u4e2d\\u56fd** to improve serialize and transfer performance.",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 20,
        "deletions": 16,
        "changed_files": 6,
        "created_at": "2018-01-18T00:48:51Z",
        "closed_at": "2018-01-22T21:26:40Z",
        "merged_at": "2018-01-22T21:26:40Z",
        "body": "",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2018-01-18T00:09:57Z",
        "closed_at": "2018-02-26T23:07:56Z",
        "merged_at": "2018-02-26T23:07:56Z",
        "body": "This disables a couple of workarounds which are only necessary with\r\nMSVC's standard library and cause problems with libc++.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 89,
        "deletions": 35,
        "changed_files": 5,
        "created_at": "2018-01-17T20:41:32Z",
        "closed_at": "2018-01-27T01:38:34Z",
        "merged_at": null,
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2018-01-17T15:24:52Z",
        "closed_at": "2018-05-14T20:46:04Z",
        "merged_at": "2018-05-14T20:46:04Z",
        "body": "@jskeet Thanks for adopting SourceLink.Create.CommandLine in the [Google Cloud .NET tools](https://github.com/GoogleCloudPlatform/google-cloud-dotnet/blob/master/tools/Google.Cloud.Tools.ProjectGenerator/Program.cs#L83). SourceLink 2.7 helps add the portable pdb files to the nupkg as well.",
        "comments": 25
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2018-01-16T15:22:32Z",
        "closed_at": "2018-06-25T21:19:21Z",
        "merged_at": null,
        "body": "Installing the gem on MacOS with Ruby 2.5 fails due to not having been\r\ncross compiled for 2.5.0.\r\n\r\nBased on [a commit to support 2.4.0](014a5507fb4b1ccc12f35ff313b8a04c05d69b7f)\r\n\r\nFixes #4098",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-01-15T10:12:42Z",
        "closed_at": "2018-06-25T20:51:43Z",
        "merged_at": "2018-06-25T20:51:43Z",
        "body": "Signed-off-by: Oskar S\u0301witalski <oskar.switalski@indoorway.com>",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2018-01-12T23:46:02Z",
        "closed_at": "2018-06-23T00:47:18Z",
        "merged_at": "2018-06-23T00:47:18Z",
        "body": "Many Bazel repositories implement their own version comparison functions - one implementation is now in [bazelbuild/bazel-skylib](https://github.com/bazelbuild/bazel-skylib/blob/master/lib/versions.bzl).\r\n\r\nFurther details: https://github.com/bazelbuild/bazel/issues/4433.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2018-01-12T21:08:26Z",
        "closed_at": "2018-03-13T20:46:01Z",
        "merged_at": "2018-03-13T20:46:01Z",
        "body": "Importing and building protobuf classes in Ruby implicitly depends on the namespace in which the protos in question have been placed. This isn't a problem for most use cases, but scope resolution breaks if used in a module also named `Google`. This PR updates the message class builder to access the`Google::Protobuf::MessageExts` from the outermost namespace as is expected.\r\n\r\nE.g. A simple proto message defined in `package foo.apis.google;` will result in generated code like this:\r\n```\r\nrequire 'google/protobuf'\r\n\r\nGoogle::Protobuf::DescriptorPool.generated_pool.build do\r\n  add_message \"foo.apis.google.Color\" do\r\n    optional :red, :float, 1\r\n  end\r\nend\r\n\r\nmodule Foo\r\n  module Apis\r\n    module Google\r\n      Color = Google::Protobuf::DescriptorPool.generated_pool.lookup(\"foo.apis.google.Color\").msgclass\r\n    end\r\n  end\r\nend\r\n```\r\nThis will fail on import with a `NameError: uninitialized constant Foo::Apis::Google::Protobuf`",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2018-01-11T19:54:56Z",
        "closed_at": "2018-06-22T19:28:21Z",
        "merged_at": null,
        "body": "",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 26,
        "deletions": 26,
        "changed_files": 13,
        "created_at": "2018-01-09T23:10:37Z",
        "closed_at": "2018-05-23T18:19:07Z",
        "merged_at": null,
        "body": "Fixes #4156",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 26,
        "deletions": 26,
        "changed_files": 13,
        "created_at": "2018-01-09T23:10:00Z",
        "closed_at": "2018-06-22T19:31:58Z",
        "merged_at": null,
        "body": "Fixes #4156",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 27,
        "deletions": 27,
        "changed_files": 14,
        "created_at": "2018-01-09T22:59:58Z",
        "closed_at": "2018-05-24T18:04:33Z",
        "merged_at": null,
        "body": "Fixes #4156",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 60,
        "deletions": 62,
        "changed_files": 6,
        "created_at": "2018-01-09T18:10:46Z",
        "closed_at": "2018-01-11T01:06:02Z",
        "merged_at": "2018-01-11T01:06:01Z",
        "body": "Fix java benchmark to use parser, fix cpp benchmark new arena to use \u2026",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 53,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-01-05T21:13:45Z",
        "closed_at": "2018-01-08T18:41:55Z",
        "merged_at": "2018-01-08T18:41:55Z",
        "body": "Better test coverage for datetime validation.",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2018-01-05T21:12:53Z",
        "closed_at": "2018-01-08T18:40:09Z",
        "merged_at": "2018-01-08T18:40:09Z",
        "body": "Found with PVS-Studio static analyser, see \r\nhttps://www.viva64.com/en/b/0550/",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 20,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2018-01-05T15:20:08Z",
        "closed_at": "2018-03-21T18:44:39Z",
        "merged_at": null,
        "body": "As in [#2092](https://github.com/google/protobuf/pull/2092) which added `AllowUnknownField` support for Java, this does the same for C++.\r\n\r\nThe default behaviour of throwing an exception remains.\r\n",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 23,
        "created_at": "2018-01-05T08:47:34Z",
        "closed_at": "2018-06-23T04:03:27Z",
        "merged_at": null,
        "body": "This potenitally avoids compiler warnings.",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 68,
        "deletions": 30,
        "changed_files": 3,
        "created_at": "2018-01-05T01:38:47Z",
        "closed_at": "2018-01-05T21:05:07Z",
        "merged_at": "2018-01-05T21:05:07Z",
        "body": "Previously, within the same load period of protobuf module, well known\r\ntypes are not initialized correctly for the second request. The reason\r\nis that well known type are only initialized if a method local static\r\nvariable is not set. However, that variable is not reset after request\r\nends. Therefore, when the second request comes, the method local static\r\nvariable is still set (by previous request) and well types are not\r\ninitialized in this case.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 859,
        "deletions": 7,
        "changed_files": 8,
        "created_at": "2018-01-04T05:43:36Z",
        "closed_at": "2018-05-30T17:37:44Z",
        "merged_at": null,
        "body": "Generate php file for the **plugin.proto**, so that we can use php to develop protoc-gen-plugin.\r\n\r\nAlso fix the issue #3220\r\n\r\nAnd here is a demo,\r\n\r\n```php\r\n<?php\r\nrequire './vendor/autoload.php';\r\n\r\n$input = file_get_contents(\"php://stdin\");\r\n$request = new Google\\Protobuf\\Internal\\CodeGeneratorRequest;\r\n$response = new Google\\Protobuf\\Internal\\CodeGeneratorResponse;\r\n$request->mergeFromString($input);\r\n\r\n/** @var \\Google\\Protobuf\\Internal\\FileDescriptorProto $fs */\r\n$fs = $request->getProtoFile()[0];\r\n$package = $fs->getPackage();\r\n\r\n$f = new \\Google\\Protobuf\\Internal\\CodeGeneratorResponse_File();\r\n$f->setName(\"foo.php\");\r\n$f->setContent(\"<?php // $package\\n\");\r\n\r\n$response->setFile([$f]);\r\n\r\nfile_put_contents(\"php://stdout\", $response->serializeToString());\r\n```\r\n  ",
        "comments": 16
    },
    {
        "merged": true,
        "additions": 64,
        "deletions": 12,
        "changed_files": 2,
        "created_at": "2018-01-03T17:54:34Z",
        "closed_at": "2018-01-06T00:33:17Z",
        "merged_at": "2018-01-06T00:33:17Z",
        "body": "Make Java benchmark run for enough times so that can make the uncertain error from caliper measurements less than 1%",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 853,
        "deletions": 218,
        "changed_files": 55,
        "created_at": "2018-01-03T17:30:22Z",
        "closed_at": "2018-01-04T22:26:25Z",
        "merged_at": "2018-01-04T22:26:25Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-01-03T11:24:50Z",
        "closed_at": "2018-05-03T22:59:37Z",
        "merged_at": "2018-05-03T22:59:37Z",
        "body": "Add mention to the \"Build\" section of the ReadMe of the requirement of installing an optional component to VS2017, as discussed with @jskeet in #4119.",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 173,
        "deletions": 56,
        "changed_files": 5,
        "created_at": "2018-01-03T10:00:48Z",
        "closed_at": "2018-01-15T07:53:46Z",
        "merged_at": "2018-01-15T07:53:46Z",
        "body": "By default, unknown fields are preserved when parsing. To discard\r\nthem, use a parser configured to do so:\r\n\r\n```csharp\r\nvar parser = MyMessage.Parser.WithDiscardUnknownFields(true);\r\n// Unknown fields will be discarded\r\nvar message = parser.Parse(data);\r\n```\r\n\r\nThis PR is an alternative to #4081.\r\n  ",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-01-02T22:17:02Z",
        "closed_at": "2018-01-03T17:20:24Z",
        "merged_at": "2018-01-03T17:20:24Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 11,
        "changed_files": 5,
        "created_at": "2017-12-29T22:49:40Z",
        "closed_at": "2018-04-09T19:43:11Z",
        "merged_at": "2018-04-09T19:43:10Z",
        "body": "The compiler and util subpackages are created by the build_py class in\r\nsetup.py. This has caused an issue in the protobuf package in\r\nconda-forge (https://github.com/conda-forge/protobuf-feedstock/issues/40). This\r\ncommit fixes this issue.\r\n\r\nFixes #2895",
        "comments": 16
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-12-29T20:46:42Z",
        "closed_at": "2018-01-03T21:26:23Z",
        "merged_at": "2018-01-03T21:26:22Z",
        "body": "As per discussion here:https://github.com/google/protobuf/issues/4101",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-12-29T10:05:58Z",
        "closed_at": "2018-06-23T04:03:33Z",
        "merged_at": null,
        "body": "\u2026llpointer exception.\r\n\r\nSigned-off-by: code4ever <jessee_hustcs@126.com>",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 638,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2017-12-29T04:34:35Z",
        "closed_at": "2018-06-23T04:03:48Z",
        "merged_at": null,
        "body": "Fixes google/protobuf#1982\r\nFixes google/protobuf#1675\r\nFixes google/protobuf#3935",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2017-12-27T20:43:06Z",
        "closed_at": "2017-12-29T16:33:48Z",
        "merged_at": "2017-12-29T16:33:48Z",
        "body": "Strings in which undefined 'idx' was found were copy-pasted within the same file to multiple places but were not properly altered afterwards. It never showed as a problem because their use is to fail broken tests which never happened. ",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-12-27T13:01:07Z",
        "closed_at": "2018-06-25T21:20:22Z",
        "merged_at": "2018-06-25T21:20:22Z",
        "body": "Added `-y` flag to `sudo apt-get` command.",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 67,
        "deletions": 28,
        "changed_files": 6,
        "created_at": "2017-12-27T03:08:09Z",
        "closed_at": "2018-01-04T19:30:47Z",
        "merged_at": null,
        "body": "",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 1260,
        "deletions": 1239,
        "changed_files": 49,
        "created_at": "2017-12-23T18:19:04Z",
        "closed_at": "2018-06-23T04:07:13Z",
        "merged_at": null,
        "body": "This is a POC for #4091:\r\n  - mutable accessors return a mutable C++ reference\r\n  - repeated fields generate a mutable accessor with a natural name\r\n\r\nThe point here is unify reader and writer scenarios:\r\n\r\n**A reader:**\r\n```\r\nmessage.repeated_field(1).map_field()[0].value();\r\n```\r\n\r\n**A proposed writer:**\r\n```\r\nmessage.repeated_field(1).map_field()[0].set_value(...);\r\n```\r\n\r\nAll tests compile and pass on Linux x86-64 using GCC 4.8 (Ubuntu 14). I have not compiled in other environments...",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2017-12-22T20:06:59Z",
        "closed_at": "2018-01-03T17:14:55Z",
        "merged_at": "2018-01-03T17:14:55Z",
        "body": "The script now takes two prompt for user name and password. One single\r\ninput redirection no longer works.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2017-12-22T17:22:57Z",
        "closed_at": "2018-03-25T07:25:42Z",
        "merged_at": null,
        "body": "I'm not sure how use_grpc_plugin=1 is supposed to work with the current build rule. It seems like the Python gRPC plugin generates *_pb2_grpc.py files, which are promptly thrown away by Bazel because they aren't listed in the outs. So, _PyOuts should have a use_grpc_plugin flag (just like _CcOuts, which strangely is currently unused).",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-12-22T12:53:06Z",
        "closed_at": "2017-12-30T07:21:49Z",
        "merged_at": null,
        "body": "To add protobuf project from root using External_Project_Add in cmake",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2017-12-21T13:24:48Z",
        "closed_at": "2018-06-18T22:58:11Z",
        "merged_at": null,
        "body": "The full discussion is in ticket #4069 .\r\nThe Intel compilers version 15 and 16 fail at this static_assert.\r\nThe warning 2196 \"routine is both inline and noninline\" makes it impossible to build make check, so disable this warning.\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 390,
        "deletions": 0,
        "changed_files": 30,
        "created_at": "2017-12-21T02:21:49Z",
        "closed_at": "2017-12-21T19:01:08Z",
        "merged_at": "2017-12-21T19:01:08Z",
        "body": "@xfxyjwf - I will test how this works after this PR is merged. If it seems to work well, I'll go ahead and enable it for PR testing. ",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 135,
        "deletions": 9,
        "changed_files": 6,
        "created_at": "2017-12-21T00:06:17Z",
        "closed_at": "2018-06-23T04:10:28Z",
        "merged_at": null,
        "body": "",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-12-20T09:58:32Z",
        "closed_at": "2017-12-20T22:48:31Z",
        "merged_at": "2017-12-20T22:48:31Z",
        "body": "Protobuf build fails to build in Windows ARM64 platform.\r\nAdding following lines into platform_macros.h can solve the problem.\r\nfixes #4048",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-12-19T20:22:45Z",
        "closed_at": "2017-12-19T22:41:13Z",
        "merged_at": "2017-12-19T22:41:13Z",
        "body": "Fixes #4064 ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 31,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-12-19T20:22:07Z",
        "closed_at": "2017-12-20T23:07:14Z",
        "merged_at": "2017-12-20T23:07:14Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4529,
        "deletions": 769,
        "changed_files": 55,
        "created_at": "2017-12-19T20:02:43Z",
        "closed_at": "2017-12-20T01:45:56Z",
        "merged_at": "2017-12-20T01:45:56Z",
        "body": "Add preserve UnknownFields\r\nCompare floating point values bitwise\r\nAdd auto-generated header to C# generated files",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 27,
        "deletions": 27,
        "changed_files": 25,
        "created_at": "2017-12-19T19:01:45Z",
        "closed_at": "2017-12-19T20:21:22Z",
        "merged_at": "2017-12-19T20:21:22Z",
        "body": "For libtools version-info, bumping the revision number only.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 27,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2017-12-19T12:01:41Z",
        "closed_at": "2017-12-20T17:42:13Z",
        "merged_at": "2017-12-20T17:42:13Z",
        "body": "",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 284,
        "deletions": 8,
        "changed_files": 5,
        "created_at": "2017-12-19T02:05:01Z",
        "closed_at": "2018-01-05T23:20:11Z",
        "merged_at": "2018-01-05T23:20:11Z",
        "body": "Add python benchmark.\r\n\r\nTesting with pure python, cpp reflection, cpp generated code",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2017-12-15T08:36:41Z",
        "closed_at": "2017-12-19T04:51:21Z",
        "merged_at": null,
        "body": "Protobuf build fails to build in Windows ARM64 platform.\r\nAdding following lines into platform_macros.h can solve the problem. \r\n@acozzette fixes #4048",
        "comments": 13
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-12-15T02:00:25Z",
        "closed_at": "2017-12-15T20:09:20Z",
        "merged_at": "2017-12-15T20:09:20Z",
        "body": "`umask 0022` makes sure the created package will be accessible by all users.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-12-14T21:02:50Z",
        "closed_at": "2018-05-22T15:16:29Z",
        "merged_at": null,
        "body": "Generated Ruby message objects implement a convenience `to_json` method that return a JSON-formatted string for that message.\r\n\r\nHowever, that `to_json` method doesn't play nice with native Ruby's [`json` module](http://ruby-doc.org/stdlib-2.4.0/libdoc/json/rdoc/JSON.html), specially in the case of nesting a protobuf message into a data structure like an Array or a Hash. Take this example program:\r\n\r\n```ruby\r\nrequire 'json'\r\nrequire 'google/protobuf'\r\n\r\nGoogle::Protobuf::DescriptorPool.generated_pool.build do\r\n  add_message 'MyMessage' do\r\n    optional :str, :string, 1\r\n  end\r\nend\r\n\r\nMyMessage = Google::Protobuf::DescriptorPool.generated_pool.lookup('MyMessage').msgclass\r\n\r\nmessage = MyMessage.new(str: 'foobar')\r\n\r\nputs(message.to_json) # => {\"str\":\"foobar\"}\r\nputs([message].to_json) # ArgumentError: wrong number of arguments (given 1, expected 0)\r\nputs({message: message}.to_json) # ArgumentError: wrong number of arguments (given 1, expected 0)\r\n```\r\n\r\nThis PR simply adds an optional argument to the `to_json` method of these generated classes. This argument is completely ignored, but makes it possible to nest protobuf objects into Ruby data structures and then serialize everything with a `to_json` call.\r\n\r\nWith this patch, the above code runs and yields:\r\n\r\n```\r\n{\"str\":\"foobar\"}\r\n[{\"str\":\"foobar\"}]\r\n{\"message\":{\"str\":\"foobar\"}}\r\n```\r\n\r\n\ud83d\ude38 ",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 26,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2017-12-14T01:50:16Z",
        "closed_at": "2018-04-16T21:15:14Z",
        "merged_at": null,
        "body": "Fixes https://github.com/google/protobuf/issues/3615",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-12-14T00:48:08Z",
        "closed_at": "2017-12-14T23:53:23Z",
        "merged_at": "2017-12-14T23:53:23Z",
        "body": "The valueOf method on enums is deprecated, but for compatibility reasons\r\nthe generated code has to keep using it. We can use an annotation to\r\nsuppress the deprecation warnings.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 34,
        "deletions": 11,
        "changed_files": 4,
        "created_at": "2017-12-13T22:11:20Z",
        "closed_at": "2017-12-14T20:20:27Z",
        "merged_at": "2017-12-14T20:20:27Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 60,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2017-12-13T18:02:22Z",
        "closed_at": "2017-12-13T22:16:51Z",
        "merged_at": "2017-12-13T22:16:51Z",
        "body": "This fixes issue #1775.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-12-13T11:42:44Z",
        "closed_at": "2017-12-15T18:27:31Z",
        "merged_at": "2017-12-15T18:27:31Z",
        "body": "This fixes the following build error:\r\n\r\noldpwd=`pwd` && cd .../protobuf/src && \\\r\n$oldpwd/js_embed google/protobuf/compiler/js/well_known_types/any.js google/protobuf/compiler/js/well_known_types/struct.js google/protobuf/compiler/js/well_known_types/timestamp.js > $oldpwd/google/protobuf/compiler/js/well_known_types_embed.cc\r\n/bin/bash: line 1: .../protobuf/target/src/google/protobuf/compiler/js/well_known_types_embed.cc: No such file or directory\r\nMakefile:8201: recipe for target 'google/protobuf/compiler/js/well_known_types_embed.cc' failed\r\n\r\nwhich is observed during the cross-compilation since the version 3.2.",
        "comments": 12
    },
    {
        "merged": true,
        "additions": 88,
        "deletions": 44,
        "changed_files": 22,
        "created_at": "2017-12-13T02:01:22Z",
        "closed_at": "2017-12-13T22:36:29Z",
        "merged_at": "2017-12-13T22:36:29Z",
        "body": "Partial fix for https://github.com/google/protobuf/issues/3388\r\n\r\nSimilar change for gRPC: https://github.com/grpc/grpc/pull/13739",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2017-12-12T23:14:01Z",
        "closed_at": "2017-12-13T21:25:38Z",
        "merged_at": "2017-12-13T21:25:38Z",
        "body": "Make it clear default value is only omitted for proto3.\r\n\r\nFixes https://github.com/google/protobuf/issues/2880",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2017-12-12T22:34:31Z",
        "closed_at": "2017-12-13T01:52:33Z",
        "merged_at": "2017-12-13T01:52:32Z",
        "body": "Clarify that JSON parser are required to accept both UTC and other\r\ntimezone offsets.\r\n\r\nFixes https://github.com/google/protobuf/issues/3093",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 84,
        "deletions": 16,
        "changed_files": 4,
        "created_at": "2017-12-12T20:10:20Z",
        "closed_at": "2017-12-15T18:36:08Z",
        "merged_at": "2017-12-15T18:36:08Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 13,
        "changed_files": 2,
        "created_at": "2017-12-12T07:11:53Z",
        "closed_at": "2017-12-20T20:07:46Z",
        "merged_at": "2017-12-20T20:07:46Z",
        "body": "This is fix regarding the issue #4029 ",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-12-11T23:48:36Z",
        "closed_at": "2017-12-12T22:28:27Z",
        "merged_at": "2017-12-12T22:28:27Z",
        "body": "Fix #3944 ",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 66,
        "deletions": 7,
        "changed_files": 6,
        "created_at": "2017-12-11T18:54:12Z",
        "closed_at": "2017-12-11T23:46:45Z",
        "merged_at": "2017-12-11T23:46:45Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 132,
        "deletions": 57,
        "changed_files": 2,
        "created_at": "2017-12-08T22:53:38Z",
        "closed_at": "2018-06-23T04:13:09Z",
        "merged_at": null,
        "body": "This is a proposed feature, on which I'm looking for comment. I haven't implemented tests yet, but will if folks like the idea.\r\n\r\nThe main use case I have is generating .proto schemas from another, canonical schema definition. Rather than writing out .proto strings myself, it seems safer/nicer to build a descriptor set object using standard setters and then use google/protobuf C++ code to turn that into .proto strings, and I'm not working in C++ so would like to be able to shell out to protoc.\r\n\r\nEvidence that I'm not the only person who has wanted this feature: https://stackoverflow.com/questions/19418655/restoring-proto-file-from-descriptor-string-possible\r\n\r\nI should be covered by the Stripe CLA, although the bot doesn't always seem to recognize that.",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2017-12-07T22:37:59Z",
        "closed_at": "2017-12-08T19:42:42Z",
        "merged_at": "2017-12-08T19:42:42Z",
        "body": "This is necessary for avoiding a strange compiler error that we have\r\nalready run into with older versions of Clang on NaCl.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2017-12-07T22:18:32Z",
        "closed_at": "2017-12-08T19:43:02Z",
        "merged_at": "2017-12-08T19:43:02Z",
        "body": "This should fix Bazel builds, since those were missing a new file\r\n(implicit_weak_message.cc).",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2017-12-07T21:32:35Z",
        "closed_at": "2017-12-13T01:16:52Z",
        "merged_at": "2017-12-13T01:16:51Z",
        "body": "Fixes #4015.\r\n\r\nThis is a simple if inelegant fix -- force the use of `const operator[]`.",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 489,
        "deletions": 338,
        "changed_files": 7,
        "created_at": "2017-12-07T18:30:54Z",
        "closed_at": "2018-01-03T17:42:26Z",
        "merged_at": "2018-01-03T17:42:26Z",
        "body": "Add caliper supported for java benchmark, fixed README for benchmark\n\n<!-- Reviewable:start -->\n---\nThis change is\u2002[<img src=\"https://reviewable.io/review_button.svg\" height=\"34\" align=\"absmiddle\" alt=\"Reviewable\"/>](https://reviewable.io/reviews/google/protobuf/4014)\n<!-- Reviewable:end -->\n",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 274,
        "deletions": 126,
        "changed_files": 3,
        "created_at": "2017-12-07T14:36:27Z",
        "closed_at": "2017-12-07T19:16:09Z",
        "merged_at": "2017-12-07T19:16:09Z",
        "body": "Fixes https://github.com/google/protobuf/issues/3951\r\n\r\nForked from https://github.com/google/protobuf/pull/3978 per @pherl 's request https://github.com/google/protobuf/pull/3978#issuecomment-349384938",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 13,
        "changed_files": 3,
        "created_at": "2017-12-07T03:26:42Z",
        "closed_at": "2017-12-08T20:38:26Z",
        "merged_at": "2017-12-08T20:38:26Z",
        "body": "Fix #3925 ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2017-12-06T17:19:07Z",
        "closed_at": "2017-12-08T22:01:50Z",
        "merged_at": "2017-12-08T22:01:50Z",
        "body": "--pre was not necessary to install google-protobuf when I tried it today (2017-12-06).",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 30,
        "deletions": 3,
        "changed_files": 4,
        "created_at": "2017-12-06T02:35:37Z",
        "closed_at": "2017-12-07T19:15:29Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-12-05T01:11:47Z",
        "closed_at": "2017-12-08T21:34:56Z",
        "merged_at": "2017-12-08T21:34:56Z",
        "body": "This removes a Visual Studio warning:\r\n\r\nwarning C4146: unary minus operator applied to unsigned type, result\r\nstill unsigned.",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 83,
        "deletions": 120,
        "changed_files": 16,
        "created_at": "2017-12-03T19:48:38Z",
        "closed_at": "2018-03-26T20:54:33Z",
        "merged_at": "2018-03-26T20:54:33Z",
        "body": "This fixes #236.  Currently it patches googletest to support autoconf / automake builds, because google/googletest#776.  I have submitted google/googletest#1341 to fix that problem, but until it is accepted the patches work around the underlying googletest issue.\r\n\r\nThe builds with cmake and bazel do not need such hacks.\r\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 168,
        "deletions": 0,
        "changed_files": 6,
        "created_at": "2017-12-02T20:41:57Z",
        "closed_at": "2017-12-07T22:18:39Z",
        "merged_at": "2017-12-07T22:18:39Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2017-12-02T04:19:43Z",
        "closed_at": "2017-12-04T20:32:43Z",
        "merged_at": "2017-12-04T20:32:43Z",
        "body": "Fix #3977 ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4456,
        "deletions": 3270,
        "changed_files": 142,
        "created_at": "2017-12-01T18:10:44Z",
        "closed_at": "2017-12-05T21:02:37Z",
        "merged_at": "2017-12-05T21:02:37Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 38,
        "deletions": 13,
        "changed_files": 1,
        "created_at": "2017-12-01T14:00:06Z",
        "closed_at": "2018-07-16T20:45:15Z",
        "merged_at": null,
        "body": "The globs were picking up such files and created\r\ndependency cycles so I could no longer build\r\n//:protoc on Windows.\r\n\r\nThis is what happened:\r\n\r\n1. I built the tests with CMake. As part of that,\r\n   CMake generated header files in the source\r\n   tree, such as\r\n   \"src/google/protobuf/unittest_lite.pb.cc\"\r\n\r\n2. I attempted to build \"//:protoc\" with Bazel:\r\n\r\n2.1. As part of loading the BUILD file, Bazel\r\n     expanded glob() statements in the\r\n     \"protobuf\" cc_library's hdrs attribute.\r\n\r\n2.2. The result of glob() expansion is a list of\r\n     labels, and the expanded list included\r\n     \"src/google/protobuf/unittest_lite.pb.cc\"\r\n\r\n2.3. After glob() expansion, Bazel parsed all rule\r\n     definitions. It found the\r\n     \"cc_test_protos_genproto\" rule which\r\n     generates a file called\r\n     \"src/google/protobuf/unittest_lite.pb.cc\"\r\n\r\n2.4. Because Bazel can't tell from a label whether\r\n     it refers to a source file or a generated\r\n     file or a rule -- after all, srcs=[\"foo.cc\"]\r\n     could refer to either the source file\r\n     \"foo.cc\", or the generated file \"foo.cc\", or\r\n     the rule called \"foo.cc\" -- Bazel didn't\r\n     realise that it should depend on the source\r\n     file \"unittest_lite.pb.cc\", not on the output\r\n     file \"unittest_lite.pb.cc\". (Or that it\r\n     should error out because of the ambiguity.)\r\n\r\n2.5. Building the generated file\r\n     \"unittest_lite.pb.cc\" however involves\r\n     running the protocol compiler, which involes\r\n     building \":protoc\", which depends on the\r\n     \":protobuf\" rule, thus we now have a\r\n     dependency cycle.\r\n\r\n3. It made debugging more difficult that the\r\n   .gitignore file includes a pattern to match the\r\n   CMake-generated headers, so I didn't see any\r\n   new files in \"git status\", so I initially ruled\r\n   out globs as the source of the problem.\r\n\r\nTakeaway:\r\n- Bazel should error out if labels are ambiguous.\r\n- As a workaround, the glob() should use exclude\r\n  statements. This commit adds that.",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-12-01T13:58:04Z",
        "closed_at": "2018-05-22T19:27:24Z",
        "merged_at": "2018-05-22T19:27:24Z",
        "body": "Fixes https://github.com/google/protobuf/issues/3957",
        "comments": 19
    },
    {
        "merged": true,
        "additions": 159,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2017-12-01T07:37:21Z",
        "closed_at": "2017-12-07T19:16:47Z",
        "merged_at": "2017-12-07T19:16:47Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 107,
        "deletions": 32,
        "changed_files": 2,
        "created_at": "2017-12-01T06:39:24Z",
        "closed_at": "2018-07-02T22:08:13Z",
        "merged_at": "2018-07-02T22:08:13Z",
        "body": "The change:\r\n* Each source file is compiled separately now\r\n* If a source file is generated, we cd into its folder so protoc can see it, then move it out\r\n\r\nThe downside is that a separate protoc call is made per file now, which is a small decrease in performance. An optimization can be made to combine all non-generated files into a single call.\r\n\r\nI tried a few approaches over the past 2 days, all of them failed for some reason or another (mostly because bazel is super uptight about things):\r\n* Explicitly create an intermediate file and move it (only for generated inputs): Fails because bazel refuses to let me create a `File()` that isn't relative to my package. protoc will output the file into `bazel-out/.../genfiles/bazel_out/.../genfiles/<path>/<filename>_pb2.py` but the closest I could get was a declared file (via `ctx.actions.declare_file()`) that was `bazel-out/.../genfiles/<path>/bazel_out/.../genfiles/<path>/...` and that's got <path> in there twice and you can't change the filename at all, ever, in any way, from Skylark.\r\n* A single protoc call. Figuring out where things are output and need to be moved to is a mess and you're better off with the performance hit if you don't want to mess up the sandbox too much.\r\n\r\nFixes #1314 and fixes #1313",
        "comments": 16
    },
    {
        "merged": true,
        "additions": 291,
        "deletions": 252,
        "changed_files": 56,
        "created_at": "2017-11-30T21:41:59Z",
        "closed_at": "2017-12-01T15:31:38Z",
        "merged_at": "2017-12-01T15:31:38Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2017-11-30T16:39:07Z",
        "closed_at": "2017-12-07T14:33:56Z",
        "merged_at": null,
        "body": "Fixes https://github.com/google/protobuf/issues/3951",
        "comments": 15
    },
    {
        "merged": true,
        "additions": 27,
        "deletions": 0,
        "changed_files": 5,
        "created_at": "2017-11-30T04:55:32Z",
        "closed_at": "2017-11-30T20:19:51Z",
        "merged_at": "2017-11-30T20:19:51Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 19,
        "changed_files": 1,
        "created_at": "2017-11-30T04:01:49Z",
        "closed_at": "2017-11-30T20:21:00Z",
        "merged_at": "2017-11-30T20:21:00Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 83,
        "deletions": 38,
        "changed_files": 6,
        "created_at": "2017-11-29T08:54:50Z",
        "closed_at": "2018-07-20T20:03:01Z",
        "merged_at": "2018-07-20T20:03:01Z",
        "body": "This PR adds support for the nanoseconds field of the wellknown `Timestamp` type for PHP 5.6 and later.\r\nThe accuracy will be in the order of microseconds though, as that's the highest resolution PHP supports.\r\n\r\n---\r\n\r\nI hope this PR fullfills all necessary preconditions to be merged, but if it doesn't (e.g. because the `Timestamp` class is generated automatically), I'd be glad to help get this feature implemented whatever is necessary for that to happen. \ud83d\ude42",
        "comments": 17
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2017-11-28T22:26:36Z",
        "closed_at": "2017-12-04T23:28:56Z",
        "merged_at": "2017-12-04T23:28:56Z",
        "body": "",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-11-28T12:06:44Z",
        "closed_at": "2017-11-29T07:14:58Z",
        "merged_at": "2017-11-29T07:14:58Z",
        "body": "(This is trivial - noticed when doing some other work.)",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-11-28T05:56:31Z",
        "closed_at": "2017-11-28T22:08:22Z",
        "merged_at": null,
        "body": "Otherwise `proto_library()` is looking in the wrong path for the well known types, so you can't depend on `@com_google_protobuf//:descriptor_proto`",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-11-28T04:19:04Z",
        "closed_at": "2017-11-28T15:23:32Z",
        "merged_at": "2017-11-28T15:23:31Z",
        "body": "This PR solves issue #3961.\r\nMany PRs are failing because c# unit tests in travis cannot install dotnet-1.0.1\r\nThis version is not available anymore for trusty.\r\n\r\n```\r\nroot@035bb8b9f40f:/# apt-cache search dotnet\r\nlibgtk-dotnet3.0-cil - GTK.NET library\r\nlibgtk-dotnet3.0-cil-dev - GTK.NET library - development files\r\ndotnet-dev-1.0.4 - .NET Core SDK 1.0.4\r\ndotnet-dev-1.1.4 - .NET Core SDK 1.1.4\r\ndotnet-dev-1.1.5 - .NET Core SDK 1.1.5\r\n```\r\n\r\nUpgrading dotnet to 1.0.4",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-11-28T01:04:18Z",
        "closed_at": "2017-11-29T00:54:56Z",
        "merged_at": "2017-11-29T00:54:56Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 19,
        "deletions": 13,
        "changed_files": 2,
        "created_at": "2017-11-27T22:15:55Z",
        "closed_at": "2018-07-09T23:23:30Z",
        "merged_at": null,
        "body": "Ref. https://github.com/google/protobuf/issues/3843#issuecomment-346173274\r\n\r\n@xfxyjwf, @TeBoring, can you think of any downside of enabling this?\r\n\r\n/cc @jtattermusch @jskeet",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-11-27T18:56:19Z",
        "closed_at": "2017-11-30T00:10:45Z",
        "merged_at": "2017-11-30T00:10:45Z",
        "body": "We need to upload NuGet packages for v3.5.0\r\n#3952",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 75,
        "deletions": 2,
        "changed_files": 5,
        "created_at": "2017-11-27T15:27:26Z",
        "closed_at": "2018-08-08T21:56:16Z",
        "merged_at": null,
        "body": "This PR solves the problem described in issue #3954.\r\n\r\nIf the input to the parser is a mutable `bytearray`, an error is triggered in python2 and the type of the attributes is incorrect in python3.\r\n\r\nA unit test is also added to reproduce the problem:\r\n> python/google/protobuf/internal/parsing_test.py\r\n\r\nWithout the fix, the corresponding problems are triggered in python 2 / 3.\r\n\r\nPython2 unit test failure:\r\n\r\n> \r\n> Error\r\n> Traceback (most recent call last):\r\n>   File \"/home/lenij/anaconda3/envs/p2/lib/python2.7/unittest/case.py\", line 329, in run\r\n>     testMethod()\r\n>   File \"/home/lenij/crypto/protobuf/python/google/protobuf/internal/parsing_test.py\", line 54, in test_stable_type\r\n>     foo.ParseFromString(data_array)\r\n>   File \"/home/lenij/crypto/protobuf/python/google/protobuf/message.py\", line 185, in ParseFromString\r\n>     self.MergeFromString(serialized)\r\n>   File \"/home/lenij/crypto/protobuf/python/google/protobuf/internal/python_message.py\", line 1091, in MergeFromString\r\n>     raise message_mod.DecodeError('Truncated message.')\r\n> DecodeError: Truncated message.\r\n\r\nPython3 unit test failure:\r\n\r\n> Failure\r\n> Traceback (most recent call last):\r\n>   File \"/home/lenij/anaconda3/envs/qrl3/lib/python3.6/unittest/case.py\", line 59, in testPartExecutor\r\n>     yield\r\n>   File \"/home/lenij/anaconda3/envs/qrl3/lib/python3.6/unittest/case.py\", line 605, in run\r\n>     testMethod()\r\n>   File \"/home/lenij/crypto/protobuf/python/google/protobuf/internal/parsing_test.py\", line 55, in test_stable_type\r\n>     self.assertIsInstance(foo.bar, six.binary_type)\r\n>   File \"/home/lenij/anaconda3/envs/qrl3/lib/python3.6/unittest/case.py\", line 1245, in assertIsInstance\r\n>     self.fail(self._formatMessage(msg, standardMsg))\r\n>   File \"/home/lenij/anaconda3/envs/qrl3/lib/python3.6/unittest/case.py\", line 670, in fail\r\n>     raise self.failureException(msg)\r\n> AssertionError: bytearray(b'test') is not an instance of <class 'bytes'>\r\n> \r\n\r\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-11-27T14:10:48Z",
        "closed_at": "2017-11-30T18:44:12Z",
        "merged_at": "2017-11-30T18:44:12Z",
        "body": "While building Protobuf v3.5.0 (latest stable) facing an issue:  undefined reference to `google::protobuf::internal::Release_CompareAndSwap(long volatile*, long, long)' \r\n\r\nNeed to add 64-bit version for function : Release_CompareAndSwap\r\n\r\n I had already raised an issue here : https://github.com/google/protobuf/issues/3937 ",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2017-11-23T12:55:13Z",
        "closed_at": "2017-12-13T11:22:52Z",
        "merged_at": null,
        "body": "* Add a backslash in the catch block of the parseFromJsonStream function because previously no exceptions thrown in the mergeFromJsonArray function were caught there.\r\n* Add backslashes in docblocks of mergeFromJsonString, mergeFromString functions",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-11-22T19:28:05Z",
        "closed_at": "2018-06-25T21:06:55Z",
        "merged_at": null,
        "body": "",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 34,
        "deletions": 29,
        "changed_files": 1,
        "created_at": "2017-11-22T18:15:46Z",
        "closed_at": "2018-02-20T14:56:16Z",
        "merged_at": null,
        "body": "CMP0048 warns about project_VERSION variables not being set in the NEW way. This happens when using protobuf as a submodule in a larger build. GTest and RE2 have adopted\r\nsimilar patches.\r\nSee https://cmake.org/cmake/help/v3.10/policy/CMP0048.html",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 3017,
        "deletions": 345,
        "changed_files": 32,
        "created_at": "2017-11-21T22:39:01Z",
        "closed_at": "2017-12-13T21:48:59Z",
        "merged_at": "2017-12-13T21:48:59Z",
        "body": "",
        "comments": 16
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2017-11-21T21:44:17Z",
        "closed_at": "2018-01-25T23:37:01Z",
        "merged_at": "2018-01-25T23:37:00Z",
        "body": "Fixes https://github.com/google/protobuf/issues/3912\r\n\r\n[BUILT_SOURCES](https://www.gnu.org/software/automake/manual/html_node/Sources.html)\r\nis a hack used with [Automake's automatic dependency tracking](https://www.gnu.org/software/automake/manual/html_node/Dependencies.html#Dependencies)\r\nbut we don't use this automatic dependency tracking in protobuf as we explicitly\r\nlist all dependencies in the makefile. Its presence causes make to always\r\ngenerate these listed source files even when they are not requested and as\r\na result causes cross-compilation to fail because the built protoc\r\ncannot be used to generate unittest protos (see: https://github.com/google/protobuf/issues/3912).\r\n\r\nRemoving it fixes the build issue when running 'make', 'make all',  'make install' at cross-compilation. It doesn't affect 'make\r\nprotoc' because this BUILT_SOURCES hack only works for the implicit\r\ntargets 'all', 'check' or 'install'.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 8662,
        "deletions": 465,
        "changed_files": 29,
        "created_at": "2017-11-20T20:14:26Z",
        "closed_at": "2017-12-05T18:54:15Z",
        "merged_at": "2017-12-05T18:54:15Z",
        "body": "",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-11-18T02:40:28Z",
        "closed_at": "2017-11-21T18:46:45Z",
        "merged_at": "2017-11-21T18:46:45Z",
        "body": "-Wno-writable-strings removes 230 \"ISO C++11 does not allow conversion from\r\nstring literal to 'char *'\" warnings from TensorFlow test / build output.\r\nThese happen because pyext/ sources pass string literals to Python C API data\r\nstructures, e.g. PyGetSetDef, which for some reason were designed to not have\r\nthe const qualifier.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-11-18T01:13:30Z",
        "closed_at": "2017-11-21T18:45:42Z",
        "merged_at": "2017-11-21T18:45:42Z",
        "body": "If you try to build from the source distribution on PyPI and use the cpp implementation it currently fails with this error when you try to use it:\r\n\r\n```\r\nexceptions.ImportError, dynamic module does not define init function (init_message)\r\n```\r\n\r\nPart of the problem is the source distribution is missing the .cc and .h files for the Python extension. I'm able to build the extension from the source distribution after making this change.",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 256,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2017-11-17T14:43:52Z",
        "closed_at": "2018-06-11T21:35:25Z",
        "merged_at": null,
        "body": "# Change\r\n* Add directory (src/includeos)\r\n* Add cmake script to build and install the C++ runtime library for [IncludeOS](https://github.com/hioa-cs/IncludeOS)\r\n* Add `README.md` document explaining the purpose of the includeos directory and its contents",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 2923,
        "deletions": 182,
        "changed_files": 60,
        "created_at": "2017-11-17T05:20:13Z",
        "closed_at": "2017-11-17T20:36:37Z",
        "merged_at": null,
        "body": "",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2017-11-17T03:18:06Z",
        "closed_at": "2018-04-04T08:09:48Z",
        "merged_at": null,
        "body": "pull new",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-11-16T20:37:17Z",
        "closed_at": "2017-11-16T23:26:11Z",
        "merged_at": null,
        "body": "**Background**\r\n\r\nhttps://github.com/google/protobuf/blob/v3.0.0-beta-3/CHANGES.txt#L120 claims that \r\n\r\n> A new \"lite\" generator parameter was introduced in the protoc for C++ and\r\n    Java for Proto3 syntax messages.\r\n\r\nHowever, this is only enabled for C++. The Java generator options are hooked up to support the \"lite\" generator parameter, but the parameter parsing code is not there.\r\n\r\n**Change**\r\n\r\nAdd the code to parse the \"lite\" parameter for java code generation, modeled after the C++ code generator.\r\n\r\n**Test**\r\n\r\nTested with a simple proto message like so:\r\n\r\n```\r\nsyntax = \"proto3\";\r\n\r\npackage test;\r\n\r\nmessage Test {\r\n  int32 value = 1;\r\n}\r\n```\r\n\r\nRan these commands and verified the output is correct:\r\n\r\nEnforce lite code generation:\r\n\r\n```\r\n./src/protoc --java_out=lite:. test.proto\r\n```\r\n\r\nDefault code generation (controlled by optimize_for option per file):\r\n\r\n```\r\n./src/protoc --java_out=. test.proto\r\n```",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 68,
        "deletions": 53,
        "changed_files": 2,
        "created_at": "2017-11-16T18:39:17Z",
        "closed_at": "2017-11-17T02:46:47Z",
        "merged_at": "2017-11-17T02:46:47Z",
        "body": "Stop having travis build the test matrix and make it explicit so extra\r\nsettings are only on the test that need the, this helps make the travis\r\nUI a little cleaner (linux hosted stuff doesn't list an Xcode version),\r\nas well as avoid unneeded requirements limiting the travis pool something\r\ncan run on.\r\n\r\nSmall improvements to objectivec/DevTools/full_mac_build.sh to avoid some\r\nrepeated scripting and hopefully make things more reliable work with Xcode\r\n9.x.\r\n\r\nDon't mark the iOS tests as able to fail, hopefully with the new settings\r\nthey are stable and won't give false signals.\r\n\r\nSimplify the case for xcode versions and fixup xcode 9.[0-1].",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 28,
        "deletions": 28,
        "changed_files": 2,
        "created_at": "2017-11-16T09:37:35Z",
        "closed_at": "2018-06-11T21:37:06Z",
        "merged_at": "2018-06-11T21:37:06Z",
        "body": "This only seems to affect code generated with `option cc_enable_arenas = true`.  All I did was update `cpp_message.cc` to exclude a parameter for `RegisterArenaDtor` if registration is a no-op.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 14,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-11-16T07:09:51Z",
        "closed_at": "2018-04-09T20:41:18Z",
        "merged_at": null,
        "body": "to avoid conflicts with other loaded libprotobuf.so libraries.\r\n\r\nresolves #3899",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 39,
        "changed_files": 1,
        "created_at": "2017-11-15T15:41:50Z",
        "closed_at": "2017-11-15T17:46:42Z",
        "merged_at": "2017-11-15T17:46:42Z",
        "body": "@pherl / @xfxyjwf - fyi - Mostly just house cleaning, but I did drop some things that haven't been passing in a while since travis has limited osx hosts, and running something that's been failing for weeks seems like a waste since all google projects share a limited number of concurrent builds on travis.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-11-15T03:10:09Z",
        "closed_at": "2017-11-15T19:08:16Z",
        "merged_at": "2017-11-15T19:08:16Z",
        "body": "Here's the pull request that made it happen: https://github.com/google/protobuf/pull/2951",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 78,
        "deletions": 52,
        "changed_files": 25,
        "created_at": "2017-11-15T00:59:41Z",
        "closed_at": "2017-11-16T13:24:18Z",
        "merged_at": "2017-11-16T13:24:18Z",
        "body": "Removes a framework path that no longer exists in SDK\r\nCleans up icons and launchimages to match what Xcode expects (also updated icons to more hires versions \ud83d\ude04 ",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2017-11-15T00:17:03Z",
        "closed_at": "2017-11-15T19:09:15Z",
        "merged_at": "2017-11-15T19:09:15Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2017-11-15T00:00:39Z",
        "closed_at": "2017-11-15T16:45:32Z",
        "merged_at": "2017-11-15T16:45:32Z",
        "body": "Remove unnecessary retain/releases for GPBFieldDescriptors when\r\ncreating implementations with blocks. The descriptors do not need\r\nto be memory managed because they are essentially global constructs\r\nthat are guaranteed to be around the lifetime of the app.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 445,
        "deletions": 5022,
        "changed_files": 11,
        "created_at": "2017-11-14T23:39:12Z",
        "closed_at": "2017-11-15T16:52:58Z",
        "merged_at": "2017-11-15T16:52:58Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 11,
        "changed_files": 3,
        "created_at": "2017-11-14T23:17:08Z",
        "closed_at": "2017-11-15T16:02:35Z",
        "merged_at": "2017-11-15T16:02:35Z",
        "body": "Remove unreferenced 'GPBMessageSignatureProtocol' class that is just taking up\r\nspace in the Objective C runtime information by hanging the protocol it needs to\r\ndeclare off of GPBRootObject instead.\r\n\r\nSmall binary size reduction, but more importantly a removal of a class that\r\nappears to be unused when statically analyzed.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 285,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2017-11-14T22:31:56Z",
        "closed_at": "2017-11-16T13:26:47Z",
        "merged_at": "2017-11-16T13:26:47Z",
        "body": "Add runtime asserts (that can be disabled in release) that verify\r\nthat the types being get/set for messages using the C Api match\r\nthe type in the descriptor for the field being get/set.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 27,
        "deletions": 12,
        "changed_files": 2,
        "created_at": "2017-11-13T23:18:23Z",
        "closed_at": "2017-11-15T18:37:59Z",
        "merged_at": "2017-11-15T18:37:59Z",
        "body": "Basically, in Android/iOS, if one uses the cmake script to do cross compiling, the js_embed target fails making the whole build fail. What one usually need in Android cross compilation probably do not include the protoc compiler, so this PR provides an option to turn it off.\r\n\r\nLocally tested with cmake -Dprotobuf_BUILD_PROTOC_BINARIES=off && make && make install.",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2017-11-13T21:04:50Z",
        "closed_at": "2018-05-23T18:19:07Z",
        "merged_at": null,
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-11-13T16:43:20Z",
        "closed_at": "2017-11-13T18:39:06Z",
        "merged_at": "2017-11-13T18:39:06Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 41,
        "changed_files": 10,
        "created_at": "2017-11-13T09:06:34Z",
        "closed_at": "2017-11-14T07:32:00Z",
        "merged_at": "2017-11-14T07:32:00Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 22,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2017-11-10T21:15:04Z",
        "closed_at": "2017-11-13T17:31:28Z",
        "merged_at": "2017-11-13T17:31:28Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 22,
        "deletions": 29,
        "changed_files": 13,
        "created_at": "2017-11-10T19:48:28Z",
        "closed_at": "2017-11-13T18:47:30Z",
        "merged_at": "2017-11-13T18:47:30Z",
        "body": "#2891 ",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2017-11-10T09:15:57Z",
        "closed_at": "2018-06-23T04:17:14Z",
        "merged_at": null,
        "body": "File well_known_types_embed.cc is generated in the same place where are source code and this does not allow us make our sources read-only",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 44,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2017-11-10T08:05:26Z",
        "closed_at": "2017-11-10T17:30:41Z",
        "merged_at": "2017-11-10T17:30:41Z",
        "body": "Backports https://github.com/google/protobuf/pull/3858.\r\n\r\nCan we still squeeze this into 3.5 release? (some gRPC C# parsing optimizations depend on this being released).",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 44,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2017-11-09T13:34:57Z",
        "closed_at": "2017-11-10T07:57:41Z",
        "merged_at": "2017-11-10T07:57:41Z",
        "body": "In gRPC C# we would like to enable more efficient buffer management and it seems as a prerequisite\r\nto be able to parse protobuf messages from array slices (when pooling, we cannot ensure that the size of the array will be the same as the length of the payload, and for some techniques, we can't even rely on the offset being 0).\r\nTwo reasons why I'd like to add the methods to protobuf directly:\r\n- input.CheckReadEndOfStreamTag() is internal which makes it harder to check parsing went alright in external code.\r\n- the code to serialize/deserialize protobuf is part of the generated gRPC stubs, so keeping this code concise would help (and we can't have helpers in Grpc.Core as that one in protobuf agnostic).\r\n\r\nContext: https://github.com/grpc/grpc/issues/13236.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 4,
        "changed_files": 4,
        "created_at": "2017-11-08T06:57:42Z",
        "closed_at": "2018-02-28T07:33:50Z",
        "merged_at": null,
        "body": "I use the `PHPUnit\\Framework\\TestCase` notation instead of `PHPUnit_Framework_TestCase` while extending our TestCases. This will help us migrate to PHPUnit 6, that [no longer support snake case class names](https://github.com/sebastianbergmann/phpunit/blob/master/ChangeLog-6.0.md#changed-1).",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-11-08T04:54:27Z",
        "closed_at": "2018-01-06T22:09:09Z",
        "merged_at": null,
        "body": "Our usecase right now, is that we marshal the message to json in Go (using generated go struct), and unmarshal that json in a dynamic-typed language like Lua, and unmarshal it into a generic data structure (table in Lua), but we need the zero/empty values in the json. So in short, we want the \"omitempty\" json flag be removed from go structs, by setting `[goJsonFlags=\"\"]` in proto file.\r\n\r\nBut this option can be also used for completely excluding this param from json: `[goJsonFlags=\"-\"]`\r\nOr changing the param name in json: `[goJsonFlags=\"anotherName,omitempty\"]`\r\n\r\nThe default value for this param (`default=\",omitempty\"`) makes it backward-compatible.\r\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 36,
        "deletions": 9,
        "changed_files": 2,
        "created_at": "2017-11-08T00:54:04Z",
        "closed_at": "2017-11-08T23:39:48Z",
        "merged_at": "2017-11-08T23:39:48Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2017-11-06T04:19:35Z",
        "closed_at": "2018-07-02T20:56:26Z",
        "merged_at": "2018-07-02T20:56:26Z",
        "body": "#3846 ",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 146,
        "deletions": 16,
        "changed_files": 5,
        "created_at": "2017-11-03T21:32:03Z",
        "closed_at": "2018-06-25T21:21:03Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 520,
        "deletions": 164,
        "changed_files": 12,
        "created_at": "2017-11-03T19:35:26Z",
        "closed_at": "2017-11-04T16:33:57Z",
        "merged_at": "2017-11-04T16:33:57Z",
        "body": "* Fix php well known type conformance tests\r\n\r\n* Properly generate code for test.proto\r\n\r\n* Provide GPBMetadata files in c extensions for generated files to import.\r\n\r\n* Remove unnecessary test\r\n\r\n* Clean up code\r\n\r\n* Add declaration for initOnce.\r\n\r\n* Refactoring",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 118,
        "deletions": 43,
        "changed_files": 26,
        "created_at": "2017-11-02T21:17:05Z",
        "closed_at": "2017-11-08T21:56:59Z",
        "merged_at": "2017-11-08T21:56:58Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-11-02T20:47:41Z",
        "closed_at": "2017-11-13T22:38:35Z",
        "merged_at": "2017-11-13T22:38:35Z",
        "body": "Hi!\r\nSorry for bothering with such a minor thing, but I just noticed and fixed one annoying typo in WKT's test suite:\r\n`\"accpets\" -> \"accepts\"`\r\n\r\nThanks!",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-11-01T21:30:03Z",
        "closed_at": "2018-07-23T20:33:24Z",
        "merged_at": "2018-07-23T20:33:24Z",
        "body": "* Prevents installation of `phpunit/phpunit:^6` because the test cases in this project require `\\PHPUnit_Framework_TestCase` which was removed in v6.\r\n* Moves generated PHP classes for tests into autoload-dev so that they are not referenced in the dist autoload. I realize the published config is in the project root (meaning the generated classes would never be available in dist), but test dependencies are test dependencies after all.\r\n* Adds convenience Composer scripts to run protoc with and without grpc.",
        "comments": 12
    },
    {
        "merged": true,
        "additions": 520,
        "deletions": 164,
        "changed_files": 12,
        "created_at": "2017-11-01T19:10:14Z",
        "closed_at": "2017-11-03T19:30:09Z",
        "merged_at": "2017-11-03T19:30:09Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 24,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-11-01T18:04:26Z",
        "closed_at": "2018-06-25T21:11:57Z",
        "merged_at": null,
        "body": "Adds Dockerfile which creates a container to build Protobuf. Rather than worrying about Windows, OSX, or various Linux distros, developers *should* be able to quickly build Protobuf in a consistent cross-platform fashion. The build container installs dependencies required to build Protobuf and runs the configuration and make scripts unless the Docker CMD is overridden.\r\n\r\nI need some help:\r\nI ran through the config and make scripts successfully on my Mac, but `make` is failing on Ubuntu 16 and 14 (LTS) with the following error:\r\n\r\n```\r\ngoogle/protobuf/stubs/.libs/io_win32.o: file not recognized: File format not recognized\r\ncollect2: error: ld returned 1 exit status\r\nMakefile:2425: recipe for target 'libprotobuf.la' failed\r\nmake[2]: *** [libprotobuf.la] Error 1\r\nmake[2]: Leaving directory '/protobuf/src'\r\nMakefile:1545: recipe for target 'all-recursive' failed\r\nmake[1]: *** [all-recursive] Error 1\r\nmake[1]: Leaving directory '/protobuf'\r\nMakefile:1452: recipe for target 'all' failed\r\nmake: *** [all] Error 2\r\n```\r\n\r\nAny idea why this has happened? \r\n\r\nThank you for the consideration and assistance.",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-10-31T11:00:40Z",
        "closed_at": "2018-01-30T03:29:56Z",
        "merged_at": "2018-01-30T03:29:56Z",
        "body": "Fixes issue #1154 by noting that `vcpkg` contains protobuf. Potential improvements: also remark how to use `vcpkg` to get dependencies when building from source via CMake.",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 921,
        "deletions": 37,
        "changed_files": 6,
        "created_at": "2017-10-31T06:37:17Z",
        "closed_at": "2017-11-30T19:03:47Z",
        "merged_at": "2017-11-30T19:03:47Z",
        "body": "While debugging performance of `UnsafeDirectNioDecoder` vs `ArrayDecoder`, I found that reading strings is a hotspot - profiles specifically showed `isValidUtf8` as a hotspot, and I think this is because the small string copies made while decoding a byte buffer cause poor utilization of the CPU cache compared to operating entirely on a contiguous heap array. The effect of this is that it is usually better to first copy an entire `ByteBuffer` into a `byte[]` and use `ArrayDecoder` for real-world protos that will have some strings - `UnsafeDirectNioDecoder` could pretty much never beat `ArrayDecoder` if there is any reasonable amount of string content in the proto.\r\n\r\nThis change adds a custom decoding path that works directly on byte buffers without copying onto the heap. The decoding code path is modeled after the current isValidUtf8 with actual codepoint calculation inserted. Performance goes up a lot and allows `UnsafeDirectNioDecoder` to be viable, especially when the strings are ASCII which is very common. This is nice for Netty users (i.e., gRPC), which usually work with direct buffers.",
        "comments": 22
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-10-30T19:36:06Z",
        "closed_at": "2017-11-06T18:25:43Z",
        "merged_at": "2017-11-06T18:25:43Z",
        "body": "Addresses some build issues on ppc64le architecture and synchronizes the dependency to the submodule version pulled by gRPC.\r\n\r\nFixes https://github.com/google/protobuf/issues/3717",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 4,
        "created_at": "2017-10-30T08:50:56Z",
        "closed_at": "2017-10-30T19:12:21Z",
        "merged_at": "2017-10-30T19:12:21Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 17,
        "deletions": 35,
        "changed_files": 12,
        "created_at": "2017-10-27T09:28:51Z",
        "closed_at": "2018-06-23T04:18:04Z",
        "merged_at": null,
        "body": "Unusued variables, variable assigned twice, conditions never met or always having the same value.",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2017-10-25T21:43:55Z",
        "closed_at": "2017-10-26T19:20:57Z",
        "merged_at": "2017-10-26T19:20:57Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 469,
        "deletions": 60,
        "changed_files": 19,
        "created_at": "2017-10-25T15:08:46Z",
        "closed_at": "2017-12-09T09:49:25Z",
        "merged_at": "2017-12-09T09:49:25Z",
        "body": "(This builds on and requires #3798; it will just be 3 commits once that's merged.)",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 778,
        "deletions": 346,
        "changed_files": 19,
        "created_at": "2017-10-25T07:06:29Z",
        "closed_at": "2017-11-12T15:29:16Z",
        "merged_at": "2017-11-12T15:29:16Z",
        "body": "Fixes the C# codegen issues I ran into yesterday. Importantly:\r\n\r\n- Moves all the test protos into a C#-specific directory so they won't be changed without warning\r\n- Runs the codegen as part of the build",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 74,
        "deletions": 30,
        "changed_files": 2,
        "created_at": "2017-10-25T02:54:59Z",
        "closed_at": "2018-06-11T21:26:42Z",
        "merged_at": null,
        "body": "Introduces a much used feature (personally speaking).",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 166,
        "deletions": 40,
        "changed_files": 4,
        "created_at": "2017-10-24T15:30:01Z",
        "closed_at": "2018-03-27T11:31:30Z",
        "merged_at": "2018-03-27T11:31:29Z",
        "body": "This should work on Unity, Mono and .NET 3.5 as far as I'm aware.\r\nIt won't work on platforms where reflection itself is prohibited,\r\nbut that's a non-starter basically.\r\n\r\nCreating a PR to start with, but I'd like to test it in other environments before merging.\r\nOnce this is in, we can look at potentially officially supporting .NET 3.5 and Unity (#644).",
        "comments": 68
    },
    {
        "merged": true,
        "additions": 417,
        "deletions": 12,
        "changed_files": 13,
        "created_at": "2017-10-24T13:21:11Z",
        "closed_at": "2017-11-01T00:11:41Z",
        "merged_at": "2017-11-01T00:11:41Z",
        "body": "If messages A and B have the same oneof case, which is a message\r\ntype, and we merge B into A, those sub-messages should be merged.\r\n\r\nFixes #3200.\r\n\r\nNote that I haven't regenerated all the code, as some of the protos\r\nhave been changed, breaking generation.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-10-24T12:01:38Z",
        "closed_at": "2017-10-26T17:10:20Z",
        "merged_at": "2017-10-26T17:10:20Z",
        "body": "",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 112,
        "deletions": 7,
        "changed_files": 4,
        "created_at": "2017-10-24T10:47:02Z",
        "closed_at": "2017-10-28T06:47:44Z",
        "merged_at": "2017-10-28T06:47:44Z",
        "body": "Note that the default behavior is still to throw an exception; you\r\nneed to opt into ignoring unknown fields.\r\n\r\nFixes #2838.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 182,
        "deletions": 85,
        "changed_files": 5,
        "created_at": "2017-10-23T18:39:34Z",
        "closed_at": "2017-10-24T14:49:51Z",
        "merged_at": "2017-10-24T14:49:51Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2017-10-23T14:07:10Z",
        "closed_at": "2017-10-23T21:46:46Z",
        "merged_at": null,
        "body": "This change should be safe for most users thanks to the automatic construction of StringPiece out of std::string&.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-10-21T04:56:39Z",
        "closed_at": "2017-10-21T18:08:31Z",
        "merged_at": null,
        "body": "This is needed because not all Android builds use //external:android/crosstool\r\nFor example one can use --android_crosstool_top too.\r\n\r\nWithout this:\r\nexternal/android_ndk/ndk/toolchains/arm-linux-androideabi-4.9/prebuilt/darwin-x86_64/lib/gcc/arm-linux-androideabi/4.9.x/../../../../arm-linux-androideabi/bin/ld: error: cannot find -lpthread\r\nexternal/android_ndk/ndk/toolchains/arm-linux-androideabi-4.9/prebuilt/darwin-x86_64/lib/gcc/arm-linux-androideabi/4.9.x/../../../../arm-linux-androideabi/bin/ld: error: cannot find -lpthread\r\nexternal/android_ndk/ndk/toolchains/arm-linux-androideabi-4.9/prebuilt/darwin-x86_64/lib/gcc/arm-linux-androideabi/4.9.x/../../../../arm-linux-androideabi/bin/ld: error: cannot find -lpthread\r\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\r\n\r\nWith this and passing --define PLATFORM=android,  protobuf compiles fine.",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 3690,
        "deletions": 3121,
        "changed_files": 114,
        "created_at": "2017-10-18T19:24:41Z",
        "closed_at": "2017-10-19T17:48:55Z",
        "merged_at": "2017-10-19T17:48:55Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 21,
        "deletions": 13,
        "changed_files": 1,
        "created_at": "2017-10-18T17:51:03Z",
        "closed_at": "2017-10-18T18:59:00Z",
        "merged_at": "2017-10-18T18:59:00Z",
        "body": "Fixes #3533\r\n\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-10-18T17:33:47Z",
        "closed_at": "2017-10-18T19:04:44Z",
        "merged_at": null,
        "body": "Fix the same issue mentioned in #3533.",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-10-18T14:35:28Z",
        "closed_at": "2017-10-18T18:09:44Z",
        "merged_at": null,
        "body": "There is a typo in the readme",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-10-17T17:13:57Z",
        "closed_at": "2017-10-18T22:28:38Z",
        "merged_at": "2017-10-18T22:28:38Z",
        "body": "",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2089,
        "deletions": 887,
        "changed_files": 12,
        "created_at": "2017-10-17T16:51:28Z",
        "closed_at": "2017-10-26T21:41:44Z",
        "merged_at": "2017-10-26T21:41:44Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2017-10-16T18:07:04Z",
        "closed_at": "2017-10-16T19:07:15Z",
        "merged_at": null,
        "body": "Fixes Clang undefined behavior error:\r\n\r\n```\r\nexternal/protobuf_bzl/src/google/protobuf/util/json_util.cc:64:12: runtime error: null pointer passed as argument 1, which is declared to never be null\r\n/usr/include/string.h:43:28: note: nonnull attribute specified here\r\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior external/protobuf_bzl/src/google/protobuf/util/json_util.cc:64:12 in \r\n```",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 10,
        "changed_files": 4,
        "created_at": "2017-10-16T16:45:22Z",
        "closed_at": "2017-10-16T20:21:32Z",
        "merged_at": "2017-10-16T20:21:32Z",
        "body": "See https://github.com/google/protobuf/issues/3752 for context.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 43,
        "changed_files": 1,
        "created_at": "2017-10-16T03:39:03Z",
        "closed_at": "2017-10-20T18:56:32Z",
        "merged_at": "2017-10-20T18:56:32Z",
        "body": "This is merge of https://github.com/google/protobuf/pull/3757 into v3.4.x branch.  So that if there is another release of 3.4.x,  this can come out with that.\r\n\r\nThe SDK and os versions were hard coded.  Archs were mixed up.\r\nBecause of this,  Was getting errors with latest SDK:\r\nclang: warning: no such sysroot directory: '/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS9.2.sdk/' [-Wmissing-sysroot]\r\nclang: warning: no such sysroot directory: '/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS9.2.sdk/' [-Wmissing-sysroot]\r\nclang: warning: no such sysroot directory: '/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS9.2.sdk/' [-Wmissing-sysroot]\r\nIn file included from external/com_google_protobuf/src/google/protobuf/io/printer.cc:35:\r\nIn file included from external/com_google_protobuf/src/google/protobuf/io/printer.h:40:\r\nIn file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/string:470:\r\nIn file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/string_view:171:\r\nIn file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__string:56:\r\nIn file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm:638:\r\nIn file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/cstring:61:\r\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/string.h:61:15: fatal error: 'string.h' file not found\r\n              ^~~~~~~~~~\r\n              1 error generated.\r\n\r\nCurrently none of these are needed when using bazel with https://github.com/bazelbuild/rules_apple.\r\n1) -target arm64-apple-ios is passed properly to clang.  So -arch armv7 etc are not needed.\r\n2) OS_IOS is not used anywhere.\r\n3) Sources have:  GOOGLE_PROTOBUF_NO_THREADLOCAL defined in src/google/protobuf/stubs/platform_macros.h for iOS.  So __thread= is not needed.  In fact now that bazel is using C++11 by default,  __thread should ideally be moved to thread_local.\r\n4) -miphoneos-version-min is passed by rules_apple.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 43,
        "changed_files": 1,
        "created_at": "2017-10-16T03:36:42Z",
        "closed_at": "2017-10-20T18:56:14Z",
        "merged_at": "2017-10-20T18:56:14Z",
        "body": "The SDK and os versions were hard coded.  Archs were mixed up.\r\nBecause of this,  Was getting errors with latest SDK:\r\nclang: warning: no such sysroot directory: '/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS9.2.sdk/' [-Wmissing-sysroot]\r\nclang: warning: no such sysroot directory: '/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS9.2.sdk/' [-Wmissing-sysroot]\r\nclang: warning: no such sysroot directory: '/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS9.2.sdk/' [-Wmissing-sysroot]\r\nIn file included from external/com_google_protobuf/src/google/protobuf/io/printer.cc:35:\r\nIn file included from external/com_google_protobuf/src/google/protobuf/io/printer.h:40:\r\nIn file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/string:470:\r\nIn file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/string_view:171:\r\nIn file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__string:56:\r\nIn file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm:638:\r\nIn file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/cstring:61:\r\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/string.h:61:15: fatal error: 'string.h' file not found\r\n              ^~~~~~~~~~\r\n              1 error generated.\r\n\r\nCurrently none of these are needed when using bazel with https://github.com/bazelbuild/rules_apple.\r\n1) -target arm64-apple-ios etc is passed properly to clang.  So -arch armv7 etc are not needed.\r\nOS_IOS is not used anywhere.\r\n2) Sources have:  GOOGLE_PROTOBUF_NO_THREADLOCAL defined in src/google/protobuf/stubs/platform_macros.h for iOS.  So __thread= is not needed.  In fact now that bazel is using C++11 by default,  __thread should ideally be moved to thread_local.\r\n3) -miphoneos-version-min is passed by rules_apple.",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-10-14T23:32:02Z",
        "closed_at": "2017-10-19T17:54:52Z",
        "merged_at": "2017-10-19T17:54:51Z",
        "body": "fixes #3700",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-10-13T22:45:05Z",
        "closed_at": "2017-10-18T22:39:13Z",
        "merged_at": "2017-10-18T22:39:13Z",
        "body": "In protobuf-module.cmake: in addition to checking for release or debug\r\nvariants of protoc's location we should also check the configuration \"noconfig\".",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-10-12T22:27:25Z",
        "closed_at": "2017-10-13T22:21:57Z",
        "merged_at": null,
        "body": "This is a patch that Firefox carries in order to successfully build protobuf on 32-bit OpenBSD.\r\n\r\nIt originally comes from <https://bugzilla.mozilla.org/show_bug.cgi?id=1192556>.",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-10-12T22:02:21Z",
        "closed_at": "2018-06-23T04:18:16Z",
        "merged_at": null,
        "body": "Compiling Firefox with libc++ and GCC 4.9 on Android runs into a problem. The protobuf #includes and libc++ result in preprocessed code that looks something like:\r\n\r\n```\r\n/* via <iterator> */\r\n\r\nnamespace std {\r\nnamespace __1 {\r\n}\r\nusing namespace __1 __attribute__((__strong__));\r\n}\r\n\r\nnamespace std { namespace __1 {\r\ntemplate <class _Iter>\r\nclass __wrap_iter\r\n{\r\n  ...\r\n  template <class _Tp, class _Alloc> friend class vector;\r\n  ...\r\n};\r\n\r\n} // namespace __1\r\n} // namespace std\r\n```\r\n\r\n```\r\n/* via <vector> */\r\n\r\nnamespace std { namespace __1 {\r\n\r\ntemplate <class _Tp, class _Alloc>\r\nclass _LIBCPP_TYPE_VIS_ONLY vector : ...\r\n{ ... };\r\n\r\n} // namespace __1\r\n} // namespace std\r\n```\r\n\r\nand the problem is that GCC doesn't understand that the forward declaration of vector inside `__wrap_iter` is forward-declaring the actual vector class; it thinks it's declaring something else.\r\n\r\nHacking `<iterator>` to include `_LIBCPP_TYPE_VIS_ONLY` for the forward declaration doesn't help.  What does help is including `<vector>` earlier than `<iterator>`, so the `__wrap_iter` forward declaration picks up the correct definition of `std::vector`, and makes everything happy.\r\n\r\nThe patch originally comes from <https://bugzilla.mozilla.org/show_bug.cgi?id=1186561>.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-10-12T21:48:31Z",
        "closed_at": "2017-10-20T22:06:07Z",
        "merged_at": null,
        "body": "Without this fix, we get build errors like these on Windows when bundling protobuf in Firefox:\r\n\r\n```\r\nsrc/google/protobuf/stubs/strutil.cc(351): error C2039: 'LOGLEVEL_0': is not a member of 'google::protobuf'\r\nsrc/google/protobuf/stubs/strutil.cc(60): note: see declaration of 'google::protobuf'\r\nsrc/google/protobuf/stubs/strutil.cc(351): error C2065: 'LOGLEVEL_0': undeclared identifier\r\n```",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-10-12T21:11:20Z",
        "closed_at": "2017-10-13T20:18:43Z",
        "merged_at": "2017-10-13T20:18:43Z",
        "body": "This doesn't seem to cause problems when it's only included once, but it fails to build as part of the Firefox unified builds.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2017-10-12T12:01:41Z",
        "closed_at": "2017-10-19T17:56:04Z",
        "merged_at": "2017-10-19T17:56:04Z",
        "body": "",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 1309,
        "deletions": 52,
        "changed_files": 30,
        "created_at": "2017-10-11T21:44:52Z",
        "closed_at": "2017-10-12T18:02:57Z",
        "merged_at": "2017-10-12T18:02:57Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-10-11T07:09:14Z",
        "closed_at": "2017-10-18T22:31:12Z",
        "merged_at": null,
        "body": "",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2017-10-11T04:50:02Z",
        "closed_at": "2017-10-18T19:56:05Z",
        "merged_at": "2017-10-18T19:56:05Z",
        "body": "In a Raspberry Pi, tags are not hashable if data is passed as byterray, however, running in Ubuntu this is not a problem.\r\n\r\nThis PR addresses the issue described in: https://github.com/google/protobuf/issues/3734 and https://github.com/google/protobuf/issues/1173\r\n\r\n",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 23,
        "deletions": 43,
        "changed_files": 10,
        "created_at": "2017-10-10T14:05:57Z",
        "closed_at": "2017-10-18T22:30:50Z",
        "merged_at": null,
        "body": "### LIB_PREFIX\r\n\r\nCMake should decide the name of the output file of a static library. The right way to to this is to not have the `lib-` prefix in the CMake target names. So there's no need for the `LIB_PREFIX` variable and library target should preferably not have the `lib` prefix.\r\n\r\n### protobuf_DEBUG_POSTFIX\r\n\r\nThe CMake files used to build `protobuf` are usually part of the CMake build of a project that uses `protobuf`. The debug suffix just makes is harder to find the static library artifacts from the main project.\r\n\r\nThe build files generated by CMake will have separate folders for different CMAKE_BUILD_TYPEs so there's no need to differentiate in the file names.\r\n",
        "comments": 13
    },
    {
        "merged": false,
        "additions": 22,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2017-10-09T16:50:07Z",
        "closed_at": "2018-01-16T08:48:24Z",
        "merged_at": null,
        "body": "In order to avoid module name conflict with modules in PYTHON_PATH relative package import is introduced to generated python files.\r\n\r\nThis means that all imports like ```from Module1.Module2 import ProtoPackage``` will now looks like\r\n```\r\nfrom . import ProtoPackage\r\nfrom .. import Module2\r\n```\r\nThis will allow us to safety have another module with name 'Module1' and 'Module2' in the python path.",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-10-09T06:23:37Z",
        "closed_at": "2021-10-13T01:13:25Z",
        "merged_at": null,
        "body": "Merging of two maps with intersected keys throw exception\r\nI think, that it's not ok\r\nMaybe \"MergeFrom\" method for Map<> is a good idea?",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 20,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-10-06T18:33:08Z",
        "closed_at": "2017-10-27T19:37:30Z",
        "merged_at": "2017-10-27T19:37:30Z",
        "body": "VS2017 warns about a few additional things, for example, files that\r\ndefine no symbols (which is typically the result of a platform specific\r\nifdef not applying on Windows).\r\n\r\nSuppress these warnings so the build is clean on VS2017.",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 524,
        "deletions": 42,
        "changed_files": 11,
        "created_at": "2017-10-03T15:49:19Z",
        "closed_at": "2017-10-03T17:43:51Z",
        "merged_at": "2017-10-03T17:43:51Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 88,
        "deletions": 9,
        "changed_files": 8,
        "created_at": "2017-10-02T22:15:22Z",
        "closed_at": "2017-10-04T00:28:50Z",
        "merged_at": "2017-10-04T00:28:50Z",
        "body": "1) rb_ary_new cannot be called during allocate function. During allocate\r\nfucntion, the containing object hasn't been marked and rb_ary_new may\r\ninvoke gc to collect containing object.\r\n2) The global map should be marked before allocating it. Otherwise it\r\nmay be garbage collected.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-10-02T20:48:43Z",
        "closed_at": "2017-10-18T22:19:53Z",
        "merged_at": "2017-10-18T22:19:53Z",
        "body": "Add a link to my third party protobuf/gRPC implementation for GopherJS.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-10-01T10:22:47Z",
        "closed_at": "2017-10-04T12:54:34Z",
        "merged_at": null,
        "body": "gtest is not configured by default which is fixed in this PR.",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 15,
        "deletions": 15,
        "changed_files": 1,
        "created_at": "2017-09-29T09:17:55Z",
        "closed_at": "2017-10-18T22:27:42Z",
        "merged_at": "2017-10-18T22:27:42Z",
        "body": "",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 5450,
        "deletions": 144,
        "changed_files": 43,
        "created_at": "2017-09-29T00:28:49Z",
        "closed_at": "2017-10-06T04:03:58Z",
        "merged_at": "2017-10-06T04:03:58Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2017-09-28T06:53:44Z",
        "closed_at": "2018-06-23T04:18:32Z",
        "merged_at": null,
        "body": "In order to make Protobuf build and work on CloudABI, a sandboxed\r\nUNIX-like runtime environment, we have to extend the endianness\r\ndetection code. Instead of adding code specific to CloudABI, let's\r\nchange this to simply use definitions that are documented by GCC and\r\nClang, so that any other operating system/runtime may benefit.",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 15,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2017-09-27T23:54:54Z",
        "closed_at": "2018-06-27T03:27:25Z",
        "merged_at": "2018-06-27T03:27:25Z",
        "body": "This is mostly in the same vein as https://github.com/google/protobuf/pull/3627 for Ruby.\r\n\r\nIt allows doing: `MyMessage.new(string_field: nil)` and `string_field` is treated as a default. It makes it easier to construct protos when you're building up the options across multiple files, or from JSON where a nil value isn't necessarily a bad thing.",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-09-27T17:34:18Z",
        "closed_at": "2017-09-29T17:24:33Z",
        "merged_at": "2017-09-29T17:24:33Z",
        "body": "Fixes #3685",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-09-27T17:31:39Z",
        "closed_at": "2017-10-02T17:53:06Z",
        "merged_at": "2017-10-02T17:53:06Z",
        "body": "Fixes #3533",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2017-09-27T05:44:11Z",
        "closed_at": "2018-06-23T04:20:11Z",
        "merged_at": null,
        "body": "ByteSize() to ByteSizeLong()",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-09-22T09:49:04Z",
        "closed_at": "2017-09-25T17:39:32Z",
        "merged_at": "2017-09-25T17:39:32Z",
        "body": "",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2017-09-22T09:48:21Z",
        "closed_at": "2017-09-22T18:38:20Z",
        "merged_at": "2017-09-22T18:38:20Z",
        "body": "",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-09-21T21:09:05Z",
        "closed_at": "2017-09-21T22:24:32Z",
        "merged_at": "2017-09-21T22:24:32Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 27,
        "deletions": 9,
        "changed_files": 6,
        "created_at": "2017-09-20T22:47:57Z",
        "closed_at": "2017-09-22T21:08:02Z",
        "merged_at": "2017-09-22T21:08:02Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-09-20T19:35:43Z",
        "closed_at": "2018-06-25T21:57:41Z",
        "merged_at": "2018-06-25T21:57:41Z",
        "body": "the testMessageSetNullFail function was declared twice.\r\nSo I renamed one to testMessageSetNullFailMap",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2017-09-20T18:22:40Z",
        "closed_at": "2017-09-21T05:59:14Z",
        "merged_at": "2017-09-21T05:59:14Z",
        "body": "Fix #3617 ",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 56,
        "deletions": 52,
        "changed_files": 14,
        "created_at": "2017-09-19T15:17:35Z",
        "closed_at": "2018-06-11T21:45:28Z",
        "merged_at": null,
        "body": "`#pragma GCC diagnostic push `and `#pragma GCC diagnostic pop` were added in [gcc 4.6](https://gcc.gnu.org/gcc-4.6/changes.html).",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2194,
        "deletions": 934,
        "changed_files": 12,
        "created_at": "2017-09-19T00:39:56Z",
        "closed_at": "2017-10-09T19:39:14Z",
        "merged_at": "2017-10-09T19:39:13Z",
        "body": "1) For decoding, an unknownfields will be lazily created on message,\r\nwhich contains bytes of unknown fields.\r\n2) For encoding, if the unknownfields is present on message, all bytes\r\ncontained in it will be serialized.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 28,
        "deletions": 18,
        "changed_files": 15,
        "created_at": "2017-09-14T23:06:30Z",
        "closed_at": "2018-06-23T04:29:44Z",
        "merged_at": null,
        "body": "Currently, whether generated .pb.cc files are built in release or debug mode, the source filenames are included as strings in the resulting binary.\r\n\r\nThis is because protoc-cpp adds a call to the GOOGLE_PROTOBUF_VERIFY_VERSION macro in the InitDefaultsImpl function of every generated C++ protobuf message file.  That macro contains the __FILE__ macro.  Therefore, if you have a source file named MySpecialMessage.pb.cc, runnings *strings* on the resulting .o or .a or executable will reveal all the source file names.  If you are using CMAKE for your build, it will include the absolute path of all .pb.cc files (e.g. \"/Users/bob/dev/blah/generated/MySpecialMessage.pb.cc\").\r\n\r\nThis change follows the behavior of the assert macro, which will omit __FILE__ when NDEBUG is defined.",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 32,
        "deletions": 16,
        "changed_files": 13,
        "created_at": "2017-09-14T18:14:52Z",
        "closed_at": "2017-09-14T19:24:29Z",
        "merged_at": "2017-09-14T19:24:29Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-09-14T17:16:39Z",
        "closed_at": "2017-10-18T22:25:22Z",
        "merged_at": "2017-10-18T22:25:22Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 22,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2017-09-14T15:41:57Z",
        "closed_at": "2017-09-20T22:35:28Z",
        "merged_at": "2017-09-20T22:35:28Z",
        "body": "Calling `to_h` converts everything to a Ruby object representation, except if you have a repeated field with a message, then you get the message field object. This fixes it so it converts that to a hash too (and recursively does it).\r\n\r\nCalling `to_h` in JRuby didn't work if you had a repeated field, which is fixed in this too (mostly incidentally). `RubyRepeatedField` includes `RubyEnumerable` which responds to `to_h`, so it was trying to call `to_h` on an array, which errored. `to_h` in JRuby with a map field is still broken, because it converts it to a key/value representation where value is the proto object not the hash representation. Didn't fix that here, because it was unrelated to fixing repeated messages.\r\n\r\nI think it likely makes more sense if `RepeatedField_to_ary` and `RubyRepeatedField#toArray` did this, but I was opting to make less dramatic changes.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 93,
        "deletions": 44,
        "changed_files": 6,
        "created_at": "2017-09-13T18:35:51Z",
        "closed_at": "2017-09-13T21:24:00Z",
        "merged_at": "2017-09-13T21:24:00Z",
        "body": "Reverts google/protobuf#3604",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 116,
        "deletions": 26,
        "changed_files": 5,
        "created_at": "2017-09-12T20:03:28Z",
        "closed_at": "2017-09-21T22:08:46Z",
        "merged_at": "2017-09-21T22:08:46Z",
        "body": "I saw #3120  also asked for this. We're in the process of trying to migrate people from a pure Ruby proto gem to the Google one, and the requirement to initialize all protos is a blocker. Sounds like there was interest in this, so figured I'd take a stab at implementing it in.\r\n\r\nTaking the examples from #3120, this lets you do: `MyMessage.new(submessage_field: { foo: 42 })`and it will automatically turn the `{ foo: 42 }` into a `SubMessage.new(foo: 42)`.\r\n\r\nSince a common scenario is also to be turning JSON into protos (for proto backed JSON APIs), I also changed the initialization to support symbol or string keys to prevent having to do a deep symbolization pass before initializing the protos.",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2017-09-12T19:00:53Z",
        "closed_at": "2017-09-14T00:57:11Z",
        "merged_at": "2017-09-14T00:57:11Z",
        "body": "It was broken when I introduced well known types into example addressbook.proto in https://github.com/google/protobuf/pull/3613\r\n\r\nThis PR fixes it by adding the needed import path.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 17143,
        "deletions": 16600,
        "changed_files": 173,
        "created_at": "2017-09-12T17:53:36Z",
        "closed_at": "2017-09-18T15:34:55Z",
        "merged_at": "2017-09-18T15:34:55Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-09-12T10:01:03Z",
        "closed_at": "2017-09-12T20:46:53Z",
        "merged_at": "2017-09-12T20:46:53Z",
        "body": "Upport https://github.com/google/protobuf/pull/3596 to upstream/master\r\n\r\n(to make sure this change will land in the following releases too).",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2017-09-11T15:03:29Z",
        "closed_at": "2017-09-12T18:09:03Z",
        "merged_at": "2017-09-12T18:09:03Z",
        "body": "There were several issues when using the protobuf_generate function which made it unusable (eg. argument parsing did not work correctly, uninitialized variables, wrong if condition, ...). This PR fixes them.",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 1,
        "changed_files": 5,
        "created_at": "2017-09-09T01:40:38Z",
        "closed_at": "2021-06-07T13:38:06Z",
        "merged_at": null,
        "body": "Not necessarily advocating for this change, mostly asking as a question and thought this PR was perhaps the easiest way to answer\r\n\r\nWhy is `pyext._message.DescriptorBase` not a virtual subclass of `google.protobuf.descriptor.DescriptorBase` as the other descriptors are? I ran into this issue when migrating to the C++ runtime and observing that an `isinstance(d, DescriptorBase)` which previously passed no longer does",
        "comments": 14
    },
    {
        "merged": true,
        "additions": 352,
        "deletions": 89,
        "changed_files": 14,
        "created_at": "2017-09-08T23:07:13Z",
        "closed_at": "2017-09-12T01:19:07Z",
        "merged_at": "2017-09-12T01:19:07Z",
        "body": "The example utilizes native bazel rules (proto_library, cc_proto_library,\r\njava_proto_library, java_lite_proto_library) to show how easy it is to\r\nbuild protobuf with bazel's native support. It also makes use of well\r\nknown types which was not possible until the latest bazel 0.5.4 release\r\nand https://github.com/google/protobuf/pull/3594 .",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1087,
        "deletions": 30,
        "changed_files": 14,
        "created_at": "2017-09-08T22:18:35Z",
        "closed_at": "2017-09-15T16:20:24Z",
        "merged_at": "2017-09-15T16:20:24Z",
        "body": "",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 2021,
        "deletions": 238,
        "changed_files": 10,
        "created_at": "2017-09-07T16:11:47Z",
        "closed_at": "2017-11-20T19:21:34Z",
        "merged_at": null,
        "body": "(Sorry this is going to be long!)\r\n\r\nI'm happy to split the PR up into multiple, but wasn't really sure what your preferences were on this. I intentionally didn't update the proto generator, since this only supports MRI and not the Java side too. I can add the Java one into this PR, or do that after.\r\n\r\nOne of the main problems with this I ran into was API compatibility. You need to have the syntax set before you do anything, because things like defaults or maps are set when messages are added initially, and a lot of it is easier to gate at add time rather than doing post add validation checks (like is done with enums).\r\n\r\nI opted to make `FileDescriptor` an optional argument you pass to `DescriptorPool`, and that gets automatically added to anything you attach to it after. If you don't pass a `FileDescriptor`, it sets it to proto3 as that's the current syntax that's supported when generating so it maintains backwards compatibility.\r\n\r\nIt means `Descriptor` and `EnumDescriptor` end up with breaking changes because they require a `FileDescriptor` passed. Are instantiating these directly supported APIs?  Same with `FieldDescriptor`, ideally it would be a required init so things like `FieldDescriptor_default_set` and `FieldDescriptor_default` can be gated by syntax. As it stands, it seems you can't access the parent from `FieldDescriptor` until after it's been added.\r\n\r\nFor setting defaults for enums, you have to use an int, because we can't guarantee an enum is added to the pool before we set our default. The only way I can see supporting adding-by-name is if we do it after the pool is initialized, and we add enums first, but I didn't want to bypass UPB for only default setting. Might be something that UPB3 makes easier @haberman?\r\n\r\nWhile right now, you can only set `default` for `add_field`, I made it a hash rather than a single argument to give us the ability to add the other extension type fields without having to make more API changes.\r\n\r\nThe way hasbits are handled feels a little janky, but I was trying to reuse the existing UPB MSG_WRITERS rather than just copy/pasting the code and storing the offsets as-is. One thing @nerdrew noticed is that `upb_msg_has` seems to have a bug? It does `DEREF(msg, hasbit / 8, char) | (1 << (hasbit % 8))` which will always end up being true, looks like this should be an AND not an OR? The method is never used that I could tell.\r\n\r\nFor hasbits, I made it so we always use them (even in proto3), but it gates them behind the `upb_fielddef_haspresence` so under proto3 it's only using them for sub messages. One semantic I'm not sure how you want to handle is unsetting a field though.\r\n\r\nI added a `clear_<field>` method which unsets the hasbit, but it means doing `<field>=nil` doesn't unset it. If I remember right, in Java this also doesn't (you have to call clear explicitly). One option is to make it so `<field>=nil` is equivalent to `clear_<field>`. That feels like the better way of handling it in Ruby, but wanted to get your opinion on it.\r\n\r\nFor tests, I just added a `basic_proto2.rb` one. It looks like the proto2 tests for the other libraries are handled via compatibility_tests and copying the old version to preserve it historically. Since there wasn't a prior version that supported proto2, I just opted to inline another test. I can follow that pattern and have a fake v2 version under it if you want.\r\n\r\n(cc @nerdrew @djudd-stripe)",
        "comments": 19
    },
    {
        "merged": true,
        "additions": 44,
        "deletions": 93,
        "changed_files": 6,
        "created_at": "2017-09-06T20:40:26Z",
        "closed_at": "2017-09-12T22:09:48Z",
        "merged_at": "2017-09-12T22:09:48Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-09-06T17:30:36Z",
        "closed_at": "2017-09-08T15:06:09Z",
        "merged_at": null,
        "body": "Implicit fallthrough throws an warning on GCC 7 with -Wextra.\r\n\r\nThe current code already supports the explicit attribute using\r\nGOOGLE_FALLTHROUGH_INTENDED at specific configuration with clang.\r\n\r\nThis commit supports the C++17 new attribute [[fallthrough]] and the GNU\r\nversion, [[gnu:fallthrough]].\r\n\r\nI kept the current rules to enable the attribute when compiling with clang.",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 35,
        "deletions": 0,
        "changed_files": 4,
        "created_at": "2017-09-05T18:22:46Z",
        "closed_at": "2018-06-25T22:20:22Z",
        "merged_at": null,
        "body": "Hey everyone,\r\n\r\nI came across a nasty little bug with Python reflection, with a simple workaround. The problem can be triggered by a map whose value is a nested message.\r\n\r\n*Problem description:* Both the constructors of protoc-generated messages and of reflection-generated messages (GeneratedProtocolMessageType.__init__) set descriptor._concrete_class to themselves. Unfortunately, if you access a class both directly and through reflection, they try to do this to the same descriptor, and hilarity ensues.\r\n\r\nA way to manifest this problem is to print a protobuf (constructed normally) containing a map whose value is a nested (not foreign) type. When the printer reaches the map field, it will call value.GetEntryClass()(key=...) on the MapMessage object, which in turn calls descriptor._concrete_class(); the constructor then tries to MergeFrom on the output of that, merging the contents of the value field from the class being printed into what was made by the concrete class. But if the generated class has ever been constructed, descriptor._concrete_class() will now return one of *those*, and MergeFrom will throw a TypeError because it's trying to merge two different classes!\r\n\r\n*A hypothetical hard fix:* would be to have multiple concrete classes available in the descriptor and switch through them based on something or other.\r\n\r\n*A much easier fix:* There are really two bugs here: the fact that both classes are modifying the same descriptor, and the fact that MergeFrom is testing class match incorrectly. Specifically, MergeFrom should work fine if you are trying to merge a generated class into a compiled class or vice-versa. Therefore, a much better fix is to replace the isinstance() check on python_message.py:1212 with a check that also allows it to pass if the two classes are protos whose descriptor matches.\r\n\r\nThere do not appear to be any other points in the protobuf code that require such a change; the only other dubious uses of isinstance() are in the two equality checks (_AddEqualsMethod.__eq__ and _ExtensionDict.__eq__), where it's arguable that returning false when comparing generated and non-generated messages is reasonable. (Although you could argue the other way; proto equality has always been a contentious subject)\r\n\r\nThis pull request contains the fix and a unittest which reproduces the core issue.,",
        "comments": 23
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-09-05T16:01:19Z",
        "closed_at": "2017-09-07T14:39:36Z",
        "merged_at": "2017-09-07T14:39:35Z",
        "body": "Fixes https://github.com/google/protobuf/issues/3595.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 47,
        "deletions": 15,
        "changed_files": 2,
        "created_at": "2017-09-05T15:21:42Z",
        "closed_at": "2017-09-05T21:09:37Z",
        "merged_at": "2017-09-05T21:09:37Z",
        "body": "Adds a proto_library rule for each well known type proto:\r\n\r\n```\r\n$ bazel query \"filter(\\\".*_proto$\\\", \\\"...\\\")\"\r\n//:wrappers_proto\r\n//:timestamp_proto\r\n//:struct_proto\r\n//:field_mask_proto\r\n//:empty_proto\r\n//:duration_proto\r\n//:compiler_plugin_proto\r\n//:descriptor_proto\r\n//:api_proto\r\n//:type_proto\r\n//:source_context_proto\r\n//:any_proto\r\n```\r\n\r\nBazel users can reference these proto_library rules for their own\r\nlanguage specific rules i.e.\r\n\r\n```\r\njava_proto_library(\r\n  name = \"any_java_proto\",\r\n  deps = [\"@com_google_protobuf//:any_proto\"],\r\n)\r\n```\r\n\r\nAlso set the workspace name to `\"com_google_protobuf\"`, as proto_library\r\nrules reference protobuf that way.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-09-04T08:26:07Z",
        "closed_at": "2017-09-06T01:09:28Z",
        "merged_at": null,
        "body": "Fix following build errors:  \r\n\r\n```\r\nerror: this use of \"defined\" may not be portable [-Werror=expansion-to-defined]\r\n #if GOOGLE_PROTOBUF_USE_UNALIGNED\r\n     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n```",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-09-04T07:44:54Z",
        "closed_at": "2017-09-06T17:31:53Z",
        "merged_at": "2017-09-06T17:31:53Z",
        "body": "Fix the bug in following scenario:  \r\n\r\n`gmock` is downloaded successfully while `gtest` not. Resuming \"`autogen.sh`\",\r\nthe `gtest` won't be downloaded. And following error will occur:  \r\n\r\n```\r\n$ ./autogen.sh\r\n+ autoreconf -f -i -Wall,no-obsolete\r\naclocal: error: configure.ac:1: file 'gtest/m4/acx_pthread.m4' does not exist\r\nautoreconf: aclocal failed with exit status: 1\r\n```",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 261,
        "deletions": 0,
        "changed_files": 7,
        "created_at": "2017-09-01T19:56:49Z",
        "closed_at": "2017-09-05T21:10:33Z",
        "merged_at": "2017-09-05T21:10:33Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 45,
        "deletions": 2,
        "changed_files": 4,
        "created_at": "2017-08-31T17:50:48Z",
        "closed_at": "2017-10-18T22:33:32Z",
        "merged_at": "2017-10-18T22:33:32Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 216,
        "deletions": 151,
        "changed_files": 8,
        "created_at": "2017-08-30T18:34:56Z",
        "closed_at": "2017-08-30T23:50:07Z",
        "merged_at": "2017-08-30T23:50:07Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 443,
        "deletions": 102,
        "changed_files": 8,
        "created_at": "2017-08-29T21:38:46Z",
        "closed_at": "2017-08-31T17:35:32Z",
        "merged_at": "2017-08-31T17:35:31Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2017-08-24T21:12:11Z",
        "closed_at": "2017-08-24T23:41:23Z",
        "merged_at": "2017-08-24T23:41:23Z",
        "body": "Fixes #3562",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 146,
        "deletions": 61,
        "changed_files": 6,
        "created_at": "2017-08-24T20:37:29Z",
        "closed_at": "2017-09-10T22:17:51Z",
        "merged_at": "2017-09-10T22:17:51Z",
        "body": "This adds PHP support for JSON serialization and deserialization of `google.protobuf.Timestamp` RFC 3339 timestamps.\r\n\r\nI appreciate there may be a better way of doing this, especially to accommodate the other well-known types in the future.",
        "comments": 12
    },
    {
        "merged": false,
        "additions": 25,
        "deletions": 9,
        "changed_files": 4,
        "created_at": "2017-08-24T15:58:59Z",
        "closed_at": "2018-06-23T04:30:15Z",
        "merged_at": null,
        "body": "This fixes the placement of the `JSON_BIGINT_AS_STRING` option passed to `json_decode`, this is being passed as the `$assoc` parameter which decodes the JSON as an associative array.\r\n\r\nI've changed the JSON to be decoded as as object rather as an array. This fixes an issue where the keys to a Protobuf map could be a numerical string, which then become integers when decoded as an associative array causing `expected string`\r\n\r\n```php\r\n$data = '{\"1001\": true, \"foo\": true}';\r\n\r\nvar_dump(json_decode($data, true));\r\n// array(2) {\r\n//   [1001]=>\r\n//   bool(true)\r\n//   [\"foo\"]=>\r\n//   bool(true)\r\n// }\r\n\r\nvar_dump(json_decode($data));\r\n// object(stdClass)#1 (2) {\r\n//   [\"1001\"]=>\r\n//   bool(true)\r\n//   [\"foo\"]=>\r\n//   bool(true)\r\n// }\r\n```",
        "comments": 14
    },
    {
        "merged": false,
        "additions": 18,
        "deletions": 16,
        "changed_files": 7,
        "created_at": "2017-08-24T08:46:23Z",
        "closed_at": "2017-08-24T23:52:00Z",
        "merged_at": null,
        "body": "Fixed some C++ compile warnings on x64 platform.",
        "comments": 13
    },
    {
        "merged": true,
        "additions": 37,
        "deletions": 23,
        "changed_files": 5,
        "created_at": "2017-08-24T05:04:37Z",
        "closed_at": "2017-08-31T18:36:06Z",
        "merged_at": "2017-08-31T18:36:06Z",
        "body": "This makes the frame stack per-parser, and per-thread.  Fixes #3250",
        "comments": 16
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-08-23T00:17:57Z",
        "closed_at": "2017-08-23T19:31:15Z",
        "merged_at": "2017-08-23T19:31:15Z",
        "body": "",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 39,
        "changed_files": 2,
        "created_at": "2017-08-22T20:03:02Z",
        "closed_at": "2017-08-23T00:45:27Z",
        "merged_at": "2017-08-23T00:45:27Z",
        "body": "Also remove cord related code",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 5,
        "changed_files": 3,
        "created_at": "2017-08-22T17:39:35Z",
        "closed_at": "2017-08-24T17:17:11Z",
        "merged_at": "2017-08-24T17:17:11Z",
        "body": "Jenkins complains for python 2.6\r\nDEPRECATION: Python 2.6 is no longer supported by the Python core team\r\nERROR: InvocationError: '/tmp/protobuf/protobuf/python/.tox/py26-cpp/bin/python setup.py -q build_py'\r\nhttps://grpc-testing.appspot.com/job/protobuf_pull_request/1502/testReport/junit/(root)/python_cpp/python_cpp/",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-08-22T16:03:26Z",
        "closed_at": "2017-08-22T17:42:20Z",
        "merged_at": "2017-08-22T17:42:20Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-08-21T23:31:46Z",
        "closed_at": "2017-08-22T17:59:40Z",
        "merged_at": "2017-08-22T17:59:40Z",
        "body": "Fixing -Wexpansion-to-defined Clang warning",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 33,
        "deletions": 29,
        "changed_files": 2,
        "created_at": "2017-08-21T23:31:25Z",
        "closed_at": "2017-08-22T17:59:50Z",
        "merged_at": "2017-08-22T17:59:50Z",
        "body": "Fixing unused parameter warnings under Clang.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 34308,
        "deletions": 20128,
        "changed_files": 426,
        "created_at": "2017-08-21T23:12:15Z",
        "closed_at": "2017-11-14T23:04:45Z",
        "merged_at": null,
        "body": "Remove unreferenced 'GPBMessageSignatureProtocol' class that is just taking up\r\nspace in the Objective C runtime information by hanging the protocol it needs to\r\ndeclare off of GPBRootObject instead.\r\n\r\nSmall binary size reduction, but more importantly a removal of a class that\r\nappears to be unused when statically analyzed.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 25,
        "deletions": 1,
        "changed_files": 5,
        "created_at": "2017-08-21T20:41:23Z",
        "closed_at": "2017-08-22T18:07:47Z",
        "merged_at": "2017-08-22T18:07:47Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 15,
        "deletions": 15,
        "changed_files": 1,
        "created_at": "2017-08-21T20:17:41Z",
        "closed_at": "2017-08-21T22:17:43Z",
        "merged_at": "2017-08-21T22:17:43Z",
        "body": "- Use scoped_array instead of unique_ptr.\r\n- Do not use string::front() and string::back()",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 33,
        "deletions": 29,
        "changed_files": 2,
        "created_at": "2017-08-21T17:12:22Z",
        "closed_at": "2017-08-21T22:46:00Z",
        "merged_at": "2017-08-21T22:46:00Z",
        "body": "",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 21088,
        "deletions": 8336,
        "changed_files": 310,
        "created_at": "2017-08-18T23:26:30Z",
        "closed_at": "2017-08-21T17:39:27Z",
        "merged_at": "2017-08-21T17:39:27Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 9,
        "changed_files": 2,
        "created_at": "2017-08-18T22:38:29Z",
        "closed_at": "2017-08-21T17:23:41Z",
        "merged_at": null,
        "body": "It is a revert for #3517 because Jenknins show syntax errors:\r\nhttps://grpc-testing.appspot.com/job/protobuf_pull_request/1479/testReport/junit/(root)/python/python/",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2017-08-18T22:32:28Z",
        "closed_at": "2017-08-21T17:21:11Z",
        "merged_at": "2017-08-21T17:21:11Z",
        "body": "Fixes a mistake that I made in #3517\r\n\r\nSee https://github.com/PythonCharmers/python-future/pull/298",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 5,
        "changed_files": 3,
        "created_at": "2017-08-18T20:16:03Z",
        "closed_at": "2017-08-22T17:40:27Z",
        "merged_at": null,
        "body": "Reverts google/protobuf#3524",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2017-08-18T00:04:19Z",
        "closed_at": "2017-08-18T17:13:10Z",
        "merged_at": "2017-08-18T17:13:10Z",
        "body": "http://python-future.org/compatible_idioms.html?highlight=cmp#cmp",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 53,
        "deletions": 32,
        "changed_files": 6,
        "created_at": "2017-08-17T23:43:39Z",
        "closed_at": "2017-08-18T17:11:30Z",
        "merged_at": "2017-08-18T17:11:30Z",
        "body": "Define raw_input() for Python 3, replace file() with open(), etc. #3507, #3508, and #3512 together should fix most of the Python 3 incompatibilities.\r\n\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 75,
        "deletions": 8,
        "changed_files": 9,
        "created_at": "2017-08-17T21:21:08Z",
        "closed_at": "2017-08-22T18:03:13Z",
        "merged_at": null,
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2017-08-17T17:33:16Z",
        "closed_at": "2017-08-18T17:14:01Z",
        "merged_at": "2017-08-18T17:14:01Z",
        "body": "Python 3.3 goes [EOL](https://docs.python.org/devguide/index.html#branchstatus) next month.",
        "comments": 11
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-08-17T17:25:51Z",
        "closed_at": "2017-08-17T20:51:23Z",
        "merged_at": "2017-08-17T20:51:23Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-08-17T10:42:28Z",
        "closed_at": "2017-08-24T18:08:08Z",
        "merged_at": null,
        "body": "Python 3 is _not_ supported and there will never be a Python 2.8 https://www.python.org/dev/peps/pep-0404/",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-08-17T10:33:47Z",
        "closed_at": "2018-06-11T21:17:46Z",
        "merged_at": "2018-06-11T21:17:46Z",
        "body": "Inspect is used five times on line 65-74 without being imported.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2017-08-17T08:49:29Z",
        "closed_at": "2018-06-11T22:07:06Z",
        "merged_at": null,
        "body": "The files namely \"build-protoc.sh\" and \"build-zip.sh\" in sub-folder \"protoc-artifacts\" has been updated to support architecture PPC64LE.\r\nAfter this modification, I am able to successfully build for Power platform.",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-08-16T20:36:14Z",
        "closed_at": "2017-08-18T23:19:45Z",
        "merged_at": "2017-08-18T23:19:45Z",
        "body": "It seems like the image has a /usr/local/bin/autoconf installed, which\r\ndoesn't recognize/work with the yum installed libtools. Putting\r\ndistributed binaries/libraries first solves the problem",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-08-16T18:08:33Z",
        "closed_at": "2017-08-24T17:17:56Z",
        "merged_at": "2017-08-24T17:17:56Z",
        "body": "Due to https://bugs.llvm.org/show_bug.cgi?id=34198, clang's static\r\nanalyzer emits diagnostics about leaking `container`. Doing this\r\nassignment in two steps works around this.\r\n\r\nIn particular, this code is making the static analyzer we run in The\r\nWonderful World of Android sad.",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2017-08-16T17:35:46Z",
        "closed_at": "2017-08-17T20:50:50Z",
        "merged_at": "2017-08-17T20:50:50Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2017-08-15T20:14:51Z",
        "closed_at": "2017-08-15T21:25:45Z",
        "merged_at": "2017-08-15T21:25:45Z",
        "body": "@zhangkun83 ",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 19,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-08-15T18:46:40Z",
        "closed_at": "2017-08-15T23:39:13Z",
        "merged_at": "2017-08-15T23:39:13Z",
        "body": "Protobuf now uses these two features, which are not available on some\r\nplatforms.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-08-15T18:44:21Z",
        "closed_at": "2017-08-15T21:58:39Z",
        "merged_at": "2017-08-15T21:58:39Z",
        "body": "Clang 6.0.0 (trunk 310909) was producing the following warning:\r\n\r\n> src/google/protobuf/stubs/port.h:263:5: warning: macro expansion producing 'defined' has undefined behavior [-Wexpansion-to-defined]\r\n> src/google/protobuf/stubs/port.h:260:49: note: expanded from macro 'GOOGLE_PROTOBUF_USE_UNALIGNED'\r\n>      defined(__x86_64__) || defined(_M_IX86) || defined(__i386__)\r\n\r\nThis change intends to resolve the warning (and undefined behavior).",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2017-08-15T18:20:47Z",
        "closed_at": "2017-08-15T20:21:44Z",
        "merged_at": "2017-08-15T20:21:44Z",
        "body": "Fix part of #3492 ",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 151,
        "deletions": 8,
        "changed_files": 10,
        "created_at": "2017-08-15T02:54:35Z",
        "closed_at": "2018-06-25T21:58:31Z",
        "merged_at": null,
        "body": "Instruction: Follow the guideline \"Building PECL extensions\" in https://wiki.php.net/internals/windows/stepbystepbuild, copy all files in ``php/ext/google/protobuf/`` to ``phpdev\\vc14\\x64\\pecl\\protobuf``, and configure with ``configure --disable-all --enable-cli --enable-protobuf=shared --disable-zts``\r\n\r\n![image](https://user-images.githubusercontent.com/2398785/29300267-0cc74368-81a7-11e7-842f-1da6e3aa2c88.png)\r\n\r\n![image](https://user-images.githubusercontent.com/2398785/29300216-c3c291d6-81a6-11e7-8a3d-3451b7d19346.png)\r\n![image](https://user-images.githubusercontent.com/2398785/29300278-108fa5c6-81a7-11e7-8806-271fa72c96e4.png)\r\n\r\n\r\n\r\nThis PR just fixed building on Windows, anyway, there're lots of warning when I compiling it and if I call any function like ``\\Google\\Protobuf\\Internal\\DescriptorPool::internalAddGeneratedFile``, it will still crash PHP.",
        "comments": 18
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-08-14T21:33:43Z",
        "closed_at": "2017-08-14T22:39:45Z",
        "merged_at": "2017-08-14T22:39:45Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 904,
        "deletions": 58,
        "changed_files": 10,
        "created_at": "2017-08-11T21:44:28Z",
        "closed_at": "2017-08-25T15:49:35Z",
        "merged_at": "2017-08-25T15:49:34Z",
        "body": "",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 44,
        "deletions": 15,
        "changed_files": 13,
        "created_at": "2017-08-11T21:07:28Z",
        "closed_at": "2017-08-11T23:44:08Z",
        "merged_at": "2017-08-11T23:44:08Z",
        "body": "Restrict the io_win32 change and only enable that for MSVC, because:\r\n1) lots of the _w functions are not available on MinGW32 (possibly on cygwin either)\r\n2) those platforms include <io.h> already via other common headers; using the functions in internal::win32 creates conflicts.\r\n\r\nThis is a temporary fix to make the build pass. We can revisit this if support on MinGW32 is required. Note that the pre-built protoc artifacts are built under mingw32. With this change, they won't use the long path support code and would rely on the platform APIs for path support.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-08-11T20:54:41Z",
        "closed_at": "2017-08-11T22:36:12Z",
        "merged_at": "2017-08-11T22:36:12Z",
        "body": "For https://github.com/grpc/grpc/pull/11886",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 7,
        "changed_files": 3,
        "created_at": "2017-08-11T09:18:12Z",
        "closed_at": "2017-08-11T18:33:55Z",
        "merged_at": "2017-08-11T18:33:55Z",
        "body": "Previously we only rejected the tag if the tag itself was 0, i.e.\r\nfield=0, type=varint. The type doesn't matter: field 0 is always\r\ninvalid.\r\n\r\nThis removes the last of the C# conformance failures.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 12,
        "changed_files": 1,
        "created_at": "2017-08-10T17:48:24Z",
        "closed_at": "2017-08-10T21:23:48Z",
        "merged_at": "2017-08-10T21:23:48Z",
        "body": "- Now it includes -Wextra except for unused-parameter.\r\n- Removed gtest dependency",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 21,
        "changed_files": 1,
        "created_at": "2017-08-10T16:51:57Z",
        "closed_at": "2017-08-10T20:03:45Z",
        "merged_at": "2017-08-10T20:03:44Z",
        "body": "The typedefs for Atomic32 and Atomic64 were sometimes causing\r\nAtomic32 to be an int32 rather than an intptr_t on 32-bit platforms.\r\nOn some of these platforms (ARM/CortexM building with GCC 6 in one\r\ncase) int32 is a long int, while intptr_t is an int, which causes a\r\ncompiler error even though long int and int are both 4 bytes.\r\n\r\nHaving Atomic32 always be intptr_t on 32-bit platforms and Atomic64\r\nalways be intptr_t on 64-bit platforms should resolve any of these\r\ntypes of errors.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 64,
        "deletions": 61,
        "changed_files": 16,
        "created_at": "2017-08-09T23:39:51Z",
        "closed_at": "2017-08-10T17:24:59Z",
        "merged_at": "2017-08-10T17:24:59Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 45,
        "deletions": 18,
        "changed_files": 8,
        "created_at": "2017-08-09T00:19:10Z",
        "closed_at": "2018-06-11T21:58:41Z",
        "merged_at": null,
        "body": "Fix for #3474, thanks for the quick response @xfxyjwf \r\n\r\nI kept the existing behavior on Android, because grpc/grpc-java#1273 suggests that using the context `ClassLoader` may not be relied upon. I wasn't aware of any way to reuse the grpc code, so I just copied the relevant bits over.\r\n\r\nI'm also not entirely sure about the change to `java_file.cc`, I don't have much experience with extensions but I think we'd want the same behavior there. \r\n\r\nI followed the instructions [here](https://github.com/google/protobuf/tree/master/src) to build and then I ran the Maven build and all the tests passed. Setting up a unit test to verify that it fixes #3474 would be a bit involved but I'm happy to do it if you think it's worthwhile.",
        "comments": 14
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-08-08T11:01:06Z",
        "closed_at": "2017-08-08T22:49:21Z",
        "merged_at": "2017-08-08T22:49:21Z",
        "body": "Pull request for https://github.com/google/protobuf/issues/3394, as requested",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2017-08-07T15:36:34Z",
        "closed_at": "2017-08-08T13:19:17Z",
        "merged_at": "2017-08-08T13:19:17Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2017-08-07T11:35:32Z",
        "closed_at": "2017-08-07T17:45:20Z",
        "merged_at": "2017-08-07T17:45:20Z",
        "body": "In future versions of Bazel += on lists will mutate the lhs list instead of copying it. That will fail if the list is frozen, in that case it has to be copied explicitly.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1627,
        "deletions": 126,
        "changed_files": 46,
        "created_at": "2017-08-05T17:44:10Z",
        "closed_at": "2017-08-07T18:47:29Z",
        "merged_at": "2017-08-07T18:47:29Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1627,
        "deletions": 126,
        "changed_files": 46,
        "created_at": "2017-08-04T23:46:00Z",
        "closed_at": "2017-08-05T19:17:57Z",
        "merged_at": null,
        "body": "",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 95,
        "deletions": 33,
        "changed_files": 7,
        "created_at": "2017-08-04T17:53:00Z",
        "closed_at": "2017-08-04T23:35:50Z",
        "merged_at": "2017-08-04T23:35:50Z",
        "body": "The reason is that previously, in c extension, it was assumed that the order that fields were declared in php is the same as the order of fields in upb. This is not true. Now, for every field in upb, we will look up the actual property that is corresponding to the upb field.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 8,
        "changed_files": 4,
        "created_at": "2017-08-03T23:09:23Z",
        "closed_at": "2017-08-07T18:04:09Z",
        "merged_at": "2017-08-07T18:04:09Z",
        "body": "Json format issue was fixed in #869",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 315,
        "deletions": 144,
        "changed_files": 15,
        "created_at": "2017-08-03T18:15:08Z",
        "closed_at": "2017-08-03T20:49:25Z",
        "merged_at": "2017-08-03T20:49:25Z",
        "body": "Use composition instead of inheritance for oneof default.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2017-08-02T20:52:51Z",
        "closed_at": "2017-08-03T01:33:26Z",
        "merged_at": "2017-08-03T01:33:26Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 128,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-08-01T22:48:49Z",
        "closed_at": "2017-08-02T18:48:41Z",
        "merged_at": "2017-08-02T18:48:41Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2017-08-01T17:43:31Z",
        "closed_at": "2017-08-02T14:43:28Z",
        "merged_at": "2017-08-02T14:43:28Z",
        "body": "This is a followup to https://github.com/google/protobuf/pull/3225 after a small HHVM compatibility was introduced recently.\r\n\r\nAdding HHVM tests will happen in a separate PR, tracked here: https://github.com/google/protobuf/pull/3343",
        "comments": 12
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-08-01T16:11:17Z",
        "closed_at": "2017-08-01T20:22:48Z",
        "merged_at": "2017-08-01T20:22:48Z",
        "body": "divideInt64ToInt32 is called statically from protobuf/php/src/Google/Protobuf/Internal/CodedOutputStream.php\r\n(the only reference)\r\nThis causes fatal error in PHP 7.1 (32-bit only because 64-bit doesn't use this function)",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 10,
        "changed_files": 3,
        "created_at": "2017-07-31T18:42:19Z",
        "closed_at": "2017-08-01T16:42:46Z",
        "merged_at": "2017-08-01T16:42:46Z",
        "body": "Adds `Descriptor` typehints to ensure these are already passed by reference. \r\n\r\nThe exceptions are \r\n - `MapEntry::setKey` and `MapEntry::setValue` do not have typehints. \r\n - `DescriptorPool::addEnumDescriptor` and `DescriptorPool::addDescriptor` could have typehints, but since these methods are public I didn't want to break BC by adding them. However, it would be better to have them.\r\n\r\nThoughts?",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2017-07-31T06:46:25Z",
        "closed_at": "2017-07-31T17:59:57Z",
        "merged_at": "2017-07-31T17:59:56Z",
        "body": null,
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-07-31T01:34:33Z",
        "closed_at": "2018-06-18T22:01:50Z",
        "merged_at": null,
        "body": "Related to #1296: The issue seems to be fixed for consumers of the python protobuf package from pypi, but not for anyone getting it from here as a Bazel remote repository.",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 841,
        "deletions": 27,
        "changed_files": 8,
        "created_at": "2017-07-26T23:29:35Z",
        "closed_at": "2017-08-02T14:42:28Z",
        "merged_at": "2017-08-02T14:42:28Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 5,
        "changed_files": 3,
        "created_at": "2017-07-26T20:45:34Z",
        "closed_at": "2017-07-26T22:48:20Z",
        "merged_at": "2017-07-26T22:48:20Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3052,
        "deletions": 1295,
        "changed_files": 88,
        "created_at": "2017-07-25T20:48:09Z",
        "closed_at": "2017-08-01T21:47:10Z",
        "merged_at": "2017-08-01T21:47:10Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-07-25T11:29:40Z",
        "closed_at": "2017-11-27T17:45:37Z",
        "merged_at": "2017-11-27T17:45:37Z",
        "body": "",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2017-07-25T01:25:44Z",
        "closed_at": "2018-06-25T21:12:43Z",
        "merged_at": null,
        "body": "* Remove oracle-java7\r\n* Add hhvm",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 32,
        "deletions": 22,
        "changed_files": 1,
        "created_at": "2017-07-25T00:18:47Z",
        "closed_at": "2017-07-25T03:38:30Z",
        "merged_at": "2017-07-25T03:38:30Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 42,
        "deletions": 42,
        "changed_files": 24,
        "created_at": "2017-07-24T23:04:47Z",
        "closed_at": "2017-07-25T07:16:36Z",
        "merged_at": "2017-07-25T07:16:36Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2017-07-24T22:45:20Z",
        "closed_at": "2017-07-25T03:37:36Z",
        "merged_at": "2017-07-25T03:37:36Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-07-24T20:44:39Z",
        "closed_at": "2017-07-25T22:52:26Z",
        "merged_at": "2017-07-25T22:52:26Z",
        "body": "",
        "comments": 11
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-07-24T20:24:36Z",
        "closed_at": "2017-07-25T17:40:10Z",
        "merged_at": "2017-07-25T17:40:10Z",
        "body": "#3405 fix",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 29,
        "deletions": 1,
        "changed_files": 15,
        "created_at": "2017-07-24T17:51:25Z",
        "closed_at": "2017-07-25T13:44:15Z",
        "merged_at": "2017-07-25T13:44:15Z",
        "body": "AddDescriptorsImpl() was added without a proper declaration, causing\r\nbuild errors in more restrictive build environments that use\r\nWerror=missing-declarations.  Add this declaration to fix the build.\r\n\r\nAdd -Werror=missing-declarations to test builds to prevent this case\r\nfrom happening in the future.",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 30,
        "deletions": 0,
        "changed_files": 4,
        "created_at": "2017-07-24T16:06:56Z",
        "closed_at": "2017-07-31T17:45:37Z",
        "merged_at": "2017-07-31T17:45:37Z",
        "body": "Cherry-pick of #3403 to the 3.4 release branch :)",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 30,
        "deletions": 0,
        "changed_files": 4,
        "created_at": "2017-07-21T16:58:31Z",
        "closed_at": "2017-07-24T15:11:39Z",
        "merged_at": "2017-07-24T15:11:39Z",
        "body": "Fix #1384: Adds pkg-config (`.pc`) files for CMake based installs.\r\n\r\n### To Do\r\n\r\n- [x] pthread libs not yet properly replaced in .pc files (`@PTHREAD_CFLAGS@`, `@PTHREAD_LIBS@`) -> just use `@CMAKE_THREAD_LIBS_INIT@`?",
        "comments": 11
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-07-21T11:06:18Z",
        "closed_at": "2017-07-21T14:55:08Z",
        "merged_at": "2017-07-21T14:55:08Z",
        "body": "Github repo had moved, pointing to correct location.",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 243,
        "deletions": 64,
        "changed_files": 8,
        "created_at": "2017-07-21T00:58:56Z",
        "closed_at": "2017-07-25T07:49:17Z",
        "merged_at": "2017-07-25T07:49:17Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 26,
        "deletions": 75,
        "changed_files": 15,
        "created_at": "2017-07-19T22:36:24Z",
        "closed_at": "2017-07-20T15:31:49Z",
        "merged_at": "2017-07-20T15:31:48Z",
        "body": "An ifdef condition seems to have been inverted by mistake, causing the\r\ndynamic initialization to occur for lite if and only if the\r\n_NO_STATIC_INITIALIZER macro is set. This problem manifested itself as\r\nsegfaults due to uninitialized empty strings in issue #2839.\r\n\r\nSince no one complained about initialization not happening, it would\r\nappear that we can just disable this pre-main initialization for lite\r\nunconditionally, so that is what this change does. Instead of the\r\ndefault instance initialization happening pre-main, it now always\r\nhappens lazily when needed.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 20365,
        "deletions": 8162,
        "changed_files": 308,
        "created_at": "2017-07-18T22:51:52Z",
        "closed_at": "2017-07-24T21:59:27Z",
        "merged_at": "2017-07-24T21:59:27Z",
        "body": "Integration from Google internal.",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 19,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2017-07-18T18:36:29Z",
        "closed_at": "2017-07-24T00:18:35Z",
        "merged_at": null,
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 621,
        "deletions": 22,
        "changed_files": 18,
        "created_at": "2017-07-18T17:43:04Z",
        "closed_at": "2017-08-04T23:35:22Z",
        "merged_at": "2017-08-04T23:35:22Z",
        "body": "cc @TeBoring ",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-07-18T16:05:18Z",
        "closed_at": "2017-07-18T19:29:44Z",
        "merged_at": "2017-07-18T19:29:44Z",
        "body": "Ran into an issue today where a machine had the `protoc` compiler but not the include files. Took a while to sort out, and this added note to the README included in every zip should help.",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 26,
        "deletions": 8,
        "changed_files": 11,
        "created_at": "2017-07-18T02:34:48Z",
        "closed_at": "2018-06-11T21:14:50Z",
        "merged_at": null,
        "body": "",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-07-17T21:36:57Z",
        "closed_at": "2017-07-18T17:20:13Z",
        "merged_at": "2017-07-18T17:20:13Z",
        "body": "Set PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION for pure python comformance test",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 6288,
        "deletions": 319,
        "changed_files": 82,
        "created_at": "2017-07-16T15:50:25Z",
        "closed_at": "2017-07-18T19:46:59Z",
        "merged_at": null,
        "body": "F# codegen support for the C# runtime library. Mostly modified from the C# protoc code.\r\n\r\nExample output: https://github.com/bbus/protobuf/pull/1\r\n\r\nConsiderations:\r\n\r\n- Nullable classes are not the most idiomatic to F#. \"Zeros\" or Option wraps might be considered as a protoc flag output choice in the future or as a separate plugin.\r\n- Oneof reflection support required some small changes to the C# runtime lib - this could have also been done on a separate lib",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 259,
        "deletions": 88,
        "changed_files": 54,
        "created_at": "2017-07-16T03:43:51Z",
        "closed_at": "2017-07-19T13:58:06Z",
        "merged_at": "2017-07-19T13:58:06Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 20,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2017-07-15T18:57:12Z",
        "closed_at": "2017-08-24T17:51:41Z",
        "merged_at": null,
        "body": "Added a new parameter called omitting_insignificant_whitespace. This\r\nparameter is responsible for defining if the json output should be\r\nindented or not. If False (it's default value) the output will be\r\nformatted with 2 spaces (as it was before), if True no indentation is\r\nset and the output will be in a single line.\r\n\r\nThis is useful for streaming json output based on NDJSON\r\n(http://ndjson.org/) or Server Side Events where each message should be\r\ncontained in a single line.\r\n\r\nThis is the same functionally that is already present in Java\r\n(at google/protobuf/util/JsonFormat.java#L134).",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-07-15T05:52:47Z",
        "closed_at": "2017-07-17T17:12:00Z",
        "merged_at": "2017-07-17T17:12:00Z",
        "body": "Add some supporting documentation regarding Closure for those unfamiliar., Also substantiate details for \"files in this directory\" - including them all will result in a project that does not compile as some are used for test cases and aren't part of the core library.",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-07-14T22:52:21Z",
        "closed_at": "2018-04-09T21:08:59Z",
        "merged_at": "2018-04-09T21:08:59Z",
        "body": "\u2026harder to track down",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 25,
        "changed_files": 25,
        "created_at": "2017-07-14T22:51:13Z",
        "closed_at": "2017-07-19T21:57:34Z",
        "merged_at": "2017-07-19T21:57:34Z",
        "body": "Compiles the changes made in #3333",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 35,
        "deletions": 2,
        "changed_files": 5,
        "created_at": "2017-07-13T23:34:22Z",
        "closed_at": "2017-07-14T21:48:48Z",
        "merged_at": "2017-07-14T21:48:48Z",
        "body": "In the generated code of previous versions, each php field is given an\r\ninitial value. In c extension, it was assumed that the field order in\r\nthe generated code is consistent with upb fields order, so that the\r\ncorrect initial value can be bound to the correct upb field. However,\r\nthis may not be true. The order of fields in generated code is decided\r\nby proto compiler, while the order of upb fields is decided by the hash\r\nfunction used in c extension.\r\nThis PR fixes the issue by reset the initial value at runtime.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-07-13T20:57:06Z",
        "closed_at": "2018-06-23T04:30:36Z",
        "merged_at": null,
        "body": "PHP expects a global reference to the module for static compilation.",
        "comments": 15
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-07-13T20:50:23Z",
        "closed_at": "2017-07-17T16:13:13Z",
        "merged_at": "2017-07-17T16:13:13Z",
        "body": "Both `native_slot_merge` and `native_slot_merge_by_array` have no return type declared. GCC implicitly uses int as return type in such cases, however, these functions are actually void.",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-07-13T12:21:31Z",
        "closed_at": "2017-07-13T21:07:34Z",
        "merged_at": null,
        "body": "Version is still at 3.3.0 instead of the actual 3.3.2.",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2017-07-12T19:42:18Z",
        "closed_at": "2017-07-17T17:52:35Z",
        "merged_at": "2017-07-17T17:52:34Z",
        "body": "Correct a couple places where macros were being checked when they\r\nmight not exist in some cases.\r\n\r\nFixes #3356.",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 27,
        "deletions": 27,
        "changed_files": 3,
        "created_at": "2017-07-11T23:46:07Z",
        "closed_at": "2017-07-13T18:20:11Z",
        "merged_at": "2017-07-13T18:20:11Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 157,
        "deletions": 5,
        "changed_files": 6,
        "created_at": "2017-07-11T21:55:37Z",
        "closed_at": "2017-07-13T18:21:04Z",
        "merged_at": "2017-07-13T18:21:04Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 393,
        "deletions": 100,
        "changed_files": 28,
        "created_at": "2017-07-11T18:38:58Z",
        "closed_at": "2018-06-27T03:28:26Z",
        "merged_at": null,
        "body": "RFC for adding array construction for PHP messages, i.e.\r\n\r\n```php\r\n$m = new TestMessage([\r\n    'int' => -42,\r\n    'message' => ['a' => 33],\r\n    'repeated_message' => [\r\n        new TestMessage_Sub(['a' => 34]),\r\n        ['a' => 35],\r\n    ],\r\n    'map_message' => [\r\n        1 => new TestMessage_Sub(['a' => 36])\r\n    ],\r\n]);\r\n```",
        "comments": 28
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-07-11T18:04:45Z",
        "closed_at": "2017-07-17T20:38:32Z",
        "merged_at": "2017-07-17T20:38:31Z",
        "body": "This is a similar fix as #1913",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-07-11T13:51:41Z",
        "closed_at": "2017-07-13T13:03:57Z",
        "merged_at": "2017-07-13T13:03:57Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 63,
        "deletions": 64,
        "changed_files": 24,
        "created_at": "2017-07-11T04:45:57Z",
        "closed_at": "2017-07-17T16:14:47Z",
        "merged_at": "2017-07-17T16:14:47Z",
        "body": "See #3339 and #3300 ",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 44,
        "deletions": 30,
        "changed_files": 5,
        "created_at": "2017-07-11T01:11:07Z",
        "closed_at": "2018-06-23T04:30:54Z",
        "merged_at": null,
        "body": "This is an attempt to add HHVM testing. We are currently blocked on waiting on Debian 9 packaging to be released by HHVM team sometime in the next few months.",
        "comments": 35
    },
    {
        "merged": false,
        "additions": 249,
        "deletions": 134,
        "changed_files": 28,
        "created_at": "2017-07-10T19:04:41Z",
        "closed_at": "2018-04-09T20:59:21Z",
        "merged_at": null,
        "body": "/cc @michaelbausor ",
        "comments": 12
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-07-10T18:35:15Z",
        "closed_at": "2017-07-10T22:31:50Z",
        "merged_at": null,
        "body": "See #3300 ",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-07-08T10:48:28Z",
        "closed_at": "2017-07-11T17:03:48Z",
        "merged_at": null,
        "body": "autogen.sh needs update in the older version. Later version autogen.sh have the updated google test URLs. protobuf v2,5 isn't available easily on the latest linux builds, ",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 159,
        "deletions": 155,
        "changed_files": 20,
        "created_at": "2017-07-07T22:43:54Z",
        "closed_at": "2018-04-16T21:17:06Z",
        "merged_at": null,
        "body": "`GPBType` is already imported in the message class, but the absolute classname is being used everywhere. Because we've imported it, we can make the generated code *much* more readable by using the shortened name.",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-07-07T22:37:51Z",
        "closed_at": "2017-07-13T18:29:28Z",
        "merged_at": "2017-07-13T18:29:28Z",
        "body": "",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 82,
        "deletions": 84,
        "changed_files": 39,
        "created_at": "2017-07-07T22:27:42Z",
        "closed_at": "2017-07-10T03:31:51Z",
        "merged_at": "2017-07-10T03:31:51Z",
        "body": "",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 21,
        "deletions": 13,
        "changed_files": 9,
        "created_at": "2017-07-07T21:18:48Z",
        "closed_at": "2018-06-27T03:29:25Z",
        "merged_at": null,
        "body": "This adds typehints for all Message setters. A few other interesting things have happened as a result:\r\n\r\n  1. Setters for Message types no longer pass-by-reference, since this is implicit for PHP objects\r\n  1. Setters for Message types now accept an optional `null`, since the base `Message` class requires passing `null` to the public setters in order for the method `clear()` to work.",
        "comments": 23
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2017-07-07T13:57:48Z",
        "closed_at": "2017-07-13T17:14:49Z",
        "merged_at": "2017-07-13T17:14:49Z",
        "body": "Fixes #3322.",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-07-05T20:17:18Z",
        "closed_at": "2017-08-18T21:12:06Z",
        "merged_at": "2017-08-18T21:12:06Z",
        "body": "The update 45 download process no longer works, as it requires a login\r\nto access the old build.\r\n\r\nCC @zhangkun83 ",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-07-05T03:38:05Z",
        "closed_at": "2017-07-05T18:31:33Z",
        "merged_at": "2017-07-05T18:31:33Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 64,
        "deletions": 7,
        "changed_files": 2,
        "created_at": "2017-07-03T06:44:25Z",
        "closed_at": "2017-07-03T11:16:41Z",
        "merged_at": "2017-07-03T11:16:41Z",
        "body": "- Add a TryUnpack method which doesn't throw if the type is wrong\r\n- Make GetTypeName public for easier determination of the message type\r\n\r\nFixes #3294.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 416,
        "deletions": 416,
        "changed_files": 2,
        "created_at": "2017-06-30T22:55:59Z",
        "closed_at": "2017-07-09T14:49:25Z",
        "merged_at": "2017-07-09T14:49:25Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 53,
        "deletions": 0,
        "changed_files": 5,
        "created_at": "2017-06-30T06:43:53Z",
        "closed_at": "2018-06-18T22:21:01Z",
        "merged_at": null,
        "body": "With those insertion points, we're able to implement a plugin that does what is\r\ndescribed on #2684. ie: with those patches, we're able to make a distinction\r\nbetween a field which has a default value and a field which isn't set.\r\n\r\nSaid differently, this is how we solve #1606 for Java",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 522,
        "deletions": 1,
        "changed_files": 23,
        "created_at": "2017-06-30T06:43:49Z",
        "closed_at": "2018-06-23T04:33:38Z",
        "merged_at": null,
        "body": "With those insertion points, we're able to implement a plugin that does what is\r\ndescribed on #2684. ie: with those patches, we're able to make a distinction\r\nbetween a field which has a default value and a field which isn't set.\r\n\r\nSaid differently, this is how we solve #1606 for C#",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 54,
        "deletions": 8,
        "changed_files": 3,
        "created_at": "2017-06-29T23:59:23Z",
        "closed_at": "2018-06-23T04:34:32Z",
        "merged_at": null,
        "body": "Instead of throwing a parse exception when a unknown enum value is seen, use the protobuf UNRECOGNIZED enum value.\r\n\r\nThis behavior can be enabled via `Parser.usingUnrecognizedEnumValue()`, similar to what `Parser.ignoringUnknownFields()` did for unknown fields.\r\nThis allows different parties to add new enum values without all parties needing to know about the value.\r\n\r\n[See Issue 3012](https://github.com/google/protobuf/issues/3012)\r\n\r\nSigned-off-by: Veeren Mandalia <veeren@postmates.com>",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 99,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2017-06-29T23:57:07Z",
        "closed_at": "2017-06-30T20:51:58Z",
        "merged_at": "2017-06-30T20:51:58Z",
        "body": "Fixes https://github.com/google/protobuf/issues/2762",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1523,
        "deletions": 1073,
        "changed_files": 27,
        "created_at": "2017-06-28T19:47:41Z",
        "closed_at": "2017-07-24T21:50:53Z",
        "merged_at": "2017-07-24T21:50:53Z",
        "body": "Add changes to conformance test that support proto2 test message. Only add one proto2 message test against double. Not sure about whether the message set message in TestAllTypesProto2 is correct. ",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 581,
        "deletions": 13,
        "changed_files": 28,
        "created_at": "2017-06-28T16:24:13Z",
        "closed_at": "2017-06-30T06:44:57Z",
        "merged_at": null,
        "body": "With those insertion points, we're able to implement a plugin that does what is\r\ndescribed on #2684. ie: with those patches, we're able to make a distinction\r\nbetween a field which has a default value and a field which isn't set.\r\n\r\nSaid differently, this is how we solve #1606 for Java and C#",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 623,
        "deletions": 191,
        "changed_files": 14,
        "created_at": "2017-06-25T04:39:08Z",
        "closed_at": "2017-07-18T14:45:21Z",
        "merged_at": "2017-07-18T14:45:20Z",
        "body": "This PR adds support for generating generic services when using PHP output.\r\n\r\nThe first commit adds a file level `php_generic_services` option (default false).  I ran `generate_descriptor_proto.sh` so the commit has a lot of changes.\r\n\r\nThe second commit updates `php_generator.cc` to generate a service interface if `php_generic_services` is true.  The service generated for the grpc helloworld.proto example [looks like this](https://gist.github.com/yuloh/a28d9ff223887aef11aba40c098b71d9).\r\n\r\nI tried my best to follow the code style but I'm not a C++ developer so let me know if I need to change anything.\r\n\r\nSince we can't use grpc to build PHP servers yet we are looking to use the service interface with our own simple RPC system.  Once we can switch to grpc we are planning on writing an adapter (so grpc doesn't need to implement the interface directly).\r\n\r\nThere is a comment in `descriptor.proto` that says 'Generic services are now considered deprecated in favor of using plugins', but the proto3 docs say 'the protocol buffer compiler will generate service interface code and stubs in your chosen language.'  Should we just be using a plugin instead?\r\n\r\nCloses #2334.",
        "comments": 22
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-06-23T13:26:43Z",
        "closed_at": "2017-06-23T17:39:43Z",
        "merged_at": "2017-06-23T17:39:43Z",
        "body": "Howdy!\r\n\r\nI just updated a link to use https instead of http.\r\n\r\nThanks! ^ _ ^",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 847,
        "deletions": 672,
        "changed_files": 34,
        "created_at": "2017-06-22T22:42:23Z",
        "closed_at": "2017-06-24T19:20:57Z",
        "merged_at": "2017-06-24T19:20:57Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 5,
        "changed_files": 3,
        "created_at": "2017-06-22T14:20:35Z",
        "closed_at": "2017-07-19T23:25:06Z",
        "merged_at": "2017-07-19T23:25:06Z",
        "body": "#3223 \r\n\r\nhttps://bugs.python.org/issue29943",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 46,
        "deletions": 30,
        "changed_files": 28,
        "created_at": "2017-06-21T17:21:59Z",
        "closed_at": "2017-06-21T22:29:32Z",
        "merged_at": "2017-06-21T22:29:32Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 28,
        "deletions": 7,
        "changed_files": 10,
        "created_at": "2017-06-20T22:12:22Z",
        "closed_at": "2017-06-21T05:53:22Z",
        "merged_at": "2017-06-21T05:53:22Z",
        "body": "",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 1297,
        "deletions": 993,
        "changed_files": 28,
        "created_at": "2017-06-20T20:21:35Z",
        "closed_at": "2017-06-20T22:12:50Z",
        "merged_at": null,
        "body": "",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2017-06-20T15:44:28Z",
        "closed_at": "2018-04-02T21:12:29Z",
        "merged_at": null,
        "body": "This makes protobuf work with overloaded str* functions (when mbstring.func_overload PHP param is greater than 2)",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 2152,
        "deletions": 1281,
        "changed_files": 62,
        "created_at": "2017-06-20T00:53:19Z",
        "closed_at": "2017-06-20T20:24:49Z",
        "merged_at": null,
        "body": "",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-06-19T06:18:22Z",
        "closed_at": "2017-06-19T18:18:46Z",
        "merged_at": "2017-06-19T18:18:46Z",
        "body": "install `generated_message_table_driven.h` and `metadata_lite.h`, they are included when compiling the files generated using protoc.exe 3.3.0",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-06-16T20:47:28Z",
        "closed_at": "2017-06-17T18:01:17Z",
        "merged_at": "2017-06-17T18:01:17Z",
        "body": "That PHP included implementation of json is not being used - this extension is using\r\na json encoder/decoder provided by 'upb'.\r\n\r\nThe Google App Engine Flexible Environment PHP runtime for 5.6.x does not enable the built-in json support because of licensing issues, instead providing the same functionality via the [jsonc extension](https://github.com/remicollet/pecl-json-c). In order to compile protobuf for our PHP 5.6.x, we need to remove this include (which isn't being used anyways).\r\n\r\nAlso see: https://github.com/GoogleCloudPlatform/php-docker/issues/311",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2017-06-16T18:51:48Z",
        "closed_at": "2017-06-19T12:23:37Z",
        "merged_at": "2017-06-19T12:23:37Z",
        "body": "About 1.5% of all IEEE754 single-precision numbers require nine\r\ndecimal digits to represent accurately.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-06-16T14:06:32Z",
        "closed_at": "2017-06-16T18:39:12Z",
        "merged_at": "2017-06-16T18:39:12Z",
        "body": "Building the protobuf compiler with Bazel fails to resolve the unqualifed \"string\"s in java_options.h:\r\n\r\n```\r\nERROR: .../external/com_google_protobuf/BUILD:248:1: C++ compilation of rule '@com_google_protobuf//:protoc_lib' failed: Process exited with status 1 [sandboxed].\r\nIn file included from external/com_google_protobuf/src/google/protobuf/compiler/java/java_context.h:41:0,\r\n                 from external/com_google_protobuf/src/google/protobuf/compiler/java/java_enum_field_lite.cc:38:\r\nexternal/com_google_protobuf/src/google/protobuf/compiler/java/java_options.h:59:3: error: 'string' does not name a type\r\n   string annotation_list_file;\r\n   ^\r\nexternal/com_google_protobuf/src/google/protobuf/compiler/java/java_options.h:62:3: error: 'string' does not name a type\r\n   string output_list_file;\r\n   ^\r\nUse --strategy=CppCompile=standalone to disable sandboxing for the failing actions.\r\nINFO: Elapsed time: 41.487s, Critical Path: 6.20s\r\n//interpreter:eval_test                                               NO STATUS\r\n\r\nExecuted 0 out of 1 test: 1 was skipped.\r\n```",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-06-16T10:51:58Z",
        "closed_at": "2017-06-16T18:38:15Z",
        "merged_at": "2017-06-16T18:38:15Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-06-16T10:51:44Z",
        "closed_at": "2017-06-16T18:37:48Z",
        "merged_at": "2017-06-16T18:37:48Z",
        "body": "https://github.com/bazelbuild/bazel/issues/3198",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 6,
        "changed_files": 3,
        "created_at": "2017-06-15T18:17:11Z",
        "closed_at": "2017-06-15T20:04:09Z",
        "merged_at": "2017-06-15T20:04:09Z",
        "body": "Update commit id to upload latest composer.\r\nCompile php with bc-math for future json support.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-06-15T15:41:25Z",
        "closed_at": "2017-06-15T17:49:24Z",
        "merged_at": "2017-06-15T17:49:24Z",
        "body": "cc @TeBoring @bshaffer ",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 3118,
        "deletions": 2274,
        "changed_files": 36,
        "created_at": "2017-06-14T18:16:08Z",
        "closed_at": "2017-06-30T19:14:10Z",
        "merged_at": "2017-06-30T19:14:10Z",
        "body": "",
        "comments": 11
    },
    {
        "merged": true,
        "additions": 235,
        "deletions": 160,
        "changed_files": 4,
        "created_at": "2017-06-14T01:30:12Z",
        "closed_at": "2017-06-20T01:15:50Z",
        "merged_at": "2017-06-20T01:15:50Z",
        "body": "This addresses issue https://github.com/google/protobuf/issues/3224",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 27,
        "deletions": 27,
        "changed_files": 12,
        "created_at": "2017-06-13T07:04:22Z",
        "closed_at": "2017-08-02T06:07:29Z",
        "merged_at": null,
        "body": "This pull requests addresses issue #3218",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-06-12T15:10:53Z",
        "closed_at": "2017-06-12T17:26:57Z",
        "merged_at": "2017-06-12T17:26:57Z",
        "body": "fixed_address_empty_string symbol is used in an inline function.\r\nWe have to export it to avoid undefined reference link errors.\r\n\r\nIt is the change proposed by @jbrianceau that was already discussed and merged by @xfxyjwf  in https://github.com/google/protobuf/pull/2407 , but that apparently wiped out by https://github.com/google/protobuf/commit/d36c0c538a545fac5d9db6ba65c525246d4efa95 .\r\n\r\nThe same change was applied to the 3.1 branch in https://github.com/google/protobuf/pull/2421 .",
        "comments": 11
    },
    {
        "merged": true,
        "additions": 27,
        "deletions": 12,
        "changed_files": 5,
        "created_at": "2017-06-12T09:14:44Z",
        "closed_at": "2017-07-04T05:42:46Z",
        "merged_at": "2017-07-04T05:42:46Z",
        "body": "Fixes #3209.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 493,
        "deletions": 580,
        "changed_files": 5,
        "created_at": "2017-06-08T23:53:51Z",
        "closed_at": "2017-06-19T22:13:25Z",
        "merged_at": "2017-06-19T22:13:25Z",
        "body": "Fixes some of the issues addressed in https://github.com/google/protobuf/issues/3013",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-06-08T21:36:00Z",
        "closed_at": "2018-06-11T21:04:47Z",
        "merged_at": null,
        "body": "If the build directory is not the same as the source directory then\r\nthe build fails because the google/protobuf/compiler/js directory\r\ndoesn't exist.  Make sure that it does.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 12465,
        "deletions": 6,
        "changed_files": 63,
        "created_at": "2017-06-07T20:59:52Z",
        "closed_at": "2017-09-12T18:12:44Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 337,
        "deletions": 0,
        "changed_files": 39,
        "created_at": "2017-06-06T22:16:00Z",
        "closed_at": "2017-06-06T23:44:31Z",
        "merged_at": "2017-06-06T23:44:31Z",
        "body": "These files must be committed on GitHub to run tests on Kokoro. They cover all tests currently running on Travis.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 44,
        "changed_files": 3,
        "created_at": "2017-06-06T13:12:57Z",
        "closed_at": "2017-06-06T19:31:21Z",
        "merged_at": "2017-06-06T19:31:21Z",
        "body": "As announced: https://groups.google.com/forum/#!topic/protobuf/VX5qEmTW3y0\r\n\r\nThe ObjC side of https://github.com/google/protobuf/issues/272",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 25,
        "changed_files": 1,
        "created_at": "2017-06-05T20:09:10Z",
        "closed_at": "2018-06-25T22:04:47Z",
        "merged_at": null,
        "body": "This has been unused since commit d36c0c5.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-06-05T19:59:18Z",
        "closed_at": "2018-02-20T21:11:46Z",
        "merged_at": "2018-02-20T21:11:46Z",
        "body": "The js_embed tool outputs to stdout, so the output_file variable is\r\nunnecessary and unused.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-06-03T00:32:47Z",
        "closed_at": "2017-07-20T20:01:05Z",
        "merged_at": "2017-07-20T20:01:05Z",
        "body": "",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 455,
        "deletions": 4930,
        "changed_files": 11,
        "created_at": "2017-06-02T23:49:36Z",
        "closed_at": "2017-11-14T23:29:31Z",
        "merged_at": null,
        "body": "By my quick and dirty back of the envelope calculations, this reduces the size of the libraries by about 80k per architecture.\r\n\r\nIt removes +dictionary... methods which are all just syntactic sugar for alloc] init...",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2017-06-02T16:19:18Z",
        "closed_at": "2017-06-07T22:15:34Z",
        "merged_at": "2017-06-07T22:15:34Z",
        "body": "This fixes a compiler bug that caused a Java syntax error when one\r\n.proto file would import another one with an empty package and\r\njava_package. This fixes issue #3114.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-06-02T13:40:46Z",
        "closed_at": "2018-06-11T22:37:30Z",
        "merged_at": null,
        "body": "This fixes compiler warnings about narrowing of int to uint32.\r\n\r\nOriginal fix e19f3b5e got lost, I suspect during 5a76e633.",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 11946,
        "deletions": 181,
        "changed_files": 66,
        "created_at": "2017-06-02T11:43:28Z",
        "closed_at": "2018-06-25T22:43:00Z",
        "merged_at": null,
        "body": "This is PR for #3166 ",
        "comments": 45
    },
    {
        "merged": true,
        "additions": 1504,
        "deletions": 1058,
        "changed_files": 1,
        "created_at": "2017-06-01T17:56:08Z",
        "closed_at": "2017-06-01T19:34:01Z",
        "merged_at": "2017-06-01T19:34:01Z",
        "body": "This reduces the size of the protobuf library by about ~80k per architecture (compared by building the release .a files without debug symbols and comparing the sizes).",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1070,
        "deletions": 442,
        "changed_files": 42,
        "created_at": "2017-05-31T21:56:17Z",
        "closed_at": "2017-06-05T07:10:18Z",
        "merged_at": "2017-06-05T07:10:18Z",
        "body": "Use this option to change the namespace of php generated classes.\r\nDefault is empty. When this option is empty, the package name will be\r\nused for determining the namespace.",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 32,
        "deletions": 12,
        "changed_files": 1,
        "created_at": "2017-05-31T12:04:50Z",
        "closed_at": "2017-06-06T17:31:21Z",
        "merged_at": "2017-06-06T17:31:21Z",
        "body": "Don't put gcc warnings options in copts, so that protobuf is able to\r\nbuild by MSVC toolchain without python wrappers.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 133,
        "deletions": 98,
        "changed_files": 4,
        "created_at": "2017-05-31T00:16:22Z",
        "closed_at": "2017-06-06T16:13:32Z",
        "merged_at": "2017-06-06T16:13:32Z",
        "body": "protobuf_generate_cpp and _python saved some typing, but were rather out of date. This adds an updated version that is more extensible, uses proper argument parsing and allows TARGET arguments. Should allow a better experience for anyone using CMake 3.1 and up.\r\n\r\n- [ ] Depends on https://github.com/google/protobuf/pull/3157",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-05-30T22:09:07Z",
        "closed_at": "2017-09-13T22:15:04Z",
        "merged_at": "2017-09-13T22:15:04Z",
        "body": "As the title says.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 14,
        "changed_files": 1,
        "created_at": "2017-05-30T22:07:47Z",
        "closed_at": "2017-06-05T21:19:24Z",
        "merged_at": "2017-06-05T21:19:24Z",
        "body": "A number of fixes to the config-version.cmake file",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 17,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2017-05-29T23:21:15Z",
        "closed_at": "2017-05-30T05:04:21Z",
        "merged_at": "2017-05-30T05:04:21Z",
        "body": "#3139 ",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 7,
        "changed_files": 6,
        "created_at": "2017-05-29T19:15:18Z",
        "closed_at": "2017-05-29T22:30:48Z",
        "merged_at": "2017-05-29T22:30:47Z",
        "body": "#3127 ",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 192,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2017-05-29T15:36:41Z",
        "closed_at": "2017-05-30T16:27:22Z",
        "merged_at": "2017-05-30T16:27:22Z",
        "body": "tested only on windows with visual studio 2015 as generator\r\n\r\nThis change makes allows the IDE functionality like search project etc to also search in headers.\r\n\r\n![image](https://cloud.githubusercontent.com/assets/7057293/26555420/41a9c852-4495-11e7-8b0f-a9b8c65e32a9.png)\r\n\r\n\r\nPR created on advice of @acozzette  ( https://groups.google.com/forum/#!topic/protobuf/BJ-D0TF1QxI )",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 18768,
        "deletions": 8575,
        "changed_files": 324,
        "created_at": "2017-05-27T22:52:22Z",
        "closed_at": "2018-05-23T18:16:30Z",
        "merged_at": null,
        "body": "",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 33,
        "deletions": 31,
        "changed_files": 1,
        "created_at": "2017-05-25T21:04:55Z",
        "closed_at": "2017-05-31T22:39:44Z",
        "merged_at": null,
        "body": "This is a WIP PR to support the (currently not existing) php_namespace proto option.\r\n\r\ncc @TeBoring @bshaffer ",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 23,
        "deletions": 44,
        "changed_files": 2,
        "created_at": "2017-05-24T21:36:36Z",
        "closed_at": "2017-05-25T19:20:32Z",
        "merged_at": "2017-05-25T19:20:32Z",
        "body": "",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2017-05-24T11:03:20Z",
        "closed_at": "2017-07-17T17:30:31Z",
        "merged_at": "2017-07-17T17:30:31Z",
        "body": "#3112: It workes in our use case  with this changes.",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 13,
        "changed_files": 1,
        "created_at": "2017-05-24T04:20:38Z",
        "closed_at": "2017-05-30T18:18:24Z",
        "merged_at": "2017-05-30T18:18:24Z",
        "body": "When compiled with c++11 and with exception, each protobuf_map is doing a blocking read.  It greatly impacts the performance.",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 1220,
        "deletions": 925,
        "changed_files": 36,
        "created_at": "2017-05-24T02:36:47Z",
        "closed_at": "2017-06-27T23:28:29Z",
        "merged_at": "2017-06-27T23:28:28Z",
        "body": "see #3118",
        "comments": 14
    },
    {
        "merged": true,
        "additions": 15,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2017-05-24T00:06:51Z",
        "closed_at": "2017-05-29T17:39:14Z",
        "merged_at": "2017-05-29T17:39:14Z",
        "body": "see #2944 ",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 45,
        "deletions": 38,
        "changed_files": 1,
        "created_at": "2017-05-23T14:41:58Z",
        "closed_at": "2017-05-23T21:04:08Z",
        "merged_at": "2017-05-23T21:04:08Z",
        "body": "Fix indentation to enable code formatting for sample command lines to set them\r\nvisually apart from the surrounding text, and make it easy to copy-paste.\r\n\r\nAdd code formatting for env vars, paths, binary and library names for\r\nreadability.\r\n\r\nHide URLs behind text for readability and conciseness.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1048,
        "deletions": 841,
        "changed_files": 16,
        "created_at": "2017-05-22T21:39:48Z",
        "closed_at": "2017-06-14T22:57:11Z",
        "merged_at": "2017-06-14T22:57:11Z",
        "body": "Addresses #3107:\r\n\r\n - Splits PHP classes in descriptor.php into separate files\r\n - Splits MapFieldIter and RepeatedFieldIter into separate files\r\n - Moves descriptor.php to Internal/functions.php\r\n - Moves all namespaced functions into Iternal/functions.php",
        "comments": 12
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-05-22T14:25:02Z",
        "closed_at": "2017-05-23T20:39:57Z",
        "merged_at": "2017-05-23T20:39:57Z",
        "body": "A minor usability improvement mostly for new(-er) users of protoc\r\n\r\nCurrently calling protoc without arguments gives a useless message 'Missing input file.'\r\nInstead we can pre-empt further parsing in case of zero arguments given and just show help.",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-05-18T18:27:24Z",
        "closed_at": "2017-05-26T16:50:19Z",
        "merged_at": "2017-05-26T16:50:19Z",
        "body": "Requiring the legacy \u2018cl\u2019 library unconditionally pollutes the namespace.\r\nInstead, require it only when compiling and in known-broken versions.\r\n\r\nThis is the same patch that opoplawski suggested.",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2017-05-17T22:24:04Z",
        "closed_at": "2017-05-17T23:49:27Z",
        "merged_at": null,
        "body": "fixes #3107 ",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 187,
        "deletions": 23,
        "changed_files": 7,
        "created_at": "2017-05-17T17:54:55Z",
        "closed_at": "2017-05-17T19:05:21Z",
        "merged_at": "2017-05-17T19:05:21Z",
        "body": "- Fix up -copyWithZone: to not leave the two registries sharing\r\n  some of the storage by using -addExtensions:.\r\n- Improve -addExtensions: to clone the sub dict when there is\r\n  nothing to merge into.\r\n- A ExtensionRegistry unittests.\r\n- Update project schemes to not have extra things in perf scheme.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 106,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-05-17T16:32:35Z",
        "closed_at": "2017-05-23T19:14:09Z",
        "merged_at": "2017-05-23T19:14:09Z",
        "body": "Checks if parallel parsing is faster than serial parsing. This should be the case unless locks are leaking into different instances.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 82,
        "deletions": 36,
        "changed_files": 1,
        "created_at": "2017-05-16T11:11:08Z",
        "closed_at": "2018-06-11T21:01:40Z",
        "merged_at": null,
        "body": "RepeatedField double memory usage while Reserve\r\nbut mobile platform is memory sensitive, and usually won't load\r\nvery large protobuf model\r\nso limit RepeatedField memory growth up to 1mb is acceptable",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 84,
        "deletions": 29,
        "changed_files": 1,
        "created_at": "2017-05-15T11:31:32Z",
        "closed_at": "2017-05-16T05:17:25Z",
        "merged_at": null,
        "body": "",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-05-12T16:30:36Z",
        "closed_at": "2017-05-12T19:50:01Z",
        "merged_at": null,
        "body": "c_helpers.cc: In function 'void google::protobuf::compiler::c::SplitStringUsing(const string&, const char*, std::vector<std::__cxx11::basic_string<char> >*)':\r\nc_helpers.cc:507:3: error: 'back_insert_iterator' was not declared in this scope\r\n   back_insert_iterator< vector<string> > it(*result);\r\n   ^\r\nc_helpers.cc:507:3: note: suggested alternative:\r\nIn file included from /usr/include/c++/5/bits/stl_algobase.h:67:0,\r\n                 from /usr/include/c++/5/vector:60,\r\n                 from c_helpers.cc:63:\r\n/usr/include/c++/5/bits/stl_iterator.h:415:11: note:   'std::back_insert_iterator'\r\n     class back_insert_iterator\r\n           ^\r\nc_helpers.cc:507:40: error: expected primary-expression before '>' token\r\n   back_insert_iterator< vector<string> > it(*result);\r\n                                        ^\r\nc_helpers.cc:507:52: error: 'it' was not declared in this scope\r\n   back_insert_iterator< vector<string> > it(*result);",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 59,
        "deletions": 0,
        "changed_files": 14,
        "created_at": "2017-05-11T22:27:25Z",
        "closed_at": "2017-05-19T18:22:46Z",
        "merged_at": "2017-05-19T18:22:46Z",
        "body": "Fixes #3059 by re-applying 08b1c718 from #2087.",
        "comments": 11
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-05-11T21:05:21Z",
        "closed_at": "2017-06-26T17:48:23Z",
        "merged_at": "2017-06-26T17:48:23Z",
        "body": "This is a workaround (https://github.com/moby/moby/issues/10180#issuecomment-190429512) the docker issue (https://github.com/moby/moby/issues/10180) which breaks protoc-artifacts build process with following error\r\n\r\n```Rpmdb checksum is invalid: dCDPT(pkg checksums): devtoolset-1.1-elfutils.x86_64 0:0.154-6.el6 - u\r\n\r\nThe command '/bin/sh -c yum clean all && yum install -y devtoolset-1.1                    devtoolset-1.1-libstdc++-devel                    devtoolset-1.1-libstdc++-devel.i686' returned a non-zero code: 1```\r\n\r\nhttps://github.com/moby/moby/issues/10180#issuecomment-190429512",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-05-11T15:20:18Z",
        "closed_at": "2018-09-01T00:45:03Z",
        "merged_at": null,
        "body": "And the conversion actually causes an exception when calling `serializeToString()`\r\n\r\n```\r\nCaught an error, errno: 1024, msg: Output stream doesn't have enough buffer., /var/www/vendor/google/protobuf/php/src/Google/Protobuf/Internal/OutputStream.php:92\r\n```\r\n\r\nRemoving this line fixes the issue.",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-05-10T23:21:54Z",
        "closed_at": "2017-05-11T20:56:05Z",
        "merged_at": "2017-05-11T20:56:05Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 98,
        "deletions": 25,
        "changed_files": 4,
        "created_at": "2017-05-09T23:24:38Z",
        "closed_at": "2017-05-10T23:00:00Z",
        "merged_at": "2017-05-10T23:00:00Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 46,
        "deletions": 30,
        "changed_files": 28,
        "created_at": "2017-05-08T23:03:08Z",
        "closed_at": "2017-05-11T21:32:19Z",
        "merged_at": "2017-05-11T21:32:19Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-05-08T18:35:49Z",
        "closed_at": "2017-05-08T20:38:49Z",
        "merged_at": "2017-05-08T20:38:48Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-05-05T21:18:50Z",
        "closed_at": "2017-05-08T18:56:19Z",
        "merged_at": "2017-05-08T18:56:19Z",
        "body": "Fixes #3061.",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-05-05T18:01:44Z",
        "closed_at": "2017-05-08T18:19:03Z",
        "merged_at": "2017-05-08T18:19:03Z",
        "body": "See https://gcc.gnu.org/bugzilla/show_bug.cgi?id=189\r\n\r\nSigned-off-by: Mario J. Rugiero <mrugiero@gmail.com>",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 18,
        "deletions": 5,
        "changed_files": 7,
        "created_at": "2017-05-04T22:29:38Z",
        "closed_at": "2017-05-05T17:45:23Z",
        "merged_at": "2017-05-05T17:45:23Z",
        "body": "Fixes https://github.com/google/protobuf/issues/3047, https://github.com/google/protobuf/issues/3048, https://github.com/google/protobuf/issues/3049\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 14,
        "changed_files": 3,
        "created_at": "2017-05-04T18:38:32Z",
        "closed_at": "2017-05-05T15:58:12Z",
        "merged_at": "2017-05-05T15:58:12Z",
        "body": "This will allow us to include a fix for issue #1562 in the 3.3 release.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-05-04T09:46:06Z",
        "closed_at": "2017-05-04T18:08:54Z",
        "merged_at": "2017-05-04T18:08:53Z",
        "body": "Fixes compilation issue on alpine 3.5 (https://github.com/google/protobuf/issues/3046)\r\n\r\nFailing docker file in issue https://github.com/google/protobuf/issues/3046:\r\n```\r\nFROM alpine:3.5\r\n\r\nRUN apk update && apk add autoconf automake libtool curl make g++ unzip git\r\n\r\nWORKDIR /usr/local/src\r\n\r\nARG PROTOBUF_VERSION=3.3.x\r\n\r\nRUN git clone -b $PROTOBUF_VERSION https://github.com/google/protobuf.git && \\\r\n    cd protobuf  && \\\r\n    ./autogen.sh  && \\\r\n    ./configure  && \\\r\n    make  && \\\r\n    make check  && \\\r\n    make install  && \\\r\n    ldconfig /\r\n```\r\n\r\nWorking docker file pulling from this PR branch:\r\n```\r\nFROM alpine:3.5\r\n\r\nRUN apk update && apk add autoconf automake libtool curl make g++ unzip git\r\n\r\nWORKDIR /usr/local/src\r\n\r\nARG PROTOBUF_VERSION=3.3.x\r\n\r\nRUN git clone -b $PROTOBUF_VERSION https://github.com/chrisn-arm/protobuf.git && \\\r\n    cd protobuf  && \\\r\n    ./autogen.sh  && \\\r\n    ./configure  && \\\r\n    make  && \\\r\n    make check  && \\\r\n    make install  && \\\r\n    ldconfig /\r\n```\r\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 270,
        "deletions": 388,
        "changed_files": 33,
        "created_at": "2017-05-04T08:09:35Z",
        "closed_at": "2017-05-24T08:07:34Z",
        "merged_at": "2017-05-24T08:07:34Z",
        "body": "Ready for review now.",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2017-05-03T16:58:05Z",
        "closed_at": "2017-05-08T06:35:59Z",
        "merged_at": null,
        "body": "",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2017-05-03T00:27:31Z",
        "closed_at": "2017-05-04T19:21:15Z",
        "merged_at": "2017-05-04T19:21:15Z",
        "body": "The Closure compiler complains about Buffer since that class exists only\r\nin Node. That logic does not seem to be needed (unit tests and conformance\r\ntests pass without it), so let's just remove it to solve the problem.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 129,
        "deletions": 4,
        "changed_files": 6,
        "created_at": "2017-05-02T21:27:24Z",
        "closed_at": "2017-05-05T18:14:12Z",
        "merged_at": "2017-05-05T18:14:12Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 81,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-05-01T15:40:29Z",
        "closed_at": "2017-05-01T16:49:26Z",
        "merged_at": "2017-05-01T16:49:26Z",
        "body": "This target will be used by gRPC iOS bazel build system.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-04-28T09:17:20Z",
        "closed_at": "2018-06-25T22:47:20Z",
        "merged_at": null,
        "body": "Fixes #1745. (`javascript generated code doesn't work when you use dot in a file name and include it`)\r\n\r\nReplaced dot (`.`) with `$`.",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 135,
        "deletions": 132,
        "changed_files": 31,
        "created_at": "2017-04-28T02:51:51Z",
        "closed_at": "2018-06-11T21:10:25Z",
        "merged_at": null,
        "body": "There is no technical limitation but in general classes names and file names supposed to be the same in ObjC.\r\n\r\nThere is at least one case when it does not work without this fix:\r\nif there are messages with same names but in different packages, you can not put generated .h files into framework since it has plain file structure (no directories) for headers. So each file must have unique name.",
        "comments": 13
    },
    {
        "merged": true,
        "additions": 15491,
        "deletions": 6623,
        "changed_files": 313,
        "created_at": "2017-04-27T21:57:29Z",
        "closed_at": "2017-05-01T17:58:39Z",
        "merged_at": "2017-05-01T17:58:39Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-04-27T18:37:27Z",
        "closed_at": "2017-04-27T20:56:27Z",
        "merged_at": "2017-04-27T20:56:27Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2017-04-26T21:41:37Z",
        "closed_at": "2017-04-26T23:32:21Z",
        "merged_at": "2017-04-26T23:32:21Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 108,
        "deletions": 98,
        "changed_files": 15,
        "created_at": "2017-04-26T00:09:50Z",
        "closed_at": "2017-04-26T20:56:24Z",
        "merged_at": "2017-04-26T20:56:24Z",
        "body": "This prevents the contents of the std namespace from being effectively\r\npulled into the top-level namespace in all translation units that\r\ninclude common.h. I left in individual using statements for a few common\r\nthings like std::set and std::map, because it did not seem worth going\r\nthrough the churn of updating the whole codebase to fix those right now.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-04-25T10:54:32Z",
        "closed_at": "2017-04-26T18:09:43Z",
        "merged_at": "2017-04-26T18:09:43Z",
        "body": "When compiling with `-Werror, -Wunused-const-variable` the build fails due to those two constants not being used.\r\n\r\n-----------\r\nMy C++ skills aren't where they should be, but my understanding is that those consts are declared in an unnamed namespace and thus can't be referenced from anywhere outside and thus it's safe to remove those.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 15,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2017-04-25T00:10:09Z",
        "closed_at": "2017-04-25T21:19:43Z",
        "merged_at": null,
        "body": "Cherry-pick CL 153008771 (including the reverted change to the `python_generator.cc` file).\r\n\r\nFixes https://github.com/google/protobuf/issues/2882",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-04-24T23:15:46Z",
        "closed_at": "2017-04-25T17:47:10Z",
        "merged_at": "2017-04-25T17:47:10Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2017-04-24T17:47:04Z",
        "closed_at": "2017-04-24T19:40:38Z",
        "merged_at": "2017-04-24T19:40:38Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 12,
        "changed_files": 1,
        "created_at": "2017-04-24T15:47:52Z",
        "closed_at": "2017-04-24T20:09:49Z",
        "merged_at": "2017-04-24T20:09:49Z",
        "body": "",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 9,
        "changed_files": 1,
        "created_at": "2017-04-24T15:19:15Z",
        "closed_at": "2018-06-11T20:56:58Z",
        "merged_at": null,
        "body": "is specified.\r\n\r\nBefore:\r\n\r\nconstexpr const MyMsg_Enum MyMsg::Option1;\r\nconstexpr const MyMsg_Enum MyMsg::Option2;\r\nconst MyMsg_Enum MyMsg::Enum_MIN;\r\nconst MyMsg_Enum MyMsg::Enum_MAX;\r\nconst int MyMsg::Enum_ARRAYSIZE;\r\n\r\nAfter:\r\n\r\nconstexpr const MyMsg_Enum MyMsg::Option1;\r\nconstexpr const MyMsg_Enum MyMsg::Option2;\r\nconstexpr const MyMsg_Enum MyMsg::Enum_MIN;\r\nconstexpr const MyMsg_Enum MyMsg::Enum_MAX;\r\nconstexpr const int MyMsg::Enum_ARRAYSIZE;\r\n\r\nThis complements https://github.com/google/protobuf/pull/1260/",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 13,
        "changed_files": 1,
        "created_at": "2017-04-22T12:55:37Z",
        "closed_at": "2018-06-18T21:56:41Z",
        "merged_at": null,
        "body": "> removed unnecessary spaces\r\n> more space efficient",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 9,
        "changed_files": 1,
        "created_at": "2017-04-22T12:51:14Z",
        "closed_at": "2018-06-11T20:58:52Z",
        "merged_at": null,
        "body": "removed unnecessary spaces",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 22,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2017-04-21T22:22:59Z",
        "closed_at": "2017-04-24T16:24:44Z",
        "merged_at": "2017-04-24T16:24:44Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 297,
        "deletions": 49,
        "changed_files": 6,
        "created_at": "2017-04-21T20:22:06Z",
        "closed_at": "2017-04-21T22:00:01Z",
        "merged_at": "2017-04-21T22:00:01Z",
        "body": "#2376, #2572",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 38,
        "deletions": 10,
        "changed_files": 2,
        "created_at": "2017-04-21T16:28:15Z",
        "closed_at": "2018-06-11T21:00:06Z",
        "merged_at": null,
        "body": "Added protobuf_BUILD_PROTOC and protobuf_BUILD_LIBPROTOC\r\nadvanced options.\r\nFor Android system by default we only build libprotobuf-lite\r\nand libprotobuf.\r\n\r\nRelated links:\r\n* [CMake: Cross Compiling for Android](https://cmake.org/cmake/help/latest/manual/cmake-toolchains.7.html#cross-compiling-for-android)",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-04-20T23:31:22Z",
        "closed_at": "2017-04-21T00:32:48Z",
        "merged_at": "2017-04-21T00:32:48Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 51,
        "deletions": 5,
        "changed_files": 8,
        "created_at": "2017-04-20T22:33:13Z",
        "closed_at": "2017-04-20T23:55:57Z",
        "merged_at": "2017-04-20T23:55:57Z",
        "body": "descriptor.proto uses proto2 syntax, which is not ready for external\r\nusage. However, some proto3 files import descriptor.proto and cannot be\r\nused. In this PR, all references (We cheated by only removing\r\nextensions, which is enough for now. User should avoid using messages\r\ndefined in descriptor.proto as field type.) to content in\r\ndescriptor.proto are removed from generated files. Those that import\r\ndescriptor.proto can be used like other proto files.\r\nFix #2901.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-04-20T11:53:26Z",
        "closed_at": "2017-04-20T18:12:03Z",
        "merged_at": "2017-04-20T18:12:03Z",
        "body": "",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 54,
        "deletions": 53,
        "changed_files": 5,
        "created_at": "2017-04-20T01:29:06Z",
        "closed_at": "2017-04-20T03:03:35Z",
        "merged_at": "2017-04-20T03:03:35Z",
        "body": "Fix the bug by sharing the code for generating class name for both\r\nmessage and enum.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-04-19T01:58:45Z",
        "closed_at": "2017-04-19T17:30:42Z",
        "merged_at": "2017-04-19T17:30:42Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-04-17T18:13:03Z",
        "closed_at": "2017-04-19T15:34:54Z",
        "merged_at": "2017-04-19T15:34:54Z",
        "body": "Simplify the Element dtor invocation when freeing elements in InternalDeallocate to avoid confusing the compiler when there's a class named Element already defined in the global namespace. Fixes [issue 2972](https://github.com/google/protobuf/issues/2972).",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-04-17T17:26:13Z",
        "closed_at": "2017-04-20T00:35:01Z",
        "merged_at": null,
        "body": "GBP::CheckRepeatedField does not return a value for older runtimes.\r\n\r\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 37,
        "deletions": 6,
        "changed_files": 5,
        "created_at": "2017-04-17T16:57:09Z",
        "closed_at": "2018-06-11T20:45:16Z",
        "merged_at": null,
        "body": "I'm working on GRPC and Protobuf for Android. Here are changes to build protobuf with CMake for Android. Instructions (MSVS + Ninja):\r\n\r\n1. Install [Android SDK](https://developer.android.com/studio/index.html)\r\n2. Install [Android NDK](https://developer.android.com/ndk/guides/index.html). Generally only NDK is necessary, SDK just may be useful for other purposes.\r\n3. Set environment variable `ANDROID_NDK=<NDK location>`\r\n4. Install [Ninja](https://github.com/ninja-build/ninja/releases). Just drop `ninja.exe` somewhere where it can be accessed from command line, for example, alongside cmake binaries.\r\n5. Build protobuf for host, because we will need protoc executable that we can run on host:\r\n```\r\n    mkdir _host_build\r\n    cd _host_build\r\n    \"C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\vcvarsall.bat\" x86_amd64\r\n    cmake ../cmake -G Ninja -Dprotobuf_BUILD_TESTS=OFF\r\n    ninja\r\n```\r\n6. Build protobuf for android\r\n```\r\n    mkdir _android_build\r\n    cd _android_build\r\n    cmake ../cmake -G Ninja -DCMAKE_SYSTEM_NAME=Android -DCMAKE_SYSTEM_VERSION=21 -DCMAKE_ANDROID_ARCH_ABI=arm64-v8a -DCMAKE_ANDROID_STL_TYPE=gnustl_static -Dprotobuf_BUILD_TESTS=OFF -Dprotobuf_IMPORT_EXECUTABLES=../_host_build/protobuf_ImportExecutables.cmake\r\n    ninja\r\n```\r\n\r\nAlso should fix https://github.com/google/protobuf/issues/2719",
        "comments": 13
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-04-16T18:10:29Z",
        "closed_at": "2018-06-11T20:49:26Z",
        "merged_at": null,
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 970,
        "deletions": 81,
        "changed_files": 19,
        "created_at": "2017-04-12T14:59:21Z",
        "closed_at": "2017-07-24T17:26:55Z",
        "merged_at": "2017-07-24T17:26:55Z",
        "body": "This PR adds support for long paths on Windows in\r\nopen(2), mkdir(2), access(2).\r\n\r\nLong paths are the ones longer than `MAX_PATH` (260\r\ncharacters).\r\n\r\n~~By including `io_win32.h` we redefine\r\n{open,mkdir,access} to win32_{open,mkdir,access}.~~\r\n\r\n> **Update 2017-05-04**: instead of redefining open/close/etc.\r\n> I removed the `win32_` prefix from the new function names\r\n> and simply import them with a `using` statement (if `_WIN32` \r\n> is defined). At the same I removed all inclusions of `<io.h>`\r\n> so the code can only use the functions declared in `io_win32.h`\r\n> and imported with `using`. This is a much safer approach\r\n> than the undef-define one, because this allows other\r\n> namespaces to declare functions with this name and the\r\n> preprocessor won't change those names to win32_open/etc.\r\n\r\nThese custom functions transform the path argument\r\nto a format expected by the Windows API, then call\r\n_w{open,mkdir,access} which understand these paths\r\n(apparently they wrap the native widechar Windows\r\nAPI functions).\r\n\r\nThis PR upstreams the fix for\r\nhttps://github.com/bazelbuild/bazel/issues/2634\r\n\r\nFixes https://github.com/google/protobuf/issues/2891",
        "comments": 20
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 107,
        "changed_files": 4,
        "created_at": "2017-04-12T12:00:12Z",
        "closed_at": "2017-06-23T22:08:05Z",
        "merged_at": "2017-06-23T22:08:05Z",
        "body": "Those classes and default instances are already forward-declared in included header files.\r\nIt solves #2965 where multiple forward-declarations had different dll linkage inside the protobuf compiler.",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-04-08T00:40:11Z",
        "closed_at": "2017-04-11T23:13:33Z",
        "merged_at": "2017-04-11T23:13:33Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1891,
        "deletions": 1187,
        "changed_files": 23,
        "created_at": "2017-04-07T06:22:30Z",
        "closed_at": "2017-04-19T23:23:52Z",
        "merged_at": "2017-04-19T23:23:52Z",
        "body": "",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 25,
        "changed_files": 4,
        "created_at": "2017-04-07T05:52:41Z",
        "closed_at": "2017-04-12T17:42:19Z",
        "merged_at": "2017-04-12T17:42:19Z",
        "body": "\u2026enum mutation method.\r\n\r\nFixes #2936",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2017-04-06T23:48:29Z",
        "closed_at": "2017-04-07T18:30:40Z",
        "merged_at": "2017-04-07T18:30:40Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 150,
        "deletions": 42,
        "changed_files": 24,
        "created_at": "2017-04-06T00:33:29Z",
        "closed_at": "2017-04-06T18:46:51Z",
        "merged_at": "2017-04-06T18:46:51Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 15,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2017-04-04T08:27:01Z",
        "closed_at": "2017-04-06T23:27:55Z",
        "merged_at": "2017-04-06T23:27:55Z",
        "body": "\u2026ll values in a repeated field are rejected and not testing what it wanted to. Also adds a oneof version that verifies the case of oneof fields of different names (currently only same name check seems to be tested).\r\n\r\nAlso fix test of Any parsing with unexpected type url. Currently, it is failing because of an unkown field on TestAllTypes, not an unknown type when handling Any,\r\n\r\nAlso fix spelling of a test.\r\n\r\nNote, I tried running Google Java Format on this file and many other places were changed, so I guess this file isn't formatted with that tool, so I've hand-inserted newlines in certain areas.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-04-03T15:02:01Z",
        "closed_at": "2017-04-04T16:34:07Z",
        "merged_at": "2017-04-04T16:34:07Z",
        "body": "I am adding default shell environment, so that protobuf compilation makes use of set\r\nLD_LIBRARY_PATH and so on.\r\nIn this way, also non-default gcc installations (e.g. not in /usr/lib) can be used to compile protobuf.\r\nThis would fix the following issue:\r\nhttps://github.com/bazelbuild/bazel/issues/2515",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2017-04-03T08:37:01Z",
        "closed_at": "2017-04-04T16:31:15Z",
        "merged_at": "2017-04-04T16:31:15Z",
        "body": "Also adds IntelliJ config to .gitignore",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 48,
        "deletions": 1206,
        "changed_files": 21,
        "created_at": "2017-03-29T23:22:00Z",
        "closed_at": "2017-03-31T23:19:36Z",
        "merged_at": "2017-03-31T23:19:36Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-03-29T22:56:05Z",
        "closed_at": "2017-04-05T23:34:54Z",
        "merged_at": "2017-04-05T23:34:54Z",
        "body": "Fixes #2812",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 13480,
        "deletions": 5230,
        "changed_files": 259,
        "created_at": "2017-03-29T21:11:11Z",
        "closed_at": "2018-05-23T18:18:45Z",
        "merged_at": null,
        "body": "PR created for test purpose. Not ready for review.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-03-28T23:17:50Z",
        "closed_at": "2017-03-29T18:39:29Z",
        "merged_at": "2017-03-29T18:39:29Z",
        "body": "See https://github.com/google/protobuf/issues/2425",
        "comments": 13
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-03-28T16:24:22Z",
        "closed_at": "2017-03-28T20:54:50Z",
        "merged_at": "2017-03-28T20:54:50Z",
        "body": "arm-nacl-clang seems to produce a mysterious compiler error when it\r\nencounters __builtin_clzll, so when we are building for NaCl, let's\r\navoid that in favor of the portable implementation of\r\nLog2FloorNonZero64.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-03-28T15:05:57Z",
        "closed_at": "2017-03-29T13:44:59Z",
        "merged_at": "2017-03-29T13:44:59Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-03-25T05:04:21Z",
        "closed_at": "2017-07-10T23:43:19Z",
        "merged_at": "2017-07-10T23:43:19Z",
        "body": "Rather than crashing on use (doh!) better to just declare this platform\nis missing a proper hash_map/hash_set implementation and use\nthe std::map/std::set emulation.\n\nFixes regression introduced by #1913",
        "comments": 14
    },
    {
        "merged": false,
        "additions": 18,
        "deletions": 10,
        "changed_files": 2,
        "created_at": "2017-03-25T05:04:13Z",
        "closed_at": "2017-04-07T18:48:20Z",
        "merged_at": null,
        "body": "Rather than crashing on use (doh!) better to just implement the\nmissing std::tr1::hash structs.\n\nFixes regression introduced by #1913",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 40,
        "deletions": 40,
        "changed_files": 1,
        "created_at": "2017-03-23T06:07:16Z",
        "closed_at": "2017-03-23T20:57:07Z",
        "merged_at": null,
        "body": "",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 844,
        "deletions": 412,
        "changed_files": 25,
        "created_at": "2017-03-22T18:49:09Z",
        "closed_at": "2018-06-11T22:48:53Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-03-22T18:27:58Z",
        "closed_at": "2017-03-22T20:35:53Z",
        "merged_at": "2017-03-22T20:35:53Z",
        "body": "in order to avoid errors related to generics when \r\nbuilding user code in newer versions of Java.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-03-21T13:31:02Z",
        "closed_at": "2018-06-11T20:47:39Z",
        "merged_at": null,
        "body": "it will fix this issue  : https://github.com/google/protobuf/issues/2889",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-03-21T07:09:36Z",
        "closed_at": "2017-04-11T20:44:34Z",
        "merged_at": null,
        "body": "Added a test for FindFileContainingSymbol to ensure it can search for files containing extensions via the extension full name.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 78,
        "deletions": 19,
        "changed_files": 3,
        "created_at": "2017-03-21T00:02:59Z",
        "closed_at": "2017-03-27T18:05:39Z",
        "merged_at": "2017-03-27T18:05:39Z",
        "body": "#Add FormatEnumsAsIntegers support for Json Format. \r\nThis change also scale JsonFormatter.Settings for multi options.\r\n\r\nfixes #1948",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 14,
        "changed_files": 3,
        "created_at": "2017-03-19T14:02:03Z",
        "closed_at": "2017-05-02T23:57:35Z",
        "merged_at": "2017-05-02T23:57:35Z",
        "body": "Fix #1562 by using `goog.crypt.byteArrayToString` instead of `String.fromCharCode.apply`\r\n\r\ncc @haberman ",
        "comments": 15
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2017-03-17T21:25:32Z",
        "closed_at": "2017-03-20T15:26:07Z",
        "merged_at": "2017-03-20T15:26:06Z",
        "body": "We have some special code in wrap_memcpy.c to ensure that we use the\r\n2.2.5 version of memcpy, for compatibility with older versions of glibc.\r\nHowever, we need to make sure we only attempt to do this when we are\r\nactually building with glibc, so that the code can also build\r\nsuccessfully against other libc implementations such as musl.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 6,
        "changed_files": 5,
        "created_at": "2017-03-17T18:14:47Z",
        "closed_at": "2017-03-21T17:18:50Z",
        "merged_at": "2017-03-21T17:18:50Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 86,
        "deletions": 9,
        "changed_files": 7,
        "created_at": "2017-03-17T08:49:23Z",
        "closed_at": "2017-03-17T22:05:59Z",
        "merged_at": "2017-03-17T22:05:59Z",
        "body": "As requested in #2432 \r\n\r\nI'm not sure if this is best implemented in JsonObjectWriter or elsewhere.",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-03-16T15:39:50Z",
        "closed_at": "2018-06-11T20:50:28Z",
        "merged_at": null,
        "body": "",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 209,
        "deletions": 0,
        "changed_files": 7,
        "created_at": "2017-03-16T12:02:52Z",
        "closed_at": "2017-03-20T20:02:41Z",
        "merged_at": "2017-03-20T20:02:41Z",
        "body": "See discussion in #710. The author of this piece of code is @kentonv ",
        "comments": 13
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 90,
        "changed_files": 3,
        "created_at": "2017-03-16T03:25:04Z",
        "closed_at": "2017-03-20T17:49:49Z",
        "merged_at": "2017-03-20T17:49:49Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-03-16T01:29:11Z",
        "closed_at": "2017-03-16T19:25:43Z",
        "merged_at": "2017-03-16T19:25:43Z",
        "body": "Fixes: https://github.com/google/protobuf/issues/2019",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2017-03-16T00:50:04Z",
        "closed_at": "2017-03-27T19:04:09Z",
        "merged_at": "2017-03-27T19:04:09Z",
        "body": "Fixes: https://github.com/google/protobuf/issues/1289",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-03-15T18:02:44Z",
        "closed_at": "2017-03-16T16:16:53Z",
        "merged_at": "2017-03-16T16:16:53Z",
        "body": "This version is to push a fix for gems containing files that were not\r\nworld-readable as they should be (issue #2853).",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 31,
        "deletions": 31,
        "changed_files": 3,
        "created_at": "2017-03-15T14:14:44Z",
        "closed_at": "2017-03-20T16:51:32Z",
        "merged_at": "2017-03-20T16:51:32Z",
        "body": "fixes #2802 ",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 410,
        "deletions": 161,
        "changed_files": 13,
        "created_at": "2017-03-15T02:22:10Z",
        "closed_at": "2018-06-22T16:59:12Z",
        "merged_at": null,
        "body": "This can save us up to 7 load/or/stores per 8 fields, as the compiler may assume that `&from` and `this` alias each other, so the local `_has_bits_` need to be reloaded with each field.\r\n\r\nThis extends #2850.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 56,
        "deletions": 30,
        "changed_files": 11,
        "created_at": "2017-03-15T01:37:09Z",
        "closed_at": "2017-03-15T21:16:50Z",
        "merged_at": "2017-03-15T21:16:50Z",
        "body": "",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 335,
        "deletions": 117,
        "changed_files": 13,
        "created_at": "2017-03-15T01:13:37Z",
        "closed_at": "2018-06-22T16:59:22Z",
        "merged_at": null,
        "body": "Self-`MergeFrom` has been forbidden since 40ee5517 via a `GOOGLE_CHECK`.  Since 5a76e633e, we use a `GOOGLE_DCHECK` to guard against it.  The compiler forces a reload of the `from._has_bits_` after every field is merged.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 943,
        "deletions": 665,
        "changed_files": 45,
        "created_at": "2017-03-15T00:31:39Z",
        "closed_at": "2017-03-17T18:08:06Z",
        "merged_at": "2017-03-17T18:08:06Z",
        "body": "This option will be prepended to generated classes of all messages in\r\nthe containing file.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 63,
        "deletions": 0,
        "changed_files": 4,
        "created_at": "2017-03-14T23:46:15Z",
        "closed_at": "2017-03-17T17:42:21Z",
        "merged_at": "2017-03-17T17:42:21Z",
        "body": "Fixes https://github.com/google/protobuf/issues/2757\r\n\r\nIt turns out system headers included by generated plugin.pb.h file already contains\r\nmajor/minor macro definitions when built on FreeBSD and we need to add #undefs to\r\nthe generated header file.\r\n\r\nThis change also fixes another compile error regarding EXPECT_DEATH on FreeBSD.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 55,
        "deletions": 2,
        "changed_files": 4,
        "created_at": "2017-03-14T21:29:54Z",
        "closed_at": "2017-03-16T16:28:10Z",
        "merged_at": "2017-03-16T16:28:10Z",
        "body": "Fixes: https://github.com/google/protobuf/issues/1761\r\n\r\nThis integrates some of the code from this PR: https://github.com/google/protobuf/pull/396",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-03-14T17:12:27Z",
        "closed_at": "2017-03-15T16:13:45Z",
        "merged_at": "2017-03-15T16:13:45Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2017-03-13T23:09:01Z",
        "closed_at": "2017-03-14T19:10:24Z",
        "merged_at": "2017-03-14T19:10:24Z",
        "body": "Fixes: https://github.com/google/protobuf/issues/1175",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 122,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2017-03-13T19:29:57Z",
        "closed_at": "2018-06-11T20:53:15Z",
        "merged_at": null,
        "body": "First version to fix #2838 . How should the JsonReplayTokenizer be handled?\r\n\r\nIt should ignore the object if it is unknown. To achieve this, the name and value is skipped if it is a simple value. If it is an array or dict, the tokens are read and discarded until the object is finished -> it has a lower remaining object-stack.",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 19,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2017-03-11T00:59:58Z",
        "closed_at": "2017-03-17T18:10:25Z",
        "merged_at": "2017-03-17T18:10:25Z",
        "body": "fixes #2418",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 117,
        "deletions": 123,
        "changed_files": 2,
        "created_at": "2017-03-11T00:34:31Z",
        "closed_at": "2017-03-13T22:03:51Z",
        "merged_at": "2017-03-13T22:03:51Z",
        "body": "Fixes https://github.com/google/protobuf/issues/1130\r\n\r\nThis allows the file path to contain spaces which is very common on\r\nwindows.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-03-10T23:35:44Z",
        "closed_at": "2017-03-13T17:56:21Z",
        "merged_at": "2017-03-13T17:56:21Z",
        "body": "Likely to be java language issue. Varargs are considered arrays, thus\r\nusing generic with varargs will cause unchecked warning about generic\r\narray creation.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-03-10T23:08:50Z",
        "closed_at": "2017-12-13T00:22:48Z",
        "merged_at": "2017-12-13T00:22:48Z",
        "body": "Previously `//:protobuf_python` set no `__init__.py` so Bazel created an\r\nempty one. This change makes it use the `__init__.py` from the repository.\r\n\r\nThis is necessary for anyone depending on this target who also wants to use any other library that contributes to the `google` module, like https://pypi.python.org/pypi/google-apputils.\r\n\r\nFixes https://github.com/google/protobuf/issues/2833.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 61,
        "deletions": 2,
        "changed_files": 4,
        "created_at": "2017-03-10T18:47:35Z",
        "closed_at": "2017-03-14T17:12:52Z",
        "merged_at": "2017-03-14T17:12:52Z",
        "body": "This pull request cherry-picks the fix for Ruby in 9fa40314fcfd1 and increments the gem version number to 3.2.0.1 so that we can publish new gems with that fix. This is part of issue #2783.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 61,
        "deletions": 0,
        "changed_files": 5,
        "created_at": "2017-03-10T13:13:15Z",
        "closed_at": "2017-03-15T18:41:15Z",
        "merged_at": "2017-03-15T18:41:15Z",
        "body": "The protobuf libraries currently export many symbols not useful for protobuf consumers. Although this is not usually an issue, there are some use cases where the exported symbols cause problems.\r\n\r\nSuch a problematic use case occurs due to weak symbols from C++ templates that are exported by protobuf libraries. Other libraries (including libstdc++) can bind to such symbols and prevent protobuf from properly unloading (and subsequently reloading) when protobuf itself or a library linking to it is loaded/unloaded with dlopen/dlclose. An example of such a binding from a real world example is:\r\n\r\nbinding file /usr/lib/x86_64-linux-gnu/libstdc++.so.6 [0] to /usr/lib/x86_64-linux-gnu/libprotobuf-lite.so.10 [0]: normal symbol `_ZNKSt5ctypeIcE8do_widenEc' [GLIBCXX_3.4]\r\n\r\nThis PR uses version scripts (--Wl,--version-script) to hide unnecessary symbols on platforms that support it , therefore solving problems like the one described above. Plus it's good practice to export only required symbols from libraries.\r\n\r\nNote that the -export-symbols(-regex) libtool flag cannot be used in this case, since, at least when using gnu ld, it is implemented with --Wl,--retain-symbols-file which does not affect all the types of symbols we need to hide.",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2017-03-10T01:27:07Z",
        "closed_at": "2017-03-10T23:02:53Z",
        "merged_at": "2017-03-10T23:02:53Z",
        "body": "Fixes https://github.com/google/protobuf/issues/1251\r\n\r\nUpdated the comment about default limit and removed an incorrect comment about ByteString.newCodedInput().",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-03-10T01:03:06Z",
        "closed_at": "2017-03-10T23:03:15Z",
        "merged_at": "2017-03-10T23:03:15Z",
        "body": "Fixes https://github.com/google/protobuf/issues/1374",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 45,
        "deletions": 10,
        "changed_files": 3,
        "created_at": "2017-03-10T00:38:17Z",
        "closed_at": "2017-03-10T23:03:29Z",
        "merged_at": "2017-03-10T23:03:29Z",
        "body": "Fixes https://github.com/google/protobuf/issues/1415 https://github.com/google/protobuf/issues/2651\r\n\r\nC++ JSON parser uses one global lookup table to store the mapping from JSON name to proto field name. Because different messages may have different fields mapped to the same JSON name, such a global lookup table can only store the mapping for one of the fields and that causes parse failures (https://github.com/google/protobuf/issues/1415 https://github.com/google/protobuf/issues/2651).\r\n\r\nThis PR replaces the global lookup table with per-type tables to solve the problem.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 73,
        "deletions": 18,
        "changed_files": 1,
        "created_at": "2017-03-09T23:55:34Z",
        "closed_at": "2017-03-10T23:24:51Z",
        "merged_at": "2017-03-10T23:24:51Z",
        "body": "Add auto detect for generated code of WKT protos, addressbook.proto and conformance.proto\r\n\r\nfixes #1212",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 52,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2017-03-09T22:44:12Z",
        "closed_at": "2017-03-10T23:08:52Z",
        "merged_at": "2017-03-10T23:08:52Z",
        "body": "Fixes https://github.com/google/protobuf/issues/1470",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 355,
        "deletions": 41,
        "changed_files": 9,
        "created_at": "2017-03-09T22:25:12Z",
        "closed_at": "2017-03-10T21:43:00Z",
        "merged_at": "2017-03-10T21:43:00Z",
        "body": "Accept regular PHP array for repeated/map setter. Existing map/repeated\r\nfield will be swapped by a clean map/repeated field. Then, elements in\r\nthe array will be added to the map/repeated field. All elements will be\r\ntype checked before adding.\r\n\r\nSee #2686 for detail.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 142,
        "deletions": 42,
        "changed_files": 2,
        "created_at": "2017-03-09T22:18:20Z",
        "closed_at": "2017-03-10T00:04:42Z",
        "merged_at": "2017-03-10T00:04:42Z",
        "body": "for #2760 ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 149,
        "deletions": 33,
        "changed_files": 2,
        "created_at": "2017-03-09T19:59:14Z",
        "closed_at": "2017-05-15T15:05:28Z",
        "merged_at": "2017-05-15T15:05:28Z",
        "body": "Usage: `Message.encode_json(m, emit_defaults: true)`\r\nMessage fields that are nil will still not appear in the encoded JSON.\r\n\r\nThis should fix #1216 .\r\n\r\nBehavior should be in line with the Golang and Python versions. Singular primitive fields, repeated fields and map fields will always be serialized. This option does not affect fields of type message.\r\n\r\nChose the `emit_defaults` name from the Golang implementation. Python's option `including_default_value_fields` it a lot longer and does not seem to describe it better.",
        "comments": 12
    },
    {
        "merged": true,
        "additions": 28,
        "deletions": 10,
        "changed_files": 3,
        "created_at": "2017-03-09T19:53:35Z",
        "closed_at": "2017-03-09T21:50:20Z",
        "merged_at": "2017-03-09T21:50:20Z",
        "body": "For #1472",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-03-09T12:56:03Z",
        "closed_at": "2018-06-11T22:36:06Z",
        "merged_at": "2018-06-11T22:36:06Z",
        "body": " Mark sun.misc dependency as optional (which it is).\r\nThe pull request makes protobuf 3 usage possible in osgi environments where sun.misc is not availabe (which is by default)",
        "comments": 15
    },
    {
        "merged": true,
        "additions": 22,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2017-03-09T01:35:46Z",
        "closed_at": "2017-03-09T21:57:35Z",
        "merged_at": "2017-03-09T21:57:35Z",
        "body": "Fixes https://github.com/google/protobuf/issues/1816",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2017-03-09T00:58:15Z",
        "closed_at": "2017-03-10T00:39:00Z",
        "merged_at": "2017-03-10T00:39:00Z",
        "body": "Fixes https://github.com/google/protobuf/issues/2464",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 40,
        "deletions": 29,
        "changed_files": 4,
        "created_at": "2017-03-08T23:31:21Z",
        "closed_at": "2017-03-09T19:17:05Z",
        "merged_at": "2017-03-09T19:17:05Z",
        "body": "Cherry-pick commit to the master into the javalite branch.\r\n\r\nThe original link is no longer available.",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 14,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2017-03-08T23:07:49Z",
        "closed_at": "2018-06-18T21:49:54Z",
        "merged_at": null,
        "body": "Fixes https://github.com/google/protobuf/issues/2798",
        "comments": 27
    },
    {
        "merged": true,
        "additions": 60,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2017-03-08T19:33:14Z",
        "closed_at": "2017-03-09T22:30:51Z",
        "merged_at": "2017-03-09T22:30:51Z",
        "body": "This commit adds a __wrap_memcpy function and a linker flag to use that\r\nin place of memcpy for our Ruby gem C extension. This allows us to\r\nalways use the 2.2.5 version of memcpy, making it possible to use the\r\ngem on distributions with pre-2.14 versions of glibc.\r\n\r\nBefore this change:\r\n$ objdump -T protobuf_c.so | grep memcpy\r\n0000000000000000      DF *UND*  0000000000000000  GLIBC_2.3.4 __memcpy_chk\r\n0000000000000000      DF *UND*  0000000000000000  GLIBC_2.14  memcpy\r\n\r\nAfter:\r\n$ objdump -T protobuf_c.so | grep memcpy\r\n0000000000000000      DF *UND*  0000000000000000  GLIBC_2.2.5 memcpy\r\n0000000000000000      DF *UND*  0000000000000000  GLIBC_2.3.4 __memcpy_chk\r\n0000000000042450 g    DF .text  0000000000000005  Base __wrap_memcpy\r\n\r\nThis is based on gRPC's solution to a similar problem:\r\nhttps://github.com/grpc/grpc/blob/5098508d2d41a116113f7e333c516cd9ef34a943/src/core/lib/support/wrap_memcpy.c\r\nHowever, we have not so far run into any issues with callers using\r\nmemcpy when they should be using memmove, so in this commit I did not\r\nadd anything to redirect memcpy to memmove.\r\n\r\nThis fixes issue #2783.",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 29,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2017-03-08T10:56:42Z",
        "closed_at": "2018-06-11T22:40:20Z",
        "merged_at": null,
        "body": "",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2017-03-08T01:05:21Z",
        "closed_at": "2017-03-15T21:45:27Z",
        "merged_at": null,
        "body": "This fixes https://github.com/google/protobuf/issues/698",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 314,
        "deletions": 62,
        "changed_files": 14,
        "created_at": "2017-03-07T00:48:47Z",
        "closed_at": "2017-03-08T22:31:35Z",
        "merged_at": "2017-03-08T22:31:35Z",
        "body": "This better shows the semantic of the API. For already setted fields,\r\nmergeFromString do replacement for singular fields and appending for\r\nrepeated fields.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 7,
        "changed_files": 3,
        "created_at": "2017-03-06T23:55:16Z",
        "closed_at": "2017-03-16T16:23:33Z",
        "merged_at": "2017-03-16T16:23:33Z",
        "body": "There was a bug where for JavaScript we would only serialize an\r\nextension value if it evaluated as truthy, which meant that values like\r\n0 would get silently dropped (even in proto2, where field presence is\r\nsignificant). This fixes issue #2605, and takes care of the output of\r\ntoObject() in addition to the binary format.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-03-06T23:51:03Z",
        "closed_at": "2017-03-07T22:22:58Z",
        "merged_at": "2017-03-07T22:22:58Z",
        "body": "",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-03-06T23:45:18Z",
        "closed_at": "2017-03-08T23:24:05Z",
        "merged_at": "2017-03-08T23:24:05Z",
        "body": "fixes #2702",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 145,
        "deletions": 1,
        "changed_files": 4,
        "created_at": "2017-03-03T01:20:23Z",
        "closed_at": "2017-03-06T23:33:42Z",
        "merged_at": "2017-03-06T23:33:42Z",
        "body": "related to #1212",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 69,
        "deletions": 57,
        "changed_files": 11,
        "created_at": "2017-03-02T22:13:40Z",
        "closed_at": "2018-06-11T20:45:18Z",
        "merged_at": null,
        "body": "In generated code, we check for self-swap in Swap (and same Arena, for protos using Arenas) and then individually check each field for self-swap in `RepeatedField<T>::UnsafeArenaSwap`/`RepeatedPtrField<T>::UnsafeArenaSwap`.  If the first check has passed, the second (per-field) check will as well.\r\n\r\n  `this != other` implies `&(this->some_field_) != &(other->some_field_)`\r\n\r\n  for the same types of `this` and `other`.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-03-02T19:33:46Z",
        "closed_at": "2017-03-03T15:06:15Z",
        "merged_at": "2017-03-03T15:06:15Z",
        "body": "A uint32 is big enough to hold any return value from that function, and\r\ndoing it this way prevents compiler warnings in coded_stream.h about\r\nnarrowing a uint64 to a uint32.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 251,
        "deletions": 94,
        "changed_files": 7,
        "created_at": "2017-03-02T00:38:55Z",
        "closed_at": "2017-03-02T22:37:09Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-03-01T17:31:13Z",
        "closed_at": "2017-03-01T18:53:55Z",
        "merged_at": null,
        "body": " - the functionality exists already, this patch just plugs it into\r\n   C++11 move semantics\r\n - this way a message can be std::moved into a function (i.e. pass by value)",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2017-03-01T01:49:18Z",
        "closed_at": "2017-03-09T21:50:32Z",
        "merged_at": "2017-03-09T21:50:32Z",
        "body": "Fixes https://github.com/google/protobuf/issues/2695\r\n\r\nWe use major/minor as field names in plugin.proto to represent version numbers and these names are unfortunately defined as macros by some header files in some platforms. This PR adds the necessary #undef's to make the code compile on these platforms.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 32,
        "deletions": 3,
        "changed_files": 4,
        "created_at": "2017-03-01T01:18:37Z",
        "closed_at": "2017-03-02T16:47:20Z",
        "merged_at": "2017-03-02T16:47:20Z",
        "body": "There are two motivations for this:\r\n1) calcdeps.py is deprecated and replaced by closurebuilder.py.\r\n2) As part of this I was able to tweak things so that the Closure\r\ncompiler does not attempt to examine every .js file in the tree under\r\njs/. This makes it possible to put compatibility tests and related files\r\nin a subdirectory without them getting mixed up with the main .js files\r\nwe care about.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 15,
        "deletions": 15,
        "changed_files": 9,
        "created_at": "2017-02-28T09:00:58Z",
        "closed_at": "2017-02-28T18:52:03Z",
        "merged_at": "2017-02-28T18:52:03Z",
        "body": "Please have a look at the individual commit messages for the details.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 273,
        "deletions": 37,
        "changed_files": 6,
        "created_at": "2017-02-28T07:16:31Z",
        "closed_at": "2018-06-22T16:59:34Z",
        "merged_at": null,
        "body": "This removes a load per element when a repeated primitive field by avoiding a reload of RepeatedField<T>::rep_.  This is also a data dependency for the subsequent (and remaining) load.\r\n\r\nFor fixed-sized fields, this extends the changes to SerializeWithCachedSizes in 7f3e23707 to SerializeWithCachedSizesToArray.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 410,
        "deletions": 410,
        "changed_files": 14,
        "created_at": "2017-02-28T02:02:37Z",
        "closed_at": "2017-02-28T18:57:42Z",
        "merged_at": "2017-02-28T18:57:42Z",
        "body": "Fixes https://github.com/google/protobuf/issues/2769",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 439,
        "deletions": 7,
        "changed_files": 11,
        "created_at": "2017-02-27T21:25:37Z",
        "closed_at": "2017-03-01T18:39:49Z",
        "merged_at": "2017-03-01T18:39:49Z",
        "body": "This method merges the contents of the specified message into the\r\ncurrent message. Singular fields that are set in the specified message\r\noverwrite the corresponding fields in the current message.  Repeated\r\nfields are appended. Map fields key-value pairs are overritten.\r\nSingular/Oneof sub-messages are recursively merged. All overritten\r\nsub-messages are deep-copied.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-02-25T21:44:48Z",
        "closed_at": "2017-02-28T23:21:34Z",
        "merged_at": "2017-02-28T23:21:33Z",
        "body": "HOST_CFG has been deprecated in favor of \"host\".",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2017-02-24T20:10:25Z",
        "closed_at": "2017-02-24T22:03:28Z",
        "merged_at": null,
        "body": "[](url)\r\nmaster package-json\r\n\r\n Conversation 7   Commits 1   Files changed 1\r\nReviewers\r\n\r\nNo reviews\r\nAssignees\r\n\r\nNo one assigned\r\nLabels\r\n\r\ncla: no\r\nProjects\r\n\r\nNone yet\r\nMilestone\r\n\r\nNo milestone\r\nNotifications\r\n\r\n  Unsubscribe\r\nYou\u2019re receiving notifications because you authored the thread.\r\n6 participants\r\n\r\n     \r\n\r\n  \r\n            \r\n  Write  Preview\r\n\r\n- [x] @",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 2009,
        "deletions": 1,
        "changed_files": 11,
        "created_at": "2017-02-24T01:59:04Z",
        "closed_at": "2017-03-02T22:33:02Z",
        "merged_at": "2017-03-02T22:33:02Z",
        "body": "This PR adds test scripts to run 3.0.0 unittest + generated code against head version to ensure we don't introduce any breaking changes.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 40,
        "deletions": 144,
        "changed_files": 8,
        "created_at": "2017-02-24T00:29:07Z",
        "closed_at": "2018-06-22T16:59:40Z",
        "merged_at": null,
        "body": "Since the elimination of ExpectTag (5a76e633ea9b), the generated code is different while having the same functional behavior.  This shifts the recursion limit checks into CodedInputStream::DecrementRecursionDepthAndPopLimit (which is not inlined).",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 324,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2017-02-23T17:31:00Z",
        "closed_at": "2017-02-23T20:18:18Z",
        "merged_at": "2017-02-23T20:18:18Z",
        "body": "GPBMessageDropUnknownFieldsRecursively() is a new helper to drop the\r\nunknownFields from a message and all sub messages (in fields or extensions).",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 21,
        "deletions": 9,
        "changed_files": 1,
        "created_at": "2017-02-23T16:18:57Z",
        "closed_at": "2017-03-06T18:41:20Z",
        "merged_at": "2017-03-06T18:41:20Z",
        "body": "",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-02-22T22:50:30Z",
        "closed_at": "2017-03-01T19:00:57Z",
        "merged_at": "2017-03-01T19:00:57Z",
        "body": "",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-02-22T22:16:21Z",
        "closed_at": "2017-02-24T22:43:15Z",
        "merged_at": "2017-02-24T22:43:15Z",
        "body": "",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2017-02-22T18:51:40Z",
        "closed_at": "2017-02-28T18:14:21Z",
        "merged_at": null,
        "body": "",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-02-21T15:31:03Z",
        "closed_at": "2018-06-11T20:36:46Z",
        "merged_at": null,
        "body": "",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 41,
        "deletions": 41,
        "changed_files": 9,
        "created_at": "2017-02-19T02:16:50Z",
        "closed_at": "2018-06-11T20:39:03Z",
        "merged_at": null,
        "body": "Correcting \"naked\" map and  vector declarations to std::map and std::vector.\r\n",
        "comments": 11
    },
    {
        "merged": true,
        "additions": 63,
        "deletions": 1,
        "changed_files": 6,
        "created_at": "2017-02-19T01:08:26Z",
        "closed_at": "2017-02-21T19:08:06Z",
        "merged_at": "2017-02-21T19:08:06Z",
        "body": "https://github.com/google/protobuf/issues/2735",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-02-18T21:06:21Z",
        "closed_at": "2017-02-24T22:24:03Z",
        "merged_at": "2017-02-24T22:24:03Z",
        "body": "Dedent URL so it renders as a link and not as code (fixed width font and not clickable).",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-02-18T14:44:57Z",
        "closed_at": "2017-02-27T16:50:33Z",
        "merged_at": "2017-02-27T16:50:33Z",
        "body": "> warning C4309: static_cast': truncation of constant value\r\n\r\nintroduced in commit 9db5b11c9cf2922435b53495b9c1e114525f0428",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-02-17T23:50:24Z",
        "closed_at": "2017-02-24T22:44:17Z",
        "merged_at": "2017-02-24T22:44:17Z",
        "body": "Clang now validates that <set> comparators must have a const operator():\r\nhttps://reviews.llvm.org/rL291969\r\n\r\nDiscussion:\r\nhttps://groups.google.com/d/msg/protobuf/9W6zFIHaJ-4/9RrfwelpEQAJ",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2017-02-17T11:17:34Z",
        "closed_at": "2017-02-27T16:29:10Z",
        "merged_at": "2017-02-27T16:29:10Z",
        "body": "In #726 and #813, linking errors with MSVC14 were resolved. The change in\r\nMSVC12 leading to these errors was not a newly introduced bug, but that\r\n/Zc:inline was made on by default. This option is also available with MSVC12,\r\nso the workaround should be applied for it too.",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 250,
        "deletions": 94,
        "changed_files": 6,
        "created_at": "2017-02-16T23:55:11Z",
        "closed_at": "2017-02-28T18:51:20Z",
        "merged_at": "2017-02-28T18:51:20Z",
        "body": "There might be duplicated enum values when allow_alias is true. Add Distinct() for Enum Dictionary used in JsonFormatter to remove the duplication.\r\n\r\nfix #2405",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-02-15T19:47:27Z",
        "closed_at": "2018-06-11T20:40:06Z",
        "merged_at": null,
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 725,
        "deletions": 236,
        "changed_files": 22,
        "created_at": "2017-02-15T19:45:01Z",
        "closed_at": "2017-02-16T21:42:18Z",
        "merged_at": "2017-02-16T21:42:17Z",
        "body": "This combines pull requests #2653, #2622, #2579, #2652 into a single pull request (over separate commits) to reduce potential merge conflicts from updating the generated descriptor protocol buffers.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 208,
        "deletions": 17,
        "changed_files": 15,
        "created_at": "2017-02-14T00:41:25Z",
        "closed_at": "2017-02-23T10:51:54Z",
        "merged_at": "2017-02-23T10:51:54Z",
        "body": "I changed the DOTNET35 conditional compilation symbols to NET35 because the NET35 seems to be defined in .NET Core projects by default, whereas DOTNET35 requires a custom definition.\r\n\r\nI also explicitly added net35 to the project.json frameworks for Google.Protobuf and Google.Protobuf.Test, and updated the csharp README with detailed testing information.\r\n\r\n~~Not sure if you guys are doing continuous integration with the C# stuff, but if so, you may need to make modifications after merging this to account for dotnet-test-nunit's lack of .NET 3.5 support.~~ EDIT: Looks like I was able to make the appropriate modifications needed to keep Travis and AppVeyor happy.",
        "comments": 11
    },
    {
        "merged": true,
        "additions": 47,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2017-02-13T22:25:29Z",
        "closed_at": "2017-02-14T19:04:30Z",
        "merged_at": "2017-02-14T19:04:30Z",
        "body": "--[name]_opt support depended on the plugin being register, and didn't support\r\nworking with just --[name]_out directive (where the plugin is found via the\r\nusers PATH. This extends the command line handing to allow --[name]_out to\r\nbe all it takes for the _opt directive to also be supported.\r\n\r\nFixes https://github.com/google/protobuf/issues/2712",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 60,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2017-02-13T20:21:19Z",
        "closed_at": "2018-06-11T20:41:58Z",
        "merged_at": null,
        "body": "Add the following insertion points:\r\n- field_modifier_scope_{before,after}:<fullname>.setField\r\n- field_modifier_scope_{before,after}:<fullname>.clearField\r\n- field_modifier_scope_{before,after}:<fullname>.clearOneOf\r\n- field_modifier_scope_{before,after}:<fullname>.setRepeatedField\r\n- field_modifier_scope_{before,after}:<fullname>.addRepeatedField\r\n- field_modifier_scope_{before,after}:<fullname>.set<capitalized_name>)\r\n- field_modifier_scope_{before,after}:<fullname>.set<capitalized_name>Bytes)\r\n- field_modifier_scope_{before,after}:<fullname>.add<capitalized_name>)\r\n- field_modifier_scope_{before,after}:<fullname>.addAll<capitalized_name>Bytes)\r\n\r\nTwo entry points are provided for each at scope start and end.\r\n\r\nGithub Issue: #2684",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-02-11T03:00:18Z",
        "closed_at": "2017-02-14T15:50:23Z",
        "merged_at": "2017-02-14T15:50:23Z",
        "body": "Unfortunate typo. Just one extra ',' symbol, has led to the hidden implicit behavior.\r\n\r\nNow everything will be fine.\r\n\r\nCloses: #2705",
        "comments": 12
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-02-11T00:25:45Z",
        "closed_at": "2017-02-13T18:26:10Z",
        "merged_at": "2017-02-13T18:26:10Z",
        "body": "For users who have GOOGLE_PROTOBUF_UTF8_VALIDATION_ENABLED turned off, compiler gives warnigns about unused variables in WireFormat::VerifyUTF8StringNamedField in wire_format.h.",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 7893,
        "deletions": 1,
        "changed_files": 37,
        "created_at": "2017-02-10T00:53:06Z",
        "closed_at": "2017-02-13T18:54:35Z",
        "merged_at": "2017-02-13T18:54:35Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 277,
        "deletions": 12,
        "changed_files": 10,
        "created_at": "2017-02-09T22:24:21Z",
        "closed_at": "2017-02-12T00:36:18Z",
        "merged_at": "2017-02-12T00:36:18Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 235,
        "changed_files": 4,
        "created_at": "2017-02-09T21:24:01Z",
        "closed_at": "2017-02-10T22:55:35Z",
        "merged_at": "2017-02-10T22:55:35Z",
        "body": "The static_assert on the sizeof std::atomic fails with nvcc. Use the gcc atomic intrinsics instead, which are supported in both gcc and clang.\r\n\r\nManually tested that this fixes the nvcc build.\r\n\r\n@sergiocampama",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 121,
        "deletions": 0,
        "changed_files": 5,
        "created_at": "2017-02-08T23:08:35Z",
        "closed_at": "2017-06-28T22:22:20Z",
        "merged_at": "2017-06-28T22:22:20Z",
        "body": "Followed PEP513.",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-02-08T17:19:51Z",
        "closed_at": "2017-02-08T18:45:48Z",
        "merged_at": "2017-02-08T18:45:48Z",
        "body": "That is, Bazel can now build protobuf when the latter resides in a subdirectory of a project.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2017-02-08T01:47:40Z",
        "closed_at": "2017-02-14T23:11:47Z",
        "merged_at": "2017-02-14T23:11:47Z",
        "body": "This eliminates an unnecessary reload of `buffer_` that occurs (before this change) after the store to `*value`.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 19,
        "deletions": 7,
        "changed_files": 4,
        "created_at": "2017-02-08T00:11:47Z",
        "closed_at": "2017-03-24T00:33:13Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 17,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2017-02-07T23:23:10Z",
        "closed_at": "2017-02-13T20:20:26Z",
        "merged_at": null,
        "body": "    \r\nAdd the following insertion points:\r\n  - field_modifier_scope_{before,after}:<fullname>.setField\r\n  - field_modifier_scope_{before,after}:<fullname>.clearField\r\n  - field_modifier_scope_{before,after}:<fullname>.clearOneOf\r\n  - field_modifier_scope_{before,after}:<fullname>.setRepeatedField\r\n  - field_modifier_scope_{before,after}:<fullname>.addRepeatedField\r\n  - field_modifier_scope_{before,after}:<fullname>.set<capitalized_name>)\r\n  - field_modifier_scope_{before,after}:<fullname>.set<capitalized_name>Bytes)\r\n  - field_modifier_scope_{before,after}:<fullname>.add<capitalized_name>)\r\n  - field_modifier_scope_{before,after}:<fullname>.addAll<capitalized_name>Bytes)\r\n    \r\nTwo entry points are provided for each at scope start and end.\r\n   \r\n\r\nGithub Issue: #2684",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-02-07T22:53:06Z",
        "closed_at": "2017-04-03T17:36:01Z",
        "merged_at": null,
        "body": "Projects building multiple .so's and loading them dynamically can\r\nlink against this target instead of including all of protobuf.\r\nTensorFlow is an example of such a project.",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 179,
        "deletions": 390,
        "changed_files": 9,
        "created_at": "2017-02-07T18:58:26Z",
        "closed_at": "2017-02-08T18:27:55Z",
        "merged_at": "2017-02-08T18:27:55Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2017-02-07T13:53:23Z",
        "closed_at": "2018-06-25T22:07:36Z",
        "merged_at": null,
        "body": "",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-02-07T02:34:14Z",
        "closed_at": "2017-02-08T20:22:32Z",
        "merged_at": null,
        "body": "The first argument is currently implicitly a .bzl file.\r\nChange this to be explicit.",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-02-06T22:30:50Z",
        "closed_at": "2017-04-18T03:23:51Z",
        "merged_at": null,
        "body": "Added missing return in Message::decode (php)",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 5943,
        "deletions": 55,
        "changed_files": 33,
        "created_at": "2017-02-06T21:52:24Z",
        "closed_at": "2017-04-03T21:39:27Z",
        "merged_at": "2017-04-03T21:39:27Z",
        "body": "Added compatibility tests for JavaScript. This initial pull request just contains tests for verifying compatibility with 3.0.0, but it should be easy to extend to 3.1, 3.2, etc.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2017-02-06T21:05:37Z",
        "closed_at": "2017-02-13T22:46:31Z",
        "merged_at": "2017-02-13T22:46:31Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-02-06T20:48:47Z",
        "closed_at": "2017-03-01T15:11:34Z",
        "merged_at": "2017-03-01T15:11:34Z",
        "body": "This tweak makes the test output a bit easier to read because it cuts\r\nout a lot of unnecessary logging.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-02-06T20:44:20Z",
        "closed_at": "2017-02-07T18:55:49Z",
        "merged_at": "2017-02-07T18:55:49Z",
        "body": "The latest phpunit only supports php7.0+. Added an old fixed version to work with php 5.6.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 18,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2017-02-06T14:49:36Z",
        "closed_at": "2017-02-06T18:24:20Z",
        "merged_at": "2017-02-06T18:24:20Z",
        "body": "Fixes #2669.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 316,
        "deletions": 94,
        "changed_files": 9,
        "created_at": "2017-02-04T16:54:14Z",
        "closed_at": "2018-03-20T22:23:21Z",
        "merged_at": null,
        "body": "Implementation proposal for nullable keyword that convert a scalar field to a one-field oneof.\r\n\r\nIssue #1606 ",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 17,
        "deletions": 26,
        "changed_files": 2,
        "created_at": "2017-02-04T00:49:23Z",
        "closed_at": "2017-02-15T18:44:59Z",
        "merged_at": "2017-02-15T18:44:59Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 3386,
        "deletions": 2077,
        "changed_files": 4,
        "created_at": "2017-02-04T00:10:08Z",
        "closed_at": "2017-02-06T20:40:52Z",
        "merged_at": "2017-02-06T20:40:52Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 51,
        "deletions": 24,
        "changed_files": 8,
        "created_at": "2017-02-03T21:42:49Z",
        "closed_at": "2017-02-08T05:33:29Z",
        "merged_at": "2017-02-08T05:33:29Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-02-02T00:14:37Z",
        "closed_at": "2018-06-01T18:02:41Z",
        "merged_at": null,
        "body": "This fixes an issue where js_embed generation step would fail since it cannot find js_embed binary.\r\n\r\nThe binary is correctly generated but since it is in the ${CMAKE_CURRENT_BINARY_DIR}, the system would be unable to find it.\r\n\r\nPerhaps it works for windows but it fails for *nix. ",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-02-01T14:16:41Z",
        "closed_at": "2017-02-10T18:47:49Z",
        "merged_at": "2017-02-10T18:47:49Z",
        "body": "",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1422,
        "deletions": 7,
        "changed_files": 6,
        "created_at": "2017-01-31T22:41:46Z",
        "closed_at": "2017-02-01T20:47:59Z",
        "merged_at": "2017-02-01T20:47:59Z",
        "body": "@stanley-cheung ",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 402,
        "deletions": 313,
        "changed_files": 5,
        "created_at": "2017-01-31T21:59:52Z",
        "closed_at": "2017-02-02T19:14:43Z",
        "merged_at": "2017-02-02T19:14:43Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 288,
        "deletions": 0,
        "changed_files": 12,
        "created_at": "2017-01-31T21:15:22Z",
        "closed_at": "2017-02-15T20:16:49Z",
        "merged_at": null,
        "body": "rvalue setters for scalar string fields were added in #2506.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 21,
        "deletions": 21,
        "changed_files": 5,
        "created_at": "2017-01-31T20:29:10Z",
        "closed_at": "2017-02-15T20:17:10Z",
        "merged_at": null,
        "body": "",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 129,
        "deletions": 125,
        "changed_files": 14,
        "created_at": "2017-01-31T19:17:27Z",
        "closed_at": "2017-03-24T00:19:13Z",
        "merged_at": null,
        "body": "This moves a common case that occurs during every parse off the error path.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 7922,
        "deletions": 5650,
        "changed_files": 146,
        "created_at": "2017-01-31T02:31:53Z",
        "closed_at": "2017-01-31T17:17:33Z",
        "merged_at": "2017-01-31T17:17:33Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 11,
        "changed_files": 2,
        "created_at": "2017-01-30T23:36:59Z",
        "closed_at": "2017-02-10T00:32:09Z",
        "merged_at": "2017-02-10T00:32:09Z",
        "body": "Fix python compatibility test when a new generated code public imports an old version(2.6.1 or older) generated code.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-01-30T17:41:58Z",
        "closed_at": "2017-01-30T18:58:57Z",
        "merged_at": "2017-01-30T18:58:57Z",
        "body": "We explicitly don't do this when targeting .NET 3.5, where the\r\ninterface doesn't exist.\r\n\r\nNo implementation is required, as we're already implementing\r\neverything we need for IList<T>.\r\n\r\nFixes #2041.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 216,
        "deletions": 24,
        "changed_files": 8,
        "created_at": "2017-01-28T22:25:25Z",
        "closed_at": "2017-01-31T16:03:45Z",
        "merged_at": null,
        "body": "Hope these [FreeBSD local patches](https://svnweb.freebsd.org/ports/head/devel/protobuf/files/) could be merged.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 116,
        "deletions": 116,
        "changed_files": 3,
        "created_at": "2017-01-27T19:54:07Z",
        "closed_at": "2017-01-28T23:31:44Z",
        "merged_at": "2017-01-28T23:31:44Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2017-01-26T18:24:25Z",
        "closed_at": "2018-06-12T20:59:55Z",
        "merged_at": null,
        "body": "The string argument has no namespace. It will cause \"ambiguous symbol\" compiling error in the situation that another \"string\" is defined in some other header files.",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 55,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-01-26T11:43:36Z",
        "closed_at": "2017-02-13T14:35:42Z",
        "merged_at": null,
        "body": "So far this PR just includes a shell script for running inside a https://github.com/pypa/manylinux CentOS5 build container. It will produce statically linked, `cpp-implementation` enabled, python2 and python3 compatible wheels for whatever arch of manylinux builder it's run inside of.\r\n\r\nIt seems protobuf requires a much newer version of autotools that is present in CentOS5 so this has to download and install newer versions of those first. I'm not sure if there's a better way to do this upgrade (yum backports somewhere?), I'm a bit new to the RedHat ecosystem.\r\n\r\nRun this like\r\n\r\n```\r\ndocker run -w /io/protobuf -v $(pwd):/io/protobuf --rm \\\r\n    quay.io/pypa/manylinux1_x86_64 python/manylinux-build.sh\r\n```\r\n\r\nAnd it will dump wheels into `python/dist` for you.\r\n\r\nSee also #2623 ",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-01-26T00:45:48Z",
        "closed_at": "2018-06-25T22:08:05Z",
        "merged_at": null,
        "body": "Add link to php implementation https://github.com/protobuf-php/protobuf",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-01-26T00:24:05Z",
        "closed_at": "2017-01-26T22:00:09Z",
        "merged_at": "2017-01-26T22:00:09Z",
        "body": "Fixes #2316",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-01-26T00:12:31Z",
        "closed_at": "2017-01-26T22:14:35Z",
        "merged_at": "2017-01-26T22:14:35Z",
        "body": "This fixes #2624",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 61,
        "deletions": 2,
        "changed_files": 6,
        "created_at": "2017-01-25T23:45:51Z",
        "closed_at": "2017-01-27T21:17:55Z",
        "merged_at": "2017-01-27T21:17:55Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-01-25T21:05:52Z",
        "closed_at": "2017-02-24T20:52:54Z",
        "merged_at": "2017-02-24T20:52:54Z",
        "body": "FreeBSD compatibility to be able to build tensorflow through bazel",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 242,
        "deletions": 242,
        "changed_files": 2,
        "created_at": "2017-01-25T16:59:19Z",
        "closed_at": "2017-01-25T22:45:18Z",
        "merged_at": "2017-01-25T22:45:18Z",
        "body": "Notice that the arrays themselves are __nullable, but the ObjectType pointers inside the arrays are __nonnullable.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 402,
        "deletions": 201,
        "changed_files": 12,
        "created_at": "2017-01-25T01:40:18Z",
        "closed_at": "2017-02-15T20:16:58Z",
        "merged_at": null,
        "body": "This allows more compact comparisons (1 byte instead of 4 byte immediates on x86) for each possible wire/tag inside each field.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 5851,
        "deletions": 1,
        "changed_files": 32,
        "created_at": "2017-01-23T22:53:17Z",
        "closed_at": "2017-01-27T18:18:36Z",
        "merged_at": "2017-01-27T18:18:36Z",
        "body": "Note: Files under python/compatibility_tests/v2.5.0/protos/ and python/compatibility_tests/v2.5.0/tests/ are copied from v2.5.0",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-01-23T21:28:25Z",
        "closed_at": "2017-01-24T21:35:51Z",
        "merged_at": "2017-01-24T21:35:51Z",
        "body": "The Protobuf library doesn\u2019t require the 7.1 deployment target so\nreverting it back to 7.0",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-01-23T18:41:02Z",
        "closed_at": "2017-01-23T21:27:47Z",
        "merged_at": null,
        "body": "The Protobuf library doesn\u2019t require the 7.1 deployment target so\nreverting it back to 7.0",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 1855,
        "deletions": 17,
        "changed_files": 33,
        "created_at": "2017-01-21T00:51:42Z",
        "closed_at": "2018-06-11T20:41:01Z",
        "merged_at": null,
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-01-20T23:58:44Z",
        "closed_at": "2017-01-23T17:51:29Z",
        "merged_at": "2017-01-23T17:51:29Z",
        "body": "This fixes issue #2610.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-01-20T21:03:14Z",
        "closed_at": "2017-03-07T00:48:55Z",
        "merged_at": "2017-03-07T00:48:54Z",
        "body": "incremental solution for https://github.com/google/protobuf/issues/156\r\n\r\nthe memory leak is caused by this call to copyreg:\r\n\r\nhttps://github.com/google/protobuf/blob/39f9b43219bc5718b659ed72a2130a7b2ce66108/python/google/protobuf/internal/python_message.py#L182\r\n\r\nthe default comparator fails to detect duplicate entries, effectively filling the internal table at  `copyreg.__dict__['dispatch_table']` until the machine runs out of memory\r\n\r\ncan probably implement `__cmp__` at some point before that call as a technically more correct solution - a cache saves on cycles though, and is optimal for my use case, yada yada, hope this progresses a fix",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 3888,
        "deletions": 2459,
        "changed_files": 5,
        "created_at": "2017-01-20T19:40:54Z",
        "closed_at": "2017-01-23T19:43:58Z",
        "merged_at": "2017-01-23T19:43:58Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-01-19T19:56:42Z",
        "closed_at": "2017-02-14T01:03:55Z",
        "merged_at": "2017-02-14T01:03:55Z",
        "body": "TYPE_BOOL is defined as a macro in <ConditionalMacros.h>, which gets implicitly included in almost all iOS source files.\r\n\r\nThis fixes complaints like http://go/soverflow/15759559\r\n\r\nFor some context, here is how TYPE_BOOL is defined in ConditionalMacros.h\r\n\r\n  #ifdef __cplusplus\r\n     #define TYPE_BOOL                1\r\n  #else\r\n     #define TYPE_BOOL                0\r\n  #endif",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-01-17T08:25:01Z",
        "closed_at": "2017-03-08T23:28:35Z",
        "merged_at": "2017-03-08T23:28:35Z",
        "body": "https://github.com/google/protobuf/issues/2428",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-01-17T06:59:12Z",
        "closed_at": "2017-01-28T00:40:54Z",
        "merged_at": "2017-01-28T00:40:54Z",
        "body": "I have already tested the compile process on centos. CLA fixed.",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 86,
        "deletions": 10,
        "changed_files": 10,
        "created_at": "2017-01-16T20:22:11Z",
        "closed_at": "2017-01-26T01:41:23Z",
        "merged_at": null,
        "body": "",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 160,
        "deletions": 71,
        "changed_files": 3,
        "created_at": "2017-01-13T15:02:13Z",
        "closed_at": "2017-01-17T15:10:18Z",
        "merged_at": "2017-01-17T15:10:18Z",
        "body": "- The Timestamp proto does not allow for negative nanos fields, so the seconds\r\n  must be shifted and a positive nanos then applied.\r\n- Tweak the helpers on Duration to make it clear there is no \"base\" time\r\n  involved.\r\n- Update the unittests for duration and timestamp to cover positive and\r\n  negative NSTimeIntervals and what their impact is on the protos.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-01-13T08:39:04Z",
        "closed_at": "2017-01-17T06:54:39Z",
        "merged_at": null,
        "body": "fix compile error on centos in metadata.h for constructors.\r\nand I have already tested the compile process on centos.",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 82,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2017-01-12T21:16:46Z",
        "closed_at": "2017-08-03T20:46:38Z",
        "merged_at": null,
        "body": "To address #2583 ",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-01-12T18:45:08Z",
        "closed_at": "2017-01-13T17:15:55Z",
        "merged_at": null,
        "body": "Method Builder#clone() has been changed to bypass Java 1.6 compiler issue.\r\n\r\ngoogle/protobuf#2428",
        "comments": 12
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-01-12T17:51:29Z",
        "closed_at": "2017-01-12T18:55:28Z",
        "merged_at": "2017-01-12T18:55:28Z",
        "body": "This allows easy use of Bazel's java_proto_library native rule.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 14,
        "deletions": 14,
        "changed_files": 3,
        "created_at": "2017-01-12T00:02:47Z",
        "closed_at": "2017-02-15T20:17:04Z",
        "merged_at": null,
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-01-10T20:18:31Z",
        "closed_at": "2017-09-08T17:23:15Z",
        "merged_at": "2017-09-08T17:23:15Z",
        "body": "I inlined the one function call from `strutil.h` into `pyext/message.cc`. The `strutil.h`  file doesn't get install, so if you're trying to build the python extension you won't have it in your include path (see #1197).\r\n\r\nI think the same reasoning as e.g. https://github.com/grpc/grpc/pull/3133 applies here.\r\n\r\n(also on a different note, why don't the pip releases include the python cpp implementation? is that on purpose or an oversight?)",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-01-09T07:01:06Z",
        "closed_at": "2017-02-07T01:47:28Z",
        "merged_at": null,
        "body": "Fast fix for this issue https://github.com/google/protobuf/issues/2465",
        "comments": 18
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-01-07T01:06:03Z",
        "closed_at": "2017-03-01T18:43:29Z",
        "merged_at": "2017-03-01T18:43:29Z",
        "body": "This is both more correct, and the build fails on AIX without it",
        "comments": 13
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-01-06T20:31:23Z",
        "closed_at": "2017-01-10T20:54:06Z",
        "merged_at": "2017-01-10T20:54:06Z",
        "body": "To make the test pass I needed to fix out-of-tree builds and add another\r\nbuild artifact to CLEANFILES.",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 242,
        "deletions": 3,
        "changed_files": 4,
        "created_at": "2017-01-05T21:58:35Z",
        "closed_at": "2017-01-05T23:28:38Z",
        "merged_at": "2017-01-05T23:28:38Z",
        "body": "Pull request #2517 caused cross compilations to start failing, because\r\nthe js_embed binary was being built to run on the target platform\r\ninstead of on the build machine. This change updates the Autotools build\r\nto use the AX_PROG_CXX_FOR_BUILD macro to find a suitable compiler for\r\nthe build machine and always use that when building js_embed.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 435,
        "deletions": 16,
        "changed_files": 11,
        "created_at": "2017-01-04T21:47:00Z",
        "closed_at": "2017-01-05T15:26:23Z",
        "merged_at": "2017-01-05T15:26:23Z",
        "body": "- If setting/clearing a repeated field/map that was objects, check the class\r\n  before checking the autocreator.\r\n- Just to be paranoid, don\u2019t mutate within copy/mutableCopy for the autocreated\r\n  classes to ensure there is less chance of issues if someone does something\r\n  really crazy threading wise.\r\n- Some more tests for the internal AutocreatedArray/AutocreatedDictionary\r\n  classes to ensure things are working as expected.\r\n- Add Xcode 8.2 to the full_mac_build.sh supported list.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 114,
        "deletions": 1,
        "changed_files": 5,
        "created_at": "2017-01-04T16:42:44Z",
        "closed_at": "2017-01-10T13:05:28Z",
        "merged_at": "2017-01-10T13:05:28Z",
        "body": "Fixes #2088.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-01-01T21:25:51Z",
        "closed_at": "2018-06-11T20:49:40Z",
        "merged_at": null,
        "body": "Happy New Year!",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 4732,
        "deletions": 3108,
        "changed_files": 132,
        "created_at": "2016-12-31T11:32:45Z",
        "closed_at": "2017-01-02T14:55:27Z",
        "merged_at": null,
        "body": "",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 76,
        "deletions": 51,
        "changed_files": 30,
        "created_at": "2016-12-28T21:21:31Z",
        "closed_at": "2016-12-30T05:31:08Z",
        "merged_at": "2016-12-30T05:31:08Z",
        "body": "",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-12-28T01:04:19Z",
        "closed_at": "2017-01-05T00:09:42Z",
        "merged_at": "2017-01-05T00:09:42Z",
        "body": "",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-12-27T09:00:57Z",
        "closed_at": "2016-12-27T19:00:47Z",
        "merged_at": "2016-12-27T19:00:47Z",
        "body": "embed.cc: In function \u2018std::string CEscape(const string&)\u2019:\r\nembed.cc:51:32: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\r\n   for (int i = 0; i < str.size(); ++i) {\r\n                                ^",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2016-12-23T12:52:24Z",
        "closed_at": "2016-12-28T21:33:37Z",
        "merged_at": "2016-12-28T21:33:37Z",
        "body": "",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-12-23T09:50:19Z",
        "closed_at": "2017-01-04T23:08:42Z",
        "merged_at": "2017-01-04T23:08:42Z",
        "body": "Restore include style fix (e3da722) that has been trampled by\r\nauto-generation of well_known_types_embed.cc",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2016-12-22T17:35:52Z",
        "closed_at": "2018-08-22T08:01:15Z",
        "merged_at": null,
        "body": "Just a small fix to the CMake module, quoting the executable as well as the output directory, in case there are spaces in those paths.\r\n\r\nMade on 3.0.x since that's what I assumed was a stable branch - not sure if the 3.1.x or 3.2.x branches I now see replace it or if all pulls should be against master, but this one is against 3.0.x since that's where I merged it personally and used it. Just a single commit so should be cherry-pickable.",
        "comments": 20
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 2,
        "changed_files": 4,
        "created_at": "2016-12-22T17:13:13Z",
        "closed_at": "2018-05-23T18:21:19Z",
        "merged_at": null,
        "body": "These are CMake changes, including an essential bugfix for `protobuf_MODULE_COMPATIBLE`, originally found in #1865 by @podsvirov - all I did was a `git rebase --onto` to get them on the 3.0.x branch.",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 15,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2016-12-21T21:33:34Z",
        "closed_at": "2017-01-12T16:32:37Z",
        "merged_at": "2017-01-12T16:32:37Z",
        "body": "Added the support for class level deprecation which will in turn also deprecate any fields that are currently using that type.\r\n\r\nIt was requested that support for deprecating a class in the c# code generation was added. In this implementation we deprecate the class as well as any fields that are also using that class. \r\n\r\nI think this ensures that users don't continue to use the class in other places, maybe some food for thought that its another option to allow for class->field level deprecation. ",
        "comments": 13
    },
    {
        "merged": false,
        "additions": 140,
        "deletions": 18,
        "changed_files": 1,
        "created_at": "2016-12-21T08:39:05Z",
        "closed_at": "2018-06-18T21:34:07Z",
        "merged_at": null,
        "body": "Service interface is now generated with PHP generator. This interface can than be implemented with ClientStub.",
        "comments": 16
    },
    {
        "merged": true,
        "additions": 32,
        "deletions": 14,
        "changed_files": 2,
        "created_at": "2016-12-21T01:44:27Z",
        "closed_at": "2016-12-22T08:27:03Z",
        "merged_at": "2016-12-22T08:27:03Z",
        "body": "With the lite proto runtime, the generated method `MergePartialFromCodedStream` uses a `LazyStringOutputStream` to avoid allocating strings that may not be needed. However, the current code ends up generating more code than necessary:\r\n1) A static `MutableUnknownFieldsFor$classname$` for each message class.\r\n2) A separate specialization of the template behind `NewPermanentCallback` for each message class, because the type is different for each.\r\n\r\nThis CL eliminates `MutableUnknownFieldsFor$classname$`, and creates a callback that calls the `mutable_unknown_fields` method directly on `_internal_metadata_`. Because all `_internal_metadata_` objects are of the same type (`::google::protobuf::internal::InternalMetadataWithArenaLite`), only one copy of the callback template is linked. This yields a code size reduction in programs using lite protos.\r\n\r\nThe appropriate specialization of NewPermanentCallback was missing from the stubs, so we add it.",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2016-12-21T00:41:51Z",
        "closed_at": "2016-12-21T21:45:50Z",
        "merged_at": "2016-12-21T21:45:50Z",
        "body": "Symbol is not yet available on older versions of Node.js and so this\r\ntest fails with them. This change just directly checks whether Symbol is\r\navailable before we try to use it.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 9,
        "changed_files": 1,
        "created_at": "2016-12-20T22:07:14Z",
        "closed_at": "2016-12-22T20:56:08Z",
        "merged_at": "2016-12-22T20:56:08Z",
        "body": "Chromium MemorySanitizer (MSan) reports a use-of-uninitialized-value\r\nwarning because of index_in_metadata_ attribute of EnumGenerator\r\nclass (introduced in 5a76e633ea9b5adb215e93fdc11e1c0c08b3fc74). Fix\r\nit by initializing it to 0.",
        "comments": 12
    },
    {
        "merged": true,
        "additions": 24,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2016-12-20T17:13:44Z",
        "closed_at": "2016-12-21T15:21:15Z",
        "merged_at": "2016-12-21T15:21:15Z",
        "body": "In pull request #2517 I made this change for the CMake and autotools\r\nbuilds but forgot to do it for the Bazel build. In this pull request I made a\r\nfix for the Bazel build and also updated the autotools build so that it works\r\nproperly with out-of-tree builds.",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 18,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2016-12-20T00:41:43Z",
        "closed_at": "2017-11-29T18:07:36Z",
        "merged_at": "2017-11-29T18:07:36Z",
        "body": "Given the protobuf file:\r\n\r\n```proto\r\nmessage OperatorPerformanceRecord {\r\n  // ... \r\n\r\n  repeated OperatorServiceGroupPerformanceRecord operator_service_group_performance_records = 10;\r\n  repeated TimebandRecord timeband_records = 11;\r\n}\r\n\r\nmessage OperatorServiceGroupPerformanceRecord {\r\n  string name = 1;\r\n  // ...\r\n}\r\n\r\nmessage TimebandRecord {\r\n  int32 timeband = 1;\r\n\r\n  // ...\r\n}\r\n```\r\n\r\nOn assignment of a `repeated` field from Ruby-land, the C function `check_repeated_field_type` checks the following:\r\n\r\n1. the function has been called in the correct circumstances (the field you're assigning to is of type 'repeated')\r\n2. the object you're trying to assign to your field is an instance of `Google::Protobuf::RepeatedField` \r\n3. the primitive field type of the `RepeatedField` object matches that of the field you're assigning to\r\n4. if the field is type 'MESSAGE' or 'ENUM', it checks the class of the `RepeatedField` against that of the field\r\n\r\nWhilst trying to use repeated message fields, as in the example above, the 4th check doesn't work out as intended.\r\n\r\nBecause `self->field_type_class` returns the Ruby class created by a Descriptor, but `get_def_obj` returns the Descriptor object used to generate the Ruby class, comparing the two objects will never be successful.\r\n\r\nThis patch passes the descriptor returned from `get_def_obj` into `Descriptor_msgclass`, so we compare `msgclass` to `msgclass`.\r\n\r\n--- \r\n\r\nMy method for debugging this, using this patch on master:\r\n\r\n```\r\ndiff --git a/ruby/ext/google/protobuf_c/storage.c b/ruby/ext/google/protobuf_c/storage.c\r\nindex 3ff2bda..d1ca38f 100644\r\n--- a/ruby/ext/google/protobuf_c/storage.c\r\n+++ b/ruby/ext/google/protobuf_c/storage.c\r\n@@ -599,6 +599,15 @@ static void check_repeated_field_type(VALUE val, const upb_fielddef* field) {\r\n       self->field_type == UPB_TYPE_ENUM) {\r\n     if (self->field_type_class !=\r\n         get_def_obj(upb_fielddef_subdef(field))) {\r\n+\r\n+      printf(\"[PEACH-DEBUG] type invalid - error incoming shortly...\\n\");\r\n+      printf(\"[PEACH-DEBUG] self->field_type_class:\\n\");\r\n+      rb_p(self->field_type_class);\r\n+      printf(\"[PEACH-DEBUG] get_def_obj(upb_fielddef_subdef(field)):\\n\");\r\n+      rb_p(get_def_obj(upb_fielddef_subdef(field)));\r\n+      printf(\"[PEACH-DEBUG] attempting to ascertain correct comparison variables...\\n\");\r\n+      rb_p(Descriptor_msgclass(get_def_obj(upb_fielddef_subdef(field))));\r\n+\r\n       rb_raise(rb_eTypeError,\r\n                \"Repeated field array has wrong message/enum class\");\r\n     }\r\n```\r\n\r\nWhich displays the following:\r\n\r\n<img width=\"603\" alt=\"screen shot 2016-12-20 at 00 27 39\" src=\"https://cloud.githubusercontent.com/assets/816243/21334002/ea106294-c64b-11e6-9dde-65f76154234b.png\">\r\n\r\n---\r\n\r\nThis PR is more for discussion rather than a direct unit of work to be merged - I'm not positive this is the best way to solve the problem. I don't have a lot of experience dealing with the C backend of the protobuf library. For instance, I'm calling the hook Ruby calls instead of any internal API.\r\n\r\nThat said, this works for me and allows me to continue working on my project in parallel of discussion of a correct solution. I would also like to contribute some documentation & regression tests as well as this patch - repeated fields in Ruby are a little \"sink-or-swim\" at the moment!\r\n",
        "comments": 20
    },
    {
        "merged": true,
        "additions": 35,
        "deletions": 325,
        "changed_files": 6,
        "created_at": "2016-12-19T19:53:22Z",
        "closed_at": "2016-12-19T22:49:11Z",
        "merged_at": "2016-12-19T22:49:11Z",
        "body": "Until now this file was just checked into the repo, but actually it\r\nshould be generated from any.js, struct.js, and timestamp.js. This\r\nchange updates the build system to make this happen. To make it work I\r\nalso had to remove some C++11 features from embed.cc.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 77,
        "deletions": 28,
        "changed_files": 2,
        "created_at": "2016-12-19T09:45:57Z",
        "closed_at": "2017-01-08T19:50:51Z",
        "merged_at": "2017-01-08T19:50:51Z",
        "body": "Fix for that issue https://github.com/google/protobuf/issues/2503\r\n\r\nDecoding before:\r\n```\r\n+----------------------+----------------------+\r\n| Original             | Decoded              |\r\n+----------------------+----------------------+\r\n| 10000                | 10000                |\r\n| 100000               | 100000               |\r\n| 1000000              | 1000000              |\r\n| 10000000             | 10000000             |\r\n| 100000000            | 100000000            |\r\n| 1000000000           | 13884901888          |\r\n| 10000000000          | 22884901888          |\r\n| 100000000000         | 87115098112          |\r\n| 1000000000000        | 1021474836480        |\r\n| 10000000000000       | 10017179869184       |\r\n| 100000000000000      | 99991410065408       |\r\n| 1000000000000000     | 999982820130816      |\r\n| 10000000000000000    | 10000017179869184    |\r\n| 100000000000000000   | 100000021474836480   |\r\n| 1000000000000000000  | 999999995705032704   |\r\n+----------------------+----------------------+\r\n```\r\n\r\nDecoding now:\r\n```\r\n+----------------------+---------------------+\r\n| Original             | Decoded             |\r\n+----------------------+---------------------+\r\n| 1000000             | 1000000             | \r\n| 10000000            | 10000000            | \r\n| 100000000           | 100000000           | \r\n| 1000000000          | 1000000000          | \r\n| 10000000000         | 10000000000         | \r\n| 100000000000        | 100000000000        | \r\n| 1000000000000       | 1000000000000       | \r\n| 10000000000000      | 10000000000000      | \r\n| 100000000000000     | 100000000000000     | \r\n| 1000000000000000    | 1000000000000000    | \r\n| 10000000000000000   | 10000000000000000   | \r\n| 100000000000000000  | 100000000000000000  | \r\n| 1000000000000000000 | 1000000000000000000 |\r\n+---------------------+---------------------+\r\n```\r\n\r\nIm not sure about x32 PHP (dont need it) but good work on x64",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2016-12-16T10:42:49Z",
        "closed_at": "2016-12-16T12:04:41Z",
        "merged_at": "2016-12-16T12:04:41Z",
        "body": "Fixes #2511.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-12-16T05:58:46Z",
        "closed_at": "2017-04-19T18:28:55Z",
        "merged_at": "2017-04-19T18:28:55Z",
        "body": "This is a small change on the protobuf.bzl but very reasonable and useful.\r\n\r\nIn practice, a few protobuf client (like tensorflow, see below and etc) would call ```_proto_gen_impl(ctx)``` indirectly to generate proto implementations. However by the current definition of bazel's ctx.action rule (http://www.bazel.io/versions/master/docs/skylark/lib/ctx.html#action), the default user's custom shell env (PATH/LD_LIBRARY_PATH) is not passed to the compiled protoc binary because the user_default_shell_env is set to be ```False``` as default. This will invoke link error cuz users may link protoc with a customized library. There are a lot of reports on this issue.\r\n\r\nIn principle, when calling ```_proto_gen_impl(ctx)``` to generate proto impls, we should pass user's env to the protoc binary.\r\n\r\nAnother small change is to delete an extra space. (a bonus created by my vim editor).\r\n\r\nPlease see some issues related to this small CL:\r\nhttps://github.com/tensorflow/tensorflow/issues/3261\r\n\r\nThis change will not affect any other reasonable implementations.\r\n",
        "comments": 12
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2016-12-16T00:30:39Z",
        "closed_at": "2018-03-21T00:16:42Z",
        "merged_at": null,
        "body": "In Clang older than 3.8, the compiler is not happy about _Pragma(\"clang diagnostic push\").",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 942,
        "deletions": 1,
        "changed_files": 13,
        "created_at": "2016-12-16T00:23:28Z",
        "closed_at": "2016-12-20T00:51:44Z",
        "merged_at": "2016-12-20T00:51:44Z",
        "body": "",
        "comments": 14
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 11,
        "changed_files": 1,
        "created_at": "2016-12-15T21:26:32Z",
        "closed_at": "2016-12-20T00:18:46Z",
        "merged_at": "2016-12-20T00:18:46Z",
        "body": "",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2016-12-15T15:24:57Z",
        "closed_at": "2017-01-09T07:12:50Z",
        "merged_at": null,
        "body": "Fast fix for this issue https://github.com/google/protobuf/issues/2465",
        "comments": 11
    },
    {
        "merged": true,
        "additions": 35,
        "deletions": 12,
        "changed_files": 2,
        "created_at": "2016-12-15T00:50:29Z",
        "closed_at": "2017-01-07T00:58:22Z",
        "merged_at": "2017-01-07T00:58:22Z",
        "body": "* over-encoded varints (encoded in more bytes than are necessary).\r\n* truncated varints (>32 bits for 32-bit types).",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2016-12-14T22:05:53Z",
        "closed_at": "2016-12-15T21:15:22Z",
        "merged_at": "2016-12-15T21:15:22Z",
        "body": "",
        "comments": 11
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-12-13T19:09:10Z",
        "closed_at": "2016-12-13T23:19:35Z",
        "merged_at": "2016-12-13T23:19:35Z",
        "body": "If digits > 2, and int is 32 bit, line 999 overflows. It has been fixed\r\ninternally in CL 41203823.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 9,
        "changed_files": 2,
        "created_at": "2016-12-13T19:04:59Z",
        "closed_at": "2016-12-14T21:39:31Z",
        "merged_at": "2016-12-14T21:39:31Z",
        "body": "This #ifdef in hash.h causes us to give up on finding a hash function on\r\nAndroid, when there do seem to be hash functions available in practice.\r\nI also had to tweak a macro in map.h that was disabling on Android an\r\nallocator construct() method that we need.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2016-12-13T09:13:50Z",
        "closed_at": "2016-12-13T23:11:09Z",
        "merged_at": "2016-12-13T23:11:09Z",
        "body": "This changes fixes \"use of undeclared identifier 'INT_MAX'\"\r\ncompilation error.",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 162,
        "deletions": 37,
        "changed_files": 2,
        "created_at": "2016-12-12T23:19:23Z",
        "closed_at": "2016-12-14T00:31:02Z",
        "merged_at": "2016-12-14T00:31:02Z",
        "body": "This is basic and more tests will be added over time.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1059,
        "deletions": 1059,
        "changed_files": 19,
        "created_at": "2016-12-12T11:45:03Z",
        "closed_at": "2016-12-13T12:42:23Z",
        "merged_at": "2016-12-13T12:42:23Z",
        "body": "Same as https://github.com/grpc/grpc/pull/9060, but for google/protobuf.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 95,
        "deletions": 94,
        "changed_files": 16,
        "created_at": "2016-12-11T13:57:19Z",
        "closed_at": "2016-12-13T19:11:19Z",
        "merged_at": "2016-12-13T19:11:19Z",
        "body": "This is based on the not merged https://github.com/google/protobuf/pull/1506 pull request.\r\n*Internal function names are used as suggested in a comment there.\r\nIt is possible to build protobuf to the Universal Windows Platform with this.",
        "comments": 12
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2016-12-11T02:46:07Z",
        "closed_at": "2017-07-06T15:11:50Z",
        "merged_at": "2017-07-06T15:11:50Z",
        "body": "Observing the following script:\r\n\r\n```ruby\r\nrequire \"bundler/inline\"\r\n\r\ngemfile true do\r\n  source \"https://rubygems.org\"\r\n  gem \"google-protobuf\"\r\nend\r\nrequire \"google/protobuf/well_known_types\"\r\n\r\ntime = Time.now\r\np time.to_f\r\np time.usec\r\n\r\ntime_pb = Google::Protobuf::Timestamp.new.tap{ |e| e.from_time(time) }\r\np time_pb\r\n\r\ntime2 = time_pb.to_time\r\np time2.to_f\r\np time2.usec\r\n\r\n\r\np time == time2\r\n__END__\r\nResolving dependencies...\r\nUsing google-protobuf 3.1.0\r\nUsing bundler 1.13.6\r\n1481419172.3675368\r\n367536\r\n<Google::Protobuf::Timestamp: seconds: 1481419172, nanos: 367536969>\r\n1481419172.367537\r\n367537\r\nfalse\r\n```\r\n\r\nWhile using the `Google::Protobuf::Timestamp` class some millisecond accuracy is lost due to floating point handling in ruby.\r\nThis can be fixed by using the [quo](https://ruby-doc.org/core-2.2.0/Numeric.html#method-i-quo) method instead of a less accurate floating point division.\r\n\r\nI adapted the tests to demonstrate the problem and changed the `to_f` method to use `quo` instead.",
        "comments": 13
    },
    {
        "merged": false,
        "additions": 22,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2016-12-09T22:32:16Z",
        "closed_at": "2018-06-29T23:20:38Z",
        "merged_at": null,
        "body": "This change allows instructing the Ruby compiler to use `require_relative` instead of `require` for imports.",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2016-12-09T18:55:45Z",
        "closed_at": "2016-12-09T21:45:18Z",
        "merged_at": "2016-12-09T21:45:18Z",
        "body": "There have been some reports that this necessary to prevent build\r\nfailures in some environments. It makes sense to do this anyway since\r\nthe result of this macro is ultimately assigned to uint32 in the\r\ngenerated code.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 13,
        "changed_files": 2,
        "created_at": "2016-12-09T16:26:42Z",
        "closed_at": "2016-12-09T19:38:21Z",
        "merged_at": "2016-12-09T19:38:21Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2016-12-09T08:35:11Z",
        "closed_at": "2016-12-13T00:27:16Z",
        "merged_at": "2016-12-13T00:27:16Z",
        "body": "",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-12-09T03:04:18Z",
        "closed_at": "2018-06-23T04:35:57Z",
        "merged_at": "2018-06-23T04:35:57Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2016-12-09T00:01:49Z",
        "closed_at": "2016-12-09T02:54:15Z",
        "merged_at": "2016-12-09T02:54:14Z",
        "body": "Updated the location for `protobuf-maven-plugin`",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 9,
        "changed_files": 4,
        "created_at": "2016-12-08T19:35:09Z",
        "closed_at": "2016-12-08T22:39:20Z",
        "merged_at": "2016-12-08T22:39:20Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 216,
        "deletions": 6,
        "changed_files": 11,
        "created_at": "2016-12-08T17:14:24Z",
        "closed_at": "2016-12-08T19:02:32Z",
        "merged_at": "2016-12-08T19:02:32Z",
        "body": "- Check the parent file options for deprecation when deciding to tag Messages\r\n  and Enums as deprecated.\r\n- Within the generated source push/pop the warning for implementing deprecated\r\n  things around a deprecated class implementation.\r\n- Annotate the methods generated for extension fields as deprecated.\r\n- Add a testing .proto file that covers deprecated fields, messages, enums,\r\n  enum values and compile it into the unittests to confirm things compile\r\n  cleanly.\r\n- Add a testing .proto file that uses the file level option to make everything\r\n  deprecated and compile it into the unittests to confirm things compile\r\n  cleanly.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2016-12-08T12:51:16Z",
        "closed_at": "2017-10-05T15:28:52Z",
        "merged_at": null,
        "body": "The proto_gen rule runs with incomplete dependencies when using a custom toolchain (via the use of Bazel's --crosstool_top flag). The rule currently executes the protoc binary without including toolchain dependencies. Since the protoc binary is dynamically linked, including the toolchain as a dependency to its execution is necessary so that it is listed explicitly in the action's inputs. ",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 94,
        "deletions": 91,
        "changed_files": 13,
        "created_at": "2016-12-08T12:29:59Z",
        "closed_at": "2016-12-08T19:23:36Z",
        "merged_at": "2016-12-08T19:23:36Z",
        "body": "_xxx_default_instance_ symbols are used in inline functions. We have\r\nto export them to avoid undefined reference link errors.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-12-08T09:09:20Z",
        "closed_at": "2016-12-08T19:22:39Z",
        "merged_at": "2016-12-08T19:22:39Z",
        "body": "This changes fixes \"use of undeclared identifier 'assert'\"\r\ncompilation error.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 984,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2016-12-07T22:55:03Z",
        "closed_at": "2016-12-08T18:49:13Z",
        "merged_at": "2016-12-08T18:49:13Z",
        "body": "",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2016-12-07T22:40:32Z",
        "closed_at": "2016-12-07T23:41:48Z",
        "merged_at": "2016-12-07T23:41:48Z",
        "body": "Currently the default for protobuf on Android is to silently drop all log\r\nmessages. This makes debugging difficult because things like GOOGLE_LOG(FATAL)\r\nwill crash the process without actually logging a useful error.\r\n\r\nThis CL changes the logging so that by default we send messages for all log\r\nlevels to logcat (and stderr). Users can override this by setting\r\nGOOGLE_PROTOBUF_MIN_LOG_LEVEL. Also, that option was not being respected for\r\nnon-Android platforms so I went ahead and fixed that to make things consistent.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1274,
        "deletions": 1,
        "changed_files": 10,
        "created_at": "2016-12-07T18:43:39Z",
        "closed_at": "2018-06-08T22:41:26Z",
        "merged_at": null,
        "body": "",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 8,
        "changed_files": 3,
        "created_at": "2016-12-07T07:18:59Z",
        "closed_at": "2016-12-12T20:26:58Z",
        "merged_at": "2016-12-12T20:26:58Z",
        "body": "This change has already been made in google's repo.\r\nReplicating the change here to unblock work on genproto.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-12-06T21:40:34Z",
        "closed_at": "2017-02-13T18:46:41Z",
        "merged_at": "2017-02-13T18:46:41Z",
        "body": "Now it's FAILED:\r\n```\r\n[ RUN      ] JsonUtilTest.ParsePrimitiveMapIn\r\n...\\src\\google\\protobuf\\util\\json_util_test.cc(206): error: Value of: ToJson(message, print_options)\r\n  Actual: \"{\\\"other\\\":\\\"\\\",\\\"things\\\":[],\\\"mapInput\\\":[]}\"\r\nExpected: \"{\\\"other\\\":\\\"\\\",\\\"things\\\":[],\\\"mapInput\\\":{}}\"\r\n...\\src\\google\\protobuf\\util\\json_util_test.cc(208): error: Value of: FromJson(ToJson(message, print_options), &other, parse_options)\r\n  Actual: false\r\nExpected: true\r\n[  FAILED  ] JsonUtilTest.ParsePrimitiveMapIn (0 ms)\r\n```\r\nWhen we use:\r\n```\r\nJsonPrintOptions print_options;\r\nprint_options.always_print_primitive_fields = true;\r\n```\r\nWe get broken maps printing via `DefaultValueObjectWriter`. He print `map` as `list`...",
        "comments": 14
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-12-06T18:20:21Z",
        "closed_at": "2016-12-07T21:39:10Z",
        "merged_at": "2016-12-07T21:39:10Z",
        "body": "Fixes: https://github.com/google/protobuf/issues/1174",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-12-06T00:02:55Z",
        "closed_at": "2016-12-06T01:27:50Z",
        "merged_at": "2016-12-06T01:27:50Z",
        "body": "including endian.h in stubs/port.h and checking BYTE_ORDER.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 9,
        "changed_files": 1,
        "created_at": "2016-12-05T18:20:52Z",
        "closed_at": "2016-12-06T12:47:13Z",
        "merged_at": null,
        "body": "This fix a js failure but does not fix all the test.\r\n\r\n```\r\n  $ bazel test //:py_wire_format_test //:py_unknown_fields_test //:py_text_format_test //:py_text_encoding_test //:py_symbol_database_test //:py_service_reflection_test //:py_reflection_test //:py_proto_builder_test //:py_message_test //:py_message_factory_test //:py_json_format_test //:py_generator_test //:py_descriptor_test //:py_descriptor_pool_test //:py_descriptor_database_test //:protobuf_test --test_summary=none\r\nINFO: Analysed 16 targets.\r\nINFO: Found 16 test targets...\r\nFAIL: //:py_descriptor_pool_test (redacted)\r\nFAIL: //:py_generator_test (redacted)\r\nFAIL: //:py_unknown_fields_test (redacted)\r\nFAIL: //:py_text_format_test (redacted)\r\nFAIL: //:py_json_format_test (redacted)\r\nFAIL: //:py_descriptor_test (redacted)\r\nFAIL: //:py_reflection_test (redacted)\r\nFAIL: //:py_message_test (redacted)\r\nFAIL: //:py_message_factory_test (redacted)\r\nINFO: Elapsed time: 0.646s, Critical Path: 0.47s\r\nINFO: Build completed, 9 tests FAILED, 10 total actions\r\n\r\nExecuted 9 out of 16 tests: 7 tests pass and 9 fail locally.\r\nThere were tests whose specified size is too big. Use the --test_verbose_timeout_warnings command line option to see which ones these are.\r\n```",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2016-12-05T18:17:47Z",
        "closed_at": "2016-12-06T01:21:44Z",
        "merged_at": "2016-12-06T01:21:44Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 28,
        "deletions": 17,
        "changed_files": 4,
        "created_at": "2016-12-04T20:38:47Z",
        "closed_at": "2018-03-20T22:27:54Z",
        "merged_at": null,
        "body": "This fixes major performance issue with JsonStringToMessage(). Current version\r\nof StringOutputStream is really slow outside Google. This is because\r\nSTLStringResizeUninitialized() is un-optimized (it has to zero out the\r\nre-sized bytes). And STLStringResizeUninitialized() is invoked\r\nrepeatedly everytime a token is written.",
        "comments": 12
    },
    {
        "merged": true,
        "additions": 74,
        "deletions": 7,
        "changed_files": 4,
        "created_at": "2016-12-03T15:49:06Z",
        "closed_at": "2017-01-07T00:59:48Z",
        "merged_at": "2017-01-07T00:59:48Z",
        "body": "Fixes #2438\r\n\r\nMoving of the nested `GenerateClass` and `GenerateEnum` messages before `GenerateClassRegistration` ensures that extensions defined in the outer message that use the nested messages work correctly now. Previously the extension definition proceeded the message definition, causing an exception.",
        "comments": 11
    },
    {
        "merged": true,
        "additions": 1058,
        "deletions": 41,
        "changed_files": 10,
        "created_at": "2016-12-03T06:57:10Z",
        "closed_at": "2016-12-06T19:07:10Z",
        "merged_at": "2016-12-06T19:07:10Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 6509,
        "deletions": 5231,
        "changed_files": 63,
        "created_at": "2016-12-02T23:35:48Z",
        "closed_at": "2016-12-08T19:16:49Z",
        "merged_at": "2016-12-08T19:16:49Z",
        "body": "1. Generate single file for each message.\r\n2. Lazily initiate metadata.\r\nFixes #2267 ",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 80,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2016-12-02T00:50:41Z",
        "closed_at": "2016-12-02T18:58:21Z",
        "merged_at": "2016-12-02T18:58:21Z",
        "body": "Integer.MAX_SIZE (0x7FFFFFF) #2228\r\n\r\nM java/core/src/main/java/com/google/protobuf/CodedInputStream.java\r\n Set DEFAULT_SIZE_LIMIT to Integer.MAX_SIZE (Was 64MB). This is how it was\r\n in pre-2.7.0 pb. Changed size check to an overflow-conscious test (as it\r\n is later in tryRefillBuffer (making sizeLimit a long was to disruptive).\r\n\r\nM java/core/src/test/java/com/google/protobuf/CodedInputStreamTest.java\r\n Add two tests that echo tests recently added over in c++ to test parse\r\n of message sizes that are approach and are beyond the size limit.",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 424,
        "deletions": 198,
        "changed_files": 4,
        "created_at": "2016-11-30T18:50:19Z",
        "closed_at": "2016-11-30T22:06:18Z",
        "merged_at": "2016-11-30T22:06:18Z",
        "body": "Swift generators should default to CamelCasing the proto package and prefixing\r\nsymbols with that, but this option allows developers to override that behavior\r\nwith something custom if they desire.\r\n\r\nFixes https://github.com/google/protobuf/issues/1833",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-11-28T11:15:47Z",
        "closed_at": "2016-11-29T17:27:32Z",
        "merged_at": "2016-11-29T17:27:32Z",
        "body": "commit 98835fb8f8 broke use of protobuf as shared library on Windows. Example\r\nerror message:\r\n\r\n  error LNK2001: unresolved external symbol \"class google::protobuf::internal::ExplicitlyConstructed<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > google::protobuf::internal::fixed_address_empty_string\"",
        "comments": 14
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-11-24T17:36:54Z",
        "closed_at": "2018-01-17T18:22:09Z",
        "merged_at": null,
        "body": "This sets the dotnet sdk version to preview2. By default, dotnet.exe picks the latest dotnet sdk and this solution doesn't yet work with preview3, which I have installed. This file is copied from:\r\nhttps://github.com/GoogleCloudPlatform/google-cloud-dotnet/blob/master/global.json\r\n\r\n```\r\nC:\\Users\\cameron>dir /b \"C:\\Program Files\\dotnet\\sdk\"\r\n1.0.0-preview2-003131\r\n1.0.0-preview3-004056\r\n```",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-11-24T14:54:13Z",
        "closed_at": "2016-12-03T18:00:36Z",
        "merged_at": null,
        "body": "Reference #2414 ",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-11-23T10:20:27Z",
        "closed_at": "2016-12-07T21:34:31Z",
        "merged_at": "2016-12-07T21:34:31Z",
        "body": "fixed_address_empty_string and <classname>_default_instance_ symbols\r\nare used in inline functions. We have to export them properly to\r\navoid undefined reference link errors.",
        "comments": 11
    },
    {
        "merged": true,
        "additions": 1229,
        "deletions": 119,
        "changed_files": 4,
        "created_at": "2016-11-22T23:44:26Z",
        "closed_at": "2016-12-01T22:50:53Z",
        "merged_at": "2016-12-01T22:50:53Z",
        "body": "",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 15654,
        "deletions": 13803,
        "changed_files": 297,
        "created_at": "2016-11-22T17:44:53Z",
        "closed_at": "2016-11-23T19:26:31Z",
        "merged_at": "2016-11-23T19:26:31Z",
        "body": "",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-11-21T20:09:06Z",
        "closed_at": "2016-11-22T21:34:28Z",
        "merged_at": "2016-11-22T21:34:28Z",
        "body": "Previously, this has been fixed on master in\r\n1f2dbc899b634f3236e1923a90683eebed283d52.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 10,
        "changed_files": 7,
        "created_at": "2016-11-21T17:22:42Z",
        "closed_at": "2016-11-22T16:48:41Z",
        "merged_at": "2016-11-22T16:48:41Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-11-21T08:39:35Z",
        "closed_at": "2016-11-21T20:05:58Z",
        "merged_at": "2016-11-21T20:05:58Z",
        "body": "Behavior of define GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER has been\r\naltered between 337a028 and cc8ca5b for C++.\r\n\r\nSee github issue #2385 for further details.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 30,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2016-11-19T19:03:27Z",
        "closed_at": "2016-12-08T19:17:10Z",
        "merged_at": "2016-12-08T19:17:10Z",
        "body": "Currently `JsonFormat.printer().includingDefaultValueFields.print(message)` will display *all* of the oneOf fields in a message.\r\n\r\nExample output for `TestOneof`\r\n```\r\n{\r\n  \"oneofInt32\": 0,\r\n  \"oneofNullValue\": null\r\n}\r\n```\r\n\r\nThis change updates the `includingDefaultValueFields` printer to only print out the oneOf value that is actually set:\r\n\r\n```\r\n{\r\n  \"oneofNullValue\": null\r\n}\r\n```",
        "comments": 15
    },
    {
        "merged": true,
        "additions": 60,
        "deletions": 18,
        "changed_files": 4,
        "created_at": "2016-11-19T01:39:31Z",
        "closed_at": "2016-11-21T18:32:25Z",
        "merged_at": "2016-11-21T18:32:25Z",
        "body": "The last up-integration from github to google3 was made at commit\r\ne28286fa05d8327fd6c5aa70cfb3be558f0932b8 but somehow the change in\r\nthat commit is not actually in the up-integration CL and as a result\r\nthat change was reverted by the down-integration. Restoring them\r\nshould make the jenkins tests running again.\r\n\r\nTried to rerun the up-integration script with both repos pined to the old versions but this time the jenkins changes showed up correct in the CL. Not sure where I made the mistake...",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 13,
        "changed_files": 4,
        "created_at": "2016-11-18T23:38:57Z",
        "closed_at": "2016-11-19T00:51:07Z",
        "merged_at": "2016-11-19T00:51:07Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-11-18T05:51:52Z",
        "closed_at": "2016-11-18T07:31:41Z",
        "merged_at": "2016-11-18T07:31:41Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 15282,
        "deletions": 13628,
        "changed_files": 291,
        "created_at": "2016-11-17T22:47:47Z",
        "closed_at": "2016-11-18T01:13:03Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-11-17T18:59:03Z",
        "closed_at": "2016-11-18T00:26:35Z",
        "merged_at": "2016-11-18T00:26:35Z",
        "body": "needed a grave here, not an apostrophy",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2016-11-17T17:05:43Z",
        "closed_at": "2016-11-18T00:23:56Z",
        "merged_at": "2016-11-18T00:23:56Z",
        "body": "Some compiler will report: 'error: integer constant is too large for long type'",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2016-11-17T00:06:30Z",
        "closed_at": "2018-06-23T04:36:10Z",
        "merged_at": null,
        "body": "assert_false fails sometimes for unknown reasons.\r\n\r\nReview to @xfxyjwf ",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 84,
        "deletions": 8,
        "changed_files": 8,
        "created_at": "2016-11-16T19:13:11Z",
        "closed_at": "2016-11-21T20:01:51Z",
        "merged_at": "2016-11-21T20:01:51Z",
        "body": "In php, class name cannot be \"Empty\". Modified code generator to (#2375) generate GPBEmpty instead (for google.protobuf.Empty only). Also change runtime code to work with the new generated code accordingly.",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-11-16T16:15:42Z",
        "closed_at": "2017-09-20T05:35:27Z",
        "merged_at": "2017-09-20T05:35:27Z",
        "body": "I opened an issue in the `Go` protobuf repo yesterday: https://github.com/golang/protobuf/issues/253 which showed an issue parsing a `null` JSON value for a `Timestamp` type.\r\n\r\nAccording to the [official documentation](https://developers.google.com/protocol-buffers/docs/proto3#json), `null` values in `json` will be treated as zero values:\r\n\r\n> If a value is missing in the JSON-encoded data or if its value is null, it will be interpreted as the appropriate default value when parsed into a protocol buffer. If a field has the default value in the protocol buffer, it will be omitted in the JSON-encoded data by default to save space. An implementation may provide options to emit fields with default values in the JSON-encoded output.",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 84,
        "deletions": 8,
        "changed_files": 8,
        "created_at": "2016-11-16T01:30:54Z",
        "closed_at": "2016-11-16T19:07:43Z",
        "merged_at": "2016-11-16T19:07:43Z",
        "body": "In php, class name cannot be \"Empty\". Modified code generator to generate GPBEmpty instead (for google.protobuf.Empty only). Also change runtime code to work with the new generated code accordingly.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 14815,
        "deletions": 13572,
        "changed_files": 638,
        "created_at": "2016-11-15T19:36:36Z",
        "closed_at": "2018-06-23T04:36:19Z",
        "merged_at": null,
        "body": "",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-11-15T00:48:10Z",
        "closed_at": "2018-06-23T04:36:34Z",
        "merged_at": null,
        "body": "To avoid `cannot find package \"google/protobuf\"` error",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-11-14T21:22:24Z",
        "closed_at": "2016-11-16T17:36:28Z",
        "merged_at": "2016-11-16T17:36:28Z",
        "body": "This changes fixes \"use of undeclared identifier 'INT_MAX'\"\r\ncompilation error.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-11-14T18:40:40Z",
        "closed_at": "2016-11-14T19:45:36Z",
        "merged_at": "2016-11-14T19:45:36Z",
        "body": "Fixes: https://github.com/google/protobuf/issues/1875",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2016-11-14T07:49:17Z",
        "closed_at": "2016-11-16T18:07:50Z",
        "merged_at": "2016-11-16T18:07:50Z",
        "body": "This class is declared to be final, but declares fields to be protected. Since the class is final, it can not be derived from, and the use of protected is confusing.",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 47,
        "deletions": 30,
        "changed_files": 15,
        "created_at": "2016-11-14T06:41:08Z",
        "closed_at": "2016-12-02T00:45:36Z",
        "merged_at": null,
        "body": "This commit brings the go_package option up-to-date with Google internal\r\nrepo.",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-11-11T09:01:38Z",
        "closed_at": "2016-11-11T18:45:54Z",
        "merged_at": "2016-11-11T18:45:54Z",
        "body": "this patch fixs #2356\r\n\r\nwhen static field `EMPTY_MAP_FIELD` in `MapFieldLite` is initilized on IBM J9, `putAll` which is overrided and calls `ensureMutable` is called in its super class `LinkedHashMap`, that causes `UnsupportedOperationException` is thrown as `isMutable` is false at that time. \r\n\r\n`LinkedHashMap` in Oracle JDK doesn't call `putAll`, so it's OK.\r\n\r\ncode below comes from JD of `java.util.LinkedHashMap` in `java.util.jar` of IBM J9\r\n```\r\n  public LinkedHashMap(Map<? extends K, ? extends V> paramMap)\r\n  {\r\n    this.accessOrder = false;\r\n    this.head = null;\r\n    this.tail = null;\r\n    putAll(paramMap);\r\n  }\r\n```\r\nIBM J9 version info:\r\n```\r\n$ java -version\r\njava version \"1.6.0\"\r\nJava(TM) SE Runtime Environment (build pap3260sr9fp1-20110208_03(SR9 FP1))\r\nIBM J9 VM (build 2.4, JRE 1.6.0 IBM J9 2.4 AIX ppc-32 jvmap3260sr9-20110203_74623 (JIT enabled, AOT enabled)\r\nJ9VM - 20110203_074623\r\nJIT  - r9_20101028_17488ifx3\r\nGC   - 20101027_AA)\r\nJCL  - 20110203_01\r\n```",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 20,
        "deletions": 14,
        "changed_files": 2,
        "created_at": "2016-11-11T02:15:08Z",
        "closed_at": "2017-02-24T23:41:10Z",
        "merged_at": "2017-02-24T23:41:10Z",
        "body": "It turns out calling StringOutputStream::Next()/BackUp() repeatedly is\r\nvery costly in opensource protobuf because it keeps resize() the string\r\nback and forth. The current JSON conversion API suffers this problem and\r\nleads to ridiculously long parsing time:\r\nhttps://github.com/google/protobuf/issues/2305#issuecomment-257785492\r\n\r\nThis change fixes the problem but caching the buffer of Next() and avoid\r\ncalling BackUp() as much as possible.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 27,
        "deletions": 10,
        "changed_files": 3,
        "created_at": "2016-11-10T18:49:27Z",
        "closed_at": "2016-11-11T20:31:52Z",
        "merged_at": "2016-11-11T20:31:52Z",
        "body": "This is done so that the same utility code can be used irrespective of whether MessageOptions belong to package name 'proto2' or 'google.protobuf'.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 187,
        "deletions": 17,
        "changed_files": 7,
        "created_at": "2016-11-09T21:46:43Z",
        "closed_at": "2016-11-10T19:20:50Z",
        "merged_at": "2016-11-10T19:20:50Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 13962,
        "deletions": 12812,
        "changed_files": 275,
        "created_at": "2016-11-09T17:41:06Z",
        "closed_at": "2016-11-18T01:12:24Z",
        "merged_at": null,
        "body": "This includes all internal changes going back to around mid-October.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 120,
        "deletions": 116,
        "changed_files": 4,
        "created_at": "2016-11-07T20:51:19Z",
        "closed_at": "2016-11-10T18:48:51Z",
        "merged_at": "2016-11-10T18:48:51Z",
        "body": "Renamed the pnacl version of atomicops.h into generic_C11_atomic, and flagged the mac version so that if atomic is enabled, it uses the generic C11 one.",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 155,
        "deletions": 3,
        "changed_files": 5,
        "created_at": "2016-11-04T21:26:23Z",
        "closed_at": "2016-11-08T19:38:34Z",
        "merged_at": "2016-11-08T19:38:34Z",
        "body": "Fix #2324 ",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-11-04T21:07:17Z",
        "closed_at": "2016-11-09T21:07:24Z",
        "merged_at": "2016-11-09T21:07:24Z",
        "body": "The message_lite.h file is a public file that gets pulled in by the public protobuf interface, Visual Studio 2015 projects with the flag /WX ([Threat Warnings as Errors](https://msdn.microsoft.com/en-us/library/thxezb7y.aspx)) fail compilation because of the warning generated by this line.\r\n\r\nWhile a boundary check should be in place regardless of platform, the intent of the code is obvious, all this change does is silence the warning.",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-11-04T17:02:30Z",
        "closed_at": "2016-11-04T19:19:46Z",
        "merged_at": "2016-11-04T19:19:46Z",
        "body": "The size parameter is only used in cases where the compiler supports\r\nsized delete, so when that's not available we need to specifically cast\r\nit to void to prevent a warning.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 77,
        "deletions": 14,
        "changed_files": 5,
        "created_at": "2016-11-04T06:16:04Z",
        "closed_at": "2016-11-09T19:49:56Z",
        "merged_at": "2016-11-09T19:49:55Z",
        "body": "* Uses build-helper-maven-plugin to add generated sources to the classpath\r\n* Fixes an issue building with newer versions of the maven-compiler-plugin\r\n  (See https://issues.apache.org/jira/browse/MCOMPILER-240)\r\n\r\nThis aids downstream packagers, for which only newer versions of the maven-compiler-plugin are available. See the issue on the [Fedora Mailing List][1].\r\n\r\n[1]: https://lists.fedoraproject.org/archives/list/java-devel@lists.fedoraproject.org/message/HDGYGFB3MGFVURS3CHOWCP2N6VIPMTEF/",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 54,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2016-11-03T13:26:17Z",
        "closed_at": "2016-11-15T18:31:15Z",
        "merged_at": "2016-11-15T18:31:15Z",
        "body": "There are two changes in this PR.\r\n\r\nFirst change implements `respond_to_missing?` which is expected by a ton of Ruby APIs, and is a [good thing](https://robots.thoughtbot.com/always-define-respond-to-missing-when-overriding) to do. The implementation shares a ton of code with `method_missing` and I briefly thought about factoring it out to a shared function but I decided against it since it would create an abstraction that is hard to follow.\r\n\r\nSecond change makes `==` a bit more lenient. The comparison will now return `false` instead of failing if a message is compared to something with a different type. This is how Ruby APIs generally work:\r\n\r\n```\r\n$ irb\r\nirb(main):001:0> Time.now == nil\r\n=> false\r\nirb(main):002:0> 7 == nil\r\n=> false\r\nirb(main):003:0> 7 == \"7\"\r\n=> false\r\nirb(main):004:0> Time.now == \"bacon\"\r\n=> false\r\n```",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 23,
        "deletions": 89,
        "changed_files": 5,
        "created_at": "2016-11-03T09:26:25Z",
        "closed_at": "2016-11-03T18:06:00Z",
        "merged_at": "2016-11-03T18:06:00Z",
        "body": "This affects cases with leading capital letters.\r\n\r\nThis breaks compatibility with previous C# releases, but\r\nfixes compatibility with other implementations.\r\n\r\nSee #2278 for details.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2016-11-02T14:12:43Z",
        "closed_at": "2016-11-02T18:54:13Z",
        "merged_at": "2016-11-02T18:54:13Z",
        "body": "When running >bazel test :protobuf_test a few compiler warnings came up.  They were centered around the usage of \"int\" as the loop counter where the value should have been a size_t.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 3727,
        "deletions": 14,
        "changed_files": 17,
        "created_at": "2016-11-02T10:13:08Z",
        "closed_at": "2017-01-19T06:46:06Z",
        "merged_at": "2017-01-19T06:46:05Z",
        "body": "Not ready for submission yet - more tests required.\r\nCreating as PR for feedback before going any further.\r\n\r\nWill eventually resolve #2143.\r\n\r\n// cc @gabm.",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-10-31T15:58:09Z",
        "closed_at": "2018-06-08T19:08:16Z",
        "merged_at": null,
        "body": "A 'require' won't work because the file is not on the $LOADPATH.\r\n\r\nFor example, with these definitions in a.proto and b.proto:\r\nsyntax = \"proto3\";\r\nimport \"b.proto\";\r\nmessage A {\r\n\trepeated B b = 1;\r\n}\r\n\r\nsyntax = \"proto3\";\r\nmessage B {\r\n\tstring text = 1;\r\n}\r\n\r\nWhen did \"load 'a_pb.rb'\" I used to get:\r\na_pb.rb:6:in `require': cannot load such file -- b_pb (LoadError)",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-10-31T02:48:03Z",
        "closed_at": "2016-10-31T18:00:43Z",
        "merged_at": "2016-10-31T18:00:43Z",
        "body": "The project is still in prerelease but it's worth knowing about and taking into consideration.",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-10-30T16:55:38Z",
        "closed_at": "2016-10-31T19:15:09Z",
        "merged_at": null,
        "body": "Because in case of packed encoding we know the number of records we can resize array only once instead of log(count) times.\n\nThis has major impact on another perf work I intend to do (Allowing use of structs instead of classes - in that case array of struct reallocation is way more costly).\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 120,
        "deletions": 0,
        "changed_files": 5,
        "created_at": "2016-10-28T19:54:52Z",
        "closed_at": "2018-03-20T22:34:13Z",
        "merged_at": null,
        "body": "This pull request relates to following issue: https://github.com/google/protobuf/issues/2066\n\nIt adds hash computation support for `::google::protobuf::Message` class and for all generated classes for messages in C++ code.\n\nThis pull request is **a draft** because I need advise or help about how to\n1) write tests for added code (unfortunately, I'm not familiar with google test framework and have not written much tests in my life),\n2) change or regenerate .pb.h files within protobuf repository according changes in these files' generator.\n\nAnd of course I need a code review.\n\n@xfxyjwf \nWe can move discussion from issue ticket here, if you want.\nAnd sorry for the delay. Life is hard sometimes.\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2016-10-28T12:32:47Z",
        "closed_at": "2016-11-02T22:03:19Z",
        "merged_at": "2016-11-02T22:03:19Z",
        "body": "Weak compare-and-exchange are allowed to fail spuriously, so we have\nto use the strong variation here.\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-10-28T12:27:41Z",
        "closed_at": "2016-11-03T23:59:25Z",
        "merged_at": "2016-11-03T23:59:25Z",
        "body": "ARM specific CONFIG_KUSER_HELPERS feature can be disabled in Linux kernel,\nand in this case, we shouldn't crash. Use gcc built-in functions instead\nof arm specific code if they are available.\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 29,
        "deletions": 8,
        "changed_files": 2,
        "created_at": "2016-10-28T09:40:12Z",
        "closed_at": "2019-02-28T00:41:34Z",
        "merged_at": "2019-02-28T00:41:34Z",
        "body": "Fixes the case where a message has a map field and the caller passes in a map container (e.g. from another message object) as a constructor argument. Currently the field is silently left empty.\n",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-10-28T02:14:18Z",
        "closed_at": "2018-06-08T19:12:00Z",
        "merged_at": null,
        "body": "Can't parse GraphDef from the given flat array that size is bigger than\n64MB.\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-10-27T17:03:34Z",
        "closed_at": "2018-06-08T19:12:33Z",
        "merged_at": null,
        "body": "Currently, `toObject` always outputs `bytes` fields as base64-encoded strings. This is understandable for proto3, which has a canonical JSON mapping, but isn't necessary for proto2. I propose using `Uint8Array` for `bytes` fields in proto2 when binary support is enabled.\n\nMy usecase is described [here](https://github.com/google/protobuf/issues/1591#issuecomment-239203004). In short: I want a way to convert Protobuf messages to plain JS objects without having to hard-code fields for each message I use. `toObject` works for me for the most part (pending protocolbuffers/protobuf#1951 and protocolbuffers/protobuf#1922), but I would prefer not to have to decode base64 back into a `Buffer` or `Uint8Array`.\n\nConsider this a feature request with proof-of-concept implementation attached.\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2016-10-27T15:40:02Z",
        "closed_at": "2021-06-07T13:32:35Z",
        "merged_at": null,
        "body": "FileDescriptor's **new** accepted a pool argument but did not\nhonor it. When using the C++ backend implementation, this causes\nproblems for those who need hot-reloading of Protobuf definitions.\n\nThis issue is addressed by honoring the pool argument if it is\nsupplied.\n",
        "comments": 41
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2016-10-26T18:22:00Z",
        "closed_at": "2016-10-27T17:41:44Z",
        "merged_at": "2016-10-27T17:41:44Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 93,
        "deletions": 17,
        "changed_files": 3,
        "created_at": "2016-10-26T00:46:35Z",
        "closed_at": "2016-10-26T20:42:08Z",
        "merged_at": "2016-10-26T20:42:08Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 545,
        "deletions": 392,
        "changed_files": 17,
        "created_at": "2016-10-25T00:21:28Z",
        "closed_at": "2016-10-26T00:27:05Z",
        "merged_at": "2016-10-26T00:27:05Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 45,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2016-10-20T17:14:05Z",
        "closed_at": "2016-10-20T18:28:01Z",
        "merged_at": "2016-10-20T18:28:01Z",
        "body": "Fixes #2269\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2016-10-18T20:20:58Z",
        "closed_at": "2016-10-20T00:33:59Z",
        "merged_at": "2016-10-20T00:33:59Z",
        "body": "Currently google/protobuf/pyext/_message.so and google/protobuf/internal/_api_implementation.so do not end up in the correct place in the Bazel build (i.e. they don't live with all the other Python files at google/protobuf/...), so they are never loaded as intended.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-10-17T07:37:59Z",
        "closed_at": "2018-06-08T23:00:46Z",
        "merged_at": null,
        "body": "The current cmake package configuration relies on compatibility checks with booleans using EQUAL. As far as I can tell, CMAKE doesn't do the intuitive thing when comparing booleans with EQUAL expressions; something like:\n\n```\nSET(TESTA ON)\nSET(TESTB ON)\n\nIF(TESTA EQUAL TESTB)\n     message(\"Equal is true\")\nENDIF()\n\nIF(\"${TESTA}\" STREQUAL \"${TESTB}\")\n     message(\"Strequal is true\")\nENDIF()\n```\n\nwill only print the latter message. The change submitted just treats them like strings and it works as expected.\n\nThis seems to break any usages of find_package against the current version of protobuf; I suspect the reason no one has noticed is that until most distros have packages from v3 or higher, most people are just including it via add_subdirectory or the like. \n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2016-10-16T08:49:53Z",
        "closed_at": "2018-06-08T23:01:43Z",
        "merged_at": null,
        "body": "For the people who had installed gmock before had gmock named as googlemock-release-1.7.0 because they didn't rename it. Hence if now they have it they won't have to download gmock.zip again.\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-10-15T17:07:35Z",
        "closed_at": "2018-06-08T18:57:35Z",
        "merged_at": null,
        "body": "https://github.com/sergei-ivanov/maven-protoc-plugin/ is discontinued and continued at https://github.com/xolstice/protobuf-maven-plugin\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-10-14T05:03:09Z",
        "closed_at": "2016-10-16T20:28:18Z",
        "merged_at": "2016-10-16T20:28:18Z",
        "body": "Should fix problems in Jenkins introduce by #2199 not seen in Travis due to the use of `./test.sh ruby_all` which runs every platform in the same directory\n",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-10-13T21:44:24Z",
        "closed_at": "2016-10-17T04:51:33Z",
        "merged_at": null,
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 84,
        "deletions": 32,
        "changed_files": 7,
        "created_at": "2016-10-13T19:24:10Z",
        "closed_at": "2016-10-13T21:37:21Z",
        "merged_at": "2016-10-13T21:37:21Z",
        "body": "",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-10-12T12:03:55Z",
        "closed_at": "2016-10-12T17:48:22Z",
        "merged_at": "2016-10-12T17:48:22Z",
        "body": "ctx.executable.plugin must be in the inputs of protoc's action when using a plugin, otherwise the action will fail.\n\nThis bug has been hidden by a bug in Bazel: for every ctx.action, Bazel used to automatically add the runfiles of all executable inputs of the RULE instead of using the inputs of the specific ACTION. Consequently, we could get away with underspecifying the inputs of the action.\n\nFixes bazelbuild/bazel/issues/1929\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 130,
        "deletions": 13,
        "changed_files": 6,
        "created_at": "2016-10-11T18:44:36Z",
        "closed_at": "2016-10-12T19:55:48Z",
        "merged_at": "2016-10-12T19:55:48Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 130,
        "deletions": 215386,
        "changed_files": 460,
        "created_at": "2016-10-11T13:11:43Z",
        "closed_at": "2018-06-08T19:06:38Z",
        "merged_at": null,
        "body": "testing a python protocol buffer conversion service\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 83,
        "deletions": 23,
        "changed_files": 6,
        "created_at": "2016-10-10T22:46:09Z",
        "closed_at": "2016-10-11T17:36:26Z",
        "merged_at": "2016-10-11T17:36:26Z",
        "body": "Fix #2235.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 18,
        "deletions": 10,
        "changed_files": 3,
        "created_at": "2016-10-08T22:42:11Z",
        "closed_at": "2016-10-09T15:48:00Z",
        "merged_at": "2016-10-09T15:48:00Z",
        "body": "",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 19109,
        "deletions": 8638,
        "changed_files": 335,
        "created_at": "2016-10-07T23:46:42Z",
        "closed_at": "2016-10-10T20:58:40Z",
        "merged_at": "2016-10-10T20:58:40Z",
        "body": "",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2016-10-07T20:54:06Z",
        "closed_at": "2016-10-07T23:09:26Z",
        "merged_at": "2016-10-07T23:09:26Z",
        "body": "Link staticly when building extension, so that the extension doesn't require installing protobuf library.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-10-07T05:59:10Z",
        "closed_at": "2016-12-02T00:53:29Z",
        "merged_at": null,
        "body": "Fix for \"parseDelimitedFrom behavior has changed between pb2.5 and 3.1 #2228\"\n\nSeems a bit tough adding a test for something so primitive.\n",
        "comments": 12
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-10-07T03:01:28Z",
        "closed_at": "2018-06-08T19:08:34Z",
        "merged_at": null,
        "body": "I've been working through looking at adopting Python 3, and I've been utilizing the -3 flag to help idenitfy issues with Python 3.\n\nHere's a quick write up I did last week:\n\nhttps://gist.github.com/rowillia/c0feed97c1863b2d8e5a3ed73712df65\n\nThe -3 flagged a few issues in protobuf worth fixing, namely around eq shadowing hash in PY3.\n\nFixing these issues will help make the -3 flag less noisey for folks running protobuf in production.\n",
        "comments": 11
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2016-10-06T23:41:39Z",
        "closed_at": "2016-10-07T05:26:29Z",
        "merged_at": "2016-10-07T05:26:29Z",
        "body": "I cherry-picked a commit https://github.com/google/protobuf/commit/d947308aa1cd86acbdabd8e29125b41dcdb06607 from 3.1.x branch to fix bazel build but it actually broke the build because of files that don't exist in master branch yet. This PR removes these files.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 43,
        "deletions": 41,
        "changed_files": 4,
        "created_at": "2016-10-06T14:42:57Z",
        "closed_at": "2016-12-16T18:56:36Z",
        "merged_at": "2016-12-16T18:56:36Z",
        "body": "",
        "comments": 12
    },
    {
        "merged": true,
        "additions": 24,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2016-10-06T14:12:35Z",
        "closed_at": "2017-01-30T21:45:35Z",
        "merged_at": "2017-01-30T21:45:35Z",
        "body": "Bazel has, up until this point, put external repositories \"under\" the local repository (e.g., execroot/local_repo/bazel-out/local-fastbuild/genfiles/external/remote_repo/path/to/target).  However, an upcoming CL is changing that so that all repositories are \"siblings:\" remote_repo would be at execroot/remote_repo/bazel-out/local-fastbuild/genfiles/path/to/target.  This CL makes the proto rule use the right path for both the old-style file structure and the new-style.\n\nMost of this complexity can be removed once new-style is standard.\n",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 205,
        "deletions": 175,
        "changed_files": 9,
        "created_at": "2016-10-03T18:34:29Z",
        "closed_at": "2016-10-03T21:11:24Z",
        "merged_at": "2016-10-03T21:11:24Z",
        "body": "- Let Xcode 8 update settings on the projects/schemes.\n- Migrate Swift tests to Swift 3 syntax.\n- Update the build/test script:\n  - Require Xcode 8 (because of the Swift 3 requirement for tests)\n  - Update the devices to what Xcode 8 has (8.x simulator seem to fail even\n    though they can be downloaded in Xcode 8)\n- Update the travis images to ones with Xcode 8.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 12403,
        "deletions": 3,
        "changed_files": 41,
        "created_at": "2016-10-01T18:05:48Z",
        "closed_at": "2016-10-04T17:32:58Z",
        "merged_at": "2016-10-04T17:32:58Z",
        "body": "",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 37,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2016-09-30T20:52:09Z",
        "closed_at": "2018-03-20T23:11:23Z",
        "merged_at": null,
        "body": "Here's my WIP for addressing #1823. @xfxyjwf let me know if you'd be interested in accepting this or something similar, and I'd be happy to clean it up/fix tests, whatever it takes.\n\nI don't love this change on principle, but it will help my organization out with backwards compatibility.\n\nThanks!\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-09-30T20:06:14Z",
        "closed_at": "2017-03-28T23:57:20Z",
        "merged_at": "2017-03-28T23:57:20Z",
        "body": "Fix for Issue #2211: Addressing GCC warning on enumeral/non-enumeral in conditional expression.\n",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-09-29T23:22:27Z",
        "closed_at": "2016-09-30T17:47:20Z",
        "merged_at": "2016-09-30T17:47:20Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 27,
        "deletions": 9,
        "changed_files": 2,
        "created_at": "2016-09-29T21:34:33Z",
        "closed_at": "2016-10-04T16:58:54Z",
        "merged_at": "2016-10-04T16:58:54Z",
        "body": "There seem to already be .proto files out there that have conflicting\nenum names, which will not be able to build successfully for some\nlanguages (like C#). To prevent this problem from spreading, let's make\nit an error for proto3 but just issue a warning for proto2. This fixes\nissue #2179.\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 9,
        "changed_files": 1,
        "created_at": "2016-09-29T21:21:06Z",
        "closed_at": "2016-10-11T17:28:06Z",
        "merged_at": "2016-10-11T17:28:06Z",
        "body": "Confirmed manually that this fixes the build when `HAVE_LONG_LONG` is defined (by another header) on MSVC 2015 Update 1.\n\nFixes #2202.\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 35,
        "changed_files": 3,
        "created_at": "2016-09-29T04:19:20Z",
        "closed_at": "2016-10-04T18:21:34Z",
        "merged_at": "2016-10-04T18:21:34Z",
        "body": "Proposed fix for #1594\n",
        "comments": 25
    },
    {
        "merged": false,
        "additions": 41,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2016-09-28T23:31:31Z",
        "closed_at": "2018-06-08T19:08:51Z",
        "merged_at": null,
        "body": "This option is directly modeled after protoc-gen-go's ImportMap\n'Mfoo=bar' option, adapted for use in a commonjs context.  It enables\nthe caller to provide override values for 'require()' statements in\ngenerated code.  For example,\n'--js_out=Mexample/foo.proto=example-foo:outdir/ would generate\n`require('example-foo')` instead of `require('./example/foo_js.pb')`.\nMultiple 'M' options are allowed.\n\nThe main use case is to permit the use of module-names rather than\nfilenames for required files, allowing users to use the more flexible\nmodule loading schemes in lieu of hardcoded filenames.\n\nIt also fixes #1745 and provides a workaround for #1746.\n",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-09-28T18:37:38Z",
        "closed_at": "2016-09-28T19:39:23Z",
        "merged_at": "2016-09-28T19:39:23Z",
        "body": "Un-breaks users who have old generated code and upgrade\nto the 3.1.0 release.\n\nCC/review: @murgatroid99, @nicolasnoble.\n\nI wasn't able to test this against old generated code. If you have any tests that would exercise this case, let me know. Otherwise I'll try to create an artificial test for it.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2016-09-28T17:28:09Z",
        "closed_at": "2016-10-01T18:01:40Z",
        "merged_at": null,
        "body": "",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 44,
        "deletions": 14,
        "changed_files": 4,
        "created_at": "2016-09-27T22:52:50Z",
        "closed_at": "2016-10-04T20:14:12Z",
        "merged_at": "2016-10-04T20:14:12Z",
        "body": "A bug was causing generated JSPB code with CommonJS-style imports to\nrefer incorrectly to nested messages from other .proto files. The\ngenerated code would have things like \"test_pb.InnerMessage\" instead of\n\"test_pb.OuterMessage.InnerMessage\". This commit fixes the problem by\ncorrectly taking into account any message nesting.\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 16,
        "changed_files": 14,
        "created_at": "2016-09-27T17:51:01Z",
        "closed_at": "2016-09-27T21:19:30Z",
        "merged_at": "2016-09-27T21:19:30Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 30,
        "deletions": 24,
        "changed_files": 8,
        "created_at": "2016-09-27T15:53:38Z",
        "closed_at": "2016-10-10T19:34:28Z",
        "merged_at": null,
        "body": "Fix #2155\n1. Delete `ZEND_DECLARE_MODULE_GLOBALS(protobuf)` in `protobuf.h` because it lead to `duplicate symbol _protobuf_globals` error.\n2. Fix some warns and errors.\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 69,
        "deletions": 59,
        "changed_files": 6,
        "created_at": "2016-09-27T08:33:32Z",
        "closed_at": "2016-10-04T20:39:51Z",
        "merged_at": "2016-10-04T20:39:51Z",
        "body": "Fixes #2186 \n\nTo reproduce:\n- compile PHP from source with `./configure --enable-maintainer-zts`\n- then compile the protobuf extension\n",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2016-09-26T08:39:24Z",
        "closed_at": "2016-09-26T17:13:09Z",
        "merged_at": "2016-09-26T17:13:09Z",
        "body": "This time for branch 3.1.x. See #2157\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 25,
        "deletions": 7,
        "changed_files": 3,
        "created_at": "2016-09-23T23:54:22Z",
        "closed_at": "2016-09-24T00:57:41Z",
        "merged_at": "2016-09-24T00:57:41Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 80,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-09-23T22:58:33Z",
        "closed_at": "2016-09-24T01:33:25Z",
        "merged_at": "2016-09-24T01:33:25Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-09-23T22:43:29Z",
        "closed_at": "2018-03-21T00:14:53Z",
        "merged_at": null,
        "body": "Is there any real problem in switching GOOGLE_CHECK for assert?\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2016-09-23T21:49:42Z",
        "closed_at": "2016-09-23T23:50:42Z",
        "merged_at": "2016-09-23T23:50:42Z",
        "body": "It seems gmock is chaining all expectations in a nested structure and adding too many expectations will cause stack overflow when the gmock object is destructed. This pull request makes the test case shorter but still have the same test coverage.\n\nIt fixes JsonStreamParserTest.ArrayValues on Visual Studio and also fixes most other failing test cases caused by a corrupted stack.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 748,
        "deletions": 462,
        "changed_files": 28,
        "created_at": "2016-09-23T01:41:30Z",
        "closed_at": "2016-09-23T19:11:04Z",
        "merged_at": "2016-09-23T19:11:04Z",
        "body": "Visual Studio refuses to compile this:\n\n``` cpp\ntemplate<typename T>\nclass ExplicitlyConstructed {\n  char data[sizeof(T)];\n};\nclass Any {\n  static ExplicitlyConstructed<Any> default_instance;\n};\n```\n\nand complains about the default_instance line that it's \"use of undefined type Any\":\nhttps://ci.appveyor.com/project/protobuf/protobuf/build/1.0.2673/job/nrdf4tb9dau0sck5\n\nThis pull request moves the default_instance out so VC++ can be happy about it:\n\n``` cpp\nclass Any {\n};\nExplicitlyConstructed<Any> Any_default_instance;\n```\n\nAlso included other small fixes.\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 27,
        "deletions": 22,
        "changed_files": 2,
        "created_at": "2016-09-22T20:31:30Z",
        "closed_at": "2016-09-23T00:09:32Z",
        "merged_at": "2016-09-23T00:09:32Z",
        "body": "This allows tests to pass on PHP 7.0\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-09-22T08:43:58Z",
        "closed_at": "2018-06-29T23:15:19Z",
        "merged_at": null,
        "body": "PHP specific links aren't up at this time\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 65,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-09-21T21:51:53Z",
        "closed_at": "2016-09-23T17:49:13Z",
        "merged_at": "2016-09-23T17:49:13Z",
        "body": "Review to @teboring.\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-09-21T02:35:29Z",
        "closed_at": "2016-09-21T19:28:15Z",
        "merged_at": "2016-09-21T19:28:15Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2016-09-20T21:09:31Z",
        "closed_at": "2016-09-21T17:39:23Z",
        "merged_at": "2016-09-21T17:39:23Z",
        "body": "Currently deserialization of a non-packed binary repeated field is quadratic in\nthe number of elements, because each time we parse a new element we copy over\nall elements we have parsed so far. This CL fixes the performance problem by\nhaving the generated deserialization code just call addX() instead of using\ngetX() and setX().\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 31,
        "deletions": 63,
        "changed_files": 2,
        "created_at": "2016-09-20T18:41:50Z",
        "closed_at": "2016-09-20T20:56:18Z",
        "merged_at": "2016-09-20T20:56:18Z",
        "body": "Had to strip out some JSPB-format test code,\nbut also added some .proto test messages that\nhad been improperly stripped out.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 17,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2016-09-20T18:11:52Z",
        "closed_at": "2016-09-20T22:25:01Z",
        "merged_at": "2016-09-20T22:25:01Z",
        "body": "#2037 added a test that exposed a bug in the JRuby extension: `System.identityHashCode` returns a hash that does not consider a Message's values. This means two Messages with identical values will not have identical hashCodes.\n\nThis patch uses the pattern from RubyMap to combine the hashCodes from all values in a given message and produce a unique, consistent, value-based hash.\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 18793,
        "deletions": 8572,
        "changed_files": 325,
        "created_at": "2016-09-18T00:25:45Z",
        "closed_at": "2018-06-11T22:48:09Z",
        "merged_at": null,
        "body": "The Dockerfile should provides an env that contains all deps. This should simplify setup for dev and test purposes.\n\nShall we setup an automated build for this on Docker hub?\n\n[![](https://images.microbadger.com/badges/image/vidbina/protobuf.svg)](https://microbadger.com/images/vidbina/protobuf)\n",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2016-09-16T22:06:28Z",
        "closed_at": "2016-09-17T00:07:57Z",
        "merged_at": "2016-09-17T00:07:57Z",
        "body": "Since Java 7, Strings produced with String.substring do not share byte arrays.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 44,
        "deletions": 22,
        "changed_files": 5,
        "created_at": "2016-09-15T18:51:00Z",
        "closed_at": "2018-06-18T22:00:07Z",
        "merged_at": "2018-06-18T22:00:07Z",
        "body": "Pull request for issue-2108: https://github.com/google/protobuf/issues/2108\n\nThe build() method call time is too high if a bean has too many fields and only some of these fields are set. \n\nThe reason of that because filed copying are outside bit check condition which differs from merge() method which is reverse for build().\n\nI see no any reason why someone really wants uninitialized fields to be copied on build()\n",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 46,
        "deletions": 0,
        "changed_files": 11,
        "created_at": "2016-09-15T13:59:31Z",
        "closed_at": "2018-06-08T18:59:01Z",
        "merged_at": null,
        "body": "Add an error and an explain how to fix it when objectivec generated files are compiled with ARC.\n\nThis could save some people a bit of time working out how to use this in their ARC enabled projects.\n",
        "comments": 14
    },
    {
        "merged": true,
        "additions": 185,
        "deletions": 20,
        "changed_files": 41,
        "created_at": "2016-09-14T16:45:41Z",
        "closed_at": "2016-09-15T21:37:38Z",
        "merged_at": "2016-09-15T21:37:38Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 13,
        "changed_files": 13,
        "created_at": "2016-09-13T18:38:11Z",
        "closed_at": "2016-09-15T22:01:59Z",
        "merged_at": "2016-09-15T22:01:59Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 22,
        "deletions": 22,
        "changed_files": 2,
        "created_at": "2016-09-09T17:45:01Z",
        "closed_at": "2016-09-09T18:54:50Z",
        "merged_at": "2016-09-09T18:54:50Z",
        "body": "As far as I can tell, the Bazel build for protobufs is currently broken due to a dependency on a decommissioned project (https://googlemock.googlecode.com). This change uses GoogleTest directly from github instead.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2016-09-09T11:21:48Z",
        "closed_at": "2016-09-12T17:02:39Z",
        "merged_at": "2016-09-12T17:02:39Z",
        "body": "Global variable HOST_CFG is deprecated and will not be supported soon.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 11267,
        "deletions": 1746,
        "changed_files": 94,
        "created_at": "2016-09-08T19:50:49Z",
        "closed_at": "2016-09-14T16:44:53Z",
        "merged_at": null,
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2016-09-08T19:37:13Z",
        "closed_at": "2016-09-08T21:02:43Z",
        "merged_at": "2016-09-08T21:02:43Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 38,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2016-09-08T17:32:36Z",
        "closed_at": "2016-09-12T16:53:27Z",
        "merged_at": "2016-09-12T16:53:27Z",
        "body": "The default behaviour of throwing an exception remains\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-09-08T13:34:25Z",
        "closed_at": "2016-09-09T19:44:34Z",
        "merged_at": "2016-09-09T19:44:34Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 55,
        "deletions": 0,
        "changed_files": 13,
        "created_at": "2016-09-08T01:00:48Z",
        "closed_at": "2016-09-08T17:15:38Z",
        "merged_at": "2016-09-08T17:15:38Z",
        "body": "Parameter `deterministic` is unused in `InternalSerializeWithCachedSizesToArray()`, which generates unused parameter warning in every message.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 102,
        "deletions": 56,
        "changed_files": 21,
        "created_at": "2016-09-07T20:10:02Z",
        "closed_at": "2016-09-08T19:15:12Z",
        "merged_at": "2016-09-08T19:15:12Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 330,
        "deletions": 12,
        "changed_files": 7,
        "created_at": "2016-09-07T19:16:06Z",
        "closed_at": "2017-05-15T21:00:53Z",
        "merged_at": null,
        "body": "Also updates the tests for Go to use https://github.com/travis-ci/gimme\ninstead of `apt-get` to install Go. This will make it easier to test\nagainst specific versions of Go.\n\nThis PR depends on https://github.com/google/protobuf/pull/2058\n\n@broady @rakyll Could you take a look for the Go changes?\n",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-09-07T04:51:09Z",
        "closed_at": "2016-09-07T21:56:31Z",
        "merged_at": "2016-09-07T21:56:31Z",
        "body": "On Ubuntu `/bin/sh` is `dash` by default, this can cause `generate_descriptor_proto.sh` fail to execute.\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-09-06T21:38:37Z",
        "closed_at": "2016-09-06T22:40:51Z",
        "merged_at": "2016-09-06T22:40:51Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 55,
        "deletions": 0,
        "changed_files": 13,
        "created_at": "2016-09-06T05:28:25Z",
        "closed_at": "2017-05-12T18:28:47Z",
        "merged_at": null,
        "body": "Parameter deterministic is unused in InternalSerializeWithCachedSizesToArray(),\nwhich generates unused parameter warning in every message.\n",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2016-09-03T12:55:45Z",
        "closed_at": "2018-06-08T18:41:06Z",
        "merged_at": null,
        "body": "This aligns with other codes in ProtoBuf, for example:\n\n```\n::std::pair<bool, const uint8*>\nconst ::std::string& Any::type_url()\n```\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 11,
        "changed_files": 11,
        "created_at": "2016-09-02T18:58:28Z",
        "closed_at": "2016-09-06T17:30:22Z",
        "merged_at": "2016-09-06T17:30:22Z",
        "body": "",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 20,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-09-02T18:42:01Z",
        "closed_at": "2016-09-06T17:30:14Z",
        "merged_at": "2016-09-06T17:30:14Z",
        "body": "",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 14,
        "changed_files": 6,
        "created_at": "2016-09-02T02:18:46Z",
        "closed_at": "2016-09-02T22:38:03Z",
        "merged_at": "2016-09-02T22:38:03Z",
        "body": "clang-tidy gives warning \"macro argument should be enclosed in\nparentheses\" to macro ZR_\u2019s \u2018first\u2019 parameter.\n",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-09-02T00:32:09Z",
        "closed_at": "2016-12-02T14:20:29Z",
        "merged_at": null,
        "body": "Fixes #2057.\n",
        "comments": 11
    },
    {
        "merged": true,
        "additions": 626,
        "deletions": 86,
        "changed_files": 26,
        "created_at": "2016-09-01T22:09:54Z",
        "closed_at": "2016-09-02T14:11:07Z",
        "merged_at": "2016-09-02T14:11:07Z",
        "body": "At generation time, walk the file's dependencies to see what really contains\nextensions so we can generate more minimal code that only links together the\nroots that provided extensions. Gets a bunch of otherwise noop code out of\nthe call flow when the roots are +initialized.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 20236,
        "deletions": 3906,
        "changed_files": 58,
        "created_at": "2016-09-01T18:54:50Z",
        "closed_at": "2016-09-15T18:09:01Z",
        "merged_at": "2016-09-15T18:09:01Z",
        "body": "This pull request includes two implementation: C extension and PHP\npackage. Both implementations support encode/decode of singular,\nrepeated and map fields. Oneof support will be added in future pull\nrequests.\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 12,
        "changed_files": 1,
        "created_at": "2016-09-01T16:50:29Z",
        "closed_at": "2016-09-05T08:29:03Z",
        "merged_at": "2016-09-05T08:29:03Z",
        "body": "This check adds a few constraints on the way to build a project when we have\na proto file which imports another one. In particular, on projects which\nbuild both C# and Java, it's easy to end up with exceptions like\n\n```\nExpected: included.proto but was src/main/protobuf/included.proto\n```\n\nA user may work around this issue, but it may add unnecessary constraints\non the layout of the project.\n\nAccording to https://github.com/google/protobuf/commit/f3504cf3b1d456a843e8242fdee9ba0bf2991dc1#diff-ecb0b909ed572381a1c8d1994f09a948R309\nit has already been considered to get rid of this check, for\nsimilar considerations, and because it doesn't exist in the Java code\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-09-01T05:35:50Z",
        "closed_at": "2016-09-06T18:14:15Z",
        "merged_at": "2016-09-06T18:14:15Z",
        "body": "Fixed small typo/oversight in reflection tests affecting python 3 only\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 130,
        "deletions": 215386,
        "changed_files": 460,
        "created_at": "2016-09-01T04:34:56Z",
        "closed_at": "2016-09-01T17:43:06Z",
        "merged_at": null,
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 32,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2016-09-01T01:41:48Z",
        "closed_at": "2016-09-02T18:01:05Z",
        "merged_at": "2016-09-02T18:01:05Z",
        "body": "#1342 it caused by \"StringPiece value\" ownership issues,  we can fix it like RenderString implement.\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 25,
        "deletions": 15,
        "changed_files": 6,
        "created_at": "2016-09-01T01:22:02Z",
        "closed_at": "2016-09-09T23:46:50Z",
        "merged_at": "2016-09-09T23:46:50Z",
        "body": "This fixes #1986.\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-08-31T05:17:13Z",
        "closed_at": "2016-09-01T16:17:43Z",
        "merged_at": "2016-09-01T16:17:43Z",
        "body": "",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 8,
        "changed_files": 2,
        "created_at": "2016-08-30T23:26:56Z",
        "closed_at": "2016-09-19T04:38:51Z",
        "merged_at": "2016-09-19T04:38:51Z",
        "body": "#2036 spells out how the `hash` function is broken in many Ruby messages. This PR fixes that.\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 4,
        "changed_files": 5,
        "created_at": "2016-08-30T18:58:06Z",
        "closed_at": "2016-09-21T22:19:54Z",
        "merged_at": "2016-09-21T22:19:54Z",
        "body": "",
        "comments": 14
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 54,
        "changed_files": 2,
        "created_at": "2016-08-30T15:19:19Z",
        "closed_at": "2016-08-30T16:19:40Z",
        "merged_at": "2016-08-30T16:19:40Z",
        "body": "Don't create FileGenerators for each dep. FileGenerators will deeply create all\nthe message, enum, and field generators; but those aren't needed when doing\nthe imports for dependencies. Instead directly generate the imports off the\nFileDescriptors so no extra objects are created. The only other use was when\nchaining together the *Roots for the file extension registry, but that also\ncan be generate off the name of the FileDescriptor directly.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 66,
        "deletions": 14,
        "changed_files": 6,
        "created_at": "2016-08-29T23:31:33Z",
        "closed_at": "2016-09-02T18:12:25Z",
        "merged_at": "2016-09-02T18:12:25Z",
        "body": "",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 12,
        "changed_files": 7,
        "created_at": "2016-08-29T17:33:11Z",
        "closed_at": "2016-08-31T18:39:38Z",
        "merged_at": "2016-08-31T18:39:38Z",
        "body": "\u2026 since these are used by the service stubs code\n\nFixes #1966\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 18,
        "deletions": 8,
        "changed_files": 2,
        "created_at": "2016-08-28T22:50:41Z",
        "closed_at": "2017-03-15T21:45:04Z",
        "merged_at": "2017-03-15T21:45:03Z",
        "body": "Fixes #698.\n\nPrintHelpText now prints to standard output instead of to standard error.\nThe purpose of this CL is to make it easy for users to grep for matches\notherwise stderr output has to be awkwardly redirectly to stdout\nusing this shell trick  `2>&1`, for example\n\n``` shell\nprotoc --help 2>&1 | grep cpp\n```\n\nof which we shouldn't be making users have to work that hard just to\nget use of --help.\n- Exhibits:\n- Before:\n\n``` shell\n$ protoc --help | grep cpp\nUsage: protoc [OPTION] PROTO_FILES\nParse PROTO_FILES and generate output based on the options given:\n  -IPATH, --proto_path=PATH   Specify the directory in which to search\nfor\n                              imports.  May be specified multiple times;\n                              directories will be searched in order.  If\nnot\n                              given, the current working directory is\nused.\n  --version                   Show version info and exit.\n  -h, --help                  Show this text and exit.\n  --encode=MESSAGE_TYPE       Read a text-format message of the given\ntype\n                              from standard input and write it in binary\n                              to standard output.  The message type must\n                              be defined in PROTO_FILES or their\nimports.\n  --decode=MESSAGE_TYPE       Read a binary message of the given type\nfrom\n                              standard input and write it in text format\n                              to standard output.  The message type must\n                              be defined in PROTO_FILES or their\nimports.\n  --decode_raw                Read an arbitrary protocol message from\n                              standard input and write the raw tag/value\n                              pairs in text format to standard output.\nNo\n                              PROTO_FILES should be given when using\nthis\n                              flag.\n  -oFILE,                     Writes a FileDescriptorSet (a protocol\nbuffer,\n    --descriptor_set_out=FILE defined in descriptor.proto) containing\nall of\n                              the input files to FILE.\n  --include_imports           When using --descriptor_set_out, also\ninclude\n                              all dependencies of the input files in the\n                              set, so that the set is self-contained.\n  --include_source_info       When using --descriptor_set_out, do not\nstrip\n                              SourceCodeInfo from the\nFileDescriptorProto.\n                              This results in vastly larger descriptors\nthat\n                              include information about the original\n                              location of each decl in the source file\nas\n                              well as surrounding comments.\n  --dependency_out=FILE       Write a dependency output file in the\nformat\n                              expected by make. This writes the\ntransitive\n                              set of input file paths to FILE\n  --error_format=FORMAT       Set the format in which to print errors.\n                              FORMAT may be 'gcc' (the default) or\n'msvs'\n                              (Microsoft Visual Studio format).\n  --print_free_field_numbers  Print the free field numbers of the\nmessages\n                              defined in the given proto files. Groups\nshare\n                              the same field number space with the\nparent\n                              message. Extension ranges are counted as\n                              occupied fields numbers.\n\n  --plugin=EXECUTABLE         Specifies a plugin executable to use.\n                              Normally, protoc searches the PATH for\n                              plugins, but you may specify additional\n                              executables not in the path using this\nflag.\n                              Additionally, EXECUTABLE may be of the\nform\n                              NAME=PATH, in which case the given plugin\nname\n                              is mapped to the given executable even if\n                              the executable's own name differs.\n  --cpp_out=OUT_DIR           Generate C++ header and source.\n  --csharp_out=OUT_DIR        Generate C# source file.\n  --java_out=OUT_DIR          Generate Java source file.\n  --javanano_out=OUT_DIR      Generate Java Nano source file.\n  --js_out=OUT_DIR            Generate JavaScript source.\n  --objc_out=OUT_DIR          Generate Objective C header and source.\n  --python_out=OUT_DIR        Generate Python source file.\n  --ruby_out=OUT_DIR          Generate Ruby source file.\n```\n- After:\n\n``` shell\n$ protoc --help | grep cpp\n  --plugin=EXECUTABLE         Specifies a plugin executable to use.\n                              Normally, protoc searches the PATH for\n                              plugins, but you may specify additional\n                              executables not in the path using this\nflag.\n                              Additionally, EXECUTABLE may be of the\nform\n                              NAME=PATH, in which case the given plugin\nname\n                              is mapped to the given executable even if\n                              the executable's own name differs.\n  --cpp_out=OUT_DIR           Generate C++ header and source.\n  --csharp_out=OUT_DIR        Generate C# source file.\n  --java_out=OUT_DIR          Generate Java source file.\n  --javanano_out=OUT_DIR      Generate Java Nano source file.\n  --js_out=OUT_DIR            Generate JavaScript source.\n  --objc_out=OUT_DIR          Generate Objective C header and source.\n  --python_out=OUT_DIR        Generate Python source file.\n  --ruby_out=OUT_DIR          Generate Ruby source file.\n```\n",
        "comments": 12
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 13,
        "changed_files": 1,
        "created_at": "2016-08-27T01:12:59Z",
        "closed_at": "2016-09-12T23:08:16Z",
        "merged_at": "2016-09-12T23:08:16Z",
        "body": "Remove references to google_speed.proto which was removed in\ncommit 2e83110230b7.\n\nAlso fix-up commands to build and run.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 98,
        "deletions": 58,
        "changed_files": 5,
        "created_at": "2016-08-26T17:36:37Z",
        "closed_at": "2016-08-29T15:55:08Z",
        "merged_at": "2016-08-29T15:55:08Z",
        "body": "- Expect calls on GenerateAll() and not Generate().\n- Parse the prefix validation file once, and then check all the files.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 18,
        "deletions": 7,
        "changed_files": 2,
        "created_at": "2016-08-26T00:25:55Z",
        "closed_at": "2016-08-26T21:54:44Z",
        "merged_at": "2016-08-26T21:54:44Z",
        "body": "googletest has closed its googlecode site.\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 18,
        "deletions": 7,
        "changed_files": 2,
        "created_at": "2016-08-25T21:30:02Z",
        "closed_at": "2016-08-26T03:09:20Z",
        "merged_at": "2016-08-26T03:09:20Z",
        "body": "The original link is no longer available.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 59,
        "deletions": 9,
        "changed_files": 4,
        "created_at": "2016-08-25T20:19:12Z",
        "closed_at": "2016-08-30T00:05:43Z",
        "merged_at": "2016-08-30T00:05:43Z",
        "body": "Fix for https://github.com/google/protobuf/issues/2004\n\nReview to @nicolasnoble.\n",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-08-25T13:20:36Z",
        "closed_at": "2016-08-25T18:34:47Z",
        "merged_at": "2016-08-25T18:34:47Z",
        "body": "I have yet another Erlang binding to the protocol buffers.\n\nI noticed the name, gpb, clashes with that used in the Objective C binding. I'm sorry about that. I was not aware of that when I started work on my Erlang project long ago, but since it is different languages, I don't think there's any confusion.\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-08-24T05:46:52Z",
        "closed_at": "2016-08-24T17:40:50Z",
        "merged_at": "2016-08-24T17:40:50Z",
        "body": "This will allow loading the extension for Ruby 2.1.10...\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 224,
        "deletions": 207,
        "changed_files": 4,
        "created_at": "2016-08-23T15:38:24Z",
        "closed_at": "2016-08-23T19:06:10Z",
        "merged_at": "2016-08-23T19:06:10Z",
        "body": "",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 35,
        "deletions": 16,
        "changed_files": 8,
        "created_at": "2016-08-22T20:52:23Z",
        "closed_at": "2016-08-23T12:19:45Z",
        "merged_at": "2016-08-23T12:19:45Z",
        "body": "- Add note about the JSON test maybe not being correct yet.\n- Add test to checks the generated names for double underscores to be sure they\n  are what is expected.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 37,
        "deletions": 11,
        "changed_files": 6,
        "created_at": "2016-08-20T00:37:49Z",
        "closed_at": "2016-09-01T01:23:40Z",
        "merged_at": null,
        "body": "This fixes #1986.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 85,
        "deletions": 0,
        "changed_files": 4,
        "created_at": "2016-08-19T21:05:05Z",
        "closed_at": "2016-08-22T19:37:25Z",
        "merged_at": "2016-08-22T19:37:25Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-08-19T14:24:45Z",
        "closed_at": "2017-01-03T00:09:09Z",
        "merged_at": null,
        "body": "The plugin is still work in progress, but at least if someone is looking for something that works in Elm they will be able to find it and contribute to it rather than starting from scratch.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 51,
        "deletions": 17,
        "changed_files": 1,
        "created_at": "2016-08-18T20:16:56Z",
        "closed_at": "2016-08-19T13:35:33Z",
        "merged_at": "2016-08-19T13:35:33Z",
        "body": "and more warnings on possible improvements\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-08-18T17:35:54Z",
        "closed_at": "2016-09-02T18:12:43Z",
        "merged_at": "2016-09-02T18:12:43Z",
        "body": "[ci skip]\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-08-17T20:56:45Z",
        "closed_at": "2016-08-18T12:32:20Z",
        "merged_at": "2016-08-18T12:32:20Z",
        "body": "Also pull the watchos support info from master.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 10969,
        "deletions": 1687,
        "changed_files": 39,
        "created_at": "2016-08-17T17:59:30Z",
        "closed_at": "2016-08-17T20:11:53Z",
        "merged_at": "2016-08-17T20:11:53Z",
        "body": "Some refs seems to be already covered by other cherry picks. Please double check if the diff is complete.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 52,
        "deletions": 14,
        "changed_files": 1,
        "created_at": "2016-08-17T03:34:30Z",
        "closed_at": "2018-03-21T00:14:28Z",
        "merged_at": null,
        "body": "Add an extension mechanism to the JsonFormat TypeRegistry so that callers can provide their own implementation to resolve Any message descriptors using the full type URL.\n\nThis extension comes in the form of a new `TypeResolver` interface, implementations of which can be supplied to a `TypeRegistry` to resolve the message Descriptor using the full type URL if the descriptor is not found in the registry's types map.\n\nThis gives users of the JsonFormat class the chance to actually resolve Any messages that utilise custom URL prefixes and dynamic resolution mechanisms.\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 4032,
        "deletions": 3878,
        "changed_files": 19,
        "created_at": "2016-08-16T22:15:39Z",
        "closed_at": "2016-12-03T16:51:25Z",
        "merged_at": "2016-12-03T16:51:25Z",
        "body": "",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 557,
        "deletions": 38,
        "changed_files": 34,
        "created_at": "2016-08-16T21:45:54Z",
        "closed_at": "2016-09-09T15:02:09Z",
        "merged_at": "2016-09-09T15:02:09Z",
        "body": "Fixes #1674 \n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 259,
        "deletions": 39,
        "changed_files": 5,
        "created_at": "2016-08-15T19:28:53Z",
        "closed_at": "2016-08-16T13:02:28Z",
        "merged_at": "2016-08-16T13:02:28Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 242,
        "deletions": 103,
        "changed_files": 2,
        "created_at": "2016-08-15T15:46:42Z",
        "closed_at": "2016-08-15T17:31:05Z",
        "merged_at": "2016-08-15T17:31:05Z",
        "body": "This should fix the failures in the conformance tests - although\nit highlights the problem that we need to do this when changing\nthe conformance.proto file...\n\n(Fixes #1943.)\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 17,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2016-08-15T15:05:56Z",
        "closed_at": "2016-10-13T22:31:19Z",
        "merged_at": "2016-10-13T22:31:19Z",
        "body": "\u2026 so they can actually be accessed from other libraries.\n",
        "comments": 14
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-08-12T23:45:20Z",
        "closed_at": "2016-08-16T00:49:22Z",
        "merged_at": "2016-08-16T00:49:22Z",
        "body": "[ci skip]\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 182,
        "deletions": 169,
        "changed_files": 1,
        "created_at": "2016-08-12T20:53:39Z",
        "closed_at": "2017-10-11T15:11:41Z",
        "merged_at": null,
        "body": "",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-08-12T18:08:44Z",
        "closed_at": "2018-06-08T18:42:44Z",
        "merged_at": null,
        "body": "The correct package is com.google.protobuf.nano\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 31,
        "deletions": 12,
        "changed_files": 2,
        "created_at": "2016-08-12T18:07:46Z",
        "closed_at": "2018-07-02T20:55:01Z",
        "merged_at": null,
        "body": "Currently, `toObject` returns an object with field names converted to camelCase. However, in some cases the original field names are preferable. This adds a `protoc` option `preserve_proto_fieldnames` that keeps them as-is, and also doesn't append \"List\" or \"Map\".\n\nI'll add tests if/when I get a go-ahead on the general idea (and perhaps some suggestion on how the test should work).\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 357,
        "deletions": 31,
        "changed_files": 7,
        "created_at": "2016-08-11T15:27:03Z",
        "closed_at": "2016-08-11T20:20:49Z",
        "merged_at": "2016-08-11T20:20:49Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 57,
        "deletions": 2,
        "changed_files": 6,
        "created_at": "2016-08-10T20:56:04Z",
        "closed_at": "2016-08-11T13:44:07Z",
        "merged_at": "2016-08-11T13:44:07Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 45,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2016-08-09T23:53:36Z",
        "closed_at": "2018-06-08T19:10:46Z",
        "merged_at": null,
        "body": "\u2026ion.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 100,
        "deletions": 33,
        "changed_files": 3,
        "created_at": "2016-08-09T13:35:51Z",
        "closed_at": "2016-08-09T16:32:56Z",
        "merged_at": "2016-08-09T16:32:56Z",
        "body": "Fixes https://github.com/google/protobuf/issues/1933\n\nAdd a new test that forces strings into two different implementations from the\nNSString class cluster to help confirm we're exercising both paths by which\nCodedOutputStream will extract data from an NSString.\n\nMove the old +load test (that was flawed because the behavior really depends on\nthe type of string from the NSString class cluster); into a unittest that\ntargets the specific case we're adding a behavior confirmation on.\n\nAs a bonus, improve the TextFormat generation of string characters < 0x20.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 30,
        "deletions": 12,
        "changed_files": 2,
        "created_at": "2016-08-08T22:38:33Z",
        "closed_at": "2018-06-08T22:56:51Z",
        "merged_at": null,
        "body": "Currently `TextFormat.java` (and presumably the equivalent implementation in other languages) does not handle unknown enum values at all well.  When printed they produce a string value `UNKNOWN_ENUM_VALUE_NestedEnum_XXXX` which cannot then be parsed again.  So a perfectly valid proto3 message with an unknown enum value cannot be round tripped to a string a back again using `TextFormat`.\n\nI have updated the java `TextFormat` implementation to instead handle unknown Enum values in precisely the same way as they are handled by the `JsonFormat` implementation i.e. they are printed as simple number values and parsed successfully back to unknown Enum values for proto3 messages.\n",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 1041,
        "deletions": 851,
        "changed_files": 20,
        "created_at": "2016-08-08T17:50:46Z",
        "closed_at": "2016-08-09T12:26:24Z",
        "merged_at": "2016-08-09T12:26:24Z",
        "body": "Also updates Well Known Types to use this new format.\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-08-05T07:14:10Z",
        "closed_at": "2016-08-05T17:45:28Z",
        "merged_at": "2016-08-05T17:45:28Z",
        "body": "Add dependency to `cl` in emacs file.\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-08-04T22:36:27Z",
        "closed_at": "2016-08-05T21:02:43Z",
        "merged_at": "2016-08-05T21:02:43Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-08-04T19:27:27Z",
        "closed_at": "2016-08-05T22:28:42Z",
        "merged_at": "2016-08-05T22:28:42Z",
        "body": "[src/google/protobuf/testing/file.cc:95]: (error) Resource leak: file\n\nFound by https://github.com/bryongloden/cppcheck\n",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 14,
        "deletions": 44,
        "changed_files": 2,
        "created_at": "2016-08-04T16:16:03Z",
        "closed_at": "2018-07-09T20:38:19Z",
        "merged_at": null,
        "body": "This was originally part of #1447, but it was decided to postpone this part. The relevant parts of the description of the previous PR follow.\n\nCurrently, the JS implementation treats proto2 fields with specified defaults differently from fields without specified defaults in `toObject`.\n\nConsider the following message definition:\n\n``` proto\nmessage Test {\n  optional string foo = 1;\n  optional string bar = 2 [default = \"\"];\n}\n```\n\nIf both `foo` and `bar` are unset, `toObject()` returns `{ foo: undefined, bar: \"\" }`.\n\nHowever, `foo` and `bar` should be equivalent when unset per the [spec](https://developers.google.com/protocol-buffers/docs/proto#optional) (which would be consistent with the other implementations). I propose to unify their behavior in the following way:\n\nIf both `foo` and `bar` are unset, `toObject()` returns `{}`. This is for two reasons: 1) putting the default value in the object would cause loss of presence information; 2) properties with `undefined` values don't carry any useful information and just add noise to the object.\n",
        "comments": 15
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-08-04T01:28:44Z",
        "closed_at": "2016-08-29T17:07:25Z",
        "merged_at": "2016-08-29T17:07:25Z",
        "body": "Fix missing import of jspb.Map (#1885)\n",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-08-04T00:57:21Z",
        "closed_at": "2018-06-25T22:59:18Z",
        "merged_at": null,
        "body": "",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2016-08-03T22:46:13Z",
        "closed_at": "2016-09-02T18:10:47Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-08-03T12:03:30Z",
        "closed_at": "2016-08-03T17:35:27Z",
        "merged_at": "2016-08-03T17:35:27Z",
        "body": "A typo fix in the Python documentation.\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 31,
        "deletions": 19,
        "changed_files": 3,
        "created_at": "2016-08-03T00:59:49Z",
        "closed_at": "2017-03-01T18:45:44Z",
        "merged_at": "2017-03-01T18:45:44Z",
        "body": "",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 11154,
        "deletions": 1718,
        "changed_files": 63,
        "created_at": "2016-08-02T20:00:41Z",
        "closed_at": "2016-09-02T18:26:50Z",
        "merged_at": null,
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 71,
        "deletions": 18,
        "changed_files": 3,
        "created_at": "2016-08-02T15:15:53Z",
        "closed_at": "2016-11-15T17:29:46Z",
        "merged_at": "2016-11-15T17:29:46Z",
        "body": "Now you can enjoy emojis on iOS. \ud83d\udc4d \n",
        "comments": 13
    },
    {
        "merged": true,
        "additions": 98,
        "deletions": 8,
        "changed_files": 15,
        "created_at": "2016-08-02T01:48:48Z",
        "closed_at": "2016-08-02T19:46:00Z",
        "merged_at": "2016-08-02T19:46:00Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2016-08-01T20:52:48Z",
        "closed_at": "2016-08-01T22:16:16Z",
        "merged_at": "2016-08-01T22:16:16Z",
        "body": "Turns out travis by default doesn't have the needed dependencies to run a 32-bit\nbinary.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-07-30T03:08:58Z",
        "closed_at": "2016-08-04T14:06:47Z",
        "merged_at": "2016-08-04T14:06:47Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2016-07-29T17:58:10Z",
        "closed_at": "2016-07-29T23:52:01Z",
        "merged_at": "2016-07-29T23:52:01Z",
        "body": "Details at issue link [#1869](https://github.com/google/protobuf/issues/1869).\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-07-29T16:00:15Z",
        "closed_at": "2016-07-29T23:09:53Z",
        "merged_at": "2016-07-29T23:09:53Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2016-07-29T15:00:38Z",
        "closed_at": "2016-07-29T19:26:24Z",
        "merged_at": "2016-07-29T19:26:24Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 338,
        "deletions": 2,
        "changed_files": 4,
        "created_at": "2016-07-29T00:03:30Z",
        "closed_at": "2016-08-02T00:31:00Z",
        "merged_at": "2016-08-02T00:31:00Z",
        "body": "Review to @raggi.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-07-28T23:26:41Z",
        "closed_at": "2016-07-29T16:54:31Z",
        "merged_at": "2016-07-29T16:54:31Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 9524,
        "deletions": 774,
        "changed_files": 14,
        "created_at": "2016-07-28T00:48:32Z",
        "closed_at": "2016-08-08T14:15:02Z",
        "merged_at": "2016-08-08T14:15:02Z",
        "body": "Adds support for appledoc for the important classes.\n",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 2,
        "changed_files": 4,
        "created_at": "2016-07-27T22:40:30Z",
        "closed_at": "2016-08-03T18:03:15Z",
        "merged_at": "2016-08-03T18:03:15Z",
        "body": "I found the need for these changes while working on grpc/grpc#7553\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 51,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-07-27T19:08:32Z",
        "closed_at": "2016-07-27T21:40:30Z",
        "merged_at": "2016-07-27T21:40:30Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 18,
        "deletions": 16,
        "changed_files": 5,
        "created_at": "2016-07-27T17:52:06Z",
        "closed_at": "2016-09-02T18:36:30Z",
        "merged_at": "2016-09-02T18:36:30Z",
        "body": "@xfxyjwf @jskeet \n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2016-07-27T09:52:37Z",
        "closed_at": "2016-07-27T17:48:43Z",
        "merged_at": "2016-07-27T17:48:43Z",
        "body": "I'd been hoping this would get our JSON conformance test failures down, but it doesn't.\nAt least we're now consistent with the C++ code.\n\nThis code is called in two cases:\n- If we have a proto descriptor that doesn't have the json_name field for some reason\n- When formatting a field mask\n\nIt's important that this is consistent with other platforms; I hadn't noticed when the C++ code it was ported from changed.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 14,
        "changed_files": 3,
        "created_at": "2016-07-27T08:20:27Z",
        "closed_at": "2016-07-27T17:47:13Z",
        "merged_at": "2016-07-27T17:47:13Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 125,
        "deletions": 670,
        "changed_files": 28,
        "created_at": "2016-07-27T00:31:01Z",
        "closed_at": "2016-07-27T21:40:08Z",
        "merged_at": "2016-07-27T21:40:08Z",
        "body": "1. The branch is forked from 3.0.0-beta-4.\n2. Updated version number to 2.7.0.\n3. Removed languages other than C++, Java and Python.\n4. Synced travis/jenkins config files with master and kept only C++, Java and Python tests.\n\n@pherl to review\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2016-07-26T17:57:57Z",
        "closed_at": "2016-07-26T19:01:33Z",
        "merged_at": null,
        "body": "Fixes traivs cpp build.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 44,
        "deletions": 67,
        "changed_files": 4,
        "created_at": "2016-07-26T01:14:48Z",
        "closed_at": "2016-09-13T03:45:01Z",
        "merged_at": null,
        "body": "Not ready for review. For test purpose only.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 182,
        "deletions": 18,
        "changed_files": 12,
        "created_at": "2016-07-26T00:41:50Z",
        "closed_at": "2016-07-26T17:55:34Z",
        "merged_at": "2016-07-26T17:55:34Z",
        "body": "This is a merge of a master, to pick up a few fixes from after the branch was cut.\n\nReview to @xfxyjwf.\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-07-25T21:03:21Z",
        "closed_at": "2016-08-16T16:43:25Z",
        "merged_at": null,
        "body": "Fixes #1844.\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-07-25T19:19:26Z",
        "closed_at": "2016-08-08T20:43:45Z",
        "merged_at": "2016-08-08T20:43:45Z",
        "body": "When doing an add_subdirectory from another cmake file, the install step fails for cmake config directory.\n\nThis pull request fixes it. \n",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 13,
        "changed_files": 13,
        "created_at": "2016-07-25T19:10:12Z",
        "closed_at": "2016-07-26T17:01:16Z",
        "merged_at": "2016-07-26T17:01:16Z",
        "body": "@haberman @jskeet also for review.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-07-25T17:24:54Z",
        "closed_at": "2018-06-08T18:38:10Z",
        "merged_at": null,
        "body": "Hello,\n\nMy organization is trying to begin using protobufs.  This PR is for a compilation issue that appears to be a bug in MSVC.  We include a header file (foo.h) that contains the lines:\n\nclass Element;\ntypedef class Element Element;\n\nWe are not at liberty to change this file and find a compilation error at the line which this PR changes.   The compiler error is as follows:\n\n> Protobuf\\3.0.0.b4\\cpp\\include\\google/protobuf/repeated_field.h(284): error C2027: use of undefined type 'Element'\n> 1>          path\\to\\foo.h(630) : see declaration of 'Element'\n> 1>          Protobuf\\3.0.0.b4\\cpp\\include\\google/protobuf/repeated_field.h(279) : while compiling class template member function 'void google::protobuf::RepeatedField<Element>::InternalDeallocate(google::protobuf::RepeatedField<Element>::Rep *,int)'\n> 1>          with\n> 1>          [\n> 1>              Element=google::protobuf::int32\n> 1>          ]\n> 1>          Protobuf\\3.0.0.b4\\cpp\\include\\google/protobuf/repeated_field.h(1298) : see reference to function template instantiation 'void google::protobuf::RepeatedField<Element>::InternalDeallocate(google::protobuf::RepeatedField<Element>::Rep *,int)' being compiled\n> 1>          with\n> 1>          [\n> 1>              Element=google::protobuf::int32\n> 1>          ]\n> 1>          caerep.property.pb.h(128) : see reference to class template instantiation 'google::protobuf::RepeatedField<Element>' being compiled\n> 1>          with\n> 1>          [\n> 1>              Element=google::protobuf::int32\n> 1>          ]\n> 1>Protobuf\\3.0.0.b4\\cpp\\include\\google/protobuf/repeated_field.h(284): error C2273: 'function-style cast' : illegal as right side of '->' operator\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 10,
        "changed_files": 6,
        "created_at": "2016-07-25T08:49:14Z",
        "closed_at": "2016-07-25T21:58:41Z",
        "merged_at": "2016-07-25T21:58:41Z",
        "body": "This brings us more into line with other langauges, and makes it more\nobvious when we are requiring protobuf generated code.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2016-07-24T04:48:32Z",
        "closed_at": "2017-07-18T09:57:41Z",
        "merged_at": null,
        "body": "",
        "comments": 15
    },
    {
        "merged": true,
        "additions": 17,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2016-07-24T01:35:52Z",
        "closed_at": "2016-07-25T17:19:17Z",
        "merged_at": "2016-07-25T17:19:17Z",
        "body": "- Also updates the documentation with a bit more information.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 113,
        "deletions": 90,
        "changed_files": 6,
        "created_at": "2016-07-23T12:22:20Z",
        "closed_at": "2018-06-08T18:48:22Z",
        "merged_at": null,
        "body": "Currently the following happens:\n\n``` js\nC:\\Users\\Nikolai\\Downloads\\protobuf\\js>node\n> var u = require('./testbinary_pb')\nundefined\n> var t = new u.TestAllTypes();\nundefined\n> t.setOptionalSfixed64('76561197988007571')\nundefined\n> var bytes = t.serializeBinary()\n\n> var t2 = u.TestAllTypes.deserializeBinary(bytes)\n\n> t2.getOptionalSfixed64()\n76561197988007570\n>\n```\n\nThis fixes it by representing 64-bit ints as decimal strings:\n\n``` js\n$ node\n> var u = require('./testbinary_pb')\nundefined\n> var t = new u.TestAllTypes();\nundefined\n> t.setOptionalSfixed64('76561197988007571')\nundefined\n> var bytes = t.serializeBinary()\n\n> var t2 = u.TestAllTypes.deserializeBinary(bytes)\n\n> t2.getOptionalSfixed64()\n'76561197988007571'\n>\n```\n",
        "comments": 25
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2016-07-22T23:25:48Z",
        "closed_at": "2016-07-25T17:46:19Z",
        "merged_at": "2016-07-25T17:46:19Z",
        "body": "[ci skip]\n\nFixes https://github.com/google/protobuf/issues/1759\n\n@zhangkun83 to review\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 14,
        "changed_files": 1,
        "created_at": "2016-07-22T21:59:30Z",
        "closed_at": "2016-07-23T00:39:28Z",
        "merged_at": "2016-07-23T00:39:28Z",
        "body": "These tests are already covered by jenkins and right now jenkins can\nfinish these tests much quicker then travis.\n\n@pherl to review\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 34,
        "deletions": 349,
        "changed_files": 4,
        "created_at": "2016-07-22T21:49:21Z",
        "closed_at": "2016-07-23T00:24:07Z",
        "merged_at": "2016-07-23T00:24:07Z",
        "body": "Fixes https://github.com/google/protobuf/issues/1813\n\nAlso added a test to ensure public header files and protobuf generated code doesn't have these warnings. This test doesn't cover protobuf's own implementation code. We may want to update all of protobuf's code to be free of this warning in the future but right now there are just too many of them and require more work to cleanup.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2016-07-22T16:59:27Z",
        "closed_at": "2016-07-22T20:51:13Z",
        "merged_at": "2016-07-22T20:51:13Z",
        "body": "- Fixes memory issue where the pointer to the StringPiece would be allocated on the stack, and would mangle the output.\n- Fixes length of the file name when parsing the comma separated files.\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 39,
        "deletions": 23,
        "changed_files": 5,
        "created_at": "2016-07-22T01:09:52Z",
        "closed_at": "2016-07-22T21:02:47Z",
        "merged_at": "2016-07-22T21:02:47Z",
        "body": "1. Added ruby22 and jruby tests to jenkins.\n2. Added javascript tests to jenkins.\n3. Added golang tests to jenkins.\n4. Removed ruby19/ruby20 tests from travis. Support for ruby 2.0 has\n   ended since 2016/02/24.\n   https://www.ruby-lang.org/en/news/2016/02/24/support-plan-of-ruby-2-0-0-and-2-1/\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 20,
        "changed_files": 2,
        "created_at": "2016-07-21T18:54:08Z",
        "closed_at": "2016-07-21T21:03:55Z",
        "merged_at": "2016-07-21T21:03:55Z",
        "body": "1. Set JAVA_HOME so mvn can pick up the correct java version.\n2. Remove jdk6 tests. It has been broken for a while and remain undetected as\n   mvn is actually using java 7 to build the code. Given that we have\n   set -source and -target to 6 in the pom.xml and the built .jar\n   should be usable by java 6, having a dedicated java 6 test doesn't\n   seem necessary (assuming very few Java 6 users want to compile protobuf\n   Java from source).\n\n@pherl to review\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 132,
        "deletions": 83,
        "changed_files": 11,
        "created_at": "2016-07-21T18:40:18Z",
        "closed_at": "2016-07-25T17:09:15Z",
        "merged_at": "2016-07-25T17:09:15Z",
        "body": "Review to @raggi.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 20,
        "changed_files": 2,
        "created_at": "2016-07-20T23:38:29Z",
        "closed_at": "2016-07-21T18:53:12Z",
        "merged_at": null,
        "body": "Local Java build with jdk6 fails. Wondering whether we are actually testing jdk6 on travis.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-07-20T23:31:33Z",
        "closed_at": "2018-06-08T18:49:22Z",
        "merged_at": null,
        "body": "Building without those dependencies fails on macOS. Added Homebrew instructions to install those dependencies.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 17,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2016-07-20T21:44:13Z",
        "closed_at": "2016-07-24T02:40:51Z",
        "merged_at": null,
        "body": "[ci skip]\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-07-20T00:58:44Z",
        "closed_at": "2016-07-20T18:32:33Z",
        "merged_at": "2016-07-20T18:32:33Z",
        "body": "See https://github.com/dotnet/core/issues/227 for background.\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 26,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2016-07-20T00:22:21Z",
        "closed_at": "2016-07-20T20:54:27Z",
        "merged_at": "2016-07-20T20:54:27Z",
        "body": "@pherl to review\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2879,
        "deletions": 768,
        "changed_files": 13,
        "created_at": "2016-07-19T22:09:51Z",
        "closed_at": "2016-07-20T20:52:21Z",
        "merged_at": "2016-07-20T20:52:21Z",
        "body": "@pherl to review\n\nShould be the last required Java change before 3.0.0 GA.\n\nDeleted (Single|Repeated)FieldBuilderTest.java because (Single|Repeated)FieldBuilder can no longer work with the generated code after this change. The versioned (Single|Repeated)FieldBuilderV3 classes are used in the generated code starting from beta-4.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 42,
        "deletions": 16,
        "changed_files": 6,
        "created_at": "2016-07-18T23:00:33Z",
        "closed_at": "2016-07-19T00:06:02Z",
        "merged_at": "2016-07-19T00:06:02Z",
        "body": "Also fixed javadoc errors.\n\n[ci skip]\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 151,
        "deletions": 131,
        "changed_files": 4,
        "created_at": "2016-07-18T21:52:38Z",
        "closed_at": "2016-07-19T05:52:07Z",
        "merged_at": "2016-07-19T05:52:07Z",
        "body": "This change will help us separate binary support into\nseparate files, because we only refer to binary serialization\nfunctions in the actual binary serialization paths.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2016-07-18T15:11:50Z",
        "closed_at": "2016-07-18T17:01:35Z",
        "merged_at": "2016-07-18T17:01:35Z",
        "body": "When building into frameworks, the generated code doesn't always have direct\naccess to the proto internals.  Instead of opening up the access, just use the\npublic method to fetch the correct oneof.\n\nFixes https://github.com/google/protobuf/issues/1789\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 302,
        "deletions": 0,
        "changed_files": 8,
        "created_at": "2016-07-15T23:07:51Z",
        "closed_at": "2021-06-07T13:45:17Z",
        "merged_at": null,
        "body": "Going to provide protoc package in pypi. Only python and c++ code gen are included. The package is currently under grpc tools: https://github.com/grpc/grpc/tree/master/tools/distrib/python/grpcio_tools\n\nAfter install, user can call\n$ python -m google.protoc.protoc -I$INCLUDE --python_out=$OUTPUT $PROTO_FILES\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 281,
        "deletions": 231,
        "changed_files": 20,
        "created_at": "2016-07-15T22:07:44Z",
        "closed_at": "2016-07-19T08:59:24Z",
        "merged_at": null,
        "body": "Continuing from #1447, now targeting 3.0.0-beta-4. Also contains the following additional fixes:\n- Added `has*` methods for message fields\n- Added `clear*` methods for proto3 repeated fields\n- Removed `has*` methods for proto2 repeated fields\n",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 82,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2016-07-15T19:20:29Z",
        "closed_at": "2016-07-18T18:08:18Z",
        "merged_at": "2016-07-18T18:08:18Z",
        "body": "@pherl @haberman to review.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-07-15T18:14:16Z",
        "closed_at": "2016-07-15T20:59:09Z",
        "merged_at": "2016-07-15T20:59:09Z",
        "body": "https://github.com/google/protobuf/issues/1786\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 10,
        "changed_files": 4,
        "created_at": "2016-07-15T17:48:32Z",
        "closed_at": "2016-07-15T22:04:01Z",
        "merged_at": "2016-07-15T22:04:01Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 58,
        "deletions": 7,
        "changed_files": 6,
        "created_at": "2016-07-14T23:53:05Z",
        "closed_at": "2016-07-25T23:48:32Z",
        "merged_at": "2016-07-25T23:48:32Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 72,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2016-07-14T22:59:18Z",
        "closed_at": "2016-07-15T18:45:56Z",
        "merged_at": "2016-07-15T18:45:56Z",
        "body": "Currently some public API methods are defined in GenreatedMessage.java\nand they have a generric return type:\n\n``` java\n  class GeneratedMessage {\n    class Builder<BuilderType extends Builder<BuilderType>> {\n      public BuilderType setField(...);\n      public BuilderType setExtension(...);\n    }\n  }\n```\n\nWith these definitions, the compiled byte code of a callsite will have\na direct reference to GeneratedMessage. For example:\n\n``` java\n  fooBuilder.setField(...);\n```\n\nbecomes:\n\n```\n  ##: invokevirtual // Method Builder.setField:(...)LGeneratedMessage.Builder\n  ##: checkcast     // class Builder\n```\n\nThis will prevent us from updating generated classes to subclass a\ndifferent versioned GeneratedMessageV3 class in the future (we can't do\nit in a binary compatible way).\n\nThis change addresses the problem by overriding these methods directly\nin the generated class:\n\n``` java\n  class Foo {\n    class Builder extends GeneratedMessage.Builder<Builder> {\n      public Builder setField(...) {\n        return super.setField(...);\n      }\n    }\n  }\n```\n\nAfter this, fooBuilder.setField(...) will be compiled to:\n  ##: invokevirtual // Method Builder.setField:(...)LFoo.Builder\n\nThe callsites will no longer reference GeneratedMessage directly and we\ncan change Foo to subclass GeneratedMessageV3 without breaking binary\ncompatiblity.\n\nThe downside of this change is:\n1. It increases generated code size (though it saves some instructions\n    on the callsites).\n2. We can never stop generating these overrides because doing that\n    will break binary compatibility.\n\nChange-Id: I879afbbc1325a66324a51565e017143489b06e97\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 45,
        "deletions": 45,
        "changed_files": 2,
        "created_at": "2016-07-13T23:53:42Z",
        "closed_at": "2016-07-14T16:34:06Z",
        "merged_at": "2016-07-14T16:34:06Z",
        "body": "The 'lite' generator flag is no longer supported.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 17,
        "deletions": 17,
        "changed_files": 15,
        "created_at": "2016-07-13T23:01:58Z",
        "closed_at": "2016-07-14T19:59:14Z",
        "merged_at": "2016-07-14T19:59:14Z",
        "body": "@pherl to review\n",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-07-12T22:21:29Z",
        "closed_at": "2016-07-12T23:36:41Z",
        "merged_at": "2016-07-12T23:36:41Z",
        "body": "A bad variable dereference meant that instead of checking if <package>FIND_VERSION_PRERELEASE was defined, we were checking if the value it contained was defined.\n\nFixes the issue reported in #1777 \n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2016-07-11T21:25:40Z",
        "closed_at": "2016-07-25T17:49:55Z",
        "merged_at": null,
        "body": "The old link becomes 404.\n\ncc @carl-mastrangelo\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-07-10T19:52:05Z",
        "closed_at": "2018-06-08T18:51:52Z",
        "merged_at": null,
        "body": "c.f. google/protobuf#1767\n\nI didn't run buildifier on this because it produced a bunch of (ordering) diffs in other rules, and I wanted to keep this constrained.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-07-09T14:16:21Z",
        "closed_at": "2016-09-13T03:45:28Z",
        "merged_at": "2016-09-13T03:45:28Z",
        "body": "Uses Google's C++ library for .proto parsing and uPB for protobuf\nencoding/decoding; it supports both proto2 and proto3 syntax and\nencoding/decoding is more than 10 times faster than pure-Perl\nGoogle::ProtocolBuffers.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 35,
        "changed_files": 3,
        "created_at": "2016-07-08T17:22:02Z",
        "closed_at": "2016-07-09T06:16:06Z",
        "merged_at": "2016-07-09T06:16:06Z",
        "body": "This is the only call to TypeExtensions.IsValueType, so we can remove\nthat method, making the whole type conditionally compiled out for .NET 3.5\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 30,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2016-07-08T16:36:35Z",
        "closed_at": "2017-04-11T23:37:49Z",
        "merged_at": null,
        "body": "Hello maintainers, I would like to add the ability for the Python module's [`json_format`](https://github.com/google/protobuf/blob/master/python/google/protobuf/json_format.py#L89) to work directly with native Python `dict`. I have found it necessary at times to go from a `protobuf` instance object directly to a `dict`. Currently, serialization to and from a `JSON` string is supported. Meaning that if I have a `protobuf` and want a `dict`, the conversion function transforms the `protobuf` privately into a `dict`, and then calls `json.dumps` on that `dict` resulting in a `str`, the end user then has to `json.loads` that `str` back to a `dict`:\n\n```\nprotobuf - > dict -> str -> dict\n```\n\nI want to make the portion where we call `json.dumps` optional for users who would like a native Python dictionary. The logic works similarly on the inverse, when going from a Python `dict` to a `protobuf` on parse, the user is required to serialize their `dict` with `json.dumps` before calling the Parse function, which then immediately `json.loads` the dict back into memory:\n\n```\ndict -> str -> dict -> protobuf\n```\n\nMy pull request adds this functionality to the [`json_format`](https://github.com/google/protobuf/blob/master/python/google/protobuf/json_format.py#L89) file and updates the unit tests to account for the changes specified.\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2016-07-07T18:43:36Z",
        "closed_at": "2016-07-07T20:58:11Z",
        "merged_at": "2016-07-07T20:58:11Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 17,
        "deletions": 14,
        "changed_files": 6,
        "created_at": "2016-07-07T12:47:28Z",
        "closed_at": "2016-07-07T21:27:26Z",
        "merged_at": "2016-07-07T21:27:26Z",
        "body": "As bazel folks are looking at getting auto generation of module maps going and\nthe importing of sources files causes issues there.  We were only do it to\nhack around some of the apple linker behaviors around objc classes and\ncategories, but even that isn't complete and CocoaPods was already doing -ObjC,\nand developers not using pods could have still needed it to ensure everything\nwas linked anyways; so drop the hack of importing sources.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 10,
        "changed_files": 2,
        "created_at": "2016-07-06T22:41:59Z",
        "closed_at": "2016-07-07T16:19:41Z",
        "merged_at": "2016-07-07T16:19:41Z",
        "body": "1. The support for global string causes problems when building protobuf internally. It's not needed as part of opensource protobuf. Removed in this PR.\n2. Fixed a declaration order problem.\n\n@pherl  to review\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-07-06T17:23:38Z",
        "closed_at": "2018-06-08T18:30:58Z",
        "merged_at": null,
        "body": "There is likely more that can be done to rectify this issue, but this was a simple fix to make package names match more or less what one would expect in the other generated languages such as C++.  There is a related issue in that passing a namespace_prefix overrides all generated namespaces, so that cross-namespace proto imports result in invalid generated code if the parameter is present.\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 68,
        "deletions": 68,
        "changed_files": 40,
        "created_at": "2016-07-03T13:36:59Z",
        "closed_at": "2016-07-06T22:44:34Z",
        "merged_at": "2016-07-06T22:44:34Z",
        "body": "Non-functional spelling fixes patch that should be easy to apply.\n",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-07-01T18:33:13Z",
        "closed_at": "2016-07-15T20:41:53Z",
        "merged_at": null,
        "body": "The current JSPB generator does not camel-case file-level extension\nnames where they appear in goog.exportSymbol(...), resulting in a\nmismatch between the goog.exportSymbol() line and the actual code. This\nonly affects JSPB when it is used with an import style other than\nClosure.\n\nHere is a diff of the generated code from js/test2.proto before and\nafter this change:\n--- js/test2_pb.js  2016-07-01 11:28:32.263643143 -0700\n+++ js/test2_pb.js-new  2016-07-01 11:28:05.391294428 -0700\n@@ -9,10 +9,10 @@\n var goog = jspb;\n var global = Function('return this')();\n\n-goog.exportSymbol('jspb.test.floating_msg_field', null, global);\n-goog.exportSymbol('jspb.test.floating_str_field', null, global);\n goog.exportSymbol('proto.jspb.test.ExtensionMessage', null, global);\n goog.exportSymbol('proto.jspb.test.TestExtensionsMessage', null, global);\n+goog.exportSymbol('proto.jspb.test.floatingMsgField', null, global);\n+goog.exportSymbol('proto.jspb.test.floatingStrField', null, global);\n\n /**\n- Generated by JsPbCodeGenerator.\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 2923,
        "deletions": 182,
        "changed_files": 60,
        "created_at": "2016-07-01T17:43:10Z",
        "closed_at": "2016-07-01T20:54:25Z",
        "merged_at": "2016-07-01T20:54:25Z",
        "body": "This is needed by gRPC, which requires the fixes in both beta-3.1 and beta-3.2.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2016-07-01T13:14:31Z",
        "closed_at": "2017-03-16T01:04:26Z",
        "merged_at": null,
        "body": "This include is needed on Solaris or `PATH_MAX` will be reported as undefined. Please see the full build log at\n  https://buildfarm.opencsw.org/buildbot/builders/protobuf-solaris10-i386/builds/359/steps/shell_2/logs/stdio\n\nCurrent build status on Solaris is available at\n  https://buildfarm.opencsw.org/buildbot/waterfall?category=protobuf\n",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 2601,
        "deletions": 285,
        "changed_files": 33,
        "created_at": "2016-07-01T12:20:17Z",
        "closed_at": "2016-07-07T21:11:22Z",
        "merged_at": "2016-07-07T21:11:22Z",
        "body": "See #1671.\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 171,
        "deletions": 63,
        "changed_files": 3,
        "created_at": "2016-07-01T08:47:32Z",
        "closed_at": "2016-07-13T10:36:19Z",
        "merged_at": "2016-07-13T10:36:19Z",
        "body": "See #1730 for context.\n\nThis PR also now optimizes AddRange when the passed collection implements ICollection.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 11,
        "changed_files": 4,
        "created_at": "2016-06-30T21:33:12Z",
        "closed_at": "2016-07-01T00:09:15Z",
        "merged_at": null,
        "body": "",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 13676,
        "deletions": 5408,
        "changed_files": 217,
        "created_at": "2016-06-29T23:11:37Z",
        "closed_at": "2016-06-30T22:50:25Z",
        "merged_at": "2016-06-30T22:50:25Z",
        "body": "This includes all internal changes from around May 20 to now.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 367,
        "deletions": 818,
        "changed_files": 43,
        "created_at": "2016-06-29T15:32:29Z",
        "closed_at": "2016-07-14T21:01:47Z",
        "merged_at": "2016-07-14T21:01:47Z",
        "body": "This is only the changes under csharp. Next I need to change the Jenkins, Travis and AppVeyor builds.\n\nI've fetched this from clean on an Ubuntu 16.04 box, and it builds and tests pass.\n@jtattermusch: Assigning to you for initial comments, while I start looking at the CI aspects. We're not committed to this just yet - if we decide it's too risky at this stage, we can abandon it.\n",
        "comments": 15
    },
    {
        "merged": true,
        "additions": 21,
        "deletions": 4,
        "changed_files": 5,
        "created_at": "2016-06-28T19:15:01Z",
        "closed_at": "2016-06-29T13:51:13Z",
        "merged_at": "2016-06-29T13:51:13Z",
        "body": "There was a twist code path (that some times showed up due to what happened to\nbe in memory in failure cases), that would cast a bogus wire type into the\nenum, and then fall through switch statements.\n\nResolve this by validating all wire types when parsing tags and throwing the\nerror at that point so it can't enter the system.\n\nAs added safety, stick in a few asserts for apis that get passed tags to ensure\nthey also are only seeing valid data.\n\nBonus: Tweak the parsing loop to skip some work when we get the end marker\n(zero tag) instead of still looping through all the fields.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 43,
        "changed_files": 6,
        "created_at": "2016-06-28T13:17:24Z",
        "closed_at": "2016-07-01T13:46:51Z",
        "merged_at": "2016-07-01T13:46:51Z",
        "body": "- Correct some cases sources were compiled into the static lib and the tests.\n- Enable Xcodes code coverage support on the unittests.  We aren't complete on\n  coverage, but having the data always there should make it easier to chip away\n  at this going forward.\n- Drop method in tests that isn't used, wire up a validator in another test.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 49,
        "deletions": 59,
        "changed_files": 5,
        "created_at": "2016-06-28T10:27:59Z",
        "closed_at": "2016-06-29T06:15:56Z",
        "merged_at": null,
        "body": "This should now be portable everywhere (after a nuget update, at least).\n\nFixes issue #966.\n\n// cc @onovotny for extra review if possible :)\n",
        "comments": 18
    },
    {
        "merged": true,
        "additions": 72,
        "deletions": 22,
        "changed_files": 3,
        "created_at": "2016-06-28T00:47:04Z",
        "closed_at": "2016-06-28T12:29:19Z",
        "merged_at": "2016-06-28T12:29:19Z",
        "body": "- Correct impl by using helpers the message wiring does.\n- Add unittests.\n\nFixes https://github.com/google/protobuf/issues/1716\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-06-27T21:57:51Z",
        "closed_at": "2016-06-28T00:17:49Z",
        "merged_at": "2016-06-28T00:17:49Z",
        "body": "Looks like this was changed during #1683, but missed in the README :)\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 53,
        "deletions": 9,
        "changed_files": 3,
        "created_at": "2016-06-25T15:46:19Z",
        "closed_at": "2016-06-28T23:22:01Z",
        "merged_at": null,
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 26,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2016-06-25T00:42:52Z",
        "closed_at": "2016-06-27T01:09:40Z",
        "merged_at": "2016-06-27T01:09:40Z",
        "body": "/cc @thomasvl @efirestone\n\nGiven code generated with C++\n\n``` c++\nenum EnumType {\n  OPTION_1 = 1,\n  OPTION_2 = 2,\n  OPTION_3 = 3\n};\n```\n\nUsing objc generator and using a prefix `PBTesting`:\n\n``` objc\ntypedef GPB_ENUM(PBTestingEnumType) {\n  PBTestingEnumType_Option1 = 1,\n  PBTestingEnumType_Option2 = 2,\n  PBTestingEnumType_Option3 = 3,\n};\n```\n\nThe best way for us to get a value is to use text format since that has not changed between our transition from C++ generator to ObjC generator. This change adds a method to pull a value using text format instead.\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 36,
        "deletions": 5,
        "changed_files": 7,
        "created_at": "2016-06-24T16:25:47Z",
        "closed_at": "2016-06-28T05:31:42Z",
        "merged_at": "2016-06-28T05:31:42Z",
        "body": "",
        "comments": 14
    },
    {
        "merged": true,
        "additions": 21,
        "deletions": 21,
        "changed_files": 2,
        "created_at": "2016-06-24T07:21:54Z",
        "closed_at": "2016-07-06T14:15:55Z",
        "merged_at": "2016-07-06T14:15:55Z",
        "body": "This change adds the `nullable` qualifier to return types of Objective-C methods that can return a `nil` due to errors. This change makes these methods compatible with the Swift 2 try-catch syntax. In other words, before the change, you had to do this:\n\n``` swift\nlet error: NSError?\nlet msg = Message2(data, error: &error)\nif (error != nil) {\n    // handle error\n} else {\n    // use msg\n}\n```\n\nAfter the change, you can use the try-catch syntax in Swift 2:\n\n``` swift\ndo {\n    let msg = try Message2(data)\n    // use msg \n} catch (let error as NSError) {\n    // handle error\n}\n```\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 159,
        "deletions": 26,
        "changed_files": 2,
        "created_at": "2016-06-23T17:44:58Z",
        "closed_at": "2016-07-01T17:18:28Z",
        "merged_at": "2016-07-01T17:18:28Z",
        "body": "See https://github.com/google/protobuf/issues/1340\nAdd `public Printer minifyingOutput(){\n      return new Printer(registry, includingDefaultValueFields, preservingProtoFieldNames, true);\n    }` \nmethod to be used for json formatting, when calling `JsonFormat.printer(). minifyingOutput().print(message)`\nthe result json output will be minified.\n",
        "comments": 13
    },
    {
        "merged": false,
        "additions": 34,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2016-06-23T14:42:08Z",
        "closed_at": "2016-07-08T17:08:24Z",
        "merged_at": null,
        "body": "Added constructors to specify capacity. This helps reduce memory waste in case the numbers of elements are known when instantiating.\n\nAdded optimization to Add Method. Now checking for ICollection and using ICollection.CopyTo. May help increase performance when adding large sequences.\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 58,
        "deletions": 25,
        "changed_files": 2,
        "created_at": "2016-06-23T09:47:59Z",
        "closed_at": "2016-06-23T18:32:54Z",
        "merged_at": "2016-06-23T18:32:54Z",
        "body": "This isn't useful to most users, but can be handy in advanced use cases,\nas requested in #1465.\n\n// cc @Falco20019\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2016-06-22T23:33:29Z",
        "closed_at": "2016-06-23T22:14:49Z",
        "merged_at": "2016-06-23T22:14:49Z",
        "body": "",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 214,
        "deletions": 32,
        "changed_files": 8,
        "created_at": "2016-06-22T18:48:08Z",
        "closed_at": "2016-07-01T22:43:37Z",
        "merged_at": "2016-07-01T22:43:37Z",
        "body": "- add JsonParseOptions for JsonToBinaryString allow unknown fields\n- rename current JsonOptions to JsonPrintOptions\n",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2016-06-22T14:40:09Z",
        "closed_at": "2016-07-10T20:30:31Z",
        "merged_at": "2016-07-10T20:30:31Z",
        "body": "",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2016-06-21T06:27:11Z",
        "closed_at": "2016-06-21T17:26:02Z",
        "merged_at": "2016-06-21T17:26:02Z",
        "body": "This doesn't currently change the ordering in the implementation, but allows us to do so in the future.\nWe also need to change\nhttps://developers.google.com/protocol-buffers/docs/reference/csharp-generated#singular\nwhich states \"Finally, unlike `Dictionary<TKey, TValue>`, `MapField<TKey, TValue>` preserves insertion order of entries.\"\n(We can just remove that sentence, I think.)\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 7448,
        "deletions": 7325,
        "changed_files": 14,
        "created_at": "2016-06-20T20:00:04Z",
        "closed_at": "2016-06-21T12:25:28Z",
        "merged_at": "2016-06-21T12:25:28Z",
        "body": "Note: Breaking API change on the Dictionary classes.\n\nThe numeric value classes were using \"Value\" in the naming, but this silently\ncollided with the KVC category on NSObject; meaning KVC code could break up a\nkeypath and call these selectors with the wrong types leading to crashes (even\nthough the code all would compile cleanly).\n- Rename the methods to use the \"type\" instead of literal \"Value\".\n- Update all the impls and tests.\n- Enable the warning that will catch issues like this in the future.\n\nFixes https://github.com/google/protobuf/issues/1616\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-06-17T16:24:07Z",
        "closed_at": "2016-06-20T17:44:38Z",
        "merged_at": "2016-06-20T17:44:38Z",
        "body": "fyi @thomasvl \n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 46,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2016-06-16T19:00:37Z",
        "closed_at": "2016-06-17T18:14:25Z",
        "merged_at": "2016-06-17T18:14:25Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 348,
        "deletions": 127,
        "changed_files": 5,
        "created_at": "2016-06-16T16:28:53Z",
        "closed_at": "2016-06-17T14:31:05Z",
        "merged_at": "2016-06-17T14:31:05Z",
        "body": "- Better docs in the generator for the different options that can be passed\n  during an invoke of protoc.\n- Add named_framework_to_proto_path_mappings_path to pass the path to a file\n  containing mappings of frameworks for different proto files.\n- Update the generation to use the mapping to change the #import directives\n  it creates.\n\nNote: the changes in helpers is mostly moving code within the fine, and then\na small change to expose the parsing so a passed on class can consume the line.\n\nFixes https://github.com/google/protobuf/issues/1457\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 31,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2016-06-16T11:39:24Z",
        "closed_at": "2018-06-08T18:35:16Z",
        "merged_at": null,
        "body": "Fix for #1682, adding a simple overload of CopyTo() which provides a mechanism for copying a subset of the byte array instead of the whole thing.\n\nAlso added test cases for overload and original implementation.\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2016-06-16T03:49:59Z",
        "closed_at": "2016-06-16T23:19:42Z",
        "merged_at": "2016-06-16T23:19:42Z",
        "body": "Remove a friend-class template that is only used for the constructor of MapAllocator, and instead create an _internal_only getter that gets the needed information. This is a workaround for a deficiency in gcc-4.4 that does not properly support templated friend classes.\n\nThis was discovered as I was working on grpc/grpc#6863 . I believe it is the only place where protobuf is incompatible with gcc-4.4\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 206,
        "deletions": 14,
        "changed_files": 5,
        "created_at": "2016-06-15T20:04:46Z",
        "closed_at": "2016-06-16T16:20:02Z",
        "merged_at": null,
        "body": "Fixes #1681 using the proposed solution, there.\n\n> 1. Add a setter to the generated C# messages which takes the form `set { myField_ = value.Snapshot(); }`\n> 2. Implement `Snapshot()` on `RepeatedField` which sets a flag on the field to force a copy of the underlying array before any future mutation (add/remove/update) and return a new instance that shares the underlying array and also has this flag set.\n\nAlso added test cases\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2016-06-15T17:33:59Z",
        "closed_at": "2018-06-08T18:36:25Z",
        "merged_at": null,
        "body": "Use `$(SolutionDir)` in csharp project instead of assuming that solution is in parent directory.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 54,
        "deletions": 10,
        "changed_files": 5,
        "created_at": "2016-06-14T19:03:55Z",
        "closed_at": "2016-06-15T15:39:21Z",
        "merged_at": "2016-06-15T15:39:21Z",
        "body": "- Add a protoc objc option (generate_for_framework_named) to set the name of\n  the framework all generated sources will be in.\n- Tweak some comments/naming to make it clear what is the Protobuf framework\n  vs. the framework for generated code.\n- Update the objc README to document the new generation option to protoc.\n\nThis is working towards https://github.com/google/protobuf/issues/1457.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2016-06-14T00:17:44Z",
        "closed_at": "2016-06-14T20:31:08Z",
        "merged_at": null,
        "body": "1. To use the previous version of Swift instead of the new one.\n2. To update the deployment versions, which disables the inclusion of arclite and avoids a duplicate symbol error.\n\nTested with both 7.3.1 and 8.0 beta Xcodes\n\nhttps://github.com/google/protobuf/issues/1679\n\n@thomasvl fyi\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-06-13T23:35:45Z",
        "closed_at": "2016-06-14T13:28:22Z",
        "merged_at": "2016-06-14T13:28:22Z",
        "body": "Caught when using the new Xcode 8 beta\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 25,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2016-06-11T04:56:00Z",
        "closed_at": "2016-06-14T18:26:01Z",
        "merged_at": "2016-06-14T18:26:01Z",
        "body": "Fixes https://github.com/google/protobuf/issues/1619\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2016-06-10T14:55:54Z",
        "closed_at": "2018-01-25T13:59:14Z",
        "merged_at": null,
        "body": "When `GOOGLE_PROTOBUF_NO_THREAD_SAFETY` is defined, `GoogleOnceInit<Arg>` has a different signature than it otherwise would. This means that the repository cannot currently be built with that preprocessor definition. This fixes building by correcting the function signature.\n\nFixes #548\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2016-06-10T01:09:06Z",
        "closed_at": "2018-06-08T18:40:08Z",
        "merged_at": null,
        "body": "These files are included from the generated proto header files so they\nwill generate warnings for each user and preventing them from compiling\nwith -Werror.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2016-06-10T00:34:11Z",
        "closed_at": "2018-06-23T04:38:24Z",
        "merged_at": null,
        "body": "Examples currently fail with unknown target ZLIB::ZLIB when protobuf is built using protobuf_WITH_ZLIB.\n\nThis fix causes the examples to search for ZLIB when the above flag is set.\n\nParticularly helpful in conjunction with #1665 \n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 22,
        "deletions": 15,
        "changed_files": 2,
        "created_at": "2016-06-09T22:41:38Z",
        "closed_at": "2016-06-17T20:15:49Z",
        "merged_at": "2016-06-17T20:15:49Z",
        "body": "#1611 Was authored before the introduction of examples.cmake. Upon testing, examples.cmake was broken and exposed some edge cases that weren't being handled.\n\nThis allows prerelease versions to be matched by find_package commands that do not specify a version, and adds lexographic comparison for determining compatible prerelease versions.\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 23,
        "deletions": 12,
        "changed_files": 3,
        "created_at": "2016-06-09T22:34:12Z",
        "closed_at": "2016-06-16T00:05:55Z",
        "merged_at": "2016-06-16T00:05:55Z",
        "body": "Saves the properties that impact the build output to the config-version.cmake file, exposing them to package consumers. \nEx\n\n```\nset(protobuf_WITH_ZLIB ON)\nfind_package(protobuf)\n```\n\nwill cause find_package to select only versions of protobuf compiled with zlib support, or fail if no such library can be found.\n\nAdditionally fixes a small bug with protobuf_VERSION_PRERELEASE.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-06-09T17:36:26Z",
        "closed_at": "2016-06-10T17:14:15Z",
        "merged_at": "2016-06-10T17:14:15Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 237,
        "deletions": 9,
        "changed_files": 7,
        "created_at": "2016-06-08T19:40:25Z",
        "closed_at": "2017-03-27T19:03:10Z",
        "merged_at": "2017-03-27T19:03:10Z",
        "body": "Review to @joeltine.\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-06-08T11:43:10Z",
        "closed_at": "2018-06-08T18:22:12Z",
        "merged_at": null,
        "body": "The function fixed return value from size_type to bool.\nThe \"Map::erase(const key_type& key)\" function return type of size_type but the \"MapField<Key, T, kKeyFieldType, kValueFieldType, default_enum_value>::DeleteMapValue(const MapKey& map_key)\" function return type of bool.\n\nI use to Map for the proto message in UnrealEngine4 C++ project on Windows Platform.\nBut This project does compile to build error in Warning 4800.\nBecause the way UnrealEngine4 engine code is written about \"#pragma warning (error: 4800)\".\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 24,
        "changed_files": 1,
        "created_at": "2016-06-08T03:38:40Z",
        "closed_at": "2016-06-16T00:06:36Z",
        "merged_at": "2016-06-16T00:06:36Z",
        "body": "Removes handling for a non-existant case.\n\nThis handling was introduced in #1642, but made unnecessary by changes in #1643 \n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 181,
        "deletions": 94,
        "changed_files": 5,
        "created_at": "2016-06-08T03:00:52Z",
        "closed_at": "2018-06-08T18:23:01Z",
        "merged_at": null,
        "body": "Adds a documented, extensible function for generating source files from .proto files with simpler syntax than the legacy alternative.\n\nIn CMake 3+, takes advantage of the target_sources command to add the generated sources to a given target automatically. Otherwise appends to the given source file list.\n\nOptions are provided and parsed using cmake_parse_arguments rather than setting global variables.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 59,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-06-08T00:11:07Z",
        "closed_at": "2018-06-08T18:23:55Z",
        "merged_at": null,
        "body": "Adds support for cross-compiling to the config package.\n\nAdds 2 new import targets, protobuf::protoc-target and protobuf::protoc-host.\nBy default, they are both duplicates of the protobuf::protoc target.\n\nIf the user sets protobuf_PROTOC_HOST_LOCATION (marked as advanced when not cross-compiling), protobuf::protoc and protobuf::protoc-host are both redirected to point at the provided path, while protobuf::protoc-target will point at the version of protoc provided by the target library.\n\nThe protobuf_PROTOC_HOST_LOCATION  is verified by running `${protobuf_PROTOC_HOST_LOCATION} -version` and checking that the output meets the minimum required protoc version.\n#1609 Allows for #1585 to be resolved, but this does so in a more elegant (if non-standard) fashion.\n",
        "comments": 17
    },
    {
        "merged": false,
        "additions": 17,
        "deletions": 17,
        "changed_files": 6,
        "created_at": "2016-06-05T22:53:57Z",
        "closed_at": "2018-06-08T18:26:10Z",
        "merged_at": null,
        "body": "Replace writeRawVarint32 with writeUInt32NoTag.\nReplace computeRawVarint32Size with computeUInt32SizeNoTag.\n\nAddresses #1596\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 335,
        "deletions": 76,
        "changed_files": 8,
        "created_at": "2016-06-03T02:28:17Z",
        "closed_at": "2016-06-07T17:14:20Z",
        "merged_at": "2016-06-07T17:14:20Z",
        "body": "Based on https://github.com/podsvirov/protobuf/tree/topic-cmake-project\n- Adds support for building the examples\n- Adds support for using the build directory as a local install directory (set protobuf_DIR to the build folder)\n- Fixes breaks in protobuf-module.cmake\n\nExamples may be built separately or as part of a full build of protobuf using protobuf_BUILD_EXAMPLES. This is done using ExternalProject_Add to help ensure that building the examples as part of a full build is as close as possible to building them independently.\nprotobuf_BUILD_EXAMPLES_MULTICONFIG adds 3 additional targets useful for testing the cmake configuration files.\n\n@podsvirov This addresses my comments on https://github.com/google/protobuf/pull/1642 and is much more limited in scope so should be easier to merge.\n#### On using sub_directory\n\nOriginally I used sub_directory to include the examples repo, however there was a cascade of issues caused by calling find_package on a project that is currently in the configuration step, particularly with protobuf_MODULE_COMPATILBITY set.\n- CMP0024 disallows including the result of an export command, which forces the definition of alias targets\n- The protobuf-module.cmake file uses IMPORTED_LOCATION properties to determine locations, but those fields are not available for alias targets.\n- CMP0026 disallows reading LOCATION properties, so the best we can do is using generator expressions\n\nIf the additional complexity in protobuf-config and protobuf-module is acceptable, or if we're ok not supporting protobuf_MODULE_COMPATIBILTIY when generating in that mode, sub_directory might be worth reconsidering\n",
        "comments": 15
    },
    {
        "merged": true,
        "additions": 312,
        "deletions": 69,
        "changed_files": 9,
        "created_at": "2016-06-02T09:56:23Z",
        "closed_at": "2016-06-07T17:14:30Z",
        "merged_at": "2016-06-07T17:14:30Z",
        "body": "A series of improvements:\n- Improved  Protobuf module compatibility (disabled by default);\n- Hide advanced settings;\n- Added build tree configuration;\n- Added build of examples.\n\nDear @xfxyjwf and @yeswalrus please review this changes.\n\nI propose to accept these changes and then continue to improve from @yeswalrus like #1624.\nThis also replace #1631.\n",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-06-01T22:55:30Z",
        "closed_at": "2016-06-02T17:20:53Z",
        "merged_at": "2016-06-02T17:20:53Z",
        "body": "Add reference to Protocol Buffers Dynamic Schema (https://github.com/os72/protobuf-dynamic)\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 44,
        "deletions": 10,
        "changed_files": 1,
        "created_at": "2016-06-01T08:10:12Z",
        "closed_at": "2016-09-09T22:00:25Z",
        "merged_at": "2016-09-09T22:00:25Z",
        "body": "- Generalizes `grpc_cpp_plugin` attr in `_proto_gen` rule to generic `plugin`\n- Export `_proto_gen` rule\n\nIt helps users to support their own plugins in a manner consistent to\n`cc_proto_library` and `py_proto_libary` in their skylark rules.\n\nYou can see an example use of this change in https://github.com/grpc-ecosystem/grpc-gateway/blob/e958c5db30f7b99e1870db42dd5624322f112d0c/grpc-gateway.bzl#L7\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-06-01T06:13:10Z",
        "closed_at": "2016-06-01T22:52:55Z",
        "merged_at": null,
        "body": "Add reference to Protocol Buffers Dynamic Schema (https://github.com/os72/protobuf-dynamic)\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2016-05-31T21:27:25Z",
        "closed_at": "2016-06-03T08:14:22Z",
        "merged_at": null,
        "body": "Obsolete if #1615 is merged.\n\nFixes the the way the config file computes the root of the protobuf install to account for different cmake install structures.\n\nPreviously would go three directories up from the location of the config file.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-05-30T11:44:32Z",
        "closed_at": "2016-05-31T18:06:26Z",
        "merged_at": "2016-05-31T18:06:26Z",
        "body": "1.only support proto3\n2.support oneof map\n3.support nested message and enum for as3\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 110,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2016-05-28T17:50:41Z",
        "closed_at": "2016-07-13T22:49:18Z",
        "merged_at": null,
        "body": "As discussed in #1447, this adds methods that return presence information for non-repeated proto2 fields.\n",
        "comments": 12
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-05-28T08:09:46Z",
        "closed_at": "2016-05-31T17:01:31Z",
        "merged_at": null,
        "body": "This seems to have been missed when the version number was bumped to beta-3 from beta-2\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2016-05-28T08:09:00Z",
        "closed_at": "2016-05-31T22:37:08Z",
        "merged_at": "2016-05-31T22:37:08Z",
        "body": "grepping '3.0.0' turned up a host of places where the version number is stored.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 30,
        "deletions": 17,
        "changed_files": 2,
        "created_at": "2016-05-28T06:56:12Z",
        "closed_at": "2016-06-07T21:08:03Z",
        "merged_at": "2016-06-07T21:08:03Z",
        "body": "Allows CMake users to differentiate between prerelease builds and pick between them successfully.\nRequires exact version number matches for prerelease builds.\n\nE.x. To use protobuf 3.0.0-beta-3:\n\n```\nset(protobuf_FIND_VERSION_PRERELEASE beta-3)\nfind_package(protobuf 3.0.0 EXACT)\n```\n\nFixes #1579\n",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 223,
        "deletions": 42,
        "changed_files": 5,
        "created_at": "2016-05-28T01:26:16Z",
        "closed_at": "2016-06-02T18:14:26Z",
        "merged_at": "2016-06-02T18:14:26Z",
        "body": "https://github.com/google/protobuf/issues/1618\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 12,
        "changed_files": 2,
        "created_at": "2016-05-27T18:37:45Z",
        "closed_at": "2016-05-30T23:32:03Z",
        "merged_at": "2016-05-30T23:32:03Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 249,
        "deletions": 172,
        "changed_files": 6,
        "created_at": "2016-05-27T17:19:10Z",
        "closed_at": "2016-05-27T19:04:06Z",
        "merged_at": "2016-05-27T19:04:06Z",
        "body": "Fixes up the code to avoid some issues with isEqual: methods.\n\nOpened https://github.com/google/protobuf/issues/1616 to track the KVC\ncollision.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 160,
        "changed_files": 4,
        "created_at": "2016-05-27T07:30:37Z",
        "closed_at": "2016-06-02T08:18:26Z",
        "merged_at": null,
        "body": "This file is a clone of the old FindProtobuf.cmake module, but enabling it encourages use of out of date practices. Better to remove it entirely and get users to use more modern constructs. If users simply MUST have the old functionality they can use the FindProtobuf.cmake file included in CMake since 2.8\n",
        "comments": 11
    },
    {
        "merged": true,
        "additions": 27,
        "deletions": 37,
        "changed_files": 2,
        "created_at": "2016-05-27T06:51:59Z",
        "closed_at": "2016-05-31T17:51:07Z",
        "merged_at": "2016-05-31T17:51:07Z",
        "body": "Delete a few lines of unnecessary code.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-05-27T06:42:04Z",
        "closed_at": "2016-05-31T22:35:28Z",
        "merged_at": "2016-05-31T22:35:28Z",
        "body": "cmake_policy(SET CMP0022 NEW) causes compilation failures on any version earlier than this.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2016-05-27T06:33:20Z",
        "closed_at": "2016-05-28T08:36:38Z",
        "merged_at": null,
        "body": "Fixed  _PROTOBUF_IMPORT_PREFIX computation to work with different values of CMAKE_INSTALL_CMAKEDIR. Previously it would only work if the cmake directory was 3 directories deeper than the root install directory.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 61,
        "deletions": 20,
        "changed_files": 2,
        "created_at": "2016-05-27T06:30:23Z",
        "closed_at": "2016-05-28T05:43:32Z",
        "merged_at": null,
        "body": "Encodes the prerelease string in the 'tweak' version, and make the config-version module use a rough Semantic Versioning scheme to accept or reject matches.\n\nPreviously find_package(protobuf 3.0.0) would match any prerelease version _and_ the eventual proper 3.0.0 release. Under the new scheme, it will only find the proper 3.0.0 release. For prerelease versions, users may enter find_package(protobuf 3.0.0.x) where x is > 0.\n\nThe encoding scheme chosen means that alpha-2 < beta-1 < beta-1-pre.\n\nCurrently supported prerelease types are 'alpha', 'beta', and 'rc'.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 56,
        "deletions": 22,
        "changed_files": 2,
        "created_at": "2016-05-26T22:55:44Z",
        "closed_at": "2016-06-08T00:31:10Z",
        "merged_at": null,
        "body": "Allow users to specify which parts of the library they want to import when issuing a find_package command.\n\nComponents are libprotobuf, libprotobuf-lite, libprotoc, and protoc. If no component is specified, all are assumed..\n\nFixes #1585 by allowing separate find_pacakage commands to be used for the libraries & protoc.\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 29,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2016-05-26T16:26:15Z",
        "closed_at": "2016-05-27T17:45:36Z",
        "merged_at": "2016-05-27T17:45:36Z",
        "body": "This is currently checking for the wrong class for enums\nand NSMutableArray fields.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2016-05-25T22:18:54Z",
        "closed_at": "2016-07-29T15:59:39Z",
        "merged_at": null,
        "body": "```\nexternal/protobuf_js/js/message.js:944: WARNING lintChecks JSC_OPTIONAL_PARAM_NOT_MARKED_OPTIONAL - Parameter opt_toObjectFn is optional so its type must end with =\n    field, mapKeyGetterFn, opt_toObjectFn, opt_includeInstance) {\n                           ^\n```\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 269,
        "deletions": 32,
        "changed_files": 23,
        "created_at": "2016-05-25T21:06:43Z",
        "closed_at": "2016-05-26T15:10:00Z",
        "merged_at": "2016-05-26T15:10:00Z",
        "body": "Working on https://github.com/google/protobuf/issues/1599, specifically:\n- Turn on more warnings that the Xcode UI calls out with individual controls.\n- Manually add:\n  -Wundef\n  -Wswitch-enum\n- Manually add and then diable in the unittests because of XCTest's headers:\n  -Wreserved-id-macro\n  -Wdocumentation-unknown-command\n- Manually add -Wdirect-ivar-access, but disable it for the unittests and in\n  the library code (via #pragmas to suppress it). This is done so proto users\n  can enable the warning.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 84,
        "deletions": 79,
        "changed_files": 3,
        "created_at": "2016-05-24T20:25:34Z",
        "closed_at": "2016-05-25T14:05:31Z",
        "merged_at": "2016-05-25T14:05:31Z",
        "body": "- Move the ObjC tests into the list and exclude them on linux, this will change\n  where in the order they start, since they are longer, it will have other\n  things run in parallel instead of them ending up last and taking the longest.\n- Switch to the Xcode 7.3 image.\n- Drop the use of xctool and stream line things through the full_mac_build.sh\n  script. This means we end up with only one build script instead of two.\n- Tweaks to the mac build script:\n  - Make iOS Xcode version support explicit\n  - Support Debug/Release only building\n  - Change the OS X min parallel count to 2 to better deal with VMs.\n- Split the travis ios tests into the two Xcode Configurations as the logs are\n  choking travis.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 543,
        "deletions": 95,
        "changed_files": 28,
        "created_at": "2016-05-24T13:29:01Z",
        "closed_at": "2016-05-24T15:31:42Z",
        "merged_at": "2016-05-24T15:31:42Z",
        "body": "- Add generator constant for the default framework name.\n- Add generator api for making the CPP symbol from the name.\n- Add generator api to see if it is a bundled proto file.\n- Output a CPP conditional and two imports for the core library headers.\n- Add helper for generating the #import for file headers to deal with the\n  framework imports.\n- Add a reference from the unittests to a WKT to use that to inspect how\n  imports generate.\n- Update the podspec to define the CPP symbol and require pods 1.0 (or later).\n\nFixes https://github.com/google/protobuf/issues/1457\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2016-05-23T12:13:03Z",
        "closed_at": "2018-06-08T18:34:40Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-05-23T04:46:40Z",
        "closed_at": "2016-05-24T13:36:17Z",
        "merged_at": "2016-05-24T13:36:17Z",
        "body": "Currently encoder.js is missing from the JS alpha release archives.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-05-21T23:06:46Z",
        "closed_at": "2016-05-23T04:51:45Z",
        "merged_at": "2016-05-23T04:51:45Z",
        "body": "This prevented me from generating Makefiles via cmake with the following error:\n\nCMake Error at install.cmake:88 (set):\n  Syntax error in cmake code at\n\n```\n/home/jeff/libs/protobuf/cmake/install.cmake:88\n```\n\n  when parsing string\n\n```\n${_cmakedir_desc\n```\n\n  syntax error, unexpected $end, expecting } (16)\nCall Stack (most recent call first):\n  CMakeLists.txt:153 (include)\n\nAdding the closing bracket fixed this issue.\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 76,
        "deletions": 14,
        "changed_files": 2,
        "created_at": "2016-05-21T07:37:08Z",
        "closed_at": "2016-05-26T02:41:02Z",
        "merged_at": "2016-05-26T02:41:02Z",
        "body": "Users often encounter a Python import error when trying to build Python\nprotos if protobuf is installed locally on the machine. In this case,\nPython ends up looking in the wrong directory when importing files (see\nbazelbuild/bazel#1209 and tensorflow/tensorflow#2021). It seems that the\nproblem is caused by Python getting confused when there are Python\nsource files that are meant to be part of the same package but are\nin separate directories.\n\nPrior to #1233, the Bazel build setup would copy the Python\nruntime sources and all generated sources for the builtin protos into\nthe root directory (assuming that the protobuf tree is vendored in a\ngoogle/protobuf directory).\n\nWith #1233, the two sets of sources are kept in their respective\ndirectories but both `src/` and `python/` are added to the `PYTHONPATH`\nusing the new `imports` attribute of the Bazel Python rules. However,\nboth the runtime sources and the generated sources are under the same\npackage: `google.protobuf`, causing Python to become confused when\ntrying to import modules that are in the other directory.\n\nThis patch adds a workaround to the Bazel build to add a modified\nversion of the original `internal_copied_filegroup` macro to copy the\n`.proto` files under `src/` to `python/` before building the\n`py_proto_library` targets for the builtin protos. This ensures that the\ngenerated sources for the builtin protos will be in the same directory\nas the corresponding runtime sources.\n\nThis patch was tested with the following:\n- All Python tests in protobuf\n- All Python tests in tensorflow\n- All tests in [Skydoc](https://github.com/bazelbuild/skydoc)\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2016-05-20T14:15:37Z",
        "closed_at": "2016-07-10T20:31:35Z",
        "merged_at": "2016-07-10T20:31:35Z",
        "body": "The original documentation seemed to imply a different function usage with a different signature.  Corrected comment to say what the method actually does.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-05-20T00:14:40Z",
        "closed_at": "2016-05-21T03:23:36Z",
        "merged_at": "2016-05-21T03:23:36Z",
        "body": "CMake standards recommend that exported targets be given a namespace.\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 35,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-05-19T22:28:50Z",
        "closed_at": "2016-05-20T18:50:00Z",
        "merged_at": "2016-05-20T18:50:00Z",
        "body": "CMake requires that PACKAGE_VERSION_EXACT, PACKAGE_VERSION_COMPATIBLE, and PACKAGE_VERSION_UNSUITABLE be set by the configuration file. (See https://cmake.org/cmake/help/v3.4/manual/cmake-packages.7.html#package-version-file)\n\nThese updates bring the file in line with that requirement based on the template provided by the CMakePackageConfigHelpers module. \n\nAn alternative PR would update the minimum required CMake version to 2.8.8 and simply use the write_basic_package_version_file function defined in the CMakePackageConfigHelpers module.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2016-05-19T21:57:47Z",
        "closed_at": "2016-05-20T18:45:01Z",
        "merged_at": "2016-05-20T18:45:01Z",
        "body": "Make the cmake configuration file install path configurable and provide reasonable defaults for GNU and Windows systems.\n\n*.cmake files are now installed to ${CMAKE_INSTALL_LIBDIR}/cmake/<name> on GNU systems, and <name>/cmake on MSVC. I chose to branch on MSVC rather than WIN32 out of consideration for CYGWIN environments which would likely favor the GNU install format.\n\n(See the description of cmake's config search behavior on https://cmake.org/cmake/help/v3.4/command/find_package.html)\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2091,
        "deletions": 7,
        "changed_files": 25,
        "created_at": "2016-05-19T18:05:31Z",
        "closed_at": "2016-05-19T20:13:47Z",
        "merged_at": "2016-05-19T20:13:47Z",
        "body": "Working toward better cocoapods builds (https://github.com/google/protobuf/issues/1457), this is some initial work to make it easier to test the followup work.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 131,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-05-19T03:49:48Z",
        "closed_at": "2017-03-14T20:02:35Z",
        "merged_at": null,
        "body": "I've opened a couple issues (#1485, #1563) for gems being released without the well known protobuf types. This PR adds a test file to verify the generated ruby files for the well known protobuf types are available.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 59,
        "deletions": 24,
        "changed_files": 3,
        "created_at": "2016-05-18T17:59:15Z",
        "closed_at": "2016-05-19T15:28:20Z",
        "merged_at": "2016-05-19T15:28:20Z",
        "body": "",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-05-18T14:20:38Z",
        "closed_at": "2016-05-18T21:32:19Z",
        "merged_at": null,
        "body": "Would appreciate if this was merged and pushed to cocoapods so we can use the latest version.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 279,
        "deletions": 16,
        "changed_files": 7,
        "created_at": "2016-05-17T23:13:33Z",
        "closed_at": "2016-07-13T23:49:03Z",
        "merged_at": null,
        "body": "@pherl for review.\n\nAfter these changes, v3.0.0 is source/binary compatible with v2.5.0/v2.6.1. Most v2.5.0/v2.6.1 users should be able to upgrade to v3.0.0 without affecting their dependents if they are following our [protobuf Java compatibility guideline](https://github.com/google/protobuf/tree/master/java#compatibility-notice).\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-05-17T21:42:01Z",
        "closed_at": "2016-05-18T20:14:55Z",
        "merged_at": "2016-05-18T20:14:55Z",
        "body": "This got broken in commit 6ef984af4b0c63c1c33127a12dcfc8e6359f0c9e\nwhich integrated changes from internal branch.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 22,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2016-05-17T20:03:58Z",
        "closed_at": "2016-05-18T00:24:15Z",
        "merged_at": "2016-05-18T00:24:15Z",
        "body": "JSON format for Any message must print @type first, use OrderedDict instead of {}\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-05-17T19:45:26Z",
        "closed_at": "2016-05-18T20:14:19Z",
        "merged_at": "2016-05-18T20:14:19Z",
        "body": "The commit 3b3c8abb9635eb3ea078a821a99c9ef29d66dff7 has replaced the <>\nwith \"\" in #include statement in js_generator.cc\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 155,
        "deletions": 163,
        "changed_files": 12,
        "created_at": "2016-05-16T19:46:45Z",
        "closed_at": "2016-06-07T04:49:48Z",
        "merged_at": "2016-06-07T04:49:48Z",
        "body": "The failure lists were falling out of date because the\ntests would pass even if people forgot to remove failures\nfrom the list.\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 102,
        "deletions": 93,
        "changed_files": 4,
        "created_at": "2016-05-16T17:32:56Z",
        "closed_at": "2018-06-18T21:20:07Z",
        "merged_at": null,
        "body": "This change allows Python protobufs to accept any numeric type that follows the python numbers protocol. It also speeds up adding items to arrays.\n",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 59,
        "deletions": 55,
        "changed_files": 3,
        "created_at": "2016-05-16T03:23:24Z",
        "closed_at": "2017-08-23T09:19:55Z",
        "merged_at": null,
        "body": "changed uses of REAMDE.txt in MakeFile.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 58,
        "deletions": 54,
        "changed_files": 2,
        "created_at": "2016-05-15T07:20:18Z",
        "closed_at": "2017-08-23T09:20:12Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 52,
        "changed_files": 1,
        "created_at": "2016-05-14T19:13:08Z",
        "closed_at": "2018-06-08T18:23:36Z",
        "merged_at": null,
        "body": "Reverts google/protobuf#1529\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-05-14T11:16:02Z",
        "closed_at": "2017-08-23T09:20:23Z",
        "merged_at": null,
        "body": "",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2016-05-14T01:15:10Z",
        "closed_at": "2016-05-16T18:33:46Z",
        "merged_at": "2016-05-16T18:33:46Z",
        "body": "As it may be implementation dependent.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-05-13T23:16:51Z",
        "closed_at": "2016-05-14T00:47:10Z",
        "merged_at": "2016-05-14T00:47:10Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2016-05-13T18:59:57Z",
        "closed_at": "2016-05-16T18:34:44Z",
        "merged_at": null,
        "body": "",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 52,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-05-13T12:14:48Z",
        "closed_at": "2016-05-13T21:50:46Z",
        "merged_at": "2016-05-13T21:50:46Z",
        "body": "Varints are generally encoded in minimum possible length but need to\nensure that any redundancy does not break fields decoder.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2016-05-13T00:56:40Z",
        "closed_at": "2016-05-13T18:27:24Z",
        "merged_at": "2016-05-13T18:27:24Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 266,
        "deletions": 1,
        "changed_files": 9,
        "created_at": "2016-05-12T00:54:33Z",
        "closed_at": "2016-09-23T18:07:45Z",
        "merged_at": "2016-09-23T18:07:45Z",
        "body": "Here are initial benchmark results:\n\n```\nRun on (12 X 3201 MHz CPU s)\n2016-05-11 17:49:45\nBenchmark                                     Time           CPU Iterations\n---------------------------------------------------------------------------\ngoogle_message1_proto2_parse_noarena        274 ns        274 ns    2773101   792.218MB/s\ngoogle_message1_proto2_parse_arena          996 ns        993 ns     707578   218.903MB/s\ngoogle_message1_proto2_serialize            155 ns        156 ns    4489021   1.36459GB/s\ngoogle_message1_proto3_parse_noarena        520 ns        519 ns    1268185   419.151MB/s\ngoogle_message1_proto3_parse_arena         1204 ns       1205 ns     604370   180.504MB/s\ngoogle_message1_proto3_serialize            293 ns        292 ns    2403943   722.365MB/s\ngoogle_message2_parse_noarena            125942 ns     126397 ns       5557   638.088MB/s\ngoogle_message2_parse_arena              284564 ns     285310 ns       2464   282.683MB/s\ngoogle_message2_serialize                 94871 ns      94737 ns      10123   851.324MB/s\n```\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-05-11T23:46:06Z",
        "closed_at": "2016-05-12T17:29:32Z",
        "merged_at": "2016-05-12T17:29:32Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 19521,
        "deletions": 0,
        "changed_files": 78,
        "created_at": "2016-05-11T23:43:47Z",
        "closed_at": "2016-05-20T22:17:05Z",
        "merged_at": "2016-05-20T22:17:05Z",
        "body": "@pherl for review. Most of the actual code/protos are just coped from v2.5.0 source. Only these files are of interest to review:\njava/compatibility_tests/README.md\njava/compatibility_tests/v2.5.0/test.sh\njava/compatibility_tests/v2.5.0/pom.xml\njava/compatibility_tests/v2.5.0/protos/pom.xml\njava/compatibility_tests/v2.5.0/more_protos/pom.xml\njava/compatibility_tests/v2.5.0/tests/pom.xml\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 55,
        "deletions": 30,
        "changed_files": 1,
        "created_at": "2016-05-11T23:25:01Z",
        "closed_at": "2016-05-12T17:32:49Z",
        "merged_at": "2016-05-12T17:32:48Z",
        "body": "@pherl for review\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 23,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2016-05-11T23:20:51Z",
        "closed_at": "2016-05-13T00:50:13Z",
        "merged_at": "2016-05-13T00:50:13Z",
        "body": "\"make google/protobuf/stubs/pbconfig.h\" was added in hope of addressing\nthe issue that when you \"make protoc\" from a freshly checked out\nproject, pbconfig.h will be reported missing. However, the trick doesn't\nseem to work. Instead, add instructions in the document to work the issue\naround.\n\nAlso document why MSYS2 cannot be used for publishing protoc.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 55,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2016-05-11T22:05:52Z",
        "closed_at": "2016-05-12T17:34:40Z",
        "merged_at": "2016-05-12T17:34:40Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 19,
        "deletions": 7,
        "changed_files": 3,
        "created_at": "2016-05-11T17:17:09Z",
        "closed_at": "2016-05-12T09:04:38Z",
        "merged_at": "2016-05-12T09:04:38Z",
        "body": "Also added a standalone formatter test, for confidence.\nHave validated that undoing the change in 835fb947 breaks the tests\n(i.e. we are still testing that the change is required).\n\n// cc @jhickson for review, as it's effectively moving their test...\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2016-05-11T08:48:11Z",
        "closed_at": "2016-05-11T16:23:08Z",
        "merged_at": "2016-05-11T16:23:08Z",
        "body": "A JSON string generated by the JsonFormatter  for a BoolValue could not be in turn parsed by JsonParser because the JsonParser did not recognise BoolValue as a well-known type and so expected a JSON object.\n",
        "comments": 12
    },
    {
        "merged": true,
        "additions": 104,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-05-11T00:38:32Z",
        "closed_at": "2016-05-11T22:32:19Z",
        "merged_at": "2016-05-11T22:32:19Z",
        "body": "I have left some TODOs for people who are working on this to add more details. @haberman @anandolee @nmittler @jskeet @danielweis\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2016-05-10T23:21:19Z",
        "closed_at": "2016-05-11T00:35:08Z",
        "merged_at": "2016-05-11T00:35:08Z",
        "body": "This time move the macro inside namespaces; hopefully will work with the\nintegration script.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 14,
        "changed_files": 12,
        "created_at": "2016-05-10T21:51:21Z",
        "closed_at": "2016-05-11T22:10:24Z",
        "merged_at": "2016-05-11T22:10:24Z",
        "body": "",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-05-10T14:54:19Z",
        "closed_at": "2017-04-02T15:55:02Z",
        "merged_at": null,
        "body": "fix https://github.com/google/protobuf/issues/1491\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 10,
        "changed_files": 4,
        "created_at": "2016-05-09T17:41:39Z",
        "closed_at": "2017-04-21T07:34:40Z",
        "merged_at": null,
        "body": "I don't understand the complexity of stuff around MemoryBarrier. I couldn't determine why defines instead *Internal function name was used.\n\nThis changes unblocks build of libprotobuf and libprotobuf-lite. I was unable to build tests, as gtest and gmock are outdated and can't be build for windows store apps. At least 1.7.0 versions (as from cmake visual studio guide). I've tried to compile their latest master and looks like they compile for winstore.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 23,
        "deletions": 22,
        "changed_files": 14,
        "created_at": "2016-05-06T22:28:18Z",
        "closed_at": "2018-06-08T18:24:27Z",
        "merged_at": null,
        "body": "These are the changes I've found necessary to successfully build and run the top-of-tree protobuf with TensorFlow. I don't understand the intricacies of the Python importing changes, those fixes come from empirically trying different import paths until I found one that worked!\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-05-06T20:50:26Z",
        "closed_at": "2016-05-06T22:23:45Z",
        "merged_at": "2016-05-06T22:23:45Z",
        "body": "Tried to checkout and build on a clean ubuntu. In comparison with the tools needed make, unzip and g++ were missing.\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 110,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2016-05-06T16:50:59Z",
        "closed_at": "2016-05-09T20:27:27Z",
        "merged_at": "2016-05-09T20:27:27Z",
        "body": "This should get everything back into a state where `make distclean` is complete, and `make maintainer-clean` followed by a `git status --ignored` shows nothing (but the gmock download) left behind.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-05-06T13:02:30Z",
        "closed_at": "2016-05-06T20:48:22Z",
        "merged_at": null,
        "body": "Tried to checkout  and build on a clean ubuntu. In comparison with the tools needed make, clang and unzip where missing.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-05-06T07:18:20Z",
        "closed_at": "2016-05-06T20:36:38Z",
        "merged_at": "2016-05-06T20:36:38Z",
        "body": "Added relative link to cmake guide.\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2016-05-06T01:45:46Z",
        "closed_at": "2016-09-18T08:20:56Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 6,
        "changed_files": 5,
        "created_at": "2016-05-05T23:05:29Z",
        "closed_at": "2016-05-06T22:40:59Z",
        "merged_at": "2016-05-06T22:40:59Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 476,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2016-05-04T22:03:39Z",
        "closed_at": "2016-05-10T23:37:45Z",
        "merged_at": null,
        "body": "",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 34,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-05-04T18:38:09Z",
        "closed_at": "2018-06-19T00:15:35Z",
        "merged_at": null,
        "body": "Google::Protobuf::Descriptor and related classed are defined\nin the C module, if the proto file imports\n'google/protobuf/descriptor.proto', the generated rb file\nstill contains a line of requiring 'google/protobuf/descriptor'\nwhich causes a LoadError.\n\nSince we don't need any additional definitions but want to\nprevent the laod error, simply an empty file is just fine.\n\nThis fixes #1481\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2016-05-04T02:39:13Z",
        "closed_at": "2016-05-11T17:30:41Z",
        "merged_at": "2016-05-11T17:30:41Z",
        "body": "Removes the #definition of __BYTE_ORDER on Windows which is unused by the rest of the Protobuf library (at least according to grep)\n\n __LITTLE_ENDIAN and __BIG_ENDIAN are both undefined, meaning that\n`__BYTE_ORDER == __LITTLE_ENDIAN`\nand\n`__BYTE_ORDER == __BIG_ENDIAN` both wind up evaluating to true.\n\nThis breaks boost/predef/other/endian.h, which checks for the existence of sys/param.h by looking for __BYTE_ORDER, and assumes that if __BYTE_ORDER is defined, then both __LITTLE_ENDIAN and __BIG_ENDIAN will be.\n\nIf these variables are required, a more complete windows shim of sys/param.h should be created.\n",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2016-05-02T17:02:59Z",
        "closed_at": "2016-06-27T15:43:56Z",
        "merged_at": null,
        "body": "The tests are all passing, so just a matter of adding it to `setup.py` and the testing script.\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 529,
        "changed_files": 6,
        "created_at": "2016-04-30T19:24:31Z",
        "closed_at": "2016-05-03T18:10:49Z",
        "merged_at": null,
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 43,
        "deletions": 31,
        "changed_files": 3,
        "created_at": "2016-04-29T18:02:52Z",
        "closed_at": "2016-05-03T20:10:02Z",
        "merged_at": "2016-05-03T20:10:02Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 88,
        "deletions": 23,
        "changed_files": 6,
        "created_at": "2016-04-29T09:15:42Z",
        "closed_at": "2016-05-06T05:29:03Z",
        "merged_at": "2016-05-06T05:29:03Z",
        "body": "(And likewise ignore the prefix in unpack.)\n\nFixes issue #1459.\n\n// cc: @xfxyjwf \n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 87,
        "deletions": 41,
        "changed_files": 2,
        "created_at": "2016-04-29T02:04:30Z",
        "closed_at": "2018-06-18T21:14:17Z",
        "merged_at": null,
        "body": "Mainly, I would just like some way to be able to preserve field names when going back and forth between protobuf messages and JSON. If this PR isn't appropriate, could you suggest some other way this feature might be implemented?\n\nCurrently field names are converted to and from camel case when converting protobuf message to JSON. This pull request adds an option to preserve the field names during the conversion process.\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 10988,
        "deletions": 3837,
        "changed_files": 214,
        "created_at": "2016-04-28T21:45:30Z",
        "closed_at": "2016-05-01T03:36:00Z",
        "merged_at": "2016-05-01T03:36:00Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 493,
        "deletions": 53,
        "changed_files": 3,
        "created_at": "2016-04-28T11:25:17Z",
        "closed_at": "2016-06-28T15:49:41Z",
        "merged_at": null,
        "body": "This is a follow-up for issue #1320. Due to the changes (and some conflicts) I thought it was the best to redo it based on the current files. I also added tests to cover the usage.\n\nMy use case is, that I implemented the [MessageDifferencer](https://github.com/google/protobuf/blob/master/src/google/protobuf/util/message_differencer.cc) in C# and wanted to save the changed values into a log file, but the `ToString()` values are not always good (like for `ByteString`). So I prefered to convert them into the `JsonFormatter.WriteValue()` versions to make them more readable.\n\nIn this [alternative version](https://github.com/google/protobuf/commit/542cf749c72665e60f21cfba9585b6f63cbbdc3e), I used the whole field including the field name. But I found it rather pointless and removed the field name, since my use case was to use the value when I don't want to parse the JSON to get the field.\n\nAs with the last time, I inverted the logic of WriteMessageFields `assumeFirstFieldWritten` variable, since it's pointless to invert it inside the method to `first` and before returning the value inverting it back. The method is `private` and I updated all usages. So there should be no consequences to that change, just making it easier to read. The behaviour stayed the same and all tests run as usual.\n",
        "comments": 28
    },
    {
        "merged": true,
        "additions": 370,
        "deletions": 10,
        "changed_files": 9,
        "created_at": "2016-04-28T01:35:06Z",
        "closed_at": "2016-05-03T20:11:20Z",
        "merged_at": "2016-05-03T20:11:20Z",
        "body": "This takes the code that was sitting in benchmarks/\nalready and makes it easier for language-specific\nbenchmarks to consume.  Future PRs will enhance this\nso that the language-specific benchmarks can report\nmetrics back that will be tracked over time in PerfKit.\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2016-04-27T17:53:58Z",
        "closed_at": "2016-04-28T15:26:26Z",
        "merged_at": "2016-04-28T15:26:26Z",
        "body": "This fixes the test_acts_likes_an_array test in RepeatedFieldTest, which\nchecks that repeated fields respond to the same methods as regular Ruby\narrays. The bsearch_index and dig array methods seem to be new in Ruby\n2.3 and so we should support those.\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 114,
        "deletions": 5,
        "changed_files": 3,
        "created_at": "2016-04-27T17:16:56Z",
        "closed_at": "2016-04-27T20:09:06Z",
        "merged_at": "2016-04-27T20:09:06Z",
        "body": "Both methods weren't checking the has_bits (where the bools are stored), so\nit resulted in invalid results.\n\nAdd a test that should shake out something like this in the future also.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 12,
        "deletions": 12,
        "changed_files": 2,
        "created_at": "2016-04-27T07:24:11Z",
        "closed_at": "2016-05-12T15:15:21Z",
        "merged_at": null,
        "body": "This fixes #1457\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1608,
        "deletions": 1278,
        "changed_files": 4,
        "created_at": "2016-04-26T23:29:50Z",
        "closed_at": "2016-04-27T17:37:33Z",
        "merged_at": "2016-04-27T17:37:33Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 22,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2016-04-26T18:53:37Z",
        "closed_at": "2016-04-26T23:11:14Z",
        "merged_at": "2016-04-26T23:11:14Z",
        "body": "proto2 syntax allows the first enum to have a non zero value. This means any\nfield using that default has a non zero default without having an explicit\ndefault being set. So when deciding what runtime info is needed, don't rely\non an explicit default, always check that the values aren't zero.\n\nFixes https://github.com/google/protobuf/issues/1453\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 146,
        "deletions": 34,
        "changed_files": 3,
        "created_at": "2016-04-24T16:50:54Z",
        "closed_at": "2018-04-16T21:27:40Z",
        "merged_at": null,
        "body": "Added option to enable/disable support for certain language compilers in `protoc`. This allows the user to disable support for compilers that they don't need. Most people will never need this. However, there's a group of users out there (myself included) who have Protobuf as a subtree in their repository and compile it from source every time (similar to how Chromium does this for third party dependencies). Disabling support for certain compilers reduces compile time.\n\nBy default, support for all languages is compiled. The following options have been added to the CMake configuration:\n\n```\n option(protobuf_WITHOUT_CPP_COMPILER \"Build without C++ compiler support\" ON)\n option(protobuf_WITHOUT_JAVA_COMPILER \"Build without Java compiler support\" ON)\n option(protobuf_WITHOUT_CSHARP_COMPILER \"Build without C# compiler support\" ON)\n option(protobuf_WITHOUT_OBJC_COMPILER \"Build without Objective-C compiler support\" ON)\n option(protobuf_WITHOUT_JAVANANO_COMPILER \"Build without Java Nano compiler support\" ON)\n option(protobuf_WITHOUT_JS_COMPILER \"Build without JavaScript compiler support\" ON)\n option(protobuf_WITHOUT_PYTHON_COMPILER \"Build without Python compiler support\" ON)\n option(protobuf_WITHOUT_RUBY_COMPILER \"Build without Ruby compiler support\" ON)\n```\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 80,
        "deletions": 73,
        "changed_files": 4,
        "created_at": "2016-04-24T14:01:49Z",
        "closed_at": "2016-07-20T17:43:21Z",
        "merged_at": "2016-07-20T17:43:21Z",
        "body": "Currently, the JS implementation treats proto2 fields with specified defaults differently from fields without specified defaults.\n\nConsider the following message definition:\n\n``` proto\nmessage Test {\n  optional string foo = 1;\n  optional string bar = 2 [default = \"\"];\n}\n```\n\nThe difference can be observed in the following two cases:\n1. If both `foo` and `bar` are unset, `getFoo()` returns `undefined`, but `getBar()` returns `\"\"`.\n2. If both `foo` and `bar` are unset, `toObject()` returns `{ foo: undefined, bar: \"\" }`.\n\nHowever, `foo` and `bar` should be equivalent when unset per the [spec](https://developers.google.com/protocol-buffers/docs/proto#optional) (which would be consistent with the other implementations). I propose to unify their behavior in the following way:\n1. If both `foo` and `bar` are unset, both `getFoo()` and `getBar()` return `\"\"`.\n2. If both `foo` and `bar` are unset, `toObject()` returns `{}`. This is for two reasons: 1) putting the default value in the object would cause loss of presence information; 2) properties with `undefined` values don't carry any useful information and just add noise to the object.\n\nCoincidentally, this also fixes at least two bugs that I accidentally found while fixing tests:\n1. `oneof` fields with specified defauls are always considered set when serializing. As a result, if the defaulted field comes after the field that was actually set, the wrong field is serialized.\n2. Unset fields with a specified default are serialized as if the field were explicitly set to the default value.\n\nOne test fails (\"debugTest testSimple1\") because I'm not sure how `debug.dump` should work. Currently it includes unset fields in the returned object iff they have specified defaults. Since the presence of a specified default is no longer exposed to JS, `debug.dump` must either always include unset fields, or never include them.\n\nP.S. Consider this a \"feature request with proof-of-concept code attached\", rather than a pull request proper.\n",
        "comments": 20
    },
    {
        "merged": false,
        "additions": 146,
        "deletions": 34,
        "changed_files": 3,
        "created_at": "2016-04-24T12:28:45Z",
        "closed_at": "2016-04-24T16:49:59Z",
        "merged_at": null,
        "body": "Added option to enable/disable support for certain language compilers in `protoc`. This allows the user to disable support for compilers that they don't need. Most people will never need this. However, there's a group of users out there (myself included) who have Protobuf as a subtree in their repository and compile it from source every time (similar to how Chromium does this for third party dependencies). Disabling support for certain compilers reduces compile time.\n\nBy default, support for all languages is compiled. The following options have been added to the CMake configuration:\n\n```\n option(protobuf_WITH_CPP_COMPILER \"Build with C++ compiler support\" ON)\n option(protobuf_WITH_JAVA_COMPILER \"Build with Java compiler support\" ON)\n option(protobuf_WITH_CSHARP_COMPILER \"Build with C# compiler support\" ON)\n option(protobuf_WITH_OBJC_COMPILER \"Build with Objective-C compiler support\" ON)\n option(protobuf_WITH_JAVANANO_COMPILER \"Build with Java Nano compiler support\" ON)\n option(protobuf_WITH_JS_COMPILER \"Build with JavaScript compiler support\" ON)\n option(protobuf_WITH_PYTHON_COMPILER \"Build with Python compiler support\" ON)\n option(protobuf_WITH_RUBY_COMPILER \"Build with Ruby compiler support\" ON)\n```\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 529,
        "changed_files": 6,
        "created_at": "2016-04-23T11:03:18Z",
        "closed_at": "2016-05-03T18:48:36Z",
        "merged_at": null,
        "body": "The benchmarks were originally implemented for C#/Java comparisons,\nbut haven't been fully adopted, and are out of date. If we want\nto get back into benchmarking, we should do so more thoroughly.\n\nFixes issue #1440.\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-04-22T16:01:50Z",
        "closed_at": "2016-04-22T18:45:31Z",
        "merged_at": "2016-04-22T18:45:31Z",
        "body": "We've been experiencing problems (`java.io.InvalidClassException`) when serialising and deserialising messages with extensions (maybe because classes were compiled in a slightly different way at both ends?). Adding `serialVersionUID` to `ExtendableMessage` fixed the problem.\n\nIt turns out that having `serialVersionUID` set in the parent class is not enough. Anyway, this patch shouldn't hurt and it follows the recommendation that `serialVersionUID` should be declared in every `Serializable` class.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 674,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-04-21T21:49:52Z",
        "closed_at": "2016-04-22T16:15:14Z",
        "merged_at": "2016-04-22T16:15:14Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 147,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-04-20T23:04:57Z",
        "closed_at": "2016-04-21T18:45:58Z",
        "merged_at": "2016-04-21T18:45:58Z",
        "body": "Ideally we should migrate everything from the developer guide to g3doc and keep it sync with this docs directory. Even if we can't get to that point, adding a docs directory to host opensource only docs (like this third-party add-ons page) still makes sense.\n\n@pherl to review\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 13220,
        "deletions": 3827,
        "changed_files": 219,
        "created_at": "2016-04-20T21:35:20Z",
        "closed_at": "2016-04-28T21:25:22Z",
        "merged_at": "2016-04-28T21:25:22Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 54,
        "deletions": 22,
        "changed_files": 3,
        "created_at": "2016-04-20T19:14:26Z",
        "closed_at": "2018-06-08T18:31:30Z",
        "merged_at": null,
        "body": "Fixes #1435\n",
        "comments": 14
    },
    {
        "merged": true,
        "additions": 130,
        "deletions": 103,
        "changed_files": 8,
        "created_at": "2016-04-20T16:21:00Z",
        "closed_at": "2016-04-20T18:15:51Z",
        "merged_at": "2016-04-20T18:15:51Z",
        "body": "(There are documentation changes and new fields in descriptor.proto that have resulted\nin changes to the serialized descriptor, but no breaking changes for C#.)\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 38,
        "deletions": 31,
        "changed_files": 2,
        "created_at": "2016-04-20T14:20:11Z",
        "closed_at": "2016-04-20T15:58:19Z",
        "merged_at": "2016-04-20T15:58:18Z",
        "body": "- Always generated into a temp directory so we can see if things changed.\n- Add a flag to control exiting with error when stale vs updating.\n\nThis should let the continuous builds error out when ObjC needs to have the\nchecked in sources updated.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2016-04-20T09:54:01Z",
        "closed_at": "2016-09-26T12:01:47Z",
        "merged_at": null,
        "body": "Solution for https://github.com/google/protobuf/issues/1430\n",
        "comments": 14
    },
    {
        "merged": false,
        "additions": 12,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2016-04-19T23:02:41Z",
        "closed_at": "2018-06-08T18:34:42Z",
        "merged_at": null,
        "body": "delete_if was under the define_array_wrapper_method's, but this made it not evaluate blocks passed in correctly(as it would return an enumerator, and never reach evaluating the block), which is contrary to\nhow delete_if is implemented for arrays\n\nLet me know if you have any questions/tweaks.\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 175,
        "deletions": 20,
        "changed_files": 21,
        "created_at": "2016-04-19T17:14:11Z",
        "closed_at": "2016-04-19T18:17:49Z",
        "merged_at": "2016-04-19T18:17:49Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2016-04-18T21:13:48Z",
        "closed_at": "2016-04-18T22:34:21Z",
        "merged_at": "2016-04-18T22:34:21Z",
        "body": "Fixes #1410 \n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2016-04-15T21:46:29Z",
        "closed_at": "2016-04-20T06:42:06Z",
        "merged_at": "2016-04-20T06:42:06Z",
        "body": "Currently, running `npm test` on Windows fails with:\n\n```\n'.' is not recognized as an internal or external command,\noperable program or batch file.\n```\n\nBecause npm tries to run `./node_modules/gulp/bin/gulp.js test` in `cmd`, which chokes on this syntax and doesn't know anything about shebangs. Adding `node` in front of the command fixes it.\n\nAnother problem is `exec` in gulpfile.js, which is not portable, since it uses `cmd` on Windows. I monkey-patched it with a wrapper around `execFile` that always runs `sh`. This way, the script will run in Git Bash or MSYS2, or even in `cmd` if `sh` is in `PATH`.\n\nBy the way, I initially tried to make gulpfile.js truly portable by eliminating the usage of the shell. But then I realized that I'm basically using Node.js to reinvent things that bash is _designed_ for. It's not unreasonable to expect Windows developers to have bash, as it comes with git.\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 743,
        "deletions": 29,
        "changed_files": 9,
        "created_at": "2016-04-15T16:28:45Z",
        "closed_at": "2016-04-21T00:15:16Z",
        "merged_at": "2016-04-21T00:15:16Z",
        "body": "proto3.\n\nAdded a couple unit test proto3 files, for arena_lite and lite. Cloned\nthe proto3_arena_unittest to test some of the basics of generated code\n(and to ensure that the generated proto3 test files are used by some\ntest).\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-04-14T22:57:20Z",
        "closed_at": "2016-04-20T18:20:34Z",
        "merged_at": "2016-04-20T18:20:34Z",
        "body": "It doesn't seem to be necessary here, and it pulls other testing headers\nduring compilation of release protobuf.\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1663,
        "deletions": 1395,
        "changed_files": 9,
        "created_at": "2016-04-14T19:21:21Z",
        "closed_at": "2016-04-15T19:57:39Z",
        "merged_at": "2016-04-15T19:57:39Z",
        "body": "The flags are:\n\n  UPB_JSON_ACCEPT_LEGACY_FIELD_NAMES\n  UPB_JSON_WRITE_LEGACY_FIELD_NAMES\n\nThe first just allows the parser to accept the old field names.\nThe second makes the printer print the old field names.\n\nThese flags are intended to be temporary, as a migration aid\nfor users.\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2016-04-14T17:49:45Z",
        "closed_at": "2016-05-18T12:36:35Z",
        "merged_at": "2016-05-18T12:36:35Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 50,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2016-04-14T09:52:23Z",
        "closed_at": "2016-05-04T17:55:13Z",
        "merged_at": "2016-05-04T17:55:13Z",
        "body": "A protobuf message will be corrupted in the following scenario:\n1. Use LITE_RUNTIME.\n2. Have an optional enum field following some other field.\n3. Update protocol by adding new values to the enum.\n4. Have an old client parse and serialize a message having enum field\n     set to a value the client does not understand.\n5. Field preceeding the enum is now corrupted.\n\nThe bug is due to the fact that optimized fallthrough in parser code\ndoes not update variablle 'tag' when jumping to the parser code for the\nnext field.\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2016-04-08T21:12:07Z",
        "closed_at": "2016-04-19T17:01:29Z",
        "merged_at": "2016-04-19T17:01:29Z",
        "body": "This is to fix the build break in tensorflow/tensorflow#1289\n\n+cc @martinwicke @podsvirov \n",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 542,
        "deletions": 294,
        "changed_files": 34,
        "created_at": "2016-04-08T12:23:58Z",
        "closed_at": "2016-04-20T08:01:59Z",
        "merged_at": "2016-04-20T08:01:59Z",
        "body": "Depends on #1400.\n\nLet me know if you'd like this restructured in terms of commits - these felt like the most logical breakdown at the time.\n\n// cc @jtattermusch for the C# code\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-04-08T09:01:00Z",
        "closed_at": "2016-04-11T00:33:18Z",
        "merged_at": "2016-04-11T00:33:18Z",
        "body": "This is a fix to #1393. Without it, all my types were being generated as internal on Windows - other platforms may have other behavior, I suspect.\n\n// cc @gvaish\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 44,
        "deletions": 13,
        "changed_files": 5,
        "created_at": "2016-04-07T21:44:56Z",
        "closed_at": "2018-06-08T22:45:40Z",
        "merged_at": null,
        "body": "",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 34430,
        "deletions": 4800,
        "changed_files": 273,
        "created_at": "2016-04-07T21:11:08Z",
        "closed_at": "2016-04-12T06:37:42Z",
        "merged_at": "2016-04-12T06:37:42Z",
        "body": "",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2016-04-06T23:37:43Z",
        "closed_at": "2016-04-07T21:05:40Z",
        "merged_at": "2016-04-07T21:05:40Z",
        "body": "@jskeet \n",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 41,
        "deletions": 19,
        "changed_files": 8,
        "created_at": "2016-04-06T21:34:48Z",
        "closed_at": "2016-04-07T18:05:05Z",
        "merged_at": "2016-04-07T18:05:05Z",
        "body": "",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 111,
        "deletions": 49,
        "changed_files": 21,
        "created_at": "2016-04-06T09:33:11Z",
        "closed_at": "2016-04-07T07:49:27Z",
        "merged_at": "2016-04-07T07:49:27Z",
        "body": "Separated into two commits for simplicity.\n\nNo behavioral change in either commit, but the first is really _just_ source layout, whereas the second changes naming and documentation.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-04-05T14:38:09Z",
        "closed_at": "2016-04-06T19:29:52Z",
        "merged_at": "2016-04-06T19:29:52Z",
        "body": "Xcode 7.3 is released with iOS 9.3 simulator as the default. I'm not sure when you typically update these, and I wasn't sure if it was better to add another entry for Xcode 7.2 w/ iOS 9.2, but there wasn't a similar entry for Xcode 7.1, so I followed the existing pattern.\n",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2016-04-04T19:13:55Z",
        "closed_at": "2016-04-05T17:40:28Z",
        "merged_at": "2016-04-05T17:40:28Z",
        "body": "This is required to allow Tensorflow to build on Android without hacks. Currently we create a dummy pthread library just to satisfy this dependency for a library that does not exist on Android. See https://github.com/google/protobuf/issues/1373 for more context.\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2016-04-01T16:19:19Z",
        "closed_at": "2016-04-01T20:28:56Z",
        "merged_at": "2016-04-01T20:28:56Z",
        "body": "(NCrunch noticed these.)\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 522,
        "deletions": 283,
        "changed_files": 31,
        "created_at": "2016-04-01T16:09:45Z",
        "closed_at": "2016-04-20T16:00:50Z",
        "merged_at": null,
        "body": "The implements prefix removal and PascalCasing, so in an enum Color,\na value of COLOR_BLUE would end up as Blue in the generated code.\n\nThis initial code is unconditional; in reality we may want it controlled by a flag.\nWe'd also definitely want to improve the performance of JsonFormatter.GetOriginalEnumValueName, which uses reflection and a new attribute to determine the original name.\n\nDivided into four commits:\n- C++ code changes\n- C# library changes\n- C# test changes (just changing how we refer to the enum values)\n- C# generated code changes\n\nJosh: apologies for any C++ faux-pas. We can definitely improve the standard of that code before submission :)\n\nRelated issues: #1334 and #1330.\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 94,
        "deletions": 11,
        "changed_files": 2,
        "created_at": "2016-03-31T16:54:46Z",
        "closed_at": "2016-03-31T21:31:05Z",
        "merged_at": "2016-03-31T21:31:05Z",
        "body": "",
        "comments": 11
    },
    {
        "merged": true,
        "additions": 37,
        "deletions": 14,
        "changed_files": 2,
        "created_at": "2016-03-31T06:19:02Z",
        "closed_at": "2016-04-01T00:44:40Z",
        "merged_at": "2016-04-01T00:44:40Z",
        "body": "I've moved both protoc.exe and the proto files out of Google.Protobuf.\nThe .proto files aren't a slam-dunk, but it feels like they belong with protoc as you'd _use_ them with protoc.\nIt's not clear to me whether we really need both an x86 and x64 version of protoc.exe, as x86 would work on 64-bit Windows anyway. Discuss :)\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 79,
        "deletions": 28,
        "changed_files": 2,
        "created_at": "2016-03-30T21:04:34Z",
        "closed_at": "2018-03-20T23:29:52Z",
        "merged_at": null,
        "body": "Statically initialized Status objects are replaced with POD types, and\nan implicit conversion constructor is added to create Status instance\nfrom these.\n\nThis will result in an extra constructor call when using Status::OK and friends, and I'm not sure if this is desirable. Additionally, I think StatusPod type should be in a separate namespace, as I'm not sure we want to expose it as a part of protobuf interface.\n",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-03-30T19:56:20Z",
        "closed_at": "2016-03-31T20:29:29Z",
        "merged_at": "2016-03-31T20:29:29Z",
        "body": "iostream is not actually necessary here, and it introduces unnecessary\nstatic initializers.\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 34422,
        "deletions": 4801,
        "changed_files": 270,
        "created_at": "2016-03-30T18:47:40Z",
        "closed_at": "2016-04-02T00:24:07Z",
        "merged_at": null,
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 39,
        "deletions": 61,
        "changed_files": 1,
        "created_at": "2016-03-30T08:48:15Z",
        "closed_at": "2016-03-31T03:30:51Z",
        "merged_at": "2016-03-31T03:30:51Z",
        "body": "This makes no externally visible behavioral changes. Internally and non-behaviorally:\n- We use a field (compiler-generated) to store the JsonName to avoid recomputing it repeatedly\n- The documentation for JsonName is updated to reflect the meaning better\n- Readonly autoprops and expression-bodied properties used where possible\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 0,
        "changed_files": 6,
        "created_at": "2016-03-30T04:39:36Z",
        "closed_at": "2016-04-28T22:24:03Z",
        "merged_at": null,
        "body": "This instructs the Go protobuf code generator how to generate code in the right\nplace and generate correct import statements. The design for this feature is\ndescribed in https://github.com/golang/protobuf/issues/139.\n\nThis is an integration of a Google-internal change.\n",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-03-29T22:29:33Z",
        "closed_at": "2016-03-30T18:28:54Z",
        "merged_at": "2016-03-30T18:28:54Z",
        "body": "The template can be specialized on primitives, e.g. double, where\nconverting NULL will trigger a warning.\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 7,
        "changed_files": 2,
        "created_at": "2016-03-29T13:23:10Z",
        "closed_at": "2016-03-29T15:55:04Z",
        "merged_at": "2016-03-29T15:55:04Z",
        "body": "Travis updated their images to include an xctool that can randomly kill\ntests, so mark them as flaky to avoid turning things red.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 30,
        "deletions": 17,
        "changed_files": 2,
        "created_at": "2016-03-25T18:09:35Z",
        "closed_at": "2016-04-01T23:14:52Z",
        "merged_at": "2016-04-01T23:14:52Z",
        "body": "",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 177,
        "deletions": 84,
        "changed_files": 32,
        "created_at": "2016-03-24T18:45:43Z",
        "closed_at": "2016-04-05T19:52:17Z",
        "merged_at": "2016-04-05T19:52:17Z",
        "body": "- `csharp_options`: Added `Options` to encapsulate generator options.\n  Supported options for now - file_extension, base_namespace, access_level\n- `{Blah}Generator`: Now accept `Options*` as parameter to constructor\n- `csharp_generator.cc`: Parse and populate options\n- `csharp_base_generator.cc`: `class_access_level` uses `file_options`,\n   added `file_options()` getter for the options.\n",
        "comments": 21
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2016-03-24T07:26:23Z",
        "closed_at": "2016-03-24T18:20:22Z",
        "merged_at": null,
        "body": "Fixes #1311 \n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-03-23T00:57:49Z",
        "closed_at": "2016-03-23T18:36:01Z",
        "merged_at": "2016-03-23T18:36:01Z",
        "body": "When we run protoc from within bazel, we need access to the well known protos, e.g., `Any`, so that protoc can include them.\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-03-22T15:46:05Z",
        "closed_at": "2016-03-22T17:19:42Z",
        "merged_at": "2016-03-22T17:19:42Z",
        "body": "fix warning treated as error prevents building on 64-bit windows.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-03-22T14:29:47Z",
        "closed_at": "2016-03-22T15:43:03Z",
        "merged_at": null,
        "body": "fix for warning treated as error prevents building on 64-bit windows\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 19,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2016-03-21T15:13:12Z",
        "closed_at": "2016-03-21T17:57:14Z",
        "merged_at": "2016-03-21T17:57:14Z",
        "body": "This will lower the amount of dispatch_semaphores created per Message when the\nfull object tree isn't walked in a way that would require them to be created.\nUses a dispatch_once_t for one time init of the dispatch_semaphore.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 4,
        "changed_files": 5,
        "created_at": "2016-03-20T19:34:25Z",
        "closed_at": "2016-03-21T18:35:56Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 476,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2016-03-20T19:25:48Z",
        "closed_at": "2016-03-21T18:35:33Z",
        "merged_at": null,
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2016-03-19T06:08:08Z",
        "closed_at": "2016-03-21T18:32:00Z",
        "merged_at": "2016-03-21T18:32:00Z",
        "body": "- Using custom URL for types in Any will no longer throw an\n  InvalidProtocolBufferException in JsonFormat\n- Fixes #1128\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 487,
        "deletions": 400,
        "changed_files": 3,
        "created_at": "2016-03-19T01:30:17Z",
        "closed_at": "2018-03-12T21:13:14Z",
        "merged_at": "2018-03-12T21:13:14Z",
        "body": "This is a notional PR illustrating an issue we're having with Mosh on debian-sid; the root cause seems to lie with protobuf (though there are at least two bugs/changes elsewhere in the build chain that also contribute).\n\nProtobuf uses the very old, obsoleted-in-2009 `ACX_PTHREAD` macro to detect pthread libraries and set variables appropriately.  On Debian Sid (and probably nearly any modern Linux distro), `pkg-config --libs protobuf` returns `-lprotobuf -pthread -lpthread`.  Usage of `-lpthread` has been deprecated for a long, long time, but protobuf has been getting away with it until now.  Something has recently changed in sid's build toolchain or binutils or glibc so that the oddly-placed `-lpthread` combined with Mosh's aggressive full-RELRO hardening causes a failure in symbol resolution elsewhere in Mosh, causing `mosh-server` to segfault on an unresolved PLT entry for fork() at runtime.  By adopting the newer `AX_PTHREAD` macro from autoconf, we get a more-correct `-lprotobuf -pthread`, and mosh is happier.\n\nSee mobile-shell/mosh#727 and https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=817929 for much more discussion on the issue.\n\nI have no idea what the best path for protobuf's maintainers to fix this is, but this PR should illustrate the problem nicely.\n",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 23265,
        "deletions": 125,
        "changed_files": 16,
        "created_at": "2016-03-18T16:39:53Z",
        "closed_at": "2017-03-22T18:36:29Z",
        "merged_at": null,
        "body": "This adds file level option `auto_strip_enum_prefixes` and enum value option `scoped_alias` as discussed in feature request #1079.\n\nThis implements these options in C# and Java only, more can be implemented later, and I plan to implement at least Javascript in the future if no one else does first.\n",
        "comments": 12
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-03-18T12:30:13Z",
        "closed_at": "2018-05-14T20:39:27Z",
        "merged_at": "2018-05-14T20:39:27Z",
        "body": "",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 206,
        "deletions": 9,
        "changed_files": 6,
        "created_at": "2016-03-17T20:27:03Z",
        "closed_at": "2016-03-30T08:11:59Z",
        "merged_at": "2016-03-30T08:11:59Z",
        "body": "It seems that C# protobuf currently does not support the json_name field option. Now it does.\n",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 1015,
        "deletions": 5160,
        "changed_files": 58,
        "created_at": "2016-03-17T17:09:26Z",
        "closed_at": "2016-03-17T21:06:33Z",
        "merged_at": "2016-03-17T21:06:33Z",
        "body": "NOTE: This is a binary breaking change as structure sizes have changed size\nand/or order.\n- Drop capturing field options, no other options were captured and other mobile\n  targeted languages don't try to capture this sort information (saved 8\n  bytes for every field defined (in static data and again in field descriptor\n  instance size data).\n- No longer generate/compile in the messages/enums in descriptor.proto. If\n  developers need it, they should generate it and compile it in. Reduced the\n  overhead of the core library.\n- Compute the number of has_bits actually needs to avoid over reserving.\n- Let the boolean single fields store via a has_bit to avoid storage, makes\n  the common cases of the instance size smaller.\n- Reorder some flags and down size the enums to contain the bits needed.\n- Reorder the items in the structures to manually ensure they are are packed\n  better (especially when generating 64bit code - 8 bytes for every field,\n  16 bytes for every extension, instance sizes 8 bytes also).\n- Split off the structure initialization so when the default is zero, the\n  generated static storage doesn't need to reserve the space. This is batched\n  at the message level, so all the fields for the message have to have zero\n  defaults to get the saves. By definition all proto3 syntax  files fall into\n  this case but it also saves space for the proto2 that use the standard\n  defaults. (saves 8 bytes of static data for every field that had a zero\n  default)\n- Don't track the enums defined by a message. Nothing in the runtime needs it\n  and it was just generation and runtime overhead. (saves 8 bytes per enum)\n- Ensure EnumDescriptors are started up threadsafe in all cases.\n- Split some of the Descriptor initialization into multiple methods so the\n  generated code isn't padded with lots of zero/nil args.\n- Change how oneof info is feed to the runtime enabling us to generate less\n  static data (8 bytes saved per oneof for 64bit).\n- Change how enum value informat is capture to pack the data and only decode\n  it if it ends up being needed. Avoids padding issues causing bloat of 64bit,\n  and removes the needs for extra pointers in addition to the data (just the\n  data and one pointer now).\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 88,
        "deletions": 28,
        "changed_files": 1,
        "created_at": "2016-03-14T13:15:15Z",
        "closed_at": "2016-04-28T07:28:37Z",
        "merged_at": null,
        "body": "I needed to print fields value and wanted to reuse JsonFormatter.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 33,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2016-03-12T02:15:08Z",
        "closed_at": "2016-03-14T21:57:33Z",
        "merged_at": "2016-03-14T21:57:33Z",
        "body": "The java util package got split off from core and a pom created for it, but the bazel build was never updated: there's no bazel target that creates the util package or includes those classes.\n\nThe grpc-java build needs those classes so I added a target.\n\nThe target's pretty routine but requires guava and gson, so those got added to WORKSPACE as maven dependences since that pretty much mirrors what the poms do.\n\nNot sure if there are feelings on that?\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-03-11T17:20:35Z",
        "closed_at": "2016-03-11T20:10:06Z",
        "merged_at": "2016-03-11T20:10:06Z",
        "body": "This change was previously done in //third_party in CL 108656107 but never made it to the open source project and was overwritten in an update.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 43,
        "deletions": 12,
        "changed_files": 2,
        "created_at": "2016-03-11T01:03:53Z",
        "closed_at": "2016-07-29T23:20:58Z",
        "merged_at": null,
        "body": "The Travis build is breaking for the Go sample. I believe this is due to\nthe Go generator using 1.6 features, such as `strings.LastIndexByte`.\nHere is an example: https://travis-ci.org/google/protobuf/jobs/114293020\n\nTo help debug issues like this in the future, use\n[gimme](https://github.com/travis-ci/gimme) to test on multiple\ndifferent versions of Go.\n\nFixes #1305.\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 38,
        "deletions": 32,
        "changed_files": 7,
        "created_at": "2016-03-10T21:49:39Z",
        "closed_at": "2017-05-23T23:22:58Z",
        "merged_at": "2017-05-23T23:22:58Z",
        "body": "These commits clean up several compiler warnings which most of the code is written to build with (like -Wunused-arguments), but appear to have been missed in a few places. They also fix a few pieces of undefined behavior caught by [ubsan](http://clang.llvm.org/docs/UndefinedBehaviorSanitizer.html).\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 43,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2016-03-10T00:21:09Z",
        "closed_at": "2016-03-12T23:15:03Z",
        "merged_at": "2016-03-12T23:15:03Z",
        "body": "These changes are required to enable iOS Blaze building, which we need for TensorFlow. From discussions with the Bazel team this is the cleanest approach that will currently work.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 20,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2016-03-08T22:33:19Z",
        "closed_at": "2018-02-01T19:38:05Z",
        "merged_at": null,
        "body": "This is much faster than ListFields. ListFields was a performance\nbottleneck for my code.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-03-07T22:37:10Z",
        "closed_at": "2016-03-08T00:31:48Z",
        "merged_at": "2016-03-08T00:31:48Z",
        "body": "Update the version to be in sync with the PyPI release with same version that addresses the namespace sharing issues.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1985,
        "deletions": 1363,
        "changed_files": 35,
        "created_at": "2016-03-07T17:09:58Z",
        "closed_at": "2016-03-07T20:11:19Z",
        "merged_at": "2016-03-07T20:11:19Z",
        "body": "- Convert most of the core library headers over to HeaderDoc format.\n- Switch the generated comments over to HeaderDoc.\n- Create GPBCodedOutputStream_PackagePrivate and move some things into there\n  that should be more internal.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 157,
        "deletions": 131,
        "changed_files": 5,
        "created_at": "2016-03-07T01:59:17Z",
        "closed_at": "2016-03-07T09:37:43Z",
        "merged_at": "2016-03-07T09:37:43Z",
        "body": "@jskeet Please review.\n\nIt contains the same changes as #1191\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-03-05T08:48:25Z",
        "closed_at": "2016-03-08T19:15:24Z",
        "merged_at": "2016-03-08T19:15:24Z",
        "body": "I got error during building protobuf with clang/libc++. I could solve the problem with the given patch.\n\nI used kubuntu 15.04 with clang 3.6. libc++ version `_LIBCPP_VERSION=1101`\n\n```\n./configure CC=clang CXX=clang++ CXXFLAGS=\"-std=c++11 -stdlib=libc++\"\n```\n\nAll tests ran successful for me.\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-03-05T08:19:27Z",
        "closed_at": "2016-03-05T21:33:24Z",
        "merged_at": "2016-03-05T21:33:24Z",
        "body": "Improves #1296.\n\nThe problem: in the previous patch, we tweaked the `__init__.py` files to use namespaces, but no longer declared ourselves as a namespace package. The second half was unwise.\n\nNote that this only comes up when installing `protobuf` alongside another package that also installs into the google namespace; as of right now, the only PyPI package that does is `googleapis-common-protos`, though the GAE SDK also uses `google.appengine`. However, this package is in fact a _dependency_ of `googleapis-common-protos`, so that's an extremely likely combination. :wink:\n\nWith this PR, installing either or both of those alongside this package now works.\n\nThe case that still remains is the upgrade path, which is also what worried me in #713. It seems that if protobuf 2.6.1 is installed, there's no way to safely upgrade that to work with a newer protobuf. However, `pip uninstall` && `pip install` does the trick.\n\nPTAL @haberman -- in particular, if we _really_ want this issue to go away forever, we should also make sure to add a tests that (1) deal with the upgrade cases and (2) also install another package that uses the google namespace, eg googleapis-common-protos.\n\n/cc @jonparrott @tseaver and @dhermes for some Python wisdom. @jonparrott, with this change, the cases in your gist now pass (since we've fixed the protobuf vs. googleapis conflict). However, I'm worried that we can't seem to upgrade from 2.6.1; is there any hope there? Have other python packages dealt with this?\n\nI'd also be curious about an easy way to trigger the gcloud tests with this PR; could I just switch [this line](https://github.com/GoogleCloudPlatform/gcloud-python/blob/40332e17391369106aa4380eec780cd5c5deccf7/setup.py#L17) to point directly to the commit in my repo and send a PR, thereby letting Travis do its thing?\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 448,
        "deletions": 36,
        "changed_files": 9,
        "created_at": "2016-03-04T22:47:32Z",
        "closed_at": "2016-03-30T17:51:26Z",
        "merged_at": "2016-03-30T17:51:26Z",
        "body": "I don't have 100% of the Jenkins tests working yet, and it's Linux-only for now. But a lot of tests work and it seemed like a good time for some review.\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 47,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2016-03-03T23:01:30Z",
        "closed_at": "2018-06-08T18:48:07Z",
        "merged_at": null,
        "body": "Hi, I was compiling on Linux s390x (IBM mainframe) and was getting undefined references to some atomic functions. It turns out that the #ifdef **LP64** part of atomicops_internals_generic_gcc.h doesn't have all the atomic functions defined for Atomic64. I added them and now the compilation finishes successfully and passes all 6 tests in \"make check\".\n",
        "comments": 12
    },
    {
        "merged": true,
        "additions": 117,
        "deletions": 87,
        "changed_files": 4,
        "created_at": "2016-03-03T22:14:59Z",
        "closed_at": "2016-03-04T21:09:25Z",
        "merged_at": "2016-03-04T21:09:25Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-03-03T19:52:30Z",
        "closed_at": "2016-03-14T14:07:05Z",
        "merged_at": "2016-03-14T14:07:05Z",
        "body": "Adds the package to the error displayed when the expected objc_class_prefix option is missing.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 152,
        "deletions": 12,
        "changed_files": 5,
        "created_at": "2016-02-29T11:52:49Z",
        "closed_at": "2016-02-29T17:27:06Z",
        "merged_at": "2016-02-29T17:27:06Z",
        "body": "This fixes issue #679 and issue #1282.\n(The .gitignore change is just around ncrunch; I can put it in a separate PR if you really want.)\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 27,
        "deletions": 9,
        "changed_files": 2,
        "created_at": "2016-02-25T15:55:11Z",
        "closed_at": "2016-03-12T00:58:16Z",
        "merged_at": "2016-03-12T00:58:16Z",
        "body": "I tried to match style but this is my first protobuf/bazel PR so YMMV.\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2016-02-25T01:32:47Z",
        "closed_at": "2016-02-25T20:34:27Z",
        "merged_at": "2016-02-25T20:34:27Z",
        "body": "grpc C++ plugin generates additional files, namely .grpc.pb.cc and\n.grpc.pb.h. Adding these files to the outs of the _proto_gen rule, so\ndependents don't complain about undeclared inclusions. Also, compiling\nthe .grpc.pb.cc requires additional header files from the grpc library,\nso added //external:grpc_plugin_support to the deps of the\ncc_library. Clients are expected to declare that in their bazel\nWORKSPACE, pointing it to @grpc//:grpc_plugin_support.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 160,
        "deletions": 11,
        "changed_files": 8,
        "created_at": "2016-02-24T21:47:06Z",
        "closed_at": "2016-02-29T18:09:57Z",
        "merged_at": "2016-02-29T18:09:57Z",
        "body": "This makes proto files that require each other use the proper relative CommonJS require statements. It also adds a simple test with two proto files in different directories, with one importing the other.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 5012,
        "deletions": 8,
        "changed_files": 42,
        "created_at": "2016-02-23T00:43:10Z",
        "closed_at": "2018-06-03T22:18:34Z",
        "merged_at": null,
        "body": "This PR adds support for the D programming language.\r\n\r\nCompiler version dmd 2.077.0 or later is required.\r\n\r\nI am thankful for any suggestion that helps merging this PR upstream. \r\n\r\n  ",
        "comments": 11
    },
    {
        "merged": true,
        "additions": 17,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-02-22T22:36:15Z",
        "closed_at": "2016-02-23T18:53:45Z",
        "merged_at": "2016-02-23T18:53:45Z",
        "body": "cc_proto_library now supports use_grpc_plugin flag that passes\n--plugin=protoc-gen-grpc=grpc_cpp_plugin to protoc compiler\ninvocation. grpc_cpp_plugin is assumed to be present as\n//external:grpc_cpp_plugin, so clients can setup their WORKSPACE files\nappropriately to point to grpc location using bind.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2016-02-22T13:05:01Z",
        "closed_at": "2016-02-22T20:46:36Z",
        "merged_at": "2016-02-22T20:46:36Z",
        "body": "(This is to address an issue where users tried to open the solution in VS2013, and saw failed builds.)\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2016-02-19T14:02:40Z",
        "closed_at": "2016-02-21T23:58:40Z",
        "merged_at": null,
        "body": "Reformatted the console sample to get the nice looking formatting of markdown on github.\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-02-19T09:12:04Z",
        "closed_at": "2018-06-20T20:02:17Z",
        "merged_at": "2018-06-20T20:02:16Z",
        "body": "",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2016-02-19T07:47:02Z",
        "closed_at": "2016-03-02T18:16:21Z",
        "merged_at": "2016-03-02T18:16:21Z",
        "body": "This works only for c+11, but it looks like proto_h is already conditionally used to enable c++11 features [1], so I took the liberty of hijacking it for this purpose.\n\nThe main advantage of this is that it makes static initialization order well defined. I can develop more if need be.\n\n[1]https://github.com/google/protobuf/blob/a74e912a8be1274fd561db5e8133937d4e9c4a2b/src/google/protobuf/compiler/cpp/cpp_enum.cc#L83\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 2,
        "changed_files": 4,
        "created_at": "2016-02-19T00:26:34Z",
        "closed_at": "2016-02-24T18:50:03Z",
        "merged_at": "2016-02-24T18:50:03Z",
        "body": "ATTN: @haberman, @craigcitro\nThis is based on a patch from Craig Citro. I will need some hand holding to actually build the protobuf Py lib to do some manual tests. Did not  manage to do a python setup.py build/test/install on a fresh clone.\nI know that the **init**.py files will work because I am already doing some namespace sharing in google/ and google/cloud with other packages but still this needs to be manually tested for protobuf.\nThanks,\nSilviu \n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 588,
        "deletions": 490,
        "changed_files": 35,
        "created_at": "2016-02-18T21:30:38Z",
        "closed_at": "2016-02-19T15:45:32Z",
        "merged_at": "2016-02-19T15:45:32Z",
        "body": "- Extend GPB*ObjectDictionary to support generic syntax.\n- Update the generator to output generics so the enclosed type is exposed for compiler checks.\n- Use generics in a the public interfaces.\n- Update the generated sources that are checked in.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-02-17T18:28:59Z",
        "closed_at": "2018-06-18T22:23:20Z",
        "merged_at": null,
        "body": "Compilation of protobuf for PowerPC and SPARC may fail due to missing\nreferences to __atomic_fetch_add_4 and __atomic_compare_exchange_4.\n\nThe __atomic_*() intrinsics for all sizes are provided by libatomic when\ngcc is >= 4.8. This can be achieved by adding this to configure.ac:\n\n```\nAC_SEARCH_LIBS([__atomic_fetch_add_4], [atomic])\n```\n\nSigned-off-by: Carlos Santos casantos@datacom.ind.br\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-02-17T08:15:49Z",
        "closed_at": "2016-02-18T16:14:37Z",
        "merged_at": null,
        "body": "This is a temporary PR to test the timing issue that Thomas (@thomasvl) suggested could be causing the iOS builds not to complete successfully.  It slows down the throughput of the `xctool`.  This will initiate a Travis to observe the results.\n\nPaul\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 27,
        "deletions": 23,
        "changed_files": 17,
        "created_at": "2016-02-16T21:42:06Z",
        "closed_at": "2017-07-17T16:48:52Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-02-16T16:21:13Z",
        "closed_at": "2016-02-16T19:27:58Z",
        "merged_at": "2016-02-16T19:27:58Z",
        "body": "- Use the plain reporter for slightly more readable logs.\n- Add -newSimulatorInstance to the run-tests to see if it helps with flake.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 5,
        "changed_files": 3,
        "created_at": "2016-02-16T14:22:08Z",
        "closed_at": "2016-02-16T16:14:47Z",
        "merged_at": "2016-02-16T16:14:47Z",
        "body": "- Update simulator versions used.\n- Mark the iOS tests as flaky while trying to dig out the root cause (issue #1232)\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 41,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2016-02-15T14:18:48Z",
        "closed_at": "2016-02-18T00:07:50Z",
        "merged_at": "2016-02-18T00:07:50Z",
        "body": "This was in an attempt to fix the wrapper handling corner case, but it's really fiddly.\nThe new tests give a bit more clarity to the issue, but I haven't actually fixed anything...\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 77,
        "deletions": 12,
        "changed_files": 3,
        "created_at": "2016-02-15T11:59:10Z",
        "closed_at": "2016-02-18T22:38:06Z",
        "merged_at": "2016-02-18T22:38:06Z",
        "body": "This detects:\n- An end-group tag with the wrong field number (doesn't match the start-group field)\n- An end-group tag with no preceding start-group tag\n\nFixes issue #688.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2016-02-15T10:38:42Z",
        "closed_at": "2016-02-18T06:45:51Z",
        "merged_at": "2016-02-18T06:45:51Z",
        "body": "This is a start to fixing issue #1212. It won't help for test protos,\nconformance etc, but it will definitely be better than nothing, and\nwould have highlighted a change in descriptor.proto which broken C#\nearlier.\n",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-02-13T07:58:29Z",
        "closed_at": "2018-06-08T18:20:05Z",
        "merged_at": null,
        "body": "Added `size_t` overflow check inside `NewBlock func`. Check if  `n` and `kHeaderSize` are overflowed before `size = kHeaderSize + n`\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 51,
        "deletions": 96,
        "changed_files": 4,
        "created_at": "2016-02-12T23:55:09Z",
        "closed_at": "2016-02-25T21:02:56Z",
        "merged_at": "2016-02-25T21:02:56Z",
        "body": "This change makes use of new imports attribute for Bazel's Python rules, which\nenable adding directories to the PYTHONPATH. This allows us to remove\nthe hack for building protobuf's Python support with Bazel and now\nallows projects to include protobuf using a Bazel external repository\nrather than requiring it to be imported directly into the source tree as\n//google/protobuf.\n\nThis change also updates the protobuf BUILD file to use a named\nrepository, @python//, for including Python headers rather than\n//util/python. This allows projects to specify their own package for\nPython headers when including protobuf with an external repository.\n\nFixes #1230\n",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 23,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2016-02-12T01:06:00Z",
        "closed_at": "2016-02-18T00:09:35Z",
        "merged_at": "2016-02-18T00:09:35Z",
        "body": "Added ALLOW_UNLIMITED_BINARY_PROTO macro and setting it when\n--allow_unlimited_binary_proto=true is passed to bazel build.\nWhen this macro is set, SetTotalBytesLimit is called to remove\nthe 64MB limit on binary protos when during ParseFromString.\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-02-11T03:19:57Z",
        "closed_at": "2016-02-12T23:00:38Z",
        "merged_at": "2016-02-12T23:00:38Z",
        "body": "The new version of Cocoapods requires it even when using the podspec locally.\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 9,
        "changed_files": 1,
        "created_at": "2016-02-10T22:22:10Z",
        "closed_at": "2016-02-16T23:43:21Z",
        "merged_at": "2016-02-16T23:43:21Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-02-10T16:40:37Z",
        "closed_at": "2018-06-08T18:12:50Z",
        "merged_at": null,
        "body": "AttachComments transitively modifies the location_ field. The location_ pointed to is used in the class and represents modified state in a const method, which may cause surprising results to callers.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 3,
        "changed_files": 4,
        "created_at": "2016-02-10T00:00:59Z",
        "closed_at": "2016-02-10T18:06:26Z",
        "merged_at": "2016-02-10T18:06:26Z",
        "body": "-- as recommended for opensource projects\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-02-08T11:28:33Z",
        "closed_at": "2016-02-11T18:38:35Z",
        "merged_at": "2016-02-11T18:38:35Z",
        "body": "This is a _speculative_ fix at the moment - Jan, if you could build a new package based on this and give it a try, I'd appreciate it. (When the snk file is checked in, it'll be easier for me to test this myself :)\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2016-02-06T13:35:23Z",
        "closed_at": "2016-02-11T18:43:47Z",
        "merged_at": "2016-02-11T18:43:47Z",
        "body": "When we build protos, there are often very many files at once. So tracking down which file is missing the syntax is a pain.\n\nI am pretty sure this was intended to be in this warning and was inadvertently omitted.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 667,
        "deletions": 79,
        "changed_files": 14,
        "created_at": "2016-02-04T19:13:40Z",
        "closed_at": "2016-02-19T22:39:17Z",
        "merged_at": "2016-02-19T22:39:17Z",
        "body": "This required several codegen changes and a bunch of glue in gulp.js to test it all.\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 26,
        "deletions": 8,
        "changed_files": 4,
        "created_at": "2016-02-04T18:45:59Z",
        "closed_at": "2016-02-08T23:29:11Z",
        "merged_at": "2016-02-08T23:29:11Z",
        "body": "",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 147,
        "deletions": 142,
        "changed_files": 26,
        "created_at": "2016-02-04T15:04:46Z",
        "closed_at": "2016-02-04T16:11:00Z",
        "merged_at": "2016-02-04T16:11:00Z",
        "body": "(This avoids a possible naming collision in the future, in a possible Google.Common project or similar.)\n\nOnly internal code and generated code is likely to be affected - we're not expecting clients to write code against this manually.\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 495,
        "deletions": 185,
        "changed_files": 25,
        "created_at": "2016-02-04T07:08:33Z",
        "closed_at": "2016-02-04T14:43:13Z",
        "merged_at": "2016-02-04T14:43:13Z",
        "body": "Recently, descriptor.proto gained a GeneratedCodeInfo message, which means the generated code conflicts with our type.\nUnfortunately this affects codegen as well, although this is a part of the public API which is very unlikely to affect hand-written code.\n\nGenerated code changes in next commit.\n\nFixes issue #1209.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2016-02-03T11:18:42Z",
        "closed_at": "2016-08-04T10:05:57Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 32,
        "deletions": 16,
        "changed_files": 1,
        "created_at": "2016-02-03T09:50:47Z",
        "closed_at": "2016-02-03T19:11:07Z",
        "merged_at": "2016-02-03T19:11:07Z",
        "body": "Fixes issue #1156.\n\n// cc @jtattermusch \n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 103,
        "changed_files": 3,
        "created_at": "2016-02-02T23:57:20Z",
        "closed_at": "2016-02-05T22:56:14Z",
        "merged_at": "2016-02-05T22:56:14Z",
        "body": "These should have been included in the first match\nbut I overlooked them.\n\nThis involved deleting some of the code that tests\nGoogle-internal-only features.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2104,
        "deletions": 585,
        "changed_files": 27,
        "created_at": "2016-01-29T21:57:23Z",
        "closed_at": "2016-02-01T18:00:40Z",
        "merged_at": "2016-02-01T18:00:40Z",
        "body": "@TeBoring @nmittler for review.\n",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2016-01-29T11:27:21Z",
        "closed_at": "2016-01-29T14:29:11Z",
        "merged_at": null,
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 659,
        "deletions": 25,
        "changed_files": 5,
        "created_at": "2016-01-28T23:43:31Z",
        "closed_at": "2016-02-01T18:08:48Z",
        "merged_at": "2016-02-01T18:08:48Z",
        "body": "**NOTE:** Includes some manual reverts from the internal code base to avoid interfering with more recent GitHub commits.\n\nIgnores new generated subdirectory: `python/google/protobuf/util/`\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 37,
        "deletions": 37,
        "changed_files": 6,
        "created_at": "2016-01-28T09:45:07Z",
        "closed_at": "2016-02-11T19:36:34Z",
        "merged_at": "2016-02-11T19:36:34Z",
        "body": "This fixes warnings related to unused parameters and extra `;`. This is important because all these warnings prevent anyone from compiling their code with `-pedantic -W -Wall -Werror` if they are using protobuf.\n\nI am pretty sure it also prevents people from compiling with Visual Studio who have the warning level set to four.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 157,
        "deletions": 132,
        "changed_files": 5,
        "created_at": "2016-01-28T04:57:44Z",
        "closed_at": "2016-03-07T01:12:23Z",
        "merged_at": null,
        "body": "This commit simply replace StringBuilder with TextWriter to avoid string allocation/encoding overhead when dealing with streams.\n",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2016-01-27T22:26:55Z",
        "closed_at": "2016-02-10T22:12:29Z",
        "merged_at": "2016-02-10T22:12:29Z",
        "body": "Close #1184.\n\nThe Intel compiler does define `_MSC_VER`, so additional check for an Intel-specific macro is required.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2016-01-27T03:54:41Z",
        "closed_at": "2018-06-08T18:16:39Z",
        "merged_at": null,
        "body": "This makes it easier to match up the failing test to their corresponding protobuf.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-01-26T04:14:39Z",
        "closed_at": "2018-06-18T22:28:28Z",
        "merged_at": null,
        "body": "Add additional instructions for using different versions of Visual Studio\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 9,
        "changed_files": 2,
        "created_at": "2016-01-25T22:46:38Z",
        "closed_at": "2016-02-11T20:32:42Z",
        "merged_at": "2016-02-11T20:32:42Z",
        "body": "Updated python examples to open files using the `with` to automatically close files.\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2016-01-25T20:42:55Z",
        "closed_at": "2016-02-11T20:35:40Z",
        "merged_at": "2016-02-11T20:35:40Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2016-01-22T07:09:19Z",
        "closed_at": "2016-01-22T19:29:34Z",
        "merged_at": "2016-01-22T19:29:34Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 254,
        "deletions": 186,
        "changed_files": 2,
        "created_at": "2016-01-22T01:33:17Z",
        "closed_at": "2016-01-22T17:52:44Z",
        "merged_at": "2016-01-22T17:52:44Z",
        "body": "Move the original README.md to src since it's talking about C++\nexclusively and add a more general README.md to document how\nto install protoc for all languages.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 157012,
        "deletions": 286907,
        "changed_files": 1204,
        "created_at": "2016-01-21T20:06:12Z",
        "closed_at": "2016-01-21T21:12:10Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2016-01-21T14:58:38Z",
        "closed_at": "2016-02-02T18:38:45Z",
        "merged_at": "2016-02-02T18:38:45Z",
        "body": "This change make protobuf skylark extension works when protobuf\nis included a a submodule of a git_repository.\n\nNote that this make the Skylark extension unusable prior\nto Bazel 0.1.4 because the workspace_root is not available\non prior version.\n\nTested with Bazel 0.1.4rc2.\n\nFixes https://github.com/bazelbuild/bazel/issues/784.\n",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 8,
        "changed_files": 2,
        "created_at": "2016-01-21T11:56:08Z",
        "closed_at": "2016-07-31T10:40:51Z",
        "merged_at": "2016-07-31T10:40:51Z",
        "body": "\u2026to only use Int64/Uint64 non-wrapped values which can reasonably be expected to be interoperable.\n\n(The fact that not all Int64/Uint64 values _can_ be exactly represented in\nIEEE-754 and thus interoperably amongst JSON implementations is precisely the\nreason for wrapping them when we serialize... it shouldn't be a surprise that\nwe can't round-trip in unwrapped form for all values.)\n\n// cc @xfxyjwf \n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2016-01-21T10:50:34Z",
        "closed_at": "2016-01-21T23:49:08Z",
        "merged_at": "2016-01-21T23:49:08Z",
        "body": "Validation is that the tests still pass, and that the new values are higher than the old ones :)\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2016-01-21T05:15:10Z",
        "closed_at": "2016-01-21T19:19:41Z",
        "merged_at": "2016-01-21T19:19:41Z",
        "body": "Fixes google/protobuf#693\n\nmsan flags this as being undefined behavior. I think it's triggering\nbecause the compiler has to insert a branch to avoid changing the\npointer's value if it starts out NULL. I can't figure out if this is\nactually undefined behavior or not, but it definitely seems to be a gray\narea of the standard which is best avoided.\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 378,
        "deletions": 71,
        "changed_files": 10,
        "created_at": "2016-01-20T18:47:49Z",
        "closed_at": "2016-01-26T16:43:45Z",
        "merged_at": "2016-01-26T16:43:45Z",
        "body": "The usage of ICustomDiagnosticMessage here is non-essential - ToDiagnosticString\ndoesn't actually get called by ToString() in this case, due to JsonFormatter code. It was\nintended to make it clearer that it _did_ have a custom format... but then arguably I should\ndo the same for Value, Struct, Any etc.\n\nMoving some of the code out of JsonFormatter and into Duration/Timestamp/FieldMask likewise\nfeels somewhat nice, somewhat nasty... basically there are JSON-specific bits of formatting, but\nalso domain-specific bits of computation. <sigh>\n\nThoughts welcome.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-01-19T23:20:50Z",
        "closed_at": "2016-01-20T00:57:10Z",
        "merged_at": "2016-01-20T00:57:10Z",
        "body": "StringTypeHandler::SpaceUsed implicitly casts a size_t to an int; g++ does not approve.\nFix by using static_cast to make the cast explicit.\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 12,
        "deletions": 20,
        "changed_files": 1,
        "created_at": "2016-01-19T08:56:34Z",
        "closed_at": "2016-01-19T20:09:25Z",
        "merged_at": null,
        "body": "This change uses bazel labels to reference the directories to add to the\ninclude path for protoc invocations, inheriting include labels from\ndependencies.  This gets the include path right even when getting\ninclude paths from external dependencies (for example, the well-known\nprotos provided by the protocol buffers package itself).\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-01-18T08:00:49Z",
        "closed_at": "2016-02-11T20:39:08Z",
        "merged_at": null,
        "body": "There is an error in example code, and the correction is to change addPeople to addPerson.\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-01-16T04:22:14Z",
        "closed_at": "2016-01-19T19:28:15Z",
        "merged_at": "2016-01-19T19:28:15Z",
        "body": "It's already submitted.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 181,
        "changed_files": 3,
        "created_at": "2016-01-16T01:29:07Z",
        "closed_at": "2016-01-16T07:52:33Z",
        "merged_at": "2016-01-16T07:52:33Z",
        "body": "This PR should un-break the build finally!\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 537,
        "deletions": 233,
        "changed_files": 17,
        "created_at": "2016-01-15T15:06:11Z",
        "closed_at": "2016-01-16T18:28:13Z",
        "merged_at": "2016-01-16T18:28:13Z",
        "body": "Lots of reasonably-small commits here as they touch on various different aspects. I'm open to squashing them into one commit before submission, or leaving them as they are.\n\nSome tests still failing for various reasons - more work to be done, or specs to be changed...\n\n// @haberman \n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 12,
        "changed_files": 10,
        "created_at": "2016-01-15T06:13:51Z",
        "closed_at": "2016-02-12T01:17:48Z",
        "merged_at": "2016-02-12T01:17:48Z",
        "body": "",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 158,
        "deletions": 156,
        "changed_files": 2,
        "created_at": "2016-01-14T22:30:52Z",
        "closed_at": "2016-01-15T18:43:51Z",
        "merged_at": "2016-01-15T18:43:51Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 3292,
        "deletions": 2250,
        "changed_files": 59,
        "created_at": "2016-01-14T03:23:04Z",
        "closed_at": "2018-06-08T18:14:47Z",
        "merged_at": null,
        "body": "Also cleaning up a ton of warnings in the test code.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1172,
        "deletions": 676,
        "changed_files": 8,
        "created_at": "2016-01-14T03:07:41Z",
        "closed_at": "2016-03-05T01:31:12Z",
        "merged_at": "2016-03-05T01:31:12Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-01-13T19:45:05Z",
        "closed_at": "2016-02-14T18:38:28Z",
        "merged_at": null,
        "body": "Closes #1137\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 17,
        "deletions": 17,
        "changed_files": 5,
        "created_at": "2016-01-11T22:57:03Z",
        "closed_at": "2016-01-12T18:54:44Z",
        "merged_at": "2016-01-12T18:54:44Z",
        "body": "It's just a trivial patch to fix some typos. I found those during looking around google/tensorflow. \n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-01-10T04:26:25Z",
        "closed_at": "2016-01-11T19:27:15Z",
        "merged_at": null,
        "body": "Fix podspec by adding missing comma\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 516,
        "deletions": 432,
        "changed_files": 146,
        "created_at": "2016-01-08T17:21:24Z",
        "closed_at": "2016-01-13T19:22:18Z",
        "merged_at": "2016-01-13T19:22:18Z",
        "body": "protobuf/java will become a parent pom that will contain two modules:\n\ncore - contains all of the code for the protobuf-java artifact\nutil - contains all of the code for the protobuf-java-util artifact\n\nAlso cleaned up various Maven warnings.\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-01-08T15:20:04Z",
        "closed_at": "2016-01-08T22:22:28Z",
        "merged_at": "2016-01-08T22:22:28Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 30,
        "deletions": 243,
        "changed_files": 3,
        "created_at": "2016-01-07T00:34:32Z",
        "closed_at": "2016-01-07T19:03:33Z",
        "merged_at": "2016-01-07T19:03:33Z",
        "body": "Added instructions on what tools to install to compile protobuf from\nsource. Removed the INSTALL.txt file because it's just a simple copy of\nthe autoconf documentation and confuses users.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 55,
        "deletions": 63,
        "changed_files": 3,
        "created_at": "2016-01-06T12:53:41Z",
        "closed_at": "2016-01-09T00:58:47Z",
        "merged_at": "2016-01-09T00:58:47Z",
        "body": "This involves quoting timestamp/duration/field-mask values, even when they're not in fields.\nIt's better for consistency.\n\nFixes issue #1097.\n\nThis will require manual merging with PR #1096, although the order in which they're applied is unimportant.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 142,
        "deletions": 1,
        "changed_files": 7,
        "created_at": "2016-01-06T11:14:05Z",
        "closed_at": "2016-01-20T03:38:16Z",
        "merged_at": "2016-01-20T03:38:16Z",
        "body": "This fixes issue #933, effectively.\n\n(I'm not keen on the name ICustomDiagnosticMessage, but can't think of anything better right now. Suggestions welcome!)\n\n// cc @lostindark\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 108,
        "changed_files": 3,
        "created_at": "2016-01-05T21:35:22Z",
        "closed_at": "2016-01-06T19:16:25Z",
        "merged_at": "2016-01-06T19:16:25Z",
        "body": "- Update all the new runner cases to handle a skip result as a skip and not a failure.\n- Make ObjC use the new serialize_error result if it fails to generate the data.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 19117,
        "deletions": 8638,
        "changed_files": 335,
        "created_at": "2016-01-05T19:26:29Z",
        "closed_at": "2016-10-07T23:30:13Z",
        "merged_at": null,
        "body": "The added line needs to be uncommented when releasing in cocoapods.\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 168,
        "deletions": 176,
        "changed_files": 14,
        "created_at": "2016-01-05T18:31:27Z",
        "closed_at": "2016-01-13T04:55:47Z",
        "merged_at": "2016-01-13T04:55:47Z",
        "body": "This is in two commits as it effectively addresses two separate aspects. I can squash the two together later if we want.\n\nThe two aspects are:\n- We shouldn't allow null values in map fields, ever\n- If we read a map entry with no value, and the value type is a message, then we construct an empty instance of that message\n\nThis fixes #1017.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2016-01-05T14:36:41Z",
        "closed_at": "2016-01-09T00:50:05Z",
        "merged_at": "2016-01-09T00:50:05Z",
        "body": "(The method was last used a very long time ago, if ever.)\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 91,
        "deletions": 51,
        "changed_files": 2,
        "created_at": "2016-01-05T09:32:26Z",
        "closed_at": "2016-01-09T00:49:22Z",
        "merged_at": "2016-01-09T00:49:22Z",
        "body": "- Tighten up on Infinity/NaN handling in terms of whitespace handling (and test casing)\n- Validate that values are genuinely integers when they've been parsed from a JSON number (ignoring the fact that 1.0000000000000000001 == 1 as a double...)\n- Allow exponents and decimal points in string representations\n\n(This also uses string interpolation a little more widely than before, although I haven't tried to make it universal. We'll gradually get towards C# 6-isms...)\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1301,
        "deletions": 125,
        "changed_files": 2,
        "created_at": "2016-01-04T14:04:23Z",
        "closed_at": "2016-01-05T07:04:18Z",
        "merged_at": "2016-01-05T07:04:18Z",
        "body": "The conformance tests now use types which are part of src/google/protobuf,\nso we need to include src in the proto path.\n\n(This change includes the regenerated conformance code, which was somewhat out-of-date.)\n\nThe notes around \"fix-ups\" have been out of date for some time now.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2015-12-31T16:20:41Z",
        "closed_at": "2018-06-08T18:17:27Z",
        "merged_at": null,
        "body": "The old code always assuemd a dependency would also have a package. If this was not the case it would produce invalid java code in the form of\n\n``` java\n .{dependency}.getDescriptor()\n```\n\nThe new code checks if the dependency has a package and if not ommits the dot at the beginning\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 152,
        "deletions": 91,
        "changed_files": 3,
        "created_at": "2015-12-31T00:10:43Z",
        "closed_at": "2015-12-31T20:04:36Z",
        "merged_at": "2015-12-31T20:04:36Z",
        "body": "At the moment there are still some crashes, but this first version of the PR at least fixes the compile.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 861,
        "deletions": 59,
        "changed_files": 14,
        "created_at": "2015-12-31T00:08:05Z",
        "closed_at": "2016-01-12T23:30:35Z",
        "merged_at": "2016-01-12T23:30:35Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 73,
        "deletions": 30,
        "changed_files": 6,
        "created_at": "2015-12-21T23:47:47Z",
        "closed_at": "2018-06-08T18:18:34Z",
        "merged_at": null,
        "body": "This would make it so that a ruby user will have a one-step installation process to get both the ruby protobuf runtime and `protoc`. This would build protoc in the gem installation process, and expose it as `protoc.rb` (to avoid conflicting with any existing installation).\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 135,
        "deletions": 1,
        "changed_files": 8,
        "created_at": "2015-12-21T23:25:21Z",
        "closed_at": "2015-12-28T22:00:59Z",
        "merged_at": "2015-12-28T22:00:59Z",
        "body": "Let's see if the tests pass on Travis -- might need a little tweaking.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 53,
        "deletions": 68,
        "changed_files": 2,
        "created_at": "2015-12-21T22:53:59Z",
        "closed_at": "2015-12-30T21:39:44Z",
        "merged_at": null,
        "body": "This is not an actual fix, but just a failed attempt...\n\nLog of the failing tests:\nhttps://travis-ci.org/xfxyjwf/protobuf/jobs/98214373\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 61,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-12-21T22:38:20Z",
        "closed_at": "2015-12-30T21:22:53Z",
        "merged_at": "2015-12-30T21:22:53Z",
        "body": "[skip ci]\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 28,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2015-12-18T15:02:07Z",
        "closed_at": "2015-12-19T01:36:14Z",
        "merged_at": "2015-12-19T01:36:14Z",
        "body": "FileDescriptorTables::kEmpty in descriptor.cc makes programs with dlopen crash\nand it should be altered to a function that returns static const FileDescriptorTables&.\n\nIt has been said at Google C++ style guide that\nvariables of non-pod type with static storage must not be used\nbecause they cause hard-to-find bugs.\nhttps://google.github.io/styleguide/cppguide.html#Static_and_Global_Variables\n\nSee issues below:\n- #194\n- #863\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2015-12-17T17:42:47Z",
        "closed_at": "2015-12-17T22:44:09Z",
        "merged_at": "2015-12-17T22:44:09Z",
        "body": "Follow-up for #1051.\nReferenceGenerator no longer breaks the build on mono (https://github.com/onovotny/ReferenceGenerator/pull/19), so adding it as a dependency.\n\nThis still doesn't solve #1054 fully, but it brings us to a much better state.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 7299,
        "deletions": 17,
        "changed_files": 9,
        "created_at": "2015-12-16T21:40:53Z",
        "closed_at": "2015-12-21T08:30:13Z",
        "merged_at": "2015-12-21T08:30:13Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 53,
        "deletions": 22,
        "changed_files": 3,
        "created_at": "2015-12-16T00:02:07Z",
        "closed_at": "2015-12-17T19:42:59Z",
        "merged_at": "2015-12-17T19:42:59Z",
        "body": "This will allow us to like to specific snippets of code in the\ndocumentation.  I plan to create a tutorial similar to the C# tutorial\nhttps://developers.google.com/protocol-buffers/docs/csharptutorial\n\nSince that tutorial has sections for populating a proto, parsing, and\nserializing, I made a region for each of these for Go.  To make the\npopulating sample more self-contained, I refactor the listing example\nslightly.\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 38,
        "deletions": 19,
        "changed_files": 1,
        "created_at": "2015-12-15T19:39:48Z",
        "closed_at": "2015-12-16T21:14:02Z",
        "merged_at": "2015-12-16T21:14:02Z",
        "body": "See:\nhttps://oren.codes/2015/07/29/targeting-net-core/\nhttps://stackoverflow.com/questions/34136228/unable-to-resolve-assembly-reference-issue-without-frameworkassemblies\n\nAlso bumping nuget package version to beta2.\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 192,
        "deletions": 118,
        "changed_files": 22,
        "created_at": "2015-12-15T09:25:09Z",
        "closed_at": "2015-12-17T13:10:16Z",
        "merged_at": "2015-12-17T13:10:16Z",
        "body": "See #1008 for background.\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2015-12-15T01:32:38Z",
        "closed_at": "2016-01-11T19:16:35Z",
        "merged_at": "2016-01-11T19:16:35Z",
        "body": "Make the code match what the docs claimed, to return a define for HAVE_UNORDERED_MAP\n",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 18,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-12-14T21:09:50Z",
        "closed_at": "2016-08-04T18:21:40Z",
        "merged_at": "2016-08-04T18:21:40Z",
        "body": "When building for 64-bit big endian MIPS I was getting undefined\nreferences to the following four functions during linking.\n\nNoBarrier_AtomicIncrement\nNoBarrier_Store\nNoBarrier_AtomicExchange\nNoBarrier_Load\n\nAdding 64-bit versions of them to atomicops_internals_generic_gcc.h\nfixed the compilation issues.\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-12-12T13:33:31Z",
        "closed_at": "2016-07-29T23:17:50Z",
        "merged_at": null,
        "body": "C++ implementation of python cannot read large size of data because `total_bytes_limit_` is too small. And users cannot change this member variable as `CodedInputStream` object is a local variable.\nI set the limit. With this patch I can read a large size of data.\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-12-08T22:13:16Z",
        "closed_at": "2015-12-09T21:40:38Z",
        "merged_at": "2015-12-09T21:40:38Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 91,
        "deletions": 79,
        "changed_files": 19,
        "created_at": "2015-12-07T21:47:57Z",
        "closed_at": "2015-12-09T00:28:02Z",
        "merged_at": "2015-12-09T00:28:02Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 91,
        "deletions": 7,
        "changed_files": 8,
        "created_at": "2015-12-07T21:10:31Z",
        "closed_at": "2015-12-10T17:41:51Z",
        "merged_at": "2015-12-10T17:41:51Z",
        "body": "",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-12-07T19:54:56Z",
        "closed_at": "2015-12-12T20:12:47Z",
        "merged_at": "2015-12-12T20:12:47Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 24,
        "deletions": 19,
        "changed_files": 1,
        "created_at": "2015-12-07T13:26:19Z",
        "closed_at": "2015-12-16T17:50:50Z",
        "merged_at": "2015-12-16T17:50:49Z",
        "body": "(No assignee yet - let's see what the CI tests show first...)\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 38,
        "deletions": 47,
        "changed_files": 1,
        "created_at": "2015-12-06T02:56:01Z",
        "closed_at": "2015-12-10T00:58:18Z",
        "merged_at": "2015-12-10T00:58:18Z",
        "body": "This PR aims to address the incompatibility between arena.h and the NVCC compiler. NVidia has solved the bug for the latest compiler but earlier ones might still be affected by it. @xfxyjwf and I had a chat in September and he had a solution:\n\nhttps://github.com/xfxyjwf/protobuf/commit/494716a682ef854168e92231a3cdcc89d587d9b9\n\nbut it seems to be not yet merged into the repo. Since it is blocking a side project I've been doing, I am wondering if we can have this merged - a few issues on github would be solved by this too: #787 #800 \n\nTested against nvcc 6.5 and 7.0.\n",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-12-05T01:55:10Z",
        "closed_at": "2015-12-05T17:39:25Z",
        "merged_at": "2015-12-05T17:39:25Z",
        "body": "This enables other xx_proto_library targets to depend on xx_proto_library\ntargets in different packages, and specifically on xx_wkt_protos.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2015-12-03T21:32:55Z",
        "closed_at": "2015-12-04T23:57:32Z",
        "merged_at": "2015-12-04T23:57:31Z",
        "body": "The sources themselves appear to already be Python 3 clean.\n\nThis was the only protobuf change required to get tensorflow working with Python 3.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 186,
        "deletions": 5,
        "changed_files": 8,
        "created_at": "2015-12-02T21:10:20Z",
        "closed_at": "2015-12-05T03:45:50Z",
        "merged_at": "2015-12-05T03:45:50Z",
        "body": "This runs the conformance tests under Travis.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-12-01T21:55:24Z",
        "closed_at": "2015-12-03T18:16:38Z",
        "merged_at": "2015-12-03T18:16:38Z",
        "body": "Bazel 0.1.2 fix strict header checks and sandboxing for C++\nrules. This change add the necessary headers for gmock so\nthe headers get shipped in the sandbox.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2015-11-30T15:32:33Z",
        "closed_at": "2018-06-08T18:18:45Z",
        "merged_at": null,
        "body": "sorry, not familiar with git , may be click a wrong button \n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2015-11-28T20:02:31Z",
        "closed_at": "2015-11-30T18:40:51Z",
        "merged_at": "2015-11-30T18:40:51Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2015-11-25T06:41:17Z",
        "closed_at": "2015-11-25T19:04:06Z",
        "merged_at": "2015-11-25T19:04:06Z",
        "body": "Noticed a typo in the generated documentation for Java LazyField.\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 7,
        "changed_files": 2,
        "created_at": "2015-11-23T17:42:47Z",
        "closed_at": "2015-11-23T19:08:11Z",
        "merged_at": "2015-11-23T19:08:11Z",
        "body": "Also mark all conformance tests as now passing.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 894,
        "deletions": 525,
        "changed_files": 6,
        "created_at": "2015-11-23T16:24:11Z",
        "closed_at": "2015-12-02T08:59:44Z",
        "merged_at": "2015-12-02T08:59:44Z",
        "body": "This is relatively little new code, but it's slightly fiddly.\n\nAdditionally, the formatting means that Any.ToString() will basically always fail - I'll raise a separate issue for that, once I've seen the feedback for this PR.\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 410,
        "deletions": 0,
        "changed_files": 8,
        "created_at": "2015-11-20T23:48:51Z",
        "closed_at": "2015-11-30T21:43:56Z",
        "merged_at": "2015-11-30T21:43:56Z",
        "body": "This follows the other examples so that it can be used as a tutorial,\nsuch as the ones at:\n  https://developers.google.com/protocol-buffers/docs/tutorials\n\nEven though Go generally does not use Makefiles, I added targets for the\nGo examples to be consistent with the other languages.\n",
        "comments": 17
    },
    {
        "merged": true,
        "additions": 47,
        "deletions": 6,
        "changed_files": 3,
        "created_at": "2015-11-20T16:01:31Z",
        "closed_at": "2016-02-11T20:41:34Z",
        "merged_at": "2016-02-11T20:41:34Z",
        "body": "Basically two changes rolled up in one pull request:\n##### Raise NoMethodError for unknown fields\n\nClearer exception message and better ruby field.\n##### Tell what field is causing an exception when raising while parsing initialization map\n\nI find adding the field name makes these exceptions much faster to debug, as I don't have to consider all the parameters.\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 279,
        "deletions": 0,
        "changed_files": 4,
        "created_at": "2015-11-20T14:24:26Z",
        "closed_at": "2015-11-22T16:24:27Z",
        "merged_at": "2015-11-22T16:24:27Z",
        "body": "Biting off just this bit first as I don't need the changes from a previous PR for this part.\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 208,
        "deletions": 245,
        "changed_files": 29,
        "created_at": "2015-11-19T17:16:31Z",
        "closed_at": "2015-11-22T19:59:11Z",
        "merged_at": "2015-11-22T19:59:11Z",
        "body": "This is in preparation for DynamicMessage (and possibly just Any support).\n\nWill see whether our CI systems cope with the C# 6...\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 37,
        "deletions": 42,
        "changed_files": 10,
        "created_at": "2015-11-19T13:05:58Z",
        "closed_at": "2015-11-20T00:31:19Z",
        "merged_at": "2015-11-20T00:31:19Z",
        "body": "This changes csharp_names.h, which will require a corresponding change in GRPC.\n\n(We could potentially do a smaller one which only changed _some_ parts, but I'd rather be consistent one way or the other.)\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2015-11-19T07:12:20Z",
        "closed_at": "2015-11-20T04:02:18Z",
        "merged_at": "2015-11-20T04:02:18Z",
        "body": "SampleUsage in CSharp had a bug: it used to create `AddressBook` from a person (from byte[] of a `Person`).\nAs a result the example also used to fail with `ApplicationException(\"There is a bad person in here!\");`\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-11-19T05:43:50Z",
        "closed_at": "2018-06-08T18:20:23Z",
        "merged_at": null,
        "body": "The command also works for other cmake generators\nbut needs tweeks to the --config /--target for respective generator.\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 51,
        "deletions": 50,
        "changed_files": 1,
        "created_at": "2015-11-17T22:05:30Z",
        "closed_at": "2015-11-18T15:43:19Z",
        "merged_at": "2015-11-18T15:43:19Z",
        "body": "In the old flow, any 2 char prefix in the expected file was still generating a\nwarning about being a poor prefix. Now we check the expected file first, so\nanything expected is let through.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-11-17T21:13:26Z",
        "closed_at": "2015-12-05T01:48:17Z",
        "merged_at": null,
        "body": "The visibility argument is passed in **kargs which is not propagated\ninto all nested build rules. Adding it explicitly allows for propagating\nvisibility into all nested rules.\n\nSpecifically, the rule depends on <dependency>_genproto for all its\ndependencies and such the _genproto rules need to inherit visibility.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 245,
        "deletions": 7,
        "changed_files": 7,
        "created_at": "2015-11-17T19:29:28Z",
        "closed_at": "2015-11-23T17:04:47Z",
        "merged_at": "2015-11-23T17:04:47Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 17,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2015-11-16T18:14:32Z",
        "closed_at": "2015-11-17T09:50:31Z",
        "merged_at": "2015-11-17T09:50:31Z",
        "body": "- Hopefully complete the deps for other languages for the generated conformance proto sources.\n- List the generated sources for cleanup by make's clean rules.\n- Make the toplevel nuke the pyc files that can get created in the ObjC dir.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-11-16T08:38:28Z",
        "closed_at": "2015-11-19T22:39:54Z",
        "merged_at": "2015-11-19T22:39:54Z",
        "body": "This is probably wrong due to the fact that I am just globbing the headers file instead of listing them manually and the `# AUTOGEN...)` parts don't increase my self-confidence, either.\n\nHowever, these changes are necessary so that TensorFlow builds with Bazel, so we'll need to figure something out. Please advise.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 244,
        "deletions": 122,
        "changed_files": 25,
        "created_at": "2015-11-13T20:06:15Z",
        "closed_at": "2015-11-19T12:36:51Z",
        "merged_at": "2015-11-19T12:36:51Z",
        "body": "Note that I'll need to regenerate again after merging PR #944 as that has codegen changes too.\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 43,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2015-11-09T20:10:30Z",
        "closed_at": "2015-11-09T22:43:24Z",
        "merged_at": "2015-11-09T22:43:24Z",
        "body": "xctool is preinstalled on the Travis OS X images and it seems to do better with\niOS simulator flake, so use it instead of xcodebuild.\n\nxctool also is less chatty compared to xcodebuild, so it makes the logs a little\neasier to read.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 34,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2015-11-09T15:56:21Z",
        "closed_at": "2015-11-09T19:04:49Z",
        "merged_at": "2015-11-09T19:04:49Z",
        "body": "- Add objc for iOS and OS X builds to travis configs.\n- Update handing of python install to deal with newer OS X versions.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 133,
        "deletions": 2,
        "changed_files": 11,
        "created_at": "2015-11-06T18:40:19Z",
        "closed_at": "2015-11-09T03:17:08Z",
        "merged_at": "2015-11-09T03:17:08Z",
        "body": "Fix to issue #953. (Not #832 as in the commit comment, but I'll add a comment on issue 953 when merged.)\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2015-11-06T07:35:54Z",
        "closed_at": "2018-06-08T18:16:05Z",
        "merged_at": null,
        "body": "javanano is configured to export package com.google.protobuf, but it probably should be com.google.protobuf.nano\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-11-05T22:57:00Z",
        "closed_at": "2015-11-06T00:35:35Z",
        "merged_at": "2015-11-06T00:35:35Z",
        "body": "@pherl @xfxyjwf: How about this as an alternative to #895?\n\nThis enables a separate project to provide the API in that other pull request, and access the necessary messages needed to implement the plugin protocol, by just linking to the main `protobuf-java` module.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 51,
        "deletions": 17,
        "changed_files": 1,
        "created_at": "2015-11-05T22:28:42Z",
        "closed_at": "2015-11-06T20:19:38Z",
        "merged_at": "2015-11-06T20:19:38Z",
        "body": "- Support building with Xcode 6.4 or 7.x\n- Fix an error in usage info.\n- Add a flag to build the core parts of protobuf only.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 454,
        "deletions": 524,
        "changed_files": 31,
        "created_at": "2015-11-05T09:15:25Z",
        "closed_at": "2015-11-19T08:48:50Z",
        "merged_at": "2015-11-19T08:48:50Z",
        "body": "This avoids having duplicate class names, and is generally simpler.\n",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2015-11-04T20:24:34Z",
        "closed_at": "2015-11-05T14:11:12Z",
        "merged_at": "2015-11-05T14:11:12Z",
        "body": "- Kick off the conformance tests\n- Add missing ignore for something generated by a build on the conformance directory.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 111,
        "deletions": 40,
        "changed_files": 8,
        "created_at": "2015-11-04T11:49:48Z",
        "closed_at": "2015-11-05T16:57:58Z",
        "merged_at": "2015-11-05T16:57:58Z",
        "body": "This is only thrown directly by JsonTokenizer, but surfaces from JsonParser as well. I've added doc comments to hopefully make everything clear.\n\nThe exception is actually thrown by the reader within JsonTokenizer, in anticipation of keeping track of the location within the document, but that change is not within this PR.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 135,
        "deletions": 15,
        "changed_files": 6,
        "created_at": "2015-11-04T09:30:54Z",
        "closed_at": "2015-11-06T02:41:05Z",
        "merged_at": "2015-11-06T02:41:05Z",
        "body": "Fixes issue #932.\n\n(If we want to do the suggested refactoring, I'll do that in another PR which is pure refactoring, if that's okay...)\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2015-11-04T09:13:19Z",
        "closed_at": "2015-11-05T17:09:37Z",
        "merged_at": "2015-11-05T17:09:37Z",
        "body": "(First of the fast-follow PRs after JSON parsing.)\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-11-03T21:40:05Z",
        "closed_at": "2015-11-03T23:22:12Z",
        "merged_at": "2015-11-03T23:22:12Z",
        "body": "This is necessary to run protoc on the host as a dependency for Android BUILD targets with Bazel.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1405,
        "deletions": 888,
        "changed_files": 85,
        "created_at": "2015-11-03T19:55:25Z",
        "closed_at": "2015-11-03T22:30:17Z",
        "merged_at": null,
        "body": "This patch adds support for POWER Linux. Protobuf already support POWER on AIX. The atomicops are sharable between Linux and AIX so I also rename header file to atomicops_internals_power.h.\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2015-11-02T20:42:52Z",
        "closed_at": "2015-11-02T22:10:36Z",
        "merged_at": "2015-11-02T22:10:36Z",
        "body": "1. mathlimits.h must be included before the inclusion of cmath (which\n    gtest/gtest.h seems to include).\n2. hash function for StringPiece doesn't work.\n\n@TeBoring to review\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-11-02T20:26:07Z",
        "closed_at": "2015-11-02T23:02:39Z",
        "merged_at": "2015-11-02T23:02:39Z",
        "body": "To mention that the interface may change or be removed when bazel has\nsupport it natively.\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2015-11-02T09:59:43Z",
        "closed_at": "2015-11-02T12:49:34Z",
        "merged_at": "2015-11-02T12:49:34Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 9,
        "changed_files": 3,
        "created_at": "2015-11-01T14:21:14Z",
        "closed_at": "2018-06-08T18:17:58Z",
        "merged_at": null,
        "body": "as TODO says, we'd better make SourceTree pure virtual.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 7,
        "changed_files": 7,
        "created_at": "2015-10-30T18:13:30Z",
        "closed_at": "2015-10-31T16:41:36Z",
        "merged_at": "2015-10-31T16:41:36Z",
        "body": "",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2915,
        "deletions": 22,
        "changed_files": 17,
        "created_at": "2015-10-30T10:05:10Z",
        "closed_at": "2015-11-04T06:39:08Z",
        "merged_at": "2015-11-04T06:39:08Z",
        "body": "This includes all the well-known types except Any.\nSome aspects are likely to require further work when the details of the JSON parsing expectations are hammered out in more detail. Some of these have \"ignored\" tests already.\n\nNote that the choice _not_ to use Json.NET was made for two reasons:\n- Going from 0 dependencies to 1 dependency is a big hit, and there's not much benefit here\n- Json.NET parses more leniently than we'd want; accommodating that would be nearly as much work as writing the tokenizer\n  This only really affects the JsonTokenizer, which could be replaced by Json.NET. The JsonParser code would be about the same length with Json.NET... but I wouldn't be as confident in it.\n\nI could potentially split this into several commits if you want, but you wouldn't have wanted the original commits, which went via a few wrong turns...\n",
        "comments": 12
    },
    {
        "merged": true,
        "additions": 72,
        "deletions": 70,
        "changed_files": 7,
        "created_at": "2015-10-29T20:10:29Z",
        "closed_at": "2015-10-29T21:53:17Z",
        "merged_at": "2015-10-29T21:53:17Z",
        "body": "VC++ up to VS 2015 RTM does not require explicit storage allocation for\nstatic const integers declared in classes. VS 2015 Update 1 requires\nthese storage definitions in some cases. It's unclear exactly what\ncases - simple tests work with and without the explicit storage\nallocation.\n\nMany previous versions of VC++ have theoretically _allowed_ a\ndefinition to supply storage, but tests on VC++ 2013 show that this\ndoesn't actually work correctly - it leads to duplicate definition\nerrors in Chromium. So, the change is scoped to VS 2015 only.\n\nThis change also updates the generated files to match the new code\ngenerator.\n\nTL;DR - this change is necessary in order for Chromium to build with\nVS 2015 Update 1.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 19,
        "deletions": 10,
        "changed_files": 2,
        "created_at": "2015-10-28T18:45:47Z",
        "closed_at": "2018-06-08T18:12:27Z",
        "merged_at": null,
        "body": "I didn't keep the default of identing by 2 because I don't think its necessary.\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 151,
        "deletions": 81,
        "changed_files": 8,
        "created_at": "2015-10-24T11:10:08Z",
        "closed_at": "2015-10-24T18:41:00Z",
        "merged_at": "2015-10-24T18:41:00Z",
        "body": "I've checked, and the Java code does something similar.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2015-10-23T08:37:51Z",
        "closed_at": "2015-10-30T14:33:39Z",
        "merged_at": "2015-10-30T14:33:39Z",
        "body": "The nullable value type fields already worked, but the use of the CLR property concealed the difference between string and StringWrapper fields.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-10-22T23:12:14Z",
        "closed_at": "2015-10-23T17:13:34Z",
        "merged_at": "2015-10-23T17:13:34Z",
        "body": "Change the #include for any.h to use angle brackets instead of quotes, to be consistent with other protobuf library includes.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 24,
        "deletions": 24,
        "changed_files": 4,
        "created_at": "2015-10-21T09:19:10Z",
        "closed_at": "2018-06-19T04:18:24Z",
        "merged_at": null,
        "body": " (allows quiet build of apps using protobuf on VS2015 at warning level 4)\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 300,
        "deletions": 14,
        "changed_files": 6,
        "created_at": "2015-10-20T20:35:28Z",
        "closed_at": "2016-01-17T04:54:31Z",
        "merged_at": "2016-01-17T04:54:31Z",
        "body": "When the `Parser` type and generated parsing constructors were introduced in v2.5, some functionality became broken.\n\nPrior to that change, if a message could not be read due to an `IOException` on an underlying I/O stream, then the thrown exception would be that same `IOException`. The sub-class `InvalidProtocolBufferException` was thrown when a coded input stream detected invalid message encoding.\n\nBeing able to distinguish between these two cases is very useful in servers that read protobuf requests. Socket exceptions, especially read timeouts, are very different from incorrect encoding. For example, in the case of a read timeout (where the socket hasn't closed, and a client still wants a response), being able to reply with a 408 instead of a 400 is invaluable (since clients will typically treat 400 as a permanent failure and won't retry). Even in server-side metrics, being able to record distinct counts of socket exceptions vs. bad requests is useful.\n\nThis pull request restore the ability to distinguish. The fix is a little bit ugly because everything now goes through `Parser`, and its methods only declare `InvalidProtocolBufferException` as the thrown type. So the `Parser` methods must wrap `IOException`s in `InvalidProtocolBufferException`s (since changing throws clause would break backwards compatibility). Other methods, that are still declared to throw `IOException` (like generated `Message.parseFrom(InputStream)` and `Builder.mergeFrom(InputStream)`) will handle unwrapping, thus restoring their behavior to pre-2.5 form.\n\n<!-- Reviewable:start -->\n\n[<img src=\"https://reviewable.io/review_button.png\" height=40 alt=\"Review on Reviewable\"/>](https://reviewable.io/reviews/google/protobuf/896)\n\n<!-- Reviewable:end -->\n",
        "comments": 17
    },
    {
        "merged": false,
        "additions": 1489,
        "deletions": 0,
        "changed_files": 7,
        "created_at": "2015-10-20T20:05:56Z",
        "closed_at": "2015-11-05T22:59:58Z",
        "merged_at": null,
        "body": "Resurrecting the work of @tbroyer from https://codereview.appspot.com/912042\n\nThe changes in that patch to `plugin.proto`, to add a java package and class name, have already been merged.\n\nThis branch adds a new maven artifact that includes the proto file, the generated Java form of it, and Thomas's basic helper classes for implementing a plugin in Java. Description (more-or-less) from his original code review:\n\n---\n\nIn C++, writing a code generator plugin is as easy as implementing `CodeGenerator` and passing an instance to `google::protobuf::compiler::PluginMain`; it shouldn't be any harder in Java (or Python BTW).\n\nThis patch adds a `JavaHelpers` class which is just a port of `google/protobuf/compiler/java/java_helpers.{h,cc}` with a few additional helper methods; and the helper `Plugin` class.\n\nTo implement a protoc plugin in Java, simply write an implementation of `CodeGenerator`, then create a `main()` method like:\n\n``` java\n  public static void main(String[] args) {\n    Plugin.run(new MyCodeGenerator(args));\n  }\n```\n\nThe main difference with C++ is that the Java code needs to be launched from a shell/batch script. Though, on unix platforms, the JAR can be converted into an executable via the technique described here (where the JAR and the script are merged):\nhttp://en.newinstance.it/2012/04/17/self-executing-jar-files/\n",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 18,
        "created_at": "2015-10-19T12:44:58Z",
        "closed_at": "2017-03-29T08:05:00Z",
        "merged_at": null,
        "body": "Many (but not all) python source files that are not intended to be executed have execute permissions set. This PR runs `chmod a-x` on all Python source files that do not have a `#!` first line, and so cannot be executed.\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 10,
        "changed_files": 1,
        "created_at": "2015-10-16T19:06:48Z",
        "closed_at": "2015-10-16T23:57:36Z",
        "merged_at": "2015-10-16T23:57:36Z",
        "body": "",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2015-10-16T14:45:49Z",
        "closed_at": "2018-06-12T15:26:29Z",
        "merged_at": null,
        "body": "Tools like StyleCop or StyleCopAnalyzers inspect the C# code generated by protoc (and show lots of warnings) if the generated files do not have an `<auto-generated>` header. I've changed the code generator so that such a header is generated. Example:\n\n```\n//------------------------------------------------------------------------------\n// <auto-generated>\n//     Generated by the protocol buffer compiler. DO NOT EDIT!\n//     source: contact.proto\n// </auto-generated>\n//------------------------------------------------------------------------------\n```\n\nThe style matches the headers that are generated by Microsoft tools like [DataSvcUtil](https://msdn.microsoft.com/en-us/library/ee383989%28v=vs.110%29.aspx).\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 151,
        "deletions": 25,
        "changed_files": 2,
        "created_at": "2015-10-15T00:13:07Z",
        "closed_at": "2015-10-16T21:04:25Z",
        "merged_at": "2015-10-16T21:04:25Z",
        "body": "This is needed to support python bazel build.\n\n@xfxyjwf  for review.\n\n<!-- Reviewable:start -->\n\n[<img src=\"https://reviewable.io/review_button.png\" height=40 alt=\"Review on Reviewable\"/>](https://reviewable.io/reviews/google/protobuf/883)\n\n<!-- Reviewable:end -->\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 22,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2015-10-13T19:44:47Z",
        "closed_at": "2016-06-08T21:43:45Z",
        "merged_at": "2016-06-08T21:43:45Z",
        "body": "---\n\nFixes #877.\n",
        "comments": 21
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-10-13T16:49:32Z",
        "closed_at": "2015-10-13T18:08:16Z",
        "merged_at": "2015-10-13T18:08:16Z",
        "body": "Support curl -s argument.\n\nThis is a nice-to-have feature when automating and want curl to be quiet.\n\nSigned-off-by: Matthew Valimaki matthew.valimaki@gmail.com\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-10-13T11:38:32Z",
        "closed_at": "2015-10-13T18:06:36Z",
        "merged_at": "2015-10-13T18:06:36Z",
        "body": "In visual studio the code yields the following warning: C4244: '=' : conversion from 'google::protobuf::uint64' to 'google::protobuf::uint32', possible loss of data\n\nThe function is named SetUInt32Value so I see no reason for it to use a uint64 value as argument.\n\nPlease accept my fix for this.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-10-13T11:23:19Z",
        "closed_at": "2015-10-13T23:52:50Z",
        "merged_at": "2015-10-13T23:52:50Z",
        "body": "In visual studio this the code generates the following warning: warning C4800: 'google::protobuf::int32' : forcing value to bool 'true' or 'false' (performance warning)\n\nAnd looking in the code a bool is returned from a function with return type int32. Is this just a typo?\n\nIf there is no justification for the current code please accept my change.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2015-10-13T00:14:16Z",
        "closed_at": "2015-11-04T02:37:57Z",
        "merged_at": null,
        "body": "``` bash\n$ brew info autoconf automake libtool\n\nautoconf: stable 2.69 (bottled)\nAutomatic configure script builder\nhttps://www.gnu.org/software/autoconf\n/usr/local/Cellar/autoconf/2.69 (70 files, 3.1M) *\n  Poured from bottle\nFrom: https://github.com/Homebrew/homebrew/blob/master/Library/Formula/autoconf.rb\n==> Caveats\nEmacs Lisp files have been installed to:\n/usr/local/share/emacs/site-lisp/\n\nAdd the following to your init file to have packages installed by\nHomebrew added to your load-path:\n(let ((default-directory \"/usr/local/share/emacs/site-lisp/\"))\n  (normal-top-level-add-subdirs-to-load-path))\n\nautomake: stable 1.15 (bottled)\nTool for generating GNU Standards-compliant Makefiles\nhttps://www.gnu.org/software/automake/\n/usr/local/Cellar/automake/1.15 (130 files, 3.2M) *\n  Poured from bottle\nFrom: https://github.com/Homebrew/homebrew/blob/master/Library/Formula/automake.rb\n==> Dependencies\nBuild: xz \u2714\nRequired: autoconf \u2714\n\nlibtool: stable 2.4.6 (bottled)\nGeneric library support script\nhttps://www.gnu.org/software/libtool/\n/usr/local/Cellar/libtool/2.4.6 (69 files, 3.8M) *\n  Poured from bottle\nFrom: https://github.com/Homebrew/homebrew/blob/master/Library/Formula/libtool.rb\n==> Dependencies\nBuild: xz \u2714\n==> Options\n--universal\n        Build a universal binary\n==> Caveats\nIn order to prevent conflicts with Apple's own libtool we have prepended a \"g\"\nso, you have instead: glibtool and glibtoolize.\n```\n\n`libtool` reference may need to be changed to `glibtool` following the Caveats mentioned by brew.\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 27,
        "deletions": 11,
        "changed_files": 4,
        "created_at": "2015-10-10T00:10:36Z",
        "closed_at": "2015-10-20T18:28:48Z",
        "merged_at": "2015-10-20T18:28:48Z",
        "body": "1, objcect_pair_hook is not supported in python2.6, so duplicated key check is removed in 2.6\n2, total_seconds is not suppoted in python2.6, changed to compute seconds directly\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 3441,
        "deletions": 260,
        "changed_files": 39,
        "created_at": "2015-10-09T18:58:22Z",
        "closed_at": "2018-06-24T23:48:30Z",
        "merged_at": null,
        "body": "Added an Encoder interface implemented by CodedOutputStream and the\nnew ZeroCopyEncoder. Added an UnsafeByteString that wraps around a\nByteBuffer and allows access to the underlying buffer.\n\nCreated a JMH EncoderBenchmark that creates a simple protobuf initialized\nwith 10 ints, 10 small strings, and 10 small ByteStrings, as well as one\nByteString that varies in size between tests (SMALL=10, MEDIUM=1KB,\nLARGE=100KB, JUMBO=10MB). I also vary the internal buffer size used by\nboth encoders (SMALL=1KB, MEDIUM=4KB, LARGE=8KB).\n\n<!-- Reviewable:start -->\n\n[<img src=\"https://reviewable.io/review_button.png\" height=40 alt=\"Review on Reviewable\"/>](https://reviewable.io/reviews/google/protobuf/868)\n\n<!-- Reviewable:end -->\n",
        "comments": 22
    },
    {
        "merged": true,
        "additions": 299,
        "deletions": 46,
        "changed_files": 2,
        "created_at": "2015-10-08T21:11:16Z",
        "closed_at": "2015-10-21T17:43:00Z",
        "merged_at": "2015-10-21T17:43:00Z",
        "body": "@haberman for review\n\n<!-- Reviewable:start -->\n\n[<img src=\"https://reviewable.io/review_button.png\" height=40 alt=\"Review on Reviewable\"/>](https://reviewable.io/reviews/google/protobuf/867)\n\n<!-- Reviewable:end -->\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-10-08T15:24:14Z",
        "closed_at": "2015-10-08T20:30:10Z",
        "merged_at": "2015-10-08T20:30:10Z",
        "body": "VS2010 cannot compile json_util_test.cc since it assumes NULL as a zero (int), and therefore cannot convert into to char*\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 138,
        "deletions": 139,
        "changed_files": 13,
        "created_at": "2015-10-07T00:09:52Z",
        "closed_at": "2015-10-29T01:08:44Z",
        "merged_at": "2015-10-29T01:08:44Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2015-10-06T21:21:04Z",
        "closed_at": "2015-10-07T14:46:35Z",
        "merged_at": "2015-10-07T14:46:35Z",
        "body": "@xfxyjwf @haberman for review.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1809,
        "deletions": 65,
        "changed_files": 17,
        "created_at": "2015-10-06T00:33:04Z",
        "closed_at": "2018-06-08T22:51:34Z",
        "merged_at": null,
        "body": "This changelist provides support for linking generated\ncode back to the generating .proto files. It does this\nwith a new message, GeneratedCodeInfo, that contains a\nlist of Annotations. An Annotation connects a range of\ngenerated source text to a logical path (the same path\nas is used in SourceCodeInfo) inside a filename-identified\nsource .proto.\n\nThis changelist extends io::Printer by adding the\ncapability to annotate its output. It does this by keeping\ntrack of the offsets into which substitution variables\nwere expanded after the last call to Print. For example,\nin EnumGenerator::GenerateDefinition:\n\n```\n  printer->Print(vars, \"enum $enumbase$ {\\n\");\n  printer->Annotate(\"enumbase\", descriptor_);\n```\n\nthe call to Printer::Annotate will create a new Annotation\nmessage that links the text range corresponding to the enum's\nname to the EnumDescriptor's path and defining file.\n\nThe GeneratedCodeInfo message is associated with an\nactual generated code file via a target-specific mechanism.\nFor C++, this changelist adds the annotate_headers flag\n(which enables writing the message for a .pb.h file to\na corresponding .pb.h.meta file) and the annotation_pragma_name\nand annotation_guard_name flags. These flags insert a\nguarded block into the .pb.h that looks like:\n\n```\n  #ifdef GUARD_NAME\n  #pragma pragma_name \"examples/addressbook.pb.h.meta\"\n  #endif  // GUARD_NAME\n```\n\nfor an invocation of the form:\n\n```\n  protoc --cpp_out=annotate_headers=true,annotation_pragma_name=pragma_name,annotation_guard_name=GUARD_NAME:tmp\n```\n\nThis allows tools that digest the generated code to tie the knot\nwith the original .proto files by matching up .proto file paths\nand Annotation paths with corresponding SourceCodeInfo paths.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-10-05T21:59:08Z",
        "closed_at": "2015-10-08T20:12:03Z",
        "merged_at": "2015-10-08T20:12:03Z",
        "body": "Fix bazel build\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 41,
        "deletions": 11,
        "changed_files": 5,
        "created_at": "2015-10-02T11:09:24Z",
        "closed_at": "2016-04-04T15:38:22Z",
        "merged_at": "2016-04-04T15:38:22Z",
        "body": "Previously generated objective-c code didn't have deprecated attribute for fields marked with deprecated option. This pull requests fixes this problem by adding DEPRECATED_ATTRIBUTE to all generated properties (field property itself, 'has' properties and '_Count' properties).\n\nExample:\nFor field repeated int32 positions = 2 [deprecated = true]; following code would be generated:\n`@property(nonatomic, readwrite) BOOL hasTableInfo DEPRECATED_ATTRIBUTE;`\n`@property(nonatomic, readwrite, strong, null_resettable) LV2TableInfo *tableInfo DEPRECATED_ATTRIBUTE;`\ninstead of:\n`@property(nonatomic, readwrite) BOOL hasTableInfo;`\n`@property(nonatomic, readwrite, strong, null_resettable) LV2TableInfo *tableInfo;`\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 3322,
        "deletions": 878,
        "changed_files": 107,
        "created_at": "2015-10-01T23:26:19Z",
        "closed_at": "2015-10-06T21:13:01Z",
        "merged_at": "2015-10-06T21:13:01Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 203,
        "deletions": 115,
        "changed_files": 5,
        "created_at": "2015-10-01T12:44:07Z",
        "closed_at": "2015-10-07T16:08:25Z",
        "merged_at": "2015-10-07T16:08:25Z",
        "body": "This changes how we approach JSON formatting in general - instead of looking  at the field a value came from, we just look at the type of the value. It's possible this _could_ be slightly inefficient, but if we start caring about JSON performance deeply, we'll probably want to rewrite all of this anyway. It's definitely simpler this way.\n\nWhen we support dynamic messages, we'll need to modify JsonFormatter to handle enum values, as they won't come be \"real\" .NET enums at that point. It shouldn't be hard to do though.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2123,
        "deletions": 1,
        "changed_files": 32,
        "created_at": "2015-10-01T10:14:50Z",
        "closed_at": "2015-10-05T14:49:17Z",
        "merged_at": "2015-10-05T14:49:17Z",
        "body": "This _just_ dumps everything into an XML `<summary>` tag for fields, enums and messages, but it's a lot better than nothing.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 92,
        "deletions": 6,
        "changed_files": 5,
        "created_at": "2015-09-30T21:03:42Z",
        "closed_at": "2015-10-01T18:00:50Z",
        "merged_at": "2015-10-01T18:00:50Z",
        "body": "NS_ENUM changes defintion in Objective C++ based on the C++ spec being\ncompiled with, special case the one situation where it wouldn't support doing a\nforward decl for the enum.\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1216,
        "deletions": 1208,
        "changed_files": 15,
        "created_at": "2015-09-30T13:55:52Z",
        "closed_at": "2015-09-30T18:01:45Z",
        "merged_at": "2015-09-30T18:01:45Z",
        "body": "- Move up to 8.4 as the high simulator (assuming Xcode 6.4).\n- Add cast to NSMutableDictionary so clang and resolve the selector.\n- Add case for the newer static analyzer so it won't trigger a false warning.\n- Update the \"dictionary\" interface to use \"object\" naming. Xcode 7+ has gotten\n  more strict on the use of nonnull/nullable; combining that with the generic\n  collection support; and the \"dictionary\" classes we created now collide with\n  what the generic KeyValueCoding in the system headers triggering\n  warnings/errors. Fix this and hopefully all future issue by renaming the\n  methods to use \"object\" for the classes that have data types as objects\n  instead of PODs. Taking this renaming hit now while ObjC is still in beta\n  because it is a breaking change for any existing code.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-09-29T21:29:47Z",
        "closed_at": "2016-06-07T18:38:57Z",
        "merged_at": null,
        "body": "OSX 10.11 (El Capitan) Python 2.7.10\n\nAfter installing protobuf 3.0 beta1 I get the following when importing a python proto:\n\n```\n>>> import test_pb2\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"test_pb2.py\", line 6, in <module>\n    from google.protobuf import reflection as _reflection\n  File \"/usr/local/Cellar/google-protobuf/3.0.0-beta-1/libexec/lib/python2.7/site-packages/google/protobuf/reflection.py\", line 58, in <module>\n    from google.protobuf.internal import python_message as message_impl\n  File \"/usr/local/Cellar/google-protobuf/3.0.0-beta-1/libexec/lib/python2.7/site-packages/google/protobuf/internal/python_message.py\", line 61, in <module>\n    import six.moves.copyreg as copyreg\nImportError: No module named copyreg\n```\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 22,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-09-29T20:24:11Z",
        "closed_at": "2015-10-05T20:55:25Z",
        "merged_at": "2015-10-05T20:55:25Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-09-29T16:47:08Z",
        "closed_at": "2015-09-29T22:07:03Z",
        "merged_at": "2015-09-29T22:07:03Z",
        "body": "This was released as `3.0.0-alpha-4.1`\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 75,
        "deletions": 5,
        "changed_files": 23,
        "created_at": "2015-09-29T12:56:30Z",
        "closed_at": "2015-09-30T08:58:07Z",
        "merged_at": "2015-09-30T08:58:07Z",
        "body": "Not the \"pulling .proto comments\" yet, but just enough on a few common types and properties to make the generated API docs rather more readable.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2015-09-28T15:57:33Z",
        "closed_at": "2015-09-29T20:17:55Z",
        "merged_at": "2015-09-29T20:17:55Z",
        "body": "Also updated the Gemfile.lock since alpha-4 has been\npushed to RubyGems.\n\nChange-Id: I8ddc5f125f28aa9a33c88dfe48251a75a877e1d3\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 58,
        "deletions": 39,
        "changed_files": 4,
        "created_at": "2015-09-23T22:19:00Z",
        "closed_at": "2015-10-14T14:40:36Z",
        "merged_at": "2015-10-14T14:40:36Z",
        "body": "Expose the GetOutputFile function in csharp_names.h so that the file naming logic (including base_namespace logic introduced in #785) can be reused by service stub generators (gRPC).\n\n-- Also a bit of refactoring and remove redundant declaration of GetClassName(const Descriptor\\* descriptor) in csharp_helpers.h\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 272,
        "deletions": 76,
        "changed_files": 1,
        "created_at": "2015-09-21T09:20:10Z",
        "closed_at": "2015-10-09T18:36:14Z",
        "merged_at": "2015-10-09T18:36:14Z",
        "body": "The documentation for the CMake project, corresponding to the changes presented in the #783 PR.\nDocumentation may require linguistic corrections.\nIf #783 PR is merged, this documentation should also be merged.\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-09-18T19:56:29Z",
        "closed_at": "2017-03-16T00:08:49Z",
        "merged_at": null,
        "body": "This fixes a warning about an unused typedef:\n\n```\nIgnore unused typedef in _GPBCompileAssert macro\n```\n\nI got this error when adding the Protobuf code to my project, but I can't figure out how to trigger the warning in the Protobuf project. I'm using Xcode 7.0 in both projects.\n#285 is kind of hard to parse, but this may fix the compiler error reported in this.\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 52073,
        "deletions": 11053,
        "changed_files": 504,
        "created_at": "2015-09-16T14:20:35Z",
        "closed_at": "2016-01-09T09:11:31Z",
        "merged_at": null,
        "body": "Fix compile failures building protobuf DLLs on MSVC in Chromium's cod\u2026\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 37,
        "deletions": 348,
        "changed_files": 15,
        "created_at": "2015-09-16T01:27:29Z",
        "closed_at": "2015-10-09T19:38:31Z",
        "merged_at": "2015-10-09T19:38:31Z",
        "body": "",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-09-14T22:48:03Z",
        "closed_at": "2015-09-16T21:44:48Z",
        "merged_at": "2015-09-16T21:44:48Z",
        "body": "\u2026) methods. This is to avoid \"unresolved link\" errors in MSVC 2015 during Release build\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 194,
        "deletions": 11,
        "changed_files": 4,
        "created_at": "2015-09-13T07:28:03Z",
        "closed_at": "2018-06-08T18:29:54Z",
        "merged_at": null,
        "body": "ProtoC automatically searches for include files in the path\ngiven by -I command line option. Only the file name is given\nto the code generator plugins, not the full path.\n\nThis is fine in itself, but in order to find the actual file\nfor further analysis (e.g. custom formatting, comment or options processing)\nin a generator plugin, it needs to know the search path used\nby protoc. This commit adds that informaion to CodeGeneratorRequest.\n",
        "comments": 15
    },
    {
        "merged": true,
        "additions": 160,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2015-09-09T22:38:21Z",
        "closed_at": "2016-02-22T17:27:28Z",
        "merged_at": "2016-02-22T17:27:27Z",
        "body": "This was originally submitted as a patch on the Google Code issue\ntracker, but the original author didn't submit a pull request. They did,\nhowever, give permission for somebody else to do so. I cleaned up a few\nthings myself and am now submitting it.\n\nI can't find any record of what the original patch was, but there is a\ncopy of the discussion at\nhttps://groups.google.com/forum/#!topic/protobuf/SMwF5fYHIi0.\n\nFixes google/protobuf#581\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2015-09-08T22:58:17Z",
        "closed_at": "2015-09-09T05:23:03Z",
        "merged_at": "2015-09-09T05:23:03Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 330,
        "deletions": 97,
        "changed_files": 14,
        "created_at": "2015-09-04T22:03:48Z",
        "closed_at": "2015-09-04T23:07:35Z",
        "merged_at": null,
        "body": "hash_set and hash_map have been deprecated in vc14 and are being replaced with unordered_set and unordered_map respectively.  \n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-09-04T20:17:41Z",
        "closed_at": "2015-09-05T04:56:18Z",
        "merged_at": "2015-09-05T04:56:18Z",
        "body": "@TeBoring to review.\n\n@nicolasnoble: This is the change I told you that Beta gRPC needs.\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 151,
        "deletions": 0,
        "changed_files": 6,
        "created_at": "2015-09-04T10:24:48Z",
        "closed_at": "2015-09-04T16:45:46Z",
        "merged_at": "2015-09-04T16:45:46Z",
        "body": "We still need the JSON representation, which relies on something like a DescriptorPool to fetch message types from based on the type URL. That will come a bit later.\n(The DescriptorPool comment in this commit is just a note which will prove useful if we use DescriptorPool itself.)\n\n//cc @anandolee \n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-09-02T22:06:47Z",
        "closed_at": "2017-07-17T16:48:35Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 13,
        "changed_files": 4,
        "created_at": "2015-09-02T17:44:25Z",
        "closed_at": "2016-01-21T00:57:02Z",
        "merged_at": "2016-01-21T00:57:01Z",
        "body": "# Fixes #585.\n#### 1. m4/acx_check_suncc.m4\n\nWe should always append -m64 to the CFLAGS and CXXFLAGS even if the user provided them. It's quiet common to provide CFLAGS and CXXFLAGS and not adding -m64 to them while the --64bit-solaris flag is enabled creates confusion.\n#### 2. src/google/protobuf/compiler/command_line_interface.cc\n\nPATH_MAX on Solaris is defined in limits.h\n#### 3. src/google/protobuf/stubs/atomicops.h\n\nintptr_t is 8 bytes on Solaris in 64-bit mode. There's no need to treat it specially as this creates a compile error where the compiler complains about converting a long int\\* (intptr_t) to a long long int\\* (int64) even though both are 8 bytes in 64-bit mode.\n#### 4. src/google/protobuf/stubs/platform_macros.h\n\nThere is no need for SOLARIS_64BIT_ENABLED as the proper way is to check for compiler defined macros just like all the other architectures. Keep in mind that SOLARIS_64BIT_ENABLED is defined in config.h and to check for it here you'll need to include config.h. config.h can't be included here as platform_macros.h is an external header and including config.h will create include conflicts with code using platform_macros.h.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-09-01T17:50:30Z",
        "closed_at": "2015-09-08T20:32:29Z",
        "merged_at": "2015-09-08T20:32:29Z",
        "body": "@thomasvl @TeBoring for review.\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1095,
        "deletions": 762,
        "changed_files": 26,
        "created_at": "2015-09-01T14:48:57Z",
        "closed_at": "2015-09-23T21:31:31Z",
        "merged_at": "2015-09-23T21:31:31Z",
        "body": "This introduces a new C# option, base_namespace.\nIf the option is not specified, the behaviour is as before: no directories are generated.\nIf the option _is_ specified, all C# namespaces must be relative to the base namespace, and the directories are generated relative to that namespace.\n\nExample:\n- Any.proto declares csharp_namespace = \"Google.Protobuf.WellKnownTypes\"\n- We build with --csharp_out=Google.Protobuf --csharp_opt=base_namespace=Google.Protobuf\n- The Any.cs file is generated in Google.Protobuf/WellKnownTypes (where it currently lives)\n\nThis PR fixes #773.\n\n// cc @anandolee \n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 116,
        "deletions": 57,
        "changed_files": 8,
        "created_at": "2015-08-31T19:00:49Z",
        "closed_at": "2015-10-16T21:08:38Z",
        "merged_at": "2015-10-16T21:08:38Z",
        "body": "Hi guys!\nYou are here Betta released! That's great, but where the binaries for C ++ for Windows?\n\nI suggest a couple of commits to improve gusto project.\n\nI tried not to change a lot, but some questions are very important:\n- Improved parsing of the configuration script\n- Search ZLIB the same for all platforms\n- Using ZLIB target imported, if applicable\n\nHopefully this PR will be accepted quickly.\n\nBetta these changes for Windows can be downloaded via the testing\ninstallers of my project \"DaD's House\":\n\nhttp://dad.podsvirov.pro\n",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-08-31T16:44:56Z",
        "closed_at": "2018-06-23T04:43:49Z",
        "merged_at": null,
        "body": "",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 12,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2015-08-30T10:24:05Z",
        "closed_at": "2016-01-22T13:08:32Z",
        "merged_at": null,
        "body": "\u2026non-Solaris operating systems (fixes issue #763)\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 323,
        "deletions": 1,
        "changed_files": 26,
        "created_at": "2015-08-28T23:41:18Z",
        "closed_at": "2017-07-17T16:48:21Z",
        "merged_at": null,
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 18,
        "deletions": 15,
        "changed_files": 1,
        "created_at": "2015-08-28T23:41:03Z",
        "closed_at": "2015-08-29T23:29:23Z",
        "merged_at": "2015-08-29T23:29:23Z",
        "body": "Change-Id: I590b34b96c84a3ba6e094a0bd86f153147ade3d3\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 167,
        "deletions": 85,
        "changed_files": 7,
        "created_at": "2015-08-28T03:51:14Z",
        "closed_at": "2015-09-04T08:12:49Z",
        "merged_at": "2015-09-04T08:12:49Z",
        "body": "Fixes the ScalarMapContainer/MessageMapContainer implementations on\nPython 3.4, by dynamically allocating their PyTypeObjects using\nPyType_FromSpecWithBases, instead of statically allocating them. This is\nnecessary because Python 3.4+ disallows statically allocating a class\nwith a dynamically allocated parent.\n\nSigned-off-by: Dan O'Reilly oreilldf@gmail.com\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 78,
        "deletions": 63,
        "changed_files": 2,
        "created_at": "2015-08-28T03:21:09Z",
        "closed_at": "2015-08-28T21:05:01Z",
        "merged_at": "2015-08-28T21:05:01Z",
        "body": "These are banned by the Google style guide, and Chromium has a hard\nno-new-static-initializers policy preventing updating to a new version of\nlibprotobuf unless this is resolved.  This is the first such change, I'll need\nto make at least one more in the future.\n\nLuckily, the protobuf source tree already has an alternative to static\ninitializers in once.h; use that machinery instead.\n\nI defined everything in the .cc file in a blob to replace the old implementation\nrather than matching the .h layout precisely; let me know if a different\nordering is preferred.  I also eliminated the macro that used to be used here as\nspelling everything out only takes one additional line, and the macro didn't\nactually handle all details of using a particular member variable, just the\ndeclaration, so it felt a bit error-prone.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 19,
        "changed_files": 4,
        "created_at": "2015-08-27T21:38:14Z",
        "closed_at": "2015-08-28T21:09:00Z",
        "merged_at": "2015-08-28T21:09:00Z",
        "body": "This came up because Chromium downstream modifies the lite library in a way that\nrequires this function, but I'm upstreaming it because based on the comments in\nrepeated_field.h, this ought to allow resolution of an existing hack.\n\nI don't know enough about the protobuf code to feel confident trying to resolve\nthis hack myself, so I've merely updated the TODO comments.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-08-27T21:32:21Z",
        "closed_at": "2015-09-10T19:46:21Z",
        "merged_at": "2015-09-10T19:46:21Z",
        "body": "\u2026ebase.\n\nWhen trying to compile the protobuf code as a DLL, and then compile other DLLs\nwith generated .pb.cc/h files that reference\nInternalMetadataWithArena::InternalMetadataWithArena(Arena*), MSVC gives an\n\"unresolved external symbol\" error.  This seems to be due to the class being\nexported with its functions declared inline.  Marking it as non-exported fixes things.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-08-27T21:22:59Z",
        "closed_at": "2015-08-28T17:28:44Z",
        "merged_at": "2015-08-28T17:28:44Z",
        "body": "This variable is unused, and thus triggers a build warning on MSVC.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2015-08-27T21:18:25Z",
        "closed_at": "2015-08-27T22:51:06Z",
        "merged_at": "2015-08-27T22:51:06Z",
        "body": "port.h #includes various headers in order to define byteswap functions, but it\ncurrently does so from inside the google::protobuf namespace.  This can cause\nbizarre symbol conflicts and other build errors as these headers' contents are\nthen included inside this namespace.\n\nInstead, #include the relevant headers above the namespace declarations.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2015-08-27T21:13:33Z",
        "closed_at": "2015-09-10T19:45:22Z",
        "merged_at": "2015-09-10T19:45:22Z",
        "body": "It's not enough to check for C++11 language support, as it's possible for\nprojects to enable C++11 language and library features independently (e.g.\nChromium currently does this).  Instead, explicitly check the library version to\nsee if it is recent enough to include unordered_{map|set}.\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 106,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-08-26T23:37:29Z",
        "closed_at": "2015-08-27T00:38:35Z",
        "merged_at": "2015-08-27T00:38:35Z",
        "body": "@pherl to review\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 457,
        "deletions": 29,
        "changed_files": 16,
        "created_at": "2015-08-26T22:02:33Z",
        "closed_at": "2015-08-26T23:25:56Z",
        "merged_at": "2015-08-26T23:25:56Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2015-08-26T18:33:43Z",
        "closed_at": "2015-08-27T22:52:07Z",
        "merged_at": "2015-08-27T22:52:07Z",
        "body": "Updating to the current protobuf version caused the following build errors in\nChromium when using Clang on Windows:\n\n....\\third_party\\protobuf\\src\\google/protobuf/stubs/fastmem.h(67,43) :  error: equality comparison with extraneous parentheses [-Werror,-Wparentheses-equality]\n  if (GOOGLE_PREDICT_FALSE(n_rounded_down == 0)) {  // n <= 7\n                           ~~~~~~~~~~~~~~~^~~~\n\nThe problem is that on Windows, GOOGLE_PREDICT_FALSE is #defined to nothing, so\nthe code expands to 'if ((n_rounded_down == 0))', which Clang warns about.\n\nClang would not have warned if the extra parentheses came from the macro,\nbut in this case they don't because the macro is just dropped.\n\nFix this by making the macros behave as an identity function instead of just\ngetting dropped.\n\nThis is closer to what these macros look like in stubs/port.h internally.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2015-08-26T05:39:19Z",
        "closed_at": "2015-08-26T18:25:08Z",
        "merged_at": "2015-08-26T18:25:08Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-08-26T01:48:43Z",
        "closed_at": "2015-08-26T05:44:04Z",
        "merged_at": "2015-08-26T05:44:04Z",
        "body": "This is the same change as #738, but this time merging into master.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-08-26T01:46:05Z",
        "closed_at": "2015-08-26T05:44:27Z",
        "merged_at": "2015-08-26T05:44:26Z",
        "body": "We removed descriptor.proto from the nuget package before, but it turns out because some of the Google APIs import descriptor.proto, it might come handy.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 122,
        "deletions": 124,
        "changed_files": 5,
        "created_at": "2015-08-26T01:13:57Z",
        "closed_at": "2015-08-26T15:26:55Z",
        "merged_at": "2015-08-26T15:26:55Z",
        "body": "Backports #732 into release branch.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 553,
        "deletions": 468,
        "changed_files": 38,
        "created_at": "2015-08-25T20:26:25Z",
        "closed_at": "2015-08-26T01:00:26Z",
        "merged_at": "2015-08-26T01:00:26Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 122,
        "deletions": 124,
        "changed_files": 5,
        "created_at": "2015-08-25T13:33:02Z",
        "closed_at": "2015-08-25T16:51:40Z",
        "merged_at": "2015-08-25T16:51:40Z",
        "body": "We now do this in protoc instead of the generation simpler.\n\nBenefits:\n- Generation script is simpler\n- Detection is simpler as we now only need to care about one filename\n- The embedded descriptor knows itself as \"google/protobuf/descriptor.proto\" avoiding dependency issues\n\nThis PR also makes the \"invalid dependency\" exception clearer in terms of expected and actual dependencies.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 27,
        "deletions": 11,
        "changed_files": 3,
        "created_at": "2015-08-22T17:12:38Z",
        "closed_at": "2015-08-26T22:44:06Z",
        "merged_at": "2015-08-26T22:44:06Z",
        "body": "This fixes one issue with using `__metaclass__` instead of `six.with_metaclass`, and makes the minimal changes necessary to `text_format.TextWriter` to make all tests pass on Python 2 and Python 3. It now writes everything as bytes on Python 2, and text on Python 3. This is not the usual way to deal with 2/3 string compatibility, but the usual approach doesn't seem easily applicable because of the unusual way protobuf deals with UTF-8 escaping (see text_encoding.py). Other folks more familiar with the codebase, and the text handling in particular should review this.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-08-21T21:18:36Z",
        "closed_at": "2015-09-25T00:41:45Z",
        "merged_at": "2015-09-25T00:41:45Z",
        "body": "When the user passed in a block which was smaller than the Block\nstructure, this code would blow past the end of the memory and\ncrash.  Check for that condition.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 31,
        "deletions": 23,
        "changed_files": 6,
        "created_at": "2015-08-21T16:18:05Z",
        "closed_at": "2015-08-26T01:16:02Z",
        "merged_at": "2015-08-26T01:16:02Z",
        "body": "See issue #240 - MSVC in VS2015 seems to inline a function it shouldn't. My original workaround was to disable inlining for the whole file, but I found a way to do it on just this specific function using __declspec(noinline).\nUnfortunately __declspec has to go at the start of the function declaration, while __attribute in GCC can go either before or after. I had to move lots of GOOGLE_ATTRIBUTE_NOLINE to make it compile. I have not yet tested this change with GCC.\n\nWill there be other side effects of defining this, given it wasn't previously?\n\nI also noticed a few functions marked with both the 'inline' keyword, and GOOGLE_ATTRIBUTE_NOINLINE - huh? Is there an explanation for this, or is it an oversight?\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-08-20T20:46:28Z",
        "closed_at": "2015-09-01T17:50:01Z",
        "merged_at": null,
        "body": "@xfxyjwf @jskeet for review.\n\nFeng, please help double check the well known types protos and see if the changes are expected.\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 448,
        "deletions": 728,
        "changed_files": 31,
        "created_at": "2015-08-18T05:49:46Z",
        "closed_at": "2015-08-22T16:49:01Z",
        "merged_at": "2015-08-22T16:49:01Z",
        "body": "This pull request takes the work @tseaver started to add Python 3 support to protobuf, gets it working with the current upstream, and makes some additional fixes. It also adds support for Python 2.6, by adding 2.6-only dependencies on the `unittest2` and `ordereddict` backports. \n\nAdditionally, `tox` can now be used to run unit test across multiple Python versions. For now, only Python2.6 and Python 2.7 are supported. There are still some text handling issues to fix before all Python 3 tests will pass. To run pure Python tests, simply run\n\n```\ntox\n```\n\nTo test the cpp implementation, use\n\n```\ntox -- --cpp_implementation\n```\n",
        "comments": 23
    },
    {
        "merged": true,
        "additions": 27,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2015-08-13T11:05:15Z",
        "closed_at": "2015-08-13T16:23:29Z",
        "merged_at": "2015-08-13T16:23:29Z",
        "body": "With this in place, generating APIs on github.com/google/googleapis works - previously annotations.proto failed.\nCurrently there's no access to the annotations (stored as extensions) but we could potentially expose those at a later date.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-08-13T06:32:14Z",
        "closed_at": "2015-08-21T16:15:02Z",
        "merged_at": null,
        "body": "When building protoc with Visual Studio 2015 CMake, I've been getting a linker error:\n\n> Error LNK2019 unresolved external symbol \"public: static class google::protobuf::Message \\* __cdecl google::protobuf::internal::GenericTypeHandler<class google::protobuf::Message>::NewFromPrototype(class google::protobuf::Message const *,class google::protobuf::Arena *)\" (?NewFromPrototype@?$GenericTypeHandler@VMessage@protobuf@google@@internal@protobuf@google@SAPEAVMessage@34@PEBV534@PEAVArena@34@Z) referenced in function \"private: void __cdecl google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<class google::protobuf::internal::GenericTypeHandler<class google::protobuf::Message> >(void \\* *,void \\* *,int,int)\" (??$MergeFromInnerLoop@V?$GenericTypeHandler@VMessage@protobuf@google@internal@protobuf@google@RepeatedPtrFieldBase@internal@protobuf@google@AEAAXPEAPEAX0HH@Z) \n\nI've solved it by disabling inlining in message.cc\n\n(If there's a better solution, I'd love to know!)\n",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 141,
        "deletions": 123,
        "changed_files": 3,
        "created_at": "2015-08-13T01:51:17Z",
        "closed_at": "2015-08-13T20:40:09Z",
        "merged_at": "2015-08-13T20:40:09Z",
        "body": "Change-Id: Ief77de7134e05e07b1a7e3970d49880c2d5e6fe9\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-08-12T20:53:12Z",
        "closed_at": "2015-09-08T21:30:45Z",
        "merged_at": null,
        "body": "port.h includes several system headers inside the protobuf namespace.\nAs a result, if another header included after a protobuf header\nalso includes one of those system headers, the header guards will be\ndefined, but the symbols will be inaccessible inside the protobuf\nnamespace.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-08-12T18:57:35Z",
        "closed_at": "2018-06-08T18:47:32Z",
        "merged_at": null,
        "body": "This is useful for platforms such as iOS and android where we don't run\nprotoc.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 25,
        "deletions": 41,
        "changed_files": 6,
        "created_at": "2015-08-12T15:49:15Z",
        "closed_at": "2015-08-22T18:51:01Z",
        "merged_at": "2015-08-22T18:51:01Z",
        "body": "Partial rebase of #164.\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 155,
        "deletions": 0,
        "changed_files": 5,
        "created_at": "2015-08-12T08:44:47Z",
        "closed_at": "2017-03-14T18:00:39Z",
        "merged_at": null,
        "body": "I've been following/answering Protobuf questions on Stack Overflow for a while. It seems that a lot of people really want C++ equivalents of Protobuf-Java's `parseDelimitedFrom()` and `writeDelimitedTo()`. Some examples:\n\nhttp://stackoverflow.com/q/2340730/2686899\nhttp://stackoverflow.com/q/31953201/2686899\n\n(There are many more.)\n\nSo, this change implements them.\n\n(Note that inside of Google, engineers would normally use RecordIO for this purpose. However, outside Google, RecordIO hasn't been released as a stand-alone library (though it seems to be present in various Google open source repositories), and in general it's more cumbersome for people to add additional library dependencies.)\n",
        "comments": 36
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2015-08-12T00:21:46Z",
        "closed_at": "2015-08-26T20:18:04Z",
        "merged_at": "2015-08-26T20:18:04Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 168,
        "deletions": 126,
        "changed_files": 7,
        "created_at": "2015-08-10T17:32:48Z",
        "closed_at": "2015-08-10T21:39:40Z",
        "merged_at": "2015-08-10T21:39:40Z",
        "body": "- Removed a TODO without change in DescriptorPool.LookupSymbol - the TODOs were around performance, and this is only used during descriptor initialization\n- Make the CodedInputStream limits read-only, adding a static factory method for the rare cases when this is useful\n- Extracted IDeepCloneable into its own file.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-08-09T03:04:13Z",
        "closed_at": "2015-08-12T21:11:12Z",
        "merged_at": "2015-08-12T21:11:12Z",
        "body": "It seems to be cleaner to make targets on windows link  the runtime library statically. That way, targets won't depend on a specific version of MSVCR*.DLL for running the code.\n\nAlso, this is required to be able to build gRPC protoc plugins against libprotobuf.lib and libprotoc.lib (they have to be compatible in terms of /MD vs /MT options). Given /MT option makes more sense and gRPC is already using that, it makes more sense to make protobuf use that option too.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 180,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2015-08-08T08:00:11Z",
        "closed_at": "2015-08-10T11:44:49Z",
        "merged_at": "2015-08-10T11:44:49Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 12,
        "changed_files": 2,
        "created_at": "2015-08-07T12:47:19Z",
        "closed_at": "2015-08-08T18:51:40Z",
        "merged_at": "2015-08-08T18:51:40Z",
        "body": "\"Tested\" by regenerating code and observing that there are no changes.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 18,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2015-08-07T12:38:37Z",
        "closed_at": "2015-08-10T07:47:57Z",
        "merged_at": "2015-08-10T07:47:57Z",
        "body": "Based on PR #695.\n\nThis is a bit of a grotty hack, as we need to sort of fake proto2 field presence, but with only a proto3 version of the descriptor messages (a bit like oneof detection).\nShould be okay, but will need to be careful of this if we ever implement proto2.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 4,
        "changed_files": 4,
        "created_at": "2015-08-06T18:25:18Z",
        "closed_at": "2015-08-07T00:46:15Z",
        "merged_at": "2015-08-07T00:46:15Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 83,
        "deletions": 103,
        "changed_files": 17,
        "created_at": "2015-08-06T13:37:09Z",
        "closed_at": "2015-08-08T06:26:51Z",
        "merged_at": "2015-08-08T06:26:51Z",
        "body": "Based on #694.\nCould split this out into lots of tiny commits, but would prefer not to :)\n\nThis hasn't removed all the TODOs, but I don't think any are left in the public doc comments now...\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 303,
        "deletions": 488,
        "changed_files": 29,
        "created_at": "2015-08-06T10:41:39Z",
        "closed_at": "2015-08-08T06:24:57Z",
        "merged_at": "2015-08-08T06:24:57Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 167,
        "deletions": 405,
        "changed_files": 28,
        "created_at": "2015-08-05T10:25:56Z",
        "closed_at": "2015-08-06T00:16:13Z",
        "merged_at": "2015-08-06T00:16:13Z",
        "body": "Currently we have bool ReadTag(out uint tag), where the value is false if and only if tag is 0 (which is never a real tag). Given that out parameters are awkward anyway, it's simpler just to change the methods to return the tag read or 0 for EOF.\n\n(This would address issue #690 btw.)\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 742,
        "deletions": 108,
        "changed_files": 27,
        "created_at": "2015-08-04T15:17:17Z",
        "closed_at": "2015-08-05T06:09:17Z",
        "merged_at": "2015-08-05T06:09:17Z",
        "body": "(Some unused methods were also removed, or made internal.)\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2897,
        "deletions": 10,
        "changed_files": 32,
        "created_at": "2015-08-04T11:40:12Z",
        "closed_at": "2015-08-05T08:11:25Z",
        "merged_at": "2015-08-05T08:11:25Z",
        "body": "I had this in two separate branches, but I fail at git, so I've introduced the tests and fixed them in the same PR.\n\nIn short:\n- Added conformance tests\n- Notice when we don't have enough data to read an embedded message\n- Consume unknown fields (instead of ignoring the tag and then reading the data as another tag!)\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-08-04T09:36:30Z",
        "closed_at": "2018-06-08T18:37:45Z",
        "merged_at": null,
        "body": "This fixes https://github.com/google/protobuf/issues/533\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2860,
        "deletions": 2,
        "changed_files": 32,
        "created_at": "2015-08-04T09:20:56Z",
        "closed_at": "2015-08-04T13:35:26Z",
        "merged_at": null,
        "body": "Will branch from this PR and try to fix the currently-expected failures.\n\ncc @haberman \n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2015-08-04T06:10:52Z",
        "closed_at": "2015-08-04T23:04:25Z",
        "merged_at": "2015-08-04T23:04:25Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 14,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2015-08-03T17:54:50Z",
        "closed_at": "2016-03-16T03:27:04Z",
        "merged_at": null,
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 39,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2015-08-03T10:47:39Z",
        "closed_at": "2015-08-03T16:32:28Z",
        "merged_at": "2015-08-03T16:32:28Z",
        "body": "Based on #678 (accidentally, but...)\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-08-03T10:46:48Z",
        "closed_at": "2015-08-03T13:05:52Z",
        "merged_at": "2015-08-03T13:05:52Z",
        "body": "Fixes issue #552. (And yay, it looks like our build profile supports this...)\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 100,
        "deletions": 127,
        "changed_files": 11,
        "created_at": "2015-08-03T10:12:57Z",
        "closed_at": "2015-08-03T13:02:44Z",
        "merged_at": "2015-08-03T13:02:44Z",
        "body": "This fixes issue #623.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 121,
        "deletions": 121,
        "changed_files": 3,
        "created_at": "2015-08-03T10:12:26Z",
        "closed_at": "2015-08-03T14:19:50Z",
        "merged_at": "2015-08-03T14:19:50Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 33,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2015-08-02T17:58:29Z",
        "closed_at": "2018-06-23T04:48:46Z",
        "merged_at": null,
        "body": "With this patch applied `CodedInputStream.readByteBuffer()` returns\n`ByteBuffer` wrapping array contained in `LiteralByteString`.  To\nensure that `LiteralByteString` is not modified, returned buffer\nis made readonly with `.asReadOnlyBuffer()` operation.\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 87,
        "deletions": 92,
        "changed_files": 14,
        "created_at": "2015-08-01T21:47:38Z",
        "closed_at": "2015-08-03T10:16:31Z",
        "merged_at": "2015-08-03T10:16:31Z",
        "body": "Recreated  #657 against master.\n\n-- add build configuration ReleaseSigned which builds signed assemblies\n-- update nuspec file to use signed assemblies.\n-- added protoc.exe and well known proto files to tools/ directory in nuget package.\n-- some additional nits.\n\nfixes #608\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 9,
        "changed_files": 2,
        "created_at": "2015-08-01T03:56:31Z",
        "closed_at": "2015-08-26T00:04:53Z",
        "merged_at": null,
        "body": "gcc with -std=c++11 failed because of conflicts between **google/protobuf/stubs/mathutil.h** and **cmath**.\n\n```\ncmake -GNinja -DCMAKE_CXX_FLAGS=\"-std=c++11 -DLANG_CXX11\" ../cmake && ninja\n\n[83/345] Building CXX object CMakeFiles/libprotobuf.dir/var/local/protobuf/src/google/protobuf/util/internal/utility.cc.o\nFAILED: /usr/bin/c++   -DGOOGLE_PROTOBUF_CMAKE_BUILD -DHAVE_PTHREAD -DLIBPROTOBUF_EXPORTS -std=c++11 -DLANG_CXX11 -I. -I/var/local/protobuf/src -I/var/local/protobuf/gmock -I/var/local/protobuf/gmock/gtest -I/var/local/protobuf/gmock/gtest/include -I/var/local/protobuf/gmock/include -MMD -MT CMakeFiles/libprotobuf.dir/var/local/protobuf/src/google/protobuf/util/internal/utility.cc.o -MF \"CMakeFiles/libprotobuf.dir/var/local/protobuf/src/google/protobuf/util/internal/utility.cc.o.d\" -o CMakeFiles/libprotobuf.dir/var/local/protobuf/src/google/protobuf/util/internal/utility.cc.o -c /var/local/protobuf/src/google/protobuf/util/internal/utility.cc\nIn file included from /var/local/protobuf/src/google/protobuf/util/internal/utility.cc:44:0:\n/var/local/protobuf/src/google/protobuf/stubs/mathlimits.h: In static member function 'static bool google::protobuf::MathLimits<double>::IsFinite(google::protobuf::MathLimits<double>::Type)':\n/var/local/protobuf/src/google/protobuf/stubs/mathlimits.h:233:55: error: call of overloaded 'isinf(const Type&)' is ambiguous\n   static bool IsFinite(const Type x) { return !isinf(x)  &&  !isnan(x); } \\\n...\n```\n\n(should be reproducible on plain ubuntu 14.04 with default gcc 4.8)\n\nThe incompatibility was already documented in the mathutil.h header comment and could be worked around by avoiding any direct or indirect **cmath** includes before **mathutil.h**.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 302,
        "deletions": 0,
        "changed_files": 5,
        "created_at": "2015-07-31T21:09:53Z",
        "closed_at": "2015-08-13T06:07:54Z",
        "merged_at": "2015-08-13T06:07:54Z",
        "body": "Additional export as \"protobuf\" package\nfor importing from other cmake projects\n\nTesting binaries in draft pre-release:\nhttps://github.com/podsvirov/protobuf/releases/tag/v3.0.0-5500b0\n\nImporting example avaliable there:\nhttps://github.com/podsvirov/impprotobuf\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 98,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2015-07-31T14:08:25Z",
        "closed_at": "2015-08-03T09:56:24Z",
        "merged_at": "2015-08-03T09:56:24Z",
        "body": "Based on #671.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 174,
        "deletions": 11,
        "changed_files": 4,
        "created_at": "2015-07-31T12:22:58Z",
        "closed_at": "2015-08-03T08:31:19Z",
        "merged_at": "2015-08-03T08:31:19Z",
        "body": "Based on PR #669.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 432,
        "deletions": 91,
        "changed_files": 6,
        "created_at": "2015-07-31T09:52:24Z",
        "closed_at": "2015-08-01T20:34:14Z",
        "merged_at": "2015-08-01T20:34:14Z",
        "body": "Based on #668.\n\nBasically this just makes JSON testing simpler, which is going to be very significant when I'm writing more tests for well-known type serialization...\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 367,
        "deletions": 37,
        "changed_files": 6,
        "created_at": "2015-07-31T09:35:47Z",
        "closed_at": "2015-08-01T20:30:07Z",
        "merged_at": "2015-08-01T20:30:07Z",
        "body": "Based on PR #667 \n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2015-07-31T09:35:10Z",
        "closed_at": "2015-07-31T18:29:07Z",
        "merged_at": "2015-07-31T18:29:07Z",
        "body": "(Shows the benefit of unit testing even code \"too simple to fail\"...)\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 563,
        "deletions": 0,
        "changed_files": 7,
        "created_at": "2015-07-31T07:15:08Z",
        "closed_at": "2015-07-31T09:12:52Z",
        "merged_at": "2015-07-31T09:12:52Z",
        "body": "(This doesn't include JSON formatting.)\n\nWhile I've provided operators, I haven't yet provided the method equivalents. It's not clear to me that\nthey're actually a good idea, while we're really targeting C# developers who definitely _can_ use the user-defined operators.\n\nThis is a retargeted version of #663 which already has an LGTM. Merging on green.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 251,
        "deletions": 7,
        "changed_files": 4,
        "created_at": "2015-07-31T06:06:09Z",
        "closed_at": "2015-07-31T07:13:47Z",
        "merged_at": "2015-07-31T07:13:47Z",
        "body": "master equivalent of #662. Merging as that has an LG (when the build is green).\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 28,
        "deletions": 34,
        "changed_files": 6,
        "created_at": "2015-07-30T21:56:15Z",
        "closed_at": "2015-07-30T23:40:23Z",
        "merged_at": "2015-07-30T23:40:23Z",
        "body": "This change has already been LGTMd as in PR #656.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 980,
        "deletions": 78,
        "changed_files": 27,
        "created_at": "2015-07-30T14:54:35Z",
        "closed_at": "2015-07-31T07:14:36Z",
        "merged_at": null,
        "body": "Based on pull #662.\n\nCan be deferred until we've merged into master, if that's useful.\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 417,
        "deletions": 78,
        "changed_files": 20,
        "created_at": "2015-07-30T13:07:50Z",
        "closed_at": "2015-07-31T06:02:41Z",
        "merged_at": null,
        "body": "(Based on PR #660)\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 169,
        "deletions": 149,
        "changed_files": 19,
        "created_at": "2015-07-30T12:51:36Z",
        "closed_at": "2015-07-30T18:49:27Z",
        "merged_at": "2015-07-30T18:49:27Z",
        "body": "Turns out we didn't have a test for previous behaviour, worryingly...\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 111,
        "deletions": 36,
        "changed_files": 15,
        "created_at": "2015-07-30T04:09:52Z",
        "closed_at": "2015-07-31T08:20:40Z",
        "merged_at": null,
        "body": "-- add build configuration ReleaseSigned which builds signed assemblies\n-- update nuspec file to use signed assemblies.\n-- added protoc.exe and well known proto files to  tools/ directory in nuget package.\n-- some additional nits.\n\nfixes #608 \n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 28,
        "deletions": 34,
        "changed_files": 6,
        "created_at": "2015-07-30T03:23:15Z",
        "closed_at": "2015-07-30T21:56:46Z",
        "merged_at": null,
        "body": "This is going to be useful for gRPC protoc plugin to be able to expose ServiceDescriptor on each generated service class.\n\nAlso, the naming of umbrellaClass-related helper functions was pretty poor, so I did some refactoring and renaming.\n\n@jskeet FYI\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-07-30T01:57:36Z",
        "closed_at": "2015-07-30T05:46:53Z",
        "merged_at": "2015-07-30T05:46:53Z",
        "body": "These will be useful for server reflection in gRPC C#.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 1498,
        "changed_files": 35,
        "created_at": "2015-07-30T00:53:12Z",
        "closed_at": "2015-07-30T08:47:38Z",
        "merged_at": "2015-07-30T08:47:38Z",
        "body": "Based on the pushback in the API review, I think the best thing to do is to remove the Freeze API for now (as requested by @pherl).\nWe can reintroduce this once we reach decision if we should support Freeze or not.  Reverting this change should be easy, applying an inverted diff and regenerating code is pretty straightforward.\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 13,
        "changed_files": 8,
        "created_at": "2015-07-29T22:38:25Z",
        "closed_at": "2015-08-03T17:19:32Z",
        "merged_at": "2015-08-03T17:19:32Z",
        "body": "See the individual commit messages for details.\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2015-07-29T18:08:34Z",
        "closed_at": "2015-07-29T20:47:09Z",
        "merged_at": "2015-07-29T20:47:09Z",
        "body": "Is this intentional?\nThe cause is that _M_IX86 is undefined when target x64 processor.\nThe relative code is in File io/coded_stream.h, Line 115\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 13,
        "changed_files": 2,
        "created_at": "2015-07-29T17:47:23Z",
        "closed_at": "2015-07-29T22:20:47Z",
        "merged_at": "2015-07-29T22:20:47Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-07-29T01:47:42Z",
        "closed_at": "2015-08-11T20:02:50Z",
        "merged_at": "2015-08-11T20:02:50Z",
        "body": "fix an bug(forgive my english..)\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 225,
        "deletions": 104,
        "changed_files": 35,
        "created_at": "2015-07-28T00:48:58Z",
        "closed_at": "2015-08-07T01:12:36Z",
        "merged_at": "2015-08-07T01:12:36Z",
        "body": "Also introducing an option javanano_use_deprecated_package to allow users to disable the suffix\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-07-27T00:24:27Z",
        "closed_at": "2015-07-31T18:36:51Z",
        "merged_at": "2015-07-31T18:36:51Z",
        "body": "This is a follow up CL for e9abc404df99ef85d3e25aaaccd4aa83e381,\nwhich breaks build when UNICODE macro is defined.\n\nprotoc has explicitly called MBCS version of APIs / funcsions\nrather than UTF-16 (wchar_t) version of them regardless of\nUNICODE macro definition (and it indeed works as expected).\nHence it makes sense to call [GetModuleFileNameA](https://msdn.microsoft.com/en-us/library/windows/desktop/ms683197.aspx) explicitly.\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 16,
        "changed_files": 2,
        "created_at": "2015-07-26T02:38:09Z",
        "closed_at": "2015-07-27T18:39:28Z",
        "merged_at": "2015-07-27T18:39:27Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 21,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2015-07-25T04:42:10Z",
        "closed_at": "2015-07-25T06:13:08Z",
        "merged_at": "2015-07-25T06:13:08Z",
        "body": "FileDescriptorProto is internal, so this provides a way to access the original serialized for of a filedescriptor.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 457,
        "deletions": 21,
        "changed_files": 19,
        "created_at": "2015-07-23T14:32:57Z",
        "closed_at": "2015-07-29T16:32:55Z",
        "merged_at": "2015-07-29T16:32:55Z",
        "body": "This requires .NET 4.5, and there are a few compatibility changes required around reflection.\nCreating a PR from this to see how our CI systems handle it. Will want to add more documentation,\nvalidation and probably tests before merging.\n\nThis is in aid of issue #590.\n\n@jtattermusch FYI\n",
        "comments": 17
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2015-07-22T21:57:29Z",
        "closed_at": "2015-07-27T18:43:11Z",
        "merged_at": "2015-07-27T18:43:11Z",
        "body": "",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 342,
        "deletions": 199,
        "changed_files": 9,
        "created_at": "2015-07-22T14:20:21Z",
        "closed_at": "2015-07-23T05:50:23Z",
        "merged_at": "2015-07-23T05:50:23Z",
        "body": "This is relative to PR #625.\n\nAn alternative would be to make Fields a FieldCollection, so we'd use\n\n``` csharp\ndescriptor.Fields[fieldNumber].Accessor.GetValue(...)\n```\n\nThat's not that different from:\n\n``` csharp\ndescriptor.FieldAccessors[fieldNumber].GetValue(...)\n```\n\n... but is less accessor-specific. We could then rename the Fields list to FieldsInDeclarationOrder or something like that.\n\nOh, and we possibly want to expose a sorted-by-number collection... which FieldCollection could do as an `IEnumerable<T>` of course, with the slight oddity that `fields[5]` wouldn't be the same as `fields.ElementAt(5)`. Hmm.\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 32710,
        "deletions": 255618,
        "changed_files": 385,
        "created_at": "2015-07-21T17:44:32Z",
        "closed_at": "2015-07-30T21:51:11Z",
        "merged_at": "2015-07-30T21:51:11Z",
        "body": "I think we are now in a good shape to merge C# proto3 back into master. Most of the proto3 functionality has been implemented and we addressed the cleanup we wanted:\n\nC# cleanup tasks:\nhttps://github.com/google/protobuf/issues?q=is%3Aissue+milestone%3A%22C%23+code+cleanup%22+is%3Aclosed\n",
        "comments": 11
    },
    {
        "merged": true,
        "additions": 2402,
        "deletions": 2009,
        "changed_files": 37,
        "created_at": "2015-07-21T06:00:16Z",
        "closed_at": "2015-07-21T11:58:43Z",
        "merged_at": "2015-07-21T11:58:43Z",
        "body": "Final step before creating a pull request to merge everything into upstream/master.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 47,
        "deletions": 47,
        "changed_files": 5,
        "created_at": "2015-07-20T23:03:00Z",
        "closed_at": "2015-07-21T01:54:34Z",
        "merged_at": "2015-07-21T01:54:34Z",
        "body": "Use the version of addressbook.proto from #627. \n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 26,
        "deletions": 26,
        "changed_files": 7,
        "created_at": "2015-07-20T22:01:37Z",
        "closed_at": "2015-07-21T01:54:27Z",
        "merged_at": "2015-07-21T01:54:27Z",
        "body": "We need this to address issue #565 (which is blocking merging C# into master).\n\nThis also reveals that despite style guide says that repeated fields should use name in plural form, the generated code doesn't really reflect that (in sense providing sane names for the generated members). Correct naming of fields in addressbook.proto (\"phones\" and \"persons\") results in code that's a bit wierd (e.g. method addPersons adds a single person)\nhttps://sites.google.com/a/google.com/protocol-buffers/user-docs/style-guide#Naming_convention_for_repeated_e\n\n@jskeet  FYI\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-07-20T18:35:24Z",
        "closed_at": "2015-07-21T21:28:34Z",
        "merged_at": null,
        "body": "",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 772,
        "deletions": 1274,
        "changed_files": 48,
        "created_at": "2015-07-20T18:26:52Z",
        "closed_at": "2015-07-22T17:36:06Z",
        "merged_at": "2015-07-22T17:36:06Z",
        "body": "See comment on first commit for details. I'm not sure that I'm really requesting a pull in its current form, so much as feedback...\n",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 80,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2015-07-20T10:49:15Z",
        "closed_at": "2015-07-20T16:36:54Z",
        "merged_at": "2015-07-20T16:36:54Z",
        "body": " I think we need a reflection API rethink before doing the rest.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2015-07-17T21:17:19Z",
        "closed_at": "2015-07-21T00:36:00Z",
        "merged_at": "2015-07-21T00:36:00Z",
        "body": "The motivation is that gcc 4.8+ and clang trunk warn on unused local\ntypedefs, which COMPILE_ASSERT adds. After this change, the warning\nwill be happy at least in C++11 builds. static_assert also produces a\nslighly nicer diagnostic than the typedef method.\n\nhttps://github.com/google/re2/commit/eb93e8bc43ac8d05322fb3e9fc885898ad924f8a\ndid the same change in re2.\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 135,
        "deletions": 142,
        "changed_files": 101,
        "created_at": "2015-07-17T07:32:15Z",
        "closed_at": "2015-07-17T17:37:45Z",
        "merged_at": "2015-07-17T17:37:45Z",
        "body": "We'll see what I've missed when CI fails...\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 44,
        "deletions": 15,
        "changed_files": 2,
        "created_at": "2015-07-17T02:38:56Z",
        "closed_at": "2016-12-16T05:24:57Z",
        "merged_at": null,
        "body": "Making Python setup use C++ extension if it is on the system.\n\nPreviously this required sending the --cpp_implementation flag to setup.py. Now this will do this automatically if the library is installed locally.\n\n---\n\nThis is not ready to merge, I just wanted to send the PR to keep it from getting off my plate.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1640,
        "deletions": 1404,
        "changed_files": 10,
        "created_at": "2015-07-16T23:53:06Z",
        "closed_at": "2015-07-17T20:57:59Z",
        "merged_at": "2015-07-17T20:57:59Z",
        "body": "Splitting common.h into 6 headers:\nport.h -- basic typedef/macros/utils for portable code\nmacros.h -- some google macros\nscoped_ptr.h\nmutex.h\ncallback.h\nlogging.h\n\nThis change makes the common.h includes all of them. A follow up change will change the callsites to only include needed headers, and make common.h just include macro.h/platform_macro.h\n\n@xfxyjwf for review.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 106,
        "deletions": 248,
        "changed_files": 1,
        "created_at": "2015-07-16T18:27:47Z",
        "closed_at": "2015-07-16T20:43:02Z",
        "merged_at": "2015-07-16T20:43:02Z",
        "body": "Fixes #541.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 3516,
        "deletions": 129,
        "changed_files": 24,
        "created_at": "2015-07-16T16:04:42Z",
        "closed_at": "2015-07-17T06:29:50Z",
        "merged_at": "2015-07-17T06:29:50Z",
        "body": "This is ready for an initial review, but I wouldn't be surprised if we wanted some more changes before merging.\n\n@jtattermusch @anandolee \n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 34,
        "deletions": 7,
        "changed_files": 2,
        "created_at": "2015-07-16T04:23:31Z",
        "closed_at": "2015-07-16T19:27:29Z",
        "merged_at": "2015-07-16T19:27:29Z",
        "body": "Adds C# to appveyor. C# builds much faster than C++, so this shouldn't have negative impact on appveyor throughput.\n\nTo be merged after PR #606 is in.\n\nTest Google.Protobuf.Collections.RepeatedFieldTest.Enumerator fails on appveyor, but I suspect this is because of the issue that is addressed by #603.\n\nFixes #537.\n",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 761,
        "deletions": 430,
        "changed_files": 39,
        "created_at": "2015-07-16T03:37:50Z",
        "closed_at": "2015-07-16T06:11:40Z",
        "merged_at": "2015-07-16T06:11:40Z",
        "body": "This also seems to revert the changes you've made in wire_format.h.  So I think this fixes #519 - how would we verify?\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 10,
        "changed_files": 6,
        "created_at": "2015-07-16T02:47:14Z",
        "closed_at": "2015-07-16T07:08:45Z",
        "merged_at": "2015-07-16T07:08:45Z",
        "body": "Fixes #535.\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 694,
        "deletions": 579,
        "changed_files": 16,
        "created_at": "2015-07-16T01:06:11Z",
        "closed_at": "2015-07-20T18:06:18Z",
        "merged_at": "2015-07-20T18:06:18Z",
        "body": "This involved fixing a few important bugs in the\nRuby implementation -- mostly cases of mixing\nupb field types and descriptor types (upb field\ntypes do not distinguish between int/sint/fixed/sfixed\nlike descriptor types do).\n\nAlso added protobuf-specific exceptions so parse\nerrors can be caught specifically.\n\nChange-Id: Ib49d3db976900b2c6f3455c8b88af52cfb86e036\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 15,
        "changed_files": 1,
        "created_at": "2015-07-16T00:25:54Z",
        "closed_at": "2015-07-16T08:27:50Z",
        "merged_at": null,
        "body": "on my Windows machine RepeatedFieldTest.Enumerator is failing with error:\n\n```\nTest FullName:  Google.Protobuf.Collections.RepeatedFieldTest.Enumerator\nTest Source:    c:\\Users\\jtattermusch\\github\\protobuf\\csharp\\src\\ProtocolBuffers.Test\\Collections\\RepeatedFieldTest.cs : line 240\nResult Message: System.InvalidOperationException : Operation is not valid due to the current state of the object.\nResult StackTrace:  \nat Google.Protobuf.Collections.RepeatedField`1.Enumerator.get_Current() in c:\\Users\\jtattermusch\\github\\protobuf\\csharp\\src\\ProtocolBuffers\\Collections\\RepeatedField.cs:line 506\nat Google.Protobuf.Collections.RepeatedFieldTest.Enumerator() in c:\\Users\\jtattermusch\\github\\protobuf\\csharp\\src\\ProtocolBuffers.Test\\Collections\\RepeatedFieldTest.cs:line 246\n```\n\nit looks like all changes to the enumerator variable in that test are immediately forgotten.\nI eventually found the cause, which seems to be:\nhttp://stackoverflow.com/questions/4642665/why-does-capturing-a-mutable-struct-variable-inside-a-closure-within-a-using-sta\nand this bug report\nhttps://connect.microsoft.com/VisualStudio/feedback/details/635745\n\nJust removing the using block fixes the problem (as well are removing the lambda would), but it makes me wondering if we actually want RepeatedField.Enumerator to be a struct. Exposing enumerator struct makes as susceptible to subtle issues like these:\nhttps://www.simple-talk.com/blogs/2010/05/19/why-enumerator-structs-are-a-really-bad-idea/\nhttps://www.simple-talk.com/blogs/2010/05/20/why-enumerator-structs-are-a-really-bad-idea-redux/\n\n(I think with Reset() method we are actually fine, because we don't implement IEnumerator<T>.Reset() explicitly, unlike System.Collections.Generic.List<T>, but I am wondering how much of a performance gain the struct-based enumerator actually is.\n\nSwitching the enumerator to private class might save us some headache in the future (MapField already has an enumerator class).\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 122,
        "deletions": 4,
        "changed_files": 5,
        "created_at": "2015-07-15T23:30:06Z",
        "closed_at": "2015-07-22T03:50:20Z",
        "merged_at": "2015-07-22T03:50:20Z",
        "body": "These two methods make it easy to transform between any and normal message.\nunPackeTo will throw error if the type url in any doesn't match the type of the message to be transformed to.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 35,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2015-07-15T21:34:58Z",
        "closed_at": "2015-07-17T20:23:29Z",
        "merged_at": "2015-07-17T20:23:29Z",
        "body": "fix #592\n\n@jtattermusch @xfxyjwf \n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 661,
        "deletions": 6401,
        "changed_files": 5,
        "created_at": "2015-07-15T12:38:34Z",
        "closed_at": "2015-07-15T21:05:17Z",
        "merged_at": "2015-07-15T21:05:17Z",
        "body": "(Based on PR #594)\n\nI've included the generated code changes in a single commit as it's so relatively simple.\n\n@jtattermusch @anandolee \n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-07-15T00:19:49Z",
        "closed_at": "2015-07-17T17:58:17Z",
        "merged_at": "2015-07-17T17:58:17Z",
        "body": "Install google/protobuf/stubs/status.h, and google/protobuf/stubs/stringpiece.h -- these are required in order to include google/protobuf/util/type_resolver.h.\n\nInstall google/protobuf/stubs/bytestream.h -- this is required in order to include google/protobuf/util/json_util.h.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-07-14T20:22:26Z",
        "closed_at": "2015-07-15T00:03:58Z",
        "merged_at": null,
        "body": "Install google/protobuf/stubs/status.h, and google/protobuf/stubs/stringpiece.h -- these are required in order to include google/protobuf/util/type_resolver.h.\n\nInstall google/protobuf/stubs/bytestream.h -- this is required in order to include google/protobuf/util/json_util.h.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 20,
        "deletions": 15,
        "changed_files": 2,
        "created_at": "2015-07-14T18:24:46Z",
        "closed_at": "2018-06-08T18:40:20Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4808,
        "deletions": 130,
        "changed_files": 31,
        "created_at": "2015-07-14T13:29:35Z",
        "closed_at": "2015-07-15T20:55:00Z",
        "merged_at": "2015-07-15T20:55:00Z",
        "body": "This PR does _not_ do anything fancy with well-known types. In particular, we will want:\n- Wrapper type handling (possibly removing the codegen for wrapper types...)\n- Timestamp and duration partial classes, to introduce conversions to/from DateTimeOffset and TimeSpan\n- Handling of many types within JsonFormatter\n\n... but all of that is yet to come.\n\n@jtattermusch @anandolee \n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 263,
        "deletions": 52,
        "changed_files": 6,
        "created_at": "2015-07-10T23:42:05Z",
        "closed_at": "2015-07-13T16:50:01Z",
        "merged_at": "2015-07-13T16:50:01Z",
        "body": "This was enabled by the recent open-sourcing of JSON\nsupport and MessageDifferencer.\n\nMessageDifferencer allows the conformance suite to expand\nbecause it allows us to write tests for payloads that parse\nsuccessfully.  To verify the testee's output payload, we\nneed to parse it back into a message and compare the message\ninstances.  Comparing output bytes vs. a golden message is\n_not_ valid, because protobufs do not have a canonical\nencoding (especially in the presence of maps, which have\nno prescribed serialization order).\n\nWe only add one small JSON test for now, but with the\nframework in place we now have the foundation to dramatically\nexpand the coverage of the conformance test suite.\n\nAlso added the ability for the testee to skip tests that\nexercise features that are unimplemented.  This allows\nJava (which currently has no JSON support) to skip tests\ninvolving JSON.\n\nChange-Id: I697b4363da432b61ae3b638b4287c4cda1af4deb\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 41,
        "deletions": 13,
        "changed_files": 4,
        "created_at": "2015-07-10T22:25:37Z",
        "closed_at": "2015-07-12T19:53:14Z",
        "merged_at": "2015-07-12T19:53:14Z",
        "body": "-- add .nuspec file for the new C# protobuf package and a simple script to build the package\n-- a bit of cleanup\n\n@anandolee FYI\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 84,
        "deletions": 5,
        "changed_files": 7,
        "created_at": "2015-07-10T20:45:30Z",
        "closed_at": "2015-07-17T00:33:56Z",
        "merged_at": "2015-07-17T00:33:56Z",
        "body": "expose public header csharp_names.h that provides routines that will be used by gRPC codegen plugin\n\nFixes #522\n\n@jskeet FYI\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 354,
        "deletions": 249,
        "changed_files": 7,
        "created_at": "2015-07-10T19:03:41Z",
        "closed_at": "2015-08-21T16:00:40Z",
        "merged_at": "2015-08-21T16:00:40Z",
        "body": "While we are C99 in general, the Ruby build system\nfor building C extensions enables several flags that\nthrow warnings for C89/C90 variable ordering rules.\nTo avoid spewing a million warnings (or trying to\nspecifically override these warnings with command-line\nflags, which would be tricky and possibly fragile)\nwe conform to Ruby's world of C89/C90.\n\nChange-Id: I0e03e62d95068dfdfde112df0fb16a248a2f32a0\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2015-07-10T13:23:51Z",
        "closed_at": "2015-07-14T08:53:35Z",
        "merged_at": "2015-07-14T08:53:35Z",
        "body": "(To be merged after PR #582, at which point it should be one small commit.)\n\nFixes issue #312 \n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1494,
        "deletions": 168,
        "changed_files": 21,
        "created_at": "2015-07-10T13:07:05Z",
        "closed_at": "2015-07-14T08:50:57Z",
        "merged_at": "2015-07-14T08:50:57Z",
        "body": "(No parsing is supported yet. Some extra reflection support was required for oneof.\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 104,
        "deletions": 105,
        "changed_files": 8,
        "created_at": "2015-07-09T07:13:24Z",
        "closed_at": "2015-07-09T19:25:04Z",
        "merged_at": "2015-07-09T19:25:04Z",
        "body": "- Added new line at the end of SampleEnum\n- Moved GeneratedMessageTest.GetSampleMessage to a new class, SampleMessages, and renamed it to CreateFullTestAllTypes.\n\nAlso snuck in a change I had in another branch - removing a small amount of C++ code around required fields.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-07-08T21:16:29Z",
        "closed_at": "2015-07-09T00:28:32Z",
        "merged_at": "2015-07-09T00:28:32Z",
        "body": "Change-Id: I8e2b425f9008e6b82d41d59783bb8b04af1f886f\nFixes: https://github.com/google/protobuf/issues/474.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1175,
        "deletions": 2,
        "changed_files": 6,
        "created_at": "2015-07-08T13:44:57Z",
        "closed_at": "2015-07-28T11:12:25Z",
        "merged_at": null,
        "body": "This is for the C# implementation.\n\nI created a new project targeting .NET Core (DNX Core 5.0), which should make it cross platform (OS X, Linux). It would be nice to release this as a beta/preview NuGet package for those who need to target .NET Core.\n\nSo far it's only the ProtocolBuffersLite assembly.\n\nThe solution will still round-trip to Visual Studio 2013, though you will get a message saying it can't open the ProtocolBuffersLiteCoreFx.\n",
        "comments": 15
    },
    {
        "merged": true,
        "additions": 288,
        "deletions": 94,
        "changed_files": 6,
        "created_at": "2015-07-07T20:10:44Z",
        "closed_at": "2015-08-14T20:06:43Z",
        "merged_at": "2015-08-14T20:06:43Z",
        "body": "- Add a env var to pass a set of expected prefixes for validation.\n- Report warnings/errors based on the expected prefixes vs. the data in the files compiled.\n- Use some helpers from common directory.\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 167,
        "deletions": 158,
        "changed_files": 11,
        "created_at": "2015-07-06T23:13:13Z",
        "closed_at": "2015-07-09T22:13:12Z",
        "merged_at": "2015-07-09T22:13:12Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2015-07-06T20:04:29Z",
        "closed_at": "2015-08-28T20:34:35Z",
        "merged_at": "2015-08-28T20:34:35Z",
        "body": "It's not possible to define \"#error\" inside a define.\nIt causes 'error: stray \u2018#\u2019 in program' compilation error.\n\nNow the define GOOGLE_PROTOBUF_ATOMICOPS_ERROR is the error message\nand it's used along the code together \"#error\".\n",
        "comments": 11
    },
    {
        "merged": true,
        "additions": 2801,
        "deletions": 2063,
        "changed_files": 58,
        "created_at": "2015-07-01T16:26:23Z",
        "closed_at": "2015-07-10T08:08:44Z",
        "merged_at": "2015-07-10T08:08:44Z",
        "body": "This is all relative to PR #561.\n\nAfter this PR, reflection support is pretty reasonable. Outstanding changes I'd like to make (probably after the first merge)\n- Combine FieldAccess and Descriptors into a Reflection namespace\n- Add oneof reflection support\n- Rename FieldAccessorTable to something like ReflectionAccess as it's more than just fields\n- Expose the reflection capabilities via a static property (possibly replacing Descriptor)\n- Change the existing instance property to use explicit interface implementation - you'd usually only want it when we only know we have an IMessage\n\n@anandolee to review (sorry!)\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 2069,
        "deletions": 2568,
        "changed_files": 70,
        "created_at": "2015-06-30T16:23:07Z",
        "closed_at": "2015-07-09T06:54:10Z",
        "merged_at": "2015-07-09T06:54:10Z",
        "body": "(These are all relative to PR #560)\n\n@anandolee \n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1561,
        "deletions": 2353,
        "changed_files": 25,
        "created_at": "2015-06-30T12:25:40Z",
        "closed_at": "2015-07-09T06:53:04Z",
        "merged_at": "2015-07-09T06:53:04Z",
        "body": "Moved all the code for repeated field handling out of Coded*Stream (which are now much more \"primitive\"-oriented) and into RepeatedField.\n\nThis PR includes quite a lot of tidying up, extra tests, more XML documentation as well.\nUnfortunately it's relatively tricky to split into C++, generated code and runtime code at this point.\n\nI'm confident in the tests, however - I've got good coverage, and there's now a lot less code _to_ test, albeit it's slightly trickier code.\n\n@anandolee - I know @jtattermusch is out for another week. Let me know if you can think of a way of making this set of changes simpler to organize. (I don't know if there's a way I could rebase but change how it's all committed into separate commits etc...)\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-06-30T07:25:36Z",
        "closed_at": "2015-06-30T18:45:41Z",
        "merged_at": "2015-06-30T18:45:41Z",
        "body": "The warning appears in Windows-specific code. (Apparently, Clang is not smart enough to realise that `GOOGLE_LOG(FATAL)` terminates execution.)\n\nThis came up trying to build Chromium on Windows with Clang (see http://crbug.com/505307).\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2015-06-30T01:32:22Z",
        "closed_at": "2015-06-30T04:48:31Z",
        "merged_at": null,
        "body": "In preparation of deprecating the PARSER public instance.\n\nChange-Id: I3e332d83bc4b4f8467769f8e45c758978ace8f21\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 50,
        "deletions": 35,
        "changed_files": 3,
        "created_at": "2015-06-29T23:36:46Z",
        "closed_at": "2015-07-06T20:05:46Z",
        "merged_at": "2015-07-06T20:05:46Z",
        "body": "Also add WKT headers to the umbrella file, and simplify Podspec with it.\nPlus some layout improvements to the BUILD file.\n\nThis is a dependency of the Bazel target for the ObjC gRPC runtime.\n\nPart of https://github.com/grpc/grpc/issues/2120\n",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 21,
        "deletions": 31,
        "changed_files": 6,
        "created_at": "2015-06-29T14:14:52Z",
        "closed_at": "2015-07-01T17:36:30Z",
        "merged_at": "2015-07-01T17:36:30Z",
        "body": "",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 314,
        "deletions": 22,
        "changed_files": 3,
        "created_at": "2015-06-29T08:29:00Z",
        "closed_at": "2015-06-29T19:43:26Z",
        "merged_at": "2015-06-29T19:43:26Z",
        "body": "No specific test case - if the generated code compiles, the issue is fixed :)\n\n@anandolee \n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2015-06-26T15:38:30Z",
        "closed_at": "2015-06-26T18:15:32Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 48,
        "deletions": 100,
        "changed_files": 1,
        "created_at": "2015-06-25T20:38:37Z",
        "closed_at": "2018-06-23T04:49:10Z",
        "merged_at": null,
        "body": "Pull request for fixing #511 \n\nI've modified writeStringNoTag to work on byte[] and reverted writeRawLittleEndian32 to what it used to be. Note that I've left all the behavior the same as before, but I believe that the position() getter is a bit odd.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 121,
        "deletions": 49470,
        "changed_files": 97,
        "created_at": "2015-06-25T16:00:00Z",
        "closed_at": "2015-06-28T20:53:16Z",
        "merged_at": "2015-06-28T20:53:16Z",
        "body": "This is relative to pull request #543, which should be merged first.\n\n@jtattermusch @anandolee \n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 8878,
        "deletions": 102,
        "changed_files": 35,
        "created_at": "2015-06-25T11:13:33Z",
        "closed_at": "2015-06-26T19:47:35Z",
        "merged_at": "2015-06-26T19:47:35Z",
        "body": "There are still some open questions about handling strings and ByteStrings, but this is a good first step.\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 11,
        "changed_files": 3,
        "created_at": "2015-06-24T21:45:01Z",
        "closed_at": "2015-06-25T08:37:43Z",
        "merged_at": "2015-06-25T08:37:43Z",
        "body": "- control reaches end of non-void function.\n- remove a deprecated IsMatch, which causes overloaded-virtual warning. This shouldn't be released anyway.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-06-24T16:27:43Z",
        "closed_at": "2015-06-24T21:47:41Z",
        "merged_at": "2015-06-24T21:47:41Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1695,
        "deletions": 312,
        "changed_files": 32,
        "created_at": "2015-06-23T16:13:18Z",
        "closed_at": "2015-06-25T09:03:48Z",
        "merged_at": "2015-06-25T09:03:48Z",
        "body": "(This is based on https://github.com/google/protobuf/pull/532)\n",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 991,
        "deletions": 151,
        "changed_files": 23,
        "created_at": "2015-06-23T10:55:22Z",
        "closed_at": "2015-06-23T19:09:21Z",
        "merged_at": "2015-06-23T19:09:21Z",
        "body": "Fixes issue #527.\n",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 54,
        "deletions": 19,
        "changed_files": 2,
        "created_at": "2015-06-23T00:32:40Z",
        "closed_at": "2015-06-23T18:31:02Z",
        "merged_at": "2015-06-23T18:31:02Z",
        "body": "Fixes:\n  https://github.com/google/protobuf/issues/502\n  https://github.com/google/protobuf/issues/425\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2015-06-22T18:18:57Z",
        "closed_at": "2015-06-22T21:45:32Z",
        "merged_at": "2015-06-22T21:45:32Z",
        "body": "To test appveyor.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 12649,
        "deletions": 199685,
        "changed_files": 237,
        "created_at": "2015-06-19T16:36:23Z",
        "closed_at": "2015-06-19T19:59:07Z",
        "merged_at": "2015-06-19T19:59:07Z",
        "body": "More to do, but this will allow others to contribute more easily...\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 114,
        "deletions": 25,
        "changed_files": 3,
        "created_at": "2015-06-19T01:47:17Z",
        "closed_at": "2018-06-23T04:49:33Z",
        "merged_at": null,
        "body": "When using protoc to encode/decode protobufs, the input/output was from\nstdin/stdout only. This patch adds command line flags to specify files to read\nthe protobuf from and and write the encoded/decoded protobuf to.\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 140,
        "deletions": 77,
        "changed_files": 4,
        "created_at": "2015-06-18T23:46:55Z",
        "closed_at": "2015-06-24T23:14:46Z",
        "merged_at": "2015-06-24T23:14:46Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 594,
        "deletions": 122,
        "changed_files": 5,
        "created_at": "2015-06-18T00:43:29Z",
        "closed_at": "2015-06-18T18:19:34Z",
        "merged_at": "2015-06-18T18:19:34Z",
        "body": "Move and updated the cmake/update_file_lists.sh to also update the BUILD file.\nNeed to manage gtest external deps to enable cc_test; will do in a different PR.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 366,
        "deletions": 274,
        "changed_files": 30,
        "created_at": "2015-06-17T12:18:51Z",
        "closed_at": "2015-06-19T22:58:31Z",
        "merged_at": "2015-06-19T22:58:31Z",
        "body": "Add the clang annotations to the objc library and generated code to help with Swift bridging and compiler checks.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 28289,
        "deletions": 207,
        "changed_files": 103,
        "created_at": "2015-06-16T01:38:07Z",
        "closed_at": "2015-06-17T20:12:11Z",
        "merged_at": "2015-06-17T20:12:11Z",
        "body": "All changes in this commit have already been reviewed internally. Sending it as a PR just to run travis and appveyor tests.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 94,
        "deletions": 62,
        "changed_files": 3,
        "created_at": "2015-06-15T23:57:05Z",
        "closed_at": "2015-07-01T21:35:19Z",
        "merged_at": "2015-07-01T21:35:19Z",
        "body": " Previously, for proto3 primitive repeated fields, packed data cannot be parsed if\ndefinition is unpacked. Neither is the other way.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 8,
        "changed_files": 2,
        "created_at": "2015-06-13T15:51:15Z",
        "closed_at": "2015-06-14T06:56:17Z",
        "merged_at": "2015-06-14T06:56:17Z",
        "body": "@xfxyjwf for review.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 23,
        "deletions": 156,
        "changed_files": 13,
        "created_at": "2015-06-13T07:34:22Z",
        "closed_at": "2015-06-17T02:12:25Z",
        "merged_at": "2015-06-17T02:12:25Z",
        "body": "The first step of introducing \"config.h\"-less BUILD.\n",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 33,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-06-13T06:44:10Z",
        "closed_at": "2015-06-13T08:48:19Z",
        "merged_at": "2015-06-13T08:48:19Z",
        "body": "AppVeyor is like Travis but for windows (Travis covers Linux and Mac).\n\nFixes https://github.com/google/protobuf/issues/454\n\n@pherl to review.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 145,
        "deletions": 19,
        "changed_files": 3,
        "created_at": "2015-06-12T23:25:03Z",
        "closed_at": "2015-06-13T15:44:19Z",
        "merged_at": "2015-06-13T15:44:19Z",
        "body": "Change-Id: I31ead985b4ac5b02fb7558d34c1da19fd837b50a\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2015-06-11T21:48:41Z",
        "closed_at": "2017-12-12T21:57:59Z",
        "merged_at": null,
        "body": "Added the check and the appropriate unit test.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2015-06-11T19:12:42Z",
        "closed_at": "2015-06-12T20:41:54Z",
        "merged_at": "2015-06-12T20:41:54Z",
        "body": "This is currently done in golang/protobuf using `sed`. This change\nshould simplify things.\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-06-11T06:39:40Z",
        "closed_at": "2015-06-15T23:31:17Z",
        "merged_at": "2015-06-15T23:31:17Z",
        "body": "",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-06-09T23:48:21Z",
        "closed_at": "2018-06-23T04:50:02Z",
        "merged_at": null,
        "body": "I expect you're still doing work around this area; this is a minimal-ish change that allows me to move forward with testing C# support.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 31,
        "deletions": 7,
        "changed_files": 2,
        "created_at": "2015-06-09T20:48:58Z",
        "closed_at": "2015-06-10T17:54:32Z",
        "merged_at": "2015-06-10T17:54:32Z",
        "body": "The current setup fires up a bunch of tests/VMs to quickly exit or fail when we know they won't work.  This should avoid firing up those tests/VMs instead.\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 62,
        "deletions": 15,
        "changed_files": 4,
        "created_at": "2015-06-09T15:59:36Z",
        "closed_at": "2015-06-12T21:56:02Z",
        "merged_at": "2015-06-12T21:56:02Z",
        "body": "This change declares a static array of characters for the built-in descriptor rather than using a string literal when the size of the descriptor is larger than MSVC's maximum string literal size, which prevents a compiler error. This occurred for us when defining an enum with a large number of values with long names.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 6921,
        "deletions": 8029,
        "changed_files": 94,
        "created_at": "2015-06-09T15:01:32Z",
        "closed_at": "2015-06-10T00:17:45Z",
        "merged_at": "2015-06-10T00:17:45Z",
        "body": "- Add more to the ObjC dir readme.\n- Merge the ExtensionField and ExtensionDescriptor to reduce overhead.\n- Fix an initialization race.\n- Clean up the Xcode schemes.\n- Remove the class/enum filter.\n- Remove some forced inline that were bloating things without proof of performance wins.\n- Rename some internal types to avoid conflicts with the well know types protos.\n- Drop the use of ApplyFunctions to the compiler/optimizer can do what it wants.\n- Better document some possible future improvements.\n- Add missing support for parsing repeated primitive fields in packed or unpacked forms.\n- Improve -hash.\n- Add *Count for repeated and map<> fields to avoid auto create when checking for them being set.\n",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-06-09T13:40:17Z",
        "closed_at": "2015-07-22T22:41:29Z",
        "merged_at": null,
        "body": "The URI isn't code, so should not be indented.\nFormatting it as code breaks the link when converting to HTML (like on Github).\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 15,
        "deletions": 9,
        "changed_files": 5,
        "created_at": "2015-06-09T01:54:43Z",
        "closed_at": "2015-06-09T18:28:32Z",
        "merged_at": "2015-06-09T18:28:32Z",
        "body": "Refactored the threadlocal logic for Android and IOS into logic in\nplatform_macro.h which computes a GOOGLE_PROTOBUF_NO_THREADLOCAL\ndefine which is then used elsewhere.  This allows new platforms\nwithout THREADLOCAL to be easily defined.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 7018,
        "deletions": 6645,
        "changed_files": 5,
        "created_at": "2015-06-09T01:01:26Z",
        "closed_at": "2015-06-10T16:04:30Z",
        "merged_at": "2015-06-10T16:04:30Z",
        "body": "Since this version of upb supports C89, all of the\nextra compiler flags are no longer required.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 17,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2015-06-08T03:11:18Z",
        "closed_at": "2016-02-18T21:15:25Z",
        "merged_at": null,
        "body": "This change is intended to fix the Ruby Travis build. Not sure if this first iteration will or not, might take a few tries to get right!\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 46,
        "deletions": 13,
        "changed_files": 1,
        "created_at": "2015-06-07T21:26:28Z",
        "closed_at": "2015-06-08T18:16:50Z",
        "merged_at": null,
        "body": "Conventional wisdom for this issue has been \"don't make proto messages that have such long descriptors\" but this issue also occurs for enums that have a large number of values with relatively long names. This seems like a valid usage model.\n\nThis code escapes the entire protobuf descriptor prior to embedding. More conservative checking could be applied at the cost of code complexity.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 56,
        "deletions": 2963,
        "changed_files": 16,
        "created_at": "2015-06-06T07:18:28Z",
        "closed_at": "2015-06-08T19:21:49Z",
        "merged_at": "2015-06-08T19:21:49Z",
        "body": "@pherl to review\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 19,
        "deletions": 19,
        "changed_files": 3,
        "created_at": "2015-06-06T05:48:47Z",
        "closed_at": "2015-06-06T07:40:51Z",
        "merged_at": "2015-06-06T07:40:51Z",
        "body": "When compiling a protobuf with gcc 4.1.2 for powerpc, I ran into\nanother of the following warning message:\n\nINFO: From Compiling my_proto.pb.cc powerpc-603e-linux-gcc:\nbazel-out/local_linux-dbg/genfiles/my_proto.pb.cc: In member\n   function `virtual void MyProto::Clear()':\n   bazel-out/local_linux-dbg/genfiles/my_proto.pb.cc:223: warning: this\n      decimal constant is unsigned only in ISO C90\n\nThe line in the proto file that was triggering it was:\n\n  if (_has_bits_[24 / 32] & 4278190080) {\n    ZR_(field1_, field2_);\n  }\n\n_has_bits_ is a uint32.  The constant mask should therefore be\nunsigned.  This change updates the constant to be generated as\nunsigned.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-06-06T01:51:30Z",
        "closed_at": "2015-06-06T07:39:12Z",
        "merged_at": "2015-06-06T07:39:12Z",
        "body": "The GOOGLE_PREDICT_FALSE macro is both incorrect, and doesn't match\nthe macro definition in glog, which causes conflicts when including\nboth libraries.  This commit fixes that by making it identical to\nwhat is in glog.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-06-04T22:10:36Z",
        "closed_at": "2015-07-09T07:29:40Z",
        "merged_at": null,
        "body": "Note that this isn't as much of an edge case as it looks like, since LimitedInputStream (used by MergeDelimitedFrom) is not seekable. A simple test case is to call SomeType.MergeDelimitedFrom(stream), where the stream source uses newer .proto files than the sink.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 476,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2015-06-04T06:38:56Z",
        "closed_at": "2015-06-06T07:42:41Z",
        "merged_at": null,
        "body": null,
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1861,
        "deletions": 1647,
        "changed_files": 28,
        "created_at": "2015-06-04T01:12:31Z",
        "closed_at": "2015-06-04T23:15:24Z",
        "merged_at": "2015-06-04T23:15:24Z",
        "body": "fixs #448\n@jskeet \n@jtattermusch please help to review.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 235,
        "deletions": 60,
        "changed_files": 5,
        "created_at": "2015-06-03T19:08:32Z",
        "closed_at": "2015-06-05T21:50:34Z",
        "merged_at": "2015-06-05T21:50:34Z",
        "body": "This allows us to enable conformance tests even when we know\nthat some tests are failing and need to be fixed.\n\nChange-Id: I372f43663008747db6f2b2cf06e6ffa4c6d85b2d\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 143,
        "deletions": 40,
        "changed_files": 9,
        "created_at": "2015-06-03T05:52:41Z",
        "closed_at": "2016-07-13T23:50:12Z",
        "merged_at": null,
        "body": "1. Implemented NewDeleteCapture to detect heap allocations.\n2. Made MapField allocate mutexs lazily so generated API will not cause any heap allocation when using arena.\n3. Added a type trait Arena::is_destructor_skippable to check whether an object's destructor can be skipped when used with arena. Removed some incorrectly marked DestructorSkippable_ typedef.\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-06-03T05:28:06Z",
        "closed_at": "2015-06-30T23:45:22Z",
        "merged_at": "2015-06-30T23:45:22Z",
        "body": "@TeBoring to review\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 767,
        "deletions": 11,
        "changed_files": 12,
        "created_at": "2015-06-03T05:18:11Z",
        "closed_at": "2015-06-04T20:35:45Z",
        "merged_at": "2015-06-04T20:35:45Z",
        "body": "Add cmake support primarily for Visual Studio users. These scripts can also be used to build protobuf on Linux, MinGW, Cygwin as well.\n\nThis PR also includes a shell script used to copy file lists from src/Makefile.am to cmake files so we don't need to do that manually.\n\n@pherl to review\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 494,
        "changed_files": 2,
        "created_at": "2015-06-03T05:07:32Z",
        "closed_at": "2015-06-04T15:40:18Z",
        "merged_at": "2015-06-04T15:40:18Z",
        "body": "This file bares a different copyright license and also doesn't actually\nwork (out-dated file lists, no config.h/pbconfig.h, refers to inexist\nAOSP paths).\n\n@pherl to review\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-06-03T00:13:26Z",
        "closed_at": "2015-06-03T18:20:08Z",
        "merged_at": "2015-06-03T18:20:08Z",
        "body": "This adds Mac OS support to the default import path feature added in #411.\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-06-02T04:54:07Z",
        "closed_at": "2015-06-02T17:30:26Z",
        "merged_at": "2015-06-02T17:30:26Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 19,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2015-06-01T18:36:25Z",
        "closed_at": "2015-06-02T23:03:38Z",
        "merged_at": "2015-06-02T23:03:38Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 9,
        "changed_files": 2,
        "created_at": "2015-05-31T07:26:53Z",
        "closed_at": "2015-06-03T04:32:41Z",
        "merged_at": "2015-06-03T04:32:41Z",
        "body": "Fix 1: MapAllocator::destroy() should always call the destructor because the caller (hash_map implementation) may rely on the destructor to do required clean-ups. Not calling the destructor causes unit tests to hang with vs2010 debug build (Fixes https://github.com/google/protobuf/issues/442)\n\nFix 2: Only call std::copy() if the range is not empty in RepeatedField::erase().\n\n@TeBoring to review.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 677,
        "deletions": 302,
        "changed_files": 11,
        "created_at": "2015-05-30T01:13:38Z",
        "closed_at": "2015-06-01T19:31:18Z",
        "merged_at": "2015-06-01T19:31:18Z",
        "body": "@jtattermusch \n\nMost of C# enum and primitive generator code are the same. It is good to delete the duplicated code before migrate to io:printer.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 159,
        "deletions": 22,
        "changed_files": 17,
        "created_at": "2015-05-29T18:04:19Z",
        "closed_at": "2015-05-30T00:03:41Z",
        "merged_at": "2015-05-30T00:03:41Z",
        "body": "Merge 3.0.0-alpha-3 branch to master.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 476,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2015-05-29T17:22:34Z",
        "closed_at": "2015-05-31T23:00:00Z",
        "merged_at": null,
        "body": "",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2015-05-28T01:36:47Z",
        "closed_at": "2015-05-28T03:10:22Z",
        "merged_at": null,
        "body": "Introduces Printer::Shrink, to let the user avoid an assert if its output stream will disappear before our destructor.\n\nThe idea here is that if you do this:\n\n```\nstd::string SomePrinterFunction() {\n  std::string output;\n  google::protobuf::io::StringOutputStream output_stream(&output);\n  google::protobuf::io::Printer printer(&output_stream, '$');\n\n  printer.Print(\"Foo\");\n\n  return output;\n}\n```\n\nThen depending on your compiler, it may decide to call the move operator of std::string on that return statement. At that point, `output` is becoming empty, and its size becomes zero. Meaning that this assert here will fire, during the actual destruction of `printer`:\n\nhttps://github.com/google/protobuf/blob/master/src/google/protobuf/io/zero_copy_stream_impl_lite.cc#L190\n\nThis is currently causing this issue on grpc: grpc/grpc#1769.\n\nI would also argue that the right thing to do would be to avoid calling `Shrink` altogether in the destructor of `Printer`, and let the user do that manually, but I didn't want to change actual code behavior at that point.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 15,
        "deletions": 35,
        "changed_files": 6,
        "created_at": "2015-05-26T17:15:36Z",
        "closed_at": "2015-05-26T19:46:25Z",
        "merged_at": "2015-05-26T19:46:25Z",
        "body": "- Shouldn't need SRCROOT in the project since Xcode should be setting the working directory to where the project lives.\n- Remove the packed/unpacked repeated enum field in the tests and update the code to handle the defaults.\n- Move up the ignore to cover .DS_Store files in src also.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2015-05-26T06:12:49Z",
        "closed_at": "2015-05-26T18:01:26Z",
        "merged_at": "2015-05-26T18:01:26Z",
        "body": "This is necessary for other Objective-C plugins (like the gRPC one) to be able and call helper functions to get things like the generated name for a specific message type.\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 9,
        "changed_files": 7,
        "created_at": "2015-05-23T05:24:14Z",
        "closed_at": "2015-05-23T17:25:03Z",
        "merged_at": "2015-05-23T17:25:03Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 25713,
        "deletions": 3789,
        "changed_files": 227,
        "created_at": "2015-05-22T01:24:39Z",
        "closed_at": "2015-05-22T03:11:26Z",
        "merged_at": "2015-05-22T03:11:26Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 97,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2015-05-22T00:29:27Z",
        "closed_at": "2015-05-22T01:34:09Z",
        "merged_at": "2015-05-22T01:34:09Z",
        "body": "@TeBoring to review.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 64,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-05-21T23:48:42Z",
        "closed_at": "2015-05-22T01:45:23Z",
        "merged_at": "2015-05-22T01:45:23Z",
        "body": "@TeBoring to review\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 6091,
        "deletions": 1254,
        "changed_files": 95,
        "created_at": "2015-05-21T23:48:29Z",
        "closed_at": "2015-05-22T21:12:15Z",
        "merged_at": "2015-05-22T21:12:15Z",
        "body": "- Style fixups in the code.\n- map<> serialization fixes and more tests.\n- Autocreation of map<> fields (to match repeated fields).\n- @@protoc_insertion_point(global_scope|imports).\n- Fixup proto2 syntax extension support.\n- Move all startup code to +initialize so it happen on class usage and not app startup.\n- Have generated headers use forward declarations and move imports into generated code, reduces what is need at compile time to speed up compiled and avoid pointless rippling of rebuilds.\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 1069,
        "deletions": 101,
        "changed_files": 14,
        "created_at": "2015-05-21T01:12:53Z",
        "closed_at": "2018-06-23T04:50:18Z",
        "merged_at": null,
        "body": "This PR is meant for discussion; probably DO NOT MERGE as-is.\n\nThis commit adds a notion of a \"UDT\", or \"user-defined type\", to the\nRuby C extension. A UDT is defined by a set of hooks attached to a\nmessage type, and it overlays a notion of \"user value\", an arbitrary\nRuby value, over the \"wire type\", or actual protobuf message that is\nbeing wrapped. When a UDT is parsed, a user-defined parse-time hook is\ninvoked that converts the wire type to the user value, and the user\nvalue is then the only value stored in memory. It is seen by and can be\nmanipulated by the user as desired. (A \"verify hook\" is invoked whenever\nthe user sets a UDT-typed field to a new value so the UDT implementer\nmay also enforce strong typing.) Finally, at serialize time, a\nuser-defined serialization hook is invoked to convert the user value\nback to a wire-type message that is then serialized to the wire.\n\nThe intent is for UDTs to serve as the basis for Well-Known Types\n(WKTs), as added in proto3. We should implement the UDT API in the JRuby\nextension as well, and then define UDT handlers for Date/Time, primitive\nwrappers, etc.\n\nThe implementation works by actually storing user values in VALUE slots\nwhere message references would have gone, and adding a\npost-parse/pre-serialize pass that converts all pointers in the message\ntree. The separate-pass approach is necessary at least at parse time\nbecause submessages may be amended by wire data an arbitrary number of\ntimes, so (for example) a streaming implementation that converts as soon\nas a submessage ends would not be sufficient: the user hook must see the\nentire submessage as it would be at the end of the parse. (Map fields\nare handled a little differently now, and we may want to refactor that.)\n\nBecause of the pre-pass at serialize time, a message deep copy is\nrequired whenever any UDT fields are transitively present anywhere in\nthe message tree. This is suboptimal, and a deeper integration into the\nserialization routines would avoid this, at the cost of additional\ncomplexity. The copy is at least avoided unless UDTs are introduced.\n\nAlso: modified RepeatedField and Map so that `nil` cannot be added when\nthe value type is a message type. This should have already been the case\nalready, but we had not implemented this typecheck.\n\n<!-- Reviewable:start -->\n\n---\n\nThis change is [<img src=\"https://reviewable.io/review_button.svg\" height=\"35\" align=\"absmiddle\" alt=\"Reviewable\"/>](https://reviewable.io/reviews/google/protobuf/409)\n\n<!-- Reviewable:end -->\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 16,
        "changed_files": 3,
        "created_at": "2015-05-20T06:31:19Z",
        "closed_at": "2015-05-20T17:23:40Z",
        "merged_at": "2015-05-20T17:23:40Z",
        "body": "When compiling a protobuf with gcc 3.3.2 for powerpc, I ran into the\nfollowing warning message:\n\nINFO: From Compiling my_proto.pb.cc powerpc-603e-linux-gcc:\nbazel-out/local_linux-dbg/genfiles/my_proto.pb.cc: In member\n   function `virtual void MyProto::Clear()':\n   bazel-out/local_linux-dbg/genfiles/my_proto.pb.cc:223: warning: this\n      decimal constant is unsigned only in ISO C90\n\nThe line in the proto file that was triggering it was:\n\n  if (_has_bits_[24 / 32] & 4278190080) {\n    ZR_(field1_, field2_);\n  }\n\n_has_bits_ is a uint32.  The constant mask should therefore be\nunsigned.  This change updates the constant to be generated as\nunsigned.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 45,
        "deletions": 29,
        "changed_files": 7,
        "created_at": "2015-05-19T22:40:27Z",
        "closed_at": "2015-05-19T23:59:22Z",
        "merged_at": "2015-05-19T23:59:22Z",
        "body": "Previously, the C extension interned the string \"descriptor\" (to obtain a Ruby `ID` value, which is an integer representation of an interned string) every time it needed to look up a descriptor object given a message class. This caused the interned-string table lookup, which uses a hashtable, to become a performance hotspot. Since the string is a constant, it makes much more sense to intern it once at initialization then use that value.\n\nAlso fixed lines with > 80 char length.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 4998,
        "deletions": 2441,
        "changed_files": 39,
        "created_at": "2015-05-19T21:26:06Z",
        "closed_at": "2015-05-30T00:19:46Z",
        "merged_at": "2015-05-30T00:19:46Z",
        "body": "@jskeet @jtattermusch \n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 125,
        "deletions": 103,
        "changed_files": 11,
        "created_at": "2015-05-19T14:49:58Z",
        "closed_at": "2015-05-21T18:20:15Z",
        "merged_at": "2015-05-21T18:20:15Z",
        "body": "Remove the ClassList support (maybe bring it back in the future).\nTrim the includes to hopefully get a working Window build.\nAdd some more returns after switches for compilers that warn even when all values of the enum are handled.\nUse ghtonl instead of htonl.\nChange the use of [u]int(8,32)_t within the ObjC generator code to [u]int(8,32) to match the rest of the compiler.\nAdd objective-c generator files to Visual Studio project.\n\nFixes #395 ObjC plugin building on Windows.\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 15,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2015-05-19T00:46:46Z",
        "closed_at": "2015-05-20T17:20:37Z",
        "merged_at": "2015-05-20T17:20:37Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 36,
        "deletions": 13,
        "changed_files": 9,
        "created_at": "2015-05-18T17:05:58Z",
        "closed_at": "2015-05-18T20:23:51Z",
        "merged_at": "2015-05-18T20:23:51Z",
        "body": "Re-add the objc prefix to duration.proto (got removed by accident).\nRegenerate the generated descriptors (C++ and ObjC).\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 32084,
        "deletions": 40229,
        "changed_files": 5,
        "created_at": "2015-05-16T10:39:39Z",
        "closed_at": "2015-05-19T00:13:50Z",
        "merged_at": "2015-05-19T00:13:50Z",
        "body": "We still have some protos which aren't generated how we want them to be:\n- Until we have an option to specify the \"umbrella\" class, DescriptorProtoFile\n  will be broken. (The change of name here affects the reflection descriptor,\n  which accounts for most of the change. That's easier than trying to work out\n  exactly which occurrences of Descriptor need changing though.)\n- That change affects UnittestCustomOptions\n- Issue #307 breaks Unittest.cs\n\nAfter this commit, we don't have the record of the fixups in the files themselves\nany more, but one centralized record in the shell script.\n\n(The big changes in csharp/src/ProtocolBuffersLite.Test/TestProtos/Unittest.cs is due to reformatting - it's not clear to me why this is different from the rest...)\n\nThis is a recreation of pull request #392, but against the master branch and with an additional comment in the shell script.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 617,
        "deletions": 216,
        "changed_files": 13,
        "created_at": "2015-05-16T06:01:56Z",
        "closed_at": "2017-06-20T00:27:55Z",
        "merged_at": null,
        "body": "map needed a #to_h method\n\nAlso:\n- moving back to strings for hash keys (a change from the previous commit #338) to keep it consistent with type definitions in maps, such as defining 'string' as the key type.  \n- the behavior of RepeatedFields#each_index was not correct.  The array and enumerable\n  behaviors are different (who knew?!), so making this equivalent to the array version\n- merge in upstream changes from master.  **WARNING** under jruby the expected protobuf binary test fails, meaning it generates a different protobuf than the exact same msg run under MRi.  This seems to be an issue upstream in the java library than in this code base.\n- Fixing jruby errors when run under jruby-9000.pre1.  Their is a jruby AST parse error that required odd code to work around in a few of the tests.\n- Found a bug with the `encode_json` method.  When run under MRI, it does not return any default values, while JRuby does.  It should probably return default values.\n",
        "comments": 20
    },
    {
        "merged": true,
        "additions": 15,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2015-05-15T19:08:53Z",
        "closed_at": "2015-05-21T15:48:27Z",
        "merged_at": "2015-05-21T15:48:27Z",
        "body": "When using protobuf c# in unity for building iOS there is an issue with AOT compilation\n\n---> System.TypeInitializationException: An exception was thrown by the type initializer for System.Collections.Generic.EqualityComparer1 ---> System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---> System.ExecutionEngineException: Attempting to JIT compile method 'System.Collections.Generic.GenericEqualityComparer1:.ctor ()' while running with --aot-only.\n\nThe solution is to provide a concrete implementation of IEqualityComparer to avoid AOT compilation.\n\nMore references for this issue: \nhttp://stackoverflow.com/questions/24368929/exception-attempting-to-jit-compile-method-while-running-with-aot-only-with\nhttps://code.google.com/p/protobuf-csharp-port/issues/detail?id=98\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 32073,
        "deletions": 40229,
        "changed_files": 5,
        "created_at": "2015-05-15T13:41:20Z",
        "closed_at": "2015-05-15T17:49:27Z",
        "merged_at": null,
        "body": "We still have some protos which aren't generated how we want them to be:\n- Until we have an option to specify the \"umbrella\" class, DescriptorProtoFile\n  will be broken. (The change of name here affects the reflection descriptor,\n  which accounts for most of the change. That's easier than trying to work out\n  exactly which occurrences of Descriptor need changing though.)\n- That change affects UnittestCustomOptions\n- Issue #307 breaks Unittest.cs\n\nAfter this commit, we don't have the record of the fixups in the files themselves\nany more, but one centralized record in the shell script.\n\nThe big changes in csharp/src/ProtocolBuffersLite.Test/TestProtos/Unittest.cs is due to reformatting - it's not clear to me why this is different from the rest...\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 23,
        "deletions": 8,
        "changed_files": 3,
        "created_at": "2015-05-14T23:55:29Z",
        "closed_at": "2015-05-15T17:07:04Z",
        "merged_at": "2015-05-15T17:07:04Z",
        "body": "This is re-created version of Jon Skeet's #386, this time against master (as csharp branch is getting removed).\n\nTo my surprise, executing generate_protos.sh used the version of Bash installed with Git for Windows by default.\nAfter a few modifications to detect the most appropriate protoc to use, this worked pretty simply.\nThis change also:\n- adds generation of the address book tutorial proto,\n- fixes the addressbook.proto to specify proto2 explicitly (to avoid a warning from protoc; I don't think we want warnings...)\n- fixes the addressbook.proto C# namespace (which I thought I'd done before, but apparently hadn't)\n- includes the regenerated UnittestCustomOptions.cs apart from the DescriptorProtoFIle => Descriptor change\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 23,
        "deletions": 8,
        "changed_files": 3,
        "created_at": "2015-05-14T22:21:00Z",
        "closed_at": "2015-05-14T23:56:47Z",
        "merged_at": null,
        "body": "Propagate pull request #386 into master branch.\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 24,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2015-05-14T21:00:18Z",
        "closed_at": "2015-05-21T21:16:34Z",
        "merged_at": "2015-05-21T21:16:34Z",
        "body": "Users that manage their dependencies with Cocoapods need this to be able and use libraries generated by protoc.\n",
        "comments": 12
    },
    {
        "merged": false,
        "additions": 15,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2015-05-14T19:47:28Z",
        "closed_at": "2015-05-15T17:57:04Z",
        "merged_at": null,
        "body": "When using protobuf c# in unity for building iOS there is an issue with AOT compilation\n\n---> System.TypeInitializationException: An exception was thrown by the type initializer for System.Collections.Generic.EqualityComparer`1 \n---> System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. \n---> System.ExecutionEngineException: Attempting to JIT compile method 'System.Collections.Generic.GenericEqualityComparer`1<Google.ProtocolBuffers.ExtensionRegistry/ExtensionIntPair>:.ctor ()' while running with --aot-only.\n\nThe solution is to provide a concrete implementation of  IEqualityComparer<ExtensionIntPair> to avoid AOT compilation.\n\nMore references for this issue: \nhttp://stackoverflow.com/questions/24368929/exception-attempting-to-jit-compile-method-while-running-with-aot-only-with\nhttps://code.google.com/p/protobuf-csharp-port/issues/detail?id=98\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1408,
        "deletions": 749,
        "changed_files": 6,
        "created_at": "2015-05-14T19:06:39Z",
        "closed_at": "2015-05-18T21:07:21Z",
        "merged_at": "2015-05-18T21:07:21Z",
        "body": "- Alter encode/decode paths to use the `upb_env` (environment)\n  abstraction.\n- Update upb amalgamation to upstream `eace8e32`.\n- Fix a compilation warning (void*->char* cast).\n- Modify build flags so that upb doesn't produce warnings -- the Travis\n  build logs were pretty cluttered previously. I suspect that Rake isn't properly\n  selecting C99 mode despite `-std=c99` due to the warning suppressions needed\n  (decls after statements, etc) but didn't poke further on this.\n\n<!-- Reviewable:start -->\n\n[<img src=\"https://reviewable.io/review_button.png\" height=40 alt=\"Review on Reviewable\"/>](https://reviewable.io/reviews/google/protobuf/387)\n\n<!-- Reviewable:end -->\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 23,
        "deletions": 8,
        "changed_files": 3,
        "created_at": "2015-05-14T08:12:44Z",
        "closed_at": "2015-05-14T22:19:29Z",
        "merged_at": "2015-05-14T22:19:29Z",
        "body": "To my surprise, executing generate_protos.sh used the version of Bash installed with Git for Windows by default.\nAfter a few modifications to detect the most appropriate protoc to use, this worked pretty simply.\nThis change also:\n- adds generation of the address book tutorial proto,\n- fixes the addressbook.proto to specify proto2 explicitly (to avoid a warning from protoc; I don't think we want warnings...)\n- fixes the addressbook.proto C# namespace (which I thought I'd done before, but apparently hadn't)\n- includes the regenerated UnittestCustomOptions.cs apart from the DescriptorProtoFIle => Descriptor change\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 172,
        "deletions": 20,
        "changed_files": 3,
        "created_at": "2015-05-14T00:57:49Z",
        "closed_at": "2015-05-14T22:05:08Z",
        "merged_at": "2015-05-14T22:05:08Z",
        "body": "This PR splits Travis tests into per-{language x configuration} tests, each of which is independent, and configures Travis to run them all as separate jobs within the build.\n\nIt removes Java as the special top-level language, instead scripting the JDK installs as part of the test driver script. This is necessary because it appears that Travis does not support multiple top-level languages for a single project.\n",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 267908,
        "deletions": 55,
        "changed_files": 314,
        "created_at": "2015-05-13T22:34:01Z",
        "closed_at": "2015-05-14T21:54:36Z",
        "merged_at": "2015-05-14T21:54:36Z",
        "body": "This is a huge change, but all the contained changes have already been approved before they have been merged into csharp branch.\n\nThis pulls:\n-- the rewritten version of C# codegen (under src/google/protobuf/compiler/csharp)\n-- the C# runtime library (under csharp/)\n\ncsharp/README.md contains basic info about C# protobufs.\n",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 84482,
        "deletions": 323,
        "changed_files": 255,
        "created_at": "2015-05-13T20:42:23Z",
        "closed_at": "2015-05-13T22:24:42Z",
        "merged_at": "2015-05-13T22:24:42Z",
        "body": "This is preparation for the pull request that will merge csharp into master.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 28,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2015-05-13T18:45:19Z",
        "closed_at": "2015-05-13T21:35:37Z",
        "merged_at": "2015-05-13T21:35:37Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 3781,
        "deletions": 810,
        "changed_files": 7,
        "created_at": "2015-05-13T16:36:58Z",
        "closed_at": "2015-05-13T17:58:58Z",
        "merged_at": "2015-05-13T17:58:58Z",
        "body": "This is the start of establishing a C# namespace of \"Google.ProtocolBuffers.TestProtos.Proto3\" for proto3-syntax protos.\nWe could optionally split the directory structure as well into Proto2 and Proto3 for clarity.\n\nThis addresses part of issue #374.\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 147,
        "deletions": 12118,
        "changed_files": 19,
        "created_at": "2015-05-13T05:10:58Z",
        "closed_at": "2015-05-13T09:04:21Z",
        "merged_at": "2015-05-13T09:04:21Z",
        "body": "-- some cleanup performed\n-- buildall.sh script\n-- generate_protos.sh script that regenerates proto files (as a result, it turned out lots of generated files are out of data, so I regenerated them when possible)\n\nThese files are handcrafted, so I left them as they are for now:\ncsharp/src/ProtocolBuffers.Test/TestProtos/Unittest.cs\ncsharp/src/ProtocolBuffers.Test/TestProtos/UnittestCustomOptions.cs\ncsharp/src/ProtocolBuffersLite.Test/TestProtos/Unittest.cs\ncsharp/src/ProtocolBuffersLite.Test/TestProtos/UnittestLite.cs\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 15,
        "changed_files": 8,
        "created_at": "2015-05-12T18:59:14Z",
        "closed_at": "2015-05-12T21:06:00Z",
        "merged_at": "2015-05-12T21:06:00Z",
        "body": "After applying this, all the C# code builds on mono and all tests pass.\n\n-- <TreatWarningAsErrors> was preventing the build because of numerous \n/usr/local/google/home/jtattermusch/github/protobuf/csharp/src/ProtocolBuffers.Test/TestProtos/Unittest.cs(16,16): Error CS0219: Warning as Error: The variable `field_names' is assigned but its value is never used (CS0219) (ProtocolBuffers.Test)\n\n-- handle CR and CRLF line endings correctly with JsonFormatter\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2015-05-12T15:52:50Z",
        "closed_at": "2015-05-12T18:39:28Z",
        "merged_at": "2015-05-12T18:39:28Z",
        "body": "The referenced bug was fixed in 2007 and has been released in pkg-config-0.23\n(16.Jan.2008). The fixed version is widely available.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3049,
        "deletions": 3039,
        "changed_files": 48,
        "created_at": "2015-05-12T08:49:03Z",
        "closed_at": "2015-05-12T18:08:47Z",
        "merged_at": "2015-05-12T18:08:47Z",
        "body": "This includes the NUnit test adapter which allows NUnit tests to be run under VS without any extra plugins.\nUnfortunate the compatibility tests using the abstract test fixture class show up as \"external\" tests, and aren't well presented - but they do run.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 12,
        "changed_files": 1,
        "created_at": "2015-05-11T23:14:50Z",
        "closed_at": "2015-06-06T07:44:39Z",
        "merged_at": "2015-06-06T07:44:39Z",
        "body": "Change-Id: I303d712967f9885f7c3082d00f961f8ab93a6aed\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2015-05-11T13:49:03Z",
        "closed_at": "2018-06-23T04:50:41Z",
        "merged_at": null,
        "body": "Instead, adds a new 'generate_protos' distutils commmand which can be used to regenerate them when needed.\n\nFixes #333.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 24,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2015-05-07T15:47:13Z",
        "closed_at": "2015-05-09T18:00:23Z",
        "merged_at": "2015-05-09T18:00:23Z",
        "body": "The optimization we came up with when doing the performance evaluation of C# protobufs.\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 15,
        "deletions": 13,
        "changed_files": 3,
        "created_at": "2015-05-07T11:41:42Z",
        "closed_at": "2015-05-15T22:14:32Z",
        "merged_at": "2015-05-15T22:14:32Z",
        "body": "Fixes #333.\n\n@haberman @tseaver \n",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2015-05-06T21:11:39Z",
        "closed_at": "2015-05-07T01:18:28Z",
        "merged_at": "2015-05-07T01:18:28Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 44,
        "deletions": 9,
        "changed_files": 30,
        "created_at": "2015-05-06T14:26:57Z",
        "closed_at": "2015-05-07T15:47:55Z",
        "merged_at": "2015-05-07T15:47:55Z",
        "body": "",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-05-05T00:59:52Z",
        "closed_at": "2015-05-07T20:13:10Z",
        "merged_at": "2015-05-07T20:13:10Z",
        "body": "Change-Id: I845ee1ab1005d25c8d77a8c2ed801c0f7b7c847b\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-05-04T23:26:11Z",
        "closed_at": "2018-06-08T18:26:00Z",
        "merged_at": null,
        "body": "This fixes the (bad) assumption that the currently evaluated module's parent directory is in `$LOADPATH` and that `require` thus would be able to resolve dependencies.\n\nNote that I'm not familiar enough with this project to know if `file->dependency(n)`\u00a0actually always returns a relative path. If it does, this will not work, but I can amend the patch if that's necessary.\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-05-04T08:38:39Z",
        "closed_at": "2015-05-22T22:56:34Z",
        "merged_at": "2015-05-22T22:56:34Z",
        "body": "This is a follow up CL for df184fba00acc7d4aa7b9d64693c53c815a64eda\n(Id937e25bbb35968ee76c92bd4a8ce6247408c443), which added\n  #undef GOOGLE_PROTOBUF_MISSING_HASH\nwhere GOOGLE_PROTOBUF_MISSING_HASH macro is never defined.\n\nWith this CL, GOOGLE_PROTOBUF_MISSING_HASH macro will be cleaned up\nafter it is used.\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 979,
        "deletions": 125,
        "changed_files": 7,
        "created_at": "2015-05-04T03:45:40Z",
        "closed_at": "2015-05-14T17:55:35Z",
        "merged_at": "2015-05-14T17:55:35Z",
        "body": "not all methods are easy to add (such as #! methods, which would probably need to be added in java and C), but the non-destructive ones are straight forward\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 182,
        "deletions": 114,
        "changed_files": 11,
        "created_at": "2015-05-03T18:14:20Z",
        "closed_at": "2015-05-15T17:52:56Z",
        "merged_at": "2015-05-15T17:52:56Z",
        "body": "Hey @cfallin \n\nThis PR may be a bridge too far.  I am sending this PR as _DO NOT MERGE_; if you agree with the direction of the changs, I'll add some tests (in the old-style format) and documentation.  \n\nThis pr started as just wanting to add common ruby syntactic sugar, specifically `#to_json` and `#to_proto`.  Then I realized that the jruby `.encode_json` was broken ([gist](https://gist.github.com/skippy/89cafb280017d52a582c)).  But it also had the very nice and useful `#to_h` which the c-ext did not.\n\nI tried consolidating the json encoding/decoding into pure ruby, using the stdlib JSON module, the JSON gem (using the c-extension), and Yajl.  This ripped out a lot of c code, and a bit of java code, and I liked the simplification.  Until I ran benchmarks.  tl;dr: the native json library (haberman/upb) in this lib was consistantly 10x faster ([gist](https://gist.github.com/skippy/93d6c51947960260ab63)).  Yowzers....\n\nI don't want to reopen the conversation in #121, and definitely not the tenor.  However, I agree with the concerns that having two fully separate implementations is going to be hard to maintain.  I'm finding more inconsitancies than I expected, and I'm just starting to scratch the surface.  (e.g., another is that the jruby extension doesn't check STRING encoding during init. like the c-ext does).  _BUT_ it is alpha :)\n\nIf the JSON performance was closer, I would have submitted the PR with consolidated logic and have tried to make the case that moving some code into ruby is a good thing from a consistancy and maintenance perspective.  However, the performance difference is so great I don't feel I should make that argument.\n\nSo here is a less-aggressive PR with fewer changes.  Again, if this is moving in an acceptable direction, I'll finish it up.\n",
        "comments": 14
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 7,
        "changed_files": 4,
        "created_at": "2015-05-02T20:50:29Z",
        "closed_at": "2015-05-03T02:02:08Z",
        "merged_at": "2015-05-03T02:02:08Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 85,
        "deletions": 26,
        "changed_files": 7,
        "created_at": "2015-05-01T21:53:40Z",
        "closed_at": "2015-05-03T02:00:44Z",
        "merged_at": "2015-05-03T02:00:44Z",
        "body": "ruby returns nil if an array index is out of bounds\n\nalso allows negative indicies (again, to make it act more like a ruby lib)\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 82460,
        "deletions": 3,
        "changed_files": 165,
        "created_at": "2015-05-01T20:38:29Z",
        "closed_at": "2015-05-07T00:32:07Z",
        "merged_at": "2015-05-07T00:32:07Z",
        "body": "Alpha 1 drop of Google's Objective C support:\n\nprotoc plugin/generator.\nObjective C Runtime Support.\nXcode project for testing runtime (and generator).\n",
        "comments": 22
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 38,
        "changed_files": 7,
        "created_at": "2015-05-01T18:31:58Z",
        "closed_at": "2015-05-01T22:04:45Z",
        "merged_at": "2015-05-01T22:04:45Z",
        "body": "",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 57,
        "deletions": 3,
        "changed_files": 5,
        "created_at": "2015-05-01T16:21:34Z",
        "closed_at": "2015-05-01T21:11:13Z",
        "merged_at": "2015-05-01T21:11:13Z",
        "body": "initial steps to make RepeatedField act more like a ruby Array\n\nLet me know if this approach of aliasing and adding syntactic sugar in the ruby lib, rather than duplicating the logic in C and Java, is acceptable.\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2015-05-01T15:49:35Z",
        "closed_at": "2015-05-01T17:25:18Z",
        "merged_at": "2015-05-01T17:25:18Z",
        "body": "- update docs to simplify build steps\n- Gemfile.lock seemed to have an older version specified\n- do not check in the pkg dir\n\nbaby steps :)\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 82211,
        "deletions": 2,
        "changed_files": 162,
        "created_at": "2015-04-30T20:31:40Z",
        "closed_at": "2015-05-01T12:48:03Z",
        "merged_at": null,
        "body": "Alpha 1 drop of Google's Objective C support:\n- protoc plugin/generator.\n- Objective C Runtime Support.\n- Xcode project for testing runtime (and generator).\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 3278,
        "deletions": 3744,
        "changed_files": 55,
        "created_at": "2015-04-30T10:10:35Z",
        "closed_at": "2015-04-30T13:51:42Z",
        "merged_at": "2015-04-30T13:51:42Z",
        "body": "This includes fetching the VS unit test runner package, so that tests can be run from Visual Studio's Test Explorer.\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 1152,
        "deletions": 52,
        "changed_files": 13,
        "created_at": "2015-04-29T21:26:55Z",
        "closed_at": "2015-05-01T17:50:22Z",
        "merged_at": "2015-05-01T17:50:22Z",
        "body": "Remove has methods for optional non-message fields in proto3\n",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 45514,
        "deletions": 37484,
        "changed_files": 54,
        "created_at": "2015-04-29T14:29:05Z",
        "closed_at": "2015-04-30T09:35:27Z",
        "merged_at": "2015-04-30T09:35:27Z",
        "body": "This pull request should only be merged after pull request #317 - it's basically the successor to that.\n",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 1193,
        "deletions": 20386,
        "changed_files": 163,
        "created_at": "2015-04-29T09:16:39Z",
        "closed_at": "2015-04-29T19:59:44Z",
        "merged_at": "2015-04-29T19:59:44Z",
        "body": "(All changes are under csharp)\n\nBasically removing a lot of unnecessary baggage, including the old code generator, RPC and serializable support, and a lot of proto files which were effectively duplicates of the ones in the main protobuf library.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2015-04-29T09:04:35Z",
        "closed_at": "2016-04-11T13:41:16Z",
        "merged_at": null,
        "body": "",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 703,
        "deletions": 90,
        "changed_files": 26,
        "created_at": "2015-04-28T20:17:20Z",
        "closed_at": "2015-04-29T17:44:35Z",
        "merged_at": "2015-04-29T17:44:35Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 65,
        "deletions": 1,
        "changed_files": 9,
        "created_at": "2015-04-28T15:00:29Z",
        "closed_at": "2016-02-17T00:31:33Z",
        "merged_at": null,
        "body": "commit 49dcfb7 is about issue #65 \n\ncommit a865679 is about issue #157\n\n<!-- Reviewable:start -->\n\n[<img src=\"https://reviewable.io/review_button.png\" height=40 alt=\"Review on Reviewable\"/>](https://reviewable.io/reviews/google/protobuf/314)\n\n<!-- Reviewable:end -->\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 183367,
        "deletions": 104432,
        "changed_files": 78,
        "created_at": "2015-04-28T14:14:17Z",
        "closed_at": "2015-04-28T21:23:18Z",
        "merged_at": "2015-04-28T21:23:18Z",
        "body": "After committing, the runtime itself should build and tests should pass. The protogen library will no longer build; that is to be removed in the next set of commits.\n\nThe new generated files committed here are built with protoc.exe with the new codegen, but with a few modifications.\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 129,
        "deletions": 42,
        "changed_files": 4,
        "created_at": "2015-04-27T22:43:53Z",
        "closed_at": "2015-04-28T02:43:54Z",
        "merged_at": null,
        "body": "Remove has variables for optional non-message fields in Proto3.\n\n@jskeet  \nI may need to add tests in the future. This change removes some Has variables in generated code, do you have any idea how to check if a variable is defined?\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-04-27T08:37:50Z",
        "closed_at": "2015-06-02T17:53:04Z",
        "merged_at": "2015-06-02T17:53:04Z",
        "body": "This change fixes unittest in i386 while working in x86_64 builds. Without it \"integer constant is too large for 'long' type\" is reported. Tested on linux gcc 4.1.2 and gcc 4.4.6. \n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-04-24T03:26:13Z",
        "closed_at": "2015-04-29T17:41:35Z",
        "merged_at": "2015-04-29T17:41:35Z",
        "body": "@wora to review.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 129,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2015-04-23T17:35:55Z",
        "closed_at": "2015-04-27T17:42:34Z",
        "merged_at": "2015-04-27T17:42:34Z",
        "body": "Previously protoc.exe didn't build due to an unresolved reference - because none of the codegen for C# was being built. This PR fixes that.\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2015-04-22T13:13:27Z",
        "closed_at": "2016-09-27T04:48:27Z",
        "merged_at": null,
        "body": "Allows for 3rd party libraries (like numpy) to register other integer types\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 425,
        "deletions": 21,
        "changed_files": 8,
        "created_at": "2015-04-20T18:35:07Z",
        "closed_at": "2015-04-20T20:53:44Z",
        "merged_at": "2015-04-20T20:53:44Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 208342,
        "deletions": 52,
        "changed_files": 448,
        "created_at": "2015-04-17T22:43:34Z",
        "closed_at": "2015-04-18T00:29:39Z",
        "merged_at": "2015-04-18T00:29:39Z",
        "body": "-- Adding legacy code from protobuf csharp port project under csharp/ subtree. Some cleanup and history rewriting was performed.\n-- A protoc C# plugin rewritten to C++.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2015-04-17T01:24:16Z",
        "closed_at": "2015-04-21T17:50:48Z",
        "merged_at": "2015-04-21T17:50:48Z",
        "body": "1. make google/protobuf/stubs/pbconfig.h before making protoc, otherwise it\n   won't build a freshly checked-out code.\n2. Document the build environments that have been tested to work.\n3. Add support for MINGW64\n   @pherl please review\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 26,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2015-04-13T21:05:15Z",
        "closed_at": "2015-04-13T22:28:44Z",
        "merged_at": "2015-04-13T22:28:44Z",
        "body": "Fixes #283.\n\nAlso bumped Gem version so that we can release a fixed version to RubyGems.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 114,
        "deletions": 106,
        "changed_files": 21,
        "created_at": "2015-04-12T01:22:53Z",
        "closed_at": "2015-05-06T23:38:06Z",
        "merged_at": "2015-05-06T23:38:06Z",
        "body": "Roughly a combination of #131 and #161 and closes both. @haberman \n",
        "comments": 21
    },
    {
        "merged": true,
        "additions": 19,
        "deletions": 10,
        "changed_files": 2,
        "created_at": "2015-04-09T23:44:05Z",
        "closed_at": "2015-04-10T01:18:27Z",
        "merged_at": "2015-04-10T01:18:27Z",
        "body": "@xfxyjwf \n\nHopefully this PR will pass right away in Travis, but if not I'll iterate and fix it. :)\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 132,
        "deletions": 278,
        "changed_files": 24,
        "created_at": "2015-04-08T21:52:34Z",
        "closed_at": "2015-04-11T21:14:29Z",
        "merged_at": "2015-04-11T21:14:29Z",
        "body": "@haberman this is #165 rebased on #275 -- the tests pass!\n\ncloses #165.\n",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 665,
        "changed_files": 3,
        "created_at": "2015-04-08T21:47:44Z",
        "closed_at": "2015-04-08T23:02:40Z",
        "merged_at": "2015-04-08T23:02:40Z",
        "body": "This file was broken in ada6556.\n\n@haberman this accounts for the problems I was seeing in #165.\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 162,
        "deletions": 12,
        "changed_files": 3,
        "created_at": "2015-04-07T00:50:24Z",
        "closed_at": "2015-04-09T17:36:14Z",
        "merged_at": "2015-04-09T17:36:14Z",
        "body": "- Do not close the staging repository automatically\n- Added staging.repository property\n- Updated README with instructions for deployment\n- Fix building 32-bit Mac artifact\n- Check library dependencies -- will fail if any library dependency other than the white-listed is found.\n\n@pherl @ejona86 please take a look\nTested: [example staging repository](https://oss.sonatype.org/content/repositories/comgoogle-1041)\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 66,
        "deletions": 12,
        "changed_files": 2,
        "created_at": "2015-04-02T20:33:21Z",
        "closed_at": "2015-04-02T21:36:06Z",
        "merged_at": "2015-04-02T21:36:06Z",
        "body": "- Document more about how to do cross-compilation.\n- Add a post-build check for the actual architecture of the artifact.\n- The `--host` flags for cross-compilation under linux were not working. Switch to `-m32` and `-m64` and they work.\n\n@pherl please take a look.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 272,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2015-04-02T01:16:31Z",
        "closed_at": "2015-04-02T17:53:21Z",
        "merged_at": "2015-04-02T17:53:21Z",
        "body": "Local installation (`mvn install`) works on Linux, Windows(Cygwin and MinGW), and Mac.\n@ejona86 @pherl please take a look.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 818,
        "deletions": 1,
        "changed_files": 6,
        "created_at": "2015-04-01T22:23:50Z",
        "closed_at": "2015-04-02T20:09:39Z",
        "merged_at": null,
        "body": "This is a resubmit of https://github.com/google/protobuf/pull/172. I addressed the comments there.\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 305,
        "deletions": 263,
        "changed_files": 25,
        "created_at": "2015-03-31T18:01:18Z",
        "closed_at": "2015-04-02T22:47:16Z",
        "merged_at": "2015-04-02T22:47:16Z",
        "body": "rebase of #18. Closes #18.\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2015-03-29T21:37:01Z",
        "closed_at": "2016-02-17T00:47:46Z",
        "merged_at": "2016-02-17T00:47:46Z",
        "body": "closes #242 \n\nRemoved redundant checks for NULL, when it will already be handled by calling 'delete'\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 438,
        "deletions": 0,
        "changed_files": 8,
        "created_at": "2015-03-28T00:37:54Z",
        "closed_at": "2015-04-02T01:17:11Z",
        "merged_at": null,
        "body": "It will upload precompiled protoc binaries with the name `protoc-<version>-<os>-<arch>.exe`, which can be consumed by upcoming Gradle/Maven plugins for protobuf.\n@pherl : please take a look.\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-03-26T15:42:04Z",
        "closed_at": "2015-05-08T04:45:15Z",
        "merged_at": "2015-05-08T04:45:15Z",
        "body": "The recent change in setup.py breaks compatibility with python3. passing globals() to exec provides the same behavior across python 2 and python 3.\n\nhttp://stackoverflow.com/questions/24733831/using-a-function-defined-in-an-execed-string-in-python-3\n",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 213,
        "deletions": 0,
        "changed_files": 5,
        "created_at": "2015-03-23T13:17:53Z",
        "closed_at": "2018-06-08T18:14:24Z",
        "merged_at": null,
        "body": "add cpp benchmark. consulted the java version.\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2015-03-18T07:44:23Z",
        "closed_at": "2015-03-18T16:50:34Z",
        "merged_at": "2015-03-18T16:50:34Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-03-16T23:17:01Z",
        "closed_at": "2015-03-17T03:39:45Z",
        "merged_at": null,
        "body": "Many Objective C users rely on the C++ generated code to use protobufs in objective C.\n\nSee https://www.safaribooksonline.com/library/view/learning-objective-c-20/9780133047462/app01.html for a listing of keywords.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 62,
        "deletions": 32,
        "changed_files": 4,
        "created_at": "2015-03-16T21:42:35Z",
        "closed_at": "2015-03-18T17:57:37Z",
        "merged_at": "2015-03-18T17:57:37Z",
        "body": "",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 83,
        "changed_files": 4,
        "created_at": "2015-03-14T21:22:53Z",
        "closed_at": "2015-03-15T18:05:56Z",
        "merged_at": "2015-03-15T18:05:56Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2015-03-14T20:18:05Z",
        "closed_at": "2015-03-15T09:19:10Z",
        "merged_at": null,
        "body": "",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 114,
        "deletions": 25,
        "changed_files": 3,
        "created_at": "2015-03-10T21:06:43Z",
        "closed_at": "2018-06-18T22:31:29Z",
        "merged_at": null,
        "body": "When using protoc to encode/decode protobufs, the input/output was from\nstdin/stdout only. This patch adds command line flags to specify files to read\nthe protobuf from and and write the encoded/decoded protobuf to.\n\nRequest: https://code.google.com/p/protobuf/issues/detail?id=613\n",
        "comments": 18
    },
    {
        "merged": true,
        "additions": 60,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-03-05T22:44:29Z",
        "closed_at": "2015-03-06T01:40:33Z",
        "merged_at": "2015-03-06T01:40:33Z",
        "body": "Change-Id: I885b561c85325db05595f0d86338dcd7c06cf058\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 50,
        "deletions": 5,
        "changed_files": 5,
        "created_at": "2015-03-05T01:11:56Z",
        "closed_at": "2015-03-16T22:48:06Z",
        "merged_at": "2015-03-16T22:48:06Z",
        "body": "Enum names should be sanitized just like other fields to avoid collisions.\n\nOld google code issue: https://code.google.com/p/protobuf/issues/detail?id=572\n",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 11309,
        "deletions": 3335,
        "changed_files": 147,
        "created_at": "2015-03-02T05:22:56Z",
        "closed_at": "2015-03-04T01:51:05Z",
        "merged_at": "2015-03-04T01:51:05Z",
        "body": "The first commit is generated by integration script; following commits are manual fixes. @cfallin @xfxyjwf @TeBoring  for review.\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2015-02-23T18:03:45Z",
        "closed_at": "2015-02-26T18:03:55Z",
        "merged_at": "2015-02-26T18:03:55Z",
        "body": "....\n\nIn `Parser#parseDelimitedFrom`, the JavaDoc states that the return value is `true` or `false`.  This is incorrect, because the return type of the method is not `boolean`.  Otherwise, the description of the behavior with respect to EOF is accurate.  We can correct this by changing the text to mention that `null` is a possible return value.\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 33,
        "deletions": 13,
        "changed_files": 7,
        "created_at": "2015-02-18T02:27:32Z",
        "closed_at": "2015-02-18T22:35:44Z",
        "merged_at": "2015-02-18T22:35:44Z",
        "body": "",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2015-02-14T21:15:33Z",
        "closed_at": "2015-02-17T19:02:32Z",
        "merged_at": "2015-02-17T19:02:32Z",
        "body": "``` ruby\nmap = Google::Protobuf::Map.new\nmap[\"foo\"]  = \"bar\"\nmap == {\"foo\" => \"bar\"}\n# => true\n# however\nmap.inspect\n# => \"{\\\"foo\\\" => \\\"bar\\\"}\"\n{\"foo\" => \"bar\"}.inspect\n# => \"{\\\"foo\\\"=>\\\"bar\\\"}\"\n```\n\nI think it's better to conserve the consistency here.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2015-02-13T23:18:32Z",
        "closed_at": "2018-06-08T18:18:03Z",
        "merged_at": null,
        "body": "It's undefined behavior to dereference a NULL pointer, even if the value pointed to doesn't get used.\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 83,
        "deletions": 89,
        "changed_files": 3,
        "created_at": "2015-02-13T00:12:03Z",
        "closed_at": "2015-02-13T23:45:48Z",
        "merged_at": "2015-02-13T23:45:48Z",
        "body": "Previously, we supported map fields in the Ruby DSL. However, we never\nconnected the final link in the chain and generated `map` DSL commands\nfor map fields in `.proto` files. My apologies -- I had been testing\nwith the DSL directly so I missed this.\n\nAlso fixed a handlerdata-setup-infinite-loop when a map value field's\ntype is its containing message.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1174,
        "deletions": 87,
        "changed_files": 16,
        "created_at": "2015-02-09T22:25:17Z",
        "closed_at": "2015-02-17T22:06:19Z",
        "merged_at": "2015-02-17T22:06:19Z",
        "body": "@xfxyjwf \n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2015-02-09T13:34:21Z",
        "closed_at": "2015-02-12T06:13:45Z",
        "merged_at": "2015-02-12T06:13:45Z",
        "body": "Improper use of immediate constraint is slightly non-optimal with gcc/gnu-as\nbut may cause breakage with clang.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 635,
        "deletions": 0,
        "changed_files": 6,
        "created_at": "2015-02-09T04:24:57Z",
        "closed_at": "2015-02-26T18:04:37Z",
        "merged_at": "2015-02-26T18:04:37Z",
        "body": "@pherl to review\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-02-07T04:43:00Z",
        "closed_at": "2015-02-08T06:46:26Z",
        "merged_at": "2015-02-08T06:46:26Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2015-02-06T05:54:19Z",
        "closed_at": "2015-03-31T19:30:17Z",
        "merged_at": "2015-03-31T19:30:17Z",
        "body": "Fix raise and except syntax issues for py3\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 45,
        "deletions": 24,
        "changed_files": 2,
        "created_at": "2015-02-06T01:03:29Z",
        "closed_at": "2015-03-04T09:10:32Z",
        "merged_at": null,
        "body": "Here is an optional flag that allows for writing directly to stdout. Was thinking of using the stdout file descriptor, but realized the portability may be of some issues there. Unsure of it. \nSo, instead, just used cout.\n\nAlso, I noticed that all arguments require a value. I am thinking of changing this, but this is a little more work.\n\nprotoc --<output>=. --stdout=true file.proto\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 215,
        "deletions": 2,
        "changed_files": 5,
        "created_at": "2015-02-04T05:56:58Z",
        "closed_at": "2015-03-08T22:49:58Z",
        "merged_at": "2015-03-08T22:49:58Z",
        "body": "By giving protoc the flag \n\"--dependency_out=FILE\", protoc will write dependencies of input proto files into FILE. In FILE, the format will be: ^output_file_path: input1_path\\\\n input2_path$\nWhether path is relative or absolute will be based on the input on command line.\nThis cl is based on google#178\n",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 42,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2015-02-04T01:08:28Z",
        "closed_at": "2015-03-18T15:11:41Z",
        "merged_at": null,
        "body": "I have added a couple of files to provide support for biicode C/C++ dependency manager, which host a copy http://www.biicode.com/google/protobuf.\nUsage of protobuf with biicode is simple for the 2 use cases:\n- If the compiler is required, \"bii open\" and the full block will be retrieved and compiled, building \"protoc\"\n- If just the library is required to link .pb.cc files, it is usually enough  to #include the headers, and just the protobuf required files (not the compiler) will be retrieved and built.\n\nA simple example can be found in http://www.biicode.com/examples/protobuf\n\nTested in Win (MinGW, VS12), Ubuntu (gcc 4.8) & Mac (CLang)\n\nThe biicode.py file is just a convenient utility, just the steps required to publish protobuf to biicode. It could be automated via travis, there is already a deploy provider for biicode in TravisCI.\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 30,
        "deletions": 32,
        "changed_files": 2,
        "created_at": "2015-02-03T15:48:00Z",
        "closed_at": "2015-02-03T17:57:13Z",
        "merged_at": "2015-02-03T17:57:13Z",
        "body": "The contract of repeated field is broken, e.g.\n\n``` ruby\nrepeated_field.inspect\n# => [1,2,3]\nrepeated_field == [1,2,3]\n# => true\n[1,2,3] == repeated_field\n# => false\n```\n\nThis commit add the `to_ary` method that's used to do implicit conversion to an array.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 565,
        "deletions": 111,
        "changed_files": 4,
        "created_at": "2015-02-02T21:49:29Z",
        "closed_at": "2015-02-05T23:22:17Z",
        "merged_at": "2015-02-05T23:22:17Z",
        "body": "This PR updates the upb amalgamation (which includes support for treating map fields as native objects in JSON) and adds a test to ensure that JSON map serialization and parsing works.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 169,
        "deletions": 28,
        "changed_files": 4,
        "created_at": "2015-02-01T05:04:37Z",
        "closed_at": "2018-06-08T18:19:33Z",
        "merged_at": null,
        "body": "This adds accessors for nested messages so that references can be kept in order to reduce garbage. This addresses Issue #167. \n\nNote that this changes the default behavior and breaks backwards compatibility. How do you normally handle this? Would this go into a separate branch first?\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2015-02-01T00:08:21Z",
        "closed_at": "2015-02-03T03:37:58Z",
        "merged_at": "2015-02-03T03:37:58Z",
        "body": "I've added the missing ruby generator files and added a workaround to deal with missing <stdint.h> types. Protoc compiles successfully in VS 2012.\n\nThis addresses Issue #87 \n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 26,
        "changed_files": 2,
        "created_at": "2015-01-30T07:01:14Z",
        "closed_at": "2015-02-26T20:46:53Z",
        "merged_at": "2015-02-26T20:46:53Z",
        "body": "Remove unused methods: MessageTypeProtoName, IsVariableLenType\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2015-01-29T15:07:46Z",
        "closed_at": "2015-02-03T16:43:46Z",
        "merged_at": null,
        "body": "This fixes compiling on Windows (tested with msvc2013).\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-01-27T15:47:50Z",
        "closed_at": "2015-01-27T23:31:54Z",
        "merged_at": "2015-01-27T23:31:54Z",
        "body": "The present usage of reinterpret_cast to cast a nullptr_t to a pointer generates an illegal C++ hard error in clang. This is correct, as per http://en.cppreference.com/w/cpp/language/reinterpret_cast the reinterpret_cast cast may not cast nullptr_t to any other pointer. This pull request replaces the cast with static_cast, which is the legal form of cast to use.\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 219,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2015-01-23T17:54:32Z",
        "closed_at": "2015-03-08T22:50:01Z",
        "merged_at": "2015-03-08T22:50:01Z",
        "body": "Use --manifest-file=somefile.d to output the dependency manifest.\nThis file will contain a list of files which were read by protoc as part\nof creating the output files.  It doesn't include the plugin inputs if\nplugins are used, that could be a later extension.\nThe manifest file is in the format <output file>: <input files>.  The\nmanifest file format only allows you to specify one output file, which\nisn't a problem as it's used to detect input changes in order to detect\nwhen to rerun the protoc command.  The output file used in the manifest\nis the manifest filename itself; to use this in ninja you should declare\nthe manifest file as the first output as well as the depfile input.\n",
        "comments": 16
    },
    {
        "merged": true,
        "additions": 83,
        "deletions": 0,
        "changed_files": 4,
        "created_at": "2015-01-22T08:10:45Z",
        "closed_at": "2015-03-05T22:57:14Z",
        "merged_at": "2015-03-05T22:57:14Z",
        "body": "",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2015-01-21T00:42:21Z",
        "closed_at": "2015-02-18T02:19:16Z",
        "merged_at": null,
        "body": "This contains both a conformance test runner (usable against any protobuf implementation) and an implementation for protobuf C++.\n\nThis is just the beginning of the actual tests themselves, I'll be adding more rapidly.\n\nThe C++ implementation doesn't pass all of these tests right now, so I didn't want to make the tests part of Travis until they are all passing.\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-01-19T10:26:24Z",
        "closed_at": "2015-01-21T21:37:12Z",
        "merged_at": null,
        "body": "Additional overflow check (zero_copy_stream_impl.cc)\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2348,
        "deletions": 262,
        "changed_files": 17,
        "created_at": "2015-01-14T22:37:07Z",
        "closed_at": "2015-02-02T21:29:15Z",
        "merged_at": "2015-02-02T21:29:15Z",
        "body": "This PR adds support for oneofs -- in the defs, in message objects, and during parsing and serialization -- to the Ruby extension. The API impact is minimal: fields that are part of a oneof can now take on a `nil` value to indicate not-present, and at most one field in a oneof may be present (non-nil).\n\nThis includes a (necessary) update of the upb amalgamation up to git commit `1988a660`.\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 742,
        "deletions": 716,
        "changed_files": 37,
        "created_at": "2015-01-13T21:03:46Z",
        "closed_at": "2015-08-22T16:49:02Z",
        "merged_at": "2015-08-22T16:49:02Z",
        "body": "Uses #161, #162, #163, #164, and #165 as diff base.\n\nTests for all four supported Python versions run under tox, without the need for `2to3`.\n",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 100,
        "deletions": 96,
        "changed_files": 22,
        "created_at": "2015-01-13T19:48:07Z",
        "closed_at": "2015-04-11T21:14:29Z",
        "merged_at": null,
        "body": "Use stdlib's 'unittest' instead.\n",
        "comments": 12
    },
    {
        "merged": true,
        "additions": 145,
        "deletions": 199,
        "changed_files": 16,
        "created_at": "2015-01-13T19:23:27Z",
        "closed_at": "2015-08-22T16:49:02Z",
        "merged_at": "2015-08-22T16:49:02Z",
        "body": "- Remove PY25 cruft.\n- Selectively apply cleanups from 'python-modernize':\n  - New exception syntax.\n  - Use 'six' to handle module renames.\n  - Use 'six' to handle text / binary stuff.\n\nThis PR covers most of the work from #66 which falls inside `python`\n(rather than the Python code generation stuff in 'src').\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-01-13T19:17:41Z",
        "closed_at": "2015-02-26T21:14:17Z",
        "merged_at": null,
        "body": "",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 341,
        "deletions": 234,
        "changed_files": 1,
        "created_at": "2015-01-13T19:15:57Z",
        "closed_at": "2015-11-27T14:15:12Z",
        "merged_at": null,
        "body": "Downloaded from https://bootstrap.pypa.io/ez_setup.py.\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 32,
        "deletions": 37,
        "changed_files": 2,
        "created_at": "2015-01-13T19:11:58Z",
        "closed_at": "2015-05-07T00:01:13Z",
        "merged_at": null,
        "body": "- Move human-centric metadata to top of 'setup()' call.\n- Add Trove classifiers for supported Python versions.\n- Use 'find_packages()' + MANIFEST.in to avoid errors in listing modules\n  and packages.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 873,
        "deletions": 464,
        "changed_files": 2,
        "created_at": "2015-01-08T02:06:05Z",
        "closed_at": "2015-01-13T21:53:36Z",
        "merged_at": null,
        "body": "@haberman to review.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2631,
        "deletions": 614,
        "changed_files": 12,
        "created_at": "2015-01-07T00:30:31Z",
        "closed_at": "2015-01-13T21:50:11Z",
        "merged_at": "2015-01-13T21:50:11Z",
        "body": "This adds the Map container and support for parsing and serializing maps\nin the protobuf wire format (as defined by the C++ implementation, with\nMapEntry submessages in a repeated field). JSON map\nserialization/parsing are not yet supported as these will require some\nchanges to upb as well.\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 5277,
        "deletions": 9,
        "changed_files": 68,
        "created_at": "2015-01-03T16:28:18Z",
        "closed_at": "2015-02-27T03:59:02Z",
        "merged_at": null,
        "body": "mostly the same as my last pull request:\n1. Updated projects for 2013 in a separate folder.\n2. Added ARM compile targets\n3. Simple Win8 Universal app to run libprotobuflite tests\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 3591,
        "deletions": 39,
        "changed_files": 27,
        "created_at": "2015-01-03T05:55:02Z",
        "closed_at": "2015-02-27T05:41:22Z",
        "merged_at": null,
        "body": "The Windows build is currently broken by unresolved externals for the ruby generator.  This pull request fixes that problem and in addition updates the support for Windows to include recent versions of Visual Studio.\n- Support for VS2008 still present but renamed\n- Support for VS2010, VS2012, and VS2013 added\n- Support for Win32 and x64 platform configurations (32-bit and 64-bit)\n- Fixes so that all tests pass on Windows\n- Verified that a Linux build still passes \"make check\"\n\nI will make a subsequent pull request to support the Python `--cpp_implementation` on Windows but those changes depend on the features in this pull request.\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 4641,
        "deletions": 25,
        "changed_files": 28,
        "created_at": "2014-12-24T14:47:05Z",
        "closed_at": "2015-03-10T23:17:20Z",
        "merged_at": "2015-03-10T23:17:20Z",
        "body": "JRuby support via native extension.\n\nIt's basically a wrapper around `DynamicMessage`\n\nThe tests are changed to use minitest instead of test/unit.\n\nThere are a few differences/bugs than the c implementation:\n- Enum value cannot take arbitary integer\n- Non-repeated fields are copied, and cannot be modified, this goes directly into `DynamicMessage.Builder`\n- Serialize circle is allowed\n- Corecursive messages cannot be inspected or compared, seems `DynamicMessage` cannot tell the difference between an empty message and the default instance.\n",
        "comments": 34
    },
    {
        "merged": false,
        "additions": 183,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2014-12-18T04:59:51Z",
        "closed_at": "2014-12-18T21:41:36Z",
        "merged_at": null,
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2014-12-17T09:11:17Z",
        "closed_at": "2014-12-22T17:52:00Z",
        "merged_at": "2014-12-22T17:52:00Z",
        "body": "Reflect the change that protobuf should now only be supporting 2.6+ (I'd guess note python 3.x+ when its supported in implementation)\n\nRefer to the Python Packaging User Guide for installing setuptools (and pip) instead of out of date telecommunity guide.\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-12-16T01:39:32Z",
        "closed_at": "2014-12-21T01:43:04Z",
        "merged_at": "2014-12-21T01:43:04Z",
        "body": "Including <sys/param.h> on Mac/iOS doesn't define **BYTE_ORDER so\nPROTOBUF_LITTLE_ENDIAN was never being defined. This commit adds a check\nfor the __LITTLE_ENDIAN** macro which is defined by clang and Apple gcc on\nlittle endian architectures.\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-12-13T01:33:53Z",
        "closed_at": "2014-12-13T06:10:03Z",
        "merged_at": "2014-12-13T06:10:03Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 184,
        "deletions": 168,
        "changed_files": 1,
        "created_at": "2014-12-11T08:00:39Z",
        "closed_at": "2015-05-06T23:38:08Z",
        "merged_at": null,
        "body": "Largely conforming to pep8:\n    - fixed inconsistent indentation\n    - inconsistent whitespace in brackets\n    - Blank lines\n    - Keyword arguments\n\nFixed packages installed listing to be google.protobuf\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 292,
        "deletions": 244,
        "changed_files": 1,
        "created_at": "2014-12-11T07:06:59Z",
        "closed_at": "2015-01-25T10:15:01Z",
        "merged_at": null,
        "body": "Old file tried to install a very old setuptools (0.6)\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 14,
        "changed_files": 2,
        "created_at": "2014-12-10T20:03:49Z",
        "closed_at": "2014-12-12T19:13:15Z",
        "merged_at": "2014-12-12T19:13:15Z",
        "body": "...c and python/python_generator.cc\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-12-09T18:02:50Z",
        "closed_at": "2014-12-09T19:38:37Z",
        "merged_at": "2014-12-09T19:38:37Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 35,
        "deletions": 33,
        "changed_files": 3,
        "created_at": "2014-12-09T11:00:59Z",
        "closed_at": "2014-12-10T01:29:42Z",
        "merged_at": null,
        "body": "Source code refactoring. Extracted common functionality into merged methods\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 55,
        "deletions": 35,
        "changed_files": 1,
        "created_at": "2014-12-07T02:30:14Z",
        "closed_at": "2015-05-08T17:34:31Z",
        "merged_at": null,
        "body": "",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 5379,
        "deletions": 4,
        "changed_files": 22,
        "created_at": "2014-12-05T23:58:47Z",
        "closed_at": "2014-12-10T01:27:54Z",
        "merged_at": "2014-12-10T01:27:54Z",
        "body": "",
        "comments": 39
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-12-04T06:24:22Z",
        "closed_at": "2014-12-12T00:04:07Z",
        "merged_at": null,
        "body": "For issue: https://github.com/google/protobuf/issues/117\n\nThis would make resolution easier for anyone searching against issue.\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 47,
        "deletions": 33,
        "changed_files": 2,
        "created_at": "2014-12-02T22:21:46Z",
        "closed_at": "2014-12-02T23:47:00Z",
        "merged_at": "2014-12-02T23:47:00Z",
        "body": "The flag can be used to select which language to include in the distribution package.\n\nFor example:\n  $ ./configure && make dist  // include protoc and C++ runtime only.\n  $ ./configure DIST_LANG=cpp && make dist  // the same as above.\n  $ ./configure DIST_LANG=java && make dist  // include protoc, C++ runtime and Java runtime.\n  $ ./configure DIST_LANG=all && make dist  // include protoc and the runtime for all languages.\n\nFixes issue #107 \n\n@pherl \n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 26,
        "deletions": 10,
        "changed_files": 8,
        "created_at": "2014-12-01T02:37:55Z",
        "closed_at": "2014-12-11T23:32:04Z",
        "merged_at": null,
        "body": "1. Fixes to make libs and protoc compile with VS2013\n2. Added project for Windows 8.1/Phone 8.1 Universal libprotobuf-lite\n3. Tests/test-plugins projects do not compile and I am not sure what to do about it (the code  seems completely iincompatible with Visual C++ 2013). Someone with more familiarity with the code can at least use the new solution to figure that out.\n\nSince the Visual Studio project  in the repository  was for 2008, I figure this at least gets things started on the road to being up to date. \n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 41,
        "deletions": 42,
        "changed_files": 6,
        "created_at": "2014-11-30T11:58:24Z",
        "closed_at": "2014-12-12T00:05:06Z",
        "merged_at": "2014-12-12T00:05:06Z",
        "body": "This PR doesn't introduce any C++11 specific feature, but only fixes the behavior with C++11 so that it works fine in the same way as with C++03.\n\nYou can reproduce the \"problem\" by `make check` configured with `CXXFLAGS=-std=c++11`.\nApplying first commit will reveal the `oneof` part.\n\nTested with clang 3.5.0 and gcc 4.9.2 with and without `-std=c++11`.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 27,
        "deletions": 27,
        "changed_files": 27,
        "created_at": "2014-11-27T00:59:51Z",
        "closed_at": "2014-12-02T23:46:08Z",
        "merged_at": "2014-12-02T23:46:08Z",
        "body": "@pherl \n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-11-26T18:30:15Z",
        "closed_at": "2014-11-27T01:06:32Z",
        "merged_at": "2014-11-27T01:06:32Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-11-26T18:27:12Z",
        "closed_at": "2014-11-27T01:06:49Z",
        "merged_at": "2014-11-27T01:06:49Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2014-11-25T23:27:02Z",
        "closed_at": "2014-12-02T23:45:45Z",
        "merged_at": "2014-12-02T23:45:45Z",
        "body": "Fix Python C++ implementation build issues\n1. Haven't included the include path for \"config.h\".\n2. Use of C++11 auto keyword.\n\nFix issue #92 \n\n@pherl \n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2014-11-25T18:40:10Z",
        "closed_at": "2014-11-25T19:46:40Z",
        "merged_at": "2014-11-25T19:46:39Z",
        "body": "To reproduce run this in the top level directory:\necho \"#include \\\"src/google/protobuf/unknown_field_set.h\\\"\" | clang++ -xc++ -c -pedantic -\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 90,
        "deletions": 1,
        "changed_files": 7,
        "created_at": "2014-11-25T18:01:04Z",
        "closed_at": "2014-11-28T02:49:12Z",
        "merged_at": "2014-11-28T02:49:12Z",
        "body": "Make ByteStrings serializable with java serialization.\n\nFixes https://code.google.com/p/protobuf/issues/detail?id=485\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 116,
        "deletions": 26,
        "changed_files": 5,
        "created_at": "2014-11-25T17:46:59Z",
        "closed_at": "2015-05-07T17:28:52Z",
        "merged_at": "2015-05-07T17:28:52Z",
        "body": "Fix issues 579 and 501 on the code.google.com issues list.\n\nSpecifically, large .proto files lead to too much static code, leading to a\ncompilation error from javac: \"code too large\". This divides the code used\nin static initialization into multiple methods to avoid that error. Also,\nthis incorporates the fix in issue 501 on the code.google.com issues list\nto call registry.add only once per extension.\n",
        "comments": 15
    },
    {
        "merged": true,
        "additions": 15021,
        "deletions": 0,
        "changed_files": 57,
        "created_at": "2014-11-20T01:41:26Z",
        "closed_at": "2014-11-20T22:22:56Z",
        "merged_at": "2014-11-20T22:22:56Z",
        "body": "@pherl \n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2014-11-18T16:44:35Z",
        "closed_at": "2014-11-18T23:02:09Z",
        "merged_at": "2014-11-18T23:02:09Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 19,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2014-11-18T01:07:45Z",
        "closed_at": "2014-11-18T02:17:10Z",
        "merged_at": "2014-11-18T02:17:10Z",
        "body": "Avoid '**/' patterns for compatibility w/ git < 1.8.\n\nIgnore generated test scaffolding files.\n\nIgnore Python build artifacts.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 5,
        "changed_files": 4,
        "created_at": "2014-11-17T16:27:37Z",
        "closed_at": "2014-11-18T02:15:40Z",
        "merged_at": "2014-11-18T02:15:40Z",
        "body": "Define safe constants to use when padding enums.\n\nFixes #80.\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 14561,
        "deletions": 0,
        "changed_files": 58,
        "created_at": "2014-11-15T00:41:52Z",
        "closed_at": "2014-11-19T02:33:16Z",
        "merged_at": null,
        "body": "@pherl \n\nCode copied from https://android.googlesource.com/platform/external/protobuf.git/+/4353bbc88f513a3c8863cc5b30e765dd5530faa1\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2014-11-14T20:42:36Z",
        "closed_at": "2014-12-02T23:45:36Z",
        "merged_at": "2014-12-02T23:45:36Z",
        "body": "@pherl \n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2014-11-11T23:28:31Z",
        "closed_at": "2014-11-20T22:17:29Z",
        "merged_at": "2014-11-20T22:17:29Z",
        "body": "This is following what V8 does:\nhttps://code.google.com/p/v8/source/browse/trunk/LICENSE\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 50,
        "deletions": 50,
        "changed_files": 22,
        "created_at": "2014-11-08T22:59:49Z",
        "closed_at": "2014-11-11T19:03:24Z",
        "merged_at": "2014-11-11T19:03:24Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-11-04T15:11:21Z",
        "closed_at": "2014-11-05T05:35:48Z",
        "merged_at": "2014-11-05T05:35:48Z",
        "body": "There is an example at the top of the page which contains code that appears to show a user how to create and serialize a message to a file. However the flags to open the file lack the O_CREAT flag which allows creating the file if it doesn't exist. I was troubleshooting a situation where this snippet was used and compiled, but never created a file.\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2014-11-03T12:50:09Z",
        "closed_at": "2014-11-05T16:20:53Z",
        "merged_at": "2014-11-05T16:20:53Z",
        "body": "Upstreaming patch used by Chromium in\nhttps://codereview.chromium.org/693773003/\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-11-03T07:21:33Z",
        "closed_at": "2014-11-05T21:42:13Z",
        "merged_at": "2014-11-05T21:42:13Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 19,
        "deletions": 17,
        "changed_files": 4,
        "created_at": "2014-10-31T23:28:58Z",
        "closed_at": "2014-11-05T16:24:25Z",
        "merged_at": "2014-11-05T16:24:25Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 480,
        "deletions": 6,
        "changed_files": 8,
        "created_at": "2014-10-31T20:51:18Z",
        "closed_at": "2014-11-11T22:24:28Z",
        "merged_at": "2014-11-11T22:24:28Z",
        "body": "These patches adds initial support for POWER 32 and 64-bit atomic operations and fixes up various little things that lets the project and tests compile cleanly with the IBM xlC C++ compiler on AIX.\n",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 801,
        "deletions": 449,
        "changed_files": 10,
        "created_at": "2014-10-27T02:30:27Z",
        "closed_at": "2016-02-16T23:36:55Z",
        "merged_at": null,
        "body": "Here I'm going to address remaining issues by merging changes from my diverged fork that made Protobuf 2.5.1 compatible with Python 3 by retaining compatibility with all other supported versions.\n\nI kindly ask authorized developers to review and leave comments and I'll try to address them as soon as I can.\n\nA few questions:\n- Did you loose the requirements for minimum Python 2 version?\n- Most tests are missing here: https://github.com/GreatFruitOmsk/protobuf/blob/master/python/setup.py#L100-L102. Why?\n",
        "comments": 13
    },
    {
        "merged": true,
        "additions": 49,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-10-16T11:58:09Z",
        "closed_at": "2014-10-21T17:49:02Z",
        "merged_at": "2014-10-21T17:49:02Z",
        "body": "Includes files generated by each of:\n- autogen.sh\n- configure\n- make\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2014-10-14T21:03:24Z",
        "closed_at": "2014-11-08T07:25:53Z",
        "merged_at": "2014-11-08T07:25:53Z",
        "body": "This should help with issue #7.\n",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2014-10-11T05:54:19Z",
        "closed_at": "2014-10-11T20:34:03Z",
        "merged_at": "2014-10-11T20:34:03Z",
        "body": "Only test for sched_yield on non-Windows platforms, since it breaks under MingW. sched_yield ought to be tested for on platforms other than Solaris, since it is required. Fixes #45.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 35,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-10-10T19:01:55Z",
        "closed_at": "2014-12-21T01:46:35Z",
        "merged_at": "2014-12-21T01:46:35Z",
        "body": "Added __version__ attr to package so that scripts that check local\npackages to see if newer versions are available can work.\n\nAlmost all Python packages have a version attr, and the vast majority of\nthem name it \"__version__\"\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 17,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2014-10-08T09:51:11Z",
        "closed_at": "2014-10-09T17:25:47Z",
        "merged_at": "2014-10-09T17:25:47Z",
        "body": "Using protobuf-2.6.0 and current master results in C++ example leakage in src/google/protobuf/extension_set.cc line 1632 and further.\n\nThis problem reproduces with current protobuf example:\n\n```\nvalgrind --tool=memcheck --leak-check=full --show-leak-kinds=all ./list_people_cpp database\n```\n\nSample output:\n\n```\n...\n==32205== 16 bytes in 1 blocks are still reachable in loss record 3 of 10\n==32205==    at 0x4C29180: operator new(unsigned long) (vg_replace_malloc.c:324)\n==32205==    by 0x4E8D146: google::protobuf::internal::InitializeDefaultRepeatedFields() (in /usr/lib/x86_64-linux-gnu/libprotobuf.so.9.0.0)\n==32205==    by 0x400E9F9: call_init.part.0 (dl-init.c:78)\n==32205==    by 0x400EAE2: call_init (dl-init.c:36)\n==32205==    by 0x400EAE2: _dl_init (dl-init.c:126)\n==32205==    by 0x40011C9: ??? (in /lib/x86_64-linux-gnu/ld-2.19.so)\n...\n```\n\nIt would be nice to have protobuf not leaving this memory unallocated to make good old memory sanitizer happy :). \n\nOne of the solutions would be creating destructor for StaticDefaultRepeatedFieldsInitializer which would clean everything. Another solution could be using unique pointers.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 34,
        "deletions": 7,
        "changed_files": 2,
        "created_at": "2014-10-02T01:35:25Z",
        "closed_at": "2014-10-03T00:40:47Z",
        "merged_at": "2014-10-03T00:40:47Z",
        "body": "Reviewers: @pherl @protobufel\n\nFixes #24 \n\nThe original validation code tries to access the \"FieldDescriptor.type\" field which for enum fields may only be available after cross-link and thus may result in a NullPointerException. This change fixes the problem by moving the validation logic to the cross-link phase.\n\nNote that this problem only occurs for users who manually construct FileDescriptorProto. The FileDescriptorProto generated by protocol compiler already has the \"type\" field filled even for enum/message/group fields so it doesn't have such problems.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 38,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2014-10-02T00:36:58Z",
        "closed_at": "2014-10-03T18:24:42Z",
        "merged_at": "2014-10-03T18:24:42Z",
        "body": "Reviewers: @pherl  @protobufel\n\nFixes #17 \n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-09-23T13:05:53Z",
        "closed_at": "2014-10-06T21:12:21Z",
        "merged_at": "2014-10-06T21:12:21Z",
        "body": "I get a compiler warning (VS 2005) when I copile my code. The warning is located at wire_format_lite_inl.h\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 208,
        "deletions": 2,
        "changed_files": 5,
        "created_at": "2014-09-20T05:07:14Z",
        "closed_at": "2014-09-23T17:48:02Z",
        "merged_at": "2014-09-23T17:48:02Z",
        "body": "This patch adds support for atomic operations on Solaris, on any platform.\nIt makes use of the atomic functions made available in Solaris' atomic.h\nheader.\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-09-20T05:01:10Z",
        "closed_at": "2014-09-22T17:02:11Z",
        "merged_at": "2014-09-22T17:02:11Z",
        "body": "In Solaris, sched_yield lives in librt, rather than libc. This patch adds a\ncheck which will link in librt if necessary.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2014-09-19T00:43:34Z",
        "closed_at": "2014-09-19T19:00:58Z",
        "merged_at": "2014-09-19T19:00:58Z",
        "body": "__atomic_store_n() cannot take a memory model argument of\n__ATOMIC_ACQUIRE, and __atomic_load_n() cannot take a memory model\nargument of __ATOMIC_RELEASE, per the GCC documentation:\n\n```\nhttps://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/_005f_005fatomic-Builtins.html\n```\n\nOn Clang this generates a -Watomic-memory-ordering warning.\n\nPromote the fences in Acquire_Store() and Release_Load() to the stronger\n__ATOMIC_SEQ_CST memory model, which ought to be safe.\n\nNote that there are no actual uses of Acquire_Store() or Release_Load()\nin protobuf, though.\n\nThis follows the TSAN atomicops implementation, which also uses SEQ_CST\nfences for these functions.\n\n(Fixes #25.)\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 20,
        "deletions": 175,
        "changed_files": 12,
        "created_at": "2014-09-19T00:04:53Z",
        "closed_at": "2014-09-19T19:02:38Z",
        "merged_at": null,
        "body": "These functions are not used anywhere in protobuf. As a side effect, this fixes #25, since the buggy implementations are removed entirely.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2014-09-14T01:22:28Z",
        "closed_at": "2014-09-18T20:52:31Z",
        "merged_at": "2014-09-18T20:52:31Z",
        "body": "The generic atomicops implementation is only exposed if GCC >= 4.7 is\navailable, but Clang, where the underlying __atomic built-ins are also\navailable, typically only claims to be GCC 4.2. This causes build\nfailures when compiling protobuf or the output of protoc's C++ code\ngenerator on an architecture that needs the generic atomicops\nimplementation with Clang.\n\nClang has a \"c_atomic\" extension which can be tested for which almost\ndoes what we want:\n\n```\nC11 atomic operations\n\nUse __has_feature(c_atomic) or __has_extension(c_atomic) to\ndetermine if support for atomic types using _Atomic is enabled.\nClang also provides a set of builtins which can be used to implement\nthe <stdatomic.h> operations on _Atomic types.\n```\n\nI'm not sure if this guarantees that the GNU atomic builtins (the ones\nwith the __atomic prefix) are also available, but in practice this\nshould guarantee that Clang is new enough.\n\nWith this change in place, Clang generates several diagnostics when\ncompiling the generic atomicops implementation. These appear to be bugs\nin the generic atomicops implementation and are not Clang-specific.\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2014-09-13T23:41:19Z",
        "closed_at": "2014-09-18T20:51:56Z",
        "merged_at": "2014-09-18T20:51:56Z",
        "body": "The macro GOOGLE_PROTOBUF_ARCH_PPC is not used anywhere in the protobuf\nsource; there is no Power-specific atomics implementation, etc.\n\nFunnily enough, the macro **ppc** is not actually defined on 32-bit\nPower on GCC/Linux, according to the following webpage:\n\n```\nhttp://nadeausoftware.com/articles/2012/02/c_c_tip_how_detect_processor_type_using_compiler_predefined_macros#POWER\n```\n\nand verified on a 32-bit Debian sid 'powerpc' chroot:\n\n```\n(sid_powerpc-dchroot)edmonds@partch:~$ gcc -dM -E - < /dev/null | grep -c __ppc__\n0\n(sid_powerpc-dchroot)edmonds@partch:~$ gcc -dM -E - < /dev/null | grep -c __LP64__\n0\n```\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 31,
        "deletions": 12,
        "changed_files": 7,
        "created_at": "2014-09-09T14:34:10Z",
        "closed_at": "2015-04-02T22:47:16Z",
        "merged_at": null,
        "body": "Use the cleaner and slightly faster getBytes on Strings.\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-09-04T17:53:37Z",
        "closed_at": "2014-09-04T22:37:28Z",
        "merged_at": "2014-09-04T22:37:28Z",
        "body": "@xfxyjwf \n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-09-04T02:52:04Z",
        "closed_at": "2014-09-04T05:30:50Z",
        "merged_at": "2014-09-04T05:30:50Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-09-03T07:08:50Z",
        "closed_at": "2014-09-04T01:02:28Z",
        "merged_at": "2014-09-04T01:02:28Z",
        "body": "This change fixes the following compiler warning:\n\nwarning: type qualifiers ignored on function return type [-Wignored-qualifiers]\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 20,
        "deletions": 17,
        "changed_files": 1,
        "created_at": "2014-08-28T21:46:16Z",
        "closed_at": "2014-08-29T17:40:29Z",
        "merged_at": "2014-08-29T17:40:29Z",
        "body": "@pherl \n",
        "comments": 1
    }
]