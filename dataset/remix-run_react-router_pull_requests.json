[
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-10-18T23:33:58Z",
        "closed_at": "2023-10-19T20:04:08Z",
        "merged_at": null,
        "body": "I think it's better to use const : )",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 936,
        "deletions": 432,
        "changed_files": 17,
        "created_at": "2023-10-18T16:18:41Z",
        "closed_at": "2023-10-19T20:31:49Z",
        "merged_at": null,
        "body": "Implementation for https://github.com/remix-run/remix/discussions/7698\r\n\r\n* Users can provide their own fetcher keys via `useFetcher({ key: \"abc\" })`, allowing you to access the same fetcher instance from hook invocations in separate parts of your app.  Current internal keys are incrementing values (`\"1\"`, `\"2\"`, etc.) so they've been updated with a `__` prefix to avoid potential collisions with user-specific values (`\"__1\"`, `\"__2\"`, etc.).  \r\n  * Maybe it's time to turn these keys into symbols?\r\n* Fetcher persistence is available for **submitting fetchers only**.  `useFetcher({ persist: true })` will cause the fetcher to persist beyond it's component unmount **if and only if** it was non-idle at the time of unmount.  It will delay cleanup until it returns to an idle state.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 25,
        "deletions": 262,
        "changed_files": 19,
        "created_at": "2023-10-13T20:33:40Z",
        "closed_at": "2023-10-16T15:48:37Z",
        "merged_at": "2023-10-16T15:48:37Z",
        "body": "This PR was opened by the [Changesets release](https://github.com/changesets/action) GitHub action. When you're ready to do a release, you can merge this and the packages will be published to npm automatically. If you're not ready to do a release yet, that's fine, whenever you add more changesets to release-next, this PR will be updated.\n\n\n# Releases\n## react-router-dom@6.17.0\n\n### Minor Changes\n\n-   Add support for the [View Transitions API](https://developer.mozilla.org/en-US/docs/Web/API/ViewTransition) via `document.startViewTransition` to enable CSS animated transitions on SPA navigations in your application. ([#10916](https://github.com/remix-run/react-router/pull/10916))\n\n    The simplest approach to enabling a View Transition in your React Router app is via the new `<Link unstable_viewTransition>` prop. This will cause the navigation DOM update to be wrapped in `document.startViewTransition` which will enable transitions for the DOM update. Without any additional CSS styles, you'll get a basic cross-fade animation for your page.\n\n    If you need to apply more fine-grained styles for your animations, you can leverage the `unstable_useViewTransitionState` hook which will tell you when a transition is in progress and you can use that to apply classes or styles:\n\n    ```jsx\n    function ImageLink(to, src, alt) {\n      let isTransitioning = unstable_useViewTransitionState(to);\n      return (\n        <Link to={to} unstable_viewTransition>\n          <img\n            src={src}\n            alt={alt}\n            style={{\n              viewTransitionName: isTransitioning ? \"image-expand\" : \"\",\n            }}\n          />\n        </Link>\n      );\n    }\n    ```\n\n    You can also use the `<NavLink unstable_viewTransition>` shorthand which will manage the hook usage for you and automatically add a `transitioning` class to the `<a>` during the transition:\n\n    ```css\n    a.transitioning img {\n      view-transition-name: \"image-expand\";\n    }\n    ```\n\n    ```jsx\n    <NavLink to={to} unstable_viewTransition>\n      <img src={src} alt={alt} />\n    </NavLink>\n    ```\n\n    For an example usage of View Transitions with React Router, check out [our fork](https://github.com/brophdawg11/react-router-records) of the [Astro Records](https://github.com/Charca/astro-records) demo.\n\n    For more information on using the View Transitions API, please refer to the [Smooth and simple transitions with the View Transitions API](https://developer.chrome.com/docs/web-platform/view-transitions/) guide from the Google Chrome team.\n\n### Patch Changes\n\n-   Export a separate `RouterProvider` from `react-router-dom` with `startViewTransition` support ([#10928](https://github.com/remix-run/react-router/pull/10928))\n-   Log a warning and fail gracefully in `ScrollRestoration` when `sessionStorage` is unavailable ([#10848](https://github.com/remix-run/react-router/pull/10848))\n-   Updated dependencies:\n    -   `@remix-run/router@1.10.0`\n    -   `react-router@6.17.0`\n\n## @remix-run/router@1.10.0\n\n### Minor Changes\n\n-   Add support for the [View Transitions API](https://developer.mozilla.org/en-US/docs/Web/API/ViewTransition) by allowing users to opt-into view transitions on navigations via the new `unstable_viewTransition` option to `router.navigate` ([#10916](https://github.com/remix-run/react-router/pull/10916)) ([#10935](https://github.com/remix-run/react-router/pull/10935))\n\n### Patch Changes\n\n-   Allow 404 detection to leverage root route error boundary if path contains a URL segment ([#10852](https://github.com/remix-run/react-router/pull/10852))\n-   Fix `ErrorResponse` type to avoid leaking internal field ([#10876](https://github.com/remix-run/react-router/pull/10876))\n\n## react-router@6.17.0\n\n### Patch Changes\n\n-   Export a separate `RouterProvider` from `react-router-dom` with `startViewTransition` support ([#10928](https://github.com/remix-run/react-router/pull/10928))\n-   [REMOVE] fix lint issues ([#10930](https://github.com/remix-run/react-router/pull/10930))\n-   Fix `RouterProvider` `future` prop type to be a `Partial<FutureConfig>` so that not all flags must be specified ([#10900](https://github.com/remix-run/react-router/pull/10900))\n-   Updated dependencies:\n    -   `@remix-run/router@1.10.0`\n\n## react-router-dom-v5-compat@6.17.0\n\n### Patch Changes\n\n-   Updated dependencies:\n    -   `react-router-dom@6.17.0`\n    -   `react-router@6.17.0`\n\n## react-router-native@6.17.0\n\n### Patch Changes\n\n-   Updated dependencies:\n    -   `react-router@6.17.0`\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 52,
        "deletions": 7,
        "changed_files": 3,
        "created_at": "2023-10-13T18:02:27Z",
        "closed_at": "2023-10-16T16:06:10Z",
        "merged_at": "2023-10-16T16:06:10Z",
        "body": "The default `action` for `<Form>` when no `action` is specified was being calculated via `useResolvedPath(\".\")`, however that only includes the `pathnameBase` so we were losing the splat value.  \r\n\r\nGiven `{ path: '/foo/*' }`, and accessing `/foo/bar/baz`, `<Form>` would incorrectly render `<Form action=\"/foo\">`.\r\n\r\nThis PR updates the default form action to be `useResolvedPath(location.pathname)` so we render `<Form action=\"/foo/bar/baz\">`\r\n\r\nCloses #10922 ",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 358,
        "deletions": 235,
        "changed_files": 9,
        "created_at": "2023-10-12T18:59:19Z",
        "closed_at": "2023-10-13T19:44:18Z",
        "merged_at": "2023-10-13T19:44:18Z",
        "body": "This lifts the `document.startViewTransition` version of `RouterProvider` up into `react-router-dom`, leaving the existing `RouterProvider` version in `react-router` so we can avoid any bundle increase for non-DOM environments.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1736,
        "deletions": 0,
        "changed_files": 16,
        "created_at": "2023-10-12T08:04:47Z",
        "closed_at": "2023-10-12T13:13:51Z",
        "merged_at": null,
        "body": "- Use RouterProvider\r\n- Sometimes we cannot access React Context (for example: declare a Request class with Axios interceptor), we prefer to make an SPA navigation instead of `window.location.href`(that will reload the page)\r\n- I cannot find a better way to do this after Google, I think the docs are lacking this part",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 39,
        "deletions": 3,
        "changed_files": 4,
        "created_at": "2023-10-06T16:30:51Z",
        "closed_at": "2023-10-19T14:03:44Z",
        "merged_at": null,
        "body": "If I understood correctly, optional parameter (e.g. `/foo/:bar?`) support was [initially dropped in v6](https://reactrouter.com/en/main/upgrading/v5#note-on-route-path-patterns) before [being reintroduced](https://reactrouter.com/en/main/route/route#optional-segments). However, upon trying to migrate an app from v5 to v6, I realized `matchPath` returns `null` when trying to match a path against a pattern containing optional parameters, even though it should match.\r\n\r\nThis PR fixes this, but in a probably hazardous way. This allows me to keep working on said migration while, hopefully, I can discuss this problem with you (and eventually implement a better solution for it).\r\n\r\nThanks!",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 3003,
        "deletions": 75,
        "changed_files": 30,
        "created_at": "2023-10-04T19:50:47Z",
        "closed_at": "2023-10-11T19:25:44Z",
        "merged_at": "2023-10-11T19:25:44Z",
        "body": "This PR adds initial support for `document.startViewTransition` behind some `unstable_` APIs so we can get it out into folks hands and start getting some feedback.  Right now it's pretty abstracted and opt-in at the link level.  We're hoping that once folks start using it we can figure out what other types of complex use-cases exist that we can't yet handle with these APIs.\r\n\r\nThere are 2 new APIs\r\n* `unstable_viewTransition` flag on `Link`/`NavLink`/`navigate`/`submit` which enables the usage of `document.startViewTransition` for that navigation\r\n  * [Link docs](https://github.com/remix-run/react-router/blob/brophdawg11/start-view-transition/docs/components/link.md#unstable_viewtransition)\r\n  * [NavLink docs](https://github.com/remix-run/react-router/blob/brophdawg11/start-view-transition/docs/components/nav-link.md#unstable_viewtransition) \r\n* `unstable_useViewTransitionState(to)` - a hook that tells you if there is an active transition to the indicated location (or from a POP/reverse PUSH navigation)\r\n  * [Docs](https://github.com/remix-run/react-router/blob/brophdawg11/start-view-transition/docs/hooks/use-view-transition-state.md) \r\n\r\nPlease see the changeset and docs for more info.\r\n\r\nLive demo: https://github.com/brophdawg11/react-router-records\r\n\r\n<br/>\r\n<br/>\r\n\r\n**TODO:**\r\n * [x] Unit tests",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2023-10-03T17:51:15Z",
        "closed_at": "2023-10-03T19:56:29Z",
        "merged_at": "2023-10-03T19:56:29Z",
        "body": "Related issue: #10905 \r\n\r\nThe vast majority of the warnings use `<docs-warning>` so I went with that.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 111,
        "deletions": 2,
        "changed_files": 4,
        "created_at": "2023-10-03T10:08:19Z",
        "closed_at": "2023-10-03T13:04:17Z",
        "merged_at": null,
        "body": "The component `fallbackElement` its been showed while `router` and first `loader` are working for the first time, before everything is initialized. As some routes can have `loader` also, i find useful to have the option to use the same `fallbackElement` when navigating to them. It will help to deduplicate code in my routes.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2023-09-28T15:36:02Z",
        "closed_at": "2023-10-02T15:24:16Z",
        "merged_at": "2023-10-02T15:24:16Z",
        "body": null,
        "comments": 3
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-09-25T17:47:06Z",
        "closed_at": "2023-09-27T16:25:08Z",
        "merged_at": null,
        "body": "In React-Router DOM v5, I was able to import createBrowserHistory from history, but here it was referred to as if it's part of the react-router-dom library directly. I was surprised that the documentation referred to this functionality but it's actually part of a different sub-library. I'm not sure what I wrote here is correct, but it would be helpful to clarify where we should get createBrowserHistory, and if it's still safe to use the one from 'history' and caveats for the scenarios that it would be worth it to download a whole \u2019nother package just for this functionality.\r\n\r\nIn the v5 documentation it's clear that you can import createBrowserHistory from the history peerDependency. Here I'm still to find out if that's the case: https://v5.reactrouter.com/web/api/Router. In either ",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 17,
        "deletions": 6,
        "changed_files": 3,
        "created_at": "2023-09-16T11:31:04Z",
        "closed_at": "2023-09-27T16:07:59Z",
        "merged_at": "2023-09-27T16:07:59Z",
        "body": "There is problem in current declaration of `ErrorResponse`: the private field leaks to the public contract. So `ErrorResponse` type behaves very strange on usage (see [playground](https://www.typescriptlang.org/play?noUncheckedIndexedAccess=true&exactOptionalPropertyTypes=true&ts=5.1.6#code/JYWwDg9gTgLgBAbwKJStASgUwM6QHbaYC+cAZmiHAEQACUmIwAHgLRQCueA9GuzJlCoAoEQGMIBePVwTCALjgo0ULDIKY4AXkRC4euNhgBDGO2wKALACYANLv2GTZgCqYmMBVX6Gqd-XAATEyMFBCIhIiA)).\r\nI propose to simplify the declaration of `ErrorResponse` and declare it's public interface obviously.",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 24,
        "deletions": 23,
        "changed_files": 9,
        "created_at": "2023-09-16T05:36:34Z",
        "closed_at": "2023-09-17T06:08:03Z",
        "merged_at": "2023-09-17T06:08:03Z",
        "body": "Fixes: #10872",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 91,
        "deletions": 3,
        "changed_files": 4,
        "created_at": "2023-09-07T20:59:56Z",
        "closed_at": "2023-10-02T16:43:35Z",
        "merged_at": "2023-10-02T16:43:35Z",
        "body": "I've detected that getShortCircuitMatches is able to find a default or root router. However, there may be cases where this root router has a base path.\r\n\r\nIn my plugin, [vite-plugin-remix](https://github.com/yracnet/vite-plugin-remix), which supports base path deployment, I've encountered an issue related to these rules. I've searched for documentation or a definition regarding the \"__shim-error-route__\" but couldn't find any.\r\n\r\nI'm submitting this PR to address this issue.\r\n\r\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 165,
        "deletions": 4,
        "changed_files": 4,
        "created_at": "2023-09-06T16:58:03Z",
        "closed_at": "2023-09-14T13:54:56Z",
        "merged_at": "2023-09-14T13:54:55Z",
        "body": "As discussed in #10842\r\n\r\nThis writes a descriptive warning to the console if `sessionStorage` is unavailable for any reason, but allows the scroll saving/resetting to continue working as much as possible (until the user leaves the page we still have the scroll positions in a global variable)\r\n\r\nIt also retro-fits a \"happy-path\" test for `ScrollRestoration` to confirm the scroll position is correctly reset and no warnings are printed.\r\n\r\nInterestingly, writing the test turned up a behaviour quirk where the default `getKey` implementation fails to save the scroll position for the first page viewed (since its `location.key` is `default` on the first visit). I haven't attempted to fix this; I'm not even sure if it's a real issue outside the test environment.",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 34,
        "deletions": 22,
        "changed_files": 3,
        "created_at": "2023-09-05T20:57:12Z",
        "closed_at": "2023-09-06T17:16:24Z",
        "merged_at": "2023-09-06T17:16:24Z",
        "body": "Follow-up of @brophdawg11's #10843 for the reasons mentioned in my remark (see https://github.com/remix-run/react-router/pull/10843#pullrequestreview-1611895961)\r\n\r\n> In the light of named tuple elements, I've seen something passing by to do the same for generic elements as well, so I think it would be better to have long names instead\r\n> \r\n> https://devblogs.microsoft.com/typescript/announcing-typescript-5-2/#named-and-anonymous-tuple-elements",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 8,
        "changed_files": 4,
        "created_at": "2023-09-01T11:58:57Z",
        "closed_at": "2023-09-02T07:43:27Z",
        "merged_at": null,
        "body": "It was already discussed at #8515 \r\nGiving it another shot :-) \r\nyes, it doesn't provide type guarantees but maybe one has changed his mind, since it gives a little bit of ergonomics to pass an optional state instead of narrowing externally. Also it forces to deal with `null` when no state is provided.\r\n\r\nuse case:\r\n```ts\r\ntype MyLocationState = { value: string }\r\n\r\nconst { state } = useLocation<MyLocationState>();\r\nconsole.log(state?.value) \r\n```",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 0,
        "changed_files": 7,
        "created_at": "2023-08-17T20:36:51Z",
        "closed_at": "2023-08-18T15:09:26Z",
        "merged_at": "2023-08-18T15:09:26Z",
        "body": "export `ShouldRevalidateFunctionArgs` so that it can be later exported also in `@remix-run/react`.\r\n\r\nThis would allow to export `shouldRevalidate` as a non arrow function in Remix\r\n\r\n```ts\r\nimport type {ShouldRevalidateFunctionArgs} from '@remix-run/react'\r\n\r\nexport function shouldRevalidate(args: ShouldRevalidateFunctionArgs) {...}\r\n```",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 48,
        "deletions": 30,
        "changed_files": 7,
        "created_at": "2023-08-17T15:30:14Z",
        "closed_at": "2023-08-17T20:31:50Z",
        "merged_at": null,
        "body": "\r\nCreate and export `ShouldRevalidateArgs` so that it can be later exported also in `@remix-run/react`.\r\n\r\nThis would allow to export `shouldRevalidate` as a non arrow function\r\n\r\n```ts\r\nimport type {ShouldRevalidateArgs} from '@remix-run/react'\r\n\r\nexport function shouldRevalidate(args: ShouldRevalidateArgs) {...}\r\n```",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-08-11T09:38:23Z",
        "closed_at": "2023-08-11T11:24:09Z",
        "merged_at": "2023-08-11T11:24:09Z",
        "body": null,
        "comments": 4
    },
    {
        "merged": true,
        "additions": 68,
        "deletions": 47,
        "changed_files": 5,
        "created_at": "2023-08-11T01:44:00Z",
        "closed_at": "2023-08-11T13:14:02Z",
        "merged_at": "2023-08-11T13:14:02Z",
        "body": "Fixes https://github.com/remix-run/remix/issues/5759.\r\n\r\nThis type issue was picked up if I added type annotations to the args objects in the test suite, so I've also added those as part of this fix.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 54,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2023-08-10T22:09:52Z",
        "closed_at": "2023-08-11T17:40:51Z",
        "merged_at": "2023-08-11T17:40:51Z",
        "body": "Discovered while implementing `route.lazy` in Remix",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2023-08-10T07:48:47Z",
        "closed_at": "2023-08-13T21:51:53Z",
        "merged_at": "2023-08-13T21:51:53Z",
        "body": "This pull request makes fixes to the README's examples. Some links to StackBlitz were not working due to differences in the name of some files. In addition, other StackBlitz links were also wrong. In both cases the user was redirected to the README inside the Stackblitz platform instead the App file.",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 141,
        "deletions": 9,
        "changed_files": 4,
        "created_at": "2023-08-08T22:22:51Z",
        "closed_at": "2023-08-11T17:38:02Z",
        "merged_at": "2023-08-11T17:38:02Z",
        "body": "Closes https://github.com/remix-run/remix/issues/5599",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 73,
        "deletions": 16,
        "changed_files": 5,
        "created_at": "2023-08-08T14:33:18Z",
        "closed_at": "2023-10-20T15:02:55Z",
        "merged_at": "2023-10-20T15:02:55Z",
        "body": "### Overview\r\nAdds support for optional path segments in `matchPath`. Resolves #9862",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 66,
        "deletions": 13,
        "changed_files": 3,
        "created_at": "2023-08-07T06:46:43Z",
        "closed_at": "2023-08-08T14:25:45Z",
        "merged_at": null,
        "body": "### Overview\r\nAdds support for optional path segments in `matchPath`. Resolves https://github.com/remix-run/react-router/discussions/9862",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 32,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-07-26T15:34:36Z",
        "closed_at": "2023-08-02T17:07:07Z",
        "merged_at": null,
        "body": "PR opened to highlight a bug within `matchRoutes` ",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-07-24T06:56:04Z",
        "closed_at": "2023-07-24T13:32:11Z",
        "merged_at": "2023-07-24T13:32:11Z",
        "body": "I think it should be `protected`",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-07-22T17:15:50Z",
        "closed_at": "2023-07-22T23:04:19Z",
        "merged_at": "2023-07-22T23:04:19Z",
        "body": null,
        "comments": 4
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 6,
        "changed_files": 3,
        "created_at": "2023-07-22T09:56:19Z",
        "closed_at": "2023-07-22T23:03:54Z",
        "merged_at": "2023-07-22T23:03:53Z",
        "body": "### Summary\r\n\r\n- Fixes #10725\r\n\r\n### Screenshots\r\n\r\n- Before\r\n  - ![image](https://github.com/remix-run/react-router/assets/1915925/b765631a-d519-4999-8958-f8386fbeb61e)\r\n\r\n- After\r\n  - ![image](https://github.com/remix-run/react-router/assets/1915925/76fa77b5-54f0-44ca-bd0c-e11793873c63)\r\n\r\n\r\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 28,
        "deletions": 37,
        "changed_files": 4,
        "created_at": "2023-07-18T21:54:09Z",
        "closed_at": "2023-08-28T20:12:28Z",
        "merged_at": "2023-08-28T20:12:28Z",
        "body": "Removing some internals needed for the Remix v1 back-compat layer that can be removed in Remix v2.\r\n\r\nCurrent experimental: `0.0.0-experimental-f728258d`\r\n\r\nReplaces https://github.com/remix-run/react-router/pull/10211",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 23,
        "deletions": 120,
        "changed_files": 19,
        "created_at": "2023-07-17T19:27:06Z",
        "closed_at": "2023-07-17T20:52:52Z",
        "merged_at": "2023-07-17T20:52:52Z",
        "body": "This PR was opened by the [Changesets release](https://github.com/changesets/action) GitHub action. When you're ready to do a release, you can merge this and the packages will be published to npm automatically. If you're not ready to do a release yet, that's fine, whenever you add more changesets to release-next, this PR will be updated.\n\n\n# Releases\n## react-router@6.14.2\n\n### Patch Changes\n\n-   Updated dependencies:\n    -   `@remix-run/router@1.7.2`\n\n## react-router-dom@6.14.2\n\n### Patch Changes\n\n-   Properly decode element id when emulating hash scrolling via `<ScrollRestoration>` ([#10682](https://github.com/remix-run/react-router/pull/10682))\n-   Add missing `<Form state>` prop to populate `history.state` on submission navigations ([#10630](https://github.com/remix-run/react-router/pull/10630))\n-   Support proper hydration of `Error` subclasses such as `ReferenceError`/`TypeError` ([#10633](https://github.com/remix-run/react-router/pull/10633))\n-   Updated dependencies:\n    -   `@remix-run/router@1.7.2`\n    -   `react-router@6.14.2`\n\n## react-router-dom-v5-compat@6.14.2\n\n### Patch Changes\n\n-   Updated dependencies:\n    -   `react-router-dom@6.14.2`\n    -   `react-router@6.14.2`\n\n## react-router-native@6.14.2\n\n### Patch Changes\n\n-   Updated dependencies:\n    -   `react-router@6.14.2`\n\n## @remix-run/router@1.7.2\n\n### Patch Changes\n\n-   Trigger an error if a `defer` promise resolves/rejects with `undefined` in order to match the behavior of loaders and actions which must return a value or `null` ([#10690](https://github.com/remix-run/react-router/pull/10690))\n-   Properly handle fetcher redirects interrupted by normal navigations ([#10674](https://github.com/remix-run/react-router/pull/10674))\n-   Initial-load fetchers should not automatically revalidate on GET navigations ([#10688](https://github.com/remix-run/react-router/pull/10688))\n-   [REMOVE] Fix additional edge case for #10674 ([#10709](https://github.com/remix-run/react-router/pull/10709))\n-   Enhance the return type of `Route.lazy` to prohibit returning an empty object ([#10634](https://github.com/remix-run/react-router/pull/10634))\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 55,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2023-07-17T14:42:49Z",
        "closed_at": "2023-07-17T16:27:00Z",
        "merged_at": "2023-07-17T16:27:00Z",
        "body": "Follow up for #10674 for the scenario where the interrupting navigation has no loaders to run - that should still increment the `pendingNavigationLoadId`.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-07-14T21:11:09Z",
        "closed_at": "2023-07-15T15:49:26Z",
        "merged_at": "2023-07-15T15:49:26Z",
        "body": "Note: documentation only change.\r\n\r\n\r\n\r\n### The issue \r\nLines that were intended to be highlighted are not. The array used to define the lines to highlight does not allow for spaces.\r\n\r\n![issue_screenshot1](https://github.com/remix-run/react-router/assets/1444753/ec30aef8-41d5-48e9-9e61-485884e0efad)\r\n\r\n![issue_screenshot2](https://github.com/remix-run/react-router/assets/1444753/d0eaecbf-d344-4867-a24a-ab9235b4d95b)\r\n\r\n### Resolution\r\nRemove the spaces in the line number array. \r\n![resolution_screenshot](https://github.com/remix-run/react-router/assets/1444753/50aee214-2725-457d-98fa-2c0e36f6ed44)",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 428,
        "deletions": 426,
        "changed_files": 13,
        "created_at": "2023-07-14T21:05:04Z",
        "closed_at": "2023-07-19T12:56:40Z",
        "merged_at": "2023-07-19T12:56:40Z",
        "body": "Closes https://github.com/remix-run/react-router/issues/10706\r\n\r\nI also restructured some unit tests in 28d8eed9004e730b14bbe646706c224097006798.  Began with pulling out `useRevalidator` tests from the larger `data-memory-router-test` and then that led to moving some utils to standalone files and leveraging them instead of copy/pasting them across test suites.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 126,
        "deletions": 9,
        "changed_files": 12,
        "created_at": "2023-07-14T19:59:00Z",
        "closed_at": "2023-08-02T19:39:12Z",
        "merged_at": "2023-08-02T19:39:12Z",
        "body": "Sometimes we want to force a document reload when redirecting on the same origin. This PR adds support for a custom header (`X-Remix-Reload-Document`), which, when present, tells the router to trigger a document reload when handling a redirect in the browser.\r\n\r\nMy use-case for this behavior is using remix as an OAuth login app, sharing the same origin with other apps, each served on a separate basename (behind a reverse proxy). On the final stage of the login flow, the response may either fail or succeed. In the case of failure, we return an error message without a page reload and remain within the remix app. In the case of success, we redirect to the target application. Since the result is dynamic, we cannot set `reloadDocument` in the request form. Since the target application is served externally from remix, we cannot use a history redirect. And we cannot rely on a success page to trigger a client-side redirect as that won't work without javascript.\r\n\r\nThe only solution that works in all cases (including without javascript) is a custom header included with the redirect response that is then used to trigger a document reload in the client router.\r\n\r\nI have an example repo with this implementation patched here: https://github.com/robbtraister/remix-hard-redirect\r\n\r\nI also added and exported a `redirectWithReload` utility function that appends the header in question so you don't need to remember or type it.\r\n\r\nLink to the [Open Development discussion](https://github.com/remix-run/react-router/discussions/9859)\r\n",
        "comments": 17
    },
    {
        "merged": false,
        "additions": 1862,
        "deletions": 1,
        "changed_files": 15,
        "created_at": "2023-07-14T16:01:04Z",
        "closed_at": "2023-07-14T21:09:00Z",
        "merged_at": null,
        "body": " The array used to define the lines to highlight does not allow for spaces.\r\n\r\n## The issue\r\n![issue_screenshot1](https://github.com/remix-run/react-router/assets/1444753/ec30aef8-41d5-48e9-9e61-485884e0efad)\r\n\r\n![issue_screenshot2](https://github.com/remix-run/react-router/assets/1444753/d0eaecbf-d344-4867-a24a-ab9235b4d95b)\r\n\r\n## Resolution\r\n![resolution_screenshot](https://github.com/remix-run/react-router/assets/1444753/50aee214-2725-457d-98fa-2c0e36f6ed44)",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1862,
        "deletions": 1,
        "changed_files": 15,
        "created_at": "2023-07-14T15:22:33Z",
        "closed_at": "2023-07-19T12:27:43Z",
        "merged_at": "2023-07-19T12:27:43Z",
        "body": "Fix typo during check in isQueryRouteResponse",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 65,
        "deletions": 65,
        "changed_files": 25,
        "created_at": "2023-07-11T20:52:36Z",
        "closed_at": "2023-07-12T19:01:01Z",
        "merged_at": "2023-07-12T19:01:01Z",
        "body": "Same as https://github.com/remix-run/remix/pull/6551 &https://github.com/remix-run/remix/pull/6552",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 11,
        "changed_files": 1,
        "created_at": "2023-07-11T20:35:17Z",
        "closed_at": "2023-07-12T18:59:46Z",
        "merged_at": null,
        "body": "Follow-up of #10413",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 84,
        "deletions": 3,
        "changed_files": 4,
        "created_at": "2023-07-11T17:57:34Z",
        "closed_at": "2023-07-11T20:27:07Z",
        "merged_at": "2023-07-11T20:27:07Z",
        "body": "Alternate fix for https://github.com/remix-run/remix/pull/6793",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 155,
        "deletions": 59,
        "changed_files": 3,
        "created_at": "2023-07-11T13:57:04Z",
        "closed_at": "2023-07-11T20:27:26Z",
        "merged_at": "2023-07-11T20:27:26Z",
        "body": "Follow up to https://github.com/remix-run/react-router/pull/10623 which inadvertently started revalidating initial-load fetchers on GET navigations, when it should only revalidate (without calling `shouldRevalidate`) on explicit revalidations (submissions, `useRevalidate`, etc.).  \r\n\r\nDiscord thread in which this was raised: https://discord.com/channels/770287896669978684/1128075241579614208/1128080680417501215",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 139,
        "deletions": 7,
        "changed_files": 4,
        "created_at": "2023-07-11T08:46:18Z",
        "closed_at": "2023-07-13T13:59:21Z",
        "merged_at": "2023-07-13T13:59:21Z",
        "body": "PR for #10489.\r\n\r\nThis pull request fixes the `usePrompt` invalid blocker state transition invariant exception.\r\n\r\nEssentially, when navigating, if we should block navigation, we update the blocker for the derived blocker key so that it's in a \"blocked\" state. In the proceed function for this blocker, we then update the blocker so that it's in a \"proceeding\" state. In the reset function for this blocker, we reset the blocker to the `IDLE_BLOCKER` (which results in an \"unblocked\" state). \r\n\r\nIn the `updateBlocker` function, we receive the blocker key as a parameter and update it. What was happening here is that by the time we came to proceed the blocker, it was in a \"proceeding\" state, causing the invariant to throw an exception according to the state-machine-like logic (logically, as this makes no sense). \r\n\r\nThe blocker was in this state because in the `usePrompt` hook, there are two effects: one that resets the blocker when the `when` parameter changes, and one that proceeds the blocker after confirmation. These two effects were essentially fighting each other; the first effect was resetting the blocker _just_ before the second effect attempted to proceed it, leading to the unexpected state transition. \r\n\r\nWhat I've done (after reasoning about this with [brophdawg11](https://github.com/brophdawg11), thanks for your time and expertise Matt) is both reversed the definition order of the effects so that we first attempt to proceed a blocker when appropriate, and also removed the `setTimeout` wrapping the call to `blocker.proceed` as I think this defers the execution of the function, which probably isn't what we want here.\r\n\r\nThis appears to fix the problem \ud83c\udf89 \r\n\r\n### Changes\r\n\r\n- Remove the `setTimeout` wrapping `blocker.proceed`. This defers the execution of the function, but I don't think that's what we want here.\r\n- Reorder the `useEffect`s so that we attempt to proceed first when appropriate and prevent resetting a blocker that we're about to proceed.\r\n\r\n### Notes\r\n\r\n- If anyone knows exactly why the `setTimeout` wrapping `blocker.proceed` was required, or why anything I've done here doesn't sound like a good idea then please let me know \ud83d\ude42 ",
        "comments": 13
    },
    {
        "merged": true,
        "additions": 240,
        "deletions": 18,
        "changed_files": 4,
        "created_at": "2023-07-05T22:32:30Z",
        "closed_at": "2023-07-06T20:33:02Z",
        "merged_at": "2023-07-06T20:33:02Z",
        "body": "If a fetcher loader/action is in-flight, and a new navigation is started, and then the loader/action completes with a redirect, we should be ignoring the redirect since the navigation came after it.\r\n\r\nCloses https://github.com/remix-run/remix/issues/6695",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2023-07-05T15:28:37Z",
        "closed_at": "2023-07-05T19:01:44Z",
        "merged_at": null,
        "body": "Just decided to fix a little inconvenience in this great library\r\nAdded the ability to define state type for location:\r\n- Updated useLocation hook\r\n- Updated location interface",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2023-07-05T10:47:05Z",
        "closed_at": "2023-07-06T16:45:22Z",
        "merged_at": null,
        "body": "currently the types for `pathname`, `search` and `hash` are all `string`, with a comment indicating that they should start with a `/`, `?` and `#` respectively\r\n\r\nthis PR improves the types for each of the three by using template literal types\r\n\r\nfor example\r\n\r\n```ts\r\n\r\n// Before\r\npathname: 'some-pathname-without-initial-slash' // no type error\r\n\r\n// After: \r\npathname: 'some-pathname-without-initial-slash' // type error\r\n```",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2023-07-03T20:17:35Z",
        "closed_at": "2023-07-06T16:49:12Z",
        "merged_at": null,
        "body": "When navigate throws errors, it's impossible for the calling application to catch them. Navigate returns a promise and that promise should be returned to the caller.",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-07-02T15:31:03Z",
        "closed_at": "2023-07-06T16:53:41Z",
        "merged_at": "2023-07-06T16:53:41Z",
        "body": "In previous version when you change type of a user in `useState` or just pass wrong data in the context you wouldn't get a typescript error. In other words only context consumer uses `ContextType` but not producer, which is wrong bcs as I said when you change type of data in the producer(without changing ContexrType) => the consumer would still assume the old data is passed.\r\n\r\nThis commit adds better typescript support, so that when you change data passed into context you will get ts error if the data does not satisfy ContextType and you will be forced to update context related stuff everywhere where it is needed(bcs typescript will show you)",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 21,
        "changed_files": 3,
        "created_at": "2023-06-30T16:22:33Z",
        "closed_at": "2023-07-06T18:24:54Z",
        "merged_at": null,
        "body": "This PR reduces the number of internal states used in `useBlocker`\r\n\r\nI believe this solution works and brings less useEffects interactions with internal state.\r\n\r\nWith StrictMode we will continue to have 2 ids. But we will never have an orphan blocker. The first ID will be added and removed making the code more deterministic.\r\n\r\nFor the normal mode (no strict mode) the id generation only works once and the effect makes always the same action (adding and removing on unmount).\r\n\r\nI believe this simplifies the solution.\r\n",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 87,
        "deletions": 8,
        "changed_files": 5,
        "created_at": "2023-06-30T15:27:19Z",
        "closed_at": "2023-06-30T17:34:54Z",
        "merged_at": "2023-06-30T17:34:54Z",
        "body": "Our approach for clearing blockers after a successful navigation was incorrect for blockers that were reused in a layout route.\r\n\r\nCloses #10649 ",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 459,
        "deletions": 12,
        "changed_files": 4,
        "created_at": "2023-06-29T14:51:25Z",
        "closed_at": "2023-06-29T20:45:24Z",
        "merged_at": null,
        "body": "- Fix the infinite loop present in useBlocker.\r\n- Introduces some unit tests to find if the hook breaks the basic functionalities\r\n\r\nI believe that will fix remix issue introduced by react-router -> https://github.com/remix-run/remix/issues/6704\r\n\r\nFeedback always welcome\r\n(hope the .changeset is correct \ud83d\ude15 \ud83d\ude03)\r\n\r\nCheers",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2023-06-26T17:35:51Z",
        "closed_at": "2023-07-07T14:14:14Z",
        "merged_at": null,
        "body": "closes #10641 ",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 15,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2023-06-23T18:26:39Z",
        "closed_at": "2023-06-30T17:41:10Z",
        "merged_at": "2023-06-30T17:41:10Z",
        "body": "Closes #10475",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 126,
        "deletions": 7,
        "changed_files": 6,
        "created_at": "2023-06-23T15:18:22Z",
        "closed_at": "2023-06-30T17:44:17Z",
        "merged_at": "2023-06-30T17:44:17Z",
        "body": "Same fix from https://github.com/remix-run/remix/pull/6675",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 80,
        "deletions": 2,
        "changed_files": 4,
        "created_at": "2023-06-22T21:29:00Z",
        "closed_at": "2023-07-11T18:58:22Z",
        "merged_at": null,
        "body": "From my reading of the spec, we _need_ to add a `Content-Length` header.  We _can_ add the HTML body but don't have to.  I can easily be talked out of including the body in favor of just `Content-Length: 0`\r\n\r\nRead through this thread for background which talks about the different specs wording over time: https://github.com/traefik/traefik/issues/4456\r\n\r\nCloses https://github.com/remix-run/remix/issues/5595",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 100,
        "deletions": 17,
        "changed_files": 7,
        "created_at": "2023-06-22T18:30:36Z",
        "closed_at": "2023-06-30T20:25:27Z",
        "merged_at": "2023-06-30T20:25:27Z",
        "body": "This should have been in all along\r\n\r\nCloses #10629 ",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 100,
        "deletions": 26,
        "changed_files": 4,
        "created_at": "2023-06-20T21:41:53Z",
        "closed_at": "2023-06-21T14:02:31Z",
        "merged_at": "2023-06-21T14:02:31Z",
        "body": "If an initial `fetcher.load` is interrupted by a navigation, we should not try to call `shouldRevalidate` for the interrupted fetcher since it still performing the initial load and therefore it's not a revalidation.  This is specifically crucial in Remix apps where the \"load\" also encompasses loading the JS route module, so until the first one completes we don't even have a `shouldRevalidate` implementation to call.\r\n\r\nAlso ensures we properly abort in-progress `fetcher.load` calls that are re-loaded in this manner.\r\n\r\nCloses #10473 ",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 34,
        "deletions": 2,
        "changed_files": 4,
        "created_at": "2023-06-16T23:04:39Z",
        "closed_at": "2023-07-13T15:22:29Z",
        "merged_at": "2023-07-13T15:22:29Z",
        "body": "See #10618\r\n\r\nThis implements the fix proposed here: https://github.com/remix-run/react-router/issues/10618#issuecomment-1595399210",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-06-16T22:53:58Z",
        "closed_at": "2023-06-18T05:16:21Z",
        "merged_at": "2023-06-18T05:16:21Z",
        "body": "I think the intention here is `history.pushState`",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2023-06-15T18:24:18Z",
        "closed_at": "2023-06-16T17:23:35Z",
        "merged_at": "2023-06-16T17:23:35Z",
        "body": null,
        "comments": 4
    },
    {
        "merged": true,
        "additions": 682,
        "deletions": 277,
        "changed_files": 12,
        "created_at": "2023-06-13T14:15:50Z",
        "closed_at": "2023-06-13T18:39:00Z",
        "merged_at": "2023-06-13T18:39:00Z",
        "body": "Closes #10579 (second half)",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1929,
        "deletions": 1562,
        "changed_files": 5,
        "created_at": "2023-06-12T18:44:38Z",
        "closed_at": "2023-08-09T14:57:13Z",
        "merged_at": "2023-08-09T14:57:13Z",
        "body": "Updated all dependencies to latest minor version",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 43,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-06-10T00:56:17Z",
        "closed_at": "2023-06-15T14:27:09Z",
        "merged_at": "2023-06-15T14:27:09Z",
        "body": "This way we don't need to do #10582 manually anymore\r\n\r\nThanks to @mcansh for the idea (https://github.com/remix-run/remix/pull/6109 & https://github.com/remix-run/examples/pull/248)! \ud83d\ude4f",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 37,
        "deletions": 280,
        "changed_files": 1,
        "created_at": "2023-06-10T00:50:21Z",
        "closed_at": "2023-06-12T14:18:04Z",
        "merged_at": "2023-06-12T14:18:04Z",
        "body": "Did this by running `npx yarn-deduplicate && rm -rf ./node_modules && yarn` (just like I did in https://github.com/remix-run/remix/pull/6108 & https://github.com/remix-run/examples/pull/247)\r\n\r\n- https://github.com/scinos/yarn-deduplicate\r\n- https://npm.im/yarn-deduplicate",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 5,
        "changed_files": 3,
        "created_at": "2023-06-09T23:02:26Z",
        "closed_at": "2023-06-12T14:16:54Z",
        "merged_at": "2023-06-12T14:16:54Z",
        "body": "This gives us the latest dom types, along with other goodies",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 140,
        "deletions": 33,
        "changed_files": 7,
        "created_at": "2023-06-08T12:16:38Z",
        "closed_at": "2023-06-09T14:19:22Z",
        "merged_at": "2023-06-09T14:19:22Z",
        "body": "Fix issues with internal blocker `key` generation in `StrictMode`\r\n\r\nCloses #10073\r\nCloses #10144\r\n\r\nAlso strips the `basename` (if present) from the `currentLocation`/`nextLocation` we expose out to the user to match `useLocation` behavior.  This was discovered as part of https://github.com/remix-run/react-router/pull/10550#issuecomment-1574091175",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 26,
        "deletions": 10,
        "changed_files": 3,
        "created_at": "2023-06-07T14:41:13Z",
        "closed_at": "2023-06-08T12:59:37Z",
        "merged_at": "2023-06-08T12:59:37Z",
        "body": "I'm not quite sure why the current feature detection approach wasn't sufficient \ud83d\ude15 .  It works fine in `vite` but apparently has issues in `webpack`.  the react team doesn't do anything funny like this in their [`useSyncExternalStore` shim package](https://github.com/facebook/react/blob/main/packages/use-sync-external-store/src/useSyncExternalStoreShim.js#L13) and I can't imagine that has issues on `webpack` and React 17.\r\n\r\nEither way, moving to a constant seems to fix the webpack compilation issue.\r\n\r\nCloses #10566",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-06-04T11:19:06Z",
        "closed_at": "2023-06-04T20:11:27Z",
        "merged_at": null,
        "body": "@esbuild/linux-x64 package missing when launching vite",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-06-02T18:07:17Z",
        "closed_at": "2023-06-03T02:41:33Z",
        "merged_at": "2023-06-03T02:41:32Z",
        "body": "The link to history.block documentation was pointing to v5 of the history package, the version used in react-router v5 is v4",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 156,
        "deletions": 15,
        "changed_files": 6,
        "created_at": "2023-06-01T15:49:29Z",
        "closed_at": "2023-06-06T20:23:23Z",
        "merged_at": "2023-06-06T20:23:23Z",
        "body": "Fixes issue raised in https://github.com/remix-run/react-router/discussions/9565#discussioncomment-6053841\r\n\r\nWe were calling `getKey` inconsistently.  From the `usePageHide` hook it was the `useLocation` value (not including `basename`) but from inside the router it was the `router.state.location` (including `basename`).  Now it's always the user-land version without the `basename`",
        "comments": 11
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-05-31T21:18:33Z",
        "closed_at": "2023-06-01T13:40:41Z",
        "merged_at": "2023-06-01T13:40:41Z",
        "body": "[Synchronizing URLs to Form State](https://reactrouter.com/en/main/start/tutorial#synchronizing-urls-to-form-state) section  could be updated specifically in a place where `If you're still concerned, expand this to see what it would look like` remark is mentioned. The suggested solution is missing a small detail that would help to get rid of existing **Warning: `value` prop on `input` should not be null. Consider using an empty string to clear the component or `undefined` for uncontrolled components.**",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-05-27T13:27:44Z",
        "closed_at": "2023-05-27T14:29:29Z",
        "merged_at": "2023-05-27T14:29:29Z",
        "body": null,
        "comments": 3
    },
    {
        "merged": true,
        "additions": 92,
        "deletions": 13,
        "changed_files": 3,
        "created_at": "2023-05-26T20:02:30Z",
        "closed_at": "2023-06-01T20:02:31Z",
        "merged_at": "2023-06-01T20:02:31Z",
        "body": "Do not abort revalidations if the submitting fetcher is deleted right after it's action completes\r\n\r\nCloses https://github.com/remix-run/remix/issues/6458",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 54,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2023-05-22T15:32:03Z",
        "closed_at": "2023-05-23T14:33:18Z",
        "merged_at": "2023-05-23T14:33:18Z",
        "body": "Closes #10512 ",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 106,
        "deletions": 112,
        "changed_files": 61,
        "created_at": "2023-05-22T14:41:01Z",
        "closed_at": "2023-05-22T16:05:33Z",
        "merged_at": "2023-05-22T16:05:33Z",
        "body": "Update `examples/` to use `\"jsx\": \"react-jsx\"` in `tsconfig.json` to avoid needing `import * as React from 'react'` in JSX files.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 12,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2023-05-17T11:34:36Z",
        "closed_at": "2023-05-17T15:28:45Z",
        "merged_at": null,
        "body": "hi\r\n\r\ni have electron app and i use ReactRouterDom and MemoryRouter to manager navigation in app\r\n\r\nmy problem is that i have backward and forward buttons in my app exactly like the buttons in the browser, i can use navigate(-1) and navigate(1) functions to make them work, but i didn't find anyway to know when to disable them, i searched source code of this library to find a way to do that but as i see it is impossible without source change.\r\nso i made this commit and Pull Request to fix that.\r\n\r\nany way the memory history should not be restricted like other history implementations, if there is reason that someone used memory history instead of other history implementations it's that.\r\n\r\nsorry for bad English.",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 64,
        "deletions": 5,
        "changed_files": 3,
        "created_at": "2023-05-15T14:14:31Z",
        "closed_at": "2023-05-16T13:19:45Z",
        "merged_at": "2023-05-16T13:19:45Z",
        "body": "On initial load if we have loaders to run and we call `startNavigation`, `state.location` and `location` are the same so if we have a hash we don't want to incorrectly decide it's a hash-change-only navigation.  So only short circuit once the router has been initialized.\r\n\r\nCloses #10469 ",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 194,
        "deletions": 5,
        "changed_files": 3,
        "created_at": "2023-05-15T14:04:08Z",
        "closed_at": "2023-05-16T13:18:48Z",
        "merged_at": "2023-05-16T13:18:47Z",
        "body": "* In `BrowserRouter`, `useNavigateUnstable` will handle resolving the relative path and prepending the basename\r\n* In `RouterProvider`, the `router.navigate` will handle resolving relative paths and prepending the basename\r\n\r\nHowever, If you use `RouterProvider` and include some descendant `<Routes>` inside the tree, then that needs to use `useNavigateUnstable` to resolve relative paths but it _should not_ also prepend the basename since navigation will still go through `router.navigate`\r\n\r\nCloses #10467 ",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2023-05-12T15:23:38Z",
        "closed_at": "2023-05-26T15:50:15Z",
        "merged_at": null,
        "body": "The previous version forbids passing `undefined` values, also casting to `any` is a bad practice. ",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-05-12T00:34:07Z",
        "closed_at": "2023-05-12T14:37:06Z",
        "merged_at": "2023-05-12T14:37:06Z",
        "body": "Changed \"NavLinks's\" to \"NavLink's\" to correct a grammatical mistake and improve the clarity of the sentence.\r\n\r\nThis change applies to the latest version of React Router. No potential issues or side effects are expected from this change.\r\n\r\nThanks for taking the time to review this pull request!\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-05-09T01:51:15Z",
        "closed_at": "2023-05-09T13:33:57Z",
        "merged_at": "2023-05-09T13:33:57Z",
        "body": "This commit fixes a grammatical error in the React Router documentation. The word \"an\" was added to the sentence that originally read \"you'll most likely want index route to fill the space when the user hasn't clicked one of the items yet.\"",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-05-06T10:53:05Z",
        "closed_at": "2023-05-06T15:43:11Z",
        "merged_at": "2023-05-06T15:43:11Z",
        "body": null,
        "comments": 3
    },
    {
        "merged": true,
        "additions": 900,
        "deletions": 774,
        "changed_files": 11,
        "created_at": "2023-05-05T19:15:34Z",
        "closed_at": "2023-05-25T17:31:43Z",
        "merged_at": "2023-05-25T17:31:43Z",
        "body": "This lets us remove a polyfill and some other hacks, and brings along some additional jsdom features which will facilitate testing fixes to submitter serialization (see #9865).\r\n\r\nNote:\r\n * jsdom is making it harder to stub things, so we inject a jest-friendly window into the router. I'm not a huge fan of DI when used solely for the sake of testing, but this seems less terrible than other approaches (e.g. patch-package-ing jsdom, or monkey-patching Object.defineProperty) \ud83d\ude43\r\n * We use a yarn resolution to get the latest jsdom, despite the latest jest pinning it at ^20.0.0. Per the maintainers, [this is fine](https://github.com/jestjs/jest/pull/13825#issuecomment-1531649217) as jest doesn't need any code changes to work with new jsdom, and there are no concrete plans yet to ship a new version.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 17,
        "deletions": 10,
        "changed_files": 3,
        "created_at": "2023-05-04T09:18:38Z",
        "closed_at": "2023-06-02T19:45:45Z",
        "merged_at": "2023-06-02T19:45:45Z",
        "body": "fix #10446 ",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2023-05-03T20:57:51Z",
        "closed_at": "2023-05-15T18:14:53Z",
        "merged_at": "2023-05-15T18:14:53Z",
        "body": "Closes #10212",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-05-03T15:02:22Z",
        "closed_at": "2023-05-04T16:31:50Z",
        "merged_at": null,
        "body": "Bumps [mcansh/release-comment-action](https://github.com/mcansh/release-comment-action) from 0.3.1 to 0.4.1.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/mcansh/release-comment-action/releases\">mcansh/release-comment-action's releases</a>.</em></p>\n<blockquote>\n<h2>v0.4.1</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>chore: only remove labels during stable releases by <a href=\"https://github.com/mcansh\"><code>@\u200bmcansh</code></a> in <a href=\"https://redirect.github.com/mcansh/release-comment-action/pull/9\">mcansh/release-comment-action#9</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/mcansh/release-comment-action/compare/v0.4.0...v0.4.1\">https://github.com/mcansh/release-comment-action/compare/v0.4.0...v0.4.1</a></p>\n<h2>v0.4.0</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>feat: add support for removing labels when commenting on things by <a href=\"https://github.com/mcansh\"><code>@\u200bmcansh</code></a> in <a href=\"https://redirect.github.com/mcansh/release-comment-action/pull/8\">mcansh/release-comment-action#8</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/mcansh/release-comment-action/compare/v0.3.1...v0.4.0\">https://github.com/mcansh/release-comment-action/compare/v0.3.1...v0.4.0</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/mcansh/release-comment-action/commit/e3cd5340dda8d6d6715cb4e88729acf257665e4a\"><code>e3cd534</code></a> 0.4.1</li>\n<li><a href=\"https://github.com/mcansh/release-comment-action/commit/22aa1ff2029db01c7afef96c0cadd07566d42694\"><code>22aa1ff</code></a> chore: only remove labels during stable releases (<a href=\"https://redirect.github.com/mcansh/release-comment-action/issues/9\">#9</a>)</li>\n<li><a href=\"https://github.com/mcansh/release-comment-action/commit/c32b1942b5e9e482c9d9d1acd42395c690a3ea88\"><code>c32b194</code></a> 0.4.0</li>\n<li><a href=\"https://github.com/mcansh/release-comment-action/commit/9bce5bb4f1c94a9ad568f16f4b3e15f50de5422d\"><code>9bce5bb</code></a> feat: add support for removing labels when commenting on things (<a href=\"https://redirect.github.com/mcansh/release-comment-action/issues/8\">#8</a>)</li>\n<li><a href=\"https://github.com/mcansh/release-comment-action/commit/95d99ddf6d6520b3f31de8c91a62e1b33f4feb5a\"><code>95d99dd</code></a> chore(deps): bump to latest</li>\n<li><a href=\"https://github.com/mcansh/release-comment-action/commit/b9727c233a2c9645c3d909cf601cfa514dfd9c3d\"><code>b9727c2</code></a> chore(deps): bump to latest</li>\n<li><a href=\"https://github.com/mcansh/release-comment-action/commit/873f3ac8252c2c2d24e5301b54cfa08b6dc05adc\"><code>873f3ac</code></a> build: update</li>\n<li><a href=\"https://github.com/mcansh/release-comment-action/commit/6945c0a2f9e256b0a884c1e96da0781f09b84184\"><code>6945c0a</code></a> chore: always log</li>\n<li>See full diff in <a href=\"https://github.com/mcansh/release-comment-action/compare/v0.3.1...v0.4.1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=mcansh/release-comment-action&package-manager=github_actions&previous-version=0.3.1&new-version=0.4.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 467,
        "deletions": 19,
        "changed_files": 7,
        "created_at": "2023-05-02T22:04:46Z",
        "closed_at": "2023-05-17T20:13:44Z",
        "merged_at": "2023-05-17T20:13:44Z",
        "body": "Closes https://github.com/remix-run/remix/issues/5763",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 21,
        "deletions": 9,
        "changed_files": 3,
        "created_at": "2023-05-02T21:56:41Z",
        "closed_at": "2023-05-03T11:37:50Z",
        "merged_at": "2023-05-03T11:37:50Z",
        "body": null,
        "comments": 3
    },
    {
        "merged": true,
        "additions": 392,
        "deletions": 12,
        "changed_files": 4,
        "created_at": "2023-05-02T18:26:56Z",
        "closed_at": "2023-05-02T20:44:53Z",
        "merged_at": "2023-05-02T20:44:52Z",
        "body": "Closes #10417",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 35,
        "deletions": 1,
        "changed_files": 4,
        "created_at": "2023-05-02T15:43:25Z",
        "closed_at": "2023-05-02T16:45:59Z",
        "merged_at": "2023-05-02T16:45:59Z",
        "body": "Closes #10416 ",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 30,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2023-05-02T15:27:33Z",
        "closed_at": "2023-05-02T16:47:14Z",
        "merged_at": "2023-05-02T16:47:14Z",
        "body": "Closes #10431",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 188,
        "deletions": 4,
        "changed_files": 4,
        "created_at": "2023-05-02T14:54:44Z",
        "closed_at": "2023-05-02T16:47:25Z",
        "merged_at": "2023-05-02T16:47:25Z",
        "body": "Closes #10430 ",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 46,
        "deletions": 2,
        "changed_files": 5,
        "created_at": "2023-05-01T22:15:27Z",
        "closed_at": "2023-05-23T14:32:10Z",
        "merged_at": "2023-05-23T14:32:10Z",
        "body": "Close #8665",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 37,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2023-05-01T21:58:47Z",
        "closed_at": "2023-05-24T17:59:56Z",
        "merged_at": null,
        "body": "Closes #8492",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 18,
        "changed_files": 1,
        "created_at": "2023-04-30T18:40:38Z",
        "closed_at": "2023-04-30T19:44:30Z",
        "merged_at": "2023-04-30T19:44:29Z",
        "body": "Reverts remix-run/react-router#10355",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1811,
        "deletions": 384,
        "changed_files": 21,
        "created_at": "2023-04-28T14:33:31Z",
        "closed_at": "2023-06-08T16:27:35Z",
        "merged_at": "2023-06-08T16:27:35Z",
        "body": "Updated approach for https://github.com/remix-run/react-router/discussions/10324\r\n\r\nNote: inline fetcher `loader`/`action` support was removed and this is trimmed to just add json/text `encType` support.  We need to figure out how react form actions impact the submit/fetcher API in this and Remix.\r\n\r\n**TODO:**\r\n* [x] Remove inline action support on `useSubmit` (only allowed on `fetcher.submit`)\r\n* [x] Ensure `encType` is limited to browser behavior on `<Form>`/`<fetcher.Form>`\r\n* [x] Update docs to reflect latest APIs",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-04-27T11:26:02Z",
        "closed_at": "2023-04-27T15:49:03Z",
        "merged_at": "2023-04-27T15:49:03Z",
        "body": "Fixed some validations in the useFetcher docs example",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2023-04-26T17:28:23Z",
        "closed_at": "2023-04-27T19:40:47Z",
        "merged_at": "2023-04-27T19:40:47Z",
        "body": "Avoids unsubscribing/subscribing every time `state` changes",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 12,
        "changed_files": 3,
        "created_at": "2023-04-26T02:58:38Z",
        "closed_at": "2023-04-26T17:05:56Z",
        "merged_at": "2023-04-26T17:05:56Z",
        "body": "- https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#concurrency\r\n- https://github.blog/changelog/2021-04-19-github-actions-limit-workflow-run-or-job-concurrency\r\n- > The fully-formed ref of the branch or tag that triggered the workflow run. For workflows triggered by `push`, this is the branch or tag ref that was pushed. For workflows triggered by `pull_request`, this is the pull request merge branch. For workflows triggered by `release`, this is the release tag created. For other triggers, this is the branch or tag ref that triggered the workflow run. This is only set if a branch or tag is available for the event type. The ref given is fully-formed, meaning that for branches the format is `refs/heads/<branch_name>`, for pull requests it is `refs/pull/<pr_number>/merge`, and for tags it is `refs/tags/<tag_name>`. For example, `refs/heads/feature-branch-1`.\r\n  \r\n  https://docs.github.com/en/actions/learn-github-actions/contexts#github-context",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 244,
        "deletions": 8,
        "changed_files": 4,
        "created_at": "2023-04-25T14:09:34Z",
        "closed_at": "2023-04-25T18:17:28Z",
        "merged_at": "2023-04-25T18:17:28Z",
        "body": "Continuation of #8929\r\nCloses #8809",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 2476,
        "deletions": 203,
        "changed_files": 14,
        "created_at": "2023-04-24T20:18:00Z",
        "closed_at": "2023-06-07T15:41:35Z",
        "merged_at": null,
        "body": "Now that https://github.com/remix-run/react-router/discussions/10324 is handled, we can support `useSubmit` (and therefore `useFetcher`) in `react-router` since those are no longer coupled to `DOM`/`<form>`/`FormData` availability.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 7,
        "changed_files": 2,
        "created_at": "2023-04-24T15:16:20Z",
        "closed_at": "2023-04-24T19:55:49Z",
        "merged_at": "2023-04-24T19:55:49Z",
        "body": "Quick follow up to https://github.com/remix-run/react-router/pull/10374 to avoid relying on implicit detection of being inside a `RouterProvider` and move to an explicit param passed to a new internal `useRoutesImpl` hook.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-04-22T03:20:30Z",
        "closed_at": "2023-04-22T15:14:42Z",
        "merged_at": null,
        "body": "This feature was originally available here [https://github.com/remix-run/history/blob/v4.10.0/modules/createHashHistory.js#L171-L174](https://github.com/remix-run/history/blob/v4.10.0/modules/createHashHistory.js#L171-L174), and it's very useful.\r\n\r\n\r\nhttps://user-images.githubusercontent.com/3096013/233759229-adc80e72-5f77-4d06-9927-6c56a7aaf2b4.mp4\r\n\r\n![hash](https://user-images.githubusercontent.com/3096013/233759231-eb5fc2b7-0f28-4512-b3b7-f047a205a64d.gif)\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-04-21T00:18:44Z",
        "closed_at": "2023-04-21T14:21:43Z",
        "merged_at": "2023-04-21T14:21:43Z",
        "body": "The link directs to content that is out-of-date. Fixed!\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 38,
        "deletions": 250,
        "changed_files": 8,
        "created_at": "2023-04-20T20:43:00Z",
        "closed_at": "2023-04-21T20:38:31Z",
        "merged_at": "2023-04-21T20:38:31Z",
        "body": "**Sibling Remix PR:** https://github.com/remix-run/remix/pull/6121\r\n\r\nSeems `useSyncExternalStore` wasn't the right solution all along, since it can cause updates to occur in unexpected orders.  A minimal reproduction of the underlying issue is here: https://codesandbox.io/s/use-sync-external-store-loop-9g7b81\r\n\r\nBut basically when using `useSyncExternalStore` to sync some external `state` (as we were doing to sync the `@remix-run/router` state), the following does not work as one would expect.  The `externalStore.increment()` causes `state` to update and re-run the effect _prior_ to `shouldIncrement=false` being flushed, so we end up in an infinite loop.\r\n\r\n```js\r\nReact.useEffect(() => {\r\n  if (shouldIncrement) {\r\n    setShouldIncrement(false);\r\n    externalStore.increment();\r\n  }\r\n}, [state, shouldIncrement]);\r\n```\r\n\r\n@jacob-ebey and I's hunch is that these \"sync\" updates are flushed synchronously and thus they go ahead of normal `useState` updates that run asynchronously in concurrent mode.\r\n\r\nThis is resolved by using local react state to \"sync\" the external state:\r\n\r\n```\r\nlet [state, setState] = React.useState(\r\n  externalStore.getState.bind(externalStore)\r\n);\r\nReact.useEffect(() => {\r\n  return externalStore.subscribe((newState) => {\r\n    if (newState !== state) {\r\n      setState(newState);\r\n    }\r\n  });\r\n}, [state]);\r\n```\r\n\r\nThis seems to be the recommendation in the react [docs](https://react.dev/reference/react/useSyncExternalStore#subscribing-to-an-external-store) as well:\r\n\r\n<img width=\"851\" alt=\"Screenshot 2023-04-20 at 4 36 01 PM\" src=\"https://user-images.githubusercontent.com/1609022/233482007-b84ed6ca-c2c9-4406-bbf4-3dfa12c974bd.png\">\r\n\r\nCloses: https://github.com/remix-run/remix/issues/6072",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 283,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2023-04-20T18:06:46Z",
        "closed_at": "2023-05-16T14:49:58Z",
        "merged_at": "2023-05-16T14:49:58Z",
        "body": "I've seen a lot of confusion recently around the compatibility of `<Routes>` and `<RouterProvider>` so I wanted to start u pa new doc where we could clearly explain how we envision apps migrating.\r\n\r\nRelated issues/discussions:\r\n* https://github.com/remix-run/react-router/issues/10021\r\n* https://github.com/remix-run/react-router/issues/10317\r\n* https://github.com/remix-run/react-router/discussions/10373",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 96,
        "deletions": 23,
        "changed_files": 6,
        "created_at": "2023-04-20T16:46:19Z",
        "closed_at": "2023-04-21T20:27:41Z",
        "merged_at": "2023-04-21T20:27:41Z",
        "body": "Fix descendant `<Routes>` rendering inside a `RouterProvider` when data routes errors exist\r\n\r\nCloses #10317 ",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-04-20T03:14:14Z",
        "closed_at": "2023-04-20T16:51:38Z",
        "merged_at": null,
        "body": "Routes are incompatible with data api routers, but the current info block doesn't get that point across well enough, making it unclear that you'll need to add an `errorElement` to each root Route at the top of a Routes\r\n\r\nIt will be even better when we can link to the data api router replacement for this form of nested routing!",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 156,
        "deletions": 148,
        "changed_files": 5,
        "created_at": "2023-04-18T19:54:38Z",
        "closed_at": "2023-04-21T20:19:49Z",
        "merged_at": "2023-04-21T20:19:49Z",
        "body": "Closes #9713",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-04-18T19:02:28Z",
        "closed_at": "2023-04-19T21:56:32Z",
        "merged_at": "2023-04-19T21:56:32Z",
        "body": "See https://github.com/remix-run/remix/pull/6089",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 45,
        "deletions": 11,
        "changed_files": 3,
        "created_at": "2023-04-18T19:01:53Z",
        "closed_at": "2023-04-21T20:18:06Z",
        "merged_at": "2023-04-21T20:18:06Z",
        "body": "Closes https://github.com/remix-run/remix/issues/5440\r\n\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-04-18T10:36:29Z",
        "closed_at": "2023-04-19T18:36:46Z",
        "merged_at": null,
        "body": "resolve https://github.com/remix-run/remix/issues/6072",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 816,
        "deletions": 71,
        "changed_files": 10,
        "created_at": "2023-04-17T20:11:17Z",
        "closed_at": "2023-04-21T19:16:35Z",
        "merged_at": "2023-04-21T19:16:35Z",
        "body": "~~Depends on #10342~~ \r\n\r\n* Closes the second half of #10324 where you can provide an action directly to `submit`/`fetcher.submit`\r\n* Also adds support for a direct `loader` passed to `fetcher.load`\r\n\r\nSee the changesets for examples.\r\n\r\nRight now, the inferred typings aren't in this PR since we were running into some issues with them and may fork them to a new PR.  WIP is in the `brophdawg11/direct-action-types` branch.\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 18,
        "deletions": 11,
        "changed_files": 1,
        "created_at": "2023-04-16T19:06:25Z",
        "closed_at": "2023-04-17T19:11:41Z",
        "merged_at": "2023-04-17T19:11:41Z",
        "body": "This will notify people before the PR/issue is actually closed as it now often happens by surprise when people are assuming everything is already fine",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-04-16T15:21:05Z",
        "closed_at": "2023-04-17T07:40:15Z",
        "merged_at": null,
        "body": "Add description for index query param",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-04-14T16:38:41Z",
        "closed_at": "2023-04-15T18:27:46Z",
        "merged_at": "2023-04-15T18:27:46Z",
        "body": "Fixes a link that currently 404s on the `<Routes>` component page.\r\n- From: https://reactrouter.com/en/main/hook/location (404s)\r\n- To: https://reactrouter.com/en/main/hooks/use-location",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 170,
        "deletions": 10,
        "changed_files": 3,
        "created_at": "2023-04-14T16:16:58Z",
        "closed_at": "2023-04-14T19:05:55Z",
        "merged_at": "2023-04-14T19:05:55Z",
        "body": "Add a proper 404 `ErrorResponse` for a `fetcher.load` to a route without a loader, instead of a raw `Error`",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 47,
        "deletions": 37,
        "changed_files": 4,
        "created_at": "2023-04-14T14:27:08Z",
        "closed_at": "2023-04-14T16:25:27Z",
        "merged_at": "2023-04-14T16:25:27Z",
        "body": "- Fetchers no longer revalidate on search param changes or when routing to the same URL\r\n- Also fixed a semi-related bug where fetcher.load redirects wouldn't be marked as done on the completion of the redirect",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1113,
        "deletions": 140,
        "changed_files": 14,
        "created_at": "2023-04-13T20:31:49Z",
        "closed_at": "2023-04-21T18:54:02Z",
        "merged_at": "2023-04-21T18:54:02Z",
        "body": "~~Depends on #10336~~\r\n\r\nCloses part of #10324 (does not yet handle call-site/override actions - that will be a separate PR):\r\n\r\n* Adds support for `useSubmit()(obj, { encType: null })` to opt out of serialization for raw payloads.  These are then passed to the `action` via the `payload` parameter.  Same goes for `fetcher.submit`.\r\n* Add support for opt-in serialization of payloads for `encType:application/json` and `encType:text/plain`\r\n\r\nSee the changesets for examples.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-04-12T18:38:47Z",
        "closed_at": "2023-04-13T15:31:45Z",
        "merged_at": "2023-04-13T15:31:45Z",
        "body": "I see this is documented above, but I didn't realize it was an option until I was reading the source and saw it in the type of the props",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2572,
        "deletions": 146,
        "changed_files": 19,
        "created_at": "2023-04-12T17:09:27Z",
        "closed_at": "2023-04-14T19:08:25Z",
        "merged_at": "2023-04-14T19:08:25Z",
        "body": "This work closes a handful of things:\r\n* Stabilizes `useNavigate` across `location` changes: https://github.com/remix-run/react-router/issues/7634#issuecomment-1306650156\r\n* Stabilizes `useSubmit` and `fetcher.submit` across location changes: https://github.com/remix-run/react-router/issues/9739\r\n  * Forked off from https://github.com/remix-run/react-router/discussions/9737\r\n* It does this by moving the relative routing logic into `@remix-run/router` (when using a `RouterProvider`): https://github.com/remix-run/react-router/discussions/9588\r\n* We also get `basename` handling for fetchers with this: https://github.com/remix-run/react-router/issues/9711",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-04-06T19:51:34Z",
        "closed_at": "2023-04-10T20:58:57Z",
        "merged_at": null,
        "body": "This explicitly sets the scroll behaviour to \"instant\" so that CSS (`scroll-behavior: smooth` on the `html` tag) does not affect the call (the current behaviour jumps around when switching page in a non-intuitive way).\r\n\r\nThis could be made configurable, but I can't think of any reason why somebody would _want_ it to use smooth scrolling.\r\n\r\nWorth noting that this version of the `scrollTo` API is not supported by IE. I'm not sure if this project is still trying to support IE ([seems not](https://github.com/remix-run/react-router/commit/f6df0697e1b2064a2b3a12e8b39577326fdd945b)), but if so, it will be necessary to do some [feature detection](https://stackoverflow.com/a/55221484/1180785) to fall-back to the old API.\r\n\r\nI've marked the changeset as \"minor\" since this is effectively a new feature (but maybe you would consider it a bugfix?)\r\n\r\nI didn't add or amend any unit tests as this functionality does not currently appear to be tested?",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-04-06T00:04:21Z",
        "closed_at": "2023-04-07T14:32:53Z",
        "merged_at": "2023-04-07T14:32:53Z",
        "body": "restored the line since despite #8991 got merged into main, 854f4a41780089ad114fecef1a25111830f5cc0b was nowhere to be seen in commit history.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-04-05T10:37:33Z",
        "closed_at": "2023-04-05T13:59:06Z",
        "merged_at": "2023-04-05T13:59:06Z",
        "body": "The word `code` is missing",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-04-05T09:15:20Z",
        "closed_at": "2023-04-05T13:58:41Z",
        "merged_at": null,
        "body": "add searchParams.get",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-04-01T20:24:13Z",
        "closed_at": "2023-04-01T21:30:44Z",
        "merged_at": "2023-04-01T21:30:44Z",
        "body": "Changed the link to Route object instead of Route APIs\r\n\r\nThe link is used here:\r\n`\r\nroutes\r\nAn array of [Route][route] objects with nested routes on the children property.\r\n`",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-03-31T23:08:40Z",
        "closed_at": "2023-04-01T21:30:23Z",
        "merged_at": "2023-04-01T21:30:23Z",
        "body": "This fixes the markdown for the Current Future Flags table",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 162,
        "deletions": 82,
        "changed_files": 13,
        "created_at": "2023-03-29T21:08:58Z",
        "closed_at": "2023-04-11T14:52:48Z",
        "merged_at": "2023-04-11T14:52:48Z",
        "body": "Closes #10283 ",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 33,
        "deletions": 15,
        "changed_files": 4,
        "created_at": "2023-03-29T20:49:32Z",
        "closed_at": "2023-04-10T15:23:51Z",
        "merged_at": "2023-04-10T15:23:51Z",
        "body": "Closes #10282 ",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-03-29T15:03:21Z",
        "closed_at": "2023-03-29T16:32:37Z",
        "merged_at": "2023-03-29T16:32:37Z",
        "body": "Bumps [mcansh/release-comment-action](https://github.com/mcansh/release-comment-action) from 0.2.0 to 0.3.1.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/mcansh/release-comment-action/releases\">mcansh/release-comment-action's releases</a>.</em></p>\n<blockquote>\n<h2>v0.3.1</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>fix: filter out blanks by <a href=\"https://github.com/mcansh\"><code>@\u200bmcansh</code></a> in <a href=\"https://redirect.github.com/mcansh/release-comment-action/pull/6\">mcansh/release-comment-action#6</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/mcansh/release-comment-action/compare/v0.3.0...v0.3.1\">https://github.com/mcansh/release-comment-action/compare/v0.3.0...v0.3.1</a></p>\n<h2>v0.3.0</h2>\n<h2>BREAKING CHANGES</h2>\n<ul>\n<li>renamed <code>PACKAGE_VERSION_TO_FOLLOW</code> to <code>PACKAGE_NAME</code></li>\n</ul>\n<h2>What's Changed</h2>\n<ul>\n<li>feat: make including nightly releases optional when &quot;following&quot; a package by <a href=\"https://github.com/mcansh\"><code>@\u200bmcansh</code></a> in <a href=\"https://redirect.github.com/mcansh/release-comment-action/pull/5\">mcansh/release-comment-action#5</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/mcansh/release-comment-action/compare/0.2.0...v0.3.0\">https://github.com/mcansh/release-comment-action/compare/0.2.0...v0.3.0</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/mcansh/release-comment-action/commit/09bef3ca172595581b579d0262beabb1cfeaf759\"><code>09bef3c</code></a> 0.3.1</li>\n<li><a href=\"https://github.com/mcansh/release-comment-action/commit/b33fcb1031a4fa4e06e36ea1ac4b7a15446cc29d\"><code>b33fcb1</code></a> fix: filter out blanks (<a href=\"https://redirect.github.com/mcansh/release-comment-action/issues/6\">#6</a>)</li>\n<li><a href=\"https://github.com/mcansh/release-comment-action/commit/d46a4f10cfc6812c570d7a339e2b2a03c12f587c\"><code>d46a4f1</code></a> 0.3.0</li>\n<li><a href=\"https://github.com/mcansh/release-comment-action/commit/374ec36efd1205b8095b303a5d3c6e4788b41d37\"><code>374ec36</code></a> feat: make including nightly releases optional when &quot;following&quot; a package (<a href=\"https://redirect.github.com/mcansh/release-comment-action/issues/5\">#5</a>)</li>\n<li><a href=\"https://github.com/mcansh/release-comment-action/commit/462d0a202fa3b77185759c6f4d95c20b1d785874\"><code>462d0a2</code></a> chore: pnpm 8</li>\n<li><a href=\"https://github.com/mcansh/release-comment-action/commit/4680725aece04f23e0a15a44f950c97b8014033f\"><code>4680725</code></a> chore: add comment about setting process.env.GH_TOKEN</li>\n<li><a href=\"https://github.com/mcansh/release-comment-action/commit/ca5c487f50afca854c0ebf15eeaf7dc79c4dc1da\"><code>ca5c487</code></a> Update README.md</li>\n<li><a href=\"https://github.com/mcansh/release-comment-action/commit/79fd7899c813380866c2c211789290d75f8ccf49\"><code>79fd789</code></a> chore: add branding</li>\n<li><a href=\"https://github.com/mcansh/release-comment-action/commit/6764db73ad0be0d0683f826f356af3cca3ae3268\"><code>6764db7</code></a> chore: add initial readme</li>\n<li><a href=\"https://github.com/mcansh/release-comment-action/commit/c53e18d16e856e8bed3defcde8d64feb82ed896a\"><code>c53e18d</code></a> ci: build on all branches and prs</li>\n<li>See full diff in <a href=\"https://github.com/mcansh/release-comment-action/compare/0.2.0...v0.3.1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=mcansh/release-comment-action&package-manager=github_actions&previous-version=0.2.0&new-version=0.3.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 9,
        "changed_files": 3,
        "created_at": "2023-03-29T07:19:36Z",
        "closed_at": "2023-03-29T09:52:52Z",
        "merged_at": null,
        "body": "in app.tsx ReactDOM.createRoot() expects to pass a document as an argument, and document.getElementById(\"root\") may return null.\r\n\r\nin main.tsx / createBrowserRouter([}) /  component => element\r\n\r\nstackblitz.com code now work  : )",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-03-27T22:00:55Z",
        "closed_at": "2023-03-28T16:04:17Z",
        "merged_at": "2023-03-28T16:04:17Z",
        "body": "These links work on github, but don't work correctly on https://www.npmjs.com/package/react-router",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 254,
        "deletions": 16,
        "changed_files": 4,
        "created_at": "2023-03-27T17:22:30Z",
        "closed_at": "2023-03-29T20:27:21Z",
        "merged_at": "2023-03-29T20:27:21Z",
        "body": "Fixes a bug where revalidating fetchers share an `AbortController` with the navigation that caused them to revalidate.  This introduces a two-way binding when we only want one-way.  If the navigation is aborted, then we want the revalidating fetcher to abort.  However, if the fetcher is aborted (via unmounting and deleting), it should not impact the navigation.\r\n\r\nCloses https://github.com/remix-run/remix/issues/5719",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-03-24T20:07:03Z",
        "closed_at": "2023-03-28T13:38:46Z",
        "merged_at": "2023-03-28T13:38:45Z",
        "body": "Closes #10239 ",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 68,
        "deletions": 55,
        "changed_files": 15,
        "created_at": "2023-03-24T19:18:25Z",
        "closed_at": "2023-03-24T20:42:13Z",
        "merged_at": null,
        "body": null,
        "comments": 4
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 1811,
        "changed_files": 11,
        "created_at": "2023-03-24T19:16:08Z",
        "closed_at": "2023-03-26T13:35:47Z",
        "merged_at": "2023-03-26T13:35:47Z",
        "body": "we now only hit github for the following things:\r\n- asking if a commit is a PR (this will return the PR so we get the number, title, and body which we use)\r\n- getting any linked issues\r\n- commenting on issues and PRs\r\n\r\nalso took now as an opportunity to break this out to a proper re-usable GitHub Action https://github.com/mcansh/release-comment-action\r\n\r\nan example run can be found in the test repo: https://github.com/mcansh/nightly-release-test/pull/180\r\n\r\nRemix PR for this -> https://github.com/remix-run/remix/pull/5831",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 85,
        "deletions": 79,
        "changed_files": 19,
        "created_at": "2023-03-24T13:50:39Z",
        "closed_at": "2023-03-24T15:24:14Z",
        "merged_at": null,
        "body": "This PR was opened by the [Changesets release](https://github.com/changesets/action) GitHub action. When you're ready to do a release, you can merge this and the packages will be published to npm automatically. If you're not ready to do a release yet, that's fine, whenever you add more changesets to release-next, this PR will be updated.\n\n\n# Releases\n## react-router@6.10.0\n\n### Minor Changes\n\n-   Added support for [**Future Flags**](https://reactrouter.com/en/main/guides/api-development-strategy) in React Router. The first flag being introduced is `future.v7_normalizeFormMethod` which will normalize the exposed `useNavigation()/useFetcher()` `formMethod` fields as uppercase HTTP methods to align with the `fetch()` behavior. ([#10207](https://github.com/remix-run/react-router/pull/10207))\n\n    -   When `future.v7_normalizeFormMethod === false` (default v6 behavior),\n        -   `useNavigation().formMethod` is lowercase\n        -   `useFetcher().formMethod` is lowercase\n    -   When `future.v7_normalizeFormMethod === true`:\n        -   `useNavigation().formMethod` is uppercase\n        -   `useFetcher().formMethod` is uppercase\n\n### Patch Changes\n\n-   Fix route ID generation when using Fragments in `createRoutesFromElements` ([#10193](https://github.com/remix-run/react-router/pull/10193))\n-   Updated dependencies:\n    -   `@remix-run/router@1.5.0`\n\n## react-router-dom@6.10.0\n\n### Minor Changes\n\n-   Added support for [**Future Flags**](https://reactrouter.com/en/main/guides/api-development-strategy) in React Router. The first flag being introduced is `future.v7_normalizeFormMethod` which will normalize the exposed `useNavigation()/useFetcher()` `formMethod` fields as uppercase HTTP methods to align with the `fetch()` behavior. ([#10207](https://github.com/remix-run/react-router/pull/10207))\n\n    -   When `future.v7_normalizeFormMethod === false` (default v6 behavior),\n        -   `useNavigation().formMethod` is lowercase\n        -   `useFetcher().formMethod` is lowercase\n    -   When `future.v7_normalizeFormMethod === true`:\n        -   `useNavigation().formMethod` is uppercase\n        -   `useFetcher().formMethod` is uppercase\n\n### Patch Changes\n\n-   Fix `createStaticHandler` to also check for `ErrorBoundary` on routes in addition to `errorElement` ([#10211](https://github.com/remix-run/react-router/pull/10211))\n-   Updated dependencies:\n    -   `@remix-run/router@1.5.0`\n    -   `react-router@6.10.0`\n\n## @remix-run/router@1.5.0\n\n### Minor Changes\n\n-   Added support for [**Future Flags**](https://reactrouter.com/en/main/guides/api-development-strategy) in React Router. The first flag being introduced is `future.v7_normalizeFormMethod` which will normalize the exposed `useNavigation()/useFetcher()` `formMethod` fields as uppercase HTTP methods to align with the `fetch()` behavior. ([#10207](https://github.com/remix-run/react-router/pull/10207))\n\n    -   When `future.v7_normalizeFormMethod === false` (default v6 behavior),\n        -   `useNavigation().formMethod` is lowercase\n        -   `useFetcher().formMethod` is lowercase\n    -   When `future.v7_normalizeFormMethod === true`:\n        -   `useNavigation().formMethod` is uppercase\n        -   `useFetcher().formMethod` is uppercase\n\n### Patch Changes\n\n-   Provide fetcher submission to `shouldRevalidate` if the fetcher action redirects ([#10208](https://github.com/remix-run/react-router/pull/10208))\n-   Properly handle `lazy()` errors during router initialization ([#10211](https://github.com/remix-run/react-router/pull/10211))\n-   Remove `instanceof` check for `DeferredData` to be resiliant to ESM/CJS boundaries in SSR bundling scenarios ([#10247](https://github.com/remix-run/react-router/pull/10247))\n-   Fix lint issue ([#10256](https://github.com/remix-run/react-router/pull/10256))\n-   Update to latest `@remix-run/web-fetch@4.3.3` ([#10216](https://github.com/remix-run/react-router/pull/10216))\n\n## react-router-dom-v5-compat@6.10.0\n\n### Patch Changes\n\n-   Updated dependencies:\n    -   `react-router@6.10.0`\n    -   `react-router-dom@6.10.0`\n\n## react-router-native@6.10.0\n\n### Patch Changes\n\n-   Updated dependencies:\n    -   `react-router@6.10.0`\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2023-03-23T20:23:22Z",
        "closed_at": "2023-03-24T13:49:50Z",
        "merged_at": "2023-03-24T13:49:50Z",
        "body": null,
        "comments": 3
    },
    {
        "merged": false,
        "additions": 84,
        "deletions": 74,
        "changed_files": 18,
        "created_at": "2023-03-23T19:18:45Z",
        "closed_at": "2023-03-23T20:21:04Z",
        "merged_at": null,
        "body": "This PR was opened by the [Changesets release](https://github.com/changesets/action) GitHub action. When you're ready to do a release, you can merge this and the packages will be published to npm automatically. If you're not ready to do a release yet, that's fine, whenever you add more changesets to release-next, this PR will be updated.\n\n\n# Releases\n## react-router@6.10.0\n\n### Minor Changes\n\n-   Added support for [**Future Flags**](https://reactrouter.com/en/main/guides/api-development-strategy) in React Router. The first flag being introduced is `future.v7_normalizeFormMethod` which will normalize the exposed `useNavigation()/useFetcher()` `formMethod` fields as uppercase HTTP methods to align with the `fetch()` behavior. ([#10207](https://github.com/remix-run/react-router/pull/10207))\n\n    -   When `future.v7_normalizeFormMethod === false` (default v6 behavior),\n        -   `useNavigation().formMethod` is lowercase\n        -   `useFetcher().formMethod` is lowercase\n    -   When `future.v7_normalizeFormMethod === true`:\n        -   `useNavigation().formMethod` is uppercase\n        -   `useFetcher().formMethod` is uppercase\n\n### Patch Changes\n\n-   Fix route ID generation when using Fragments in `createRoutesFromElements` ([#10193](https://github.com/remix-run/react-router/pull/10193))\n-   Updated dependencies:\n    -   `@remix-run/router@1.5.0`\n\n## react-router-dom@6.10.0\n\n### Minor Changes\n\n-   Added support for [**Future Flags**](https://reactrouter.com/en/main/guides/api-development-strategy) in React Router. The first flag being introduced is `future.v7_normalizeFormMethod` which will normalize the exposed `useNavigation()/useFetcher()` `formMethod` fields as uppercase HTTP methods to align with the `fetch()` behavior. ([#10207](https://github.com/remix-run/react-router/pull/10207))\n\n    -   When `future.v7_normalizeFormMethod === false` (default v6 behavior),\n        -   `useNavigation().formMethod` is lowercase\n        -   `useFetcher().formMethod` is lowercase\n    -   When `future.v7_normalizeFormMethod === true`:\n        -   `useNavigation().formMethod` is uppercase\n        -   `useFetcher().formMethod` is uppercase\n\n### Patch Changes\n\n-   Fix `createStaticHandler` to also check for `ErrorBoundary` on routes in addition to `errorElement` ([#10211](https://github.com/remix-run/react-router/pull/10211))\n-   Updated dependencies:\n    -   `@remix-run/router@1.5.0`\n    -   `react-router@6.10.0`\n\n## @remix-run/router@1.5.0\n\n### Minor Changes\n\n-   Added support for [**Future Flags**](https://reactrouter.com/en/main/guides/api-development-strategy) in React Router. The first flag being introduced is `future.v7_normalizeFormMethod` which will normalize the exposed `useNavigation()/useFetcher()` `formMethod` fields as uppercase HTTP methods to align with the `fetch()` behavior. ([#10207](https://github.com/remix-run/react-router/pull/10207))\n\n    -   When `future.v7_normalizeFormMethod === false` (default v6 behavior),\n        -   `useNavigation().formMethod` is lowercase\n        -   `useFetcher().formMethod` is lowercase\n    -   When `future.v7_normalizeFormMethod === true`:\n        -   `useNavigation().formMethod` is uppercase\n        -   `useFetcher().formMethod` is uppercase\n\n### Patch Changes\n\n-   Provide fetcher submission to `shouldRevalidate` if the fetcher action redirects ([#10208](https://github.com/remix-run/react-router/pull/10208))\n-   Properly handle `lazy()` errors during router initialization ([#10211](https://github.com/remix-run/react-router/pull/10211))\n-   Remove `instanceof` check for `DeferredData` to be resiliant to ESM/CJS boundaries in SSR bundling scenarios ([#10247](https://github.com/remix-run/react-router/pull/10247))\n-   Update to latest `@remix-run/web-fetch@4.3.3` ([#10216](https://github.com/remix-run/react-router/pull/10216))\n\n## react-router-dom-v5-compat@6.10.0\n\n### Patch Changes\n\n-   Updated dependencies:\n    -   `react-router@6.10.0`\n    -   `react-router-dom@6.10.0`\n\n## react-router-native@6.10.0\n\n### Patch Changes\n\n-   Updated dependencies:\n    -   `react-router@6.10.0`\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 548,
        "deletions": 27,
        "changed_files": 7,
        "created_at": "2023-03-23T18:28:56Z",
        "closed_at": "2023-03-29T19:34:18Z",
        "merged_at": "2023-03-29T19:34:17Z",
        "body": "Closes https://github.com/remix-run/react-router/issues/9825",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-03-23T15:14:03Z",
        "closed_at": "2023-03-23T17:06:32Z",
        "merged_at": "2023-03-23T17:06:32Z",
        "body": "Bumps [actions/stale](https://github.com/actions/stale) from 7 to 8.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/actions/stale/releases\">actions/stale's releases</a>.</em></p>\n<blockquote>\n<h2>v8.0.0</h2>\n<p>:warning: This version contains breaking changes :warning:</p>\n<h2>What's Changed</h2>\n<ul>\n<li>New option labels-to-remove-when-stale enables users to specify list of coma delimited labels that will be removed when the issue or PR becomes stale by <a href=\"https://github.com/panticmilos\"><code>@\u200bpanticmilos</code></a> <a href=\"https://redirect.github.com/actions/stale/issues/770\">actions/stale#770</a></li>\n<li>Skip deleting the branch in the upstream of a forked repo by <a href=\"https://github.com/dsame\"><code>@\u200bdsame</code></a> <a href=\"https://redirect.github.com/actions/stale/pull/913\">actions/stale#913</a></li>\n<li>abort the build on the error by <a href=\"https://github.com/dsame\"><code>@\u200bdsame</code></a> in <a href=\"https://redirect.github.com/actions/stale/pull/935\">actions/stale#935</a></li>\n</ul>\n<h2>Breaking Changes</h2>\n<ul>\n<li>In this release we prevent scenarios when the build is not interrupted on some exceptions, which led to successful builds when they are supposed to fail</li>\n</ul>\n<h2>Example</h2>\n<pre lang=\"yaml\"><code>name: 'Remove labels when the issue or PR becomes stale'\non:\n  schedule:\n    - cron: '30 1 * * *'\n<p>permissions:\npull-request: write</p>\n<p>jobs:\nstale:\nruns-on: ubuntu-latest\nsteps:\n- uses: actions/stale@v8\nwith:\nlabels-to-remove-when-stale: 'label1,label2'\n</code></pre></p>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/actions/stale/blob/main/CHANGELOG.md\">actions/stale's changelog</a>.</em></p>\n<blockquote>\n<h1>Changelog</h1>\n<h1>[7.0.0]</h1>\n<p>:warning: Breaking change :warning:</p>\n<ul>\n<li>Allow daysBeforeStale options to be float by <a href=\"https://github.com/irega\"><code>@\u200birega</code></a> in <a href=\"https://redirect.github.com/actions/stale/pull/841\">actions/stale#841</a></li>\n<li>Use cache in check-dist.yml by <a href=\"https://github.com/jongwooo\"><code>@\u200bjongwooo</code></a> in <a href=\"https://redirect.github.com/actions/stale/pull/876\">actions/stale#876</a></li>\n<li>fix print outputs step in existing workflows by <a href=\"https://github.com/irega\"><code>@\u200birega</code></a> in <a href=\"https://redirect.github.com/actions/stale/pull/859\">actions/stale#859</a></li>\n<li>Update issue and PR templates, add/delete workflow files by <a href=\"https://github.com/IvanZosimov\"><code>@\u200bIvanZosimov</code></a> in <a href=\"https://redirect.github.com/actions/stale/pull/880\">actions/stale#880</a></li>\n<li>Update how stale handles exempt items by <a href=\"https://github.com/johnsudol\"><code>@\u200bjohnsudol</code></a> in <a href=\"https://redirect.github.com/actions/stale/pull/874\">actions/stale#874</a></li>\n</ul>\n<h1>[6.0.1]</h1>\n<p>Update <code>@\u200bactions/core</code> to v1.10.0 (<a href=\"https://redirect.github.com/actions/stale/pull/839\">#839</a>)</p>\n<h1>[6.0.0]</h1>\n<p>:warning: Breaking change :warning:</p>\n<p>Issues/PRs default <code>close-issue-reason</code> is now <code>not_planned</code>(<a href=\"https://redirect.github.com/actions/stale/issues/789\">#789</a>)</p>\n<h1>[5.1.0]</h1>\n<p><a href=\"https://redirect.github.com/actions/stale/issues/696\">Don't process stale issues right after they're marked stale</a>\n[Add close-issue-reason option]<a href=\"https://redirect.github.com/actions/stale/pull/764\">#764</a><a href=\"https://redirect.github.com/actions/stale/pull/772\">#772</a>\nVarious dependabot/dependency updates</p>\n<h2><a href=\"https://github.com/actions/stale/compare/v3.0.19...v4.1.0\">4.1.0</a> (2021-07-14)</h2>\n<h2>Features</h2>\n<ul>\n<li><a href=\"https://github.com/actions/stale/commit/9912fa74d1c01b5d6187793d97441019cbe325d0\">Ability to exempt draft PRs</a></li>\n</ul>\n<h2><a href=\"https://github.com/actions/stale/compare/v3.0.19...v4.0.0\">4.0.0</a> (2021-07-14)</h2>\n<h3>Features</h3>\n<ul>\n<li><strong>options:</strong> simplify config by removing skip stale message options (<a href=\"https://redirect.github.com/actions/stale/issues/457\">#457</a>) (<a href=\"https://github.com/actions/stale/commit/6ec637d238067ab8cc96c9289dcdac280bbd3f4a\">6ec637d</a>), closes <a href=\"https://redirect.github.com/actions/stale/issues/405\">#405</a> <a href=\"https://redirect.github.com/actions/stale/issues/455\">#455</a></li>\n<li><strong>output:</strong> print output parameters (<a href=\"https://redirect.github.com/actions/stale/issues/458\">#458</a>) (<a href=\"https://github.com/actions/stale/commit/3e6d35b685f0b2fa1a69be893fa07d3d85e05ee0\">3e6d35b</a>)</li>\n</ul>\n<h3>Bug Fixes</h3>\n<ul>\n<li><strong>dry-run:</strong> forbid mutations in dry-run (<a href=\"https://redirect.github.com/actions/stale/issues/500\">#500</a>) (<a href=\"https://github.com/actions/stale/commit/f1017f33dd159ea51366375120c3e6981d7c3097\">f1017f3</a>), closes <a href=\"https://redirect.github.com/actions/stale/issues/499\">#499</a></li>\n<li><strong>logs:</strong> coloured logs (<a href=\"https://redirect.github.com/actions/stale/issues/465\">#465</a>) (<a href=\"https://github.com/actions/stale/commit/5fbbfba142860ea6512549e96e36e3540c314132\">5fbbfba</a>)</li>\n<li><strong>operations:</strong> fail fast the current batch to respect the operations limit (<a href=\"https://redirect.github.com/actions/stale/issues/474\">#474</a>) (<a href=\"https://github.com/actions/stale/commit/5f6f311ca6aa75babadfc7bac6edf5d85fa3f35d\">5f6f311</a>), closes <a href=\"https://redirect.github.com/actions/stale/issues/466\">#466</a></li>\n<li><strong>label comparison</strong>: make label comparison case insensitive <a href=\"https://redirect.github.com/actions/stale/pull/517\">#517</a>, closes <a href=\"https://redirect.github.com/actions/stale/pull/516\">#516</a></li>\n<li><strong>filtering comments by actor could have strange behavior</strong>: &quot;stale&quot; comments are now detected based on if the message is the stale message not <em>who</em> made the comment(<a href=\"https://redirect.github.com/actions/stale/pull/519\">#519</a>), fixes <a href=\"https://redirect.github.com/actions/stale/pull/441\">#441</a>, <a href=\"https://redirect.github.com/actions/stale/pull/509\">#509</a>, <a href=\"https://redirect.github.com/actions/stale/pull/518\">#518</a></li>\n</ul>\n<h3>Breaking Changes</h3>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/actions/stale/commit/1160a2240286f5da8ec72b1c0816ce2481aabf84\"><code>1160a22</code></a> Merge pull request <a href=\"https://redirect.github.com/actions/stale/issues/965\">#965</a> from actions/dependabot/npm_and_yarn/prettier-2.8.6</li>\n<li><a href=\"https://github.com/actions/stale/commit/5f7b3966457047e35f2989b4f3529d4fcbfd3bc8\"><code>5f7b396</code></a> build(deps-dev): bump prettier from 2.8.4 to 2.8.6</li>\n<li><a href=\"https://github.com/actions/stale/commit/b002e7ec857ceadb81a436f02fc2e21040190e0a\"><code>b002e7e</code></a> Merge pull request <a href=\"https://redirect.github.com/actions/stale/issues/941\">#941</a> from panticmilos/vmpantic/rebuild-dist-vercel-bump</li>\n<li><a href=\"https://github.com/actions/stale/commit/52903732a4c3c9b1f232f1694ad0743bbfcef33c\"><code>5290373</code></a> Rebuild dist after rebase</li>\n<li><a href=\"https://github.com/actions/stale/commit/b006677dea6f2be4bde357abb1ccb22915272277\"><code>b006677</code></a> Merge pull request <a href=\"https://redirect.github.com/actions/stale/issues/962\">#962</a> from actions/dependabot/npm_and_yarn/jest-and-types/j...</li>\n<li><a href=\"https://github.com/actions/stale/commit/4f29769aee0fc902940fb3af95c79e98e121683e\"><code>4f29769</code></a> Merge pull request <a href=\"https://redirect.github.com/actions/stale/issues/961\">#961</a> from actions/dependabot/npm_and_yarn/typescript-5.0.2</li>\n<li><a href=\"https://github.com/actions/stale/commit/83453dd842477b1f93e2a366453b9d1c7540eb5b\"><code>83453dd</code></a> build(deps-dev): bump jest and <code>@\u200btypes/jest</code></li>\n<li><a href=\"https://github.com/actions/stale/commit/79e8c046ed3b9e6a6d89b0453d22c3a2eb50c90f\"><code>79e8c04</code></a> Merge pull request <a href=\"https://redirect.github.com/actions/stale/issues/960\">#960</a> from actions/dependabot/npm_and_yarn/types/node-18.15.3</li>\n<li><a href=\"https://github.com/actions/stale/commit/75d4d955acb83847572798f2ffd26ba259871e3c\"><code>75d4d95</code></a> Remove labels on stale (<a href=\"https://redirect.github.com/actions/stale/issues/959\">#959</a>)</li>\n<li><a href=\"https://github.com/actions/stale/commit/fac2d41a881555a987df3dacc701e84d898c2aa5\"><code>fac2d41</code></a> build(deps-dev): bump typescript from 4.9.4 to 5.0.2</li>\n<li>Additional commits viewable in <a href=\"https://github.com/actions/stale/compare/v7...v8\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/stale&package-manager=github_actions&previous-version=7&new-version=8)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-03-22T18:18:49Z",
        "closed_at": "2023-03-23T02:33:44Z",
        "merged_at": "2023-03-23T02:33:44Z",
        "body": "Added the missing word \"the\" in the documentation.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 83,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2023-03-20T16:32:44Z",
        "closed_at": "2023-03-20T20:51:57Z",
        "merged_at": "2023-03-20T20:51:57Z",
        "body": null,
        "comments": 1
    },
    {
        "merged": false,
        "additions": 12,
        "deletions": 11,
        "changed_files": 4,
        "created_at": "2023-03-18T07:16:50Z",
        "closed_at": "2023-03-19T03:07:11Z",
        "merged_at": null,
        "body": "The example didn't run. For some reason, the wrong properties were used. Replaced and everything worked",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 2119,
        "deletions": 0,
        "changed_files": 15,
        "created_at": "2023-03-17T11:27:50Z",
        "closed_at": "2023-07-19T13:15:41Z",
        "merged_at": "2023-07-19T13:15:41Z",
        "body": "A simple example of setting up a modal child route and using an outlet to display the route. I used the existing modal example but did not want to mess with maintaining a global state. This pattern off loads a lot of the heavy lifting to the Outlet. \r\n\r\n![Screenshot 2023-03-17 at 6 25 34 AM](https://user-images.githubusercontent.com/8460808/225891842-7385fe2a-704f-4dc0-a7d6-d4126bf39d03.png)\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2023-03-17T00:01:21Z",
        "closed_at": "2023-03-18T16:12:13Z",
        "merged_at": "2023-03-18T16:12:13Z",
        "body": "The <Outlet> is being treated as markup by the mdx, and is being rendered as a tag on the page resulting in :\r\n\r\n```html\r\n<docs-warning>\r\nDon't forget to add an `\r\n<outlet>` \r\nto your layout where you would like child route elements to be rendered. Using `children` will not work as expected.\r\n</outlet>\r\n</docs-warning>\r\n```\r\n\r\ninstead of\r\n```html\r\n<docs-warning>\r\nDon't forget to add an <code>`<outlet>`</code> to your layout where you would like child route elements to be rendered. Using <code>`{children}`</code> will not work as expected.\r\n</docs-warning>\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/8211946/225778278-196fbbe2-d86f-4ee5-9e2e-4c468d156663.png)\r\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 28,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2023-03-16T20:56:11Z",
        "closed_at": "2023-05-02T18:38:06Z",
        "merged_at": null,
        "body": null,
        "comments": 4
    },
    {
        "merged": true,
        "additions": 74,
        "deletions": 39,
        "changed_files": 5,
        "created_at": "2023-03-16T20:05:55Z",
        "closed_at": "2023-03-17T16:55:18Z",
        "merged_at": "2023-03-17T16:55:18Z",
        "body": "Adding a `toUpperCase()` back that was removed in https://github.com/remix-run/react-router/pull/10207 cause the spec is weird and doesn't uppercase `patch`: https://fetch.spec.whatwg.org/#concept-method\r\n\r\nRelies on https://github.com/remix-run/web-std-io/pull/30 before the unit test would actually fail otherwise",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 28,
        "deletions": 37,
        "changed_files": 4,
        "created_at": "2023-03-16T14:30:48Z",
        "closed_at": "2023-07-18T21:52:45Z",
        "merged_at": null,
        "body": "Removing some internals needed for the Remix v1 back-compat layer that can be removed in Remix v2.  Keeping this in draft for now and cutting experimental releases as needed for the Remix v2 branch to point to.  \r\n\r\nCurrent experimental: `0.0.0-experimental-00c655af`",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-03-16T09:56:22Z",
        "closed_at": "2023-03-16T12:22:57Z",
        "merged_at": null,
        "body": null,
        "comments": 4
    },
    {
        "merged": true,
        "additions": 30,
        "deletions": 12,
        "changed_files": 3,
        "created_at": "2023-03-15T20:35:41Z",
        "closed_at": "2023-03-16T17:51:45Z",
        "merged_at": "2023-03-16T17:51:45Z",
        "body": "Closes #10176 ",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 228,
        "deletions": 43,
        "changed_files": 10,
        "created_at": "2023-03-15T16:41:24Z",
        "closed_at": "2023-03-15T19:53:56Z",
        "merged_at": "2023-03-15T19:53:56Z",
        "body": "Add a future flag to normalize/align `useNavigation().formMethod` and `useFetcher().formMethod` with Remix.  \r\n\r\nWe want our API to behave like `fetch()` - it can accept lowercase or uppercase, but exposes the method back to you as a normalized uppercase method:\r\n\r\n```js\r\nnew Request(\"/\", { method: \"post\" }).method === \"POST\" // true\r\nnew Request(\"/\", { method: \"POST\" }).method === \"POST\" // true\r\n```\r\n\r\nSo this means that both `<Form method=\"post\">` and `<Form method=\"POST\">` should result in `useNavigation().formMethod === \"POST\"`.\r\n\r\nWe inadvertently shipped lowercase `useNavigation`/`useFetcher` values in 6.4, and only noticed the inconsistency when we went to deprecate `useTransition` in Remix which used uppercase.  Therefore, we're putting this behind a future flag tro avoid breaking apps, and in Remix v2/React Router v7 we'll move to uppercase as the default.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-03-15T09:19:37Z",
        "closed_at": "2023-03-15T15:33:17Z",
        "merged_at": "2023-03-15T15:33:17Z",
        "body": null,
        "comments": 4
    },
    {
        "merged": true,
        "additions": 42,
        "deletions": 39,
        "changed_files": 4,
        "created_at": "2023-03-14T16:25:22Z",
        "closed_at": "2023-03-14T17:52:43Z",
        "merged_at": "2023-03-14T17:52:43Z",
        "body": null,
        "comments": 1
    },
    {
        "merged": true,
        "additions": 159,
        "deletions": 168,
        "changed_files": 4,
        "created_at": "2023-03-14T16:01:55Z",
        "closed_at": "2023-03-14T21:24:07Z",
        "merged_at": "2023-03-14T21:24:07Z",
        "body": "Run `lazy()` via `startNavigation` in `router.inititialize()` so we can properly bubble `lazy()` errors to boundaries.\r\n\r\nCloses #10194",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 821,
        "deletions": 658,
        "changed_files": 1,
        "created_at": "2023-03-13T20:39:41Z",
        "closed_at": "2023-03-14T13:18:41Z",
        "merged_at": "2023-03-14T13:18:41Z",
        "body": "Update `data-browser-router-test.ts` to use `createBrowserRouter`/`createHashRouter`/`<RouterProvider>` directly instead of the utility `<TestDataRouter>` element which was leftover from the original `<DataBrowserRouter>`/`<DataHashRouter>` API design",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 62,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2023-03-13T15:38:59Z",
        "closed_at": "2023-03-15T19:53:41Z",
        "merged_at": "2023-03-15T19:53:41Z",
        "body": "Closes #10111 ",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 123,
        "deletions": 5,
        "changed_files": 4,
        "created_at": "2023-03-11T02:49:59Z",
        "closed_at": "2023-03-13T18:56:47Z",
        "merged_at": "2023-03-13T18:56:47Z",
        "body": "Check for presence of new `ErrorBoundary` property was missing. ",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 449,
        "deletions": 421,
        "changed_files": 1,
        "created_at": "2023-03-10T21:47:17Z",
        "closed_at": "2023-03-13T14:01:38Z",
        "merged_at": "2023-03-13T14:01:38Z",
        "body": "These tests were using a `DataMemoryRouter` wrapper from when that was the original API.  Rewrite to use `createMemoryRouter`/`RouterProvider`",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 68,
        "deletions": 37,
        "changed_files": 2,
        "created_at": "2023-03-10T13:09:41Z",
        "closed_at": "2023-03-10T14:43:04Z",
        "merged_at": null,
        "body": "\ud83d\udc4b \r\n\r\nI've run into a use-case where I need the `isActive` logic of react-router `NavLink` but do not want to render a `Link` itself. Exporting a `useNavLink` hook solves this. Wondering if the maintainers would be interested in adding this as a feature in the library iteself.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-03-10T12:00:30Z",
        "closed_at": "2023-03-10T13:31:48Z",
        "merged_at": "2023-03-10T13:31:48Z",
        "body": null,
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-03-07T13:53:00Z",
        "closed_at": "2023-03-07T15:20:44Z",
        "merged_at": "2023-03-07T15:20:44Z",
        "body": null,
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-03-04T11:15:30Z",
        "closed_at": "2023-03-04T17:19:37Z",
        "merged_at": "2023-03-04T17:19:37Z",
        "body": "Found a couple of typos in create-memory-router.md file. Fixed them as best as I could.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-03-03T04:36:07Z",
        "closed_at": "2023-03-03T06:22:25Z",
        "merged_at": "2023-03-03T06:22:25Z",
        "body": null,
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-03-02T19:14:08Z",
        "closed_at": "2023-03-03T03:05:09Z",
        "merged_at": "2023-03-03T03:05:09Z",
        "body": null,
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-03-02T00:05:00Z",
        "closed_at": "2023-03-02T04:02:10Z",
        "merged_at": "2023-03-02T04:02:10Z",
        "body": "When editing any contact the form is always empty. It's because the loader wraps the contact in an object, so it has to be destructured in the component call to be loaded properly.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-03-01T20:04:59Z",
        "closed_at": "2023-03-01T21:12:59Z",
        "merged_at": null,
        "body": "if username isn't truthy there is 2 redirects\r\nlogin -> protected ->login",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-03-01T20:02:58Z",
        "closed_at": "2023-03-01T21:09:46Z",
        "merged_at": "2023-03-01T21:09:46Z",
        "body": null,
        "comments": 2
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-03-01T14:47:53Z",
        "closed_at": "2023-03-01T21:06:26Z",
        "merged_at": "2023-03-01T21:06:26Z",
        "body": "When I tried to create a layout, I was thoroughly confused because the lines above say it will be rendered like this:\r\n```jsx\r\n<PageLayout>\r\n  <Privacy />\r\n</PageLayout>\r\n```\r\n\r\nSo I assumed that inside PageLayout, I could just render the children with `{children}` and that's where `<Privacy />` would go. To my surprise, nothing showed up, and the documentation felt confusing. I found the answer on [stack overflow](https://stackoverflow.com/questions/69982197/page-layout-broken-in-react-router-v6), but felt a little note here would helpful to anyone brand new to using React router.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-02-24T22:03:42Z",
        "closed_at": "2023-02-25T01:43:40Z",
        "merged_at": "2023-02-25T01:43:40Z",
        "body": "Fixing the below highlighting:\r\n\r\n![Remix-tutorial-highlight](https://user-images.githubusercontent.com/500604/221301248-a3da3bef-dd58-4017-b6bd-97b741e26c84.png)\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 129,
        "deletions": 5,
        "changed_files": 5,
        "created_at": "2023-02-23T13:37:30Z",
        "closed_at": "2023-02-23T19:21:59Z",
        "merged_at": "2023-02-23T19:21:59Z",
        "body": "Closes #10052 ",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-02-23T09:42:19Z",
        "closed_at": "2023-02-23T14:04:25Z",
        "merged_at": null,
        "body": "The code seems to already support this but typing is not. `<Link to={-1} />` would be great to implement back button",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-02-23T08:40:01Z",
        "closed_at": "2023-02-23T17:28:15Z",
        "merged_at": "2023-02-23T17:28:15Z",
        "body": "In this tutorial, within route `/contact/:contactId/edit ` \r\n  - We forgot destructuring  contact data before render it on UI. \r\n\r\nBefore fix: \r\n<img width=\"1628\" alt=\"before-fix\" src=\"https://user-images.githubusercontent.com/52577080/220858245-308a1bd4-e6bc-424b-98f5-605e9457fee1.png\">\r\n\r\nAfter fixed: \r\n<img width=\"1630\" alt=\"after-fixed\" src=\"https://user-images.githubusercontent.com/52577080/220858293-118416cf-2307-4312-b6bc-61f4f4ff2741.png\">\r\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-02-22T08:41:50Z",
        "closed_at": "2023-02-22T16:14:13Z",
        "merged_at": null,
        "body": "### Issue:\r\nHaving code looking like this all over the project is not so good-looking\r\n![code](https://user-images.githubusercontent.com/58358332/220567231-009bf025-1216-4da8-b47d-0f7b921f8227.png)\r\n\r\nIt makes much more sense, like this:\r\n\r\n![code](https://user-images.githubusercontent.com/58358332/220567474-29f4d220-224a-4fc9-885e-a7854b8a7916.png)\r\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 127,
        "changed_files": 1,
        "created_at": "2023-02-22T02:39:08Z",
        "closed_at": "2023-04-24T14:52:13Z",
        "merged_at": null,
        "body": "This FAQ is out of date - the codesandbox demos use react-router 4!!\r\nBetter for people to just look at the official docs - there's an up-to-date FAQ there.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 14,
        "deletions": 13,
        "changed_files": 2,
        "created_at": "2023-02-21T14:17:48Z",
        "closed_at": "2023-02-22T16:56:37Z",
        "merged_at": null,
        "body": "Fixes https://github.com/remix-run/remix/issues/3672. `LocationContext` was using a new object every render, even if `location` and `navigationType` were the same. [React's own docs recommend against this](https://reactjs.org/docs/context.html#caveats).\r\n\r\nThis update wraps the location context in a `useMemo` just like [navigationContext](https://github.com/remix-run/react-router/blob/main/packages/react-router/lib/components.tsx#L315-L319).\r\n\r\nI know \"is this really hurting performance?\" comes up often on this type of issue. For us the answer was definitely yes. We had a large data grid (5,000+ cells on the screen) where each cell needed the value of `useLocation` and clicking in a cell caused a fetcher to run. Even when we wrapped the cells in `React.memo()`, running the fetcher still caused every cell to re-render due to the context change. This did cause some noticeable lag on the page.\r\n\r\nI've been running this patch in production since last summer with no issues.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-02-18T20:31:11Z",
        "closed_at": "2023-02-19T05:41:31Z",
        "merged_at": "2023-02-19T05:41:31Z",
        "body": "I noticed that the value returned by the loader is different than before the suggested refactor. I suppose it should be the same as [here](https://github.com/remix-run/react-router/blob/9b75b85ab5c3b24e406fdc3fd09904e3d8bfd1aa/docs/start/tutorial.md?plain=1#L701-L704).",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 70,
        "deletions": 17,
        "changed_files": 6,
        "created_at": "2023-02-18T17:04:51Z",
        "closed_at": "2023-02-22T14:41:25Z",
        "merged_at": "2023-02-22T14:41:25Z",
        "body": "Currently, when rendering a `<Link to=\"mailto:foo@baz.com\" />` in a server context, the `href` does not get rendered correctly.\r\n\r\nSee following PR in Remix for failing test: https://github.com/remix-run/remix/pull/5498\r\n\r\nI've created an additional test with `<StaticRouter>` in the tests of the react-router-dom tests which passes with this fix \ud83c\udf7e\r\n\r\nAlso fixes: #10094 ",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-02-15T13:14:20Z",
        "closed_at": "2023-02-15T17:28:05Z",
        "merged_at": "2023-02-15T17:28:05Z",
        "body": null,
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-02-15T09:22:43Z",
        "closed_at": "2023-02-15T17:27:29Z",
        "merged_at": "2023-02-15T17:27:29Z",
        "body": "Fix Not Show Data In Contact Page",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-02-14T09:44:12Z",
        "closed_at": "2023-02-14T14:42:52Z",
        "merged_at": "2023-02-14T14:42:52Z",
        "body": "fix demo error",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2023-02-14T06:50:39Z",
        "closed_at": "2023-02-14T14:44:32Z",
        "merged_at": "2023-02-14T14:44:32Z",
        "body": "fix: typo and the correct lines that need to be highlighted",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-02-13T18:03:27Z",
        "closed_at": "2023-02-13T21:08:08Z",
        "merged_at": "2023-02-13T21:08:08Z",
        "body": "Remove severely out of date and high vuln dependency sort-by, which goes seemingly unused.\r\n\r\nCloses #10092",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-02-10T14:25:18Z",
        "closed_at": "2023-02-10T20:43:56Z",
        "merged_at": null,
        "body": "The file for helper functions is named `contact.js` not contact`s`.js \r\n\r\n`import { deleteContact } from \"../contacts\";` should be \r\n`import { deleteContact } from \"../contact\";`",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-02-10T01:35:32Z",
        "closed_at": "2023-02-10T11:39:07Z",
        "merged_at": "2023-02-10T11:39:07Z",
        "body": "When Outlet was moved to the components section (out of route section), the old link was never deleted in `route.md`.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 67,
        "deletions": 41,
        "changed_files": 5,
        "created_at": "2023-02-09T10:59:06Z",
        "closed_at": "2023-03-03T21:34:38Z",
        "merged_at": "2023-03-03T21:34:38Z",
        "body": "generatePath was doing multiple passes on the `path` using string replace, the first two passes were applying parameters, the third pass was doing a cleanup and the fourth path was applying the `splat`. It was possible to get incorrect results while applying `splat` when the last parameter value ended with `*`:\r\n\r\n```ts\r\nconst path = generatePath(\"/route/:name\", {\r\n    name: encodeURIComponent(\"includes *asterisk at the end*\"),\r\n})\r\n```\r\n```\r\nExpected: \"/route/includes *asterisk at the end*\"\r\nReceived: \"/route/includes *asterisk at the end\"\r\n```\r\nresults of the first two passes return the value of `/route/*asterisk at the end*` which was later treated as path with the splat resulting in the last asterisk removed.\r\n\r\nit was also possible to inject the splat value unintentionally\r\n```ts\r\ngeneratePath(\"/courses/:name\", { name: \"foo*\", \"*\": \"splat_should_not_be_added\" })\r\n```\r\n```\r\nExpected: \"/courses/foo*\"\r\nReceived: \"/courses/foosplat_should_not_be_added\"\r\n```\r\n\r\nA safer option, instead of mutating a global path multiple times, is to split the path into segments, process each segment in isolation and then join them back together.\r\n\r\nfixes #9051",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 15,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2023-02-09T10:28:06Z",
        "closed_at": "2023-02-10T15:31:51Z",
        "merged_at": "2023-02-10T15:31:51Z",
        "body": "Fixes the following issue:\r\n\r\nWhen a Remix document request involves a loader which defer()s with specific response headers and/or status code, those are not at all respected.\r\n\r\nFixes issue: https://github.com/remix-run/remix/issues/5345",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 76,
        "deletions": 8,
        "changed_files": 5,
        "created_at": "2023-02-08T21:50:17Z",
        "closed_at": "2023-02-22T16:49:55Z",
        "merged_at": "2023-02-22T16:49:55Z",
        "body": "Fix for #10052 \r\n\r\nChecks whether the redirect location contains the basename (if set) and redirect as an external url if the basename is not present in the redirect location.\r\n\r\nAlso related: #9859",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 54,
        "deletions": 1,
        "changed_files": 4,
        "created_at": "2023-02-08T04:11:05Z",
        "closed_at": "2023-02-14T16:59:58Z",
        "merged_at": "2023-02-14T16:59:58Z",
        "body": "fix bug when __staticRouterHydrationData contains </script> ",
        "comments": 17
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 5,
        "changed_files": 6,
        "created_at": "2023-02-07T22:57:57Z",
        "closed_at": "2023-02-15T15:17:18Z",
        "merged_at": "2023-02-15T15:17:18Z",
        "body": "`@remix-run/router`'s `invariant` is not public API and was only exported for consumption by `react-router`/`react-router-dom`, so moved it to an `UNSAFE_invariant` export\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 28,
        "deletions": 20,
        "changed_files": 1,
        "created_at": "2023-02-07T21:43:01Z",
        "closed_at": "2023-02-09T17:41:25Z",
        "merged_at": "2023-02-09T17:41:25Z",
        "body": "Note: most of the change in here are adding a trailing `.` ;)\r\n\r\nSibling to https://github.com/remix-run/remix/pull/5388",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-02-07T02:19:16Z",
        "closed_at": "2023-02-07T05:47:10Z",
        "merged_at": "2023-02-07T05:47:09Z",
        "body": null,
        "comments": 2
    },
    {
        "merged": true,
        "additions": 57,
        "deletions": 21,
        "changed_files": 4,
        "created_at": "2023-02-06T16:46:29Z",
        "closed_at": "2023-02-07T14:48:08Z",
        "merged_at": "2023-02-07T14:48:08Z",
        "body": "Updates for experimental releases",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-02-03T21:47:36Z",
        "closed_at": "2023-02-10T07:48:58Z",
        "merged_at": "2023-02-10T07:48:58Z",
        "body": "Closes #10042",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 8019,
        "deletions": 749,
        "changed_files": 49,
        "created_at": "2023-02-03T20:33:12Z",
        "closed_at": "2023-03-08T16:17:44Z",
        "merged_at": "2023-03-08T16:17:44Z",
        "body": "Add support for a `route.lazy` method to lazily load the \"meat\" of a route while still providing the \"matching\" information up front.  This injects the `lazy()` call into the normal `loading`/`submitting` navigation flow internal to the router so we can provide first-class support for route-level code splitting.  This ends up being cleaner/easier than doing it in user-land for a few reasons:\r\n\r\n* We can load at a more specific spot internal to the router\r\n* We can access the navigation `AbortSignal` in case the `lazy()` call gets interrupted\r\n* We can also load once and update the `route` so subsequent navigations don't have a repeated `lazy()` call\r\n* We don't have issue with knowing whether or not an `errorElement` exists since we will have updated the route prior to  updating any UI state\r\n\r\n**Example**\r\n\r\n```js\r\nlet routes = [{\r\n  path: '/',\r\n  lazy: () => import('./root.tsx')\r\n}, {\r\n  path: '/about',\r\n  lazy: () => import('./about.tsx')\r\n}];\r\n```\r\n\r\n**Todo**\r\n* [x] Unit tests\r\n* [ ] ~~Built-in Remix-style export mapping (`default export -> element`, `ErrorBoundary -> errorElement`)~~\r\n  * For clarity this is going to be left to user-land\r\n\r\n**Reference Links**\r\n* Roadmap: https://github.com/orgs/remix-run/projects/5?pane=issue&itemId=17881951\r\n* Proposal: https://github.com/remix-run/react-router/discussions/9826\r\n* Initial approach: https://github.com/remix-run/react-router/commit/f3e42899ba18382ee68cdff4a407ce71feab6560\r\n* User-land POC implementation: https://github.com/remix-run/react-router/pull/9830",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2023-02-02T16:39:06Z",
        "closed_at": "2023-02-02T18:36:32Z",
        "merged_at": null,
        "body": "As is, `useScrollRestoration` *always* scrolls to a hash when navigating to a page where that hash element can be found, regardless of the `preventScrollReset` value. This means that it's impossible to use `useScrollRestoration`/`<ScrollRestoration />` and control the scrolling behavior when using `navigate` or `Link`s that point to hashes, without this change. Apps are forced to have the app immediately jump to the hash element with no workaround.\r\n\r\nWith this small adjustment, the scroll-to-hash behavior will not occur if `preventScrollReset===true`, in the same way as scroll-to-top does not (for non-hash links).\r\n\r\nA primary use-case for this is when an app wants control over the scroll behavior for a specific action. For instance, someone clicks a button that should link to a given hash element, so we want to update the router state history (using `navigate` or `Link`), but want to smooth-scroll to that element ourselves and don't want `ScrollRestoration` to immediately jump. (Or don't want the scroll position to change at all in response to the `Link`/`navigate` change, but do want the URL to be updated.) It seems appropriate that `preventScrollReset` should behave this way for hash links, since the prop currently has no effect but intuitively can allow for the same level of user-control here as it does for non-hash links.\r\n\r\n---\r\n\r\nI couldn't find any tests for `useScrollRestoration`, but if there are some that I missed where it makes sense to add a new test case for this scenario, please let me know. Thank you!",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2023-02-02T16:27:23Z",
        "closed_at": "2023-02-02T19:04:57Z",
        "merged_at": "2023-02-02T19:04:57Z",
        "body": "Closes #10010 ",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 59,
        "deletions": 48,
        "changed_files": 6,
        "created_at": "2023-02-02T16:08:14Z",
        "closed_at": "2023-02-02T19:14:59Z",
        "merged_at": "2023-02-02T19:14:59Z",
        "body": "sync with remix https://github.com/remix-run/remix/pull/5342\r\n\r\nSigned-off-by: Logan McAnsh <logan@mcan.sh>",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 24,
        "deletions": 28,
        "changed_files": 3,
        "created_at": "2023-02-02T15:16:37Z",
        "closed_at": "2023-02-02T19:42:41Z",
        "merged_at": "2023-02-02T19:42:41Z",
        "body": "Fixes an invalid boolean condition on our `warning` and also removes the `activeBlocker` internal state variable since it was not actually correct in strict mode.\r\n\r\nCloses #9998 ",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 198,
        "deletions": 16,
        "changed_files": 4,
        "created_at": "2023-02-02T14:33:02Z",
        "closed_at": "2023-02-02T19:42:15Z",
        "merged_at": "2023-02-02T19:42:15Z",
        "body": "Absolute URL detection in `<Link to>` missed a case where the object form of `to` was used without a pathname, and resulted in the loss of the active pathname\r\n\r\nCloses #10007",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 83,
        "deletions": 7,
        "changed_files": 6,
        "created_at": "2023-02-02T03:44:43Z",
        "closed_at": "2023-03-15T19:55:20Z",
        "merged_at": null,
        "body": "## Issue\r\n\r\nPlease look at the added test that reproduces the issue we bumped into. \r\nAFAIU, the problem is caused by the following sequence:\r\n\r\n1. We `safelyDecodeURI(pathname)` when we [match routes](https://github.com/remix-run/react-router/blob/13f4eed82e596e674ec7b79a2ad4f4aba7099281/packages/router/utils.ts#L347).\r\n2. Then the decoded match [is used](https://github.com/remix-run/react-router/blob/80832fbf142a7038bd83cc0f18b97414974006d5/packages/react-router/lib/hooks.tsx#L316) as a parent match in `useRoutes`.\r\n3. Then, [when we calculate](https://github.com/remix-run/react-router/blob/80832fbf142a7038bd83cc0f18b97414974006d5/packages/react-router/lib/hooks.tsx#L380-L383) the remaining `pathName`, we use decoded match and non-decoded `location.pathname`, which results in the following issue in our case:\r\n\r\n```tsx\r\n// pathname === \"/github.com/my%20org/repo%20with%20spaces\"\r\n// parentPathnameBase === \"/github.com/my org/repo with spaces\"\r\nlet remainingPathname =\r\n  parentPathnameBase === \"/\"\r\n    ? pathname\r\n    : pathname.slice(parentPathnameBase.length) || \"/\";\r\n```\r\n\r\nAfter slicing `remainingPathname === \"spaces\"` but it should be an empty string. Our simplified routes structure:\r\n\r\n```tsx\r\n<Routes>\r\n  <Route path=\"whatever\" element={...} />\r\n  <Route path=\"*\" element={\r\n     <Routes>\r\n      <Route path={repoName + '/*'} element={\r\n        <Routes>\r\n          <Route path=\"*\" element={...} />\r\n          <Route path=\"blob/*\" element={...} />\r\n        </Routes>\r\n       />\r\n     </Routes>\r\n   />\r\n</Routes>\r\n```\r\n\r\nIt's that strange because we're in the process of migrating from V5 to V6. So, if `repoName` contains spaces, nested repo routes are never rendered.\r\n\r\n## Fix \r\n\r\nThe proposed change solves the problem for the issue above but results in failed `special character tests`. Probably the problem can be solved in another way. I would like to figure out what you think about the use case before investing more time into understanding how to fix it properly. Let me know!",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 10573,
        "deletions": 33164,
        "changed_files": 34,
        "created_at": "2023-02-01T22:07:01Z",
        "closed_at": "2023-02-02T15:28:04Z",
        "merged_at": "2023-02-02T15:28:04Z",
        "body": "Signed-off-by: Logan McAnsh <logan@mcan.sh>",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-02-01T16:26:48Z",
        "closed_at": "2023-03-03T21:54:34Z",
        "merged_at": "2023-03-03T21:54:34Z",
        "body": "Change \"let's\" (contraction of \"let us\") to \"lets\" (singular of \"let\")",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-02-01T10:20:24Z",
        "closed_at": "2023-02-01T12:13:45Z",
        "merged_at": "2023-02-01T12:13:44Z",
        "body": "Route of the crumb should be /messages instead of /message",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-02-01T10:04:24Z",
        "closed_at": "2023-02-01T18:03:42Z",
        "merged_at": "2023-02-01T18:03:42Z",
        "body": "I believe this was a typo. As it is previously referred to 'ProjectsPage' and later is also referred to as 'ProjectsPage'",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-01-31T18:27:16Z",
        "closed_at": "2023-02-01T00:18:28Z",
        "merged_at": "2023-02-01T00:18:28Z",
        "body": "Changed to match the name used throughout the rest of the tutorial",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-01-31T09:37:15Z",
        "closed_at": "2023-01-31T16:37:11Z",
        "merged_at": "2023-01-31T16:37:11Z",
        "body": "Layout Route example was TODO, so I add the example",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-01-29T22:57:35Z",
        "closed_at": "2023-01-30T23:32:13Z",
        "merged_at": null,
        "body": "Workaround upstream jsdom bug:\r\nhttps://github.com/jsdom/jsdom/issues/3504\r\n\r\nThe third argument to replaceState is optional, but provide it anyway for improved compatibility with all environments.\r\n\r\nThe call to replaceState was introduced in\r\nbb7590ac85feb0cb039a5aeac2e2874c117207c9.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 38,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-01-29T19:43:32Z",
        "closed_at": "2023-03-03T21:56:34Z",
        "merged_at": "2023-03-03T21:56:34Z",
        "body": "After explaining how React Router uses response objects to replicate web standard behavior, it can be confusing why this suddenly stops working just by adding \"defer\" to the loader's return value. Thinking it through yields the answer (deferred data isn't handled by the response returning the HTML), but it seems like it would reduce the friction to add a little explanation.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 561,
        "deletions": 61,
        "changed_files": 6,
        "created_at": "2023-01-28T01:23:37Z",
        "closed_at": "2023-02-21T19:41:23Z",
        "merged_at": "2023-02-21T19:41:23Z",
        "body": null,
        "comments": 1
    },
    {
        "merged": true,
        "additions": 50,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2023-01-27T18:47:28Z",
        "closed_at": "2023-02-01T15:08:09Z",
        "merged_at": "2023-02-01T15:08:09Z",
        "body": "This merge request improves the detection of absolute URLs in the `<Link to=\"..\" />` component.\r\n\r\n### Before this merge request:\r\n\r\n`<Link to=\"mailto:remix@example.com\" />` will not solve to the correct url because its detected as a relative url.\r\n\r\n### After this merge request:\r\n\r\n`<Link to=\"mailto:remix@example.com\" />` will solve to the correct url and opens the mail app depending on the browser.\r\n\r\nThis uses the same regex as in #9829",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-01-26T16:58:48Z",
        "closed_at": "2023-01-26T19:03:37Z",
        "merged_at": null,
        "body": "useful for mocking `useOutletContext`:\r\n\r\n```tsx\r\ntest('test', () => {\r\n  const context = { boop: 'boop' }\r\n  render(<OutletContext.Provider value={context}><ComponentUnderTest /></OutletContext.Provider>)\r\n})\r\n```",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 39,
        "deletions": 25,
        "changed_files": 4,
        "created_at": "2023-01-26T01:47:41Z",
        "closed_at": "2023-03-03T19:16:19Z",
        "merged_at": "2023-03-03T19:16:19Z",
        "body": "This will reduce some unnecessary re-renders where the context is accessed.",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-01-25T19:37:57Z",
        "closed_at": "2023-01-26T16:04:04Z",
        "merged_at": null,
        "body": "Use the `fakeAuthProvider.isAuthenticated` property instead of `auth.user` state in the `RequireAuth` component.\nAfter a user sign in, `user.state` is not always updated just after the redirection to a protected route which lead to another redirection to the login page.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 24,
        "deletions": 19,
        "changed_files": 3,
        "created_at": "2023-01-25T19:37:42Z",
        "closed_at": "2023-01-26T17:39:20Z",
        "merged_at": "2023-01-26T17:39:20Z",
        "body": "Closes #9966 ",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2387,
        "deletions": 278,
        "changed_files": 15,
        "created_at": "2023-01-24T21:55:11Z",
        "closed_at": "2023-04-25T18:38:28Z",
        "merged_at": null,
        "body": "Middleware implementation to run before/after loaders/actions.  API is inspired by the [Fresh middleware](https://fresh.deno.dev/docs/concepts/middleware) with the `.next()` call in the middle thus allowing us to alter responses on the way back up the chain.\r\n\r\nData is passed down through strongly typed `get`/`set` methods that operate in a React Context-like manner where you define the typed \"context\" up front with an optional default value and use that as the key.\r\n\r\nProposal: https://github.com/remix-run/react-router/discussions/9564\r\n\r\n* [x] Middleware pre execution\r\n* [x] Middleware post execution\r\n* [x] Strongly typed context\r\n* [x] `future.unstable_middleware` flag\r\n* [x] Rename `middleware` param to `context` behind the flag",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 23,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-01-24T17:26:18Z",
        "closed_at": "2023-01-24T20:14:21Z",
        "merged_at": "2023-01-24T20:14:21Z",
        "body": "Related to #8411 ",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 130,
        "deletions": 12,
        "changed_files": 7,
        "created_at": "2023-01-24T16:09:06Z",
        "closed_at": "2023-01-24T21:18:59Z",
        "merged_at": "2023-01-24T21:18:59Z",
        "body": "If a user provides an initial set of search params with `useSearchParams({ key: 'initial' })` we only want to leverage that value initially, but not once they've applied new params via a `setSearchParams` call  \r\n\r\nCloses #9668",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-01-23T23:27:55Z",
        "closed_at": "2023-01-24T21:12:39Z",
        "merged_at": "2023-01-24T21:12:39Z",
        "body": "Closes #9706 \r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 87,
        "deletions": 2,
        "changed_files": 5,
        "created_at": "2023-01-23T19:32:08Z",
        "closed_at": "2023-01-24T20:58:27Z",
        "merged_at": "2023-01-24T20:58:27Z",
        "body": "Closes #9961, https://github.com/remix-run/remix/issues/3145",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 22,
        "deletions": 12,
        "changed_files": 2,
        "created_at": "2023-01-23T18:50:05Z",
        "closed_at": "2023-01-24T16:42:58Z",
        "merged_at": "2023-01-24T16:42:58Z",
        "body": "Fixes #9542 \r\n\r\nThis changes the default error element to only show a developer-specific message in development builds. I think this is a good middle ground, but maybe we want to show a completely different element in production? I'm totally open to changes here, so hopefully this is a good starting point.",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 27,
        "deletions": 11,
        "changed_files": 2,
        "created_at": "2023-01-21T16:59:46Z",
        "closed_at": "2023-01-22T02:06:10Z",
        "merged_at": "2023-01-22T02:06:10Z",
        "body": "https://github.com/remix-run/react-router/issues/8246 caught me as well. \r\n\r\nThere is a great explanation of the changes required in the migration doc already, but it is tucked into a section on `useNavigate()` so pulling it out into a dedicated section should help with visibility.\r\n\r\nI am unsure if the main `<Link>` page also needs a section on the `state` prop usage.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2023-01-21T15:41:43Z",
        "closed_at": "2023-01-22T02:01:30Z",
        "merged_at": "2023-01-22T02:01:30Z",
        "body": "React V18 synthax correction (cause I had the following error in my Chrome console : \"Warning: ReactDOM.render is no longer supported in React 18. Use createRoot instead. Until you switch to the new API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot\"). I hope this will helps.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-01-20T12:12:24Z",
        "closed_at": "2023-01-23T21:42:26Z",
        "merged_at": null,
        "body": "By adding \"packageManager\" field, we show which package manager is expected to be used, also Corepack can pick it automatically. ",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 338,
        "deletions": 175,
        "changed_files": 3,
        "created_at": "2023-01-19T23:31:21Z",
        "closed_at": "2023-01-24T21:14:17Z",
        "merged_at": "2023-01-24T21:14:17Z",
        "body": "This PR fixes underlying some bugs with `fetcher.load` `shouldRevalidate` behavior.  In an oversight in initial implementation we passed the _fetcher.load()_ url to both the `currentUrl`/`nextUrl` parameters and also deciphered the `currentParams`/`nextParams` from the fetcher load match, not the navigation locations.  This is wrong since fetchers revalidate due to _navigation_ events and we need to provide information about the navigation that triggered the revalidation (and indeed the `form*` submission fields we provide come from the navigation).\r\n\r\nThis PR makes the following updates:\r\n* fetcher `shouldRevalidate` now receives `currentUrl`/`currentParams`/`nextUrl`/`nextParams` fields from the navigation locations to align with the submissions info\r\n* I also realized that we are revalidating _all_ fetchers - but since we know the routeId that triggered a fetcher.load, we can skip revalidation on fetcher.load calls coming from routes we are removing as part of the current navigation\r\n\r\nCloses https://github.com/remix-run/remix/issues/5090",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 30,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2023-01-19T19:04:09Z",
        "closed_at": "2023-01-24T20:56:23Z",
        "merged_at": "2023-01-24T20:56:23Z",
        "body": "`pagehide` seems to be a better cross-browser way of detecting the unload of a page.  And in the case of scroll restoration there's no need to ever prompt the user so `pagehide` seems a better option anyway.\r\n\r\nFrom https://developer.mozilla.org/en-US/docs/Web/API/Window/unload_event#usage_notes:\r\n\r\n> If you're specifically trying to detect page unload events, the pagehide event is the best option.\r\n\r\n<img width=\"790\" alt=\"Screenshot 2023-01-19 at 2 07 50 PM\" src=\"https://user-images.githubusercontent.com/1609022/213537294-16d0afc2-c019-472f-92e2-87bce6cfb742.png\">\r\n\r\n\r\n<img width=\"781\" alt=\"Screenshot 2023-01-19 at 2 06 59 PM\" src=\"https://user-images.githubusercontent.com/1609022/213537191-f5867a12-222b-476e-b264-a35631593827.png\">\r\n\r\n\r\nCloses #9463 ",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 68,
        "deletions": 21,
        "changed_files": 3,
        "created_at": "2023-01-19T16:47:56Z",
        "closed_at": "2023-01-24T21:12:58Z",
        "merged_at": "2023-01-24T21:12:58Z",
        "body": "Closes #9943",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 203,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-01-19T15:57:01Z",
        "closed_at": "2023-01-19T21:57:07Z",
        "merged_at": "2023-01-19T21:57:07Z",
        "body": "[Preview](https://github.com/remix-run/react-router/blob/brophdawg11/blocker-decision-doc/decisions/0001-use-blocker.md)",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2023-01-19T15:49:45Z",
        "closed_at": "2023-01-19T19:53:47Z",
        "merged_at": "2023-01-19T19:53:47Z",
        "body": null,
        "comments": 3
    },
    {
        "merged": false,
        "additions": 98,
        "deletions": 8,
        "changed_files": 6,
        "created_at": "2023-01-18T23:40:27Z",
        "closed_at": "2023-01-19T06:32:31Z",
        "merged_at": null,
        "body": "want to be a part of this",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 33,
        "deletions": 7,
        "changed_files": 9,
        "created_at": "2023-01-18T17:57:04Z",
        "closed_at": "2023-01-18T19:17:45Z",
        "merged_at": "2023-01-18T19:17:45Z",
        "body": "This PR was opened by the [Changesets release](https://github.com/changesets/action) GitHub action. When you're ready to do a release, you can merge this and the packages will be published to npm automatically. If you're not ready to do a release yet, that's fine, whenever you add more changesets to release-next, this PR will be updated.\n\n\u26a0\ufe0f\u26a0\ufe0f\u26a0\ufe0f\u26a0\ufe0f\u26a0\ufe0f\u26a0\ufe0f\n\n`release-next` is currently in **pre mode** so this branch has prereleases rather than normal releases. If you want to exit prereleases, run `changeset pre exit` on `release-next`.\n\n\u26a0\ufe0f\u26a0\ufe0f\u26a0\ufe0f\u26a0\ufe0f\u26a0\ufe0f\u26a0\ufe0f\n\n# Releases\n## react-router-dom@6.7.0-pre.5\n\n### Patch Changes\n\n-   Add `unstable_usePrompt` ([#9932](https://github.com/remix-run/react-router/pull/9932))\n-   Updated dependencies:\n    -   `react-router@6.7.0-pre.5`\n\n## react-router-dom-v5-compat@6.7.0-pre.5\n\n### Patch Changes\n\n-   Updated dependencies:\n    -   `react-router-dom@6.7.0-pre.5`\n    -   `react-router@6.7.0-pre.5`\n\n## react-router-native@6.7.0-pre.5\n\n### Patch Changes\n\n-   Updated dependencies:\n    -   `react-router@6.7.0-pre.5`\n\n## react-router@6.7.0-pre.5\n\n\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 40,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2023-01-18T16:30:06Z",
        "closed_at": "2023-01-18T17:56:20Z",
        "merged_at": "2023-01-18T17:56:20Z",
        "body": "Add an unstable version of `usePrompt`.  Behavior gets _very_ weird (and in some cases very wrong across browsers) if users click additional back/forward navigations while a prompt is open and there's nothing we can do about it, but this provides a simpler path than building a custom `useBlocker` modal/inline-prompt.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2023-01-18T14:48:05Z",
        "closed_at": "2023-01-18T21:49:29Z",
        "merged_at": "2023-01-18T21:49:29Z",
        "body": "I thought we had removed all of these but looks like we missed one.  Can't use `instanceof` on non-primitives because depending on how server code is bundles/executed we can end up with an ESM and CJS instance of the class and these checks fail across the boundary.\r\n\r\nCloses https://github.com/remix-run/blues-stack/issues/145",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-01-17T23:23:10Z",
        "closed_at": "2023-01-18T07:00:57Z",
        "merged_at": "2023-01-18T07:00:57Z",
        "body": null,
        "comments": 1
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2023-01-17T16:40:34Z",
        "closed_at": "2023-01-17T17:54:05Z",
        "merged_at": "2023-01-17T17:54:05Z",
        "body": "Fixes a regression in Remix 1.10.0 for CORS requests.  Remix used to reject `OPTIONS` on data requests but allow them on resource requests.  Since we don't distinguish these in `createStaticHandler.queryRoute`, this PR allows `OPTIONS` requests for any usage of `queryRoute`\r\n\r\nCloses: https://github.com/remix-run/remix/issues/5093",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 132,
        "deletions": 21,
        "changed_files": 4,
        "created_at": "2023-01-17T15:26:01Z",
        "closed_at": "2023-01-17T18:58:20Z",
        "merged_at": "2023-01-17T18:58:20Z",
        "body": "Fixes a small 1.10.0 regression in same-origin absolute redirects\r\n\r\nFormer Remix logic: https://github.com/remix-run/remix/blob/%40remix-run/serve%401.7.6/packages/remix-react/routes.tsx#L227\r\n\r\nCloses: https://github.com/remix-run/remix/issues/5117",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 84,
        "deletions": 5,
        "changed_files": 4,
        "created_at": "2023-01-13T17:30:46Z",
        "closed_at": "2023-01-18T19:24:32Z",
        "merged_at": "2023-01-18T19:24:32Z",
        "body": "complimentary work for https://github.com/remix-run/remix/issues/5016\r\n\r\nSigned-off-by: Logan McAnsh <logan@mcan.sh>",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 36,
        "deletions": 7,
        "changed_files": 9,
        "created_at": "2023-01-13T16:44:06Z",
        "closed_at": "2023-01-13T19:15:11Z",
        "merged_at": "2023-01-13T19:15:11Z",
        "body": "This PR was opened by the [Changesets release](https://github.com/changesets/action) GitHub action. When you're ready to do a release, you can merge this and the packages will be published to npm automatically. If you're not ready to do a release yet, that's fine, whenever you add more changesets to release-next, this PR will be updated.\n\n\u26a0\ufe0f\u26a0\ufe0f\u26a0\ufe0f\u26a0\ufe0f\u26a0\ufe0f\u26a0\ufe0f\n\n`release-next` is currently in **pre mode** so this branch has prereleases rather than normal releases. If you want to exit prereleases, run `changeset pre exit` on `release-next`.\n\n\u26a0\ufe0f\u26a0\ufe0f\u26a0\ufe0f\u26a0\ufe0f\u26a0\ufe0f\u26a0\ufe0f\n\n# Releases\n## react-router@6.7.0-pre.2\n\n### Patch Changes\n\n-   update <Await> to accept ReactNode as children function return result ([#9896](https://github.com/remix-run/react-router/pull/9896))\n\n## react-router-dom@6.7.0-pre.2\n\n### Patch Changes\n\n-   Updated dependencies:\n    -   `react-router@6.7.0-pre.2`\n\n## react-router-dom-v5-compat@6.7.0-pre.2\n\n### Patch Changes\n\n-   Updated dependencies:\n    -   `react-router@6.7.0-pre.2`\n    -   `react-router-dom@6.7.0-pre.2`\n\n## react-router-native@6.7.0-pre.2\n\n### Patch Changes\n\n-   Updated dependencies:\n    -   `react-router@6.7.0-pre.2`\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2023-01-13T06:28:51Z",
        "closed_at": "2023-01-13T16:42:45Z",
        "merged_at": "2023-01-13T16:42:45Z",
        "body": null,
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1819,
        "deletions": 2585,
        "changed_files": 29,
        "created_at": "2023-01-12T18:25:48Z",
        "closed_at": "2023-01-19T16:22:12Z",
        "merged_at": "2023-01-19T16:22:12Z",
        "body": "Recreating @SimenB's #9253 because I'm not able to push with a merge from a different branch for some reason...\r\n\r\nAnyways, this updates us to a newer Jest 29 setup and resolves any update conflicts or issues therein. You can read what Simen did in the original PR and this is just a continuation of that.",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-01-12T09:03:59Z",
        "closed_at": "2023-01-12T16:50:14Z",
        "merged_at": "2023-01-12T16:50:14Z",
        "body": "Closes #9891",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-01-12T06:44:44Z",
        "closed_at": "2023-01-12T09:09:46Z",
        "merged_at": "2023-01-12T09:09:46Z",
        "body": "I noticed that the README says \"when v6 is stable\" and... v6 is stable!",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-01-11T23:24:13Z",
        "closed_at": "2023-01-12T02:21:16Z",
        "merged_at": null,
        "body": "I noticed that author forgot to specify \"await\" in code example in the subsection \"Add a loader to the contact page and access data with useLoaderData\" of section \"URL Params in Loaders\"",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-01-11T12:43:32Z",
        "closed_at": "2023-01-11T15:33:03Z",
        "merged_at": "2023-01-11T15:33:03Z",
        "body": null,
        "comments": 3
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-01-11T07:41:36Z",
        "closed_at": "2023-01-11T18:56:48Z",
        "merged_at": "2023-01-11T18:56:47Z",
        "body": "If we use `<a>` tag, we need to add a slash, ortherwise we got /contacts/contacts/2\r\n\r\n<img width=\"613\" alt=\"image\" src=\"https://user-images.githubusercontent.com/5175751/211746394-509dcef7-d804-47e2-907d-1026d5b3fed6.png\">\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 65,
        "deletions": 122,
        "changed_files": 3,
        "created_at": "2023-01-10T01:51:48Z",
        "closed_at": "2023-01-19T17:52:18Z",
        "merged_at": "2023-01-19T17:52:18Z",
        "body": "This is the RR port of remix-run/remix#4473\r\n\r\nBring FormData serialization in line with the spec with respect to File entries in url-encoded payloads: send the `name` as the value, as is the case with a vanilla `<form>` submission.\r\n\r\nRework various 400-error tests not to rely on the old behavior, as it's no longer a bad request :)\r\n\r\nReferences: https://github.com/remix-run/remix/issues/4342\r\nSpec: https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#convert-to-a-list-of-name-value-pairs",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 418,
        "deletions": 9,
        "changed_files": 7,
        "created_at": "2023-01-10T01:11:51Z",
        "closed_at": "2023-01-25T22:46:01Z",
        "merged_at": null,
        "body": "\ud83d\udd08 NOTE: I have two proposed fixes; this is the alternate one, the primary proposal is #9865. This PR is the RR port of https://github.com/remix-run/remix/pull/4475. \ud83d\udd08\r\n\r\nBring `<Form>` submissions in line with the spec with respect to how and where form submitters are serialized within the data set. We accomplish this by constructing the form data set ourselves according to the spec.\r\n\r\nProblems fixed:\r\n1. Serialize submitters in tree order (i.e. where they appear in the DOM)\r\n2. Serialize Image Button submitter correctly (i.e. separate x and y coordinate entries, rather than a single empty entry)\r\n3. Stop sending multiple entries in older WebKit\r\n\r\nNotes: required a couple more jsdom polyfills in order to test it, but we should be able to upgrade and remove those soon \ud83e\udd1e\r\n\r\nReferences: https://github.com/remix-run/remix/issues/4342\r\nSpec: https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#constructing-form-data-set",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 249,
        "deletions": 16,
        "changed_files": 7,
        "created_at": "2023-01-10T01:11:25Z",
        "closed_at": "2023-06-14T21:16:24Z",
        "merged_at": "2023-06-14T21:16:24Z",
        "body": "Now that evergreen browsers [support the submitter parameter](https://developer.mozilla.org/en-US/docs/Web/API/FormData/FormData#browser_compatibility) to the FormData constructor, we can use it to correctly populate the form data set (i.e. ensure submit buttons appear in the right spot, ensure image buttons are encoded correctly).\r\n\r\nFor browsers that don't support it, we continue to just append the submit button's entry to the end, and we also add rudimentary support for image buttons. If developers want full support for legacy browsers, they can use the `formdata-submitter-polyfill`, just as this PR does for the jsdom tests.\r\n\r\nReferences: https://github.com/remix-run/remix/issues/4342\r\nSpec: https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#constructing-form-data-set",
        "comments": 21
    },
    {
        "merged": true,
        "additions": 402,
        "deletions": 472,
        "changed_files": 6,
        "created_at": "2023-01-09T19:32:37Z",
        "closed_at": "2023-01-11T17:19:20Z",
        "merged_at": "2023-01-11T17:19:20Z",
        "body": "* Update the `.github/ISSUE_TEMPLATE/config.yml` configuration to send feature requests through the new Proposal workflow\r\n* Added a new template for documentation issues to add a `[Docs]:` prefix and the `docs` label.  \r\n* Also did some cleanup of the `examples/data-router` app since we link to that from the issue template now",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-01-08T14:17:31Z",
        "closed_at": "2023-01-08T21:32:53Z",
        "merged_at": "2023-01-08T21:32:53Z",
        "body": "This PR fixes a small typo in the last example.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-01-07T08:12:14Z",
        "closed_at": "2023-01-08T01:56:31Z",
        "merged_at": "2023-01-08T01:56:31Z",
        "body": "Since v5 of RR is using `history` package version 4, I think it can be best to link directly to that branch for users to easily navigate.\r\nAlthough this is written in the README of the `history` package, I think people might be confused in finding it :)\r\n\r\nThanks!",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 128,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2023-01-07T07:08:18Z",
        "closed_at": "2023-02-10T14:30:53Z",
        "merged_at": null,
        "body": "[Discussion](https://github.com/remix-run/react-router/discussions/9826) - [Demo Project](https://github.com/rossipedia/rr-module-routes)\r\n\r\nThe `createModuleRoutes()` utility is inspired by the Remix Route module convention. It allows a dev to provide a `module` function on their route that dynamically imports a route module with named exports, instead of explicitly adding those properties to the Route object.\r\n\r\nThat is to say, it turns this:\r\n\r\n```tsx\r\nimport Foo, { fooLoader, fooAction, FooErrorBoundary } from './pages/foo';\r\n\r\n{\r\n  path: \"foo\",\r\n  element: <Foo />,\r\n  loader: fooLoader,\r\n  action: fooAction,\r\n  errorElement: <FooErrorBoundary />,\r\n}\r\n```\r\n\r\ninto this:\r\n\r\n```tsx\r\n{\r\n  path: \"foo\",\r\n  module: () => import('./pages/foo'),\r\n}\r\n```\r\n\r\nAny properties set directly on the route object take precedence over module exports. So if you have specific routes you want to _not_ lazy load the `loader` so it can fetch data as fast as possible, you just specify `loader` directly on the route alongside the `module`, and that will be the loader that gets invoked (the implementation won't even both trying to set up a lazy-loaded `loader` in that case):\r\n\r\n```tsx\r\n{\r\n  path: \"foo\",\r\n  module: () => import('./pages/foo'),\r\n  loader: fooLoader,\r\n}\r\n```\r\n\r\nThe same goes for `action`, `element`\r\n\r\nBy leveraging `import()` and `React.lazy()` the implementation is super straightforward, and practically every build tool and bundler knows how to code-split when it sees that.\r\n\r\nI think this could be useful for a large number of React Router users by providing a \"happy path\" for code-splitting and lazy loading without being too heavy-handed.\r\n\r\nIt can also serve as a foundation for file-based routing plugins for things like Webpack/Vite/Parcel/etc.\r\n\r\nThis gives the developer a lever to pull between:\r\n\r\n- bundling all your loaders in the primary chunk for fastest possible execution of data fetching, at the cost of larger bundle sizes\r\n- lazily loading your loader/action code along with your UI component for smallest initial bundle size at the cost of additional latency when lazy loading the route module code\r\n- or any configuration in between\r\n\r\nWhich I think is very much in the Remix spirit of things :) Feedback welcome!\r\n\r\n---\r\n\r\nPS: I know I probably left out a bunch of stuff (docs/tests/etc), if this is something y'all are interested in merging I'll be sure to flesh out this PR with all those goodies. I also have next to zero experience with React Native, so not sure if this is something useful in that space either.\r\n\r\n\r\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2023-01-07T00:59:56Z",
        "closed_at": "2023-01-11T18:39:14Z",
        "merged_at": "2023-01-11T18:39:14Z",
        "body": "This solves the issue remix-run/remix#5002.\r\n\r\nWith this change, we are able to redirect to URI's like `mailto:mail@example.com` before this change it was not possible because it was interpreted as a relative path.\r\n\r\nThe regex comes from https://stackoverflow.com/a/31991870 and should match all common absolute URLs and URIs including string starting with `//`.\r\n\r\nI tested it with in my own project and it worked like a charm!",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-01-06T22:47:47Z",
        "closed_at": "2023-01-07T04:07:54Z",
        "merged_at": "2023-01-07T04:07:54Z",
        "body": "Assuming `home` isn't meant to be a Promise",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 41,
        "deletions": 70,
        "changed_files": 5,
        "created_at": "2023-01-06T00:11:28Z",
        "closed_at": "2023-01-09T14:53:28Z",
        "merged_at": "2023-01-09T14:53:28Z",
        "body": "Work around the [submitter bug](https://github.com/jsdom/jsdom/issues/3117) in just one place, and link to my [jsdom PR](https://github.com/jsdom/jsdom/pull/3481) which will fix it, so that the workaround can be removed sooner rather than later \ud83e\udd1e\r\n\r\nThis workaround refactor also establishes a pattern for other jsdom bug polyfills which will be landing in forthcoming RR PRs (the bugs aren't relevant in the current test suite, but will be in the PRs \ud83d\ude05)",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 1107,
        "deletions": 21,
        "changed_files": 15,
        "created_at": "2023-01-05T18:30:45Z",
        "closed_at": "2023-01-13T18:07:56Z",
        "merged_at": null,
        "body": "Note: This should target https://github.com/remix-run/react-router/pull/9709 - but the implementation changed drastically after https://github.com/remix-run/react-router/pull/9709/commits/3545cdcc45b08b5ee5f61b37161811ce133be051 - I reviewed the changes and pulled in the bits that still work well with the previous implementation.\r\n\r\nThis PR includes two major fixes for History Blocking that I needed to be able to continue with our React Router migration. Feel free to take them whole-sale or just pick out the pieces you like. I will say the usePrompt logic took me 4/5 days of iterating and thinking hard about the various scenarios. I tried to comment the code well, but let me know if you have any additional questions. \r\n\r\nHere is the behavior usePrompt ended up with - I think it's the best I could do with my approach. To reiterate the issues for what happens if you close a previous prompt with a new back-button click:\r\n\r\nChrome: closes the prompt and triggers the 'shouldBlock' conditional case (window.confirm is false) BUT if it triggers another navigation that event gets dropped on the floor as there is a navigation from the back-button pending.\r\n\r\nSafari: closes the prompt and triggers the 'shouldBlock' conditional case (same as chrome), BUT if it triggers another navigation that event gets queued and handled in addition to the navigation event from the back-button.\r\n\r\nFirefox: stacks the prompts on top of each other and keeps previous prompts suspended. As the user clicks 'OK' or 'Cancel, the correct response is queued and then all prompts resolve when the final one closes, all navigation triggered seem to happen.\r\n\r\nFWIW I think Chrome is the most 'buggy' implementation as it calls a function and drops it on the floor with no error or warning. Both Safari and Firefox have reasonable implementations IMO.\r\n\r\n| prompt state | Chrome | Firefox | Safari | \r\n| ------------------- | ----------- | ---------- | --------- |\r\n| single prompt accepted | works as expected | works as expected |works as expected |\r\n| single prompt rejected | works as expected | works as expected | works as expected | \r\n| multi prompt accepted | will cancel instead| works as expected if user clicks OK on all prompts, else cancel | URL is wrong until user clicks OK and then navigates to the right place |\r\n| multi prompt rejected | works as expected | works as expected | works as expected |\r\n\r\nPlease pull this and play around with it. AFAICT everything is working as it should, but I could easily have missed something. I think if we do end up taking this whole-sale, it would make sense to mark usePrompt and useBlocker as unstable for the first release to work out an kinks. \r\n\r\nLemme know if you have any questions - I'm both here and on Discord,\r\nDevelra",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 43,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2023-01-05T16:10:35Z",
        "closed_at": "2023-01-19T21:29:53Z",
        "merged_at": "2023-01-19T21:29:53Z",
        "body": "Currently when using `react-router-dom-v5-compat`'s `CompatRouter` with SSR, you get this fun React warning in your console:\r\n\r\n![Warning: useLayoutEffect does nothing on the server, because its effect cannot be encoded into the server renderer's output format. This will lead to a mismatch between the initial, non-hydrated UI and the intended UI. To avoid this, useLayoutEffect should only be used in components that render exclusively on the client. See https://reactjs.org/link/uselayouteffect-ssr for common fixes.](https://user-images.githubusercontent.com/12396812/210826274-14e619e3-9b15-4adc-9a04-dfec1c789c67.png)\r\n\r\nThis is something my team has ignored, but it's pretty obnoxious. Additionally, [even Ryan](https://twitter.com/ryanflorence/status/1610499820502011911) believes this warning is unnecessary.\r\n\r\nThis PR simply adds a fix [previous React core team member Bri implemented](https://github.com/bvaughn/react-resizable-panels/blob/main/packages/react-resizable-panels/src/hooks/useIsomorphicEffect.ts), as well as a test to verify that warning does not show up in a jest node environment\r\n\r\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 78,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2023-01-04T22:28:25Z",
        "closed_at": "2023-01-11T19:31:32Z",
        "merged_at": "2023-01-11T19:31:32Z",
        "body": "This Pull request fix issue #9577 ",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 184,
        "deletions": 62,
        "changed_files": 11,
        "created_at": "2023-01-04T22:12:31Z",
        "closed_at": "2023-01-11T18:05:23Z",
        "merged_at": "2023-01-11T18:05:23Z",
        "body": "Fixing an oversight from https://github.com/remix-run/react-router/pull/9682/files#r1040159998.  Now `URL` creation is driven by `history.createURL` so we have clear boundaries between memory versus browser cases.\r\n\r\nCloses #9796",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 159,
        "deletions": 87,
        "changed_files": 7,
        "created_at": "2023-01-04T21:10:43Z",
        "closed_at": "2023-01-11T20:53:18Z",
        "merged_at": "2023-01-11T20:53:18Z",
        "body": "this PR adds commenting directly to the release workflow instead of waiting for any tag events to fire",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 56,
        "deletions": 51,
        "changed_files": 8,
        "created_at": "2023-01-03T22:19:38Z",
        "closed_at": "2023-01-04T16:50:17Z",
        "merged_at": "2023-01-04T16:50:17Z",
        "body": "We found a useId mismatch when testing Remix `1.10.0-pre.5`.  It came down to 2 separate issues:\r\n\r\n* The presence of an additional `<DataStaticRouterContext>` during SSR.  This has now been collapsed into an optional `staticContext` field on `<DataRouterContext>`\r\n* An extra fragment and `<script>`/`null` in `StaticRouterProvider` that were not reflected in `RouterProvider`",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 58,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-01-03T16:52:32Z",
        "closed_at": "2023-01-03T18:56:57Z",
        "merged_at": "2023-01-03T18:56:57Z",
        "body": "I was tracking down a bug and to make sure it wasn't a bug in `react-router` I looked for tests of `useNavigate`.\r\nI saw there is no test of `useNavigate` that expects `navigate` to clear the query string.\r\n\r\nThat's it. This PR just add a single test.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 226,
        "deletions": 20,
        "changed_files": 4,
        "created_at": "2022-12-22T14:58:15Z",
        "closed_at": "2022-12-22T17:28:00Z",
        "merged_at": "2022-12-22T17:28:00Z",
        "body": "Closes issue reported in Discord with Remix `1.10.0-pre.1`",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 59,
        "deletions": 7,
        "changed_files": 3,
        "created_at": "2022-12-21T20:45:22Z",
        "closed_at": "2022-12-22T18:41:06Z",
        "merged_at": "2022-12-22T18:41:06Z",
        "body": "Closes #9333\r\n\r\nThe tl;dr; is that there was a fix a long time ago to differentiate between action redirects and action reloads, but it gave false negatives if you redirected to the same location.  We have a `state._isRedirect` flag now that allows us to avoid this ",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 108,
        "deletions": 23,
        "changed_files": 3,
        "created_at": "2022-12-20T22:24:29Z",
        "closed_at": "2023-01-11T18:06:07Z",
        "merged_at": "2023-01-11T18:06:07Z",
        "body": "Closes #9736",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 379,
        "deletions": 65,
        "changed_files": 6,
        "created_at": "2022-12-20T02:16:00Z",
        "closed_at": "2023-01-11T18:02:03Z",
        "merged_at": "2023-01-11T18:02:02Z",
        "body": null,
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-12-17T19:19:20Z",
        "closed_at": "2022-12-18T04:20:46Z",
        "merged_at": "2022-12-18T04:20:46Z",
        "body": "This PR fixes #9746 ",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 18,
        "deletions": 15,
        "changed_files": 7,
        "created_at": "2022-12-16T14:46:23Z",
        "closed_at": "2022-12-16T18:26:32Z",
        "merged_at": "2022-12-16T18:26:32Z",
        "body": "Stabilize these API's now that we've got them wired up in Remix",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 422,
        "deletions": 58,
        "changed_files": 7,
        "created_at": "2022-12-15T22:55:56Z",
        "closed_at": "2022-12-16T19:01:02Z",
        "merged_at": "2022-12-16T19:01:02Z",
        "body": "Matches Remix behavior since `loaderData` is not reliable in `errorElements` since we haven't revalidated the data",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 273,
        "deletions": 23,
        "changed_files": 6,
        "created_at": "2022-12-15T22:38:44Z",
        "closed_at": "2022-12-16T18:25:20Z",
        "merged_at": "2022-12-16T18:25:20Z",
        "body": "Bug fixes for PUSH/REPLACE logic for action submissions.  The goal here is to be smart _only when the user doesn't explicitly provide a `replace` value_.  Currently we were missing respecting `replace:false` in the non-redirect scenario, so that is fixed in this PR.\r\n\r\nFurthermore, the new default logic is based on the location _after_ the submission.  If that location (be it from the `formAction` or from a `redirect`) is the same as the current location, then we'll `REPLACE`, otherwise we'll `PUSH`",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-12-14T21:29:30Z",
        "closed_at": "2022-12-15T08:31:44Z",
        "merged_at": null,
        "body": "I follow step by step tutorial and on the last step I receive syntax error. \r\n\r\nWe also need to import \"RouterProvider\" and \"Router\" to main.jsx\r\n\r\nIts my first pull request, so sorry, if something wrong.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 47,
        "deletions": 10,
        "changed_files": 11,
        "created_at": "2022-12-14T20:21:03Z",
        "closed_at": "2022-12-14T22:01:10Z",
        "merged_at": "2022-12-14T22:01:10Z",
        "body": "This PR was opened by the [Changesets release](https://github.com/changesets/action) GitHub action. When you're ready to do a release, you can merge this and the packages will be published to npm automatically. If you're not ready to do a release yet, that's fine, whenever you add more changesets to release-next, this PR will be updated.\n\n\u26a0\ufe0f\u26a0\ufe0f\u26a0\ufe0f\u26a0\ufe0f\u26a0\ufe0f\u26a0\ufe0f\n\n`release-next` is currently in **pre mode** so this branch has prereleases rather than normal releases. If you want to exit prereleases, run `changeset pre exit` on `release-next`.\n\n\u26a0\ufe0f\u26a0\ufe0f\u26a0\ufe0f\u26a0\ufe0f\u26a0\ufe0f\u26a0\ufe0f\n\n# Releases\n## react-router@6.5.0-pre.1\n\n### Patch Changes\n\n-   Updated dependencies:\n    -   `@remix-run/router@1.1.0-pre.1`\n\n## react-router-dom@6.5.0-pre.1\n\n### Patch Changes\n\n-   Updated dependencies:\n    -   `@remix-run/router@1.1.0-pre.1`\n    -   `react-router@6.5.0-pre.1`\n\n## react-router-dom-v5-compat@6.5.0-pre.1\n\n### Patch Changes\n\n-   Updated dependencies:\n    -   `react-router@6.5.0-pre.1`\n    -   `react-router-dom@6.5.0-pre.1`\n\n## react-router-native@6.5.0-pre.1\n\n### Patch Changes\n\n-   Updated dependencies:\n    -   `react-router@6.5.0-pre.1`\n\n## @remix-run/router@1.1.0-pre.1\n\n### Patch Changes\n\n-   Fix issue with deeply nested optional segments ([#9727](https://github.com/remix-run/react-router/pull/9727))\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 266,
        "deletions": 21,
        "changed_files": 3,
        "created_at": "2022-12-13T22:44:40Z",
        "closed_at": "2022-12-14T20:19:59Z",
        "merged_at": "2022-12-14T20:19:59Z",
        "body": "Found an issue with >2 optional nested segments due to the ordering in which we recombined the exploded paths.\r\n\r\nThe setup causing this was:\r\n\r\n```jsx\r\n<Route path=\"dashboard\">\r\n  <Route path=\":widget1?\"> \r\n    <Route path=\":widget2?\">\r\n      <Route path=\":widget3?\">\r\n```\r\n\r\nWhen we had 2 levels of nesting (which we have tests for) everythings fine.  But once you get a third level and we get another level of recursion, we were incorrectly combining the results such that child routes interspersed prior to parent routes and we got `/dashboard/:widget2` coming _before_ `/dashboard/:widget1`",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 21,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2022-12-12T16:33:41Z",
        "closed_at": "2022-12-13T15:34:39Z",
        "merged_at": "2022-12-13T15:34:39Z",
        "body": "Follow up to #9660 to ensure we proxy the `request.headers` from the action request.  For document requests during SSR we also persist the method since it's a single `POST` `request`, unlike during CSR when the revalidations are separate GET requests.  This matches Remix behavior in 1.7.6 but going to confirm.\r\n\r\nRemix PR: https://github.com/remix-run/remix/pull/4829",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-12-11T21:29:28Z",
        "closed_at": "2022-12-12T15:55:21Z",
        "merged_at": null,
        "body": "I was thinking if the other two type declarations (To and RelativeRoutingType) also needs to be mentioned, it provides more and clear understanding from the same page. ",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2022-12-09T08:10:12Z",
        "closed_at": "2022-12-09T10:06:31Z",
        "merged_at": "2022-12-09T10:06:31Z",
        "body": "This example does not import `Route`",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 4622,
        "deletions": 31,
        "changed_files": 31,
        "created_at": "2022-12-08T20:18:02Z",
        "closed_at": "2023-01-13T21:22:11Z",
        "merged_at": "2023-01-13T21:22:11Z",
        "body": "This PR adds support for low-level blocking of navigations within the app's location origin via `unstable_useBlocker`. We are confident in this approach but wanted to initially release it under a flag to give users an opportunity to test and provide feedback.\r\n\r\nIn addition, I added an options parameter to `useBeforeUnload` so that users can have more control over how that event listener behaves when dealing with cross-origin navigations.\r\n\r\nCloses https://github.com/remix-run/react-router/issues/8139.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 68,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2022-12-07T20:58:57Z",
        "closed_at": "2022-12-13T15:11:49Z",
        "merged_at": "2022-12-13T15:11:49Z",
        "body": "Pointed to `main` just for now, need to check on timing of the next minor or if this should go as a patch\r\n\r\nCloses https://github.com/remix-run/remix/issues/4791",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 87,
        "deletions": 43,
        "changed_files": 4,
        "created_at": "2022-12-06T21:19:19Z",
        "closed_at": "2022-12-07T22:16:57Z",
        "merged_at": "2022-12-07T22:16:57Z",
        "body": null,
        "comments": 1
    },
    {
        "merged": true,
        "additions": 21,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2022-12-06T15:30:03Z",
        "closed_at": "2022-12-06T16:38:44Z",
        "merged_at": "2022-12-06T16:38:44Z",
        "body": "When using `@remix-run/router` for server-side data fetching, we seem to get different `Response` instances from a `return fetch(...)` in a `loader`/`action`.  ~~I'm not entirely sure _why_ yet since we polyfill all `fetch`/`Request`/`Response` globals, but the `instanceof Response` checks were failing.  Copied the same `isResponse` method used in Remix and replaced all checks with that.~~\r\n\r\nI think the underlying cause here is that our `loader` is built via ESM and uses the ESM version of the fetch polyfills, but `@remix-run/server-runtime` + `@remix-run/router` are runningin node and therefore using the CJS versions of the fetch polyfills.  Hence the `instanceof` failing.\r\n\r\nCloses https://github.com/remix-run/remix/issues/4741",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 19,
        "deletions": 19,
        "changed_files": 3,
        "created_at": "2022-12-06T14:31:15Z",
        "closed_at": "2022-12-06T16:33:35Z",
        "merged_at": "2022-12-06T16:33:35Z",
        "body": "Ran into issues with our `URL` creation fix with Remix integration tests using a `test://test.com` base, so re-thought the approach a bit.  We were sort of conflating 2 things - whether a redirect was _external_ and whether it was _absolute_.  In both cases we want to skip the relative redirect logic, but we do not need to check for external on the server since the browser will handle redirecting to the external domain.  Instead, we can do a simpler `isAbsolute` check in shared code (no `URL` creation required) and limit our `isExternal` check to client side code where we can more reliably create URLs with `window.location.origin`\r\n\r\nFollow up to https://github.com/remix-run/react-router/pull/9682\r\nCloses https://github.com/remix-run/remix/issues/4740",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 400,
        "deletions": 38,
        "changed_files": 2,
        "created_at": "2022-12-06T00:09:55Z",
        "closed_at": "2022-12-07T20:34:14Z",
        "merged_at": "2022-12-07T20:34:14Z",
        "body": "#9650 added support for matching routes with optional path segments, but did not work for nested routes.\r\nThis PR fixes that.\r\n\r\nIt also refactors the approach to explicitly \"explode\" a path with optional path segments into the equivalent set of valid combinations of paths without optional segments (see `explodeOptionalSegments` jsdoc for an example). The paths are \"exploded\" prior to creating the route metadata, which means that when the route metadata gets initialized its already correct. Previously, we needed to surgically modify route metadata for a branch (which we were only handling correctly for unnested routes).",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 62,
        "deletions": 39,
        "changed_files": 6,
        "created_at": "2022-12-05T21:06:24Z",
        "closed_at": "2022-12-05T22:23:58Z",
        "merged_at": "2022-12-05T22:23:58Z",
        "body": "We ran into an issue in Remix 1.8.0 where the static handler was failing to create a `new URL()` in Cloudflare pages.  This is because we ended up trying to share some code to create `URL` instances that should have been client-only in the static handler.  This PR updates our code to prefer creating `URL`s from `Request`s (which will always have origins) where possible via `new URL(request.url)` and makes it more explicit where we need to create client-side `URL`/`Request` instances.\r\n\r\nCloses https://github.com/remix-run/remix/issues/4740\r\n\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-12-05T20:14:44Z",
        "closed_at": "2022-12-05T21:16:05Z",
        "merged_at": "2022-12-05T21:16:05Z",
        "body": null,
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-12-05T14:15:28Z",
        "closed_at": "2022-12-05T18:20:43Z",
        "merged_at": "2022-12-05T18:20:43Z",
        "body": "Bumps [dessant/support-requests](https://github.com/dessant/support-requests) from 2 to 3.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/dessant/support-requests/releases\">dessant/support-requests's releases</a>.</em></p>\n<blockquote>\n<h2>v3.0.0</h2>\n<p>Learn more about this release from the <a href=\"https://github.com/dessant/support-requests/blob/master/CHANGELOG.md#changelog\">changelog</a>.</p>\n<h2>v2.1.2</h2>\n<p>Learn more about this release from the <a href=\"https://github.com/dessant/support-requests/blob/master/CHANGELOG.md#changelog\">changelog</a>.</p>\n<h2>v2.1.1</h2>\n<p>Learn more about this release from the <a href=\"https://github.com/dessant/support-requests/blob/master/CHANGELOG.md#changelog\">changelog</a>.</p>\n<h2>v2.1.0</h2>\n<p>Learn more about this release from the <a href=\"https://github.com/dessant/support-requests/blob/master/CHANGELOG.md#changelog\">changelog</a>.</p>\n<h2>v2.0.1</h2>\n<p>Learn more about this release from the <a href=\"https://github.com/dessant/support-requests/blob/master/CHANGELOG.md#changelog\">changelog</a>.</p>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/dessant/support-requests/blob/master/CHANGELOG.md\">dessant/support-requests's changelog</a>.</em></p>\n<blockquote>\n<h3><a href=\"https://github.com/dessant/support-requests/compare/v2.1.1...v2.1.2\">2.1.2</a> (2021-10-02)</h3>\n<h3><a href=\"https://github.com/dessant/support-requests/compare/v2.1.0...v2.1.1\">2.1.1</a> (2021-07-09)</h3>\n<h3>Bug Fixes</h3>\n<ul>\n<li>update GitHub API calls (<a href=\"https://github.com/dessant/support-requests/commit/fa1e92b447253f0739c784bec76cff1ffca26a74\">fa1e92b</a>)</li>\n</ul>\n<h2><a href=\"https://github.com/dessant/support-requests/compare/v2.0.1...v2.1.0\">2.1.0</a> (2021-07-09)</h2>\n<h3>Features</h3>\n<ul>\n<li>default <code>github-token</code> to <code>github.token</code> (<a href=\"https://github-redirect.dependabot.com/dessant/support-requests/issues/7\">#7</a>) (<a href=\"https://github.com/dessant/support-requests/commit/731cce00ca4b42a6ffd5daf63d11386d592c6567\">731cce0</a>)</li>\n<li>document the use of personal access tokens (<a href=\"https://github.com/dessant/support-requests/commit/6ba0377537d5719b6b907feabd5e5e3057321cee\">6ba0377</a>)</li>\n</ul>\n<h3>Bug Fixes</h3>\n<ul>\n<li>declare required permissions (<a href=\"https://github.com/dessant/support-requests/commit/692a08a4e543e181bc7feb42e2c7c7fe1b3c9d08\">692a08a</a>)</li>\n<li>lock temporarily unlocked issues even after an error (<a href=\"https://github.com/dessant/support-requests/commit/182adbde03cf78d5a21b696ed2023a2c3d7197c7\">182adbd</a>)</li>\n</ul>\n<h3><a href=\"https://github.com/dessant/support-requests/compare/v2.0.0...v2.0.1\">2.0.1</a> (2021-01-01)</h3>\n<h3>Bug Fixes</h3>\n<ul>\n<li>update dependencies (<a href=\"https://github.com/dessant/support-requests/commit/f502ca66a0381e462f29149e7e0b41eae901fc61\">f502ca6</a>)</li>\n</ul>\n<h2><a href=\"https://github.com/dessant/support-requests/compare/v1.0.1...v2.0.0\">2.0.0</a> (2020-08-24)</h2>\n<h3>\u26a0 BREAKING CHANGES</h3>\n<ul>\n<li>The deployment method and configuration options have changed.</li>\n</ul>\n<h3>Features</h3>\n<ul>\n<li>move to GitHub Actions (<a href=\"https://github.com/dessant/support-requests/commit/4777aa0377f867dbeb97eccd63414255a1fc739a\">4777aa0</a>)</li>\n</ul>\n<h3><a href=\"https://github.com/dessant/support-requests/compare/v1.0.0...v1.0.1\">1.0.1</a> (2019-10-25)</h3>\n<h3>Bug Fixes</h3>\n<ul>\n<li>update dependencies (<a href=\"https://github.com/dessant/support-requests/commit/7372f4f530e0c33f1d20a91ec3ee54adf137ea35\">7372f4f</a>)</li>\n</ul>\n<h2><a href=\"https://github.com/dessant/support-requests/compare/v0.4.3...v1.0.0\">1.0.0</a> (2019-06-10)</h2>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/dessant/support-requests/commit/b1303caf4438e66dea1130aa4c30189dc28e690d\"><code>b1303ca</code></a> chore(release): 3.0.0</li>\n<li><a href=\"https://github.com/dessant/support-requests/commit/d40910dc927308b57f739e1208a98dc383a7c33e\"><code>d40910d</code></a> fix: update docs</li>\n<li><a href=\"https://github.com/dessant/support-requests/commit/12a7f0c8c8e803e00f59f98415419fff14c6ead8\"><code>12a7f0c</code></a> chore: update workflow</li>\n<li><a href=\"https://github.com/dessant/support-requests/commit/6b0c3a2d3c407ffd8b98d3ec255ac80ed8c95fd7\"><code>6b0c3a2</code></a> chore: update package</li>\n<li><a href=\"https://github.com/dessant/support-requests/commit/98a49e5fe14d2ac577c5040929acade12296b906\"><code>98a49e5</code></a> fix: update dependencies</li>\n<li>See full diff in <a href=\"https://github.com/dessant/support-requests/compare/v2...v3\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=dessant/support-requests&package-manager=github_actions&previous-version=2&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 144,
        "deletions": 6,
        "changed_files": 5,
        "created_at": "2022-12-03T01:15:31Z",
        "closed_at": "2023-05-25T17:12:36Z",
        "merged_at": null,
        "body": "This PR brings these hooks in line with what we have in the Remix repo\r\n\r\n---\r\n\r\n#9669 needs to be merged first",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2022-12-03T00:47:48Z",
        "closed_at": "2023-05-25T17:12:22Z",
        "merged_at": null,
        "body": "This PR brings these functions in line with what we have in the Remix repo",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 629,
        "deletions": 88,
        "changed_files": 17,
        "created_at": "2022-12-01T18:47:26Z",
        "closed_at": "2022-12-15T22:35:17Z",
        "merged_at": "2022-12-15T22:35:17Z",
        "body": "* [x] Changeset\r\n* [x] Unit tests",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 94,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2022-11-30T15:38:10Z",
        "closed_at": "2022-11-30T21:17:52Z",
        "merged_at": "2022-11-30T21:17:52Z",
        "body": "Loader revalidation requests after an action were being passed the same request used for the action, which was still a `POST` with `formData`.  Loaders should be receiving a `GET` request without the body",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 60,
        "deletions": 31,
        "changed_files": 1,
        "created_at": "2022-11-30T15:27:49Z",
        "closed_at": "2022-11-30T18:43:25Z",
        "merged_at": null,
        "body": null,
        "comments": 3
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-11-29T11:03:16Z",
        "closed_at": "2022-11-29T17:08:54Z",
        "merged_at": "2022-11-29T17:08:54Z",
        "body": null,
        "comments": 4
    },
    {
        "merged": true,
        "additions": 248,
        "deletions": 5,
        "changed_files": 5,
        "created_at": "2022-11-29T10:26:24Z",
        "closed_at": "2022-11-30T15:26:12Z",
        "merged_at": "2022-11-30T15:26:12Z",
        "body": "Closes: https://github.com/remix-run/react-router/discussions/9550\r\n\r\nAllows optional params and optional static segments\r\n\r\n### Optional params examples\r\n`:lang?/about` will get expanded matched with\r\n\r\n```\r\n/:lang/about\r\n/about\r\n```\r\n\r\n`/multistep/:widget1?/widget2?/widget3?`\r\nWill get expanded matched with:\r\n```\r\n/multistep\r\n/multistep/:widget1\r\n/multistep/:widget1/:widget2\r\n/multistep/:widget1/:widget2/:widget3\r\n```\r\n\r\n### Same with static segments\r\n\r\n`/fr?/about` will get expanded and matched with:\r\n\r\n```\r\n/about\r\n/fr/about\r\n```\r\n\r\n### Context\r\nCode was added at the point of `flattenRoutes`\r\n\r\n### Feedback required\r\nShould we allow intercalated situations? currently:\r\n`/one/:two?/three/four?` gets matched with:\r\n```\r\n/one/:two/three\r\n/one/:two/three/:four\r\n```\r\n",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 38,
        "deletions": 38,
        "changed_files": 10,
        "created_at": "2022-11-28T00:41:39Z",
        "closed_at": "2022-11-28T18:02:47Z",
        "merged_at": "2022-11-28T18:02:47Z",
        "body": "Follow-up of #9643",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 27,
        "deletions": 26,
        "changed_files": 6,
        "created_at": "2022-11-27T10:03:51Z",
        "closed_at": "2022-11-27T18:59:08Z",
        "merged_at": "2022-11-27T18:59:08Z",
        "body": "**Previous behavior**\r\n* Links on the issue and feature request templates errored with a `404`\r\n* Links on the JS docs on certain components, hooks and utils errored with a `404`\r\n\r\n**New behavior**\r\n* Updated links to up-to-date ones, mainly a change from `v6` to `main` as provided in https://reactrouter.com/en/main",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2022-11-27T07:11:48Z",
        "closed_at": "2023-01-09T22:34:22Z",
        "merged_at": null,
        "body": null,
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-11-26T14:03:58Z",
        "closed_at": "2022-11-26T18:51:35Z",
        "merged_at": "2022-11-26T18:51:35Z",
        "body": "Currently the highlighting on https://reactrouter.com/en/dev/routers/create-hash-router does not make sense to me:\r\n\r\n![image](https://user-images.githubusercontent.com/1621335/204092623-b75caf38-3ed7-4001-8c2b-e81f93d2cbc4.png)\r\n\r\nI think that it would be better to highlight line 4 instead of 3 and 7.\r\n\r\nI wasn't able to figure out how to build the docs portal to verify my changes.\r\n\r\nI hope my contribution would be helpful.  Thank you for considering it.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 27,
        "deletions": 35,
        "changed_files": 2,
        "created_at": "2022-11-22T22:55:25Z",
        "closed_at": "2023-01-19T18:20:47Z",
        "merged_at": null,
        "body": "Just like #9624, but for `@remix-run/router` instead of `react-router`\r\n\r\n> I could have gone with `Omit`, which would be less code, but I like the explicitness of `Pick` more in these cases",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 63,
        "deletions": 57,
        "changed_files": 2,
        "created_at": "2022-11-22T22:55:14Z",
        "closed_at": "2023-01-19T18:19:47Z",
        "merged_at": null,
        "body": "I could have gone with `Omit`, which would be less code, but I like the explicitness of `Pick` more in these cases",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-11-22T06:59:20Z",
        "closed_at": "2022-11-22T14:07:32Z",
        "merged_at": null,
        "body": "`children?: undefined;`, It makes no sense and  prevents us from extend `RouteObject`\r\n\r\nlike this commit: [https://github.com/remix-run/react-router/issues/9427#issuecomment-1321100691](https://github.com/remix-run/react-router/issues/9427#issuecomment-1321100691)\r\n\r\n<img width=\"363\" alt=\"Screenshot 2022-11-22 at 15 03 58\" src=\"https://user-images.githubusercontent.com/12867278/203247204-f4e81aee-5797-4cc1-aec8-ed4105e94f05.png\">\r\n\r\nexample code:\r\n```\r\ninterface TestA {\r\n    path: string;\r\n    children?: undefined;\r\n}\r\n\r\ninterface TestB {\r\n    path: string;\r\n    children?: TestC[];\r\n}\r\n\r\ntype TestC = TestA | TestB;\r\n\r\ntype Customer = TestC & {\r\n    authority?: string;\r\n    children?: Customer[]\r\n}\r\n\r\nlet data: Customer[] = [\r\n    {\r\n        path: '/',\r\n        authority: '123',\r\n        children: [\r\n            {\r\n                path: '/',\r\n                authority: 'admin' // The expected type comes from property 'children' which is declared here on type 'Customer'\r\n            }\r\n        ]\r\n    }\r\n]\r\n```",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-11-21T15:30:59Z",
        "closed_at": "2022-11-21T19:18:52Z",
        "merged_at": null,
        "body": "Made more clear with more specific example of the location instead of three dots.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2022-11-21T08:34:35Z",
        "closed_at": "2022-11-21T16:54:44Z",
        "merged_at": null,
        "body": "\r\n![tutorial-image](https://user-images.githubusercontent.com/112726943/203003073-c116ff60-bed9-4c90-94de-2088f1449ce5.png)\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-11-18T04:49:18Z",
        "closed_at": "2022-11-18T08:03:44Z",
        "merged_at": "2022-11-18T08:03:44Z",
        "body": "This PR fixes the link to `useSubmit` that's currently broken on the page https://reactrouter.com/en/main/route/should-revalidate.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 128,
        "deletions": 18,
        "changed_files": 3,
        "created_at": "2022-11-17T19:42:07Z",
        "closed_at": "2022-12-02T18:56:00Z",
        "merged_at": null,
        "body": "It seems like when these functions were created, they were not added to the list of exports in the compatibility package.\r\n\r\nThis PR re-exports the following from the `react-router-dom-v5-compat` package.\r\n\r\n### Additions\r\n\r\n**Types:**\r\n\r\n- ActionFunction\r\n- ActionFunctionArgs\r\n- AwaitProps\r\n- DataRouteMatch\r\n- DataRouteObject\r\n- Fetcher\r\n- FormEncType\r\n- FormMethod\r\n- IndexRouteObject\r\n- JsonFunction\r\n- LoaderFunction\r\n- LoaderFunctionArgs\r\n- Navigation\r\n- NonIndexRouteObject\r\n- ParamKeyValuePair\r\n- PathPattern\r\n- RedirectFunction\r\n- RelativeRoutingType\r\n- RouterProviderProps\r\n- ShouldRevalidateFunction\r\n- SubmitOptions\r\n- URLSearchParamsInit\r\n\r\n**Classes**\r\n\r\n- AbortedDeferredError\r\n\r\n**Components**\r\n\r\n- RouterProvider\r\n\r\n**Routers**\r\n\r\n- createBrowserRouter\r\n- createHashRouter\r\n- createMemoryRouter\r\n\r\n**Hooks**\r\n\r\n- useActionData\r\n- useAsyncError\r\n- useAsyncValue\r\n- useLoaderData\r\n- useMatches\r\n- useNavigation\r\n- useRevalidator\r\n- useRouteError\r\n- useRouteLoaderData\r\n\r\n**Utilities**\r\n\r\n- Await\r\n- createRoutesFromElements\r\n- defer\r\n- isRouteErrorResponse\r\n- json\r\n- redirect\r\n",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 192,
        "deletions": 62,
        "changed_files": 5,
        "created_at": "2022-11-16T04:19:14Z",
        "closed_at": "2022-11-16T19:41:22Z",
        "merged_at": null,
        "body": "I want to check and analyze the code",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 8644,
        "deletions": 4481,
        "changed_files": 168,
        "created_at": "2022-11-16T04:05:30Z",
        "closed_at": "2022-11-16T08:03:12Z",
        "merged_at": null,
        "body": "its for educational purpose",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 360,
        "deletions": 70,
        "changed_files": 5,
        "created_at": "2022-11-15T16:38:12Z",
        "closed_at": "2022-11-23T21:26:11Z",
        "merged_at": "2022-11-23T21:26:11Z",
        "body": "Per the spec, [307](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/307) and [308](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/308) redirects should preserve the HTTP method and request body and re-submit to the new location.  The spec is ambiguous for 301/302/303 so those will still always redirect using `GET`.\r\n\r\nCloses https://github.com/remix-run/remix/issues/4356",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 159,
        "deletions": 14,
        "changed_files": 6,
        "created_at": "2022-11-14T22:59:28Z",
        "closed_at": "2022-11-23T20:58:41Z",
        "merged_at": "2022-11-23T20:58:41Z",
        "body": "Handles serialization/deserialization of `ErrorResponse` objects as mentioned in #9537",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-11-14T22:52:13Z",
        "closed_at": "2022-11-15T06:21:17Z",
        "merged_at": "2022-11-15T06:21:17Z",
        "body": "closing tag is also counted)",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 154,
        "deletions": 18,
        "changed_files": 7,
        "created_at": "2022-11-14T22:07:18Z",
        "closed_at": "2022-11-23T20:39:30Z",
        "merged_at": "2022-11-23T20:39:30Z",
        "body": "Adds support for `basename` to static data routers.  We accept it up front in `createStaticHandler`, and then persist it through `createStaticRouter`/`StaticRouterPRovider`\r\n\r\nSample usage:\r\n\r\n```jsx\r\nlet { query } = createStaticHandler(routes, { basename: '/base '});\r\nlet context = await query(request);\r\nlet router = createStaticRouter(routes, context);\r\n\r\nreturn ReactDOMServer.renderToString(\r\n  <StaticRouterProvider router={router} context={context} />\r\n);\r\n```",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 137,
        "deletions": 37,
        "changed_files": 5,
        "created_at": "2022-11-14T20:05:10Z",
        "closed_at": "2022-11-23T21:00:58Z",
        "merged_at": "2022-11-23T21:00:58Z",
        "body": "Properly handle external redirects from actions and loaders:\r\n\r\n```js\r\nfunction loader() {\r\n  if (condition) {\r\n    return redirect(\"https://otherdomain.com/path\");\r\n  }\r\n  ...\r\n}\r\n```\r\n\r\nClient-side we detect and process these via `window.location.replace` like we do in Remix currently.  In SSR scenarios we return the redirect location untouched.\r\n\r\nThis fixes an issue discovered while testing the \"Remix on React Router 6.4\" work (https://github.com/remix-run/remix/issues/4570)",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 206,
        "deletions": 20,
        "changed_files": 12,
        "created_at": "2022-11-14T18:35:26Z",
        "closed_at": "2022-11-18T14:52:41Z",
        "merged_at": "2022-11-18T14:52:41Z",
        "body": "Need to re-encode the pathname fields on internal matches for proper matching in descendant routes\r\n\r\nCloses #9580, #9604",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 29,
        "deletions": 18,
        "changed_files": 2,
        "created_at": "2022-11-08T19:32:00Z",
        "closed_at": "2023-01-19T19:16:44Z",
        "merged_at": null,
        "body": "First pass based on https://github.com/remix-run/react-router/discussions/9495. @ryanflorence will have feedback and I'm sure it'll change.\r\n\r\n`useScrollRestoration` (and `<ScrollRestoration />`, which relies on it) only allows scroll restoration at the `window` level. This does not work if the scrolling container is something other than the full page, e.g., a 2x2 grid layout where the bottom right cell is the scrolling content pane. This change preserves the current API and behavior of `useScrollRestoration` while adding a new hook `useElementScrollRestoration`, which allows the caller to specify the ID of the scrolling container to use instead of `window`.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-11-08T14:33:08Z",
        "closed_at": "2022-11-23T22:45:44Z",
        "merged_at": "2022-11-23T22:45:44Z",
        "body": "Just like we did in https://github.com/remix-run/remix/pull/4083",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 52,
        "deletions": 46,
        "changed_files": 4,
        "created_at": "2022-11-08T14:31:22Z",
        "closed_at": "2022-11-23T22:44:56Z",
        "merged_at": "2022-11-23T22:44:56Z",
        "body": "Update Action dependencies + bring in line with the ones from https://github.com/remix-run/remix/tree/main/.github/workflows",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-11-06T19:05:00Z",
        "closed_at": "2022-11-07T04:53:36Z",
        "merged_at": null,
        "body": "jk",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2022-11-04T11:59:32Z",
        "closed_at": "2022-11-04T16:43:24Z",
        "merged_at": "2022-11-04T16:43:24Z",
        "body": "The `defer` and `useAsyncValue` links presumably linked to old urls. I believe these are the correct locations.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-11-02T15:46:30Z",
        "closed_at": "2022-11-18T14:50:33Z",
        "merged_at": "2022-11-18T14:50:33Z",
        "body": null,
        "comments": 2
    },
    {
        "merged": false,
        "additions": 39,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2022-11-01T16:23:46Z",
        "closed_at": "2023-01-09T23:11:11Z",
        "merged_at": null,
        "body": "Thanks to the functionality users can write their `proxy` routes like the following:\r\ncurrent:\r\n`/path/:param1/subpath/:param2`\r\n\r\nnavigate to:\r\n`/newpath/:param1/newsubpath/:param2`\r\n\r\nIt also helps to find routes because you may find the route definition just by text `/user/:id` instead of preparing `/user/${id}` for the search.\r\n\r\nMy main reason of the functionality is to make proxies like in the test.\r\nI want to cut off the history by proxying to the app from outside. \r\nThe following code\r\n```jsx\r\n<Route path=\"proxy/to/:somewhere\" element={<Navigate replace autoSubstitute to=\":somewhere\" />} />\r\n```\r\nwill satisfy me.\r\n\r\nI'm open to discuss the new parameter or move it into `useNavigate` if you want.\r\nThanks!",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-10-30T17:53:08Z",
        "closed_at": "2022-10-31T14:48:56Z",
        "merged_at": null,
        "body": "Corrected 1 typo",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-10-30T05:20:39Z",
        "closed_at": "2023-01-19T18:51:40Z",
        "merged_at": "2023-01-19T18:51:40Z",
        "body": "Fixes #9463 \r\n\r\nhere is the [codesandbox](https://codesandbox.io/s/react-router-dom-scrollrestoration-w3k9y7?file=/src/App.tsx)\r\nplease check it in safari on ios\r\n\r\n`beforeunload` event does not occur in safari on ios\r\nApple's [documentation](https://developer.apple.com/library/archive/documentation/AppleApplications/Reference/SafariWebContent/HandlingEvents/HandlingEvents.html#//apple_ref/doc/uid/TP40006511-SW5) says to use `pagehide` instead of `unload`.\r\n> `unload`\r\n> *Deprecated, use* `pagehide` *instead*.\r\n\r\nthe mdn documentation says\r\n> When the user clicks the browser's back button,\r\n> the page hide event is fired on the current page before the previous page is displayed.\r\n\r\nSo I think it would be okay to use `pagehide` instead of `beforeunload`.\r\n\r\nThis is my first time working in react-router's codebase. Please let me know if there are any additional considerations",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-10-29T23:28:08Z",
        "closed_at": "2022-10-30T00:48:31Z",
        "merged_at": null,
        "body": null,
        "comments": 3
    },
    {
        "merged": true,
        "additions": 36,
        "deletions": 8,
        "changed_files": 10,
        "created_at": "2022-10-27T21:47:33Z",
        "closed_at": "2022-10-28T14:38:57Z",
        "merged_at": "2022-10-28T14:38:57Z",
        "body": "This PR was opened by the [Changesets release](https://github.com/changesets/action) GitHub action. When you're ready to do a release, you can merge this and the packages will be published to npm automatically. If you're not ready to do a release yet, that's fine, whenever you add more changesets to release-6.4.3, this PR will be updated.\n\n\u26a0\ufe0f\u26a0\ufe0f\u26a0\ufe0f\u26a0\ufe0f\u26a0\ufe0f\u26a0\ufe0f\n\n`release-6.4.3` is currently in **pre mode** so this branch has prereleases rather than normal releases. If you want to exit prereleases, run `changeset pre exit` on `release-6.4.3`.\n\n\u26a0\ufe0f\u26a0\ufe0f\u26a0\ufe0f\u26a0\ufe0f\u26a0\ufe0f\u26a0\ufe0f\n\n# Releases\n## react-router-dom@6.4.3-pre.2\n\n### Patch Changes\n\n-   Fix NavLink behavior for root urls ([#9497](https://github.com/remix-run/react-router/pull/9497))\n-   Updated dependencies:\n    -   `react-router@6.4.3-pre.2`\n\n## react-router-dom-v5-compat@6.4.3-pre.2\n\n### Patch Changes\n\n-   Updated dependencies:\n    -   `react-router-dom@6.4.3-pre.2`\n    -   `react-router@6.4.3-pre.2`\n\n## react-router-native@6.4.3-pre.2\n\n### Patch Changes\n\n-   Updated dependencies:\n    -   `react-router@6.4.3-pre.2`\n\n## react-router@6.4.3-pre.2\n\n\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 446,
        "deletions": 238,
        "changed_files": 7,
        "created_at": "2022-10-27T19:41:53Z",
        "closed_at": "2022-11-01T16:27:58Z",
        "merged_at": "2022-11-01T16:27:58Z",
        "body": "Updates to `createStaticHandler` to streamline and make internal router-thrown `ErrorResponse`'s consistent for easier integration into Remix.  This also fixes a bug where a `loader`/`action` could previously return `undefined` which causes subsequent issues with hydration and revalidation, so we now throw an error to the `errorElement` if this happens.  Users can return `null` if they don't need to return any data.\r\n\r\n**Todo**:\r\n* [x] Repoint to dev\r\n* [x] ensure changeset is updated for any non-static fixes",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-10-26T22:25:22Z",
        "closed_at": "2022-10-27T05:54:06Z",
        "merged_at": "2022-10-27T05:54:06Z",
        "body": "Includes `createRoutesFromElements` and `Route` in the imports of the code snippet.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 146,
        "deletions": 11,
        "changed_files": 6,
        "created_at": "2022-10-26T19:49:19Z",
        "closed_at": "2022-11-30T21:06:28Z",
        "merged_at": "2022-11-30T21:06:28Z",
        "body": "The intention was never to match partial dynamic or splat parameters, but we had some bugs and inconsistencies in the implementation:\r\n\r\n* `matchPath` would _not_ match partial splat parameters (`/prefix*`), and would warn + treat them as `/prefix/*`\r\n* However, `generatePath` _would_ match partial splat parameters\r\n* Both `matchPath`/`generatePath` _would_ match partial named parameters (`/prefix:param`)\r\n\r\nThis PR removes the buggy support for partials matching such that we always require dynamic/splat params to be an entire URL segment.  This will simplify our future plans to support optional params as well as the intended optimization of the path-matching algorithm.\r\n\r\nIf an application happened to be relying on this, then the suggestion should be to extract the static prefix at the `useParams` call-site:\r\n\r\n```\r\n// Old behavior at URL /prefix-123\r\n<Route path=\"prefix-:id\" element={<Comp /> }>\r\n\r\nfunction Comp() {\r\n  let params = useParams(); // { id: '123' }\r\n  let id = params.id; // \"123\"\r\n  ...\r\n}\r\n\r\n// New behavior at URL /prefix-123\r\n<Route path=\":id\" element={<Comp /> }>\r\n\r\nfunction Comp() {\r\n  let params = useParams(); // { id: 'prefix-123' }\r\n  let id = params.id.replace(/^prefix-/, ''); // \"123\"\r\n  ...\r\n}\r\n```\r\n\r\nReplaces #9238\r\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-10-25T14:02:51Z",
        "closed_at": "2022-10-25T18:36:32Z",
        "merged_at": "2022-10-25T18:36:32Z",
        "body": "The link in this [page](https://github.com/remix-run/react-router/tree/main/tutorial) is broken",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 47,
        "deletions": 10,
        "changed_files": 11,
        "created_at": "2022-10-25T03:37:40Z",
        "closed_at": "2022-10-25T14:30:35Z",
        "merged_at": null,
        "body": "This PR was opened by the [Changesets release](https://github.com/changesets/action) GitHub action. When you're ready to do a release, you can merge this and the packages will be published to npm automatically. If you're not ready to do a release yet, that's fine, whenever you add more changesets to release-6.4.3, this PR will be updated.\n\n\u26a0\ufe0f\u26a0\ufe0f\u26a0\ufe0f\u26a0\ufe0f\u26a0\ufe0f\u26a0\ufe0f\n\n`release-6.4.3` is currently in **pre mode** so this branch has prereleases rather than normal releases. If you want to exit prereleases, run `changeset pre exit` on `release-6.4.3`.\n\n\u26a0\ufe0f\u26a0\ufe0f\u26a0\ufe0f\u26a0\ufe0f\u26a0\ufe0f\u26a0\ufe0f\n\n# Releases\n## react-router@6.4.3-pre.1\n\n### Patch Changes\n\n-   Updated dependencies:\n    -   `@remix-run/router@1.0.3-pre.1`\n\n## react-router-dom@6.4.3-pre.1\n\n### Patch Changes\n\n-   Updated dependencies:\n    -   `@remix-run/router@1.0.3-pre.1`\n    -   `react-router@6.4.3-pre.1`\n\n## react-router-dom-v5-compat@6.4.3-pre.1\n\n### Patch Changes\n\n-   Updated dependencies:\n    -   `react-router@6.4.3-pre.1`\n    -   `react-router-dom@6.4.3-pre.1`\n\n## react-router-native@6.4.3-pre.1\n\n### Patch Changes\n\n-   Updated dependencies:\n    -   `react-router@6.4.3-pre.1`\n\n## @remix-run/router@1.0.3-pre.1\n\n### Patch Changes\n\n-   make url-encoding history-aware ([#9496](https://github.com/remix-run/react-router/pull/9496))\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-10-24T21:15:36Z",
        "closed_at": "2022-10-25T13:51:42Z",
        "merged_at": "2022-10-25T13:51:42Z",
        "body": "Closes #9470 ",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 84,
        "deletions": 16,
        "changed_files": 3,
        "created_at": "2022-10-24T19:53:08Z",
        "closed_at": "2022-10-27T21:46:12Z",
        "merged_at": "2022-10-27T21:46:12Z",
        "body": null,
        "comments": 1
    },
    {
        "merged": true,
        "additions": 325,
        "deletions": 29,
        "changed_files": 5,
        "created_at": "2022-10-24T17:20:24Z",
        "closed_at": "2022-10-24T20:16:10Z",
        "merged_at": "2022-10-24T20:16:09Z",
        "body": "Forgot about this callout in the special character encoding PR: https://github.com/remix-run/react-router/pull/9477#discussion_r998722415\r\n\r\nWe do not want to automatically encode incoming `router.navigate()` locations when using memory routers, so we introduce a `history.encodeLocation` method so encoding can be history aware.\r\n\r\nDecoding proves to a be a bit trickier, since we decode in `matchRoutes` which is not history-aware, but since memory locations should never be encoded in the first place, I think it's safe to decode all the time in there, since `decodeURI('/path') === '/path'`\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-10-24T08:21:41Z",
        "closed_at": "2022-10-24T18:20:51Z",
        "merged_at": "2022-10-24T18:20:51Z",
        "body": "Added the missing preposition \"to\".\r\n\r\nI was going through the tutorial when I found this line ( line no. 1833 in tutorial.md) which is missing the preposition \"to\".",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-10-23T11:37:31Z",
        "closed_at": "2022-10-24T03:03:42Z",
        "merged_at": "2022-10-24T03:03:42Z",
        "body": "There was a typo at the `docs/route/loader.md` doc. One of the `of` word appears twice in a row. So I am considering deleting one of them.\r\n\r\nfrom :\r\n> Since the return value of of `fetch` is a Response...\r\n\r\nTo :\r\n> Since the return value of `fetch` is a Response...",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 38,
        "deletions": 35,
        "changed_files": 5,
        "created_at": "2022-10-21T15:09:55Z",
        "closed_at": "2022-10-21T20:47:17Z",
        "merged_at": "2022-10-21T20:47:17Z",
        "body": "While not a super common pattern, this was causing `Form` and `useSubmit` to use incorrect default actions when used in an index route with a path (more commonly generated from remix conventional routes):\r\n\r\n```jsx\r\n<Route path=\"/\">\r\n  <Route path=\"foo\" index={true} element={<Comp />} />\r\n</Route>\r\n```\r\n\r\nA call to `useFormAction` inside `Comp` would incorrectly trim the `foo` route in `getPathContributingMatches` because it was an `index` route, and then it would generate a form action of `/?index` instead of `/foo?index`",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 53,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2022-10-21T10:22:15Z",
        "closed_at": "2022-10-25T13:49:52Z",
        "merged_at": "2022-10-25T13:49:52Z",
        "body": "The docs for [`useRoutes`](https://reactrouter.com/en/main/hooks/use-routes#useroutes) claim the following:\r\n\r\n> The return value of `useRoutes` is either a valid React element you can use to render the route tree, or null if nothing matched.\r\n\r\nThis is not true in case a custom `locationArg` is passed. In that situation `useRoutes` will always return a ` <LocationContext.Provider>` with a potentially empty child. \r\n\r\nThis PR ensures that a `<LocationContext.Provider>` is only returned if `renderedMatches` is not empty.",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 213,
        "deletions": 66,
        "changed_files": 3,
        "created_at": "2022-10-20T15:58:30Z",
        "closed_at": "2022-10-21T20:46:39Z",
        "merged_at": "2022-10-21T20:46:39Z",
        "body": "Minor updates to `query`/`queryRoute` behavior for Remix usage (see https://github.com/remix-run/remix/pull/4385)\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-10-20T09:20:11Z",
        "closed_at": "2022-11-21T16:51:17Z",
        "merged_at": "2022-11-21T16:51:17Z",
        "body": "Fixing `useMatch` description as the current one does not reflect the hook's signature",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2022-10-19T13:25:11Z",
        "closed_at": "2022-10-29T18:39:03Z",
        "merged_at": "2022-10-29T18:39:03Z",
        "body": "Green lines are marking not important lines, I selected the important parts that involve the useOutletContext hook.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 760,
        "deletions": 5,
        "changed_files": 7,
        "created_at": "2022-10-18T21:04:16Z",
        "closed_at": "2022-10-21T18:01:25Z",
        "merged_at": "2022-10-21T18:01:25Z",
        "body": "**tl;dr;**\r\nReplaces #9458 with a fairly comprehensive test suite to ensure that we can handle paths with special characters, match against them, and received properly encoded values from `useLocation` that match what `window.location` would report.\r\n\r\n**Background**\r\nIn 6.3 and prior we were always in a _reactive_ mode to `window.history` so for example, we would `history.pushState` and then call the listeners with the value from `window.location`.  This flow meant that we inherited the built-in URL encoding performed by `window.location`.  Therefore, if you clicked `<Link to=\"/\u2705\">` you got `{ pathname: \"/%E2%9C%85\", ... }` from `useLocation()`.\r\n\r\nIn 6.4, we go through the new `@remix-run/router` first and do all of our data fetching and `updateState` _before_ `history.pushState` - so we weren't getting the encoding.  So at the moment, if you click `<Link to=\"/\u2705\">` you incorrectly get `{ pathname: \"/\u2705\", ... }` from `useLocation()`.\r\n\r\nWe also have historically had trouble with defining route paths with special characters since we were matching encoded paths from `window.location` to unencoded paths in our `<Route>` objects.  \r\n\r\nThis PR fixes these 3 main things surrounding special characters:\r\n* `history` should always send through the `window.location` to listeners to ensure full backwards compatibility with 6.3\r\n* When routing in a data router via `router.navigate` we manually encode the incoming location using `new URL()` so we get the same encoding behavior as `window.location`.  This ensures that useLocation in .4 matches what it would have returned in a 6.3 app\r\n* Since we are now consistently operating on incoming encoded paths, but we want to preserve the ability to match routes defined with special characters we gained from #9300, we now decode the incoming pathname prior to matching it against our `<Route path>` values - allowing us to do `<Route path=\"\u2705\" />`\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 205,
        "deletions": 202,
        "changed_files": 55,
        "created_at": "2022-10-18T09:59:08Z",
        "closed_at": "2022-10-18T17:05:13Z",
        "merged_at": null,
        "body": "- Links written in documentation return 404 error on github\r\n- I added the extension of the file to solve it\r\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 143,
        "deletions": 97,
        "changed_files": 7,
        "created_at": "2022-10-17T18:36:39Z",
        "closed_at": "2023-01-19T19:28:55Z",
        "merged_at": null,
        "body": null,
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-10-15T17:20:33Z",
        "closed_at": "2022-10-20T19:12:25Z",
        "merged_at": null,
        "body": "What version are you using?\r\n- `\"react-router-dom\": \"6.4.2\"`\r\n- `typescript: 4.8.4`\r\n- `pnpm@7.13.4`\r\n\r\n<details>\r\n<summary>tsconfig</summary>\r\n\r\n`base.json:`\r\n```json\r\n{\r\n  \"$schema\": \"https://json.schemastore.org/tsconfig\",\r\n  \"display\": \"Default\",\r\n  \"compilerOptions\": {\r\n    \"composite\": false,\r\n    \"declaration\": true,\r\n    \"declarationMap\": true,\r\n    \"esModuleInterop\": true,\r\n    \"forceConsistentCasingInFileNames\": true,\r\n    \"inlineSources\": false,\r\n    \"isolatedModules\": true,\r\n    \"moduleResolution\": \"node\",\r\n    \"noUnusedLocals\": true,\r\n    \"noUnusedParameters\": true,\r\n    \"preserveWatchOutput\": true,\r\n    \"skipLibCheck\": true,\r\n    \"strict\": true,\r\n    \"noFallthroughCasesInSwitch\": true\r\n  },\r\n  \"exclude\": [\"node_modules\"]\r\n}\r\n```\r\n`react-app.json:`\r\n```json\r\n{\r\n  \"$schema\": \"https://json.schemastore.org/tsconfig\",\r\n  \"display\": \"Create React App\",\r\n  \"extends\": \"./base.json\",\r\n  \"compilerOptions\": {\r\n    \"allowSyntheticDefaultImports\": true,\r\n    \"noEmit\": true,\r\n    \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"],\r\n    \"target\": \"ES2017\",\r\n    \"module\": \"ESNext\",\r\n    \"jsx\": \"react-jsx\"\r\n  },\r\n  \"include\": [\"src\", \"tests\"],\r\n  \"exclude\": [\"node_modules\"]\r\n}\r\n```\r\n</details>\r\n\r\n`router.ts:`\r\n```ts\r\nimport {createBrowserRouter} from 'react-router-dom'\r\n\r\nimport App from './App'\r\n\r\nconst router = createBrowserRouter([\r\n  {\r\n    path: '/',\r\n    element: <App />,\r\n  },\r\n])\r\n\r\nexport default router\r\n```\r\n\r\nVSCode shows error:\r\n<img width=\"915\" alt=\"Screenshot 2022-10-15 at 19 47 59\" src=\"https://user-images.githubusercontent.com/7345847/195998313-eba72cfa-52f8-4e32-ba6c-bfa1b94c0cae.png\">\r\n\r\n> The inferred type of 'router' cannot be named without a reference to '.pnpm/@remix-run+router@1.0.2/node_modules/@remix-run/router'. This is likely not portable. A type annotation is necessary.ts(2742)\r\n\r\n### Fix this error\r\nby patching the exports to the `react-router-dom` package:\r\n<img width=\"1463\" alt=\"Screenshot 2022-10-15 at 20 04 20\" src=\"https://user-images.githubusercontent.com/7345847/195999001-6e45d2bd-ef44-49d5-8634-e1da7062e0aa.png\">\r\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 292,
        "deletions": 113,
        "changed_files": 4,
        "created_at": "2022-10-14T20:00:04Z",
        "closed_at": "2022-10-18T13:32:21Z",
        "merged_at": "2022-10-18T13:32:21Z",
        "body": "Updates to `createStaticHandler` to better normalize the return values of `query`/`queryRoute` for use in Remix",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-10-14T13:57:36Z",
        "closed_at": "2022-10-24T21:25:22Z",
        "merged_at": "2022-10-24T21:25:22Z",
        "body": "`window.location.origin` is `\"null\"` (the literal string value) in Firefox under certain conditions: https://bugzilla.mozilla.org/show_bug.cgi?id=878297 \r\n\r\nThis leads to a broken app in Firefox when you build for production and try to use it from the local file system in an HTML file.\r\n\r\nI added an additional check in createURL() in router.ts to respect that case.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-10-13T18:39:27Z",
        "closed_at": "2022-10-14T16:06:13Z",
        "merged_at": "2022-10-14T16:06:13Z",
        "body": "When migrating from `<MemoryRouter>` to `createMemoryRouter`, some of my project's tests started to fail due to `fetch` not being polyfilled in the `jest` environment.\r\n\r\nThe error itself is really unclear, so IMO, at least docs should inform about this requirement.\r\n\r\nPlease let me know if better wording or suggestion should be used here.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 254,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-10-13T15:56:10Z",
        "closed_at": "2022-10-18T20:41:53Z",
        "merged_at": null,
        "body": "Adds some more thorough tests around route matching on special characters (symbols, emojis, umlauts, wide characters, etc.) after the changes in #9300 to remove the word boundary from the regex.  Any obvious other chars I'm missing?",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 96,
        "deletions": 4,
        "changed_files": 5,
        "created_at": "2022-10-12T21:58:14Z",
        "closed_at": "2022-10-17T14:29:59Z",
        "merged_at": "2022-10-17T14:29:59Z",
        "body": "Submissions should ignore pathless layout routes when looking for the action to call\r\n\r\nCloses #9284 ",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 34,
        "deletions": 1,
        "changed_files": 4,
        "created_at": "2022-10-12T20:51:33Z",
        "closed_at": "2022-10-17T14:26:45Z",
        "merged_at": "2022-10-17T14:26:44Z",
        "body": "Adding unit tests to #9451 \r\n\r\nCloses #9450\r\n\r\nCo-authored-by: Mika\u00ebl ANZANO <m.anzano@meetic-corp.com>",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-10-12T15:04:00Z",
        "closed_at": "2022-10-12T20:50:57Z",
        "merged_at": "2022-10-12T20:50:57Z",
        "body": "Closes https://github.com/remix-run/react-router/issues/9450",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 652,
        "deletions": 61,
        "changed_files": 5,
        "created_at": "2022-10-11T20:49:05Z",
        "closed_at": "2022-10-21T15:02:34Z",
        "merged_at": "2022-10-21T15:02:34Z",
        "body": "Builds on top of original PR (#9418) to handle `basename` in loader/action redirects and also adds support for relative routing in redirects.  \r\n\r\nBasename example:\r\n```js\r\nlet router = createBrowserRouter([{\r\n  path: '/',\r\n  loader() {\r\n    // This will now properly redirect the browser to /base/other\r\n    return redirect('/other');\r\n  },\r\n}], { basename: '/base'}\r\n```\r\n\r\nRelative routing example:\r\n```js\r\nlet router = createBrowserRouter([{\r\n  path: '/',\r\n  children: [{\r\n    path: 'parent',\r\n    children: [{\r\n      path: 'child',\r\n      loader() {\r\n        // This will now properly redirect the browser to /parent\r\n        return redirect('..');\r\n      },\r\n    }],\r\n  }]\r\n}]);\r\n```\r\n\r\nCloses #9417\r\n\r\nCo-authored-by: Mika\u00ebl ANZANO <m.anzano@meetic-corp.com>",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 38,
        "deletions": 33,
        "changed_files": 6,
        "created_at": "2022-10-11T20:35:11Z",
        "closed_at": "2022-10-17T14:25:45Z",
        "merged_at": "2022-10-17T14:25:45Z",
        "body": "Adds a UMD build for `@remix-run/router` since that's needed for unpkg/UMD usage of `react-router`/`react-router-dom` \r\n\r\nCloses #9240",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-10-11T16:27:02Z",
        "closed_at": "2022-10-12T20:45:44Z",
        "merged_at": "2022-10-12T20:45:44Z",
        "body": "Fixes a type in the `unpkg` file, leading https://unpkg.com/react-router-dom-v5-compat to 404 currently",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-10-11T10:48:18Z",
        "closed_at": "2022-11-09T15:25:25Z",
        "merged_at": "2022-11-09T15:25:25Z",
        "body": null,
        "comments": 6
    },
    {
        "merged": false,
        "additions": 31,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-10-11T06:14:24Z",
        "closed_at": "2022-10-11T21:41:47Z",
        "merged_at": null,
        "body": "Add explanation to [history issue](https://github.com/remix-run/react-router/issues/8264)\r\nSo users can rely on documents.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-10-11T03:53:59Z",
        "closed_at": "2022-10-11T21:43:25Z",
        "merged_at": "2022-10-11T21:43:25Z",
        "body": "Tiny fix in docs for missing url for picking a router in `use-route-loader-data.md`",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-10-09T09:37:58Z",
        "closed_at": "2022-10-09T21:19:17Z",
        "merged_at": null,
        "body": "It looks like the word is wrong",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-10-08T21:03:23Z",
        "closed_at": "2022-10-09T21:18:22Z",
        "merged_at": "2022-10-09T21:18:21Z",
        "body": "The \"Access and render the data\" section on the tutorial page is highlighting one line short in the code preview. This PR corrects this to highlight the full snippet.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-10-08T03:12:21Z",
        "closed_at": "2022-10-24T23:37:05Z",
        "merged_at": null,
        "body": "Ran into this issue after following the tutorial.\r\nSo adding the fix here.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 4,
        "created_at": "2022-10-07T17:30:36Z",
        "closed_at": "2022-10-07T20:49:00Z",
        "merged_at": null,
        "body": null,
        "comments": 3
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-10-07T16:26:30Z",
        "closed_at": "2022-10-07T20:47:05Z",
        "merged_at": "2022-10-07T20:47:05Z",
        "body": "`lets` as a verb",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-10-06T19:49:24Z",
        "closed_at": "2022-10-06T21:33:21Z",
        "merged_at": "2022-10-06T21:33:21Z",
        "body": "While going through the documentation, I came across a confusing grammatical error in https://reactrouter.com/en/main/routers/picking-a-router. Opening a PR to fix a simple typo in picking-a-router.\r\n\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-10-06T19:22:26Z",
        "closed_at": "2022-10-11T20:39:43Z",
        "merged_at": "2022-10-11T20:39:43Z",
        "body": "Closes https://github.com/remix-run/react-router/issues/9417",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 210,
        "deletions": 186,
        "changed_files": 5,
        "created_at": "2022-10-05T23:42:49Z",
        "closed_at": "2022-10-17T14:22:36Z",
        "merged_at": "2022-10-17T14:22:36Z",
        "body": "Fixes #9392 ",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1774,
        "deletions": 284,
        "changed_files": 14,
        "created_at": "2022-10-05T15:49:50Z",
        "closed_at": "2022-10-21T22:03:26Z",
        "merged_at": "2022-10-21T22:03:26Z",
        "body": "TODO: add custom PAT token - we could use the `FORMAT_PAT` one we have though https://github.com/remix-run/react-router/blob/logan/ci-ping-releases/.github/workflows/release.yml#L57\r\n\r\nSigned-off-by: Logan McAnsh <logan@mcan.sh>\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2022-10-04T22:25:29Z",
        "closed_at": "2022-10-05T15:11:22Z",
        "merged_at": "2022-10-05T15:11:22Z",
        "body": "The name of the constant in the abstractions section is named `response` but the following references use `res`",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-10-04T19:31:40Z",
        "closed_at": "2022-11-08T14:34:18Z",
        "merged_at": "2022-11-08T14:34:18Z",
        "body": "fix typo",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 45,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-10-03T18:00:14Z",
        "closed_at": "2022-10-06T15:32:35Z",
        "merged_at": null,
        "body": "Failing test for https://github.com/remix-run/react-router/issues/9392",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 37,
        "deletions": 8,
        "changed_files": 10,
        "created_at": "2022-10-03T15:16:40Z",
        "closed_at": "2022-10-04T17:18:37Z",
        "merged_at": "2022-10-04T17:18:37Z",
        "body": "This PR was opened by the [Changesets release](https://github.com/changesets/action) GitHub action. When you're ready to do a release, you can merge this and the packages will be published to npm automatically. If you're not ready to do a release yet, that's fine, whenever you add more changesets to release-6.4.2-pre.1, this PR will be updated.\n\n\u26a0\ufe0f\u26a0\ufe0f\u26a0\ufe0f\u26a0\ufe0f\u26a0\ufe0f\u26a0\ufe0f\n\n`release-6.4.2-pre.1` is currently in **pre mode** so this branch has prereleases rather than normal releases. If you want to exit prereleases, run `changeset pre exit` on `release-6.4.2-pre.1`.\n\n\u26a0\ufe0f\u26a0\ufe0f\u26a0\ufe0f\u26a0\ufe0f\u26a0\ufe0f\u26a0\ufe0f\n\n# Releases\n## react-router@6.4.2-pre.1\n\n### Patch Changes\n\n-   fix: make hasErrorelement optional on types ([#9394](https://github.com/remix-run/react-router/pull/9394))\n\n## react-router-dom@6.4.2-pre.1\n\n### Patch Changes\n\n-   Updated dependencies:\n    -   `react-router@6.4.2-pre.1`\n\n## react-router-dom-v5-compat@6.4.2-pre.1\n\n### Patch Changes\n\n-   Updated dependencies:\n    -   `react-router@6.4.2-pre.1`\n    -   `react-router-dom@6.4.2-pre.1`\n\n## react-router-native@6.4.2-pre.1\n\n### Patch Changes\n\n-   Updated dependencies:\n    -   `react-router@6.4.2-pre.1`\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-10-01T10:53:22Z",
        "closed_at": "2022-10-01T21:59:41Z",
        "merged_at": "2022-10-01T21:59:41Z",
        "body": "remove `.md` extension on `use-search-params` endpoint\r\n\r\nThere is some error with the url on [useSearchParams (RN)](https://reactrouter.com/en/main/hooks/use-search-params-rn) that point to [useSearchParams](https://reactrouter.com/en/main/hooks/use-search-params.md) instead [useSearchParams](https://reactrouter.com/en/main/hooks/use-search-params)\r\n\r\nHere's the current behavior \r\n\r\nhttps://user-images.githubusercontent.com/43630681/193406038-7a8b4e67-6ab0-4424-84e0-ee363ebd3d2f.mp4\r\n\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 186,
        "deletions": 12,
        "changed_files": 5,
        "created_at": "2022-09-30T20:58:30Z",
        "closed_at": "2022-10-02T16:55:44Z",
        "merged_at": "2022-10-02T16:55:44Z",
        "body": "This PR inlines the `mini-create-react-context` dependency, a polyfill for older versions of React that is no longer maintained. This should have no meaningful impact, but it will remove a needless peer dependency version warning for users on React 18.\r\n\r\nIt could potentially (slightly) increase the bundle size for legacy users where the dependency is already bundled, but it shouldn't be significant enough to ease the concern for users on React 18+ IMO.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-09-30T17:47:37Z",
        "closed_at": "2022-09-30T19:43:47Z",
        "merged_at": null,
        "body": "without window. it gives an error\r\n\r\nCompiled with problems:X\r\n\r\nERROR\r\n\r\n[eslint] \r\nsrc\\routes\\contact.jsx\r\n  Line 56:18:  Unexpected use of 'confirm'  no-restricted-globals\r\n\r\nSearch for the keywords to learn more about each error.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 118,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2022-09-29T22:58:19Z",
        "closed_at": "2022-09-30T14:58:34Z",
        "merged_at": "2022-09-30T14:58:34Z",
        "body": "Add a better warning for the scenario in #9369",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-09-29T19:24:28Z",
        "closed_at": "2022-09-29T21:00:50Z",
        "merged_at": "2022-09-29T21:00:50Z",
        "body": "I was reading through the feature overview and found what appears to be a grammatical mistake, so I figured I'd point it out. Thanks for React-router!",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 196,
        "deletions": 60,
        "changed_files": 13,
        "created_at": "2022-09-28T16:30:41Z",
        "closed_at": "2022-09-30T14:49:31Z",
        "merged_at": "2022-09-30T14:49:31Z",
        "body": "Based off #9343 and extends route type safety downwards to `@remix-run/router` and upwards to `<Route>` prop typings.  This provides type-safety for JSX-defined route trees:\r\n\r\n**Note:** screenshots are slightly outdated, spoke to @mjackson and it **is** valid to have a path on index routes, and serves as a way to separate index from layout routes.  This PR has been update to only prevent `index` + `children`.\r\n\r\n<img width=\"355\" alt=\"Screen Shot 2022-09-28 at 12 02 14 PM\" src=\"https://user-images.githubusercontent.com/1609022/192833868-f0ee5bfe-5bcf-4c70-801f-bf0127265590.png\">\r\n\r\nAs well as manually defined route trees:\r\n\r\n<img width=\"480\" alt=\"Screen Shot 2022-09-28 at 12 29 34 PM\" src=\"https://user-images.githubusercontent.com/1609022/192835526-c31adfb7-7d80-4c35-9fd5-7b2a32edba49.png\">\r\n\r\n\r\nThis also adds a few invariants and associated tests to check for these invalid conditions:\r\n* `flattenRoutes`(lowest common denominator)\r\n* `createRoutesFromChildren` (always used in `BrowserRouter`, sometimes used in `RouterProvider`)\r\n* `convertRoutesToDataRoutes` (always used in `RouterProvider`)",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2022-09-28T02:00:08Z",
        "closed_at": "2022-09-28T19:51:54Z",
        "merged_at": "2022-09-28T19:51:54Z",
        "body": null,
        "comments": 4
    },
    {
        "merged": true,
        "additions": 300,
        "deletions": 22,
        "changed_files": 2,
        "created_at": "2022-09-26T21:02:03Z",
        "closed_at": "2022-09-27T01:23:23Z",
        "merged_at": "2022-09-27T01:23:23Z",
        "body": "Updates to `unstable_createStaticHandler` to better handle thrown values during `queryRoute`",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 210,
        "deletions": 5,
        "changed_files": 3,
        "created_at": "2022-09-26T16:41:01Z",
        "closed_at": "2022-09-30T14:28:38Z",
        "merged_at": "2022-09-30T14:28:38Z",
        "body": "Closes #9347",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 29,
        "deletions": 7,
        "changed_files": 4,
        "created_at": "2022-09-25T10:26:51Z",
        "closed_at": "2022-09-28T16:33:51Z",
        "merged_at": null,
        "body": "RouteObject type should accept either index or children but not both, since an index route cannot has children.",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2022-09-25T02:10:05Z",
        "closed_at": "2022-09-26T15:26:47Z",
        "merged_at": "2022-09-26T15:26:47Z",
        "body": "First of all, thank you all for the library.  Found that those codes are not in use and removed.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-09-24T09:20:49Z",
        "closed_at": "2022-09-26T15:27:31Z",
        "merged_at": "2022-09-26T15:27:31Z",
        "body": "Using native English term instead of a term borrowed from French to explain \"Data Writes + HTML Forms\" section, to make it easier to understand for reader who don't know \"a la\" meaning in English.\r\n\r\nCan check following dictionary for more information:\r\nhttps://www.dictionary.com/e/slang/a-la/#:~:text=Borrowed%20from%20French%2C%20%C3%A0%20la,as%20traditionally%20cooked%20in%20Provence).",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-09-23T22:33:57Z",
        "closed_at": "2022-09-24T00:44:09Z",
        "merged_at": "2022-09-24T00:44:09Z",
        "body": null,
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-09-23T16:50:16Z",
        "closed_at": "2022-09-24T00:53:41Z",
        "merged_at": null,
        "body": null,
        "comments": 3
    },
    {
        "merged": true,
        "additions": 87,
        "deletions": 5,
        "changed_files": 4,
        "created_at": "2022-09-23T15:47:21Z",
        "closed_at": "2022-09-27T14:39:04Z",
        "merged_at": "2022-09-27T14:39:03Z",
        "body": "This pull request is a fix for issue #9333 \r\n\r\nIt removes the action data after a redirect from action.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2022-09-21T23:58:49Z",
        "closed_at": "2022-09-22T18:08:19Z",
        "merged_at": "2022-09-22T18:08:19Z",
        "body": "Some links were outdated",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-09-20T18:10:34Z",
        "closed_at": "2022-09-20T19:52:22Z",
        "merged_at": "2022-09-20T19:52:22Z",
        "body": "the Edit function is imported in the next step by a different name (Edit -> EditContact).",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 175,
        "deletions": 2,
        "changed_files": 4,
        "created_at": "2022-09-20T14:49:05Z",
        "closed_at": "2022-09-20T21:20:08Z",
        "merged_at": "2022-09-20T21:20:07Z",
        "body": "Fetcher GET submissions need to preserve the `?index` param instead of replacing it as GET submissions do by default.\r\n\r\nSame fix as https://github.com/remix-run/remix/pull/4238 in remix",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 113,
        "deletions": 43,
        "changed_files": 16,
        "created_at": "2022-09-20T12:21:28Z",
        "closed_at": "2022-09-22T17:44:05Z",
        "merged_at": "2022-09-22T17:44:05Z",
        "body": "A few folks have messaged in discord trying to use `ScrollRestoration` and other data-router-only hooks inside `BrowserRouter` so I went though the new hooks and added the `<docs-warning>` to them with a link to \"Picking a Router\".\r\n\r\nI left out a few hooks like `useLoaderData`, `useActionData` since they seemed self-explanatory?\r\n\r\nI also updated the implementation to leverage internal private `useDataRouterContext` and `useDataRouterState` hooks that will print a better error message if called in `BrowserRouter`:\r\n\r\nFor example:\r\n```\r\nuseMatches must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.\r\n```",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 26,
        "deletions": 25,
        "changed_files": 10,
        "created_at": "2022-09-20T05:34:46Z",
        "closed_at": "2022-09-20T19:48:38Z",
        "merged_at": null,
        "body": "The links in docs aren't working on actual github repo but they are working with `Opt+click` in vscode. I went ahead and checked for the cause and found out that it is because the links are missing `.md` extension at the end.\r\n\r\nI only fixed some of them to see if you are accepting my PR. If you do, I will dive deeper and fix all the links in the docs. \r\n\r\nIn `README.md`, I have linked to direct link to `our contributing guidelines` page.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 92,
        "deletions": 9,
        "changed_files": 4,
        "created_at": "2022-09-19T13:05:01Z",
        "closed_at": "2022-09-30T13:23:51Z",
        "merged_at": "2022-09-30T13:23:50Z",
        "body": "Would like to get @mjackson's eyes on this since he wrote the original path matching logic.\r\n\r\nI think this was a previously undiscovered bug that's been exposed now that we updated `NavLink` to leverage `useMatch` to follow along with our own recommendation in `examples/custom-link/`.  We had tests to assert that `matchPath({ path: \"/users\", end: false }, \"/users2\")` would be null, but we did not have any tests against `/users-2` which is incorrectly matching currently.  \r\n\r\nCloses #9279 ",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-09-19T07:03:36Z",
        "closed_at": "2022-09-19T13:49:30Z",
        "merged_at": null,
        "body": "Resolves #9298",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-09-18T11:58:34Z",
        "closed_at": "2022-09-19T15:05:16Z",
        "merged_at": "2022-09-19T15:05:16Z",
        "body": null,
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-09-18T11:18:43Z",
        "closed_at": "2022-09-19T14:59:11Z",
        "merged_at": "2022-09-19T14:59:11Z",
        "body": "The correct lines that need to be highlighted in the \"add search spinner section\" are [26, 32] not [22, 28]",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-09-18T10:10:08Z",
        "closed_at": "2022-09-19T14:57:19Z",
        "merged_at": "2022-09-19T14:57:19Z",
        "body": "I know it's very very minor but just thought If I could correct it",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 62,
        "deletions": 15,
        "changed_files": 8,
        "created_at": "2022-09-17T19:39:48Z",
        "closed_at": "2022-09-19T13:38:06Z",
        "merged_at": "2022-09-19T13:38:06Z",
        "body": "Closes #9265",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-09-17T10:56:44Z",
        "closed_at": "2022-09-17T12:03:37Z",
        "merged_at": "2022-09-17T12:03:37Z",
        "body": "see #9243 for details",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2022-09-17T08:23:44Z",
        "closed_at": "2022-09-17T22:13:24Z",
        "merged_at": "2022-09-17T22:13:24Z",
        "body": null,
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2022-09-15T12:17:08Z",
        "closed_at": "2022-09-15T14:19:17Z",
        "merged_at": "2022-09-15T14:19:17Z",
        "body": "Removed duplicated attribute in the JSX example",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2022-09-15T12:03:28Z",
        "closed_at": "2022-09-15T14:22:12Z",
        "merged_at": "2022-09-15T14:22:12Z",
        "body": "Removed unnecessary argument destructuring on `getKey` callback.\r\nhttps://github.com/remix-run/react-router/blob/4d915e3305df5b01f51abdeb1c01bf442453522e/packages/router/router.ts#L321-L329",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-09-14T21:14:31Z",
        "closed_at": "2022-09-14T22:38:37Z",
        "merged_at": "2022-09-14T22:38:37Z",
        "body": null,
        "comments": 5
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-09-14T20:16:16Z",
        "closed_at": "2022-09-14T22:36:44Z",
        "merged_at": null,
        "body": "# Fixing useNaviagate docs example\r\n\r\nnavigate variable declaration is missing on this page.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 30,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2022-09-14T20:07:57Z",
        "closed_at": "2022-09-14T22:35:30Z",
        "merged_at": null,
        "body": "This PR is adding option for custom history (navigator) when creating router component. Supporting https://github.com/remix-run/react-router/issues/8139#issuecomment-1247080906 by using history package ",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-09-14T11:47:11Z",
        "closed_at": "2022-09-14T22:32:57Z",
        "merged_at": "2022-09-14T22:32:57Z",
        "body": "[The getting started guide](https://github.com/remix-run/react-router/blob/main/docs/getting-started/installation.md) is no longer available, I changed the link to direct users to the tutorial instead.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 5,
        "changed_files": 6,
        "created_at": "2022-09-14T09:33:43Z",
        "closed_at": "2022-09-14T22:07:24Z",
        "merged_at": "2022-09-14T22:07:24Z",
        "body": "Hi, you have some dead links in your documentation. Links pointing to `createbrowserrouter` point to 'https://reactrouter.com/en/main/routers/create-browser-router.md' which returns a 404.\r\n\r\nPages with broken links: (search for \"createbrowserrouter\")\r\n* https://reactrouter.com/en/main/route/error-element\r\n* https://reactrouter.com/en/main/hooks/use-matches\r\n* https://reactrouter.com/en/main/route/action\r\n* https://reactrouter.com/en/main/route/error-element\r\n* https://reactrouter.com/en/main/route/route\r\n\r\n// related 44736e9ae5fcab17e37b7c551499ac19a1a692c5",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-09-14T08:13:18Z",
        "closed_at": "2022-09-14T22:14:09Z",
        "merged_at": "2022-09-14T22:14:09Z",
        "body": null,
        "comments": 4
    },
    {
        "merged": false,
        "additions": 2387,
        "deletions": 3128,
        "changed_files": 49,
        "created_at": "2022-09-14T07:35:28Z",
        "closed_at": "2023-01-12T18:32:48Z",
        "merged_at": null,
        "body": "\ud83d\udc4b \r\n\r\nI noticed you were on an old version when looking through the code, so I thought to update it.\r\n\r\nMain changes are:\r\n\r\n- Update RN, stop hoisting it and use own transformer\r\n- Set default test env to `jsdom` (changed default in Jest 27)\r\n- Map some `@remix-run/*` modules to their CJS counterpart\r\n  - This is due to Jest supporting `exports`, and those modules always serving ESM when Jest provides `browser` and `require` conditions. See https://jestjs.io/docs/28.x/upgrading-to-jest28#packagejson-exports\r\n  - This could probably be fixed by tweaking the `exports` in those modules, but I didn't look into it\r\n- Update snapshots due to changed defaults: https://jestjs.io/docs/upgrading-to-jest29#snapshot-format",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-09-14T05:02:54Z",
        "closed_at": "2022-09-14T22:08:09Z",
        "merged_at": "2022-09-14T22:08:09Z",
        "body": "The Suspense with deferred data code example reuses the `history` variable.\r\n\r\nThis tiny PR renames the one from the render prop to better highlight the fact that the outer one is in fact a promise, while the inner one is a resolved data.\r\n\r\ncloses #9245 ",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2022-09-14T04:57:36Z",
        "closed_at": "2022-09-14T22:06:26Z",
        "merged_at": "2022-09-14T22:06:26Z",
        "body": "Fixed a code example for the Route loader on the Feature Overview page.\r\n\r\ncloses #9244 ",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 76,
        "deletions": 59,
        "changed_files": 4,
        "created_at": "2022-09-14T03:09:10Z",
        "closed_at": "2022-09-14T16:29:01Z",
        "merged_at": "2022-09-14T16:29:01Z",
        "body": null,
        "comments": 4
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2022-09-14T00:58:16Z",
        "closed_at": "2022-09-14T22:02:40Z",
        "merged_at": "2022-09-14T22:02:40Z",
        "body": "\ud83d\udc4b At the moment, the getting started tutorial links on the package `README.md` are pointing to a `docs/getting-started/` directory that no longer exists. As a result, users viewing the package on NPM will be pointed to a broken getting started link. \r\n\r\nI have changed it to point to `docs/start/`. \r\n\r\nQuestion, previously the `react-router-dom` and `react-router-native` pointed to the same tutorial, should this still be the case? ",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 65,
        "deletions": 1343,
        "changed_files": 57,
        "created_at": "2022-09-13T18:36:17Z",
        "closed_at": "2022-09-13T19:46:27Z",
        "merged_at": "2022-09-13T19:46:27Z",
        "body": "This PR was opened by the [Changesets release](https://github.com/changesets/action) GitHub action. When you're ready to do a release, you can merge this and the packages will be published to npm automatically. If you're not ready to do a release yet, that's fine, whenever you add more changesets to release-6.4.0, this PR will be updated.\r\n\r\n\r\n# Releases\r\n\r\n* `@remix-run/router@1.0.0`\r\n* `react-router@6.4.0`\r\n* `react-router-dom@6.4.0`\r\n* `react-router-dom-v5-compat@6.4.0`\r\n* `react-router-native@6.4.0`\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 192,
        "deletions": 62,
        "changed_files": 5,
        "created_at": "2022-09-12T15:16:38Z",
        "closed_at": "2022-10-26T19:49:34Z",
        "merged_at": null,
        "body": "~~This fixes a small inconsistency in `generatePath` w.r.t. `compilePath`.  We _do_ support partial named params but at the moment we do not support partial splat params, but `generatePath` was permitting them.  This aligns `generatePath` behavior and provides the same warning as `compilePath`~~\r\n\r\nAfter chatting with @ryanflorence we decided that if possible we should look into removing that warning and supporting partial splat params (in path matching and `generatePath`), such the the path `/prefix-*` is matched by the URL `/prefix-thing`.  This PR adds specific scoring for both partial dynamic (`/prefix-:param`) and partial static (`/prefix-*`) path segments.  \r\n\r\nThere are I think 2 exiting unit tests that break, that rely on the behavior indicated by the previous warning.  So want to confirm those changes with @mjackson and @ryanflorence, but otherwise everything else passes and I added a decently sized test to try to really kick the tire son the scoring algorithm and potential conflicts.\r\n\r\nNote: Recommend viewing the PR with [whitespace hidden](https://github.com/remix-run/react-router/pull/9238/files?diff=unified&w=1)",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-09-09T23:31:26Z",
        "closed_at": "2022-09-10T01:27:42Z",
        "merged_at": "2022-09-10T01:27:42Z",
        "body": "Add project name placeholder, if you use copypaste this line it will create a project named `--template`",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 712,
        "deletions": 560,
        "changed_files": 32,
        "created_at": "2022-09-08T15:43:08Z",
        "closed_at": "2022-09-08T21:55:52Z",
        "merged_at": "2022-09-08T21:55:52Z",
        "body": "This PR removes the internal module-level `routerSingleton` we create and maintain inside our data routers since it was causing a number of headaches for non-simple use cases:\r\n\r\n* Unit tests are a pain because you need to find a way to reset the singleton in-between tests\r\n  * Use use a `_resetModuleScope` singleton for our tests\r\n  * ...but this isn't exposed to users who may want to do their own tests around our router\r\n* The JSX children `<Route>` objects cause non-intuitive behavior based on idiomatic react expectations\r\n  * Conditional runtime `<Route>`'s won't get picked up\r\n  * Adding new `<Route>`'s during local dev won't get picked up during HMR\r\n  * Using external state in your elements doesn't work as one might expect (see #9225)\r\n\r\nInstead, we are going to lift the singleton out into user-land, so that they create the router singleton and manage it outside the react tree - which is what react 18 is encouraging with `useSyncExternalStore` anyways!  This also means that since users create the router - there's no longer any difference in the rendering aspect for memory/browser/hash routers (which only impacts router/history creation) - so we can get rid of those and trim to a simple `RouterProvider`\r\n\r\n```jsx\r\n// Before\r\nfunction App() {\r\n  <DataBrowserRouter>\r\n    <Route path=\"/\" element={<Layout />}>\r\n      <Route index element={<Home />}>\r\n    </Route>\r\n  <DataBrowserRouter>\r\n}\r\n\r\n// After\r\nlet router = createBrowserRouter([{\r\n  path: \"/\",\r\n  element: <Layout />,\r\n  children: [{ \r\n    index: true,\r\n    element: <Home />,\r\n  }]\r\n}]);\r\n\r\nfunction App() {\r\n  return <RouterProvider router={router} />\r\n}\r\n```\r\n\r\nIf folks still prefer the JSX notation, they can leverage `createRoutesFromElements` (aliased from `createRoutesFromChildren` since they are not \"children\" in this usage):\r\n\r\n```jsx\r\nlet routes = createRoutesFromElements(\r\n  <Route path=\"/\" element={<Layout />}>\r\n    <Route index element={<Home />}>\r\n  </Route>\r\n);\r\nlet router = createBrowserRouter(routes);\r\n\r\nfunction App() {\r\n  return <RouterProvider router={router} />\r\n}\r\n```\r\n\r\nAnd now they can also hook into HMR correctly for router disposal:\r\n\r\n```\r\nif (import.meta.hot) {\r\n  import.meta.hot.dispose(() => router.dispose());\r\n}\r\n```\r\n\r\nAnd finally since `<RouterProvider>` accepts a router, it makes unit testing easer since you can create a fresh router with each test.\r\n\r\n**Removed APIs**\r\n* `<DataMemoryRouter>`\r\n* `<DataBrowserRouter>`\r\n* `<DataHashRouter>`\r\n* `<DataRouterProvider>`\r\n* `<DataRouter>`\r\n\r\n**Modified APIs**\r\n* `createMemoryRouter`/`createBrowserRouter`/`createHashRouter` used to live in `@remix-run/router` to prevent devs from needing to create their own `history`. These are now moved to `react-router`/`react-router-dom` and handle the `RouteObject -> AgnosticRouteObject` conversion.  \r\n\r\n**Added APIs**\r\n* `<RouterProvider>`\r\n* `createRoutesFromElements` (alias of `createRoutesFromChildren`)\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 323,
        "deletions": 178,
        "changed_files": 6,
        "created_at": "2022-09-08T15:22:16Z",
        "closed_at": "2022-09-08T21:44:30Z",
        "merged_at": "2022-09-08T21:44:30Z",
        "body": "We need to send the `AbortedDeferredError` through the `TrackedPromise` in `_error` so `Await` can throw a never-resolving promise to `Suspense` to freeze the UI.  Otherwise, we end up throwing an already-rejected promise to `Suspense`, which sends it right back down to `Await`.  React does break out of this loop as soon as the next load or navigation finishes, but it's busted _during_ the transition",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 77,
        "deletions": 59,
        "changed_files": 7,
        "created_at": "2022-09-07T13:41:59Z",
        "closed_at": "2023-01-08T09:25:20Z",
        "merged_at": null,
        "body": "Without this, anything that used `useLocation` (including `Routes`) was constantly re-rendering.",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-09-06T03:52:19Z",
        "closed_at": "2022-09-06T16:23:05Z",
        "merged_at": "2022-09-06T16:23:05Z",
        "body": null,
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-09-06T03:38:17Z",
        "closed_at": "2022-09-06T16:22:49Z",
        "merged_at": "2022-09-06T16:22:49Z",
        "body": null,
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-09-06T03:13:49Z",
        "closed_at": "2022-09-06T16:22:27Z",
        "merged_at": "2022-09-06T16:22:27Z",
        "body": null,
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-09-06T01:39:50Z",
        "closed_at": "2022-09-06T16:22:08Z",
        "merged_at": "2022-09-06T16:22:08Z",
        "body": null,
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-09-06T01:31:29Z",
        "closed_at": "2022-09-06T16:21:51Z",
        "merged_at": "2022-09-06T16:21:51Z",
        "body": "This page is about `action`, so the explanation of `params` should specify `action`.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-09-06T01:01:45Z",
        "closed_at": "2022-09-06T16:21:37Z",
        "merged_at": "2022-09-06T16:21:37Z",
        "body": null,
        "comments": 2
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2022-09-03T03:16:57Z",
        "closed_at": "2022-09-06T20:51:25Z",
        "merged_at": "2022-09-06T20:51:25Z",
        "body": null,
        "comments": 6
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-09-03T01:16:12Z",
        "closed_at": "2022-09-03T04:58:08Z",
        "merged_at": "2022-09-03T04:58:08Z",
        "body": "The useEffect from the previous step isn't reflected, which is confusing.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-09-02T23:34:27Z",
        "closed_at": "2022-09-03T04:59:11Z",
        "merged_at": null,
        "body": "Found this missing import while following this amazing tutorial \u2764\ufe0f. Can't wait for 6.4 \ud83d\ude4f\ud83c\udffc",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-09-02T15:53:41Z",
        "closed_at": "2022-09-02T20:15:51Z",
        "merged_at": "2022-09-02T20:15:51Z",
        "body": null,
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-09-02T15:49:52Z",
        "closed_at": "2022-09-02T20:16:04Z",
        "merged_at": "2022-09-02T20:16:04Z",
        "body": "The getContact import was added in a previous step and thus, should be reflected here.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 72,
        "deletions": 13,
        "changed_files": 5,
        "created_at": "2022-08-30T21:22:09Z",
        "closed_at": "2022-08-31T20:25:26Z",
        "merged_at": "2022-08-31T20:25:26Z",
        "body": "fix: tracked promises should resolve/reject with the value instead of swallowing it",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-08-28T08:25:22Z",
        "closed_at": "2022-08-29T15:06:41Z",
        "merged_at": "2022-08-29T15:06:41Z",
        "body": null,
        "comments": 5
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-08-23T09:09:21Z",
        "closed_at": "2022-08-23T13:09:00Z",
        "merged_at": "2022-08-23T13:09:00Z",
        "body": "Sorry this was my bad\r\n![Screenshot 2022-08-23 at 09 57 42](https://user-images.githubusercontent.com/17012976/186118942-e1e54ff4-8ef5-43e4-a249-54dbab5fa45e.png)\r\n\r\nI thought you could highlight both added and removed lines but that doesn't seem to be the case so reverting to the original.\r\n\r\nThe reason I wanted to highlight the removal of \r\n`import App from \"./App\";` is because after removing all the files in the previous step the build will be broken because it can find that file. A savvy dev will figure it out but wanted to be explicit \ud83d\udc4d ",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 153,
        "deletions": 16,
        "changed_files": 5,
        "created_at": "2022-08-22T20:34:47Z",
        "closed_at": "2022-08-24T15:05:15Z",
        "merged_at": "2022-08-24T15:05:15Z",
        "body": "I was a bit naive in the \"is revalidating\" check to determine when to `await` all deferred values.  We need to distinguish current `loaderData` for the same route _and the same params_ versus same route but _different_ params since we do want to fallback by default in the latter case (i.e., navigating /invoices/1 -> /invoices/2`).\r\n\r\nCloses #8914",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-08-21T23:13:13Z",
        "closed_at": "2022-08-22T00:44:05Z",
        "merged_at": null,
        "body": "Another example of how to use useNavigate focusing on Js",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-08-20T09:41:40Z",
        "closed_at": "2022-08-21T01:01:48Z",
        "merged_at": "2022-08-21T01:01:47Z",
        "body": "The stylesheet references the id as `zero-state`, but the code gave the id `index`",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 38,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2022-08-20T06:23:32Z",
        "closed_at": "2022-09-09T17:40:19Z",
        "merged_at": "2022-09-09T17:40:19Z",
        "body": "Fix for #8883, a bit changed the logic of `generatePath` function, added handling of this particular edge case.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2022-08-19T15:57:36Z",
        "closed_at": "2022-08-22T19:48:21Z",
        "merged_at": "2022-08-22T19:48:21Z",
        "body": "1. Add syntax highlighting and remove the `import App from './App'` from `Adding a Router` step\r\n2. Creating contacts step: \r\n - Highlight the addition of `createContacts()` import\r\n - Add `other code` to explicitly tell where the new `Form` needs to be added\r\n3. add syntax highlighting to `contactAction` \r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 64,
        "deletions": 13,
        "changed_files": 2,
        "created_at": "2022-08-17T19:37:23Z",
        "closed_at": "2022-08-18T13:45:40Z",
        "merged_at": "2022-08-18T13:45:40Z",
        "body": "Same fix as https://github.com/remix-run/remix/pull/4000",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 197,
        "deletions": 15,
        "changed_files": 11,
        "created_at": "2022-08-17T16:02:57Z",
        "closed_at": "2023-01-06T10:44:45Z",
        "merged_at": null,
        "body": "This PR implements two new hooks that make it possible to resolve paths and create hrefs without specifying a `to` immediately. The reasoning for this is that it allows these methods to be passed to non-React functions where it would not be possible to use hooks or allow iterating over paths without wrapping them in an additional component.\r\n\r\nFor example:\r\n```tsx\r\nconst routes = [\r\n  { pathname: '/a/b' },\r\n  { pathname: '/c/d' },\r\n];\r\n\r\nfunction App() {\r\n  const createHref = useCreateHref();\r\n\r\n  return (\r\n    <ul>\r\n      {routes.map(to => <li>{createHref(to)}</li>)}\r\n    </ul>\r\n  );\r\n}\r\n```\r\n\r\nvs.\r\n\r\n```tsx\r\nconst routes = [\r\n  { pathname: '/a/b' },\r\n  { pathname: '/c/d' },\r\n];\r\n\r\nfunction App() {\r\n  return (\r\n    <ul>\r\n      {routes.map(to => <ListItem to={to} />)}\r\n    </ul>\r\n  );\r\n}\r\n\r\nfunction ListItem(to) {\r\n  const href = useHref(to);\r\n  return (\r\n    <li>{href}</li>\r\n  );\r\n}\r\n```\r\n\r\nAlthough the latter might in some cases be preferable it's not always possible or wanted to create a wrapper component. For example in our application we have a utility function that is used to build props for another component:\r\n\r\nhttps://github.com/keycloak/keycloak-ui/blob/f76259088ee057be54f00e34dbac0ad88af96060/src/components/routable-tabs/RoutableTabs.tsx#L74-L77 \r\n\r\nWhich is then used by spreading the resulting props over said component: \r\n\r\nhttps://github.com/keycloak/keycloak-ui/blob/a6fd2cabfa4f802590b7f75d509326447606102f/src/realm-settings/user-profile/UserProfileTab.tsx#L40-L43\r\n\r\nFor our application this is required as only specific components are allowed as children where these props are spread, so wrapping things in another component and calling `useHref()` is not possible as these props would not match.\r\n\r\nCloses #8292, closes #8172",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 527,
        "deletions": 25,
        "changed_files": 12,
        "created_at": "2022-08-17T15:50:11Z",
        "closed_at": "2022-08-18T13:56:43Z",
        "merged_at": "2022-08-18T13:56:43Z",
        "body": "Adds a `relative=path` option to navigation aspects to allow users to opt-into paths behaving relative to the _current URL_ instead of the _current route hierarchy_.  This is useful if you're sharing route patterns in a non-nested for UI reasons:\r\n\r\n```jsx\r\n// Contact and EditContact do not share additional UI layout\r\n<Route path=\"/\" element={<Layout />}>\r\n  <Route path=\"contacts/:id\" element={<Contact />} />\r\n  <Route path=\"contacts:id/edit\" element={<EditContact />} />\r\n</Route>\r\n\r\nfunction EditContact() {\r\n  // ...\r\n  return <Link to=\"..\" relative=\"path\">Cancel</Link>\r\n}\r\n```\r\n\r\nWithout this, a `..` link would navigate up to `Layout` so the user would need to reconstruct the `contacts/:id` url using `useParams` and either hardcoding the `/contacts` prefix or parsing it from `useLocation` \ud83d\ude15 \r\n\r\nThis applies to all path-related hooks and components:\r\n* `react-router`: `useHref`, `useResolvedPath`, `useNavigate`, `Navigate`\r\n* `react-router-dom`: `useLinkClickHandler`, `useFormAction`, `useSubmit`, `Link`, `Form`\r\n* `react-router-native`: `useLinkPressHandler`, `Link`\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 56,
        "deletions": 20,
        "changed_files": 6,
        "created_at": "2022-08-15T17:56:11Z",
        "closed_at": "2022-08-18T13:52:46Z",
        "merged_at": "2022-08-18T13:52:46Z",
        "body": "`<ScrollRestoration getKey>` should get the \"public\" matches from `useMatches` instead of the internal router matches objects",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 10,
        "changed_files": 3,
        "created_at": "2022-08-15T16:43:27Z",
        "closed_at": "2022-08-16T13:41:57Z",
        "merged_at": "2022-08-16T13:41:57Z",
        "body": "Now that `loaderData` is stable across `defer` resolutions we don't need to `updateState` and can jut let the re-render happen at the Suspense boundary",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-08-15T01:24:37Z",
        "closed_at": "2022-08-15T18:01:33Z",
        "merged_at": "2022-08-15T18:01:33Z",
        "body": null,
        "comments": 3
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-08-13T13:33:16Z",
        "closed_at": "2022-08-15T18:04:24Z",
        "merged_at": "2022-08-15T18:04:24Z",
        "body": null,
        "comments": 3
    },
    {
        "merged": true,
        "additions": 88,
        "deletions": 24,
        "changed_files": 18,
        "created_at": "2022-08-12T19:09:19Z",
        "closed_at": "2022-09-07T18:57:03Z",
        "merged_at": "2022-09-07T18:57:03Z",
        "body": null,
        "comments": 1
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-08-11T23:01:45Z",
        "closed_at": "2022-08-12T03:35:51Z",
        "merged_at": null,
        "body": "I don't know how common this mistake is (calling `useMatch` with no args), but it took me awhile to figure out what the cause of this error was:\r\n<img width=\"547\" alt=\"Screen Shot 2022-08-11 at 6 56 56 PM\" src=\"https://user-images.githubusercontent.com/5024663/184256422-fecb6195-aba0-40f3-9023-38226d2a237b.png\">\r\n\r\nSo now it looks like this:\r\n<img width=\"549\" alt=\"Screen Shot 2022-08-11 at 6 46 54 PM\" src=\"https://user-images.githubusercontent.com/5024663/184256496-6274719c-0b4e-431c-8211-6cca9b018b92.png\">\r\n\r\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-08-11T14:43:28Z",
        "closed_at": "2022-08-12T03:27:18Z",
        "merged_at": "2022-08-12T03:27:18Z",
        "body": "I've found this typo while reading the docs.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 72,
        "deletions": 41,
        "changed_files": 6,
        "created_at": "2022-08-11T02:30:11Z",
        "closed_at": "2022-08-11T05:51:46Z",
        "merged_at": null,
        "body": "This PR is heavily inspired from [new `Next js` Layout RFC](https://nextjs.org/blog/layouts-rfc).\r\n\r\nThis update would improve [Interaction on Next Paint](https://vercel.com/blog/improving-interaction-to-next-paint-with-react-18-and-suspense) and uses new concurrent feature :)\r\n\r\n_Sorry if I made any mistakes :(_ ",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 410,
        "deletions": 151,
        "changed_files": 15,
        "created_at": "2022-08-09T21:19:12Z",
        "closed_at": "2022-08-11T13:11:34Z",
        "merged_at": "2022-08-11T13:11:34Z",
        "body": "Removes the last two `React.ReactNode` type references from `@remix-run/router`.  It doesn't need to know or care about the `element`/`errorElement` in the end, it simply needs to know what routes have error boundaries so it can bubble errors accordingly.\r\n\r\nChanges:\r\n* `element`/`errorElement` removed from `@remix-run/router` types in favor of `hasErrorBoundary?: boolean`\r\n* Types exported from `@remix-run/router` renamed to `AgnosticRouteObject`, `AgnosticDataRouteObject`, `AgnosticRouteMatch`, and `AgnosticDataRouteMatch` for clarity\r\n* `react-router` extends these types with react-specific `element`/`errorElement` fields and exports the current public-API types of `RouteObject`, `DataRouteObject`, `RouteMatch`, and `DataRouteMatch`\r\n\r\nI'm not crazy about the `Agnostic*` prefixes but it makes it _very explicit_ that these are not the things you should be using in your application code, and you should always be using the non-agnostic types exported from `react-router` (or eventually `@remix-run/preact`, `@remix-run/vue`, etc.).",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 52,
        "deletions": 20,
        "changed_files": 3,
        "created_at": "2022-08-09T15:52:50Z",
        "closed_at": "2022-09-08T21:58:03Z",
        "merged_at": "2022-09-08T21:58:03Z",
        "body": "For static handler `query()` calls, we propagate out the `headers` from any returned `Response` instances for eventual use in the SSR response (`getDocumentHeaders` in Remix).  This PR ensures we also capture those on error flows (i.e., `throw new Response`)",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 339,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2022-08-09T14:38:42Z",
        "closed_at": "2022-08-09T18:26:42Z",
        "merged_at": "2022-08-09T18:26:42Z",
        "body": "Do not overwrite input values if a submitting button has the same name (same fix from https://github.com/remix-run/remix/pull/3611)",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-08-04T09:39:44Z",
        "closed_at": "2022-08-04T16:43:22Z",
        "merged_at": null,
        "body": null,
        "comments": 3
    },
    {
        "merged": true,
        "additions": 56,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2022-08-03T14:37:30Z",
        "closed_at": "2022-08-09T19:06:06Z",
        "merged_at": "2022-08-09T19:06:06Z",
        "body": "Prevent `<Navigate>` from kicking off duplicate `navigate()` calls when inside inside a data router.\r\n\r\nCloses #9122",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 26,
        "deletions": 39,
        "changed_files": 3,
        "created_at": "2022-08-01T20:12:16Z",
        "closed_at": "2022-08-01T23:30:42Z",
        "merged_at": "2022-08-01T23:30:41Z",
        "body": null,
        "comments": 3
    },
    {
        "merged": true,
        "additions": 221,
        "deletions": 58,
        "changed_files": 4,
        "created_at": "2022-08-01T16:25:29Z",
        "closed_at": "2022-08-09T20:22:49Z",
        "merged_at": "2022-08-09T20:22:49Z",
        "body": "Fixes some bugs with redirect history management and aligns on the navigation semantics of \"replace is determined by the origin\".  See https://github.com/remix-run/react-router/pull/9117#issuecomment-1209674666 and https://github.com/remix-run/react-router/pull/9117#issuecomment-1209688276 for rationale.\r\n\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 7178,
        "deletions": 1894,
        "changed_files": 50,
        "created_at": "2022-07-29T18:16:00Z",
        "closed_at": "2023-01-09T23:06:47Z",
        "merged_at": null,
        "body": "Hello everyone!\r\nMy name is Austin and I am a dev on Xbox. I primarily work on [Xbox Cloud Gaming](https://www.xbox.com/en-US/play). We currently leverage the `react-router` package and enjoy it. \r\n\r\n## The Problem\r\n\r\nWe are looking to upgrade to v6 soon and at the same time we are doing some work around Modals and wanted to leverage a `MemoryRouter` to control a Modal stack. We thought it would be great to navigate our Modals similar to how we navigate the rest of the site.\r\n\r\nKey features include \r\n- navigate between modals while passing data\r\n- pop a modal\r\n- push a modal\r\n- clear the stack\r\n- animated transitions, etc\r\n\r\nOur desired features led us back to `react-router`. We did not want to re-invent the wheel and thought something like a `MemoryRouter` would be perfect because we wanted our Modal routing system to not be exposed to the Browser. You cannot deep link into a modal or anything. It is just meant to be used for in-memory navigation, exactly the purpose of `<MemoryRouter>`.\r\n\r\nSo with that in mind, we went looking around to answer the question \"Can you have a MemoryRouter inside of a BrowserRouter?\". We ended up finding issues like the following:\r\n#9109\r\n#8817\r\n#7375\r\n\r\n## The Solution\r\n\r\nWe realized it is not possible to nest Routers in v6 and it was a bummer. After looking through the `react-router` code, we came to the conclusion that is is definitely possible to enable having nested MemoryRouter's inside of other Routers. So here we are, with a PR that enables nesting MemoryRouter's.\r\n\r\nExample Usage:\r\n```typescript\r\nimport {\r\n  BrowserRouter,\r\n  Routes,\r\n  Route,\r\n  Outlet,\r\n  Link,\r\n  createScopedMemoryRouterEnvironment,\r\n} from \"react-router-dom\";\r\n\r\nconst {\r\n  MemoryRouter: ScopedMemoryRouter,\r\n  Routes: ScopedRoutes,\r\n  Route: ScopedRoute,\r\n  useNavigate: useScopedNavigate,\r\n  Link: ScopedLink,\r\n} = createScopedMemoryRouterEnvironment();\r\n\r\nfunction ModalRouter() {\r\n  return (\r\n    <ScopedMemoryRouter initialEntries={[\"/\"]}>\r\n      <ScopedRoutes>\r\n        <ScopedRoute path=\"/\" element={<FirstModal />} />\r\n        <ScopedRoute path=\"second\" element={<SecondModal />} />\r\n        <ScopedRoute path=\"third\" element={<ThirdModal />} />\r\n      </ScopedRoutes>\r\n    </ScopedMemoryRouter>\r\n  );\r\n}\r\n\r\nfunction SecondModal() {\r\n  const navigate = useScopedNavigate();\r\n  return (\r\n    <div className=\"baseModal\">\r\n      <div className=\"modalContents\">\r\n        <h1>Second Modal</h1>\r\n        <ScopedLink to=\"/third\">Go to third modal</ScopedLink>\r\n        <button onClick={() => navigate(-1)}>Go back</button>\r\n        <Link to=\"/\">Go home</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Routes>\r\n        <Route path=\"/\" element={<Layout />}>\r\n          <Route index element={<Home />} />\r\n          <Route path=\"about\" element={<About />} />\r\n          <Route path=\"dashboard\" element={<Dashboard />} />\r\n          <Route path=\"modals\" element={<ModalRouter />} />\r\n          <Route path=\"*\" element={<NoMatch />} />\r\n        </Route>\r\n      </Routes>\r\n    </div>\r\n  );\r\n}\r\n``` \r\nYou can see this example under the new `examples/scoped-memory-router` demo.\r\n\r\n## How it works\r\n\r\nThere is a new method exported called `createScopedMemoryRouterEnvironment` which returns the various components / hooks needed for a scoped memory router.\r\n\r\nThis function does not return things like `BrowserRouter` since it does not make sense to have nested BrowserRouter's.\r\nIt works by making almost all components / hooks into create methods. Instead of having `useLocation` use the default context, we replaced it with a `createLocationHook` that is passed a context. We then use the default context for the default `useLocation` export, but it then allows us to create a new `useLocation` hook inside of `createScopedMemoryRouterEnvironment`.\r\n\r\nThis creator pattern was taken from `react-redux` as seen in their [useSelector implementation](https://github.com/reduxjs/react-redux/blob/720f0ba79236cdc3e1115f4ef9a7760a21784b48/src/hooks/useSelector.ts#L22).\r\n\r\nWe've leveraged `react-redux` `createSelectorHook` before and had a great time working with that pattern. We believe this pattern can also be used in `react-router` and have proved it out in this PR. These proposed changes would resolve issues like:\r\n#9109\r\n#8817\r\n#7375\r\n\r\n### Notes For Reviewers\r\nThis is my first time contributing to a large open source project, so please bear\ud83d\udc3b  with me. I still need to add more test cases, but wanted to get this review up to gather feedback early.  I am open to any and all changes, including naming. As we know naming is one of the hardest things in CS \ud83d\ude1c. I am not super familiar with all the various routers like the new DataRouter's, etc. I am not sure exactly what routers are allowed to be nested. Should `DataMemoryRouter` be nested? These are questions I am hoping you can answer. If you are open to these contributions, then I can write docs for this new feature, but I did not want to get ahead of myself.\r\n\r\n### FAQ\r\n\r\n#### Why do you need to create unique contexts?\r\nThe implementation in this PR allows navigation of different routers from any level of the application by allowing MemoryRouters to have distinct contexts.\r\n\r\nThe createScopedMemoryRouterEnvironment call returns scoped hooks that allow you to perform actions within the scoped MemoryRouter. You can see this at play in the example here:\r\n\r\n```typescript\r\nconst {\r\n  MemoryRouter: ScopedMemoryRouter,\r\n  Routes: ScopedRoutes,\r\n  Route: ScopedRoute,\r\n  useNavigate: useScopedNavigate,\r\n  Link: ScopedLink,\r\n} = createScopedMemoryRouterEnvironment();\r\n```\r\n\r\nIf you'd like to navigate the root BrowserRouter you'd use the regularly imported hooks from the lib and if you're navigating within the scoped memory router I'd anticipate you'd run this in a module in user-land code and re-export out these generated values, i.e.:\r\n\r\nsrc/embedded-application/scoped-react-router.ts\r\n\r\n```typescript\r\nexport const {\r\n  MemoryRouter,\r\n  Routes,\r\n  Route,\r\n  useNavigate,\r\n  Link,\r\n} = createScopedMemoryRouterEnvironment();\r\n```\r\n\r\nsrc/embedded-application/component/Foo.tsx\r\n\r\n```typescript\r\nimport { useNavigate as useScopedNavigate } from '../scoped-react-router';\r\nimport { useNavigate } from 'react-router';\r\n```\r\n\r\nThis allows us to navigate within the scoped Memory Router, but also navigate at the Browser Router level if needed.\r\nCheers!\r\n",
        "comments": 39
    },
    {
        "merged": false,
        "additions": 97,
        "deletions": 0,
        "changed_files": 5,
        "created_at": "2022-07-29T15:10:18Z",
        "closed_at": "2022-08-09T18:41:20Z",
        "merged_at": null,
        "body": "This has come up a few times in discord so I wanted to add an example of how this can be handled.  There's various ways to do this in increasing levels of complexity to achieve more parallelization and avoid CLS, I think the approach in this PR falls at the far end of that spectrum.  We may want to consider including examples of both the simple and complex ways?\r\n\r\nWhatever we land on should be copied to https://beta.reactrouter.com/en/dev/guides/code-splitting as well\r\n\r\nIn loose order of simple to complex:\r\n\r\n1. The _simplest_ approach is what [Ryan originally tweeted](https://twitter.com/ryanflorence/status/1531299852876849153)\r\n   * The downside here is that the loader and component are in the same file, so there's no parallelization since the loader can't execute until the entire component+loader chunk has downloaded so you get:\r\n     * `loader-and-component.ts -> loader fetch()`\r\n   * You end up delaying rendering longer, but guarantee \"no\" fallback (although suspense will flicker it for one cycle) \r\n2. In order to parallelize these you can split them into their own files (`views/root/loader.ts` and `views/root/component.tsx`)\r\n   * If you drop them in verbatim to Ryan's example, you can start the `loader fetch()` _sooner_ since it's not waiting on the component JS code to download\r\n   * But you don't actually start downloading the component JS chunk until _after_ the fetch (it's kicked off at render time by `React.lazy`), so you still have no parallelization:\r\n     * `loader.ts-> loader fetch() -> component.ts`\r\n   * So you're now rendering the destination reoute _sooner_ but showing a fallback for longer \r\n3. In order to parallelize you need to kick off the `component.ts` download sooner, and reduce the amnount of time a fallback is displayed  \r\n   * You could do it in the `loader()` and it runs in parallel with `loader fetch()`\r\n     * `loader.ts -> loader fetch()  `\r\n     * `.............component.ts`\r\n   * Or you can move it even earlier and start it alongside the `loader.ts` import.  this gives you even more time to try to get it fully downloaded before render time\r\n     * `loader.ts -> loader fetch()  `\r\n     * `component.ts`\r\n4. In the best case, by moving the component download you end up fully downloading it before the `loader fetch()` completes and there's no need for a Suspense fallback at all!\r\n   * But - you can't quite do this \ud83d\ude1e.  Even if it's already resolved, `React.lazy` will still throw the promise one time to unwrap the component so you'll get a single-frame flicker of the fallback.\r\n   * This PR shows one way to avoid this and track the resolution of the component chunk load in the `loader` and replace the `React.lazy()` component with a non-lazy one if it resolves in time.  Thus, since it's no longer a promise it will render directly and skip the Suspense fallback entirely.\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 4153,
        "deletions": 1814,
        "changed_files": 66,
        "created_at": "2022-07-26T16:19:58Z",
        "closed_at": "2022-07-26T21:21:13Z",
        "merged_at": "2022-07-26T21:21:13Z",
        "body": "Updates all unit tests and `examples/` to use `react@18`",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1083,
        "deletions": 808,
        "changed_files": 21,
        "created_at": "2022-07-25T16:57:24Z",
        "closed_at": "2022-08-01T19:27:15Z",
        "merged_at": "2022-08-01T19:27:15Z",
        "body": "* ~~Support auto-deferring root-level `Promise` values on raw JS objects from loaders~~\r\n  * We will only auto-track these promises as root values on a plain JS object, we will not track single promise return values nor nested promises in an object.\r\n  * Changed our minds on this to avoid confusion, we _do_ want an explicit `defer()` call\r\n* ~~Remove `deferred()` utility in favor of naked objects since we auto-track~~\r\n  * Renamed `deferred()` to `defer()` instead\r\n  * Note: Since we never cross a network in RR, user's can technically return `Promise`'s in any fashion they want from a loader, grab them from `useLoaderData`, and hand them to `<Await/>`\r\n  * This will work - but the promises won't be tracked internal to the router, and thus won't benefit from interruption/cancellation logic.  \r\n  * This should be strongly discouraged :) \r\n* Keep `loaderData` values as `Promise` objects and track resolve/rejected values internally\r\n* Rename `<Deferred value>` to `<Await resolve>` since it's now just awaiting a promise (useable for non-loaderData promises as well)\r\n* Allow `<Await resolve={value}>` with a non-Promise and it'll just directly render it via `useAsyncValue`\r\n* Rename `useDeferredData` = > `useAsyncValue`\r\n* Do not handle errors via `useRouteError` and instead `useAsyncError`",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 75,
        "deletions": 7,
        "changed_files": 3,
        "created_at": "2022-07-25T10:07:33Z",
        "closed_at": "2022-09-12T17:08:42Z",
        "merged_at": "2022-09-12T17:08:42Z",
        "body": "In order for the `useLocation` hook to work with the use of the modal pattern, routes with the `locationArg` prop are wrapped in a `LocationContext`. This is done conditionally in order to ensure performance in the default case doesn't change.\r\n\r\ncloses #8470 ",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 61,
        "deletions": 48,
        "changed_files": 4,
        "created_at": "2022-07-22T15:14:24Z",
        "closed_at": "2022-08-01T19:58:25Z",
        "merged_at": "2022-08-01T19:58:25Z",
        "body": "# What\r\nThis PR improves the `params` type of `generatePath`'s argument.\r\n\r\n```ts\r\ntype Star = \"*\"\r\ntype PathParam<\r\n Path extends string\r\n> = Path extends `:${infer Param}/${infer Rest}`\r\n   ? Param | PathParam<Rest>\r\n   : Path extends `:${infer Param}`\r\n     ? Param\r\n     : Path extends `${any}/:${infer Param}`\r\n         ? PathParam<`:${Param}`>\r\n         : Path extends `${any}/${Star}`\r\n           ? Star\r\n           : Path extends Star\r\n             ? Star \r\n             : never\r\nexport function generatePath<Path extends string>(path: Path, params: {\r\n  [key in PathParam<Path>]: string\r\n} = {} as any): string {\r\n  return \"\"\r\n}\r\n\r\ngeneratePath(\"a\", {}) // {}\r\n//^?\r\n\r\ngeneratePath(\":a\", {})// {\"a\": string;}\r\n//^?\r\n\r\ngeneratePath(\"/:a\", {})// {\"a\": string;}\r\n//^?\r\n\r\ngeneratePath(\"/:a/b\", {})// {\"a\": string;}\r\n//^?\r\n\r\ngeneratePath(\"/:a/:b\", {})// {\"a\": string; \"b\": string;}\r\n//^?\r\n\r\ngeneratePath(\"/a/:b\", {})// {\"b\": string;}\r\n//^?\r\n\r\ngeneratePath(\"/:a/b/:c\", {})// {\"a\": string; \"c\": string;}\r\n//^?\r\n\r\ngeneratePath(\"*\", {})// {\"*\": string;}\r\n//^?\r\n\r\ngeneratePath(\"/*\", {})// {\"*\": string;}\r\n//^?\r\n\r\ngeneratePath(\"/a/*/b\", {})// {}\r\n//^?\r\n\r\ngeneratePath(\"/a/b/*\", {})// {\"*\": string;}\r\n//^?\r\n```\r\n\r\nYou can try on [TS Playground](https://www.typescriptlang.org/play?#code/C4TwDgpgBAysCGAnKBeKAiAVOgUKSUACvMABbGLwC2APDkSaVBAB7AQB2AJgM5Q-BEASw4BzHAD5UDMszadeUAAYAuACQBvEQDMIyCtQC+Aek069UAEoQBhpfShQA-A0pUoAHxnkk1GtYEJBygVbzl2bj5VMw5dfV8qO2DHFwMqZJCw1gjFJU14DhATdS1YizSkxyrq1MY0mmiNCqUg6rbQ4llshSj8wpNNOCRKtraXIcQM0Y7GcJ7YBEnR5fHFqCnl0I4IADc9HFYwAHtEYChtAFcOAGNgISOOKFFOPRIITtIaD7nI-kERUQSAAUYEYMzIABooKC3DxQhoHABtADWEBAUBE3nqHwkAF1QgJhGIcIZpBpSfA+AUQABKAn-MRQBGORAQYAXRCPdC4Qw4HDPbaUdgfIHoUhHZ4qeDS9BQ8k0qDGYxM3lKgB6Tj5AtewsYoqlspVNKVTPQ8HQ9KJogA3KrjBqtS8he89ehjAa5YZjcqNGaLX8rbacOrNfynW8RW6pcYAEaG+Um33my0AoMhx2CiOu93wd1xz3e03JgOpjBxlNiNP20Pa52R4y5lT5o2J9DlkuVu0OsOZ3VkUU52Pu67xr2t4uE0voEcVm1dmvhvukUXYAut7Czqvd2tZ-tu1ctn1Yf2TzvB6sZnUuvcN4yYWOjwvk8-bxfX5du3Mxu+P9cnhlzi+oZAA)",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 37,
        "deletions": 36,
        "changed_files": 21,
        "created_at": "2022-07-20T20:14:05Z",
        "closed_at": "2022-07-26T21:25:17Z",
        "merged_at": null,
        "body": "Links to other markdown files in the documentation were resulting in a 404, and this PR fixes the issue.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 811,
        "deletions": 450,
        "changed_files": 15,
        "created_at": "2022-07-18T14:50:37Z",
        "closed_at": "2022-07-20T14:43:54Z",
        "merged_at": "2022-07-20T14:43:54Z",
        "body": "Aligns with new changes in https://github.com/remix-run/remix/pull/3434\r\n\r\n* Remove `Deferrable`/`ResolvedDeferrable` in favor of raw `Promise`'s and `Awaited`\r\n* Remove generics from `useDeferredData` until `useLoaderData` generic is decided in 6.5\r\n* Support array usages: `return deferred([ await critical() ,lazy() ])`\r\n* Updates `Deferred` `errorElement` to be a legit React error boundary and also handle render errors",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2022-07-15T20:37:55Z",
        "closed_at": "2022-07-15T22:22:11Z",
        "merged_at": "2022-07-15T22:22:11Z",
        "body": "Outlet and Route docs moved to the components subdirectory.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-07-15T09:44:21Z",
        "closed_at": "2022-07-15T13:31:12Z",
        "merged_at": "2022-07-15T13:31:12Z",
        "body": "## Bug descriptions\r\n![image](https://user-images.githubusercontent.com/27288153/179196704-b7fcdb61-b76e-4c34-8689-d731d915c1cd.png)\r\nWhen I click `History Object` in the nav bar, the scroll position is as the screenshot above.\r\n\r\n## What I expect\r\n![image](https://user-images.githubusercontent.com/27288153/179197665-3e988512-8626-4e4c-a2b0-37e9179cbb65.png)\r\nWhen I click `History Object` in the nav bar, the scroll position is on the title of History Object.\r\n\r\n## What did I do\r\nI change the `id` of `History` in Chapter Definitions to `history`, which ensures that there is just one `#history` and one `#history-object` on the current page.\r\n\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 371,
        "deletions": 1,
        "changed_files": 6,
        "created_at": "2022-07-14T21:13:42Z",
        "closed_at": "2022-08-12T15:33:16Z",
        "merged_at": "2022-08-12T15:33:16Z",
        "body": "This adds deferred docs. I haven't gotten the react router website running locally yet. I'll do that while this is getting reviewed to make sure links work and stuff.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 377,
        "deletions": 21,
        "changed_files": 5,
        "created_at": "2022-07-14T20:35:09Z",
        "closed_at": "2022-08-10T13:43:06Z",
        "merged_at": "2022-08-10T13:43:06Z",
        "body": "React-router implementation of https://github.com/remix-run/remix/pull/3697\r\n\r\nEnd state is the behavior specified in @ryanflorence's comment:\r\n\r\n| element | preserves search |\r\n|---------|-------------------------|\r\n| `<Form method=\"get\" action=\".\">` | \u274c |\r\n| `<Form method=\"get\">` | \u2705 |\r\n| `<form method=\"post\" action=\".\">` | \u274c |\r\n| `<form method=\"post\">` | \u2705 |\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 269,
        "deletions": 30,
        "changed_files": 11,
        "created_at": "2022-07-14T19:22:54Z",
        "closed_at": "2022-07-20T13:20:57Z",
        "merged_at": "2022-07-20T13:20:57Z",
        "body": "Small changes based on the API review\r\n\r\n* Ensure that returning `undefined` from `shouldRevalidate` results in revalidation.  You must opt out with an explicit `false` return \r\n* Change return type of `useRouteError` to `unknown`\r\n* Rename `Deferred` `fallback` prop to `fallbackElement`\r\n* Add `reloadDocument` to `<Form>`",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1216,
        "deletions": 562,
        "changed_files": 25,
        "created_at": "2022-07-14T14:37:20Z",
        "closed_at": "2022-07-22T14:47:42Z",
        "merged_at": "2022-07-22T14:47:42Z",
        "body": "Follow up changes to #9013 based on issues encountered while integrating this into Remix as well as API reviews",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 438,
        "deletions": 108,
        "changed_files": 7,
        "created_at": "2022-07-11T14:37:01Z",
        "closed_at": "2022-07-12T14:35:26Z",
        "merged_at": "2022-07-12T14:35:26Z",
        "body": "Closes: #9045",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-07-08T07:44:25Z",
        "closed_at": "2022-07-08T16:57:41Z",
        "merged_at": null,
        "body": "add `<Link>` github code ref link",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2022-07-05T20:01:11Z",
        "closed_at": "2022-07-06T15:16:31Z",
        "merged_at": "2022-07-06T15:16:31Z",
        "body": "prevent duplicate runs for Pull Requests\r\n\r\nthe real fix here was specifying which branches should trigger the \"push\" event, but also normalizing the action between react-router and remix",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-07-05T13:35:22Z",
        "closed_at": "2022-07-05T17:33:40Z",
        "merged_at": null,
        "body": null,
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-07-04T02:32:56Z",
        "closed_at": "2022-07-04T18:02:41Z",
        "merged_at": "2022-07-04T18:02:41Z",
        "body": "Fix link to `useRoutes` in quote block.\r\n\r\nWhat the link currently displays like:\r\n![image](https://user-images.githubusercontent.com/17777797/177072418-393ad535-2e00-4aa5-8173-0cbae5133d1d.png)\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 27,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-07-03T13:54:09Z",
        "closed_at": "2022-07-05T17:36:59Z",
        "merged_at": null,
        "body": "Update `useNavigate` documentation to explain how to access the data sent in the `state` object, using `useLocation` in the target component.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-07-03T07:46:34Z",
        "closed_at": "2022-07-04T18:02:12Z",
        "merged_at": "2022-07-04T18:02:12Z",
        "body": "<Link> Tag needs <Text> in React Native for usage, otherwise throws Errors",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 89,
        "deletions": 9198,
        "changed_files": 9,
        "created_at": "2022-07-01T19:41:55Z",
        "closed_at": "2022-07-02T05:56:32Z",
        "merged_at": null,
        "body": "**[Motivation]**\r\n\r\ncurrent sub routes can not match absolute path\r\nlet's say there are 2 pages, `/loginByEmail` and `/loginByPhone`,  which used the same element  `LoginPage` (use same component, avoid flash screen when dynamic load different component )\r\nin route config, it would be like this\r\n```\r\n[\r\n  {\r\n  path:\"\",\r\n  element:<AuthWrapper>,\r\n  children:[\r\n    {path:\"/loginByEmail\",element:<Loginpage />},\r\n    {path:\"/loginByPhone\",element:<Loginpage />}\r\n  ]\r\n]\r\n```\r\nthen we call useRoutes(routeConfig) to display the root route config in App component.\r\n\r\nthe AuthWrapper contain some auth check logic, will just placed an `<Outlet />` inside.\r\n\r\nand in the `LoginPage`\r\nwe use a Routes element to render sub routes\r\n```\r\n...other layout codes...\r\n<Routes>\r\n  <Route path='/loginByEmail' element={EmailLoginPanel}>\r\n  <Route path='/loginByPhone' element={PhoneLoginPanel}>\r\n</Routes>\r\n...\r\n```\r\n\r\nas current react-router's logic, the email login panel will not display when user visit `/loginByEmail`, buy need visit `/loginByEmail/loginByEmail`, because the parent route has matched `/loginByEmail`, and the path of child routes if based the parent match path, even they are starts with `/`. \r\n\r\nso i add an originPathname with current location parameter, as the value is just equals current page's pathname when call `matchRoutes`\r\n[packages/react-router/lib/hooks.tsx:345]\r\n\r\nif the child route's path is start with `/`, then we can try test with this originPathname,so that the absolute path can be supported\r\n\r\nALSO upgraded dependencies and modified the rollup-config file,to solve [build failed problem](https://stackoverflow.com/questions/72829493/build-react-router-failed-with-error-unexpected-token-note-that-you-need-plugi)",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 232,
        "deletions": 12,
        "changed_files": 7,
        "created_at": "2022-06-30T18:47:26Z",
        "closed_at": "2022-07-01T14:53:21Z",
        "merged_at": "2022-07-01T14:53:21Z",
        "body": "Adds `basename` prop to `Data*` routers",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2022-06-30T05:27:27Z",
        "closed_at": "2022-06-30T15:10:14Z",
        "merged_at": "2022-06-30T15:10:14Z",
        "body": null,
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-06-28T22:48:42Z",
        "closed_at": "2022-06-29T16:54:38Z",
        "merged_at": "2022-06-29T16:54:38Z",
        "body": null,
        "comments": 4
    },
    {
        "merged": true,
        "additions": 60,
        "deletions": 10,
        "changed_files": 1,
        "created_at": "2022-06-27T16:50:26Z",
        "closed_at": "2022-08-09T20:24:15Z",
        "merged_at": "2022-08-09T20:24:15Z",
        "body": "Follow up to the discussion in https://github.com/remix-run/react-router/pull/8985#discussion_r898024544 to strengthen the existing `..` navigation tests",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 61,
        "deletions": 210,
        "changed_files": 9,
        "created_at": "2022-06-27T15:06:46Z",
        "closed_at": "2022-06-27T22:18:56Z",
        "merged_at": "2022-06-27T22:18:56Z",
        "body": "Simplify the `@remix-run/router` build down to remove all the various builds and just ship source code + ESM/CJS/d.ts files\r\n\r\n```\r\npackage.json\r\nindex.ts         # TS source code for deno\r\ndist/\r\n  index.d.ts     ## Types for IDEs\r\n  router.js      ## ESM build\r\n  router.cjs.js  ## CJS build\r\n```\r\n\r\nTo test, you can do the following:\r\n\r\n\r\n```bash\r\ncd packages/router\r\nrm -rf dist\r\nnpx rollup -c\r\nnpm pack\r\ntar -xzf remix-run-router-0.2.0-pre.3.tgz\r\nls package/\r\n\r\n## cleanup artifacts\r\nrm -rf package/\r\nrm remix-run-router-0.2.0-pre.3.tgz\r\n```",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 187,
        "deletions": 7,
        "changed_files": 4,
        "created_at": "2022-06-27T14:13:34Z",
        "closed_at": "2022-06-27T22:20:46Z",
        "merged_at": "2022-06-27T22:20:46Z",
        "body": "This used to just throw via an `invariant(matches)`, but we should handle this like any other error and bubble to the nearest boundary",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 7024,
        "deletions": 427,
        "changed_files": 24,
        "created_at": "2022-06-24T21:22:13Z",
        "closed_at": "2022-07-14T14:31:57Z",
        "merged_at": "2022-07-14T14:31:57Z",
        "body": "> **Note:** This PR replaces #9010 and rebases that work on top of #9002 (deferred) since there were a handful of conflicts to resolve in `router.ts`.  Once #9002 is merged I'll get this rebased onto `dev`.\r\n\r\nAdds a `createStaticHandler` method for the router usage on the server. \r\n\r\n* Create a router:\r\n  * `let { dataRoutes, query, queryRoute } = createStaticHandler({ routes })`\r\n  * `dataRoutes` is the `routes` with guaranteed unique IDs on them, and is required to be passed to `<DataStaticRouter>`\r\n* Handle a document request via `query`:\r\n  * `query(Request) => Promise<StaticRouterState | Response>`\r\n  * If a `Response` is returned - it should be handled as an HTTP response\r\n  * If `state` is returned that can be rendered via `<DataStaticRouter dataRoutes={dataRoutes} state={state} />`\r\n* Handle a single route/data request via `queryRoute`:\r\n  * `queryRoute(Request, routeId) => Promise<any>`\r\n  * If a `Response` is returned - it should be handled as an HTTP response\r\n  * If anything else is returned it should be sent back verbatim\r\n\r\nThis also fixes a small `DataBrowserRouter` hydration error due to a missing param for `useSyncExternalStoreShim`\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-06-24T18:19:41Z",
        "closed_at": "2022-06-26T23:55:37Z",
        "merged_at": null,
        "body": "Addresses #9011 useParams()'s new `{}` return.\r\n\r\nThis might be made more general (covering more than the special case of a falsey `routeMatch`)",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 6660,
        "deletions": 267,
        "changed_files": 23,
        "created_at": "2022-06-23T18:23:05Z",
        "closed_at": "2022-06-24T21:19:44Z",
        "merged_at": null,
        "body": "Adds a `createStaticHandler` method for the router usage on the server.  This exposes 2 methods:\r\n\r\n* Create a router:\r\n  * `let { dataRoutes, query, queryRoute } = createStaticHandler({ routes })`\r\n  * `dataRoutes` is the `routes` with guaranteed unique IDs on them, and is required to be passed to `<DataStaticRouter>`\r\n* Handle a document request:\r\n  * `query(Request) => Promise<StaticRouterState | Response>`\r\n  * If a `Response` is returned - it should be handled as an HTTP response\r\n  * If state is returned that can be rendered via `<DataStaticRouter dataRoutes={dataRoutes} {state={state}>`\r\n* Handle a route/data request:\r\n  * `queryRoute(Request, routeId) => Promise<any>`\r\n  * If a `Response` is returned - it should be handled as an HTTP response\r\n  * If anything else is returned it should be sent back verbatim\r\n\r\nThis also fixes a small `DataBrowserRouter` hydration error due to a missing param for `useSyncExternalStoreShim`\r\n\r\nReplaces #8986",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-06-23T16:03:53Z",
        "closed_at": "2022-06-26T23:40:30Z",
        "merged_at": "2022-06-26T23:40:29Z",
        "body": "fix docs typo which uses `revalidate` instead of `revalidator`",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-06-23T08:17:26Z",
        "closed_at": "2022-06-23T14:26:13Z",
        "merged_at": "2022-06-23T14:26:13Z",
        "body": "as explained in this issue: https://github.com/remix-run/react-router/issues/9007 generatePath expects strings for params but are ints in the docs",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 23,
        "deletions": 10,
        "changed_files": 2,
        "created_at": "2022-06-22T04:00:23Z",
        "closed_at": "2022-06-23T14:18:33Z",
        "merged_at": null,
        "body": "The current documentation for Layout routes gives a perception that they **wrap** around the child route components where as they require an **outlet** to render the child route components.\r\n\r\nFor example, we expect the layout component to be doing something like this:\r\n```jsx\r\nfunction Layout(props) {\r\n  return (\r\n    <div>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n```\r\nwhere as it uses an outlet component to render the child route components:\r\n```jsx\r\nfunction Layout(props) {\r\n  return (\r\n    <div>\r\n      <Outlet />\r\n    </div>\r\n  );\r\n}\r\n```\r\n\r\nThis has created some confusion in the community,\r\n- [Stackoverflow Thread 1](https://stackoverflow.com/questions/70236929/react-router-v6-shared-layouts)\r\n- [Stackoverflow Thread 2](https://stackoverflow.com/questions/70852993/children-wont-render-when-using-a-layout-in-reactjs)\r\n\r\nThis PR updates the docs to describe Layout component structure and the need for using an outlet component.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 3010,
        "deletions": 254,
        "changed_files": 14,
        "created_at": "2022-06-21T21:46:37Z",
        "closed_at": "2022-07-01T15:07:02Z",
        "merged_at": "2022-07-01T15:07:02Z",
        "body": "* Add's `deferred()` support to `loader`'s in data routers\r\n* Unit tests cover main usages\r\n* Can be manually tested via the `examples/data-router` app using the `/deferred` and `/deferred/child` routes\r\n  * probably need to run via `USE_SOURCE=true npm run dev`",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-06-19T13:08:31Z",
        "closed_at": "2022-06-30T15:07:36Z",
        "merged_at": "2022-06-30T15:07:36Z",
        "body": null,
        "comments": 6
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-06-17T09:22:59Z",
        "closed_at": "2022-06-18T00:20:58Z",
        "merged_at": "2022-06-18T00:20:58Z",
        "body": "When reading the v6 doc I noticed there were no mention of what \"replace\" is used for on the \"useNavigate\" page. This PR fixes this issue.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2022-06-16T16:51:20Z",
        "closed_at": "2022-06-30T15:07:01Z",
        "merged_at": "2022-06-30T15:07:01Z",
        "body": "The `To` type originates in the `history` source code here: https://github.com/remix-run/history/blob/3e9dab413f4eda8d6bce565388c5ddb7aeff9f7e/packages/history/index.ts#L178\r\n\r\nThis PR updates the React Router docs to have the correct definition of `To`. `To` can be a partial of `Path`, not `Location`.",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 6010,
        "deletions": 158,
        "changed_files": 22,
        "created_at": "2022-06-15T16:07:23Z",
        "closed_at": "2022-06-23T18:13:25Z",
        "merged_at": null,
        "body": "This PR handles some SSR edge cases for the remix router and adds an example of SSR using `DataStaticRouter`.\r\n\r\n* `createRouter` now takes an `isSSR` flag which makes minor internal behavioral changes for SSR\r\n* `DataStaticRouter` now accepts the `router` itself, the server is responsible for router instantiation and initial navigation",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 42,
        "deletions": 14,
        "changed_files": 4,
        "created_at": "2022-06-14T21:47:02Z",
        "closed_at": "2022-06-21T20:42:45Z",
        "merged_at": "2022-06-21T20:42:45Z",
        "body": "Discussed in Discord ([thread](https://discord.com/channels/770287896669978684/986363885760176158)). #8697 and #8954 updated the logic in `useNavigate` without making the corresponding change to `useResolvedPath`, which is used to set the `href` on `Link`s. This means there are cases where the href is correct but the navigate behavior is wrong and vice versa.\r\n\r\nGoing to try to add a test that reproduces the bug I was seeing.",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 45,
        "deletions": 6,
        "changed_files": 4,
        "created_at": "2022-06-14T20:59:35Z",
        "closed_at": "2022-06-21T21:19:58Z",
        "merged_at": "2022-06-21T21:19:58Z",
        "body": "Do not manually specify the `Content-Type` in our `Request` creation, the browser will do that automatically based on the `FormData` contents.\r\n\r\nCloses #8982",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 43,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2022-06-14T17:17:06Z",
        "closed_at": "2022-06-22T11:56:36Z",
        "merged_at": null,
        "body": "Fixes #8982",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 444,
        "deletions": 0,
        "changed_files": 7,
        "created_at": "2022-06-14T15:08:49Z",
        "closed_at": "2022-06-22T14:30:49Z",
        "merged_at": "2022-06-22T14:30:49Z",
        "body": "this takes our approach from remix-run/remix and ups it a notch by using `workflow_call` instead of using a `repository_dispatch` call which is more in-tune with proper reusability - I've back ported that to remix here https://github.com/remix-run/remix/pull/3470",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 250,
        "deletions": 78,
        "changed_files": 5,
        "created_at": "2022-06-13T21:06:37Z",
        "closed_at": "2022-06-22T13:15:01Z",
        "merged_at": "2022-06-22T13:15:01Z",
        "body": "We are currently defaulting `<Form method=\"post\">` to be a `REPLACE` navigation by default, but this is a bit aggressive because if the action redirects, then we lose the starting location. \r\n\r\nFor example, without a redirect, the following is correct:\r\n* User is on `/`\r\n* Navigates to `/form`\r\n* Submits to `/form` _and does not redirect_\r\n* The submission should REPLACE so that POP does not re-play the post and goes back to `/`\r\n\r\nHowever, if the action is redirecting, they're already handling the `REPLACE` and we should stay with `PUSH` so the user can back-navigate to the form:\r\n* User is on `/`\r\n* Navigates to `/form`\r\n* Submits to `/form` _and redirects to `/results`_\r\n* The submission should PUSH so that POP goes back to `/form`\r\n\r\nThis PR removes the push/replace logic from `useSubmitImpl` and lets the router handle it all\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 57,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2022-06-13T19:04:17Z",
        "closed_at": "2022-06-21T22:03:37Z",
        "merged_at": "2022-06-21T22:03:37Z",
        "body": "No functionality changes, adds unit tests for the scenario fixed in Remix via https://github.com/remix-run/remix/pull/3460 (Bug https://github.com/remix-run/remix/issues/3302)",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 1,
        "changed_files": 4,
        "created_at": "2022-06-13T15:17:40Z",
        "closed_at": "2022-06-13T22:10:03Z",
        "merged_at": "2022-06-13T22:10:03Z",
        "body": "* Forgot to export `ActionFunctionArgs`/`LoaderFunctionArgs` up through `react-router*` packages in https://github.com/remix-run/react-router/pull/8947.  \r\n* Also noticed that the new `dist/` directories weren't added to `.eslintignore`\r\n\r\nCloses #8942",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 198,
        "deletions": 23,
        "changed_files": 3,
        "created_at": "2022-06-13T12:47:04Z",
        "closed_at": "2022-06-21T21:28:26Z",
        "merged_at": "2022-06-21T21:28:26Z",
        "body": "Fixes an issue where existing `loaderData` would get lost for loaders opting out of revalidation\r\n\r\nCloses #8969 ",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 137,
        "deletions": 107,
        "changed_files": 2,
        "created_at": "2022-06-09T19:04:57Z",
        "closed_at": "2022-06-10T16:00:33Z",
        "merged_at": "2022-06-10T16:00:33Z",
        "body": "No code changes, just reworked some tests to ensure the return value of `undefined` for `useRouteLoaderData('not-found-route-id')`",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-06-09T17:50:43Z",
        "closed_at": "2022-06-10T00:59:23Z",
        "merged_at": "2022-06-10T00:59:23Z",
        "body": "use-routes instead of use-route",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 29,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2022-06-09T17:21:00Z",
        "closed_at": "2022-06-10T16:00:20Z",
        "merged_at": "2022-06-10T16:00:20Z",
        "body": "Follow up to #8954 ",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 247,
        "deletions": 61,
        "changed_files": 8,
        "created_at": "2022-06-08T15:05:54Z",
        "closed_at": "2022-06-08T16:46:56Z",
        "merged_at": "2022-06-08T16:46:56Z",
        "body": "Continuation of #8909 to get conflicts resolved and handle for `react-router-native`\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1474,
        "deletions": 1181,
        "changed_files": 37,
        "created_at": "2022-06-08T00:19:34Z",
        "closed_at": "2022-06-10T15:48:47Z",
        "merged_at": "2022-06-10T15:48:47Z",
        "body": "Same as https://github.com/remix-run/remix/pull/3376 for this repo.  \r\n\r\n* Updates `rollup` to the latest version (4f62c1ed)\r\n* Splits the `rollup.config.js` files out into the individual `packages/*` directories (c04c2d84)\r\n* Keeps the root `rollup.config.js` which automatically loads all `packages/*/rollup.config.js` files and does a full build\r\n* Removes `tsc -b` and moves to `@rollup/plugin-typescript` to generate `.d.ts` files\r\n\r\nThis allows us to run `npx rollup -c [--watch]` from either the root or the individual package directories.\r\n\r\nThis also moves the build output to `packages/*/dist/` directories and does a few things that stemmed from that:\r\n\r\n* Updates `package.json` `main`/`module`/`types` references\r\n* Adds `moduleNameMappers` to `jest` configs to avoid running unit tests on `dist/` folder contents\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 22,
        "deletions": 4,
        "changed_files": 6,
        "created_at": "2022-06-07T19:14:05Z",
        "closed_at": "2022-09-09T14:13:54Z",
        "merged_at": "2022-09-09T14:13:54Z",
        "body": "Just like I did in https://github.com/remix-run/remix/pull/3360",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2022-06-07T15:03:48Z",
        "closed_at": "2022-06-10T15:59:38Z",
        "merged_at": "2022-06-10T15:59:38Z",
        "body": "[Preview docs](https://beta.reactrouter.com/en/brophdawg11-docs-update/hooks/use-fetcher)",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 18,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2022-06-07T14:45:58Z",
        "closed_at": "2022-06-10T15:59:22Z",
        "merged_at": "2022-06-10T15:59:22Z",
        "body": "Closes #8942",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 243,
        "deletions": 25,
        "changed_files": 4,
        "created_at": "2022-06-07T13:11:52Z",
        "closed_at": "2022-06-10T15:58:31Z",
        "merged_at": "2022-06-10T15:58:31Z",
        "body": "Errors from `useFetcher()` should propagate upwards from the Route in which they were used and use the closest error boundary",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 85,
        "deletions": 84,
        "changed_files": 7,
        "created_at": "2022-06-06T23:35:33Z",
        "closed_at": "2022-06-07T19:08:10Z",
        "merged_at": "2022-06-07T19:08:10Z",
        "body": "Just like I did in https://github.com/remix-run/remix/pull/3315",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-06-06T22:15:37Z",
        "closed_at": "2022-06-07T19:10:26Z",
        "merged_at": null,
        "body": "On typescript, exact and index are not there as parameters which causes issues when using typescript\r\n<img width=\"1355\" alt=\"Screen Shot 2022-06-06 at 5 15 03 PM\" src=\"https://user-images.githubusercontent.com/98195031/172258175-5a83adc0-d1cc-4fbd-bc6b-01dbfb685ed0.png\">\r\n\r\nThe tiny update adds \"exact\" and \"index\" as parameter options for path route in typescript\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 127,
        "deletions": 188,
        "changed_files": 13,
        "created_at": "2022-06-06T17:01:53Z",
        "closed_at": "2022-06-06T19:35:40Z",
        "merged_at": "2022-06-06T19:35:40Z",
        "body": "Minor updates + cleanup in preparation for `6.4.0-pre.3`\r\n\r\n* Removes stale/unused `use-sync-external-store` dependency in `package.json`\r\n* Change `fallbackElement` type to `ReactNode` for more flexible typing (REM-1146)\r\n* Make `fallbackElement` optional for SSR use-case and to match what the docs currently show (#8896)\r\n* Pass fetcher `actionResult` through to shouldRevalidate on fetcher submissions (REM-1159)\r\n* Brings `packages/router/README.md` up to date\r\n\r\nCloses: #8896",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2022-06-06T14:24:06Z",
        "closed_at": "2022-06-07T19:07:19Z",
        "merged_at": "2022-06-07T19:07:19Z",
        "body": "Fixes #8931 (_Reopen since `/remixing` is deleted_)\r\nIn current build, rollup outputs these named exports: `useSyncExternalStore`, `startTransition` from React. If the user's React version doesn't export them, Webpack won't build:\r\n```\r\nERROR in ./node_modules/react-router/index.js 61:10-25\r\nexport 'startTransition' (imported as 'startTransition') was not found in 'react'\r\n```\r\n\r\nThis fix prevents rollup from outputting these named imports.\r\n`node_modules/react-router/index.js`:\r\n\r\n```js\r\n//before\r\nimport { startTransition, useSyncExternalStore as useSyncExternalStore$3, createContext, useContext, useMemo, useRef, useEffect as useEffect$1, useCallback, createElement, Fragment, Component, useState as useState$1, useLayoutEffect as useLayoutEffect$1, Children, isValidElement } from 'react';\r\n\r\n//after\r\nimport { createContext, useContext, useMemo, useRef, useEffect as useEffect$1, useCallback, createElement, Fragment, Component, useState as useState$1, useLayoutEffect as useLayoutEffect$1, Children, isValidElement } from 'react';\r\n```\r\n\r\n\r\nhttps://rollupjs.org/guide/en/#outputinterop\r\nhttps://github.dev/webpack/webpack/blob/f9e6b682aba059d13aa3e170ac42b7a797a0ef3f/lib/dependencies/HarmonyImportDependency.js#L141",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2022-06-05T23:55:59Z",
        "closed_at": "2022-06-07T19:08:41Z",
        "merged_at": null,
        "body": "Thank you for the thorough documentation about router concepts! While reading this page, I noticed there were a couple of places where dashes were being used in a non-standard way and also found a missing colon (most other places in this file use a colon before code blocks). I know this is to some extent a matter of style but I figured I might as well standardize the grammar here if I could. Thanks again!",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2022-06-05T06:51:26Z",
        "closed_at": "2022-06-06T14:04:30Z",
        "merged_at": null,
        "body": "Fixes #8931 \r\nIn current build, rollup outputs these named exports: `useSyncExternalStore`, `startTransition` from React. If the user's React version doesn't export them, Webpack won't build:\r\n```\r\nERROR in ./node_modules/react-router/index.js 61:10-25\r\nexport 'startTransition' (imported as 'startTransition') was not found in 'react'\r\n```\r\n\r\nThis fix prevents rollup from outputting these named exports.\r\n`node_modules/react-router/index.js`:\r\n\r\n```js\r\n//before\r\nimport { startTransition, useSyncExternalStore as useSyncExternalStore$3, createContext, useContext, useMemo, useRef, useEffect as useEffect$1, useCallback, createElement, Fragment, Component, useState as useState$1, useLayoutEffect as useLayoutEffect$1, Children, isValidElement } from 'react';\r\n\r\n//after\r\nimport { createContext, useContext, useMemo, useRef, useEffect as useEffect$1, useCallback, createElement, Fragment, Component, useState as useState$1, useLayoutEffect as useLayoutEffect$1, Children, isValidElement } from 'react';\r\n```\r\n\r\n\r\nhttps://rollupjs.org/guide/en/#outputinterop\r\nhttps://github.dev/webpack/webpack/blob/f9e6b682aba059d13aa3e170ac42b7a797a0ef3f/lib/dependencies/HarmonyImportDependency.js#L141",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 72,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2022-06-03T19:48:47Z",
        "closed_at": "2023-04-25T13:18:14Z",
        "merged_at": "2023-04-25T13:18:14Z",
        "body": "Fixes https://github.com/remix-run/react-router/issues/8809",
        "comments": 13
    },
    {
        "merged": false,
        "additions": 191,
        "deletions": 33,
        "changed_files": 15,
        "created_at": "2022-06-03T13:48:28Z",
        "closed_at": "2022-06-03T19:46:55Z",
        "merged_at": null,
        "body": "Fixes https://github.com/remix-run/react-router/issues/8809",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-06-02T23:05:44Z",
        "closed_at": "2022-06-07T19:05:37Z",
        "merged_at": "2022-06-07T19:05:37Z",
        "body": "`style` can be `React.CSSProperties` or `undefined`, so I think it should be able to return these values when using a function as well.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 3887,
        "deletions": 2479,
        "changed_files": 45,
        "created_at": "2022-06-02T14:02:32Z",
        "closed_at": "2022-06-14T21:00:55Z",
        "merged_at": "2022-06-14T21:00:55Z",
        "body": "Note, there are a few hacks here because of the v5 compat package. Changesets assumes that an internal peer dependency's version range should include the version of that package in our repo. This normally makes sense, but the compat package has a peer dependency on `react-router-dom` v4 or v5, so we need to:\r\n\r\n1. Avoid validity checks for peer dependencies (done via patch package)\r\n2. Reset the automatic version updates resulting from `yarn changeset version` (done via a simple node script)",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2022-06-01T04:44:33Z",
        "closed_at": "2022-06-07T18:05:54Z",
        "merged_at": null,
        "body": "# Issue\r\nreact-router and react-router-dom's fixed react and react-dom dependencies are causing multiple versions of react and react-dom to be bundled in my remix app. \r\n# Fix\r\nUpdate package.json to version 18.1. Alternatively this could be changed to be >16 like the other Remix packages I can confirm that this fixes it in my Remix stack.",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2022-05-30T19:18:12Z",
        "closed_at": "2022-05-31T03:15:55Z",
        "merged_at": "2022-05-31T03:15:55Z",
        "body": "change outdated \"location\" navlink to /utils/location",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 0,
        "changed_files": 5,
        "created_at": "2022-05-30T10:55:30Z",
        "closed_at": "2022-06-08T17:05:51Z",
        "merged_at": "2022-06-08T17:05:51Z",
        "body": "## Description\r\nI would like to expose the fParamParseKey from react-router (and all of it's different interfaces).\r\n\r\n## Why?\r\nTo be able to extend the functionality of react router for reasons specific to the use case. I don't think these use cases should be native functionality of React Router though as they can be quite niche.\r\n\r\n**Example 1**\r\n\r\nHere is a copy of the example in #8472 \r\n\r\n```ts\r\nconst match = useResolveMatch(':orderId');\r\n\r\n// Want to be able to use ParamParseKey here\r\nexport const useResolvedMatch = <\r\n  ParamKey extends ParamParseKey<Path>,\r\n  Path extends string,\r\n>(\r\n  to: Path,\r\n  end = true,\r\n): PathMatch<ParamKey> | null =>\r\n  useMatch({ path: useResolvedPath(to).pathname, end })\r\n```\r\n\r\nclose #8472",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-05-30T08:23:22Z",
        "closed_at": "2022-05-31T03:05:40Z",
        "merged_at": "2022-05-31T03:05:40Z",
        "body": "use-routes instead of use-route",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 92,
        "deletions": 13,
        "changed_files": 4,
        "created_at": "2022-05-28T09:43:36Z",
        "closed_at": "2022-06-08T15:05:00Z",
        "merged_at": "2022-06-08T15:04:59Z",
        "body": "# What this PR does\r\nThis PR modifies setSearchParams to support [functional updates](https://reactjs.org/docs/hooks-reference.html#functional-updates), just like setState of React.useState.\r\n`setSearchParams` can take a function of type `((prev: URLSearchParams) => URLSearchParamsInit)` as an input.\r\nWhen given a function of aforementioned type, `setSearchParams` will provide current `searchParams` to the given function, and its returned value will be set as `searchParams`.\r\n\r\n# Why this PR is made\r\n1. Current react-router [documentation](https://reactrouter.com/docs/en/v6/hooks/use-search-params) makes an analogy between useState and useSearchParams. Adding this to minor feature will further accommodate the analogy.\r\n2. I personally have seen&used this feature being implemented in several different codebases. It proved to be useful.\r\n3. Only one small logic and several lines of code are added, so this change will keep react-router slim.\r\n\r\n# What can be further done\r\nThis change can also be implemented to react-router-dom package too.\r\nNot having used react-router-dom package before, I have excluded it from this PR.\r\n\r\n# Etc\r\nFeature, test, and documentation are all included.\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 36,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-05-23T15:12:07Z",
        "closed_at": "2022-05-24T04:37:03Z",
        "merged_at": "2022-05-24T04:37:03Z",
        "body": "Added to migration guide v5 -> v6:\r\n\r\n- information about changes to `matchPath` function",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-05-22T14:23:45Z",
        "closed_at": "2022-05-22T21:19:52Z",
        "merged_at": "2022-05-22T21:19:52Z",
        "body": null,
        "comments": 3
    },
    {
        "merged": false,
        "additions": 48,
        "deletions": 4,
        "changed_files": 4,
        "created_at": "2022-05-21T10:51:39Z",
        "closed_at": "2022-05-21T17:10:27Z",
        "merged_at": null,
        "body": "This PR implements  feature: escape basename #8889 ",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-05-21T05:34:05Z",
        "closed_at": "2022-05-21T17:03:19Z",
        "merged_at": "2022-05-21T17:03:19Z",
        "body": "- Match up URL with pathname",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-05-20T06:39:31Z",
        "closed_at": "2022-05-21T17:01:04Z",
        "merged_at": "2022-05-21T17:01:04Z",
        "body": null,
        "comments": 3
    },
    {
        "merged": true,
        "additions": 26,
        "deletions": 25,
        "changed_files": 7,
        "created_at": "2022-05-18T14:53:51Z",
        "closed_at": "2022-05-18T23:24:31Z",
        "merged_at": "2022-05-18T23:24:31Z",
        "body": "Fixed urls for annotation etc.\r\nIn the main branch, the path to the documentation on the website has been changed.\r\n\r\nSorry if you plan to fix this after merging the dev branch.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 70,
        "deletions": 1,
        "changed_files": 4,
        "created_at": "2022-05-17T03:23:13Z",
        "closed_at": "2022-05-18T12:37:10Z",
        "merged_at": "2022-05-18T12:37:10Z",
        "body": "Fixes bug #8699 \r\n\r\nWhen a route is nested within a layout route, it wont render routes starting with an '@' symbol:\r\n```\r\n<Routes>\r\n    <Route element={<Layout />}>\r\n        <Route path=\":id\" element={<Chat />} />\r\n    </Route>\r\n</Routes>\r\n```\r\n\r\nNote that the router works correctly when the parent is NOT a layout route (i.e. has a path defined), or is at the root level:\r\n```\r\n    <Router>\r\n      <Routes>\r\n        <Route path=\":id\" element={'works with /@tom'}/>\r\n        <Route path=\"nested\">\r\n          <Route path=\":id\" element={'works with /nested/@tom'}/>\r\n        </Route>\r\n      </Routes>\r\n    </Router>\r\n```",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 340,
        "deletions": 26,
        "changed_files": 3,
        "created_at": "2022-05-16T15:43:56Z",
        "closed_at": "2022-05-16T20:21:19Z",
        "merged_at": "2022-05-16T20:21:19Z",
        "body": "Adds `isPending` logic to `NavLink` for styling links during navigations.  This also adds the internal refactor for `isActive` discussed in https://github.com/remix-run/react-router/pull/8567#issuecomment-1054471899\r\n ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-05-14T15:23:55Z",
        "closed_at": "2022-05-15T03:44:54Z",
        "merged_at": "2022-05-15T03:44:54Z",
        "body": "It's awesome, that `generatePath` can help you to know what params you need to supply for interpolation.\r\n\r\nHowever it currently breaks, if the param isn't immediately following the slash, i.e. `path/item-:param`, although this is technically valid in react router (and with good use cases).\r\n\r\nThis PR fixes this.\r\n\r\nBefore:\r\n<img width=\"464\" alt=\"image\" src=\"https://user-images.githubusercontent.com/3076177/168435830-2a5ef6dd-d757-4ccb-b401-da3c8dda1588.png\">\r\n\r\nAfter:\r\n<img width=\"460\" alt=\"image\" src=\"https://user-images.githubusercontent.com/3076177/168435916-9f63188d-789b-41b2-a44a-7504a6693d87.png\">\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2022-05-12T09:34:55Z",
        "closed_at": "2022-06-10T17:04:42Z",
        "merged_at": "2022-06-10T17:04:41Z",
        "body": "This PR enables `CompatRoute` to drill down the `location` prop to the `Routes` it renders. This is needed to migrate apps which rely on `Switch` elements with different `location` props, like this example:\r\n\r\nhttps://github.com/xavier-lc/my-app/blob/e9adc7d17e508d68ba96250c88cbf7820d38618e/src/App.js#L44-L59\r\n\r\nYou can get more details on this discussion: https://github.com/remix-run/react-router/discussions/8850\r\n\r\nI tried to add a test, but for that I'd need to render the `CompatRoute` under a `Switch` and I didn't want to mess up `package.json` in order to be able to resolve `react-router` v5 inside the test. If someone knows an easy way to do that I'd be more than happy to add the test.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 493,
        "deletions": 11,
        "changed_files": 6,
        "created_at": "2022-05-12T08:09:30Z",
        "closed_at": "2022-06-21T22:26:24Z",
        "merged_at": "2022-06-21T22:26:24Z",
        "body": "I am aware that the tests are not the best as they do not test actual code. The thing is that for this case the fully functional test is really hard to achieve. I tried with MemoryRouter and BrowserRouter. The real problem is only visible in the browser URL bar. `window.location` is not working well (because of the basename). Maybe someone smarter will come up with something or the test can be skipped as the changes don't look ambiguous.\r\n\r\nfix #8312 \r\nfix #6226",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 22710,
        "deletions": 416,
        "changed_files": 113,
        "created_at": "2022-05-10T16:00:50Z",
        "closed_at": "2022-05-24T16:53:32Z",
        "merged_at": null,
        "body": "Merging the feature branch for https://remix.run/blog/remixing-react-router\r\n\r\n* Adds a new `@remix-run/router` package (with included history APIs)\r\n* Adds data loading APIs to `react-router` via `DataMemoryRouter` and associated hooks\r\n  * `useActionData`\r\n  * `useLoaderData`\r\n  * `useMatches`\r\n  * `useNavigation`\r\n  * `useRevalidator`\r\n  * `useRouteError`\r\n  * `useRouteLoaderData` \r\n* Adds data loading APIs to `react-router-dom` via `DataBrowserRouter`/`DataHashRouter`, plus a few additional components/hooks on top of the above\r\n  * `<Form>` \r\n  * `<ScrollRestoration>` \r\n  * `useFetcher`/`useFetchers`\r\n  * `useSubmit`\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 3,
        "changed_files": 4,
        "created_at": "2022-05-07T11:11:43Z",
        "closed_at": "2022-05-07T20:25:09Z",
        "merged_at": "2022-05-07T20:25:08Z",
        "body": "\u2022 `it's` -> `its`\r\n\u2022 `behaviour` -> `behavior` (to be in line with the rest of its uses in the docs)",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-05-06T19:44:42Z",
        "closed_at": "2022-05-07T02:26:49Z",
        "merged_at": null,
        "body": "add a reminder to use `Outlet` component when creating a layout route",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 53,
        "deletions": 6,
        "changed_files": 4,
        "created_at": "2022-05-06T19:41:34Z",
        "closed_at": "2022-06-10T16:40:27Z",
        "merged_at": null,
        "body": "This optimizes `useRoutes` to only recalculate matches when pathname changes, avoiding unnecessary rerenders of components that use `RoutesContext` whenever search or hash changes",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2022-05-05T18:16:29Z",
        "closed_at": "2022-05-07T02:16:43Z",
        "merged_at": "2022-05-07T02:16:43Z",
        "body": "After changing the format of the doc. The code line highlight is messed up.\r\n![Screen Shot 2022-05-06 at 1 15 15 AM](https://user-images.githubusercontent.com/52232579/166987227-66b6564b-cf76-4cc2-a83a-19f71964e8a9.png)\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 44,
        "deletions": 42,
        "changed_files": 5,
        "created_at": "2022-05-05T16:04:50Z",
        "closed_at": "2022-05-05T17:20:11Z",
        "merged_at": "2022-05-05T17:20:11Z",
        "body": "to avoid user copy and get the warning from react 18.\r\n\r\n>**Warning: ReactDOM.render is no longer supported in React 18. Use createRoot instead. Until you switch to the new API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot.**",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-05-04T11:09:01Z",
        "closed_at": "2022-05-04T16:50:44Z",
        "merged_at": null,
        "body": null,
        "comments": 3
    },
    {
        "merged": true,
        "additions": 34,
        "deletions": 11,
        "changed_files": 5,
        "created_at": "2022-05-03T15:19:04Z",
        "closed_at": "2022-05-27T13:16:01Z",
        "merged_at": "2022-05-27T13:16:01Z",
        "body": "fix #8175\r\n\r\nThe following assignment\r\nhttps://github.com/remix-run/react-router/blob/0f9435a8134b2b5dddfd716a18d17aefe4461fe1/packages/react-router/lib/router.ts#L575\r\nleads to the mutation of the provided `toArg` and the original `pathname` is _accidentally_ replaced: `../../../myPath` will always be `myPath`.",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2022-05-03T04:29:02Z",
        "closed_at": "2022-05-04T16:39:44Z",
        "merged_at": "2022-05-04T16:39:44Z",
        "body": "Closes #8841 ",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 75,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2022-05-01T16:57:10Z",
        "closed_at": "2022-05-09T16:10:56Z",
        "merged_at": "2022-05-09T16:10:56Z",
        "body": "Fixes #7870.\r\n\r\nIn React 18, Strict Mode [attempts to detect unexpected side effects](https://reactjs.org/docs/strict-mode.html#detecting-unexpected-side-effects) that might happen when rendering in concurrent mode. For class components, it intentionally double-invokes the constructor, `render()`, and `shouldComponentUpdate()`. It also double-invokes both layout and passive effects by mounting, unmounting, and then remounting.\r\n\r\nRouter in v5 was not compatible with this primarily because the main history subscription was created in the component constructor. Here is a simplified outline of the component lifecycle in StrictMode in v5.3.1:\r\n\r\n- constructor &mdash; listen (this instance is not used)\r\n- constructor &mdash; listen\r\n- render\r\n- render\r\n- componentDidMount\r\n- componentWillUnmount &mdash; unlisten(!)\r\n- componentDidMount\r\n\r\nAt this point, there were no history subscriptions, so `setState` was never being invoked.\r\n\r\nThe fix presented in this PR moves the main history subscription into componentDidMount to make it resilient to unmount/remount cycles. Here is the new simplified outline as of this PR:\r\n\r\n- constructor &mdash; listen (this instance is not used)\r\n- constructor &mdash; listen\r\n- render\r\n- render\r\n- componentDidMount &mdash; unlisten, listen\r\n- componentWillUnmount &mdash; unlisten\r\n- componentDidMount &mdash; listen\r\n\r\nThe listener in the constructor is only used for detecting redirects caused by child mounts and the subscription is only active until componentDidMount, at which point it is disposed and replaced with the main listener. Since the main listener is attached in componentDidMount, it will be recreated if the component is unmounted and then remounted without being fully reconstructed.\r\n\r\n**Tests**\r\n\r\nRather than changing the local react dependency to v18, I added synthetic tests that simulate the new StrictMode behavior. If the maintainers would prefer to see tests using actual rendering in v18, I'd be happy to amend this.",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2022-04-30T20:25:21Z",
        "closed_at": "2022-05-01T14:03:26Z",
        "merged_at": null,
        "body": "Perhaps it would be better to use \"multi-level\" h1 / h2 tags in the documentation for examples, instead of \"single-level\" h1 / h1 tags?",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2022-04-23T13:27:00Z",
        "closed_at": "2022-04-24T02:43:53Z",
        "merged_at": "2022-04-24T02:43:53Z",
        "body": "I think this line was originally meant to be in the \"Install React Router v6\" section, but there's already an `npm install` command shown there.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 8,
        "changed_files": 3,
        "created_at": "2022-04-20T17:07:15Z",
        "closed_at": "2022-09-21T17:07:01Z",
        "merged_at": null,
        "body": "Resolve #8803 ",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2022-04-16T04:34:31Z",
        "closed_at": "2022-04-16T06:01:57Z",
        "merged_at": null,
        "body": "fix Issue #8699 \r\nand https://github.com/remix-run/remix/issues/846",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-04-07T19:46:41Z",
        "closed_at": "2022-04-08T04:08:43Z",
        "merged_at": "2022-04-08T04:08:43Z",
        "body": "`aborted` method wrongly called on `AbortController` instance, which is part of signal property exposed on `AbortController` instance.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 68,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2022-04-07T15:46:23Z",
        "closed_at": "2022-06-07T18:58:12Z",
        "merged_at": "2022-06-07T18:58:12Z",
        "body": "This is a fix for #8777 ",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 93,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-04-06T14:32:13Z",
        "closed_at": "2022-05-27T13:59:09Z",
        "merged_at": null,
        "body": "ref https://github.com/remix-run/react-router/issues/8773",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2022-04-04T05:33:43Z",
        "closed_at": "2022-04-04T15:29:08Z",
        "merged_at": "2022-04-04T15:29:08Z",
        "body": null,
        "comments": 3
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-04-01T10:14:05Z",
        "closed_at": "2022-04-02T02:58:30Z",
        "merged_at": "2022-04-02T02:58:29Z",
        "body": "There is an unwanted \")\" in Navlink sample code which throws syntax error",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 146,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-03-31T07:07:42Z",
        "closed_at": "2022-04-01T01:00:28Z",
        "merged_at": null,
        "body": null,
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-03-30T16:16:35Z",
        "closed_at": "2022-04-01T00:52:36Z",
        "merged_at": "2022-04-01T00:52:36Z",
        "body": "Simple typo, missing `s` on `it render`. Should say `it renders ....`.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 61,
        "deletions": 0,
        "changed_files": 4,
        "created_at": "2022-03-30T02:32:36Z",
        "closed_at": "2022-06-06T14:16:58Z",
        "merged_at": null,
        "body": "## Adds a new util\r\nSummary: Adds a new util so that createRoutesFromChild will not strip props put on Routes component.\r\n\r\nLibraries consuming react router sometimes have props other than those defined in RouteObject\r\n\r\nNote: the code example below uses a breadcrumb prop on a route.\r\nIf passed to createRoutesFromChild() the breadcrumb prop would be stripped from the Route.\r\n\r\n```javascript\r\n// use-react-router-breadcrumbs\r\nconst BuildAppRoutes = () => {\r\n  // Full declarative react router support. example: Element, children, Nested Routes\r\n  return (\r\n    <Route path='/users/:userId' breadcrumb={DynamicUserBreadcrumb} element={<ProfilePage/>} />\r\n    <Route path='/example' breadcrumb='Custom Example' >\r\n      <Route path='/' breadcrumb='Custom Example' >\r\n        <ExamplePage/>\r\n      </Route>\r\n    </Route>\r\n    <Route path='/custom-props' breadcrumb={CustomPropsBreadcrumb} props={ someProp: 'Hi' } >\r\n      <CustomPage/>\r\n    </Route>\r\n  )\r\n};\r\n```\r\n\r\nNot sure if the function should live in react-router or libraries consuming react router.\r\nI did make a pr in the consuming library that has a modified function of the createRoutesFromChild function.\r\nhttps://github.com/icd2k3/use-react-router-breadcrumbs/pull/49 \r\n\r\nAnd it only adds the breadcrumb property instead of all properties like this pull request puts up for consideration.\r\n\r\nTODO: ( trying to see if this is a good idea before making too many changes )\r\n1) update documentation\r\n2) write tests\r\n\r\nThanks for taking the time to read and provide advice for the future of the pr.\r\n\r\nHopefully, this does not give too much heartburn as it applies any to a type rendering the type useless other than documentation purposes.\r\n\r\nSome caveats I considered, \r\n1) Does using object.assign have performance benefits over spread operator? (that appears to be the case.)\r\n2) I went with: \r\n```javascript\r\n    let route: RouteObject = {\r\n      caseSensitive: element.props.caseSensitive,\r\n      element: element.props.element,\r\n      index: element.props.index,\r\n      path: element.props.path,\r\n      ...element.props,\r\n    };\r\n```\r\nhowever, (the following does the same work. it is less descriptive but easier to maintain.)\r\n```javascript\r\n    let route: RouteObject = {\r\n      ...element.props,\r\n    };\r\n```\r\n3) I refrained from changing `createRoutesFromChildren` in case there were performance or typescript related objections.\r\n\r\nHappy to change any of the caveat items if there are opinions relating to those points.\r\n\r\n## tldr:\r\nMy hunch is that this change should not live in react-router and that createRoutesFromChild exists only because it is used internally. In which case this pr would be useless. But I thought I would post in case the team thought it useful.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-03-26T19:29:42Z",
        "closed_at": "2022-03-27T01:04:04Z",
        "merged_at": null,
        "body": "I edited the error description to more explicit one to prevent confusion.\r\n\r\nreffered to issue: #8732 ",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 36,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2022-03-25T11:41:02Z",
        "closed_at": "2022-06-10T16:19:20Z",
        "merged_at": null,
        "body": "Fixes https://github.com/remix-run/react-router/issues/8733\r\n\r\nCurrently `Navigate` will cause an infinite rendering loop if it remains mounted after the navigation has occurred.  ",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 15,
        "deletions": 11,
        "changed_files": 6,
        "created_at": "2022-03-17T05:31:24Z",
        "closed_at": "2022-03-20T05:25:57Z",
        "merged_at": "2022-03-20T05:25:57Z",
        "body": "#8719\r\n\r\nThis is a simple PR to allow children on navlink to be optional so a NavLink can be used in type script projects without requiring the children attribute to be set on the NavLink.  Currently it's impossible to use a NavLink in typescript projects on version 6.2 as you can't set jsx children as an attribute, and you can't use NavLink without doing so...",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 34,
        "deletions": 16,
        "changed_files": 2,
        "created_at": "2022-03-16T15:34:37Z",
        "closed_at": "2022-05-16T16:02:33Z",
        "merged_at": null,
        "body": "This PR exposes the `isActive` logic from `NavLink` as a hook so that it can be used to create custom `NavLink` style components.\r\n\r\nExample usage:\r\n\r\n```js\r\nimport { usePathIsActive, Link } from 'react-router-dom';\r\nimport { Button } from '@chakra-ui/react';\r\n\r\nfunction NavButton({ to }) {\r\n  const isActive = usePathIsActive({ to });\r\n  return (\r\n    <Button as={Link} to={to} colorScheme={isActive ? 'blue' : 'gray'}>My fancy page</Button>\r\n  )\r\n}\r\n```",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-03-15T01:21:41Z",
        "closed_at": "2022-03-15T20:50:52Z",
        "merged_at": "2022-03-15T20:50:52Z",
        "body": "`history.listen` accepts two parameters in the preceding document: `location` and `action`. \r\n\r\nHowever, I discovered the type declaration below while reading the [docs of `history`](https://github.com/remix-run/history/blob/dev/docs/api-reference.md#historylistenlistener-listener). Instead of two parameters, `history.listen` allows one parameter with two properties.\r\n```\r\ninterface Listener {\r\n  (update: Update): void;\r\n}\r\n\r\ninterface Update {\r\n  action: Action;\r\n  location: Location;\r\n}\r\n```",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2022-03-11T23:24:53Z",
        "closed_at": "2022-03-14T15:13:33Z",
        "merged_at": "2022-03-14T15:13:33Z",
        "body": "Marked lines as added in code example.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 43,
        "deletions": 0,
        "changed_files": 5,
        "created_at": "2022-03-09T08:55:25Z",
        "closed_at": "2022-06-06T14:19:06Z",
        "merged_at": null,
        "body": "- `useMatchRoutes` is similar to `matchRoutes`, but the matching result is obtained directly from the Context and supports component route.",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 22,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2022-03-08T08:34:58Z",
        "closed_at": "2022-03-09T18:19:18Z",
        "merged_at": null,
        "body": "Should limit issues/requests like \r\n* #8503\r\n* #8522\r\n* #8515",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1131,
        "deletions": 0,
        "changed_files": 28,
        "created_at": "2022-03-04T20:06:24Z",
        "closed_at": "2022-03-10T14:00:06Z",
        "merged_at": "2022-03-10T14:00:06Z",
        "body": "* Adds `packages/history`\r\n* Implements `createMemoryHistory`\r\n* Leverages the same test suite + sequences from https://github.com/remix-run/history, simplified down based on the new API",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3346,
        "deletions": 1569,
        "changed_files": 61,
        "created_at": "2022-03-04T05:50:27Z",
        "closed_at": "2022-05-17T02:42:06Z",
        "merged_at": null,
        "body": "Fixes bug #8699 \r\n\r\nWhen a route is nested within a layout route, it wont render routes starting with an '@' symbol:\r\n```\r\n<Routes>\r\n    <Route element={<Layout />}>\r\n        <Route path=\":id\" element={<Chat />} />\r\n    </Route>\r\n</Routes>\r\n```\r\n\r\nNote that the router works correctly when the parent is NOT a layout route (i.e. has a path defined), or is at the root level:\r\n```\r\n    <Router>\r\n      <Routes>\r\n        <Route path=\":id\" element={'works with /@tom'}/>\r\n        <Route path=\"nested\">\r\n          <Route path=\":id\" element={'works with /nested/@tom'}/>\r\n        </Route>\r\n      </Routes>\r\n    </Router>\r\n```",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 59,
        "deletions": 7,
        "changed_files": 6,
        "created_at": "2022-03-03T15:53:15Z",
        "closed_at": "2022-06-08T12:40:23Z",
        "merged_at": "2022-06-08T12:40:23Z",
        "body": "This fixes the following issue: https://github.com/remix-run/react-router/issues/8350\r\n\r\nQuick example, copied from `packages/react-router/__tests__/navigate-test.tsx`. With a router like this:\r\n\r\n```tsx\r\n<MemoryRouter initialEntries={[\"/home\"]}>\r\n  <Routes>\r\n    <Route path=\"home\" element={<Navigate to=\"../about\" />} />\r\n    <Route path=\"about\" element={<h1>About</h1>} />\r\n  </Routes>\r\n</MemoryRouter>\r\n```\r\n\r\nRelative navigation works as expected. However, with introduction of index routes such as this:\r\n\r\n```tsx\r\n<MemoryRouter initialEntries={[\"/home\"]}>\r\n  <Routes>\r\n    <Route path=\"home\">\r\n      <Route index element={<Navigate to=\"../about\" />} />\r\n    </Route>\r\n    <Route path=\"about\" element={<h1>About</h1>} />\r\n  </Routes>\r\n</MemoryRouter>\r\n```\r\n\r\nIt breaks since `<Route path=\"home\">` becomes the index route's parent. This PR addresses that by making relative `'..'` hrefs from index routes go an extra level up.\r\n\r\nI could've probably done it better by rearranging some arguments in the touched functions, but I wanted to minimize my footprint.\r\n\r\n**Possible breaking change, not a minor release.** Even myself I adjusted my components that were affected by this and will need to know when this releases to remove workarounds.",
        "comments": 13
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2022-02-26T01:53:50Z",
        "closed_at": "2022-02-27T02:46:52Z",
        "merged_at": "2022-02-27T02:46:52Z",
        "body": "- Import `useLocation`\r\n- Fix diff indicator to include `useLocation` and the whole `<p>` tag:\r\n   ![image](https://user-images.githubusercontent.com/7593229/155824509-9bfb617b-66bc-4f11-a0b7-41dc0d88d1fe.png)\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1565,
        "deletions": 1419,
        "changed_files": 10,
        "created_at": "2022-02-24T16:25:06Z",
        "closed_at": "2022-03-04T20:03:01Z",
        "merged_at": "2022-03-04T20:03:01Z",
        "body": "Splits up the `index.tsx` file into separate files\r\n```mermaid\r\ngraph TD\r\n    index.ts --> lib/components.tsx\r\n    index.ts --> lib/hooks.tsx\r\n    index.ts --> lib/context.ts\r\n    index.ts --> lib/router.ts\r\n    lib/components.tsx --> lib/router.ts\r\n    lib/components.tsx --> lib/hooks.tsx\r\n    lib/components.tsx --> lib/context.ts\r\n    lib/hooks.tsx --> lib/router.ts\r\n    lib/hooks.tsx --> lib/context.ts\r\n    lib/context.ts --> lib/router.ts\r\n```",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-02-24T12:57:48Z",
        "closed_at": "2022-02-25T04:56:01Z",
        "merged_at": "2022-02-25T04:56:01Z",
        "body": "It would make the UI more consistent if we pass the query string to navigation function route after deleting and item.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-02-17T22:12:53Z",
        "closed_at": "2022-02-18T01:38:47Z",
        "merged_at": "2022-02-18T01:38:47Z",
        "body": "Add the `useOutletContext` hook import to example to align with other hook examples.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-02-17T22:12:33Z",
        "closed_at": "2022-02-18T01:38:24Z",
        "merged_at": "2022-02-18T01:38:24Z",
        "body": "I added an import for the `useOutletContext` hook API documentation example to be consistent with other examples. Also based on [this SO question](https://stackoverflow.com/questions/71165826/failing-to-access-outlet-context-in-react) the absence of the import has caused some confusion.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-02-17T09:04:45Z",
        "closed_at": "2022-02-17T17:51:54Z",
        "merged_at": "2022-02-17T17:51:54Z",
        "body": "## problem\r\n\r\nwhen click \"react-router\" of `react-router/packages/react-router/README.md` file it comes 404 error !\r\n\r\n>`packages/react-router-dom` and `packages/react-router-native` doesn't come error\r\n\r\n##  So I\r\n\r\nI updateed it like other packages README.md",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-02-14T23:00:09Z",
        "closed_at": "2022-02-16T01:55:59Z",
        "merged_at": "2022-02-16T01:55:59Z",
        "body": null,
        "comments": 3
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-02-13T11:04:07Z",
        "closed_at": "2022-02-14T02:11:56Z",
        "merged_at": "2022-02-14T02:11:55Z",
        "body": "The due date for the invoice number 1998 (named, \"Wide Open Spaces\") was \"01/27/2998\". It should probably have been \"01/27/1998\" as for all other invoices, invoice number is equal to the year of the due date.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-02-13T04:49:06Z",
        "closed_at": "2022-02-14T02:11:28Z",
        "merged_at": "2022-02-14T02:11:28Z",
        "body": "Fix broken link of `advantages of route element` in faq.md",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-02-11T15:35:11Z",
        "closed_at": "2022-02-22T17:41:07Z",
        "merged_at": "2022-02-22T17:41:07Z",
        "body": "added the `workflow` scope so that if a workflow file changes due to formatting, it can be committed",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-02-07T17:40:02Z",
        "closed_at": "2022-03-15T20:51:25Z",
        "merged_at": "2022-03-15T20:51:25Z",
        "body": "The opening tag in the anti-example for layout routes should be `Route` instead of `Routes`\r\n\r\nThe closing tag is correct.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 73,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2022-02-03T23:34:24Z",
        "closed_at": "2022-02-04T02:11:28Z",
        "merged_at": null,
        "body": "Fixes #8645\r\nFixes joinPaths to not discard multiple slashes inside of paths.\r\nAdded test to check consistent behavior of useNavigate with and without basename in Router",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 53,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-02-01T10:10:08Z",
        "closed_at": "2022-02-01T15:51:33Z",
        "merged_at": null,
        "body": "A lot of projects in the world are still using classes. I suggest adding a TypeScript example to the FAQ documentation. This is an example with generic params.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-01-30T08:38:07Z",
        "closed_at": "2022-01-31T20:54:28Z",
        "merged_at": null,
        "body": "PathRouteProps is missing the key prop. This is useful when you want to map over a JSON route config and generate routes.\r\n\r\n(Sorry I was not able to install the dependencies of the project due to sanctions from Google for Iranian developers but I'm almost sure that this is going to work since I tested by making the same changes over a built version of react router inside my node_modules of another project)",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2022-01-26T12:45:53Z",
        "closed_at": "2022-01-26T16:41:19Z",
        "merged_at": null,
        "body": "Not sure whether this is wanted, but I have written a quite extensive tutorial series about RR6. Perhaps there are people who read the docs who would be happy about some step by step instructions :) No hard feelings if that's not something you are looking for!",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-01-26T03:01:58Z",
        "closed_at": "2022-01-26T16:37:15Z",
        "merged_at": "2022-01-26T16:37:15Z",
        "body": " there is an error in example  `custom-query-parsing`\r\n\r\n```js\r\n\r\npizza.crust === \"deep-dish\"\r\n\r\n//  not  pizza.crust === \"dish-dish\"\r\n```",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 24,
        "deletions": 28,
        "changed_files": 2,
        "created_at": "2022-01-21T14:14:02Z",
        "closed_at": "2022-01-21T16:19:22Z",
        "merged_at": "2022-01-21T16:19:22Z",
        "body": "Fixed types related to remix-run/history `State` in the docs.\r\n`State` is now unused in the latest code.\r\n\r\nThank you for the nice library!",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-01-20T05:13:20Z",
        "closed_at": "2022-01-20T16:19:01Z",
        "merged_at": "2022-01-20T16:19:01Z",
        "body": "Example `Route` component from a v6 example was still using a `component` prop and component reference vs `element` prop and JSX.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2022-01-14T19:58:42Z",
        "closed_at": "2022-01-16T02:23:17Z",
        "merged_at": "2022-01-16T02:23:17Z",
        "body": "Fixes #8581 \r\n\r\nThe documentation in /docs/getting-started uses \"root\" as the root element id, including in code snippets. So if a learner is following the tutorial documentation, they'll break their app when they copy-paste the tutorial snippets (which use \"root\") into the template (which was using \"app\", prior to this PR).\r\n\r\nNow the docs and the template both use \"root\".",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-01-13T00:49:24Z",
        "closed_at": "2022-01-13T02:20:31Z",
        "merged_at": "2022-01-13T02:20:31Z",
        "body": "Changes RouteProps.element type in API docs from `React.ReactElement | null` to `React.ReactNode | null`.\r\n\r\nThe code change being documented was done in #8473",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 42,
        "deletions": 16,
        "changed_files": 2,
        "created_at": "2022-01-07T12:57:01Z",
        "closed_at": "2022-02-25T22:54:14Z",
        "merged_at": null,
        "body": "This PR extracts the path-matching part of `NavLink` to a pure function `isPathActive` and a hook `useIsPathActive`.\r\n\r\nThis will make it possible to easily create more custom `<NavLink>` analogues:\r\n\r\n```\r\nfunction RouterNavLink({to, children}) {\r\n  const active = useIsPathActive(to);\r\n  const navigate = useNavigate();\r\n  return (\r\n    <SomeCustomNavLink active={active} onClick={() => navigate(to)}>{children}</SomeCustomNavLink>\r\n  );\r\n}\r\n```\r\n\r\nI didn't add any new tests for the extracted behavior, since it's exactly the same code used by `NavLink`, and so is covered by `NavLink`'s tests.",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 367,
        "deletions": 2,
        "changed_files": 4,
        "created_at": "2022-01-06T08:57:22Z",
        "closed_at": "2022-02-28T16:30:20Z",
        "merged_at": "2022-02-28T16:30:20Z",
        "body": "closes #8525 and #8561\r\n\r\nFixes route matching to allow valid, but non-word-boundary characters(`.`, `-`, `~`) and url-encoded entities to appear at the beginning of a nested `*` route.\r\n\r\nI pulled this character set from [RFC 3986](https://www.ietf.org/rfc/rfc3986.txt), section 2.3 Unreserved Characters:\r\n\r\n> 2.3.  Unreserved Characters\r\n> \r\n>    Characters that are allowed in a URI but do not have a reserved\r\n>    purpose are called unreserved.  These include uppercase and lowercase\r\n>    letters, decimal digits, hyphen, period, underscore, and tilde.\r\n> \r\n>       unreserved  = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\r\n\r\nI extended this to include url-encoded entities (ie `%20`), but I am not 100% confident I made the character range wide enough. ([0-7][0-9A-F]). It is probably safe to expand this to any 2-digit hex code, but I wasn't able to find any concrete resources.\r\n\r\nLet me know if additional test cases are needed for this, since I'm not _too_ familiar with the codebase and possible untested behaviors.",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 23,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-01-04T16:26:58Z",
        "closed_at": "2022-01-04T18:00:11Z",
        "merged_at": "2022-01-04T18:00:11Z",
        "body": "totally forgot to do this when I added the bot...",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2021-12-30T21:30:44Z",
        "closed_at": "2021-12-31T01:21:17Z",
        "merged_at": "2021-12-31T01:21:17Z",
        "body": "This fixes the example by using `<Lang lang=\"\u2026\"/>`  instead of `<Lang code=\"\u2026\"/>` (to respect Lang's signature) and by setting the language codes to correspond with the paths.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2021-12-29T10:51:52Z",
        "closed_at": "2021-12-29T16:25:03Z",
        "merged_at": null,
        "body": "Fix docs typo",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 33,
        "deletions": 3,
        "changed_files": 4,
        "created_at": "2021-12-29T10:12:49Z",
        "closed_at": "2022-01-04T22:40:19Z",
        "merged_at": "2022-01-04T22:40:19Z",
        "body": "It seems that there's a type collision between current NavLink interface and NavLink [example](https://reactrouter.com/docs/en/v6/api#navlink) demonstrated on docs.\r\n\r\n```\r\n<NavLink\r\n    to=\"tasks\"\r\n    className={({ isActive }) =>\r\n        isActive ? activeClassName : undefined\r\n    }\r\n>\r\n    Tasks\r\n</NavLink>\r\n\r\n// Type 'string | undefined' is not assignable to type 'string'.\r\n```\r\n\r\nIMO it looks good to add undefined return type for the classname of NavLink prop instead of modifying an example.\r\n\r\n(Existing tests passed, should any further test be required?)",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2021-12-27T15:34:00Z",
        "closed_at": "2021-12-27T18:41:59Z",
        "merged_at": "2021-12-27T18:41:59Z",
        "body": "Add `replace={true}` to avoid creating a new entry in the history. Thus, when they click back on the login page, they won't end up on the login page again, but rather on the page they were before trying to access the protected page.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2021-12-27T12:30:42Z",
        "closed_at": "2021-12-27T18:54:42Z",
        "merged_at": "2021-12-27T18:54:42Z",
        "body": "Fixing a small typo in the getting started tutorial.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 25,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2021-12-26T13:24:38Z",
        "closed_at": "2022-02-27T20:34:54Z",
        "merged_at": "2022-02-27T20:34:54Z",
        "body": "As no member confirm or refuse my issue #8458.\r\nHere a PR that fix the bug for me.\r\n\r\nNot sure if this is the best place to call normalizePathname, though.\r\n\r\nDo not hesitate to comment, I will gladly change my PR.\r\n\r\n\r\n----- Commit message -----\r\nMotivation:\r\nWhen matching with \"*\", the `pathnameBase` had a trailing slash `/`.\r\n\r\nModifications:\r\n * Call normalizePathname for pathnameBase\r\n\r\nResult:\r\nWe can use an element that call useRoutes to define another alternative router for matching with \"*\".\r\n\r\nCloses: #8458",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2021-12-25T11:31:26Z",
        "closed_at": "2021-12-26T05:19:29Z",
        "merged_at": "2021-12-26T05:19:28Z",
        "body": "referencing `main.jsx` or `index.js` depending on the bundler used.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 3,
        "changed_files": 4,
        "created_at": "2021-12-25T05:48:21Z",
        "closed_at": "2022-02-27T02:48:39Z",
        "merged_at": "2022-02-27T02:48:39Z",
        "body": "addresses #8475",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2021-12-22T08:10:40Z",
        "closed_at": "2022-02-14T17:46:49Z",
        "merged_at": "2022-02-14T17:46:49Z",
        "body": "Making the typescript example consistent with the associated `ContextType`:\r\n\r\n`type ContextType = { user: User | null };`",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2021-12-21T01:59:23Z",
        "closed_at": "2022-02-25T22:44:56Z",
        "merged_at": null,
        "body": "Fix #8503",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2021-12-20T23:10:37Z",
        "closed_at": "2021-12-21T22:11:45Z",
        "merged_at": "2021-12-21T22:11:45Z",
        "body": null,
        "comments": 3
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2021-12-20T20:37:53Z",
        "closed_at": "2021-12-22T15:46:04Z",
        "merged_at": null,
        "body": "When I was referring to the `NavLink` implementation I noticed an issue similar to #8277. I had a setup similar to the following:\r\n\r\n```\r\n<NavLink to=\"/path/to\">Link 1</NavLink>\r\n<NavLink to=\"/path/to/board\">Link 2</NavLink>\r\n```\r\n\r\nWhen navigating to `/path/to/board` both links were being matched.\r\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2021-12-18T06:54:50Z",
        "closed_at": "2021-12-20T02:35:59Z",
        "merged_at": null,
        "body": "App won't be rendered",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 85,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2021-12-17T06:30:42Z",
        "closed_at": "2022-02-25T04:57:40Z",
        "merged_at": "2022-02-25T04:57:40Z",
        "body": "Fix #8492",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 7,
        "changed_files": 2,
        "created_at": "2021-12-16T05:51:36Z",
        "closed_at": "2021-12-16T13:16:49Z",
        "merged_at": "2021-12-16T13:16:49Z",
        "body": "Upon going through the source code, I found only `Route` components are allowed inside `Routes`, Hence updated the doc examples as such",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2021-12-15T10:53:57Z",
        "closed_at": "2021-12-15T13:12:58Z",
        "merged_at": "2021-12-15T13:12:58Z",
        "body": "Updated \"pathame\" to \"pathname\" type in tutorial docs.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 108,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2021-12-14T17:58:05Z",
        "closed_at": "2021-12-14T20:32:09Z",
        "merged_at": "2021-12-14T20:32:09Z",
        "body": "originally merged to main \ud83e\udd26 \r\n\r\nx-ref #8483",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 108,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2021-12-14T16:04:47Z",
        "closed_at": "2021-12-14T17:12:02Z",
        "merged_at": "2021-12-14T17:12:02Z",
        "body": "closes #8477",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2021-12-14T01:50:17Z",
        "closed_at": "2021-12-14T16:57:41Z",
        "merged_at": null,
        "body": "Fix #8477",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 41,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2021-12-13T10:00:39Z",
        "closed_at": "2022-02-05T03:57:48Z",
        "merged_at": "2022-02-05T03:57:48Z",
        "body": "A great idea",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2021-12-13T03:38:33Z",
        "closed_at": "2021-12-13T13:16:37Z",
        "merged_at": "2021-12-13T13:16:37Z",
        "body": "Fix #8456 ",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 32,
        "changed_files": 1,
        "created_at": "2021-12-10T08:52:25Z",
        "closed_at": "2021-12-13T01:29:10Z",
        "merged_at": "2021-12-13T01:29:10Z",
        "body": "Remove `createRoutesFromArray` in document",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 32,
        "deletions": 16,
        "changed_files": 8,
        "created_at": "2021-12-10T00:01:22Z",
        "closed_at": "2021-12-10T14:31:16Z",
        "merged_at": null,
        "body": "Closes issue #8459.\r\n\r\nThis is an alternative to PR #8460. It is cleaner but also requires [another pull request](https://github.com/remix-run/history/pull/911) to `remix-run/history`.\r\n\r\nThe difference allows `HashRouter` to have paths are written to the URL like `#abc` instead of `#/abc`.\r\n\r\nI understand if the contributors have a preference to not allow this behavior, but I thought I'd present another attempt. I'm happy to write tests for this PR if anyone is willing to consider it.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 223,
        "deletions": 11,
        "changed_files": 6,
        "created_at": "2021-12-09T17:01:26Z",
        "closed_at": "2021-12-09T19:05:44Z",
        "merged_at": "2021-12-09T19:05:44Z",
        "body": "accidentally originally opened it against [remix](https://github.com/remix-run/remix/pull/939)",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 81,
        "deletions": 14,
        "changed_files": 4,
        "created_at": "2021-12-09T16:16:11Z",
        "closed_at": "2021-12-09T23:54:10Z",
        "merged_at": null,
        "body": "Closes issue #8459.\r\n\r\nI've [created a codepen](https://codesandbox.io/s/hashrouter-noslash-cpyti?file=/src/basenameEmpty.js) to show the results of this PR against the latest release.\r\n\r\nI've created a hook called `useNavigator`, which wraps the router's navigator object. This wrapping only occurs when `basename=\"\"`. This wrapped navigator serializes each `pathname` without the leading `/`. The difference can only be seen when `<HashRouter basename=\"\">`.\r\n\r\nThe difference is that paths are written to the URL like `#abc` instead of `#/abc`.",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 27,
        "deletions": 19,
        "changed_files": 3,
        "created_at": "2021-12-07T08:37:04Z",
        "closed_at": "2021-12-07T19:10:34Z",
        "merged_at": null,
        "body": "Resolves #7703\r\n\r\n### Context\r\n\r\nThe [v5 API page documenting `HashRouter`](https://v5.reactrouter.com/web/api/HashRouter) allows hashes to begin as `#` rather than `#/`. The v6 `HashRouter` no longer supports this because [history@5](https://github.com/remix-run/history/blob/main/packages/history/index.ts#L571) lost that property of [history@4](https://github.com/remix-run/history/blob/v4/modules/createHashHistory.js#L64). Ten days ago, a contributor [closed](https://github.com/remix-run/react-router/issues/7703#issuecomment-735033961) #7703. The contributor suggested the issue should be brought to the attention of with [remix-run/history/](https://github.com/remix-run/history/), but noted \"it was specifically removed in v5\" of `history` while warning \"it's not likely to return.\"\r\n\r\nThis is a request to replicate that feature of `HashRouter` that we lost in `history@5` and `react-router@6`.\r\n\r\n### Solution\r\n\r\nOnly when `<Router basename=\"\">`, this PR now supports `To` objects without a leading slash. Since the [v5 docs claim](https://v5.reactrouter.com/web/api/HashRouter/basename-string) that a \"properly formatted basename should have a leading slash,\" this PR has no change to documented usage.\r\n\r\nTo support `<HashState hashType=\"noslash\">`, that syntax is mapped to `<Router basename=\"\">`.\r\n\r\nSo, the concept of a `hashType` is limited to the `HashState` constructor.",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 14,
        "changed_files": 3,
        "created_at": "2021-12-03T11:02:54Z",
        "closed_at": "2021-12-03T13:30:07Z",
        "merged_at": "2021-12-03T13:30:07Z",
        "body": "Other changes:\r\n- Remove matrix as only a single Node version is ever used\r\n- Always check for latest version of Node in version range (14.x)\r\n- Cache Yarn dependencies between runs\r\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 42,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2021-12-02T22:39:13Z",
        "closed_at": "2021-12-09T21:02:16Z",
        "merged_at": "2021-12-09T21:02:16Z",
        "body": null,
        "comments": 1
    },
    {
        "merged": true,
        "additions": 45,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2021-12-02T15:02:39Z",
        "closed_at": "2021-12-03T13:51:41Z",
        "merged_at": "2021-12-03T13:51:40Z",
        "body": "Closes #7059",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2021-12-01T05:15:44Z",
        "closed_at": "2021-12-01T14:02:15Z",
        "merged_at": "2021-12-01T14:02:15Z",
        "body": null,
        "comments": 3
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2021-11-30T09:34:02Z",
        "closed_at": "2021-11-30T15:05:29Z",
        "merged_at": "2021-11-30T15:05:29Z",
        "body": "Guess that this PR is self-explainable. While upgrading I think people would benefit on this note, cause it's easy to miss, especially for folks that are not using TS\r\n[v5 logic](https://github.com/remix-run/react-router/blob/78249eb6ce9a28df4691cc61caa0467fed8b7ac0/packages/react-router/modules/Redirect.js#L21)\r\n[v6 logic](https://github.com/remix-run/react-router/blob/6cbb99db85767d752ec8eb3b34ef8f88f067aeb3/packages/react-router/index.tsx#L502)",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2021-11-29T06:17:35Z",
        "closed_at": "2021-11-29T13:33:30Z",
        "merged_at": null,
        "body": "Update component file name from js  to jsx",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 8,
        "changed_files": 3,
        "created_at": "2021-11-29T01:35:20Z",
        "closed_at": "2021-11-29T17:24:32Z",
        "merged_at": "2021-11-29T17:24:32Z",
        "body": "Changed `{ replace?: boolean; state?: any }`  to  `NavigateOptions` to increase code reusability",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2021-11-28T11:59:49Z",
        "closed_at": "2021-11-29T01:15:55Z",
        "merged_at": "2021-11-29T01:15:55Z",
        "body": null,
        "comments": 3
    },
    {
        "merged": false,
        "additions": 257,
        "deletions": 11,
        "changed_files": 3,
        "created_at": "2021-11-25T19:06:00Z",
        "closed_at": "2021-11-26T03:51:02Z",
        "merged_at": null,
        "body": "Fixes #8393",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2021-11-23T18:37:08Z",
        "closed_at": "2021-11-24T22:26:25Z",
        "merged_at": null,
        "body": "## Proposed changes\r\nGrammar improvement in Main Concepts Docs",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 305,
        "deletions": 49,
        "changed_files": 17,
        "created_at": "2021-11-22T09:29:07Z",
        "closed_at": "2021-12-10T02:13:04Z",
        "merged_at": "2021-12-10T02:13:04Z",
        "body": "Pick the property that would be use in `navigator`, so we can know which method can be use explicitly.",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2021-11-21T19:11:47Z",
        "closed_at": "2021-12-06T01:58:02Z",
        "merged_at": "2021-12-06T01:58:02Z",
        "body": "suggesting command correction for package installation.",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2021-11-21T09:48:44Z",
        "closed_at": "2021-11-22T16:51:04Z",
        "merged_at": "2021-11-22T16:51:04Z",
        "body": "Replace broken links of `README.md` file in **Server-side Rendering** and Add name in `contributors.yml` file for CLA",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 5,
        "changed_files": 3,
        "created_at": "2021-11-19T22:46:39Z",
        "closed_at": "2021-11-20T02:28:12Z",
        "merged_at": null,
        "body": "I faced a problem when i couldn't type the state got from the useLocation hook.\r\nThis update allows to use this hook as standart generic-typed hooks like useState and so on.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2021-11-19T22:20:22Z",
        "closed_at": "2021-11-20T02:35:33Z",
        "merged_at": "2021-11-20T02:35:33Z",
        "body": null,
        "comments": 3
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2021-11-19T03:10:50Z",
        "closed_at": "2021-11-19T16:42:30Z",
        "merged_at": "2021-11-19T16:42:30Z",
        "body": "I ran into an issue (documented in https://github.com/remix-run/react-router/issues/8360) with the `<Link>` component and I think this would help future travellers. Love the project! Thanks.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 15,
        "deletions": 12,
        "changed_files": 3,
        "created_at": "2021-11-18T16:59:46Z",
        "closed_at": "2021-11-21T16:32:06Z",
        "merged_at": "2021-11-21T16:32:06Z",
        "body": "Fixing a few minor typos in the FAQ. See committed changes.",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2021-11-18T16:25:45Z",
        "closed_at": "2021-12-09T23:43:54Z",
        "merged_at": null,
        "body": "Adding a note about the <Navigate> component, which has replaced the <Redirect> component.\r\n\r\nhttps://stackoverflow.com/questions/63690695/react-redirect-is-not-exported-from-react-router-dom\r\nhttps://v5.reactrouter.com/web/api/Redirect",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2021-11-18T15:43:33Z",
        "closed_at": "2021-11-18T16:47:27Z",
        "merged_at": "2021-11-18T16:47:27Z",
        "body": "This fixes two minor typos:\r\n\r\n```\r\ndocs/faq.md:215: accont ==> account\r\n./FAQ.md:115: acccess ==> access\r\n```",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2021-11-18T13:18:01Z",
        "closed_at": "2021-12-02T21:59:36Z",
        "merged_at": "2021-12-02T21:59:36Z",
        "body": "Improve the type of useParams\r\n\r\nAccording  https://github.com/remix-run/react-router/issues/8200#issuecomment-972680683 comment\r\n\r\nThe main purpose is to support the declaration of the type of parameter value as a union string",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 432,
        "deletions": 98,
        "changed_files": 9,
        "created_at": "2021-11-16T05:42:46Z",
        "closed_at": "2021-12-09T23:32:45Z",
        "merged_at": null,
        "body": "Resolves #8287.\r\n\r\nUpdates the functionality of navigate functions to allow them to take a function that computes a new location from the current one, then utilises that functionality in `useSearchParams` to build the same sort of feature.\r\n\r\nI've used a new ref in the location context to retain the current location consistently during event handling, rather than exposing the mutable `location` on the navigator. It's a little more complex but avoids reconstructing the immutable location from the mutable one and does not open up the potential for tearing as mentioned in the comment on the `Navigator` type.\r\n\r\nI've added a special case to the search params update function (along with a corresponding entry in the docs) that allows you to mutate the given `URLSearchParams` object directly and return nothing, since I'm expecting that most uses of the update function will mutate and then return that object. It's a little bit more convenient but happy to drop it if it's controversial.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-11-15T17:36:28Z",
        "closed_at": "2021-11-17T13:47:22Z",
        "merged_at": "2021-11-17T13:47:22Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2021-11-15T14:38:00Z",
        "closed_at": "2021-11-15T17:23:24Z",
        "merged_at": "2021-11-15T17:23:23Z",
        "body": "History is now a direct dependency and should not be manually installed. See https://github.com/remix-run/react-router/blob/bcd5511c4df1413776d22556066602a53f961a28/docs/upgrading/v5.md?plain=1#L150",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2021-11-12T01:16:46Z",
        "closed_at": "2021-11-12T12:11:37Z",
        "merged_at": "2021-11-12T12:11:37Z",
        "body": null,
        "comments": 1
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-11-11T15:45:05Z",
        "closed_at": "2021-12-09T23:28:49Z",
        "merged_at": "2021-12-09T23:28:49Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2021-11-11T09:43:57Z",
        "closed_at": "2021-11-28T03:18:21Z",
        "merged_at": null,
        "body": "paragraph above just tells users to \r\n\r\n>  **Instead of using `<Route component>` and `<Route render>` props, just use regular element `<Route children>` everywhere and use hooks to access the router's internal state.**\r\n\r\nBut here uses `render` props which makes people find it very confusing.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2021-11-10T21:54:01Z",
        "closed_at": "2021-11-11T01:14:16Z",
        "merged_at": "2021-11-11T01:14:16Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 125,
        "deletions": 22,
        "changed_files": 2,
        "created_at": "2021-11-10T19:11:42Z",
        "closed_at": "2021-11-10T22:22:24Z",
        "merged_at": "2021-11-10T22:22:24Z",
        "body": "Our contributing docs were out of date. This PR updates everything and adds clarity to how contributors should work on code-related PRs from the `dev` branch.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-11-09T19:54:23Z",
        "closed_at": "2021-11-10T01:34:42Z",
        "merged_at": "2021-11-10T01:34:42Z",
        "body": "There's a broken docs link on https://reactrouter.com/docs/en/v6 for FAQ. This should fix unless FAQ should be under getting started.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-11-09T17:01:25Z",
        "closed_at": "2021-11-09T19:35:40Z",
        "merged_at": "2021-11-09T19:35:40Z",
        "body": "when an example's README file changes, we should update the db",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 23,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2021-11-09T05:44:19Z",
        "closed_at": "2021-12-09T22:55:18Z",
        "merged_at": "2021-12-09T22:55:18Z",
        "body": "Resolves #8288 \r\n\r\nThis PR modifies `compilePath`'s non-capturing group to match up to the proceeding `/` so that paths with base64 encoded ids  (e.x.`users/RGFzaGJvYXJkOjE1Nzk=/edit` when using `graphql-relay` globalIds) properly match up to the `/` and not at the word break before the `=` character.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-11-09T05:32:55Z",
        "closed_at": "2021-11-09T14:12:25Z",
        "merged_at": "2021-11-09T14:12:25Z",
        "body": "Fix a typo",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 55,
        "deletions": 15,
        "changed_files": 3,
        "created_at": "2021-11-08T21:32:27Z",
        "closed_at": "2021-11-09T14:53:40Z",
        "merged_at": "2021-11-09T14:53:40Z",
        "body": null,
        "comments": 3
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2021-11-08T18:47:21Z",
        "closed_at": "2021-11-08T20:21:43Z",
        "merged_at": "2021-11-08T20:21:43Z",
        "body": "Minor spelling fix from `compoments` -> `components`",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 24,
        "deletions": 5,
        "changed_files": 4,
        "created_at": "2021-11-08T17:36:31Z",
        "closed_at": "2022-02-28T14:25:33Z",
        "merged_at": "2022-02-28T14:25:33Z",
        "body": "When using React Router, it is common to use advanced history methods, like `parsePath` and `createPath`.\r\n\r\nReact Router has a strong dependency on History, so whenever RR updates, or history releases a new version, we get errors (usually just types) and are forced to match our application History with the current version of History RR's is using. It's frustrating. \r\nWe literally just use History to use RR's features.\r\n\r\nFor this reason, it makes sense to forward History from React Router, or just the methods RR is using (**`parsePath`**, `createMemoryHistory` (?), `createBrowserHistory`, `createHashHistory`, **`createPath`**).\r\n(I can make a separate PR for that, if you'd like)\r\n\r\nIt is cheap, and create a lot of value for the community.",
        "comments": 13
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2021-11-08T09:01:46Z",
        "closed_at": "2021-11-15T13:04:37Z",
        "merged_at": "2021-11-15T13:04:37Z",
        "body": "Fixes typos in Main Concepts.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 127,
        "deletions": 12,
        "changed_files": 9,
        "created_at": "2021-11-07T21:25:24Z",
        "closed_at": "2023-01-09T23:17:25Z",
        "merged_at": null,
        "body": "I am migrating some of my code to native node ESM modules, but I got stuck due to incompatibilities importing `react-router` in node.js and in client code.\r\nDoing SSR, I would have to do something like:\r\n\r\n```\r\nimport ReactRouter from 'react-router-dom';\r\nconst { Link } = ReactRouter;\r\n```\r\n\r\nThis is because the import will point to the `cjs` build, and it does not support named-exports.\r\nThe code above in the client side will import the default export for `ReactRouter`, and I have no way to get the named imports from it, like `Link`.\r\n\r\nThis PR fixes the issue by introducing a clone of `index.js` as `index.mjs` and exposes it using the `exports` field of `package.json`. I do not believe this would cause breaking changes to end users.\r\n\r\nThanks!",
        "comments": 33
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-11-07T19:39:25Z",
        "closed_at": "2021-11-07T23:06:09Z",
        "merged_at": "2021-11-07T23:06:09Z",
        "body": "Missing imports in the overview example.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-11-07T11:21:54Z",
        "closed_at": "2021-11-07T15:41:53Z",
        "merged_at": "2021-11-07T15:41:53Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 7,
        "changed_files": 4,
        "created_at": "2021-11-07T04:13:30Z",
        "closed_at": "2021-11-08T17:35:16Z",
        "merged_at": "2021-11-08T17:35:16Z",
        "body": null,
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-11-07T02:24:56Z",
        "closed_at": "2021-11-07T17:57:04Z",
        "merged_at": "2021-11-07T17:57:04Z",
        "body": "Found a typo while reading the docs. ",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-11-06T07:16:37Z",
        "closed_at": "2021-11-06T14:57:20Z",
        "merged_at": "2021-11-06T14:57:20Z",
        "body": "Should I keep it this way or change it to `yarn add` ?",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2021-11-05T21:38:59Z",
        "closed_at": "2021-11-05T22:58:12Z",
        "merged_at": "2021-11-05T22:58:12Z",
        "body": "Just some typos I noticed while I read through the tutorial.\r\n\r\nThanks for your hard work on RR6! Looks great \ud83d\udc4d\ud83c\udffd ",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 42,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2021-11-05T16:13:58Z",
        "closed_at": "2021-11-05T17:14:58Z",
        "merged_at": "2021-11-05T17:14:58Z",
        "body": "Closes #8190",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-11-05T09:38:09Z",
        "closed_at": "2021-11-05T16:02:52Z",
        "merged_at": "2021-11-05T16:02:52Z",
        "body": null,
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-11-05T09:07:51Z",
        "closed_at": "2021-11-05T16:03:08Z",
        "merged_at": "2021-11-05T16:03:08Z",
        "body": null,
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-11-04T19:09:02Z",
        "closed_at": "2021-11-05T00:45:47Z",
        "merged_at": "2021-11-05T00:45:47Z",
        "body": "I think the ending quote was left off by mistake.\r\n\r\nExcited for v6!",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 56,
        "deletions": 189,
        "changed_files": 23,
        "created_at": "2021-11-04T15:38:06Z",
        "closed_at": "2021-11-09T17:02:28Z",
        "merged_at": "2021-11-09T17:02:28Z",
        "body": "closes [REM-471](https://linear.app/remix-run/issue/REM-471)",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-11-04T15:09:51Z",
        "closed_at": "2021-12-10T20:30:42Z",
        "merged_at": null,
        "body": "Recreation of #7712 with full credit to @ejose19",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-11-04T13:37:50Z",
        "closed_at": "2021-11-04T14:48:58Z",
        "merged_at": "2021-11-04T14:48:58Z",
        "body": "It seems that should be Route Element instead of React Element",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-11-04T11:28:40Z",
        "closed_at": "2021-11-04T15:01:20Z",
        "merged_at": "2021-11-04T15:01:20Z",
        "body": "Fixes #8208 \r\nUpdated the paragraph width inside markdown for Desktop view of screen width more than 1270px\r\nSo the alignment of code snippets in right half of the page in now fixed.\r\nNow the documentation layout is correct for all the resolutions. ",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-11-04T09:57:09Z",
        "closed_at": "2021-11-04T14:49:26Z",
        "merged_at": "2021-11-04T14:49:26Z",
        "body": "The section is about replacing one hook with another, so it makes sense that the title reflects that.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-11-04T08:54:43Z",
        "closed_at": "2021-11-04T14:47:51Z",
        "merged_at": "2021-11-04T14:47:50Z",
        "body": null,
        "comments": 1
    },
    {
        "merged": true,
        "additions": 42,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2021-11-04T06:34:19Z",
        "closed_at": "2021-12-09T22:21:33Z",
        "merged_at": "2021-12-09T22:21:33Z",
        "body": "This slightly modifies the error message for silly people like me that might see this, which would also be an error:\r\n\r\n![image](https://user-images.githubusercontent.com/784953/140267887-e898b62b-a0d7-4f47-93da-374d94041874.png)\r\n\r\nThis would show if you were in the middle of a v5->6 migration and had this:\r\n\r\n```jsx\r\n<Routes>\r\n  <Route to=\"/\" element={<SomeSectionWithLotsOfNestedRoutes />} />\r\n</Routes>\r\n```\r\n\r\nAs an aside, it might make sense to do `toMatchInlineSnapshot` checks of the `consoleWarn` in the test to cover both of these cases.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2021-11-04T01:05:33Z",
        "closed_at": "2021-11-04T14:45:50Z",
        "merged_at": "2021-11-04T14:45:50Z",
        "body": "Check;\r\nhttps://github.com/remix-run/react-router/blob/4ae8f4662592080c089454ab274c230d8e169aaf/packages/react-router-dom/server.tsx#L2\r\n\r\nCurrently not able to bundle react-rotuer-dom, as there is no dep on `history` in the file tree.\r\n\r\nWorth noting seems to be only if pnpm is used, maybe just different linking strategy between it and yarn/npm.",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2021-11-03T22:42:55Z",
        "closed_at": "2021-11-04T00:44:15Z",
        "merged_at": "2021-11-04T00:44:15Z",
        "body": "Noticed this small [typo](https://en.wiktionary.org/wiki/programatically) while going through the v6 docs. The new website looks great, congrats y\u2019all!",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-11-03T22:12:24Z",
        "closed_at": "2021-11-04T00:45:29Z",
        "merged_at": "2021-11-04T00:45:29Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-11-03T21:52:46Z",
        "closed_at": "2021-11-04T00:46:24Z",
        "merged_at": "2021-11-04T00:46:24Z",
        "body": "The prior version seemed to indicate the opposite of the desired behavior will occur.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-11-03T21:14:19Z",
        "closed_at": "2021-11-04T00:47:57Z",
        "merged_at": "2021-11-04T00:47:57Z",
        "body": "I noticed a minor mismatch in the docs. I think this example is listing an incorrect route for the dynamic `:invoiceId` example. \r\n\r\nThanks for all of the great work!\r\n\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-11-02T19:07:06Z",
        "closed_at": "2021-11-02T20:43:09Z",
        "merged_at": "2021-11-02T20:43:09Z",
        "body": "Looks like the README links weren't changed when the /docs directory was re-arranged. Similar to #8177 merged a few days ago :)",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2558,
        "deletions": 17,
        "changed_files": 14,
        "created_at": "2021-11-01T16:00:03Z",
        "closed_at": "2021-11-01T17:50:52Z",
        "merged_at": "2021-11-01T17:50:52Z",
        "body": "This PR creates a new `tutorial` directory in the project root with a Vite project that we use as a base for the tutorial in the docs via StackBlitz. The \"completed\" version can be hosted on StackBlitz directly, but I still think it's nice to have a local starting point for folks who have the repo and prefer to work locally.\r\n\r\nThings we'll still need to do if we decide to merge this:\r\n- Update the StackBlitz links: currently they all link to the GitHub files in this branch's tree, but when this is in `main` we should update them accordingly. I wanted the links to actually work!\r\n- Update the version script to deal with dependencies the same way we do with the examples.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 9,
        "changed_files": 4,
        "created_at": "2021-10-31T10:03:50Z",
        "closed_at": "2021-11-01T01:39:20Z",
        "merged_at": null,
        "body": "History is now a regular dependency. So these are not needed, right?",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-10-31T04:44:25Z",
        "closed_at": "2021-11-01T01:37:16Z",
        "merged_at": "2021-11-01T01:37:16Z",
        "body": null,
        "comments": 1
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2021-10-27T14:19:18Z",
        "closed_at": "2021-12-09T22:16:53Z",
        "merged_at": "2021-12-09T22:16:53Z",
        "body": "Hi! \ud83d\udc4b\r\nI saw the `matchRouteBranch` with a todo.\r\n\r\nSo I add the `route: RouteObject;` to the interface `RouteMeta` so that the `matchRouteBranch` needn't to pass in  `routesArg`\u3002\r\n\r\nIt's convenient to get the `route` if match in the function `matchRouteBranch`\uff01",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 75,
        "deletions": 6,
        "changed_files": 4,
        "created_at": "2021-10-23T03:50:12Z",
        "closed_at": "2021-12-09T22:12:36Z",
        "merged_at": "2021-12-09T22:12:36Z",
        "body": "Right now the NavLink component has this useful className and style function support to change the styles if the link is active.\r\n\r\n```jsx\r\n<NavLink to=\".\" className={({ isActive }) => isActive ? activeClassName : inactiveClassName}>Content</NavLink>\r\n```\r\n\r\n```jsx\r\n<NavLink to=\".\" style={({ isActive }) => isActive ? activeStyles : inactiveStyles}>Content</NavLink>\r\n```\r\n\r\nThis is really cool, but one use case it doesn't support, but it's really easy to add support for, is what happens if inside the NavLink there are two, or more, elements and they need to change styles based on the isActive state, right now it's not really possible to detect that, specially when using utility CSS.\r\n\r\nThis PR adds support for that, which was also requested on the discussion #8080, copying the example from that discussion, now this is possible:\r\n\r\n```jsx\r\n<NavLink to=\"path\">\r\n  {({isActive}) => (\r\n    <>\r\n      <Icon className={isActive ? 'text-blue-500' : 'text-gray-500'} />\r\n      <span className={isActive ? 'text-blue-900' : 'text-gray-700'}>Link</span>\r\n    </>\r\n  )}\r\n</NavLink>\r\n```\r\n\r\nI also updated the `docs/api.md` to mention and show an example of this and the tests of the NavLink component to test this works.",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 206,
        "deletions": 92,
        "changed_files": 3,
        "created_at": "2021-10-20T19:15:50Z",
        "closed_at": "2021-10-22T19:29:35Z",
        "merged_at": "2021-10-22T19:29:35Z",
        "body": "chore: updated tests to do a re-render for useHref",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2107,
        "deletions": 0,
        "changed_files": 13,
        "created_at": "2021-10-20T17:58:19Z",
        "closed_at": "2021-10-20T22:45:21Z",
        "merged_at": "2021-10-20T22:45:21Z",
        "body": "Signed-off-by: Logan McAnsh <logan@mcan.sh>",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2100,
        "deletions": 0,
        "changed_files": 14,
        "created_at": "2021-10-20T16:01:07Z",
        "closed_at": "2021-10-21T00:14:42Z",
        "merged_at": "2021-10-21T00:14:42Z",
        "body": "Signed-off-by: Logan McAnsh <logan@mcan.sh>",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 38,
        "deletions": 52,
        "changed_files": 8,
        "created_at": "2021-10-20T15:23:41Z",
        "closed_at": "2021-10-20T21:45:48Z",
        "merged_at": "2021-10-20T21:45:48Z",
        "body": "makes running `npm run lint` and `npm run format` significantly faster and doesnt say we have linting errors as those files are minified.\r\n\r\nstats measured by yarn \r\n\r\nbefore:\r\n- lint took 10s\r\n- format took 8.73s\r\n\r\nafter:\r\n- lint (no cache) took 2s\r\n- lint (with cache) took 1s\r\n- format took 4s\r\n\r\nSigned-off-by: Logan McAnsh <logan@mcan.sh>\r\n",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 53,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2021-10-19T20:33:06Z",
        "closed_at": "2021-10-19T22:03:51Z",
        "merged_at": "2021-10-19T22:03:51Z",
        "body": "See https://github.com/remix-run/react-router/issues/8143",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 37,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2021-10-19T16:54:26Z",
        "closed_at": "2021-10-20T16:18:05Z",
        "merged_at": "2021-10-20T16:18:05Z",
        "body": "See https://github.com/remix-run/react-router/issues/8145",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 39,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2021-10-19T16:22:29Z",
        "closed_at": "2021-10-19T21:25:31Z",
        "merged_at": "2021-10-19T21:25:30Z",
        "body": "See https://github.com/remix-run/react-router/issues/8144",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2021-10-16T07:43:00Z",
        "closed_at": "2021-10-16T21:53:40Z",
        "merged_at": "2021-10-16T21:53:40Z",
        "body": "Thanks for the great lib!\r\n\r\nNot sure if this would be the most fitting link, but it should be at least more useful than the broken ones, I guess?",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 8,
        "changed_files": 2,
        "created_at": "2021-10-15T23:07:40Z",
        "closed_at": "2021-10-20T19:21:50Z",
        "merged_at": "2021-10-20T19:21:50Z",
        "body": "this makes it way easier to try it again if it fails",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3833,
        "deletions": 0,
        "changed_files": 18,
        "created_at": "2021-10-12T16:08:49Z",
        "closed_at": "2021-10-22T23:10:20Z",
        "merged_at": "2021-10-22T23:10:20Z",
        "body": "This PR adds an example showcasing how to have multiple apps running at the same time using `<BrowserRouter basename>`. We use an express with Vite in SSR middleware mode, and we stitch the apps together using manually based on if the url starts with `/inbox` or not\r\n\r\nedit: looks like I made this branch off of the custom link example branch \ud83e\udd26 \r\n\r\nedit2: looks like this needs some work for production, marking PR as draft\r\n\r\nSigned-off-by: Logan McAnsh <logan@mcan.sh>",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2021-10-08T16:22:00Z",
        "closed_at": "2021-10-13T04:11:05Z",
        "merged_at": null,
        "body": "closes #8120 ",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 389,
        "deletions": 0,
        "changed_files": 12,
        "created_at": "2021-10-06T19:14:38Z",
        "closed_at": "2021-10-07T23:17:49Z",
        "merged_at": "2021-10-07T23:17:49Z",
        "body": "I guess the main things to note here is that these came from [snkrs.mcan.sh](https://github.com/mcansh/snkrs) with slightly different data types, and the images are hosted in a Cloudinary bucket with a Cloudflare worker in front for caching \ud83e\udd13... so we'll see how that all holds up...\r\n\r\nSigned-off-by: Logan McAnsh <logan@mcan.sh>",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 3810,
        "deletions": 1972,
        "changed_files": 52,
        "created_at": "2021-10-05T20:56:19Z",
        "closed_at": "2021-10-14T20:23:25Z",
        "merged_at": null,
        "body": "\ud83d\udc4b ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 229,
        "deletions": 0,
        "changed_files": 11,
        "created_at": "2021-10-05T16:27:24Z",
        "closed_at": "2021-10-07T23:18:55Z",
        "merged_at": "2021-10-07T23:18:55Z",
        "body": "Signed-off-by: Logan McAnsh <logan@mcan.sh>",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 382,
        "deletions": 0,
        "changed_files": 12,
        "created_at": "2021-10-04T19:29:00Z",
        "closed_at": "2021-10-07T22:24:24Z",
        "merged_at": "2021-10-07T22:24:24Z",
        "body": "Signed-off-by: Logan McAnsh <logan@mcan.sh>",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 259,
        "deletions": 0,
        "changed_files": 11,
        "created_at": "2021-10-04T18:24:38Z",
        "closed_at": "2021-10-05T21:02:38Z",
        "merged_at": "2021-10-05T21:02:38Z",
        "body": "Signed-off-by: Logan McAnsh <logan@mcan.sh>",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 20,
        "deletions": 24,
        "changed_files": 3,
        "created_at": "2021-10-02T18:38:41Z",
        "closed_at": "2021-10-04T19:27:06Z",
        "merged_at": "2021-10-04T19:27:06Z",
        "body": "- updates the page title\r\n- moves Router to main.tsx\r\n- removes paths from tsconfig\r\n- add skipLibCheck to tsconfig\r\n\r\nSigned-off-by: Logan McAnsh <logan@mcan.sh>",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 263,
        "deletions": 0,
        "changed_files": 11,
        "created_at": "2021-10-01T20:09:22Z",
        "closed_at": "2021-10-07T23:10:34Z",
        "merged_at": "2021-10-07T23:10:34Z",
        "body": "closes REM-360\r\n\r\nSigned-off-by: Logan McAnsh <logan@mcan.sh>",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2021-10-01T17:24:06Z",
        "closed_at": "2021-10-01T21:36:50Z",
        "merged_at": "2021-10-01T21:36:50Z",
        "body": "this plugin enables react-refresh and a few other optimizations\r\n\r\nSigned-off-by: Logan McAnsh <logan@mcan.sh>",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 245,
        "deletions": 0,
        "changed_files": 11,
        "created_at": "2021-10-01T17:20:38Z",
        "closed_at": "2021-10-07T23:08:11Z",
        "merged_at": null,
        "body": "closes REM-358\r\n\r\nSigned-off-by: Logan McAnsh <logan@mcan.sh>",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 355,
        "deletions": 0,
        "changed_files": 13,
        "created_at": "2021-10-01T17:08:01Z",
        "closed_at": "2021-10-04T15:10:48Z",
        "merged_at": "2021-10-04T15:10:48Z",
        "body": "closes REM-348\r\n\r\nSigned-off-by: Logan McAnsh <logan@mcan.sh>",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 341,
        "deletions": 0,
        "changed_files": 14,
        "created_at": "2021-10-01T14:44:34Z",
        "closed_at": "2021-10-04T15:10:33Z",
        "merged_at": "2021-10-04T15:10:33Z",
        "body": "based on the vite vite + react ssr example, we take the basic example and add SSR to it \ud83e\udd75 \r\n\r\ncloses REM-350\r\n\r\nSigned-off-by: Logan McAnsh <logan@mcan.sh>",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2261,
        "deletions": 646,
        "changed_files": 6,
        "created_at": "2021-09-30T17:36:10Z",
        "closed_at": "2021-09-30T21:44:44Z",
        "merged_at": "2021-09-30T21:44:44Z",
        "body": "closes REM-345\r\ncloses REM-346",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 632,
        "deletions": 285,
        "changed_files": 5,
        "created_at": "2021-09-30T00:42:31Z",
        "closed_at": "2021-10-14T09:55:07Z",
        "merged_at": "2021-10-14T09:55:07Z",
        "body": "Fixes relative `<Link to>` values so that `..` traverses up by route instead of by URL segment.\r\n\r\nFixes #8086",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 55,
        "deletions": 55,
        "changed_files": 29,
        "created_at": "2021-09-28T15:02:51Z",
        "closed_at": "2021-09-29T02:08:57Z",
        "merged_at": "2021-09-29T02:08:57Z",
        "body": "I noticed multiple README and example files hadn't been updated with the new organization here on GitHub. This updates them.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 585,
        "deletions": 633,
        "changed_files": 18,
        "created_at": "2021-09-28T01:33:25Z",
        "closed_at": "2021-09-28T04:30:05Z",
        "merged_at": "2021-09-28T04:30:05Z",
        "body": "This PR should simplify some repo configuration. We now use TypeScript only at build time to generate the type declarations. We compile everything using babel/preset-typescript. This is exactly how we do it in Remix itself.\r\n\r\n- Don't use tsc for compilation, only for creating declaration files\r\n- Use project \"references\" tsconfig to build everything together\r\n- Eliminate custom build, watch, clean scripts\r\n- Add license banner to build artifacts\r\n- Build to `build/node_modules`",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 576,
        "deletions": 422,
        "changed_files": 18,
        "created_at": "2021-09-24T17:59:14Z",
        "closed_at": "2021-09-24T21:53:42Z",
        "merged_at": "2021-09-24T21:53:42Z",
        "body": "Since we can have only one basename in use at a time, it makes sense to move the basename prop from `<Routes>` back to `<Router>`. This is where it was in v5, so it should be an easier upgrade path for people who were using this feature in v5.\r\n\r\nAdditionally, the behavior of basename is altered to more closely align with how it is intended to be used: as an extension of the URL origin with respect to client-side routing.\r\n\r\nMore specifically, this means:\r\n\r\n- `location.pathname` will not include the basename\r\n- `useResolvedPath()` will not be able to resolve to pathnames \"above\" the basename\r\n- `<Link to>` will not be able to link to pathnames \"above\" the basename\r\n\r\nThe use case for `basename` is using React Router to render only a portion of a larger app. Keeping everything relative to that base ensures we don't try to transition to a path the router can't render.\r\n\r\nAlso, this PR adds a `React.useMemo` to the `<Router>` for the current location. This should eventually allow us to remove all state from the history library and make it just a simple reader/writer/eventlistener.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 65,
        "deletions": 10,
        "changed_files": 4,
        "created_at": "2021-09-24T17:53:52Z",
        "closed_at": "2021-09-28T22:03:38Z",
        "merged_at": "2021-09-28T22:03:38Z",
        "body": "test repo: https://github.com/mcansh/react-router-dom-exports\r\n\r\nSigned-off-by: Logan McAnsh <logan@mcan.sh>",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 17,
        "deletions": 60,
        "changed_files": 3,
        "created_at": "2021-09-24T16:42:32Z",
        "closed_at": "2021-09-27T22:56:24Z",
        "merged_at": "2021-09-27T22:56:24Z",
        "body": "Signed-off-by: Logan McAnsh <logan@mcan.sh>\r\n\r\nmost of these commits are due to me testing the wrong branch branch \ud83e\udd2a ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 13,
        "changed_files": 4,
        "created_at": "2021-09-21T21:40:30Z",
        "closed_at": "2021-09-23T17:59:32Z",
        "merged_at": "2021-09-23T17:59:32Z",
        "body": "closes REM-250\r\n\r\nThis PR adds the ability for you to not need to rebuild react-router before running the tests\r\n\r\nThis PR also adds `jest --watchAll` so jest will auto rerun the tests on file changes\r\n\r\nhttps://user-images.githubusercontent.com/11698668/134251774-36c251fe-6349-4b6b-890c-a9e4a0212a4e.mp4\r\n ",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 494,
        "deletions": 239,
        "changed_files": 10,
        "created_at": "2021-09-17T17:56:23Z",
        "closed_at": "2021-09-20T18:50:13Z",
        "merged_at": "2021-09-20T18:50:13Z",
        "body": "This prevents `*` from matching without a preceding `/` in the URL pathname. So e.g. `/users/*` matches `/users/mj` but not `/userstypo`.\r\n\r\nThis also fixes `to=\".\"` in splat routes so they point to the route path *including* the portion of the URL that was matched by the `*`, which also makes `*` more consistent with `:param` since it's treated just the same as any other param.\r\n\r\nBreaking changes:\r\n\r\n- In the `match` object you get back from `matchRoutes()` or `useMatch()`, `match.pathname` in a splat route now includes the full URL pathname that was matched instead of only the portion before the `*`. You can strip off `params['*']` from the end of `match.pathname` if you need the old behavior\r\n- `useParams()` in a descendant `<Routes>` object no longer returns the params from its ancestor `<Routes>`. You can persist the params directly if you need the old behavior\r\n\r\nFixes #7972",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2021-09-14T15:19:19Z",
        "closed_at": "2021-09-14T16:48:25Z",
        "merged_at": "2021-09-14T16:48:25Z",
        "body": "I have fixed typo in file name.\r\n\r\n```createNameContext``` >> ```createNamedContext```",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 19,
        "deletions": 15,
        "changed_files": 1,
        "created_at": "2021-09-10T19:47:04Z",
        "closed_at": "2021-09-10T22:00:39Z",
        "merged_at": "2021-09-10T22:00:39Z",
        "body": "don't want that thing causing re-renders in every component that uses it.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 62,
        "deletions": 8,
        "changed_files": 2,
        "created_at": "2021-09-10T15:58:48Z",
        "closed_at": "2021-12-09T20:48:44Z",
        "merged_at": "2021-12-09T20:48:44Z",
        "body": "Hi! \ud83d\udc4b \r\n\r\nI saw https://github.com/remix-run/react-router/pull/8019 go out, which is great! `useMatch` should definitely be generic to make the types better. One thing that's nice though is that modern TypeScript supports template strings, so these types can actually be parsed statically if they're string literals. This commit makes it attempt to parse the type statically and if not, it falls back to just string. You can play around with the parsing [here](https://www.typescriptlang.org/play?ts=4.4.2#code/C4TwDgpgBACghgJzgW3ggzhAYnAlgGwgBMoBeKAbyggQQHsEAuKYBAV2gF8BuAWACgBoSLEQo0mADwBlCAHNkEAHbBqAD2DKi6KOla4lcgHxkBUKAHoLUAMIALCAGMA1lAcJouAGYt30CGq4ejpwUF4MAO6IJOj4cOh2UAa+0HoIBnIAdGZQsgrKqgGaStpQAAYAJBQGXjRQADIQXsB5iiqcFlU1dQBKuHJ2LfJtwJxlOeZWUACSPsB+SSFhkdG6cQkANClKUHDAmshgqsB0UGCImNRwjonouETQdHMOE5bW4QhRCDHrdtn85nMAH5REhUBcIJJGs1WgUTEUtDpuggGk1gD0IOg2PhgK9gaDxBDJH0BkN8ip4RpEUklLUUSTBhisTi8YCQdD0ZjsYUqSUdGkMqzAW8Zs9oIRmrp7p5+WxHI5MegvNj8CAzhCSPFduqwVt5sooDcnK5vELAVN9VB0qSpQ9DXAdgAjVJyhXoJUqtXnDDEXY6CIQfD4TKiqCOujzW2Ys2TayOB1h6DezBEPUOHaWjzM1RBbVsJS4Og7J4pFgRU53B7oGMigAUHjgRGYACJwnRm1AAD5QZuOxDNgCU-2FI6gIIZnOz6mKpQFhjHqOaTO5XagE+XOKgzA5G9xANH5uss1LEtUlZlUCUEd0rsVyqDXo1fu13pQaYNRpcNam3igRdVpbWoMUb2k6Lryneno6pcWqhK+yAhseuB7geh6ge+GYOFaXKbrmABWbB6Fa-SDFsgaXMhADkSxeHg+BsB4w6oVua4kZOK4Inyuj6PO45sbuLFoISPo4AQxBmswQngiJdHifuwpTMelqniBRD3EolGqMmngqKccFiMgGFQARRGfq4mZsayUznkxwqSQZEiQhOsIUtO1LIqxpK7mafFeThPIzvyPFyAu67+YJDkQqJhBEBJBLSZg0VyQpR5ih41GXqcHxfD88R2EZZlJM8uaYOSZ7AIgwD+shiRwK8UyOHQ+BFohPjIVARB0JiRnzLmuahEQIBKCguCOLowwFFs6CnJm4VBPV1gmccWEeMgeAlHUJaWnOWRQAA8vqnxBBAWxUTRdEMRAtksS5AXUmUjBdLSvQQGtBgZGMoWvetGQRWCjlJUQfCCPwwjQFJ6AyBNKhuVxO0mKQORSY5UNlZSgXcekhgLaG23Q6o8ZgTeEHuveAHaSQBgnNqmCqCWO1QPgyE0HA+DoBsOP6ph0BZiuuZyHQv3U862prWAf7PHQlw7SEOjOBAIAhCUONgFLdyOgB+YPF4Bi+jLz6WgAbqzHDoNdIJoMAuCs8STgMEQkjI0St1GFNwVGEYONKVhpUjKBV6qCLWIkx6D7QcQRkBpRHjGYRqgC0LdA43YcCG9AoQC3QJDa3AK60UGfYuBLNPBVAAC0Jg7SCYvXfZCBWzbGKNd8kg7W7WPGEYwMCAEqv12E+aOFbRZQIREAALJ7DcMiw7OwVbDAs86BDMge7W8HoMw0gDpJlA5B4wAMTsFCcM+MDA5wAgCGPk-ADctatnQdAWH2CAv3AABeg7AzfU92A-bYLCMFfu-L+A4f6YFvvfR+z9gGICAX2MBECJ5-wfowQBcC36IO-tfSBqDmzoKfgg+BcCkECCAA).\r\n\r\nNow when you use `useMatch(\"foo/:bar\")` the type returned is actually `PathMatch<\"bar\">` and `useMatch(\"foo/:bar/:baz\")` is `PathMatch<\"bar\" | \"baz\">`. \r\n\r\nTotally get it if you don't want to maintain this, but I think it's really nice on the consumer side because you don't have to duplicate that key.\r\n\r\nTagging @chaance since you made that original PR that inspired this one.",
        "comments": 22
    },
    {
        "merged": true,
        "additions": 340,
        "deletions": 142,
        "changed_files": 2,
        "created_at": "2021-09-07T22:43:42Z",
        "closed_at": "2021-09-09T21:35:48Z",
        "merged_at": "2021-09-09T21:35:48Z",
        "body": "Fixes #8004",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 50,
        "deletions": 34,
        "changed_files": 3,
        "created_at": "2021-09-05T21:39:53Z",
        "closed_at": "2021-09-09T21:28:53Z",
        "merged_at": "2021-09-09T21:28:53Z",
        "body": "The `Params` type and functions that consume it should be generic to allow simpler static typing for query params.\r\n\r\n```tsx\r\n// before\r\nlet { valid, invalid, literallyAnything } = useParams();\r\n\r\nlet match = useMatch(\"profile/:userId\");\r\nlet userId = match?.params.user; // wrong param, but TS doesn't know that!\r\n\r\n// after:\r\n// Property 'invalid' does not exist on type 'Params<\"valid\" | \"key\">'\r\nlet { valid, invalid } = useParams<\"valid\" | \"key\">();\r\n\r\nlet match = useMatch<\"userId\">(\"profile/:userId\");\r\n// Property 'user' does not exist on type 'Params<\"userId\">'\r\nlet userId = match?.params.user;\r\n```\r\n\r\nNote, the generic type defaults to `string` so this doesn't break anyone's existing code, but it will enhance it for those looking for added type awareness.\r\n\r\nResolves #7978",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 5487,
        "deletions": 2917,
        "changed_files": 77,
        "created_at": "2021-09-05T19:26:53Z",
        "closed_at": "2021-10-15T19:05:40Z",
        "merged_at": null,
        "body": "The motivation here is two-fold:\r\n\r\n1. This provides an additional upgrade path from v5 to v6 as the APIs are compatible\r\n2. The `FancyLink` example on the website is currently broken, and to fix it a user would need to write their own click handler. This is much simpler with `useNavigate` (See #7727 for context)\r\n\r\nAll other hooks in v5 are handled in the `react-router` package, but it seems as though the implementation in v5 is a bit different between DOM and native. ",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 71,
        "deletions": 12,
        "changed_files": 2,
        "created_at": "2021-09-03T19:44:28Z",
        "closed_at": "2021-09-10T22:51:24Z",
        "merged_at": null,
        "body": "Resolves #7991 with the same API as v5, with the exception of the `match` parameter having a slightly different type in v6.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 177,
        "deletions": 69,
        "changed_files": 3,
        "created_at": "2021-09-03T00:52:13Z",
        "closed_at": "2021-09-03T18:21:51Z",
        "merged_at": "2021-09-03T18:21:51Z",
        "body": "Fixes #7997",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 262,
        "deletions": 29,
        "changed_files": 8,
        "created_at": "2021-09-02T22:52:19Z",
        "closed_at": "2021-11-11T01:07:03Z",
        "merged_at": null,
        "body": "WIP, but @mjackson would love any initial feedback you have on the organization or style here.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 541,
        "deletions": 24,
        "changed_files": 7,
        "created_at": "2021-09-02T21:43:06Z",
        "closed_at": "2021-09-03T17:51:30Z",
        "merged_at": "2021-09-03T17:51:30Z",
        "body": "This PR adds two new APIs that simplify the creation of custom `Link` components:\r\n\r\n- `useLinkClickHandler` for `react-router-dom`\r\n- `useLinkPressHandler` for `react-router-native`\r\n\r\nThe idea is the same for each. There is a lot of logic in our `onClick` handler for the DOM link, and this hook provides a simple wrapper that consumers can use to capture all of that logic while customizing other aspects of rendering.\r\n\r\n```tsx\r\nimport { useHref, useLinkClickHandler } from \"react-router-dom\";\r\nimport { styled } from \"styled-components\"; // could be whatever\r\n\r\nconst StyledLink = styled.a`\r\n  color: fuschia;\r\n`;\r\n\r\nconst Link = React.forwardRef(\r\n  ({ onClick, replace = false, state, target, to, ...rest }, ref) => {\r\n    let href = useHref(to);\r\n    let handleClick = useLinkClickHandler(to, { replace, state, target });\r\n\r\n    return (\r\n      <StyledLink\r\n        {...rest}\r\n        href={href}\r\n        onClick={event => {\r\n          onClick?.(event);\r\n          if (!event.defaultPrevented) {\r\n            handleClick(event);\r\n          }\r\n        }}\r\n        ref={ref}\r\n        target={target}\r\n      />\r\n    );\r\n  }\r\n);\r\n```\r\n\r\nThough the internals of `Link` in `react-router-native` are much simpler, I added the hook there for feature parity between the two packages.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 353,
        "deletions": 32,
        "changed_files": 14,
        "created_at": "2021-09-02T05:06:31Z",
        "closed_at": "2021-11-11T01:07:41Z",
        "merged_at": null,
        "body": "TODO",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 492,
        "deletions": 221,
        "changed_files": 15,
        "created_at": "2021-09-01T22:51:09Z",
        "closed_at": "2021-09-10T21:27:01Z",
        "merged_at": "2021-09-10T21:27:01Z",
        "body": "This PR allows child routes with absolute paths that match the combined path of all their parent routes. Child routes with absolute paths that do not match their parent routes are an error.\r\n\r\nThis should make it a little easier for people who prefer to define their route paths in a separate file of constants to do so without having to convert them to relative paths when they create their route config, like:\r\n\r\n```tsx\r\nconst USERS_PATH = \"/users\";\r\nconst USER_PROFILE_PATH = `${USERS_PATH}/:id`;\r\n\r\nlet routes = [\r\n  {\r\n    path: USERS_PATH,\r\n    element: <Users />,\r\n    children: [\r\n      { path: USER_PROFILE_PATH, element: <UserProfile /> }\r\n    ]\r\n  }\r\n];\r\n```\r\n\r\nThis PR also makes the following improvements:\r\n\r\n- Add optional `<Route index>` prop that throws if that route has children. This doesn't really affect the execution of the code, but should make it easier to scan and a little safer\r\n- Loosens up the `RouteObject` type so that every property is optional (same as with `<Route>`'s props. This eliminates the need for the `PartialRouteObject` interface, so it's gone\r\n- Returns the **same route object** from `matchRoutes` on each `match.route` as the one that was passed in. This should make it easier for developers to pass through custom properties in their route objects\r\n- Remove `createRoutesFromArray` utility method. You can now just use your array directly in `matchRoutes` instead of running it through `createRoutesFromArray` first\r\n\r\nFixes #7335",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 44,
        "deletions": 10,
        "changed_files": 2,
        "created_at": "2021-09-01T18:32:37Z",
        "closed_at": "2021-09-02T04:30:14Z",
        "merged_at": "2021-09-02T04:30:14Z",
        "body": "This tweaks the implementation a bit for a custom `location` prop on `Routes` and adds support for the same location override with `useRoutes`.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 163,
        "deletions": 273,
        "changed_files": 4,
        "created_at": "2021-08-31T21:54:17Z",
        "closed_at": "2021-09-01T16:23:01Z",
        "merged_at": "2021-09-01T16:23:01Z",
        "body": "See #7983 for context.\r\n\r\nThis change will remove the `activeClassName` and `activeStyle` props from `NavLink` and replace them by allowing either `style` or `className` to accept functions with the active state. Updated tests and documentation to support the change!",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 124,
        "deletions": 8,
        "changed_files": 3,
        "created_at": "2021-08-31T20:43:22Z",
        "closed_at": "2021-09-01T16:21:04Z",
        "merged_at": "2021-09-01T16:21:04Z",
        "body": "This is an alternative API that will provide a low level solution to the problem described in https://github.com/remix-run/react-router/issues/7194\r\n\r\nIn RR v6, we plan to drop support for `activeClassName` and `activeStyle` and use the function solution as a singular API for either styled or un-styled links. Consumers can always add these props back by abstracting `NavLink` if they prefer the old API, but this will allow us to simplify the code and API surface level internally while providing a more powerful lower-level solution.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 110,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2021-08-31T19:49:20Z",
        "closed_at": "2021-09-01T17:23:41Z",
        "merged_at": "2021-09-01T17:23:41Z",
        "body": "In #7880 it looks like `useSearchParams`, when called from a higher level route that renders an outlet, potentially directs to the wrong pathname when `setSearchParams` is called and a user is actually at a nested route.\r\n\r\nThis is actually a problem with `useNavigate`, I believe. When the resulting `navigate` function is called without an explicit pathname, we should stick with the current pathname returned by `useLocation` instead of the pathname constructed in the `RouteContext`. This ensures that `navigate` always directs users to a location with the same pathname they are currently on while only modifying either the hash or search depending on what is passed to `navigate`. Because `setSearchParams` abstracts `navigate`, this should fix #7880 and make `useNavigate` more stable in general.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 104,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2021-08-30T20:29:22Z",
        "closed_at": "2021-08-31T18:22:18Z",
        "merged_at": null,
        "body": "This PR adds two new props for v5 to add an optional class name and style prop when a `NavLink` is inactive. Resolves #7194.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 830,
        "deletions": 0,
        "changed_files": 11,
        "created_at": "2021-08-22T16:54:35Z",
        "closed_at": "2021-08-23T21:01:27Z",
        "merged_at": "2021-08-23T21:01:27Z",
        "body": "As discussed with @mjackson, it would be nice to have a live testing ground, and this would double as a nice place to keep examples we can use for the new docs site. Storybook has its own routing built in which makes it less ideal for us, so I opted for Vite so we could use a few simple rollup transforms that make everything work nicely.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 77,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2021-08-21T14:13:49Z",
        "closed_at": "2021-09-01T18:13:37Z",
        "merged_at": "2021-09-01T18:13:36Z",
        "body": "Added the posibility to override the location in the Routes component, like it was possible in Switch in V5.\r\nUseful for implementing logic like in the example: \r\nhttps://reactrouter.com/web/example/modal-gallery\r\nSpecific test added",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-08-20T18:06:23Z",
        "closed_at": "2021-08-20T20:12:58Z",
        "merged_at": "2021-08-20T20:12:58Z",
        "body": "Before the `beta.1` release we removed `propTypes` and `displayName` from the dev build. This PR adds `displayName` back for `forwardRef` components to help with debugging and make some Jest tests a bit more predictable (re: #7958)",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-08-20T15:47:05Z",
        "closed_at": "2021-08-20T19:12:03Z",
        "merged_at": "2021-08-20T19:12:03Z",
        "body": "# Description\r\n\r\nThe latest version of `create-react-app` uses Yarn as the package manager, not NPM (even though it's invoked with `npx`). Because of this, specifying `npm install` as [step 2 of the quick start](https://reactrouter.com/web/guides/quick-start/installation) will likely cause confusion for new learners.\r\n\r\n# Fix\r\n\r\nThis changes `npm install` to `yarn add` in the quick start guide. I don't know if there are any other installation guides in the docs; I took a look and didn't see any but it's possible I missed something. ",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 5779,
        "deletions": 163,
        "changed_files": 6,
        "created_at": "2021-08-20T00:21:41Z",
        "closed_at": "2021-08-22T02:41:45Z",
        "merged_at": null,
        "body": "Added Storybook to make it just a bit easier to test dev changes in real time! ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 37,
        "deletions": 8,
        "changed_files": 3,
        "created_at": "2021-08-19T23:52:14Z",
        "closed_at": "2021-08-20T20:10:34Z",
        "merged_at": "2021-08-20T20:10:34Z",
        "body": "If I read this right, I believe this solves the problem captured in #7960!",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 75,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2021-08-18T23:18:42Z",
        "closed_at": "2021-08-20T19:40:23Z",
        "merged_at": "2021-08-20T19:40:23Z",
        "body": "Should fix #7948",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 347,
        "deletions": 9,
        "changed_files": 9,
        "created_at": "2021-08-18T00:57:11Z",
        "closed_at": "2021-11-11T01:08:18Z",
        "merged_at": null,
        "body": "Fixes #7946",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 89,
        "deletions": 6,
        "changed_files": 4,
        "created_at": "2021-08-17T00:35:27Z",
        "closed_at": "2021-08-18T22:50:20Z",
        "merged_at": "2021-08-18T22:50:20Z",
        "body": "Fixes #7496",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2261,
        "deletions": 1209,
        "changed_files": 64,
        "created_at": "2021-08-16T18:38:30Z",
        "closed_at": "2021-11-05T20:28:11Z",
        "merged_at": null,
        "body": null,
        "comments": 5
    },
    {
        "merged": false,
        "additions": 472,
        "deletions": 16,
        "changed_files": 7,
        "created_at": "2021-08-12T16:48:28Z",
        "closed_at": "2021-09-01T16:26:15Z",
        "merged_at": null,
        "body": "**NOTE:** There are some blockers at the moment related to npm's lack of support for `resolutions` and `nohoist` fields in `package.json`. Both have open RFPs we're tracking. I may be able to find workarounds in the mean time, but keeping this in draft as a working branch until we can move forward.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 61,
        "deletions": 0,
        "changed_files": 4,
        "created_at": "2021-08-11T00:07:42Z",
        "closed_at": "2021-08-11T15:31:24Z",
        "merged_at": "2021-08-11T15:31:24Z",
        "body": "Resolves #7545 ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 78,
        "deletions": 10,
        "changed_files": 3,
        "created_at": "2021-08-10T18:36:51Z",
        "closed_at": "2021-08-11T15:30:09Z",
        "merged_at": "2021-08-11T15:30:09Z",
        "body": "This resolves #7117.\r\n\r\nWe will consider updating our animation examples with a more declarative API for dealing with transition states, but this provides a smoother upgrade path for v5 users.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 10,
        "changed_files": 1,
        "created_at": "2021-08-10T17:44:00Z",
        "closed_at": "2021-08-10T23:50:02Z",
        "merged_at": "2021-08-10T23:50:02Z",
        "body": "Resolves #7875",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 41,
        "deletions": 42,
        "changed_files": 2,
        "created_at": "2021-07-29T02:06:07Z",
        "closed_at": "2021-09-17T02:11:03Z",
        "merged_at": null,
        "body": "Routes in object syntax is awesome \ud83d\udc4d\ud83c\udffb  especially when creating navigation. We can create nav UI items from the routes since it's just an array, and we can figure out what's active using `matchRoutes`:\r\n\r\n```js\r\nconst routes = [{path: \"/\", children: [\r\n  { name: \"Page 1\", path: \"page1\", element: <Page1 /> },\r\n  { name: \"Page 2\", path: \"page2\", element: <Page2 /> },\r\n}}]\r\nconst matches = matchRoutes(routes, useLocation());\r\nconst matchedPathName = matches?.[0].route.name;\r\n```\r\n\r\n(I know it's smarter to use the path as it should be unique, this is for the sake of demonstrating types)\r\n\r\nThis works great in JS, however we get a few TypeScript errors:\r\n\r\n1. matchRoutes expects `caseSensitive` and `element` for all routes, which are optional. I'm ok with being explicit about `element: <Outlet />` though I'd rather not if avoidable. `caseSensitive` defaults to false anyway, so can't this be optional?\r\n2. `matchRoutes` returns `RouteObject[]` which isn't aware of any custom properties the route might have (i.e. `name`, `icon`).\r\n\r\nThis PR makes `RouteObject` generic so we can pass custom properties like so;\r\n\r\n```ts\r\nconst routes = [{path: \"/\", children: [\r\n  { name: \"Page 1\", path: \"page1\", element: <Page1 /> },\r\n  { name: \"Page 2\", path: \"page2\", element: <Page2 /> },\r\n}}]\r\nconst matches = matchRoutes<{name?: string}>(routes, useLocation())\r\nconst matchedPathName = matches?.[0].route.name\r\n```\r\n\r\nIt also makes `caseSensitive` optional, undefined by default which evaluates to false.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-07-27T20:15:55Z",
        "closed_at": "2021-07-27T23:46:22Z",
        "merged_at": null,
        "body": "should fix Issue #7922",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-07-23T04:33:07Z",
        "closed_at": "2021-07-24T03:21:19Z",
        "merged_at": null,
        "body": "I tried to use `useLocation` as `useNavigate` with `state`, but I can't declare a generic type of `Location<S>` that return type of `useLocation`. I've read contribute guidelines,  but this change is a simple type declaration. So I don't think no more tests are needed.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 137,
        "deletions": 18,
        "changed_files": 2,
        "created_at": "2021-07-18T05:30:49Z",
        "closed_at": "2021-08-11T12:12:23Z",
        "merged_at": null,
        "body": "separate location and navigator\r\n\r\nlink: #7875 ",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 137,
        "deletions": 18,
        "changed_files": 2,
        "created_at": "2021-07-17T15:28:58Z",
        "closed_at": "2021-07-18T05:26:50Z",
        "merged_at": null,
        "body": "separate location and navigator\r\n\r\nCloses #7875 ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1440,
        "deletions": 1108,
        "changed_files": 22,
        "created_at": "2021-07-16T00:37:01Z",
        "closed_at": "2021-07-16T05:18:09Z",
        "merged_at": "2021-07-16T05:18:09Z",
        "body": "I'd like to get all of our internal dependencies up-to-date (or at least _more_ up-to-date). We're getting there, but I wanted to start with some low-hanging fruit. Each of the dependencies updated in this PR are used for various scripts, which should all work essentially the same before and after updating.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 70,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2021-07-12T06:38:33Z",
        "closed_at": "2021-07-19T17:36:40Z",
        "merged_at": null,
        "body": "Avoid breaking optimizations like React.PureComponent or React.memo by passing a different `props.match` object every time.  \r\nsee https://github.com/ReactTraining/react-router/issues/7527 for details.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-07-05T03:19:41Z",
        "closed_at": "2021-07-05T14:02:37Z",
        "merged_at": null,
        "body": "\u589e\u52a0\u8def\u7531\u7f13\u5b58",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 79,
        "deletions": 107,
        "changed_files": 26,
        "created_at": "2021-06-26T05:07:41Z",
        "closed_at": "2021-07-15T16:46:41Z",
        "merged_at": "2021-07-15T16:46:41Z",
        "body": "No substantive changes for these, just adding type info where possible!",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1540,
        "deletions": 1347,
        "changed_files": 10,
        "created_at": "2021-06-25T03:57:38Z",
        "closed_at": "2021-06-25T23:17:59Z",
        "merged_at": "2021-06-25T23:17:59Z",
        "body": "Before I go and start updating all tests to TypeScript, I wanted to start by updating the test script + config files to make sure I didn't bust anything before going to far. I'll start with a single test and update the rest in a later PR.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2021-06-15T21:44:11Z",
        "closed_at": "2021-06-24T20:17:25Z",
        "merged_at": "2021-06-24T20:17:25Z",
        "body": "Fixes #7765",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 23,
        "deletions": 14,
        "changed_files": 2,
        "created_at": "2021-06-14T18:56:43Z",
        "closed_at": "2021-08-11T18:14:04Z",
        "merged_at": "2021-08-11T18:14:04Z",
        "body": "Fixes #7529",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-06-07T09:46:19Z",
        "closed_at": "2021-06-07T14:55:50Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 56,
        "deletions": 22,
        "changed_files": 2,
        "created_at": "2021-06-05T14:34:02Z",
        "closed_at": "2021-08-27T18:15:46Z",
        "merged_at": "2021-08-27T18:15:46Z",
        "body": "Back ported this fix from v6 to v5: https://github.com/ReactTraining/react-router/blob/dev/packages/react-router-dom/index.tsx#L186-L189\r\n\r\nTo check:\r\n- Should the normalised location from the scope above (line 93) not be used?\r\n\r\nFixes: #5362 ",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2021-05-24T16:18:22Z",
        "closed_at": "2021-05-24T17:51:28Z",
        "merged_at": null,
        "body": "### Version\r\nv6\r\n\r\n### Problem\r\n`useLocation()` does not accept State as type parameter in v6, which makes using state object cumbersome.\r\n\r\nIn v5 with `@types/react-router@5.1.13`, useLocation's type is defined as follows \r\n```typescript\r\nexport function useLocation<S = H.LocationState>(): H.Location<S>;\r\n```\r\n\r\nIn v6, it's currently typed as \r\n```typescript\r\n useLocation(): Location\r\n```\r\n\r\nIf you want to use, for example, an optional `from` prop in LocationState, you're forced to type cast or use an assertion\r\n```typescript\r\nif (\r\n    location.state !== null &&\r\n    (location.state as { from?: string }).from !== undefined\r\n  ) {\r\n  const from = (location.state as { from: string }).from\r\n}\r\n```\r\n## Solution\r\nAccept State as generics\r\n```typescript\r\nconst location = useLocation<{ from?: string } | null>()\r\n```",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2295,
        "deletions": 1106,
        "changed_files": 57,
        "created_at": "2021-05-19T10:22:44Z",
        "closed_at": "2021-12-09T19:51:10Z",
        "merged_at": null,
        "body": "## Version\r\nv.5.2.0\r\n\r\n### Problem\r\n**Hey guys, using react-router a lot among my projects, you rock!**\r\nMy team faced an issue with generatePath function in v5:\r\nUse case is that we need to encode our query parameters with something like [encodeURIComponent](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent) function, while `generatePath` uses [encodeURIComponentPretty](https://github.com/pillarjs/path-to-regexp/blob/a99ec3c149e8c1d91fa533aa54d3ee7e34449bb3/index.js#L120) which is a slightly modified [encodeURI](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURI) function with escaped characters of `/`, `?`, and `#`, due to hard-coded { pretty: true } argument inside the current implementation of `generatePath`.\r\n\r\nI simply added `{ pretty: true }` as a third default argument called [pathFunctionOptions](https://github.com/pillarjs/path-to-regexp/blob/a99ec3c149e8c1d91fa533aa54d3ee7e34449bb3/index.d.ts#L68) to `generatePath` function and wrote some tests to make sure that updated API is backward compatible.\r\n\r\nI also updated docs with specifying differences between encodeURIComponentPretty and encodeURIComponent functions in terms of which symbols are escaped and which are not.\r\n\r\nWhat I tended to achieve was { encode: encodeURIComponent } from the newest version of path-to-regexp, but as far as I know, v6 will not use this dependency which is quite great news I guess.\r\n\r\nI choose argument name from path-to-regexp `d.ts` to make sure that is transparent between the libraries and looks similar to previous implementation, however, I did not yet updated react-router `d.ts` as long as these are cached from DefinitelyTyped and I was not sure how to perform that correctly.\r\n\r\nThe behaviour of function will change that way:\r\n```js\r\n// default behaviour will remain the same as current\r\ngeneratePath(\"/password/restore?email=:email\", {\r\n  email: \"emailWith+Sign@gmail.com\"\r\n});\r\n// Will return \"/password/restore?email=emailWith+Sign@gmail.com\"\r\n\r\n// However it is possible to specify the `{ pretty: false }` directly\r\ngeneratePath(\r\n  \"/password/restore?email=:email\",\r\n  { email: \"emailWith+Sign@gmail.com\" },\r\n  { pretty: false }\r\n);\r\n// Will return \"/password/restore?email=emailWith%2BSign%40gmail.com\"\r\n```\r\n\r\nHere are the 8 characters encoded differently between flags `{ pretty: true }` and `{ pretty: false }` \r\n![image](https://user-images.githubusercontent.com/15281217/118794784-5b93c600-b8b3-11eb-8bf9-5af1d9ddb810.png)\r\n\r\nI would appreciate any feedback and thanks again for your job. Cheers!\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 149,
        "deletions": 3,
        "changed_files": 4,
        "created_at": "2021-05-04T04:53:04Z",
        "closed_at": "2021-12-09T19:50:32Z",
        "merged_at": null,
        "body": "Added guides for:\r\n- Using Layouts\r\n- \"Not Found\" Routes (404)\r\n- Using Route Config Objects",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 41,
        "deletions": 33,
        "changed_files": 7,
        "created_at": "2021-04-30T14:33:36Z",
        "closed_at": "2021-07-23T22:22:37Z",
        "merged_at": null,
        "body": "facebook/react#20976",
        "comments": 13
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2021-04-28T21:35:45Z",
        "closed_at": "2021-04-29T00:57:49Z",
        "merged_at": "2021-04-29T00:57:49Z",
        "body": "Is it true?",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 147,
        "deletions": 35,
        "changed_files": 10,
        "created_at": "2021-04-25T07:05:09Z",
        "closed_at": "2021-04-25T19:38:26Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-04-20T12:06:51Z",
        "closed_at": "2021-04-21T20:34:15Z",
        "merged_at": null,
        "body": "",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 2151,
        "deletions": 1104,
        "changed_files": 53,
        "created_at": "2021-04-19T17:32:35Z",
        "closed_at": "2021-10-27T11:58:31Z",
        "merged_at": null,
        "body": "Also adds more test cases, closes #7059",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 2094,
        "deletions": 1104,
        "changed_files": 55,
        "created_at": "2021-04-16T14:09:44Z",
        "closed_at": "2021-12-09T19:49:47Z",
        "merged_at": null,
        "body": "## What\r\n* Update `generatePath()` with param to pass through `path-to-regexp` [compile options](https://github.com/pillarjs/path-to-regexp#compile-reverse-path-to-regexp)\r\n* Update docs\r\n* Add test\r\n\r\n## Why\r\n* Want to pass through `encode` option as seen in test\r\n\r\n## How\r\nI added an optional param to `generatePath()` to prevent a breaking change to the existing API. Negative testing is handled by existing test cases.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2021-03-20T08:30:04Z",
        "closed_at": "2021-03-20T23:11:38Z",
        "merged_at": null,
        "body": "When I set `allowSyntheticDefaultImports: true` in `tsconfig.json`, if I run the script `tsc`, it will display the error that \r\n\r\n> node_modules/react-router-dom/index.d.ts:2:8 - error TS1192: Module '\"./node_modules/@types/prop-types/index\"' has no default export.\r\n\r\nSo wh should change the way of importing `prop-types` :\r\n\r\n``` js\r\nimport * as PropTypes from 'prop-types';\r\n```\r\n\r\nLooking forward to you being able to merge in and release a new version to fix it.\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2021-03-14T08:52:34Z",
        "closed_at": "2021-03-15T02:22:04Z",
        "merged_at": "2021-03-15T02:22:04Z",
        "body": "\"navigates home when you click the logo\" fails because of minor issues\r\n\r\n* the path to the route with the link was wrong\r\n* the id for the link was wrong\r\n* the text on the target page was wrong\r\n* providing an argument to the anonymous function makes the timeout waiting for completion callback",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 14,
        "changed_files": 1,
        "created_at": "2021-02-22T04:31:28Z",
        "closed_at": "2021-02-22T14:47:49Z",
        "merged_at": null,
        "body": "Previous code used \"forEach\" method to find the matching route.\r\nHowever, since we have a good method called 'find', I refactored it with that method.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2021-01-27T07:32:29Z",
        "closed_at": "2021-01-27T15:03:49Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-01-26T09:07:28Z",
        "closed_at": "2021-01-26T14:22:14Z",
        "merged_at": null,
        "body": "I came across a scenario where I had to use a function return in the `path` prop (some old third-party developed code)\r\n\r\nJust a thought to add this in \ud83d\ude04 ",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2021-01-24T06:37:36Z",
        "closed_at": "2021-01-24T21:27:21Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 37,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2021-01-21T13:08:05Z",
        "closed_at": "2021-01-21T15:20:02Z",
        "merged_at": null,
        "body": "## Summary\r\n\r\nUsing `react-router@5.1.2` i noticed that `<Route />` when re-renders it creates new `match` object\r\n<img width=\"586\" alt=\"Screenshot 2021-01-21 at 15 59 57\" src=\"https://user-images.githubusercontent.com/14371261/105354663-eca6a900-5c01-11eb-9bdc-df9ffb491295.png\">\r\nWhich forces child component to re-render also (at least if you don't use `React.memo`).\r\n\r\nThis PR memoizes `matchPath` function to return same result if arguments are the same. Cache has size=1, cause we need it only when render same screen.\r\n\r\n## Test plan\r\n\r\nAdded unit test to check if result is equal for the first time and then cache resets when new arguments appear\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 69,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2021-01-16T17:22:38Z",
        "closed_at": "2021-01-26T14:28:25Z",
        "merged_at": null,
        "body": "Having updater would allow to work with search params more convenient via useSearchParams hook\r\n\r\n\r\n```js\r\nuseEffect(() => {\r\n  // append foo=123 to /search?q=Michael+Jackson\r\n  setSearchParams(prev => {\r\n    prev.set('foo', '123');\r\n    return prev;\r\n  });\r\n}, [setSearchParams]);\r\n\r\n```",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2021-01-06T21:53:44Z",
        "closed_at": "2021-12-09T19:48:20Z",
        "merged_at": null,
        "body": "There should be a way to get current routes context pathname.\r\n\r\nEqual is done as useOutlet() for outlet and  useParams() for params\r\n\r\nThis change adds useRoutesPath() and Returns the pathname element under current router context...\r\n\r\n**Edited:** by @timdorr recomendation will name useRoutePathname()",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 70,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-12-23T21:02:49Z",
        "closed_at": "2020-12-24T05:52:55Z",
        "merged_at": null,
        "body": "I am filing this PR as recommended for filing bugs.  However, I am unclear if this is an actual bug or not.  I wrote some tests to illustrate issue.  There are no actual code changes here.\r\n\r\n---\r\n\r\nI have a root provider in my app which checks for id value in the URL, such as on an URL page refresh and the global store is not updated, we need to set the value of associated details based on this ID.\r\n\r\nUsing the hook is very straight forward:\r\n```\r\nconst { id } = useParams<{ id: string }>();\r\n```\r\nHowever, the `id` is undefined unless I have a list of all the possible routes with params, so I need to wrap everything with a Route component, using an array of paths like: `<Route path={[..array of routes]}>`.\r\n\r\nHowever, it seems the order of the array paths matter. Why is this?\r\n\r\nWorks:\r\n```\r\n<Route path={[\"/nested/again/:id\", \"/nested/:id\", \"/:id\", \"/\"]}> \r\n```\r\nDoes not work:\r\n```\r\n<Route path={[ \"/\", \"/:id\", \"/nested/:id\", \"/nested/again/:id\"]}>\r\n```\r\n\r\nI understand that this is not optimal path declaration where the `:id` param is in different locations within the url, but it cannot be changed at this time within my work environment.\r\n\r\nActual Codesandbox with UI example: https://codesandbox.io/s/useparams-with-array-of-route-match-options-forked-3dcbz?file=/example.js:214-270\r\n\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2020-12-23T09:45:22Z",
        "closed_at": "2020-12-23T17:39:31Z",
        "merged_at": "2020-12-23T17:39:31Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 42,
        "deletions": 34,
        "changed_files": 7,
        "created_at": "2020-12-05T10:19:09Z",
        "closed_at": "2021-11-04T15:05:42Z",
        "merged_at": null,
        "body": "This removes the unnecessary ```?``` when there's no searchParams",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-12-01T03:43:53Z",
        "closed_at": "2020-12-01T14:02:38Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-10-21T07:17:47Z",
        "closed_at": "2020-10-21T19:45:38Z",
        "merged_at": "2020-10-21T19:45:38Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 8,
        "changed_files": 2,
        "created_at": "2020-10-17T19:46:17Z",
        "closed_at": "2021-06-14T20:48:05Z",
        "merged_at": null,
        "body": "Fixes https://github.com/ReactTraining/react-router/issues/7529 and https://github.com/ReactTraining/react-router/issues/7517",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 88,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2020-10-17T19:32:58Z",
        "closed_at": "2021-12-09T19:38:46Z",
        "merged_at": null,
        "body": "Fixes https://github.com/ReactTraining/react-router/issues/7523",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 142,
        "deletions": 3,
        "changed_files": 6,
        "created_at": "2020-10-13T05:19:05Z",
        "closed_at": "2020-10-13T15:04:06Z",
        "merged_at": null,
        "body": "This PR adds a useQueryString hook, to get the queryString by `<Link />`.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 139,
        "deletions": 3,
        "changed_files": 6,
        "created_at": "2020-10-13T04:08:54Z",
        "closed_at": "2020-10-13T05:17:24Z",
        "merged_at": null,
        "body": "This PR adds a useQueryString hook, to get the queryString by <Link />.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2020-10-01T18:19:31Z",
        "closed_at": "2020-10-02T06:00:23Z",
        "merged_at": null,
        "body": "`npm install react-router-dom@6` no longer works.\r\n\r\nAlso removes the version specification (5) for the history dependency to align with the release notes of v6.beta.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-09-21T07:14:42Z",
        "closed_at": "2020-09-21T13:45:02Z",
        "merged_at": "2020-09-21T13:45:02Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 89,
        "deletions": 3,
        "changed_files": 6,
        "created_at": "2020-09-18T16:49:15Z",
        "closed_at": "2021-10-07T16:56:25Z",
        "merged_at": null,
        "body": "This PR adds a `useStaticContext` hook, to get a hold of the `staticContext` without needing to instantiate a `Route` wrapper.\r\n\r\nThis just mirrors the work already done to achieve e.g. `useLocation`.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 34,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-08-26T15:51:19Z",
        "closed_at": "2021-12-02T21:48:04Z",
        "merged_at": "2021-12-02T21:48:04Z",
        "body": "https://github.com/ReactTraining/react-router/issues/7585\r\n\r\nHi guys, great work with v6 release!\r\n\r\nJust a little note:\r\n\r\nIt would be nice to add support for a already created history object on <BrowserRouter\r\nand skip creation if it is passed as prop.\r\n\r\nWe need it to support redux-first-history integration.",
        "comments": 34
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-08-23T12:26:23Z",
        "closed_at": "2020-08-24T02:05:58Z",
        "merged_at": "2020-08-24T02:05:58Z",
        "body": "Right now the link is broken, fixed the URL",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 130,
        "deletions": 44,
        "changed_files": 5,
        "created_at": "2020-08-20T07:50:24Z",
        "closed_at": "2021-08-15T01:41:51Z",
        "merged_at": null,
        "body": "I cleaned the commits of #7298 to just these two. This should be easier to merge.\r\n\r\nFixes #7117 and #7297.\r\n\r\n@MeiKatz @timdorr @mjackson @ryanflorence",
        "comments": 13
    },
    {
        "merged": false,
        "additions": 29,
        "deletions": 15,
        "changed_files": 3,
        "created_at": "2020-08-07T12:33:13Z",
        "closed_at": "2020-08-11T07:19:53Z",
        "merged_at": null,
        "body": "This is an example implementation of the feature mentioned in #7552 \r\n\r\nI am still not sure if useActivePath is a good hook name, thus I am very open to suggestions\r\n\r\nCurrently:\r\n\r\n- [x] Implementation\r\n\r\n- [ ] Tests\r\n\r\n- [ ] Documentation",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2020-08-07T03:08:29Z",
        "closed_at": "2020-08-07T14:44:11Z",
        "merged_at": "2020-08-07T14:44:11Z",
        "body": "Use double quotes instead of single quotes to make it the same style as other exmaple code blocks.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 21,
        "deletions": 15,
        "changed_files": 2,
        "created_at": "2020-08-04T07:54:52Z",
        "closed_at": "2020-08-04T14:32:38Z",
        "merged_at": "2020-08-04T14:32:38Z",
        "body": "After fix in f20b6fe8beb839bafb71bbc08c320521db9f68c8 \r\n\r\nwhen start website local dev exist a lot of errors\r\n\r\n`ERROR in ../packages/react-router-dom/docs/guides/quick-start.md\r\nModule build failed (from ./webpack/markdown-loader.js):\r\nTypeError: Cannot read property 'basename' of null\r\n    at Object.module.exports (/mnt/c/code/react-router/website/webpack/markdown-loader.js:153:28)\r\n @ ./modules/docs/Web.js (./node_modules/babel-loader/lib!./modules/docs/Web.js) 77:11-83\r\n @ ./node_modules/bundle-loader?lazy!./modules/docs/Web.js\r\n @ ./modules/components/Environment.js\r\n @ ./modules/components/App.js\r\n @ ./modules/index.js\r\n`\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2020-07-29T02:20:38Z",
        "closed_at": "2020-07-29T12:06:04Z",
        "merged_at": "2020-07-29T12:06:04Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2020-07-27T12:08:30Z",
        "closed_at": "2020-07-27T14:28:01Z",
        "merged_at": "2020-07-27T14:28:01Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2020-07-13T16:34:14Z",
        "closed_at": "2020-07-13T17:44:10Z",
        "merged_at": "2020-07-13T17:44:10Z",
        "body": "In the [spec](https://www.w3.org/TR/wai-aria-1.1/#aria-current) the default value is \"false\" and currently there is an error that comes up when trying to set the value to false. The use case for this would be if there are multiple links on a page with `aria-current=\"page\"` then the screen reader would alert the user multiple times about what the current page is.\r\n\r\nI considered allowing for `false` as a boolean but that would be a larger change and \"false\" is already an option in the spec.\r\n\r\nThere are no tests currently enforcing what values are passed into `aria-current`, only that the expected output is returned, so I didn't need to update any tests for this PR.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2020-07-09T22:34:17Z",
        "closed_at": "2020-07-10T00:50:53Z",
        "merged_at": null,
        "body": "Closes #7498.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-07-09T15:45:32Z",
        "closed_at": "2020-07-09T19:35:50Z",
        "merged_at": "2020-07-09T19:35:50Z",
        "body": "Currently, Logo is not displayed at Twitter card.\r\n`og:image` is url, not path.\r\nhttps://ogp.me/",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-07-06T22:06:05Z",
        "closed_at": "2020-07-07T02:17:46Z",
        "merged_at": "2020-07-07T02:17:46Z",
        "body": "Fixed the link to the history \"blocking transitions\" documentation.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-07-06T22:02:09Z",
        "closed_at": "2020-07-07T02:19:39Z",
        "merged_at": null,
        "body": "In https://github.com/ReactTraining/history/commit/9532fb2170ab8000bddf69116661a9cb400c1ed6 the file for blocking transitions docs was renamed. The link to that file from the docs here was not not updated, so I do that in this PR.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-07-06T13:22:27Z",
        "closed_at": "2020-07-06T17:35:30Z",
        "merged_at": "2020-07-06T17:35:30Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-07-05T07:17:01Z",
        "closed_at": "2020-07-05T19:14:34Z",
        "merged_at": "2020-07-05T19:14:34Z",
        "body": "The current link in the master branch is not as helpful anymore because the original link was stripped out. As a result, users were being redirected to a generic page. The Redux page with the one that I have added in this PR. Thanks for the project,",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-07-04T18:00:36Z",
        "closed_at": "2020-07-04T20:45:58Z",
        "merged_at": "2020-07-04T20:45:58Z",
        "body": "Minor h2 header alignment issue fixed.\r\n\r\nActual:\r\n![image](https://user-images.githubusercontent.com/13428505/86518284-25418980-be4e-11ea-9b6e-dbce06f6fd8c.png)\r\n\r\nAfter fix (local screenshot):\r\n![image](https://user-images.githubusercontent.com/13428505/86518289-37bbc300-be4e-11ea-9109-7699ad00c3fe.png)\r\n\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2020-07-04T14:45:36Z",
        "closed_at": "2020-07-04T20:44:09Z",
        "merged_at": "2020-07-04T20:44:09Z",
        "body": "jsx code visually breaks because there are 2 pre blocks one after another\r\nhttps://reactrouter.com/web/guides/testing",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-07-04T02:14:55Z",
        "closed_at": "2020-07-04T20:42:41Z",
        "merged_at": "2020-07-04T20:42:41Z",
        "body": "Sorry, this is a joke...:(",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 80,
        "deletions": 32,
        "changed_files": 1,
        "created_at": "2020-07-03T18:55:07Z",
        "closed_at": "2020-07-04T20:52:02Z",
        "merged_at": "2020-07-04T20:52:02Z",
        "body": "Problem:\r\n\r\nIn the original example, `AuthButton` component always shows `<p>You are not logged in.</p>` regardless of auth state.\r\n\r\nSolution:\r\n\r\nAdd auth provider so all components are aware of auth state and rerender when auth state changes.\r\n\r\nBig thanks Gabe Ragland (https://usehooks.com/useAuth/) for `useAuth` hook example and awesome detailed article. \r\n\r\nCode sandbox with changes in this PR: https://codesandbox.io/s/react-router-redirects-auth-2u39q",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 19,
        "deletions": 7,
        "changed_files": 4,
        "created_at": "2020-07-01T01:55:19Z",
        "closed_at": "2020-07-01T14:21:19Z",
        "merged_at": null,
        "body": "I found that this component is not type checked in dev mode, but I don\u2019t know if it is necessary...\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 47,
        "deletions": 11,
        "changed_files": 2,
        "created_at": "2020-06-29T16:41:09Z",
        "closed_at": "2021-08-11T16:35:58Z",
        "merged_at": "2021-08-11T16:35:58Z",
        "body": "Fixes #7216 \r\nAdds test for correct link behaviour under basename",
        "comments": 22
    },
    {
        "merged": false,
        "additions": 14,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-06-26T21:13:52Z",
        "closed_at": "2020-06-28T13:48:58Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-06-25T13:15:01Z",
        "closed_at": "2020-06-25T14:41:28Z",
        "merged_at": "2020-06-25T14:41:28Z",
        "body": "refs #7414 \r\n\r\nI think there should be a prominent mention of the `end` prop and why you would use it, so I've added a note and code sample to the API Reference.\r\n\r\n(I hope my description is accurate, but maybe \"descendant paths\" is incorrect?)",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-06-25T08:31:22Z",
        "closed_at": "2020-06-25T21:40:38Z",
        "merged_at": "2020-06-25T21:40:38Z",
        "body": "On one of my projects I needed to access the match object in a component and after searching in react-router code I found that `useRouteMatch` had an undocumented behaviour which is that it returns the Route context match when it is provided with no argument (see [here in the code](https://github.com/ReactTraining/react-router/blob/master/packages/react-router/modules/hooks.js#L44)).\r\n\r\nThe purpose of this PR is to document this.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 177,
        "deletions": 19,
        "changed_files": 6,
        "created_at": "2020-06-23T16:52:30Z",
        "closed_at": "2020-08-30T11:26:52Z",
        "merged_at": null,
        "body": "I gave implementing the missing `useAndroidBackButton` hook a shot. Let me know if the approach of introducing a `useIndex` hook works for you. I am looking forward to your feedback!",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 15,
        "changed_files": 4,
        "created_at": "2020-06-21T18:22:08Z",
        "closed_at": "2020-06-22T01:34:35Z",
        "merged_at": null,
        "body": "jsx-a11y/anchor-has-content is currently [disabled](https://github.com/ReactTraining/react-router/blob/84252237e86930a6c78edd7621a6dbd9516c1566/packages/react-router-dom/modules/Link.js#L62)\r\n\r\nThis PR enables jsx-a11y/anchor-has-content by requiring `<Link>` components to have content with `prop-types`.\r\n\r\nTypescript PR forthcoming.",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2020-06-21T13:47:59Z",
        "closed_at": "2020-06-22T01:30:34Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 7,
        "changed_files": 3,
        "created_at": "2020-06-17T11:31:53Z",
        "closed_at": "2020-06-17T15:18:22Z",
        "merged_at": "2020-06-17T15:18:22Z",
        "body": "minor changes to the Route.js and Router.js files",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2020-06-16T06:53:50Z",
        "closed_at": "2020-06-16T14:55:55Z",
        "merged_at": "2020-06-16T14:55:55Z",
        "body": "the test has passed the rollup packaging mechanism!",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2020-06-15T11:45:02Z",
        "closed_at": "2020-06-15T14:50:38Z",
        "merged_at": "2020-06-15T14:50:38Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 115,
        "deletions": 11,
        "changed_files": 2,
        "created_at": "2020-06-10T14:41:19Z",
        "closed_at": "2020-08-29T06:47:01Z",
        "merged_at": null,
        "body": "According to the migration guide here: https://github.com/ReactTraining/react-router/blob/dev/docs/advanced-guides/migrating-5-to-6.md#rename-link-component-to-link-as the `<Link>` component has moved `component` to `as` but neither prop seemed to be implemented in the current release.\r\n\r\nI've taken a quick stab at adding back the functionality with some tests.\r\n\r\nThanks for everybody's your work on `v6` it's looking great!\r\n\r\n\u2764\ufe0f  \r\n\r\n@mjackson @ryanflorence",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2020-06-08T12:52:04Z",
        "closed_at": "2020-06-08T17:18:26Z",
        "merged_at": "2020-06-08T17:18:26Z",
        "body": "This PR fixes a bug with the testing documentation.\r\nCurrently it states you can call the same 'let' and replace it inside the render callback. This is not valid javascript and will not assign anything to the top level let. Therefore you need to call it something else rather then the destructed name eg testLocation and testHistory.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 32,
        "deletions": 12,
        "changed_files": 1,
        "created_at": "2020-05-31T20:53:26Z",
        "closed_at": "2020-06-01T00:26:30Z",
        "merged_at": null,
        "body": "This PR add generic type for state to `useLocation` and `useResolvedLocation`. \r\n\r\nI use `Record<string, any> | null` instead of `object | null` as base state to avoid index type error.\r\n\r\n![image](https://user-images.githubusercontent.com/33362998/83362428-ca040f00-a356-11ea-90f2-c63f38e523f9.png)\r\n ",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2020-05-29T20:05:14Z",
        "closed_at": "2020-08-19T15:45:46Z",
        "merged_at": null,
        "body": "It seems that `index.d.ts` is not being generated because the build option is not enabled.\r\n\r\nref #7383 ",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 36,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2020-05-22T23:15:21Z",
        "closed_at": "2020-11-14T08:17:04Z",
        "merged_at": null,
        "body": "This is a feature request in the form of a PR because it was pretty easy. This adds support for using children as a render prop in `NavLink`. The render function takes `isActive` as an argument, so it can be used for props passed to child components. This will be useful when using a component library that uses props to dictate styling.\r\n\r\n```jsx\r\n<NavLink to=\"/events/\">\r\n  {isActive => <Text color={isActive ? \"red\" : \"blue\"}>Link</Text>}\r\n</NavLink>\r\n```\r\n\r\nThis is a non-breaking API change. Docs and tests are included. Let me know what you think.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-05-20T06:21:54Z",
        "closed_at": "2020-05-20T15:39:51Z",
        "merged_at": null,
        "body": "There can be situations where you have a \"+\" character in URLs, for example: galaxy-s10+.\r\n\r\nReplacing \"+\" with \" \" can break both frontend and backend logic, user needing to adapt workarounds. \r\nIn my case, I had to make the reverse change in project code (\" \" => \"+\").",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 58,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2020-05-19T07:51:21Z",
        "closed_at": "2020-05-19T20:05:35Z",
        "merged_at": null,
        "body": "Added documentation for `CustomLinks` with example using new `useMatch` hook. Tried to keep it as simple as possible and using only one interface for `CustomLink` props. ",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2020-05-16T21:06:27Z",
        "closed_at": "2020-10-31T03:21:54Z",
        "merged_at": null,
        "body": "This change is backwards compatible, meaning `useParams()` without any type arguments returns the same `Record<string,string>` type as of now.\r\n\r\nHowever you are now able to provide the names of your parameters as a string literal. I.e. the following compiles successfully and gives intellisense when destructuring the returned object from `useParams`\r\n\r\n```jsx\r\nconst { id, name } = useParams<\"id\"|\"name\">()\r\n```\r\n`id` and `name` have both the type `string`.\r\n\r\nThe following produces a typescript compile error as the name in the type argument and the destructured value are not exactly the same:\r\n```jsx\r\nconst { misspelldParam } = useParams<\"misspelledParam\">()\r\n```",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 115,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2020-05-16T14:31:02Z",
        "closed_at": "2020-08-27T00:04:18Z",
        "merged_at": null,
        "body": "Includes a brief explanation of code splitting, links to the React docs for React.lazy, and a complete example including suspending child routes.\r\n\r\nDoes not include references to experimental React features, like `useTransition`, since those features aren't available generally. ",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2020-05-14T12:35:25Z",
        "closed_at": "2020-05-14T16:53:43Z",
        "merged_at": null,
        "body": "It seems that `history.Location` itself need to be improved too.\r\n\r\n```typescript\r\n// No\r\ntype State = object | null;\r\n\r\ninterface Location<S extends State = State> {\r\n  state: S;\r\n}\r\n\r\n// Yes\r\ninterface Location<S extends object = object> {\r\n  state: S | null;\r\n}\r\n```",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 142,
        "deletions": 74,
        "changed_files": 4,
        "created_at": "2020-05-14T08:01:07Z",
        "closed_at": "2020-08-27T00:04:18Z",
        "merged_at": null,
        "body": "THis PR correctly sets up the eslinter for react-router typescript files",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2020-05-14T05:29:29Z",
        "closed_at": "2020-05-14T16:51:22Z",
        "merged_at": "2020-05-14T16:51:22Z",
        "body": "By providing a fallback value (here string), the type of that parameter will already be cast to string, so its unnecessary.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2020-05-13T22:03:54Z",
        "closed_at": "2021-12-09T19:38:04Z",
        "merged_at": null,
        "body": "This correctly infers the types for stablesort",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 60,
        "deletions": 60,
        "changed_files": 1,
        "created_at": "2020-05-13T22:01:41Z",
        "closed_at": "2020-08-27T00:04:20Z",
        "merged_at": null,
        "body": "This PR changes the variable definition to be const, if they are not changed. This reduces the possible errors by preventing unintended changes .",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2020-05-13T20:29:30Z",
        "closed_at": "2020-05-15T17:31:23Z",
        "merged_at": "2020-05-15T17:31:23Z",
        "body": "This PR adds the usage of the ts type record to make the types more concise.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-05-13T20:17:49Z",
        "closed_at": "2020-05-14T17:01:24Z",
        "merged_at": "2020-05-14T17:01:24Z",
        "body": "This PR adds a generic to readOnly to return the passed in object type.",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 53,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2020-05-13T13:03:02Z",
        "closed_at": "2020-10-26T04:36:08Z",
        "merged_at": null,
        "body": "Not sure if additions to the docs are already wanted, but I created a file for the usage of `Suspense` within RR v6.",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2020-05-10T11:11:34Z",
        "closed_at": "2020-05-11T00:52:58Z",
        "merged_at": null,
        "body": "",
        "comments": 21
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-05-09T10:07:53Z",
        "closed_at": "2020-05-11T01:03:24Z",
        "merged_at": "2020-05-11T01:03:24Z",
        "body": "### Arguments\r\nThe `useSearchParams` hook actually takes an *optional* argument, according to how it interacts with `createSearchParams`.\r\n\r\n### Return type\r\nThe original declaration indicated that the return type is `(URLSearchParams | ((nextInit: any, navigateOpts: any) => void))[]`, meaning array whose every elements can be either `URLSearchParams` or a function, which is obviously not correct.\r\n\r\n### Additionally\r\nI strongly suggest a `NavigateOption` interface with generic `State`.",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 18,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-05-09T00:47:36Z",
        "closed_at": "2020-05-09T05:23:43Z",
        "merged_at": "2020-05-09T05:23:42Z",
        "body": "Fixes #7313 ",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 39,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2020-05-07T18:30:08Z",
        "closed_at": "2020-08-27T00:04:20Z",
        "merged_at": null,
        "body": "As per my conversation with @mjackson I am adding in code examples for Static Paths. \r\nTODO: \r\nNeed to add in tutorial description to go along with code example.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-05-06T22:21:30Z",
        "closed_at": "2020-05-07T00:08:31Z",
        "merged_at": "2020-05-07T00:08:31Z",
        "body": "There's two different signatures.\r\nOptions cannot be provided when using a delta number.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2020-05-02T15:07:29Z",
        "closed_at": "2020-05-02T20:16:49Z",
        "merged_at": "2020-05-02T20:16:49Z",
        "body": "https://twitter.com/garand/status/1256333598338150401",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 502,
        "deletions": 127,
        "changed_files": 30,
        "created_at": "2020-04-30T18:49:04Z",
        "closed_at": "2021-12-09T19:36:29Z",
        "merged_at": null,
        "body": "Maybe someone can tell me how I can create a branch from a commit without copying all the commits from the contributors before it. Or this okay this way?",
        "comments": 28
    },
    {
        "merged": false,
        "additions": 2494,
        "deletions": 2133,
        "changed_files": 18,
        "created_at": "2020-04-29T01:14:56Z",
        "closed_at": "2020-05-05T18:29:26Z",
        "merged_at": null,
        "body": "**DO NOT MERGE YET**\r\n\r\nThis PR converts the main codebase to TypeScript and adds support for building + testing. I'm fairly new to TypeScript, so I'd appreciate any feedback from more those more experienced with it to help me know where it can be improved (as I'm sure it can!) before merging.",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-04-28T15:37:57Z",
        "closed_at": "2020-04-28T19:27:12Z",
        "merged_at": "2020-04-28T19:27:12Z",
        "body": "Update to latest version, as it doesn't depend anymore on the `gud` package, a package that has a problematic license file (missing copyright).\r\nThe API seems to be the same, so there shouldn't be any issues with this update.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 71,
        "deletions": 0,
        "changed_files": 4,
        "created_at": "2020-04-28T04:58:28Z",
        "closed_at": "2020-04-28T15:25:21Z",
        "merged_at": null,
        "body": "Hash control is a common use case with location.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-04-26T06:45:35Z",
        "closed_at": "2020-04-26T17:27:27Z",
        "merged_at": "2020-04-26T17:27:27Z",
        "body": "Issue #7283",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 52,
        "deletions": 1296,
        "changed_files": 8,
        "created_at": "2020-04-24T08:07:51Z",
        "closed_at": "2020-04-24T12:53:54Z",
        "merged_at": null,
        "body": "Update path-to-regexp to 6.1.0 and use its 'match' api for matching URL pathname, and at the same time, get the params and query transformed from location search.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2020-04-23T03:23:12Z",
        "closed_at": "2020-04-23T14:27:27Z",
        "merged_at": "2020-04-23T14:27:27Z",
        "body": "Just spent a long time trying to solve a problem which this change would've helped me solve faster.\r\n\r\nAnother reason: The [@DefinitelyTyped type def for Prompt.message is wrong](https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/react-router/index.d.ts#L51) and I'm opening a PR there to fix it too. Would love an `react-router` maintainer to give a \ud83d\udc4d over here to fix the type def too!\r\nhttps://github.com/DefinitelyTyped/DefinitelyTyped/pull/44133",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2020-04-21T22:19:03Z",
        "closed_at": "2020-04-22T00:08:08Z",
        "merged_at": "2020-04-22T00:08:08Z",
        "body": "Updated the docs of BroswerRouter to change the example code of basename case in which BroswerRouter for self-closing so as per the issue #7197 it should be defined with a closing tag.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-04-21T20:11:18Z",
        "closed_at": "2020-04-22T00:15:47Z",
        "merged_at": "2020-04-22T00:15:47Z",
        "body": "The `Link` component in `react-router-native` always throws a warning regarding the type of its `component` prop when it is not explicitly passed a function. This is because by default `component` is set to `TouchableOpacity`, which always fails the propType test in development mode since `component: PropTypes.func`. Changing the type test to  `component: PropTypes.oneOfType([PropTypes.func, PropTypes.instanceOf(React.Component)])` preserves the intended behavior and doesn't throw a warning by default.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 23291,
        "deletions": 31433,
        "changed_files": 445,
        "created_at": "2020-04-21T14:54:43Z",
        "closed_at": "2020-04-21T15:56:40Z",
        "merged_at": null,
        "body": "**i wanna to try this**",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-04-20T20:30:16Z",
        "closed_at": "2020-04-21T13:05:23Z",
        "merged_at": "2020-04-21T13:05:23Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2015,
        "deletions": 0,
        "changed_files": 22,
        "created_at": "2020-04-20T00:06:20Z",
        "closed_at": "2020-04-20T01:53:18Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2936,
        "deletions": 2296,
        "changed_files": 19,
        "created_at": "2020-04-19T16:25:23Z",
        "closed_at": "2020-05-10T08:07:23Z",
        "merged_at": null,
        "body": "This pr turns on the strict type checking.\r\n\r\n- [x] turn on strict type checking\r\n- [x] add types for react-router\r\n- [x] add types for react-router-dom\r\n- [ ] add types for react-router-native (help needed)\r\n- [ ] .d.ts generation\r\n- [ ] use `react/experimental` types\r\n- [ ] fix unit test\r\n- [ ] rewrite unit test in ts\r\n- [ ] add generics for `History<S>`\r\n- [ ] api-extractor support \r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2020-04-14T08:16:19Z",
        "closed_at": "2020-04-14T13:37:53Z",
        "merged_at": "2020-04-14T13:37:53Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 15,
        "deletions": 15,
        "changed_files": 14,
        "created_at": "2020-04-14T08:11:48Z",
        "closed_at": "2020-04-14T13:36:11Z",
        "merged_at": "2020-04-14T13:36:11Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 65,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2020-04-10T17:50:46Z",
        "closed_at": "2020-04-12T16:47:32Z",
        "merged_at": "2020-04-12T16:47:32Z",
        "body": "Seems to me like this was probably just left out as an oversight and not for a specific reason.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-04-09T15:33:56Z",
        "closed_at": "2020-04-09T17:34:58Z",
        "merged_at": null,
        "body": "This had me searching around a bit more than I wanted, so I thought this might help others in future.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2020-04-06T15:22:18Z",
        "closed_at": "2020-05-05T19:52:13Z",
        "merged_at": "2020-05-05T19:52:13Z",
        "body": "Fixes #7237\r\n\r\nAn empty string falls through the `||`, so this makes our check more explicit around `undefined/null`.\r\n\r\n(I know I have no tests. I'm using the web editor...)",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2020-04-02T11:41:16Z",
        "closed_at": "2020-04-02T14:56:45Z",
        "merged_at": "2020-04-02T14:56:45Z",
        "body": "Wasn't sure about the \"properties\" link so I just pointed it to the main docs page. Alternatively, it could point to [\"Misc\"](https://github.com/ReactTraining/history/blob/master/docs/Misc.md)?",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2020-03-28T02:38:09Z",
        "closed_at": "2020-05-01T13:13:05Z",
        "merged_at": null,
        "body": "This hook exposes the `useTransition`'s `pending` state.\r\n\r\nPending will be true only while a navigation is suspended (concurrent mode).\r\n\r\nIt's useful for implementing slim progress bars (like YouTube or GitHub) and other global loading indicators.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 44,
        "deletions": 18,
        "changed_files": 1,
        "created_at": "2020-03-27T16:51:00Z",
        "closed_at": "2020-06-08T23:21:23Z",
        "merged_at": null,
        "body": "It's hard to manage and understand use so many nested Ternary Conditional Operator.\r\n\r\nSo I refactor it to a more cleaner logic branch version.",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 32,
        "deletions": 14,
        "changed_files": 1,
        "created_at": "2020-03-24T03:24:06Z",
        "closed_at": "2020-08-27T00:04:22Z",
        "merged_at": null,
        "body": "A common issue of React context is to use object literals in context values, where on render the reference will change and cause a rerender.\r\nhttps://reactjs.org/docs/context.html#caveats\r\n\r\nThe fix provided here is to memo the context values.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2020-03-20T22:02:42Z",
        "closed_at": "2020-03-21T16:42:52Z",
        "merged_at": "2020-03-21T16:42:52Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 137,
        "deletions": 102,
        "changed_files": 4,
        "created_at": "2020-03-20T10:06:52Z",
        "closed_at": "2020-04-04T00:29:46Z",
        "merged_at": null,
        "body": "- makes navigate called in effects\r\n- fix unit tests\r\n\r\nThe issue was found when router tries to do initial redirect navigation when rendering, but it in fact resulting in a synchronous `setState` somewhere. Put the call in effect fix this issue.\r\n![image](https://user-images.githubusercontent.com/584378/77153801-68613200-6ad5-11ea-8a11-b59de272e4ff.png)\r\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 313,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2020-03-18T14:27:40Z",
        "closed_at": "2020-04-29T05:54:43Z",
        "merged_at": null,
        "body": "### Why?\r\nI can't really use react-router@6 in my typescript project cuz there's no typescript definition for it.\r\n\r\n### Why not DefinitelyTyped?\r\nI saw in #6885 that typescript definition is on the roadmap.",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 14,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2020-03-16T06:21:59Z",
        "closed_at": "2020-08-27T00:04:22Z",
        "merged_at": null,
        "body": "If a component has been unmounted and its history changes its location (for example, with `push`), it causes the following warning.\r\n\r\n`Warning: Can't perform a React state update on an unmounted component. This is a no-op, but it indicates a memory leak in your application. To fix, cancel all subscriptions and asynchronous tasks in a useEffect cleanup function.`\r\n\r\nSo, this fix will unlisten the history object on unmounted.",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-03-13T15:23:39Z",
        "closed_at": "2020-03-13T17:41:44Z",
        "merged_at": "2020-03-13T17:41:44Z",
        "body": "Since the addition of `useRouteMatch`, there\u2019s a new way to access a _match_ object \ud83d\ude04 ",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-03-04T19:46:48Z",
        "closed_at": "2020-03-09T15:58:55Z",
        "merged_at": "2020-03-09T15:58:55Z",
        "body": "This is just the remaining tweaks for #7168, without the erroneous `prop-types` fix.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 7,
        "changed_files": 2,
        "created_at": "2020-03-03T19:10:46Z",
        "closed_at": "2020-03-04T16:05:09Z",
        "merged_at": "2020-03-04T16:05:09Z",
        "body": "We have several (in the hundreds) of apps still using `react-router` v3 and have recently run into issues related to `withRouter` hoisting statics that it shouldn't. We have our own internal solution and are not blocked but I wanted to make this PR in case anybody else has these issues. \r\n\r\nMy solution here is to upgrade `hoist-non-react-statics` and `react-is`. Thanks much!",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2020-03-02T17:42:50Z",
        "closed_at": "2020-03-02T19:17:45Z",
        "merged_at": "2020-03-02T19:17:45Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-03-02T14:40:07Z",
        "closed_at": "2020-03-02T16:34:33Z",
        "merged_at": "2020-03-02T16:34:33Z",
        "body": "Update link to migration guide from 4.x, 5.x to 6.x.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-02-26T21:46:51Z",
        "closed_at": "2020-02-27T05:29:32Z",
        "merged_at": "2020-02-27T05:29:32Z",
        "body": "Documented the existence of the `component` prop and gave an example illustrating how to use it. closes #7171 ",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-02-26T08:45:14Z",
        "closed_at": "2020-03-03T19:58:08Z",
        "merged_at": "2020-03-03T19:58:08Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 159,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2020-02-26T01:04:29Z",
        "closed_at": "2020-11-14T23:31:49Z",
        "merged_at": null,
        "body": "- [x] Intro\r\n- [x] Basic Test\r\n- [x] Links and Navigation\r\n- [ ] Routes and Redirects",
        "comments": 24
    },
    {
        "merged": false,
        "additions": 24,
        "deletions": 5,
        "changed_files": 3,
        "created_at": "2020-02-25T16:02:01Z",
        "closed_at": "2020-03-04T19:47:09Z",
        "merged_at": null,
        "body": "This enables a couple optimizations that reduce the size of react-router-dom by 30%.\r\n\r\nI know there was some stuff for prop-types currently in the rollup configurations, but it actually was preserving the side-effecting prop-types import, as you can see here:\r\nhttps://unpkg.com/browse/react-router-dom@6.0.0-alpha.2/react-router-dom.production.min.js",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 12,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2020-02-24T18:43:50Z",
        "closed_at": "2020-05-02T05:41:15Z",
        "merged_at": null,
        "body": "## Index\r\n\r\nAdded the index so that abstractions like meta tags/titles and breadcrumbs in the UI can more easily construct a route data representation that mirrors the match branch.\r\n\r\n```jsx\r\n[parentMatch, childMatch, grandChildMatch]\r\n\r\n// you'd want data to look like this:\r\n[parentData, childData, grandChildData]\r\n\r\n// So that you can build something like this:\r\n<ul className=\"bread-crumbs\">\r\n  {routesData.map(data => <li>{data.breadcrumbLabel}</li>)}\r\n<ul>\r\n```\r\n\r\nIn an async world with preloading it seems a bit tricky to derive that, since we know it, and since layout nesting/hierarchy is one of the core features of react router, I think it makes sense to tell preloaders which level of the layout hierarchy they are on.\r\n\r\n## Preloading already matched routes\r\n\r\nThis calls preload on all matched routes even if the route matched at both locations (parent persists, child routes are changing).\r\n\r\nWe could check if the params or location.search changed and then only call preload in that case, but I think it's probably better to just call it every time the way a normal browser navigation would work. It's up to the app's caching strategy to decide if that preload actually results in fetching data.\r\n\r\nFor example:\r\n\r\n```js\r\nlet route = {\r\n  // ...\r\n  preload: (params) => fetchWithCache(`/api/users/${params.userId}`)\r\n}\r\n\r\n/////////////\r\nlet cache = {}\r\nfunction fetchWithCache(url) {\r\n  if (cache[url]) return\r\n  fetch(`/api/${params.one}/${params.two}`)\r\n}\r\n```\r\n\r\nApp caches can make their own decision to actually preload, and there are certainly cases where you'd want your data to work the way browsers already work: clicking a link reloads the data on a page, even if some of the components on the page are still there.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 43,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-02-24T01:11:28Z",
        "closed_at": "2020-02-24T17:06:30Z",
        "merged_at": "2020-02-24T17:06:30Z",
        "body": "See #7159",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 271,
        "deletions": 13,
        "changed_files": 1,
        "created_at": "2020-02-20T20:28:53Z",
        "closed_at": "2020-02-22T00:29:05Z",
        "merged_at": "2020-02-22T00:29:05Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 85,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2020-02-17T21:29:00Z",
        "closed_at": "2020-03-06T16:58:59Z",
        "merged_at": null,
        "body": "First attempt at docs describing how to test routes with `react-testing-library`\r\n\r\nStill very much a work in progress -- any feedback or advice is greatly appreciated",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 387,
        "deletions": 57,
        "changed_files": 14,
        "created_at": "2020-02-17T14:56:56Z",
        "closed_at": "2020-04-29T05:50:07Z",
        "merged_at": null,
        "body": "This is an attempt to add TypeScript support,\r\nso that types are exported and can be used by\r\nprojects to get type definitions.\r\n\r\nOnly the source itself is converted to Typescript,\r\nno tests are configuration files (as that seems to\r\nbe unnecessary just for the goal of getting type\r\ndefinitions)\r\n\r\nThis adds some lines to the build script to generate\r\ntype definitions (after building the actual library).\r\nFor rollup, the typescript preset is used with babel so\r\nthat the types are simply removed during that stage.\r\n\r\nTo run tests, jest should not pick up the index.tsx files,\r\nas it should only look in the build directory for modules,\r\nbut somehow it does. Attempts to add the .tsx files to a\r\nvariety of ignore patterns were unsuccesful so far.\r\n\r\nTo be resolved:\r\n- [ ] remaining type errors on the index.tsx source\r\n- [ ] jest config to ignore tsx\r\n\r\nSolves #6955",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-02-14T13:44:47Z",
        "closed_at": "2020-02-14T21:07:37Z",
        "merged_at": "2020-02-14T21:07:37Z",
        "body": "Stringify argument of `navigate` because\r\n`history.go` is called if the argument is a number.\r\n\r\n<https://github.com/ReactTraining/react-router/blob/92502f2f6769dbf5ce4c7b154b1f6e1d27af6d07/packages/react-router/index.js#L398-L399>\r\n\r\nDemo: <https://stackblitz.com/edit/react-router-fix-migrating-5-to-6-code-example>",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 158,
        "deletions": 0,
        "changed_files": 4,
        "created_at": "2020-02-11T21:07:14Z",
        "closed_at": "2021-09-04T19:50:39Z",
        "merged_at": null,
        "body": "- [x] test\r\n- [ ] doc + example\r\n\r\n# About API:\r\n## Old API:\r\nIn the old API `<Route />` became `useRouteMatch`\r\n\r\nhoc API:\r\n```js\r\n<Route\r\n      path=\"/blog/:slug\"\r\n      render={({ match }) => {\r\n        // Do whatever you want with the match...\r\n        return <div />;\r\n      }}\r\n    />\r\n```\r\nold hook api:\r\n```js\r\n  let match = useRouteMatch(\"/blog/:slug\");\r\n```\r\nold api match shape:\r\n```\r\n{\r\n  path: string,\r\n  url: string,\r\n  isExact: boolean,\r\n  params: object\r\n}\r\n```\r\n## New API:\r\n\r\n`useRouteMatch(path)` will returns an object like provided value by `RouteContext` in this code:\r\n```js\r\n<Routes>\r\n  <Route path={path} element={null}/>\r\n</Routes>\r\n```\r\n- the `outlet` key removed because always is behave like a `null` value (context provider with null child)\r\n- the `route` key removed because always is equal to `{ path: path, element: null, children: null }`\r\n\r\nThe final shape of the returned object:\r\n```\r\n{\r\n  params: object { string: string }\r\n  pathname: string\r\n}\r\n```\r\n\r\n**Notes:**\r\n- maybe the hook name should be changed.\r\n- I need help for documentation part\r\n\r\nfixes #7133",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2020-02-06T04:33:53Z",
        "closed_at": "2020-05-01T13:27:01Z",
        "merged_at": null,
        "body": "There has been a discussion in https://github.com/ReactTraining/react-router/pull/7010 but for resources.\r\nThis is for location change.\r\nWould you consider adding such a hook?\r\n\r\nIf we are to implement it, it might be better to create a separate context `PendingContext`.\r\nOn second thought, it might be already planned with adding `preload`.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 22,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2020-02-04T21:42:05Z",
        "closed_at": "2020-02-05T00:59:18Z",
        "merged_at": "2020-02-05T00:59:18Z",
        "body": "This resolves #7124.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 10,
        "changed_files": 1,
        "created_at": "2020-02-04T21:39:22Z",
        "closed_at": "2020-04-16T17:26:36Z",
        "merged_at": null,
        "body": "A very small change to shorten the route matching logic code in `Route` component.\r\n\r\nIt makes the code a little easier to read, and shaves a full 21 bytes off the minified `react-router` build!\r\n\r\nPerformance:\r\n\r\n* Route does not match => performance the same.\r\n* Matching Route with a `children` prop which is a function => marginally faster.\r\n* Matching Route with element(s) as `children` => same.\r\n* Matching Route using `render` or `component` prop => marginally slower (one more `children ? ...` conditional on code path)\r\n\r\nSince using `children` is now the recommended usage, I think the marginal performance hit for `render` and `component` props is outweighed by the (also marginal) bytes saving.\r\n\r\nEither way, performance difference is *extremely* marginal, and more readable code is my main thrust here. I spent quite a while puzzling over the nested `?` conditionals before I understood it.\r\n\r\nIf you don't agree, or indeed just can't be bothered with such a minor change, that's totally understandable. Feel free to close - no problem.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 107,
        "deletions": 175,
        "changed_files": 5,
        "created_at": "2020-02-03T21:13:29Z",
        "closed_at": "2020-02-04T00:23:43Z",
        "merged_at": "2020-02-04T00:23:43Z",
        "body": "Updates filesize tracker and closure compiler plugins to latest version.",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-02-03T20:17:19Z",
        "closed_at": "2020-02-03T22:01:55Z",
        "merged_at": "2020-02-03T22:01:55Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 20,
        "deletions": 0,
        "changed_files": 4,
        "created_at": "2020-02-03T10:37:13Z",
        "closed_at": "2020-02-03T15:16:04Z",
        "merged_at": null,
        "body": "Hello :slightly_smiling_face: \r\n\r\nThis Pr simplifies code contributions by fully automating the dev setup with Gitpod(A free online VS Code like IDE). \r\n\r\nWith a single click, it allows anyone to have a ready to code workspace where:\r\n\r\n- `react-router` repo is already cloned.\r\n- dependencies are already installed.\r\n- build finished\r\n- webpackDevServer is /website directory running.\r\n\r\nSo that anyone interested in contributing can start coding straight away without wasting time on the setup.\r\n\r\nYou can give it a try on my fork of the repo via the link below:\r\n\r\nhttps://gitpod.io/#https://github.com/nisarhassan12/react-router\r\n\r\n![image](https://user-images.githubusercontent.com/46004116/73646292-f5be0380-469a-11ea-877f-315b34c1841d.png)\r\n\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2020-02-01T13:55:33Z",
        "closed_at": "2020-02-01T16:20:17Z",
        "merged_at": "2020-02-01T16:20:17Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2020-01-21T11:27:11Z",
        "closed_at": "2020-01-21T14:41:41Z",
        "merged_at": "2020-01-21T14:41:41Z",
        "body": "As suggested in [CRA Readme](https://github.com/facebook/create-react-app#quick-overview) and to avoid [warnings related](https://stackoverflow.com/questions/59188624/template-not-provided-using-create-react-app)",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 40,
        "deletions": 18,
        "changed_files": 8,
        "created_at": "2020-01-20T18:51:12Z",
        "closed_at": "2020-05-08T16:03:18Z",
        "merged_at": "2020-05-08T16:03:18Z",
        "body": "Reference #6999 \r\n\r\nAs a suggestion from @MeiKatz . I added a new context for history object only to be used for useHistory hook and prevent the hooks from getting update triggerred by the original context.\r\n\r\nThe original context still has all the same properties without any change, the history object is also in the original context.\r\n\r\nTested with my project and it reduced rerendering greatly.",
        "comments": 13
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-01-08T15:58:27Z",
        "closed_at": "2020-01-08T18:18:33Z",
        "merged_at": null,
        "body": "Hi \ud83d\udc4b \r\n\r\nRef https://github.com/ReactTraining/react-router/issues/7096\r\n\r\nAs I mentioned in the issue, I've created this PR just in case, not sure if it helps.\r\n\r\nAll feedback is welcomed, of course! \ud83d\ude47 ",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-12-25T17:06:40Z",
        "closed_at": "2019-12-25T20:28:17Z",
        "merged_at": null,
        "body": "When `Link` is rendered outside `Router`, the following error is\r\nreported:\r\n\r\n  You should not use `<Link>` outside a `<Router>`",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 85,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-12-15T19:29:39Z",
        "closed_at": "2020-02-13T20:23:20Z",
        "merged_at": null,
        "body": "I found out that some functions of generatePath function are not documented clearly and its TypeScript definitions are not fully correct. So, I've opened this PR at DefinitelyTyped/DefinitelyTyped/pull/40901 to correct its types accordingly. However, I need to first confirm that these features are officially supported by the library. Therefore, I'm opening this pull request to make sure that usage of modifiers and array typed params are supported. I add some tests to cover such usage.\r\n\r\nThis PR covers some use cases of \"Optional\", \"Zero or more\", and \"One or more\" modifiers.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-12-09T23:33:50Z",
        "closed_at": "2019-12-10T16:14:14Z",
        "merged_at": "2019-12-10T16:14:14Z",
        "body": "wanted to clarify the behavior seen here: https://codesandbox.io/s/sleepy-hopper-bgntr",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-11-27T09:45:24Z",
        "closed_at": "2019-11-27T21:12:08Z",
        "merged_at": null,
        "body": "The given example is little bit misleading. So needs to be updated with the correct one.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-11-21T04:58:07Z",
        "closed_at": "2019-11-21T15:13:03Z",
        "merged_at": null,
        "body": "Repro: \r\n1. Navigate to https://reacttraining.com/react-router/web/guides/quick-start\r\n2. Scroll to bottom.\r\n3. Click \"the primary components\" link.\r\n\r\nOutcome:\r\nTaken to https://reacttraining.com/react-router/\r\n\r\nExpected outcome:\r\nTaken to https://reacttraining.com/react-router/web/guides/primary-components",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 184,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2019-11-16T16:11:24Z",
        "closed_at": "2019-11-16T19:19:15Z",
        "merged_at": null,
        "body": "Add example with a package I developed [react-tiger-transition](https://pedrobern.github.io/react-tiger-transition/).\r\n\r\nThis package uses react-router-dom and react-transition-group to create transitions, either whole page or single components.\r\n\r\nPreview:\r\n\r\n![third-party-animations](https://user-images.githubusercontent.com/39778068/68995939-2fd4f180-0872-11ea-899c-74f2ade32e8f.gif)\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-11-16T14:02:56Z",
        "closed_at": "2019-11-18T15:17:26Z",
        "merged_at": "2019-11-18T15:17:26Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-11-10T18:30:09Z",
        "closed_at": "2020-01-16T14:27:15Z",
        "merged_at": "2020-01-16T14:27:15Z",
        "body": "fix style bug that mentioned #7003.\r\nfor review you should first build be the website.( build fix #7025 )",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 850,
        "deletions": 125,
        "changed_files": 3,
        "created_at": "2019-11-09T18:08:35Z",
        "closed_at": "2019-11-18T04:18:07Z",
        "merged_at": "2019-11-18T04:18:07Z",
        "body": "I tried to buid a website but I faced various errors which was caused babel version so I fixed them and update them to latest version.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 10941,
        "deletions": 7,
        "changed_files": 26,
        "created_at": "2019-10-25T07:33:17Z",
        "closed_at": "2020-01-29T13:46:05Z",
        "merged_at": null,
        "body": "React Router + Suspense\r\n=======================\r\n\r\nIn order for React Router to support suspense we need a few pieces.\r\n\r\n## Convert classes to functions\r\n\r\nWe need to use the `useTransition` hook to allow suspense boundaries to actually suspend. While suspense will still work with our class components, they never suspend, they always go to the loading state.\r\n\r\nThis will be a breaking change for `<BrowserRouter/>` and friends, so we either do it in 6.0 or we ship two versions of everything (`Router`, `BrowserRouter`, `HashRouter`, etc.).\r\n\r\n## Update history to replace calls to push while suspended\r\n\r\nWe already know this. When a user clicks a link, then clicks another link before the resources are done loading, they'll end up with ghost entries in the history stack--meaning they can click \"back\" and see an unexpected page.\r\n\r\n# But we can do more!\r\n\r\nRather than just support it, we can actually help manage resources on route changes, and probably with a tiny API footprint.\r\n\r\n**NOTE**: I'm just going for an API design idea here, the implementation has many problems that we can solve with stuff we've been working on but haven't released yet, so don't worry about the implementation too much.\r\n\r\n## Provide a simple entry point to preload data for the route\r\n\r\nThe React team's experience with suspense has shown that using render to kick off fetches in the component that needs the data leads to too many waterfalls. While they had hoped people would preload in some top-level component, they didn't. It would be unfortunate if suspense actually caused longer load times because the API encouraged waterfall requests.\r\n\r\nThe vast majority of data fetches in an app are initiated on route changes, so we're in a great position to help developers out. In fact, I was able to implement a very quick proof-of-concept in a few minutes, check it out:\r\n\r\n### `<Route preload={(params, location) => resource} />`\r\n\r\nThis prop will be called on render whenever a route matches and mounts. It passes in the params and location and expects a resource of any shape to be returned. It's up to the app to determine the api for the resource, we just provide a way to kick of a preload of it.\r\n\r\nIt might look something like:\r\n\r\n```jsx\r\nconst resource = createResource(key)\r\n\r\n// Then if you try to read from it and it's not yet resolved,\r\n// it will throw the promise to trigger suspense\r\nresource.read()\r\n```\r\n\r\nSo we might have a route like this:\r\n\r\n```jsx\r\n<Route\r\n  path=\"/invoice/:invoiceId\"\r\n  preload={(params) => createInvoiceResource(params.invoiceId)}\r\n>\r\n  <Invoice />\r\n</Route>\r\n```\r\n\r\n### `useResource()`\r\n\r\nThis hook is used inside a component to get access to the resource returned in the `<Route preload/>` prop. It will find the nearest resource and return it. Route components can use this hook to read data from the resource. Continuing with the invoice example:\r\n\r\n```jsx\r\nimport { useResource } from 'react-router-dom'\r\n\r\nfunction Invoice() {\r\n  const invoice = useResource().read()\r\n  // returns the invoice if resolved, triggers suspense if not\r\n  // ...\r\n}\r\n```\r\n\r\n### `useResourcesPending()`\r\n\r\nThis indicates that resources are being loaded. While suspense has a timeout before falling back or transitioning to a partial page, sometimes you want to add loading indicators to the first page. The `useTransition` hook returns an `isPending` value. This simply gives route components access to it.\r\n\r\n\r\n```jsx\r\nconst isPending = useResourcesPending()\r\n```\r\n\r\n---\r\n\r\nThat's it! Check out the demo in /fixtures/suspense\r\n\r\n- code: https://github.com/ReactTraining/react-router/blob/a6923f1e25dc71e44fef1b7cb9babb483f7c55c3/fixtures/suspense/src/App.js)\r\n- live demo: https://suspense.ryanflorence.now.sh",
        "comments": 24
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-10-24T18:27:40Z",
        "closed_at": "2019-10-24T21:09:21Z",
        "merged_at": "2019-10-24T21:09:21Z",
        "body": "I found the [blog post introducing the react router hooks](https://reacttraining.com/blog/react-router-v5-1) to have a bit more [information on `useRouteMatch`](https://reacttraining.com/blog/react-router-v5-1/#useroutematch) than the [website's documentation](https://reacttraining.com/react-router/web/api/Hooks/useroutematch).\r\n\r\nI just added a little bit about how you can also pass in an object, not just a string and used the example from the blog post.\r\n\r\n\r\nI actually ran into an issue getting the website to run locally, so I couldn't exactly test it. I thought about raising a new issue, but it looks like #5830 was closed saying you don't support running the website.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-10-23T23:11:25Z",
        "closed_at": "2019-12-30T02:49:04Z",
        "merged_at": null,
        "body": "Saw this was a `#TODO` so I thought I'd fill it in. Not 100% sure if you're looking for a link to a markdown file instead though, as I've seen elsewhere in the docs.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 37,
        "deletions": 14,
        "changed_files": 2,
        "created_at": "2019-10-21T22:20:33Z",
        "closed_at": "2019-10-22T18:18:21Z",
        "merged_at": "2019-10-22T18:18:21Z",
        "body": "Instead of using `export * from \"react-router\"` in react-router-dom and react-router-native, this PR changes it so we export everything explicitly, which makes it easier for static code analysis tools to know which names are actually exported from that module.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 143,
        "deletions": 15,
        "changed_files": 3,
        "created_at": "2019-10-13T21:20:03Z",
        "closed_at": "2020-02-26T22:05:36Z",
        "merged_at": null,
        "body": "`wrappedComponentRef` still works\r\n\r\nfixes #6056 \r\n\r\nsame fix from #6914 ",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 234,
        "deletions": 74,
        "changed_files": 6,
        "created_at": "2019-10-09T13:24:17Z",
        "closed_at": "2019-10-09T15:08:35Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2019-10-08T04:53:24Z",
        "closed_at": "2019-10-08T13:35:38Z",
        "merged_at": "2019-10-08T13:35:38Z",
        "body": "## Issue\r\n\r\nThe import statement from the docs example is incorrect.\r\n\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1045,
        "deletions": 774,
        "changed_files": 49,
        "created_at": "2019-10-07T23:40:41Z",
        "closed_at": "2019-10-08T21:59:30Z",
        "merged_at": "2019-10-08T21:59:30Z",
        "body": "Updated the docs with a focus on a few things:\r\n\r\n- Remove duplicate docs (nesting, ambiguous matches) and simplify some examples (modal, redirect)\r\n- Update guides to be hooks-first\r\n- Use `<Route children>` + hooks instead of `<Route component>` or `<Route render>`\r\n- `import` from `react-router-dom` everywhere, not `react-router`\r\n- Use `<Switch>` when only one `<Route>` is supposed to be rendered\r\n- Remove all floating `<Route>`s and `<Route>` with no `path`",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2019-10-05T12:09:33Z",
        "closed_at": "2019-10-05T13:39:35Z",
        "merged_at": null,
        "body": "Was reading through docs again for a quick recap before starting to use hooks and I think the quick start is meant to look like this now?\r\n\r\nAs `App()` is written as follows:\r\n\r\n```jsx\r\n<Route path=\"/topics\">\r\n  <Topics />\r\n</Route>\r\n```",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 557,
        "deletions": 883,
        "changed_files": 23,
        "created_at": "2019-10-04T10:43:13Z",
        "closed_at": "2019-10-15T00:43:46Z",
        "merged_at": "2019-10-15T00:43:45Z",
        "body": "Work on top of:\r\nhttps://github.com/ReactTraining/react-router/pull/6922\r\n\r\nTests can be run through:\r\n```\r\n\"test\": \"jest --projects ./packages/*/\"\r\n```\r\nand everything maps to respective `modules` directories etc, so you don't have to build anything before running tests.\r\n\r\nThere is still a possibility to run `TEST_ENV=cjs npm test` but it requires to run build task first (as this setup maps to dist files, so we need to - well - build them \ud83d\ude09 )\r\n\r\nI think this work is complete now - if you find anything not working, let me know so I can fix it. If this is also something different from what you have imagined - then please specify what you find to be odd and let me know what would you like to have improved.\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-10-03T09:15:57Z",
        "closed_at": "2019-10-03T17:36:00Z",
        "merged_at": "2019-10-03T17:36:00Z",
        "body": "Fix a duplicated variable definition and missing one in a testing guide code example.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2019-10-03T02:54:23Z",
        "closed_at": "2019-10-03T17:37:23Z",
        "merged_at": "2019-10-03T17:37:23Z",
        "body": "The existing version detection was broken because `parseFloat('16.10.1')` results in `16.1`. Solution borrowed from https://github.com/reduxjs/react-redux/pull/1407\r\n\r\nWe still have several dozen apps using `react-router@3` and this fix would be useful for us. Thanks!",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-10-01T18:47:25Z",
        "closed_at": "2019-10-02T01:17:03Z",
        "merged_at": "2019-10-02T01:17:03Z",
        "body": "params.id comes back as string when you navigate",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 9,
        "changed_files": 1,
        "created_at": "2019-09-30T08:07:44Z",
        "closed_at": "2019-10-01T14:17:08Z",
        "merged_at": "2019-10-01T14:17:08Z",
        "body": "You need to use `component={xxx}` syntax, otherwise match will be `undefined`.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 35,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2019-09-29T15:28:48Z",
        "closed_at": "2019-10-01T05:43:06Z",
        "merged_at": null,
        "body": "In the API description on https://reacttraining.com/react-router/web/guides/quick-start/2nd-example-nested-routing there is this example where `<Topics />` gets passed the `match` prop from the `<Route />` component above. Currently this behaviour is only defined for `component` prop, but it should also work for components passed via `children` prop to a `<Route />`. Especially if we want to drop `render` and `component` props in an upcoming major release of RR. This PR fixes this.\r\n\r\nBtw: we should think about a better way than the massive use of ternary operators in this case. It's not only ugly but also a mess to read. ",
        "comments": 12
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2019-09-29T09:53:26Z",
        "closed_at": "2019-09-29T14:28:47Z",
        "merged_at": "2019-09-29T14:28:47Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 18,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2019-09-27T03:35:37Z",
        "closed_at": "2019-09-27T20:09:45Z",
        "merged_at": "2019-09-27T20:09:44Z",
        "body": "fixes https://github.com/ReactTraining/react-router/issues/6941\r\nrelated https://github.com/ReactTraining/react-router/pull/6715",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 23,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2019-09-26T22:39:46Z",
        "closed_at": "2019-09-27T20:09:13Z",
        "merged_at": "2019-09-27T20:09:13Z",
        "body": "fixed by returning empty object if route not mounted\r\n\r\nCloses #6938",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-09-26T08:39:00Z",
        "closed_at": "2019-09-26T13:27:48Z",
        "merged_at": null,
        "body": "Hi,\r\n\r\nI use this feature in my current project. Seems we need to update the doc about this feature.\r\n\r\n# Detail\r\nhttps://github.com/ReactTraining/react-router/issues/6824\r\n\r\nBest,\r\nAlpha",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 79,
        "deletions": 17,
        "changed_files": 5,
        "created_at": "2019-09-24T15:01:38Z",
        "closed_at": "2019-09-24T19:14:00Z",
        "merged_at": null,
        "body": "Adds useRouter hook. \r\nI think it useful as a hook alternative to withRouter.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 469,
        "deletions": 915,
        "changed_files": 24,
        "created_at": "2019-09-18T21:55:36Z",
        "closed_at": "2019-10-15T00:43:47Z",
        "merged_at": "2019-10-15T00:43:47Z",
        "body": "> This is a WIP\r\n\r\nCloses #6921 \r\n\r\n# Summary\r\nThis is a first rough cut to show the general idea. There are a few ways you could achieve this with the Babel setup + Lerna commands. \r\n\r\nHere, we're opting for a single `babel.config.js` file at the repo root, as suggested in the Babel Docs. The one caveat to this is that the React Native sub-package has it's own setup ~~, and so it uses the `babelrcRoots` config with its own `.babelrc.js` config~~. \r\n\r\n\r\nTo run the tests, simply run at the repo root:\r\n\r\n```sh\r\nyarn test\r\n```\r\n\r\nTo run the full test suite, or \r\n\r\n```sh\r\nyarn test react-router-config\r\n```\r\n\r\nto run a limited set of tests. \r\n\r\n## What's included\r\n\r\n1. Lifts the Babel config to the monorepo root\r\n1. Lifts the Jest config to the monorepo root\r\n\r\n## Notes\r\n\r\n1. All tests pass, with the exception of (some of) the React Native tests. I'm not familiar enough with RN setups to easily figure this out. Will have another stab at it, but any thoughts/hints would be helpful. ",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-09-14T16:23:04Z",
        "closed_at": "2019-09-14T22:46:47Z",
        "merged_at": "2019-09-14T22:46:47Z",
        "body": "Incorrect usage \"its\"; \"it's\" is correct here, a contraction for \"it is\"",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 20,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-09-13T18:28:02Z",
        "closed_at": "2019-09-13T21:10:08Z",
        "merged_at": "2019-09-13T21:10:08Z",
        "body": "I spent a while wondering why my `<Redirect>` was not behaving as expected as can be seen [here](https://github.com/ReactTraining/react-router/issues/6911).\r\n\r\nThis simple clarification would have saved me from the misunderstanding.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 208,
        "deletions": 102,
        "changed_files": 4,
        "created_at": "2019-09-13T16:04:37Z",
        "closed_at": "2019-09-13T18:50:40Z",
        "merged_at": "2019-09-13T18:50:40Z",
        "body": "This allows components like @reach/menu-button to manage focus or do anything else they need to with the underlying DOM element.\r\n\r\nThis prefers the forwarded ref, but `innerRef` will still work too.\r\n\r\nRelated: reach/reach-ui#54",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 19,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2019-09-11T16:32:10Z",
        "closed_at": "2019-09-11T19:34:11Z",
        "merged_at": "2019-09-11T19:34:11Z",
        "body": "and I just added `getDerivedStateFromProps` to `react-router-config/README.md`, based on this [blog post at reactjs.org](https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#fetching-external-data-when-props-change) \ud83d\ude09",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-09-10T22:22:39Z",
        "closed_at": "2019-09-11T00:42:49Z",
        "merged_at": "2019-09-11T00:42:49Z",
        "body": "Noticed this when I copied and pasted the location structure into REPL to test some code.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 96,
        "deletions": 101,
        "changed_files": 1,
        "created_at": "2019-09-10T20:50:15Z",
        "closed_at": "2019-09-19T17:12:48Z",
        "merged_at": "2019-09-19T17:12:48Z",
        "body": "The creation of a custom navigation-specific testing harness seems a bit too purpose-built for most people. Change to an integration test that leverage JSDOM's browser globals to use BrowserRouter directly.\r\n\r\ncc @kentcdodds for \ud83d\udc40 ",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-09-04T09:28:42Z",
        "closed_at": "2019-09-04T12:31:42Z",
        "merged_at": null,
        "body": "With `match.path`, the path will be `some-path//:id`. Fix to correct property `match.url`",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-08-28T12:54:26Z",
        "closed_at": "2019-08-28T13:57:46Z",
        "merged_at": "2019-08-28T13:57:46Z",
        "body": "I think there is a typo in the docs. I was getting a warning from react-dom before the below change.\r\nIt took me a while to figure out this was the issue.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 48,
        "deletions": 18,
        "changed_files": 4,
        "created_at": "2019-08-22T08:56:41Z",
        "closed_at": "2019-08-23T17:08:31Z",
        "merged_at": "2019-08-23T17:08:31Z",
        "body": "React 16.9 starts to warn whenever `componentWillMount `, `componentWillReceiveProps`, or `componentWillUpdate` are used without the `UNSAFE_` prefixes.\r\n\r\nThis PR aims to address this by dynamically appending the `UNSAFE_` prefixes based on React version.  The main motivation for doing this is so v3 does not break compatibility with consumers who are using React < 16.3 that don't support the prefixed lifecycled methods.  \r\n\r\nNote: I only updated the lifecycle methods for the exported modules, not the ones in the examples.",
        "comments": 11
    },
    {
        "merged": true,
        "additions": 17,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2019-08-05T20:13:57Z",
        "closed_at": "2019-09-10T22:56:21Z",
        "merged_at": "2019-09-10T22:56:21Z",
        "body": "This is a fix for (#6862). I also added a test so this issue doesn't happen again.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1108,
        "deletions": 174,
        "changed_files": 8,
        "created_at": "2019-08-05T01:01:31Z",
        "closed_at": "2019-08-05T15:45:18Z",
        "merged_at": null,
        "body": "this adds linting to react-router-native",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-08-04T22:22:33Z",
        "closed_at": "2019-08-05T15:45:15Z",
        "merged_at": null,
        "body": "this checks the linting that is found in the packages as part of Travis",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-08-04T18:16:21Z",
        "closed_at": "2019-08-04T19:20:04Z",
        "merged_at": "2019-08-04T19:20:04Z",
        "body": "This fixes issue #6854 because you were using es6 import to find the default export, but in renderToStringStrict.js you were still using the old export",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-08-02T16:01:43Z",
        "closed_at": "2019-08-02T20:58:37Z",
        "merged_at": "2019-08-02T20:58:37Z",
        "body": "See #6852",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 45,
        "deletions": 21,
        "changed_files": 4,
        "created_at": "2019-07-27T15:22:53Z",
        "closed_at": "2019-07-27T20:23:18Z",
        "merged_at": null,
        "body": "Hello everyone,\r\nI would like to offer support of an extra (third) parameter to the props function `isActive` of the component `<NavLink />`.\r\nCurrently the parameters available are\r\n\r\n- _match_\r\n- _context.location_ \r\n\r\nIn some projects I was working at, I found the extra need to access also the `to` props of `<NavLink />` within the method `isActive`\r\n\r\nDoes this make sense to you? Thanks a lot. Any feedback is welcome.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 6,
        "changed_files": 6,
        "created_at": "2019-07-25T02:42:24Z",
        "closed_at": "2019-07-25T13:47:50Z",
        "merged_at": "2019-07-25T13:47:50Z",
        "body": "Hi!\r\n\r\nThe correct link to the `React.Children.only` API doc is `https://facebook.github.io/react/docs/react-api.html#reactchildrenonly`, not `https://facebook.github.io/react/docs/react-api.html#react.children.only`. This PR fixes that.\r\n\r\nCheers!",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-07-22T20:16:27Z",
        "closed_at": "2019-07-23T14:07:10Z",
        "merged_at": "2019-07-23T14:07:10Z",
        "body": "There are two beneficial aspects to this proposed text change:\r\n\r\n1. Syntax\r\n2. Semantics\r\n\r\n### Syntax\r\n\r\nThe previous version of this text reads weird since the word \"to\" is used twice in short order.\r\n\r\n### Semantics\r\n\r\nThis updated version is easier to read and makes more sense semantically because it is changing the emphasis of the sentence. With the previous sentence structure, the **activity** of the link is being made predominant; this is redundant imo since the basic action of what a link does is implicit in the context. In other words, everyone knows what a link does - there is no reason to highlight this in the sentence structure. \r\n\r\nThe new sentence structure instead highlights the link **location** as the predominant object of this sentence rather than the **action** of the link. Highlighting the **location** rather than **action** of the sentence is more fitting given the context of what this method does (i.e. accepts a location to match).",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 63,
        "deletions": 15,
        "changed_files": 6,
        "created_at": "2019-07-10T04:24:10Z",
        "closed_at": "2019-07-10T19:14:09Z",
        "merged_at": "2019-07-10T19:14:09Z",
        "body": "Unless your idea of fun is mentally un-transpiling ES5 code into ES6 and JSX, you'll like this PR. It makes debugging easier by adding sourcemaps for the react-router, react-router-dom, and react-router-config packages.  The following build-time config changes are included: \r\n1. Add `sourceMaps: true` to babel config for each package \r\n2. Make a similar change to rollup `output` config, except it's called `sourcemap: true` here because, uh, diversity is good? ;-)\r\n3. Added the source files in the `modules` folder to the `files` whitelist in each package's package.json, so that the original source will be installed by npm or yarn so that the sourcemaps have original source to point to.\r\n4. Unlike the other module formats, UMD bundles all dependencies and therefore its sourcemaps include references to folders in `node_modules`. Unfortunately, the default paths to these folders are correct at build time but won't be correct when packages are installed on dev machines. This is a common problem, especially with monorepos. To fix, I added a one-line [`sourcemapPathTransform`](https://rollupjs.org/guide/en/#outputsourcemappathtransform) to rollup's output config (for UMD only). This transform replaces all variations of `node_modules` paths with a normalized path starting with `../../node_modules/` which is where these files are most likely to be installed by npm or yarn on a dev machine.\r\n\r\nNote that this PR doesn't touch the react-router-native package because I am not familiar enough with React Native to know how to add sourcemaps there.\r\n\r\nUsing this PR, `npm pack`, and one of my apps that uses react-router, I verified that sourcemaps are now working with the VSCode and chrome devtools debuggers.  \"Working\" means: (in case you want to verify it too)\r\n* Original source is installed in my app's `./node_modules/react-router*/modules` folders\r\n* I can step from my code into react-router code and the original source is highlighted, not the transpiled source\r\n* I can set a breakpoint on a line of original source in react-router or react-router-dom and the debugger will correctly break on that line when my app runs.\r\n\r\nBTW, this PR is analogous to https://github.com/bvaughn/react-window/pull/275 which I recently filed to add sourcemaps to Brian Vaughn's [react-window](https://github.com/bvaughn/react-window) library. That library also uses rollup and babel, so the changes needed to add sourcemaps there were similar to this PR.  Slowly but surely I'm gonna try to fix sourcemaps of all my most important dependencies! ;-)\r\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2019-07-03T16:05:01Z",
        "closed_at": "2019-07-03T17:34:33Z",
        "merged_at": "2019-07-03T17:34:33Z",
        "body": "* Added a hint to `Proposing New or Changed API?` section to consider the roadmap / ongoing work and a reminder to discuss the API changes in an issue before investing the work.\r\n\r\n* Updated the bug-ticket related info to better reflect reality (and lockbot).",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 479,
        "deletions": 16,
        "changed_files": 13,
        "created_at": "2019-06-27T11:56:54Z",
        "closed_at": "2019-07-03T15:47:33Z",
        "merged_at": null,
        "body": "This PR adds three functions to React Router, that work as \"described\" by Ryan Florence [in the blog](https://reacttraining.com/blog/reach-react-router-future/). While we are supporting React version before 16.8.0 ([the one with the hooks](https://reactjs.org/docs/hooks-intro.html)), we need a way to walk around the older versions. Everyone who wants to use the hooks in an earlier version of React will get an error message. Therefore an erroneous usage of the hook functions is impossible / fails.\r\n\r\n* `useRouter()`: returns the value of `<ReactRouter.Provider value />`\r\n* `useParams()`: returns the value of `context.match.params`\r\n* `useLocation()`: returns 1) the value of `context.location`, 2) a wrapper function (`navigate`) around `context.history.push` and `context.history.replace`. `navigate` takes two argument, where the 2nd one is optional. The 1st argument is a path, the 2nd argument could be either `{ replace: false }` (default value) or `{ replace: true }`. If `replace = true` then `history.replace` will be used, otherwise `history.push`.",
        "comments": 23
    },
    {
        "merged": true,
        "additions": 35,
        "deletions": 25,
        "changed_files": 5,
        "created_at": "2019-06-25T09:45:04Z",
        "closed_at": "2019-06-25T19:09:10Z",
        "merged_at": "2019-06-25T19:09:10Z",
        "body": "Currently `matchPath()` accepts a string as 2nd argument as shortcut for `{ path }`. Since path could also be an array, I recommend a shortcut for this too.\r\n\r\n```javascript\r\nmatchPath(\"/foobar\", [ \"/foobar\", \"/hello-world\" ])\r\n\r\n```",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 1138,
        "deletions": 172,
        "changed_files": 20,
        "created_at": "2019-06-24T12:18:08Z",
        "closed_at": "2021-12-09T19:32:30Z",
        "merged_at": null,
        "body": "Actually this is nearly the same push request as #6618, that I f**ked up while updating with the changes that occurred in the time in between. So it know also supports arrays for `path` in `<Route />`. Hopefully this is now merged and we don't have to wait for this feature until RR v6.",
        "comments": 15
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-06-24T11:43:48Z",
        "closed_at": "2019-06-24T22:46:13Z",
        "merged_at": "2019-06-24T22:46:13Z",
        "body": "In the example, use cases of `ScrollToTop` are presented with both a component with a children and a self-closing one. The component however did not handle the self-closing (childless) use case.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 94,
        "deletions": 19,
        "changed_files": 5,
        "created_at": "2019-06-24T06:49:53Z",
        "closed_at": "2019-06-25T13:44:59Z",
        "merged_at": "2019-06-25T13:44:59Z",
        "body": "## Issues\r\nhttps://github.com/ReactTraining/react-router/issues/6766\r\n\r\n## Why\r\nreact router v3 supports components as props with format `{ [name]: component }` according to [this](https://github.com/ReactTraining/react-router/blob/v3/docs/API.md#components-1). However, newer react component may also be an objects, so it would make react-router v3 broken.\r\n\r\n## How to fix\r\nUse `isValidElementType` is distinguish `{ [name]: component }` and react components for `React.memo`, `React.forwardRef`, `React.Fragment` and so on",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2019-06-16T11:52:06Z",
        "closed_at": "2019-06-16T21:43:39Z",
        "merged_at": "2019-06-16T21:43:39Z",
        "body": "Updated Route's component prop example to make it clear that the props object of the rendered component has access to all route props (match, location and history). Also updated Route's render prop description and example to make it clear that the render function has access to the route props and changed the respective example to name it routeProps instead of props, to avoid shadowing the parent component props object. This changes were proposed on the issue https://github.com/ReactTraining/react-router/issues/6786",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-06-15T10:11:08Z",
        "closed_at": "2019-06-15T17:33:41Z",
        "merged_at": "2019-06-15T17:33:41Z",
        "body": "See comments in #6787",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-06-01T11:34:24Z",
        "closed_at": "2019-06-02T00:12:56Z",
        "merged_at": "2019-06-02T00:12:56Z",
        "body": "While using the scroll restoration example I rewrote it using hooks and I thought it'd be useful to add it to the docs, as I'm sure others will want to as well and it'll save everyone time.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2019-05-31T10:47:14Z",
        "closed_at": "2019-05-31T13:28:36Z",
        "merged_at": "2019-05-31T13:28:36Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2019-05-28T20:32:42Z",
        "closed_at": "2019-05-29T13:47:59Z",
        "merged_at": "2019-05-29T13:47:59Z",
        "body": "As suggested from previous PR, any client exclusively using react-router-dom package via CommonJS modules will run into this problem:\r\n```\r\n    TypeError: Cannot assign to read only property '__esModule' of object '[object Object]'\r\n\r\n      at node_modules/react-router-dom/cjs/react-router-dom.js:288:64\r\n          at Array.forEach (<anonymous>)\r\n      at Object.<anonymous> (node_modules/react-router-dom/cjs/react-router-dom.js:288:26)\r\n      at Object.<anonymous> (node_modules/react-router-dom/index.js:6:20)\r\n```\r\n\r\nChanging rollup config to omit `Object.defineProperty(exports, '__esModule', { value: true });` will fix this, however my suggestion in https://github.com/ReactTraining/react-router/pull/6757 seems less heavy handed in that it doesn't break interop https://stackoverflow.com/a/55687758 \r\n\r\n ",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 68,
        "deletions": 145,
        "changed_files": 11,
        "created_at": "2019-05-22T21:24:15Z",
        "closed_at": "2019-09-17T23:44:19Z",
        "merged_at": null,
        "body": "Hopefully this gives people a better idea that this is not for them to use. Open to alternative ideas for the name.",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 22345,
        "deletions": 20544,
        "changed_files": 14,
        "created_at": "2019-05-11T12:37:43Z",
        "closed_at": "2019-05-11T22:31:32Z",
        "merged_at": "2019-05-11T22:31:32Z",
        "body": "This fixes all `npm audit` warnings.\r\n\r\nA point of interest might be the css-loader upgrade in `/website`, as I had to lift it by 2 major versions. I couldn't find any breakages.\r\n\r\nI also removed `babel-core` as it's no longer needed with jest@24 and upped jest in general. \r\n\r\n---\r\n\r\nOn a related note: How is one supposed to update devDependencies in a monorepo anyway? I did this by hand for the 4 packages and the website and it's quite tedious.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 57,
        "deletions": 25,
        "changed_files": 7,
        "created_at": "2019-05-11T10:42:25Z",
        "closed_at": "2019-05-11T14:54:16Z",
        "merged_at": "2019-05-11T14:54:16Z",
        "body": "Fixes #6622 and hopefully allows more people to contribute.\r\n\r\nThe fix is relatively straightforward:\r\n\r\n* In the rollup configs, I changed the check from starting at root (\"/\") to check if the <package>/modules path is referenced.\r\n* I changed the `NODE_ENV=production webpack -p` command for building the website with to a cross-plattform way of setting the enviroment variable.\r\n\r\nThis should be just a one-time effort and not result in any additional maintenance overhead. ",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 34,
        "deletions": 62,
        "changed_files": 4,
        "created_at": "2019-04-21T18:12:44Z",
        "closed_at": "2019-04-21T21:16:37Z",
        "merged_at": null,
        "body": "this removes the mini-create-react-context dependency and uses the React.createContext since react has already been updated to 16 for all package.json",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2019-04-20T16:18:27Z",
        "closed_at": "2019-04-20T18:30:15Z",
        "merged_at": "2019-04-20T18:30:15Z",
        "body": "Fixes #6714",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2019-04-19T10:03:24Z",
        "closed_at": "2019-04-19T16:01:11Z",
        "merged_at": null,
        "body": "in typescript definitions of [StaticRouterContext](https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/react-router/index.d.ts#L66) there is no _**status**_ and they used _**statusCode**._\r\nwhen a developer read the documentation and it's different from how they must implement it they get confused.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 61,
        "deletions": 19,
        "changed_files": 4,
        "created_at": "2019-04-18T19:38:40Z",
        "closed_at": "2019-04-20T18:31:08Z",
        "merged_at": "2019-04-20T18:31:08Z",
        "body": "Solves: https://github.com/ReactTraining/react-router/issues/6709\r\n\r\n1. catch exception of onClick\r\n2. prevent default event handler\r\n3. re-throw exception",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 92,
        "deletions": 45,
        "changed_files": 3,
        "created_at": "2019-04-16T02:56:14Z",
        "closed_at": "2019-04-16T14:05:20Z",
        "merged_at": "2019-04-16T14:05:20Z",
        "body": "keeps `package.json` light ...",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 31,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-04-13T20:04:44Z",
        "closed_at": "2019-04-14T17:55:51Z",
        "merged_at": "2019-04-14T17:55:51Z",
        "body": "I've added 2 simple examples of the matchPatch return values. It was not clear what to expect. ",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 47,
        "deletions": 104,
        "changed_files": 5,
        "created_at": "2019-04-06T11:29:55Z",
        "closed_at": "2019-04-07T01:58:28Z",
        "merged_at": "2019-04-07T01:58:28Z",
        "body": "I forked create-router-context because I saw that the package didn't see much activity anymore and had some obvious tweaks to be made.\r\n\r\n| | original | mini\r\n|---|---|---|\r\n| bundled sized | [1.4kB minzip](https://bundlephobia.com/result?p=create-react-context@0.2.3) | [1.2kB minzip](https://bundlephobia.com/result?p=mini-create-react-context@0.3.0)\r\n| install size | [**2.45 mB**](https://packagephobia.now.sh/result?p=create-react-context)  | [32kB](https://packagephobia.now.sh/result?p=mini-create-react-context)\r\n\r\nSee also the [install-size of RR.](https://packagephobia.now.sh/result?p=react-router-dom) and how it's gone *way* up with 5.0\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 55,
        "deletions": 11,
        "changed_files": 4,
        "created_at": "2019-04-06T00:23:13Z",
        "closed_at": "2019-04-06T21:48:17Z",
        "merged_at": null,
        "body": "### The issue\r\nWhen updating from 4.2.2 to 4.3.1 or 5.0.0, our redirects are throwing an error like\r\n```\r\nindex.js:179 Uncaught TypeError: Expected \"1234\" to be defined\r\n    at eval (index.js:179)\r\n    at generatePath (react-router.js:292)\r\n    at eval (react-router.js:311)\r\n```\r\n\r\n### The problem\r\nThe interpolated redirect params added in #5209 conflict with literal URLs that contains `':'` like\r\n```jsx\r\n<Switch>\r\n  <Redirect to=\"/users/user:1234\"/>\r\n</Switch>\r\n```\r\n\r\n### The fix\r\nThis PR adds a `noMatchedParams` prop to the Redirect component that opts out of this behavior.\r\nI supposed there could also be a way to escape URLs containing this character added to `path-to-regex` which would require updating that package in `react-router` anyway.\r\n\r\nPlease let me know if there is another way we can address this.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 36,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2019-04-05T22:13:42Z",
        "closed_at": "2019-04-06T03:16:19Z",
        "merged_at": "2019-04-06T03:16:19Z",
        "body": "Piggybacking off https://github.com/ReactTraining/react-router/pull/6674 to also handle object.\r\n\r\nResolves https://github.com/ReactTraining/react-router/issues/6689",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 36,
        "deletions": 29,
        "changed_files": 3,
        "created_at": "2019-04-02T21:47:51Z",
        "closed_at": "2019-04-03T19:44:58Z",
        "merged_at": "2019-04-03T19:44:58Z",
        "body": "Currently, withRouter(Foo) would render with 5 levels:\r\n\r\n```jsx\r\n<withRouter(Foo)>\r\n  <Route>\r\n    <ContextConsumer>\r\n      <ContextProvider>\r\n        <Foo/>\r\n      </ContextProvider>\r\n    </ContextConsumer>\r\n  </Route>\r\n</withRouter(Foo)>\r\n```\r\n\r\nWith this PR, it's only 3 levels:\r\n\r\n```jsx \r\n<withRouter(Foo)>\r\n  <ContextConsumer>\r\n    <Foo/>\r\n  </ContextConsumer>\r\n</withRouter(Foo)>\r\n```\r\n\r\nI also took the opportunity to clarify the warning. Previously, using withRouter(Foo) would have yielded ```\"You should not use <Route> outside a <Router>\"```. I've ran into that warning a couple of times myself and it's particularly unhelpful.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-04-01T15:44:07Z",
        "closed_at": "2019-05-15T11:36:34Z",
        "merged_at": "2019-05-15T11:36:34Z",
        "body": "Doesn't warn about `createRef` or `useRef` values in `wrappedComponentRef`",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 37,
        "deletions": 48,
        "changed_files": 4,
        "created_at": "2019-03-29T16:31:25Z",
        "closed_at": "2019-04-09T13:48:03Z",
        "merged_at": "2019-04-09T13:48:02Z",
        "body": "Hopefully fixes #6675 ?\r\n\r\nThis PR adds `PUBLIC_PATH` environment variable (seen it was being set at `.travis.yml`, but unused at the webiste's webpack config)\r\n\r\n@pshrmn This illustrates my idea of fixing it, but I'm not really sure if this works.\r\n\r\nSorry I made this change without running the website at all since I'm on a relatively clean Windows machine and my development environment hasn't been set up properly yet. I'll set it up later on, but it'll take some time to do so.\r\n\r\nThanks\r\n",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2019-03-29T15:47:07Z",
        "closed_at": "2019-03-29T16:53:47Z",
        "merged_at": "2019-03-29T16:53:47Z",
        "body": "I wasn't seeing these named correctly in DevTools. Looking at https://github.com/facebook/react-devtools/pull/1031#issuecomment-423288506 this seems to be the way to do it. Thanks!",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-03-29T09:56:27Z",
        "closed_at": "2019-03-29T13:16:57Z",
        "merged_at": "2019-03-29T13:16:57Z",
        "body": "I checked the docs for the other pull-request and noticed that ```sensitive``` was absent. ",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 36,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2019-03-29T00:08:05Z",
        "closed_at": "2019-04-02T13:12:51Z",
        "merged_at": "2019-04-02T13:12:51Z",
        "body": "Fixes #6673\r\n\r\nBasically, \"to\" can be a string or a location object. But only the case for objects was covered, hence the infinite loop in cases where the <Redirect/> is still being rendered after the location change.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 508,
        "deletions": 36,
        "changed_files": 5,
        "created_at": "2019-03-25T22:03:50Z",
        "closed_at": "2019-06-12T15:07:46Z",
        "merged_at": null,
        "body": "Meant as a base for discussion regarding the plans outlined in #6362 \r\n\r\n```Match``` will act just like ```Route```, except that it always renders it's children and does not have a render or component prop. \r\n\r\n```jsx\r\n<Match path=\"/about\">\r\n  {match => match ? <About /> : <NotFound />}\r\n</Match>\r\n```\r\n\r\nAlso, Match will pass the props to any and all \"normal\" children:\r\n\r\n```jsx\r\n<Match path=\"/About\">\r\n  <About>\r\n  <NotFound>\r\n</Match>\r\n```\r\n\r\n\r\nRegarding the unit tests: I copied the ```Route``` tests and poked at them for half an hour until they passed. With some guidance how to treat the now duplicated code across Route and Match, I'll figure out a more meaningful test-set.\r\n\r\n**TODO:**\r\n\r\n* [x] Sort out how props are passed to children\r\n    * [x] Pass to class components yes / no?\r\n    * [x] What to do when ```<Match/>``` has more than one child?\r\n* [ ] Sort out the duplicate code\r\n* [ ] Sort out unit tests\r\n* [ ] Write documentation",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 130,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2019-03-24T13:14:18Z",
        "closed_at": "2019-03-24T15:02:33Z",
        "merged_at": null,
        "body": "Added onKeyPress handler to the Link component, which acts just like the onClick handler when either Enter or Space is pressed. \r\n\r\nFixes #6600 ",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 110,
        "deletions": 353,
        "changed_files": 11,
        "created_at": "2019-03-21T05:48:53Z",
        "closed_at": "2019-05-15T19:08:55Z",
        "merged_at": "2019-05-15T19:08:55Z",
        "body": "@mjackson Just wanted to be sure this is all the content you wanted removed. Besides the \"update blocking\" page itself, two other pages made reference to it.",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2019-03-19T11:07:41Z",
        "closed_at": "2019-03-19T13:24:34Z",
        "merged_at": "2019-03-19T13:24:34Z",
        "body": "The example showing how to use a custom history object is referencing an outdated import path. Change it to a supported one.\r\n\r\nAlso see https://github.com/ReactTraining/history/blob/465288b91859244d401103c079c058c0a2be5cb0/createBrowserHistory.js#L2",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 27248,
        "deletions": 58077,
        "changed_files": 23,
        "created_at": "2019-03-18T17:40:41Z",
        "closed_at": "2019-04-03T02:23:21Z",
        "merged_at": null,
        "body": "This PR takes advantage of Lerna's file specifiers for packages in the monorepo.\r\n\r\n(The conversion was done automatically via `lerna link convert`)\r\n\r\nThis does a few things:\r\n\r\n1. Dependencies on other packages in the monorepo are defined using file specifiers. e.g.\r\n```jsa\r\n// before\r\n\"react-router\": \"~4.4.0\",\r\n// after\r\n\"react-router\": \"file:../react-router\",\r\n```\r\nWhen publishing (using `lerna publish`), the file specifiers will be converted to real dependency values.\r\n\r\n2. All `devDependencies` are hoisted to the root. This means that `lerna bootstrap` is no longer necessary!\r\n\r\nI changed the `prepublishOnly` scripts to `prepare` and have those run in the post-install phase. For the `website` package, I added a script to replicate the current setup (build when `process.env.CI` exists and the branch is `website`).\r\n\r\n**Note:** I'm running into some issues with the `react-router-native` tests. I'll make this a \"real\" PR once I've figured those out.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 38,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2019-03-17T19:26:31Z",
        "closed_at": "2019-09-17T23:44:18Z",
        "merged_at": null,
        "body": "Hi, I'm making updates for Open Collective. Either you or a supporter signed this repo up for Open Collective. This pull request adds backers and sponsors from your Open Collective https://opencollective.com/react-router \u2764\ufe0f\n  \n  It adds two badges at the top to show the latest number of backers and sponsors. It also adds placeholders so that the avatar/logo of new backers/sponsors can automatically be shown without having to update your README.md. [[more info](https://github.com/opencollective/opencollective/wiki/Github-banner)]. See how it looks on [this repo](https://github.com/apex/apex#backers).\nWe have also added a `postinstall` script to let people know after `npm|yarn install` that you are welcoming donations (optional). [[More info](https://github.com/OpenCollective/opencollective-cli)]\nYou can also add a \"Donate\" button to your website and automatically show your backers and sponsors there with our widgets. Have a look here: https://opencollective.com/widgets\n\n  P.S: As with any pull request, feel free to comment or suggest changes. The only thing \"required\" are the placeholders on the README because we believe it's important to acknowledge the people in your community that are contributing (financially or with code!).\n\n  Thank you for your great contribution to the open source community. You are awesome! \ud83d\ude4c\n  And welcome to the open collective community! \ud83d\ude0a\n\n  Come chat with us in the #opensource channel on https://slack.opencollective.com - great place to ask questions and share best practices with other open source sustainers!\n  ",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 99,
        "deletions": 29,
        "changed_files": 4,
        "created_at": "2019-03-12T19:57:01Z",
        "closed_at": "2019-05-16T20:50:46Z",
        "merged_at": "2019-05-16T20:50:46Z",
        "body": "See comments [here.](https://github.com/ReactTraining/react-router/issues/6613#issuecomment-472109397)\r\n\r\nI added some unit tests in NavLink-test and also removed the location override as a precaution for other interactions.",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2019-03-07T11:49:01Z",
        "closed_at": "2019-06-12T10:55:05Z",
        "merged_at": null,
        "body": "Basically this is the same PR as #6223 but with two changes:\r\n1. the failing tests are fixed\r\n2. I added support for partial routes with leading dot (`./`) and dot-dot (`..`) (see [Pathname Resolution as described in IEEE Std 1003.1-2001, chapter 4](http://pubs.opengroup.org/onlinepubs/009604499/basedefs/xbd_chap04.html#tag_04_11)\r\n2.1. partial routes with leading dot are resolved as if there were no leading `./`, e.g. `./foo` is the same as `foo`\r\n2.2. partial routes with leading dot-dot throw an error because they would cause conflicting pathes, e.g. the parent route is `/sauce/sriracha` and the child route is `../tobasco` resolving to `/sauce/tobasco` \u2013 neither could this work nor does it make sence",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-03-06T06:22:11Z",
        "closed_at": "2019-03-06T12:47:07Z",
        "merged_at": "2019-03-06T12:47:07Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-03-02T08:10:34Z",
        "closed_at": "2019-03-02T13:39:03Z",
        "merged_at": "2019-03-02T13:39:03Z",
        "body": "Hello @pshrmn \ud83d\udc4b quick fix for the tests",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-03-02T04:18:06Z",
        "closed_at": "2019-03-03T00:13:34Z",
        "merged_at": "2019-03-03T00:13:34Z",
        "body": "`Element` is DOM only.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-02-28T22:23:44Z",
        "closed_at": "2019-03-01T00:40:53Z",
        "merged_at": "2019-03-01T00:40:53Z",
        "body": "Fixes #6605 \r\n\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-02-19T09:58:45Z",
        "closed_at": "2019-02-19T16:04:14Z",
        "merged_at": "2019-02-19T16:04:14Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-02-11T10:13:43Z",
        "closed_at": "2019-02-11T14:51:53Z",
        "merged_at": null,
        "body": "Add support to send a function as \"to\" prop (like onClick but at the same prop)\r\n\r\n```jsx\r\nreturn <Link to={pathOrFunction} />\r\n```\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 28,
        "deletions": 24,
        "changed_files": 2,
        "created_at": "2019-02-08T14:31:52Z",
        "closed_at": "2021-12-09T19:30:23Z",
        "merged_at": null,
        "body": "Hi,\r\n\r\nI think that #4605 is still not fixed, as this test demonstrates.\r\n\r\nI will attempt to fix, but I can't guarantee I will succeed. I think the fix needs to be in `history`, and that the path component decoding function needs to be [`decodeURIComponent`](https://www.ecma-international.org/ecma-262/6.0/#sec-decodeuricomponent-encodeduricomponent), rather than `decodeURI`. For that to work, we need to rearrange the parsing so that decoding happens after parsing (I think [this commit does it before parsing](https://github.com/ReactTraining/history/pull/442/files#diff-090dc87e7364e24d9acb38fed9878f54R18)), otherwise the parse will be ambiguous.\r\n\r\nI think that the current code shows confusion around types, e.g. the line I linked to above `pathname = decodeURI(pathname)` shows that the distinction between encoded URIs and values used as path parameters is not being properly maintained, which has led to this bug IMO. Decoded path parameters are of a different _type_ to encoded URIs, so the two should not be stored in the same variable without inviting confusion and bugs.\r\n\r\nThanks,\r\n\r\n\r\nRich\r\n",
        "comments": 16
    },
    {
        "merged": false,
        "additions": 27,
        "deletions": 19,
        "changed_files": 1,
        "created_at": "2019-02-06T12:57:10Z",
        "closed_at": "2019-09-17T23:44:16Z",
        "merged_at": null,
        "body": "Hi again,\r\n\r\nIn relation to #6575 and as suggested in #5939, I would like to update `renderRoutes` to use `matchRoutes` instead of the `Switch` component.\r\n\r\nThis pull request contains an implementation of such an approach and also updates `renderRoutes` to render the whole tree (instead of only the first level), which removes the need for `renderRoutes` calls in child routes. \r\n\r\nI have left the tests as it is for now, until it clear what the behavior of `renderRoutes` should be.\r\n- [ ] Tests\r\n- [ ] Documentation",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 80,
        "deletions": 20,
        "changed_files": 3,
        "created_at": "2019-02-03T20:16:35Z",
        "closed_at": "2019-09-17T23:44:17Z",
        "merged_at": null,
        "body": "Hi,\r\n\r\nI would like to see support for matching only exact routes in `matchRoutes` (react-router-config), which works similar to other static routing libraries (such as Angular) and allows for functionality such as pathless routes for layout components. Old behavior can still be obtained by using wildcards.\r\n\r\nAn example use-case might be:\r\n```js\r\n[\r\n   {\r\n       component: DefaultLayout,\r\n       routes: [\r\n            {\r\n                path: \"/home\",\r\n                component: Home\r\n                exact: true,\r\n            },\r\n            {\r\n                path: \"/pepper/*\", // Obtain non-exact matching behavior\r\n                component: Pepper,\r\n            }\r\n       ],\r\n   },\r\n   {\r\n       component: AlternativeLayout,\r\n       routes: [\r\n             {\r\n                  path: \"/login\",\r\n                  component: Login\r\n                  exact: true,\r\n             }\r\n       ]\r\n   }\r\n]\r\n```\r\nWhen using non-exact matching, this route map will always resolve to first route (or one of its children). Exact matching allows it to also resolve the second route.\r\n\r\nIssues #5939 and #5429 are related.\r\n\r\nI have provided a sample implementation of this feature which adds a parameter to `matchRoutes` for only matching exact routes.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-01-18T00:49:19Z",
        "closed_at": "2019-01-18T02:57:38Z",
        "merged_at": "2019-01-18T02:57:38Z",
        "body": "First off, thanks for the in-depth docs! Saw this while reading the bit on animations \ud83d\udc4d ",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 26,
        "changed_files": 1,
        "created_at": "2019-01-10T14:41:34Z",
        "closed_at": "2019-01-10T15:44:40Z",
        "merged_at": "2019-01-10T15:44:40Z",
        "body": "[loadable-components](https://github.com/smooth-code/loadable-components) is the officially recommended way to do code splitting with dynamic imports in React: https://reactjs.org/docs/code-splitting.html#reactlazy\r\n\r\nreact-loadable does not accept issues and is starting to look like an unmaintained project. As React Training was one of the first guides that came up when I was googling how to do dynamic loading in react it seems sensible to change the docs to avoid other people wasting time going down the (in my opinion) wrong path\r\n\r\nMany thanks",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 8,
        "changed_files": 2,
        "created_at": "2018-12-20T09:58:45Z",
        "closed_at": "2019-01-08T14:54:37Z",
        "merged_at": "2019-01-08T14:54:37Z",
        "body": "Since `NavLink` returns a wrapped `Link` component and passed all of its props to the `Link`, this should also be reflected in `NavLink.propTypes`.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 175,
        "deletions": 56,
        "changed_files": 3,
        "created_at": "2018-11-25T08:47:55Z",
        "closed_at": "2019-02-22T19:00:29Z",
        "merged_at": null,
        "body": "Since we are doing some breaking changes. I think it's okay to convert\r\nsome components to functions where classes do not add any value.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2018-11-24T10:00:47Z",
        "closed_at": "2018-11-24T19:02:26Z",
        "merged_at": "2018-11-24T19:02:26Z",
        "body": "The fix was just a major bump of `hoist-non-react-statics` to include mridgway/hoist-non-react-statics#55. The breaking change was the hard dependency on `react-is` which is already included in `react-router`. Therefore this change is not breaking. As a side effect this will also prevent hoisting of [`contextType`](https://reactjs.org/docs/context.html#classcontexttype)\r\n\r\nThe added test case will cover the change required for #6056.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 256,
        "deletions": 213,
        "changed_files": 11,
        "created_at": "2018-11-17T19:35:35Z",
        "closed_at": "2019-03-22T18:14:22Z",
        "merged_at": "2019-03-22T18:14:22Z",
        "body": "I created a new library called `@codesandbox/react-embed`. This is a simple component that will create a sandbox on mount using our API and render an embed which shows the sandbox.\r\n\r\nI had to change two examples to make them work:\r\n\r\n- Animation\r\n\t- I import `styles.css` now\r\n- QueryParams\r\n\t- I wrap the component in a Route, because `location` is needed by the component.",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 18,
        "deletions": 15,
        "changed_files": 2,
        "created_at": "2018-11-14T22:57:39Z",
        "closed_at": "2018-11-25T17:12:23Z",
        "merged_at": "2018-11-25T17:12:23Z",
        "body": "",
        "comments": 11
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2018-11-14T17:35:32Z",
        "closed_at": "2018-11-14T18:42:22Z",
        "merged_at": "2018-11-14T18:42:22Z",
        "body": "Removes outdated \"hacking\" section. Fixes #6460.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 195,
        "deletions": 177,
        "changed_files": 11,
        "created_at": "2018-11-13T21:11:50Z",
        "closed_at": "2019-02-22T19:07:19Z",
        "merged_at": null,
        "body": "In this diff I converted all (except Router and Route) class components to functions with Lifecycle util.\r\n\r\nAs a result `react-router-dom` bundle is reduced with 1kB and the bundle with the following entry point is reduced from 16.5kB to 13.9kB.\r\n```\r\nimport { Route } from 'react-router-dom';\r\nconsole.log(Route);\r\n```\r\n\r\nEye analyses of prettified result shows the following artifacts\r\n- webpack runtime\r\n- path-to-regexp\r\n- create-react-context\r\n- react-is\r\n- Router.js\r\n- matchPath.js\r\n- Route.js\r\n- RouterContext.js\r\n\r\nSo Route.js and Router.js are components which always appear in user code. There's no reason to treeshake them. All other modules are their dependencies.\r\n\r\nv5 optimisation strategy\r\n- remove create-react-context\r\n- try to convert path-to-regexp to esm\r\n- remove React.createContext checks in Route and Router\r\n- convert Route and Router to function components\r\n\r\nThis should make project fully treeshakable and quite small.\r\n\r\nWhat do you think guys? Will this work for you?\r\n\r\n/cc @mjackson @billyjanitsch ",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-11-13T11:11:38Z",
        "closed_at": "2018-11-13T14:49:40Z",
        "merged_at": "2018-11-13T14:49:40Z",
        "body": "In Safari using location comparison rather than location.pathanme causes anchor links to fail.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-11-11T15:36:40Z",
        "closed_at": "2018-11-11T19:06:34Z",
        "merged_at": "2018-11-11T19:06:34Z",
        "body": "Fix typo: unneccessary => unnecessary",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-11-11T15:35:22Z",
        "closed_at": "2018-11-11T19:06:54Z",
        "merged_at": "2018-11-11T19:06:54Z",
        "body": "Typo fix: `renered`=> `rendered`",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-11-09T19:49:01Z",
        "closed_at": "2018-11-14T16:01:47Z",
        "merged_at": "2018-11-14T16:01:47Z",
        "body": "I cleaned up the commit in my previous PR #6448 ",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 161,
        "deletions": 22,
        "changed_files": 9,
        "created_at": "2018-11-08T11:50:56Z",
        "closed_at": "2019-05-23T20:36:14Z",
        "merged_at": null,
        "body": "Another approach to implement https://github.com/ReactTraining/react-router/issues/5331.\r\nThe difference between this one and https://github.com/ReactTraining/react-router/pull/5368 is that here we avoid extra nesting in NavLink component. @mjackson @pshrmn what do you think about this approach?",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 143,
        "deletions": 30,
        "changed_files": 4,
        "created_at": "2018-11-07T20:16:26Z",
        "closed_at": "2018-11-08T04:34:43Z",
        "merged_at": "2018-11-08T04:34:43Z",
        "body": "Ref https://github.com/ReactTraining/react-router/issues/6464\r\n\r\nHere's the problem. Babel transpiles static class properties outside of class iife which blocks uglify/terser from this iife.\r\n\r\n`defaultProps` will become a bad pattern soon since it's blocks treeshakability. For functions the problem is even more aggressive since it's not solvable these days.\r\n\r\nI think the best we may do is use defaults in destructuring\r\n```js\r\nconst Component = ({ prop1 = 'a', prop2 = 'b' }) => {\r\n}\r\n```\r\n\r\nWith classes this is harder because defaults can't be propagated in all methods.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 150,
        "deletions": 15,
        "changed_files": 2,
        "created_at": "2018-11-07T13:42:20Z",
        "closed_at": "2018-11-12T17:50:14Z",
        "merged_at": "2018-11-12T17:50:14Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 93,
        "deletions": 68,
        "changed_files": 3,
        "created_at": "2018-11-07T04:13:40Z",
        "closed_at": "2019-06-13T00:14:03Z",
        "merged_at": "2019-06-13T00:14:03Z",
        "body": "This PR adds a `<Link component>` prop that links can use to render a custom component instead of an `<a>`.\r\n\r\nThis has been an oft-requested feature over the years that we've traditionally not wanted to add because all links on the web should be `<a>` tags for accessibility reasons. However, this limitation means that we have different APIs between `react-router-dom`'s `<Link>` and `react-router-native`'s `<Link>`, which makes it difficult to reuse code across native and web.\r\n\r\nFor previous discussion, see #4625 and #5437\r\n\r\n/cc @necolas @lazyelephant",
        "comments": 17
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-11-05T22:34:22Z",
        "closed_at": "2018-11-06T03:02:11Z",
        "merged_at": "2018-11-06T03:02:11Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 544,
        "deletions": 15,
        "changed_files": 5,
        "created_at": "2018-11-04T05:06:35Z",
        "closed_at": "2019-07-03T14:27:43Z",
        "merged_at": null,
        "body": "Like #6449, but as a hook.\r\n\r\n```jsx\r\nimport { useFocus } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  const ref = useFocus();\r\n  return (\r\n    <main tabIndex={-1} ref={ref}>\r\n      {/* ... */}\r\n    </main>\r\n  );\r\n}\r\n```\r\n\r\nI was having timing issues in the tests and had to use `useLayoutEffect` in order to get them passing. ",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 73,
        "deletions": 17,
        "changed_files": 6,
        "created_at": "2018-11-03T01:09:56Z",
        "closed_at": "2019-03-19T21:59:22Z",
        "merged_at": null,
        "body": "Still experimental, but no reason we shouldn't be able to have a useRouter hook that works exactly like a path-less `<Route>`.\r\n\r\n~~Please don't merge until React 16.7 is out of alpha!~~ Actually, let's do what @Janpot [suggested](https://github.com/ReactTraining/react-router/pull/6453#issuecomment-435603200) and release this in 4.x as `unstable_useRouter`.\r\n\r\nSee #6430",
        "comments": 19
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-11-02T16:54:20Z",
        "closed_at": "2019-09-17T23:44:15Z",
        "merged_at": null,
        "body": "Hi all,\r\n[since six months](https://github.com/facebook/react-native/commit/e708010d18f938e2d6b6424cfc9485d8e5dd2800) the `react-native` implementation of `Text` implemented `forwardRef`. This means that, while a `Text` component is legit as a `Link` (it implements the `onPress` prop), it's not a function anymore. Instead, it will be an object with a render function.\r\n\r\nUnfortunately, the right prop type for `forwardRef` [does not exists yet](https://github.com/facebook/prop-types/issues/200).\r\n\r\nThis PR allows `Text` to be passed as `component` to `Link`, without `prop-types` warnings and maintaining a good level of safety checks.\r\n\r\nI hope you'll be ok with merging this, and thanks again for `react-router` \ud83d\ude4c",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 594,
        "deletions": 12,
        "changed_files": 5,
        "created_at": "2018-11-02T02:08:01Z",
        "closed_at": "2019-07-03T14:27:40Z",
        "merged_at": null,
        "body": "This PR should make it easier to make `react-router-dom` apps more accessible. This is pretty much a copy of the same component that I use for [Curi](https://curi.js.org/packages/@curi/react-dom/#Focus) and I think that this approach works well.\r\n\r\n`Focus` uses a render-invoked prop to assign a ref to the component that should be focused when the location changes\r\n\r\n```jsx\r\nimport { Focus } from \"react-router-dom\";\r\n\r\n<BrowserRouter>\r\n  <Focus>\r\n    {ref => (\r\n      <main tabIndex={-1} ref={ref}>\r\n        <Switch>...</Switch>\r\n      </main>\r\n    )}\r\n  </Focus>\r\n</BrowserRouter>\r\n\r\n// or even pass the ref to route components (using React.forwardRef()/innerRef)\r\n\r\n<BrowserRouter>\r\n  <Focus>\r\n    {ref => (\r\n      <Switch>\r\n        <Route\r\n          exact\r\n          path=\"/\"\r\n          render={match => <Home ref={ref} {...match} />}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/about\"\r\n          render={match => <About ref={ref} {...match} />}\r\n          />\r\n      </Switch>\r\n    )}\r\n  </Focus>\r\n</BrowserRouter>\r\n```\r\n\r\nThe `ref` component is only re-focused when the `location` changes, so non-location change re-renders will not trigger this. ",
        "comments": 13
    },
    {
        "merged": false,
        "additions": 88,
        "deletions": 46,
        "changed_files": 1,
        "created_at": "2018-11-01T20:58:17Z",
        "closed_at": "2018-11-09T19:49:51Z",
        "merged_at": null,
        "body": "I think this update will fix the issue #6426 . It seems to me your husky package reformat my css code. How do i clean it up?",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2018-11-01T19:46:36Z",
        "closed_at": "2018-11-21T18:59:39Z",
        "merged_at": "2018-11-21T18:59:39Z",
        "body": "A followup to #6420 and #6417 , the version of React-is that was installed didn't allow `lazy` to actually pass validation -- it doesn't recognize it yet, since lazy was added in `16.6`.\r\n\r\nI was going to add a test for it, but that also requires updating the package's `react` and `react-dom`  to `16.6` so I can `import React, {lazy, Suspense} from 'react'`. However, when I tried that update, other tests in other areas failed that I'm not that familiar with. \r\n\r\nIf you want me to look into that, I can. I'm just not familiar with those areas. :)",
        "comments": 12
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-10-31T21:06:59Z",
        "closed_at": "2018-10-31T23:37:05Z",
        "merged_at": null,
        "body": "This PR fixes the issue #6445 where ReactIs is being imported as default while it shouldn't.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 184,
        "deletions": 70,
        "changed_files": 22,
        "created_at": "2018-10-31T13:39:50Z",
        "closed_at": "2018-10-31T18:17:49Z",
        "merged_at": "2018-10-31T18:17:49Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 11,
        "changed_files": 5,
        "created_at": "2018-10-31T04:23:27Z",
        "closed_at": "2018-10-31T13:56:29Z",
        "merged_at": "2018-10-31T13:56:29Z",
        "body": "files:\r\nAmbiguous.js\r\nAuth.js\r\nNoMatch.js\r\nRecursive.js\r\nRouteConfig.js",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 29,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2018-10-30T08:01:25Z",
        "closed_at": "2018-10-30T14:30:10Z",
        "merged_at": "2018-10-30T14:30:10Z",
        "body": "I've created PR. Let me know if something should be changed.\r\nAny comments are appreciated. \ud83d\udc68\u200d\ud83d\udcbb ",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 10,
        "changed_files": 1,
        "created_at": "2018-10-30T06:48:38Z",
        "closed_at": "2018-10-30T14:36:57Z",
        "merged_at": "2018-10-30T14:36:57Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2018-10-28T08:21:20Z",
        "closed_at": "2018-10-30T23:18:59Z",
        "merged_at": "2018-10-30T23:18:59Z",
        "body": "While watching newcomers try navigate the Home Page, I think I've found a point of confusion. \r\n\r\nThe presence of a button labelled \"Anywhere\" seems to throw them off. \r\n\r\nIt sounds like a safe catch-all. Yet most people likely want to see usage examples for either \"Web\" or \"Native\"\r\n\r\n![image](https://user-images.githubusercontent.com/397632/47613571-71241480-da57-11e8-9eba-e032aae5c4d2.png)\r\n\r\n\r\n\r\nI'd leave the \"Core\" section in the docs for now:\r\n\r\n![image](https://user-images.githubusercontent.com/397632/47613598-0921fe00-da58-11e8-9d7c-182c2a097729.png)\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 14,
        "deletions": 38,
        "changed_files": 1,
        "created_at": "2018-10-28T08:01:40Z",
        "closed_at": "2019-09-17T23:44:14Z",
        "merged_at": null,
        "body": "Hopefully these updates further simplify the Quick Start examples. \r\n\r\nTrying to make both examples more digestible, with less filler (`<ul> and <li>` tags).\r\n\r\nHere's screenshots of the changes, compared to my last update:\r\n\r\n#### Basic Example:\r\n\r\n**Updated version on left.**\r\n\r\n![image](https://user-images.githubusercontent.com/397632/47613403-69af3c00-da54-11e8-961c-c8865d7b8acb.png)\r\n\r\n#### And the Nested example:\r\n\r\n**Updated version on left.**\r\n\r\n![image](https://user-images.githubusercontent.com/397632/47613411-96635380-da54-11e8-9ad8-5df2be0be83a.png)\r\n\r\n\r\nI'd like the nested example to read a little better. The mix (or order) of Components doesn't seem right... \ud83e\udd14 ",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 12067,
        "deletions": 11761,
        "changed_files": 28,
        "created_at": "2018-10-26T21:21:56Z",
        "closed_at": "2018-10-27T23:15:57Z",
        "merged_at": "2018-10-27T23:15:57Z",
        "body": "## Overview\r\n\r\nThis PR upgrades all projects to the latest Jest version and switches the test runners over to the new [jest-circus runner](https://github.com/facebook/jest/tree/master/packages/jest-circus). The only meaningful change needed to change the runner was to migrate from `spyOn` to `jest.spyOn`, which is the majority of what's contained here \ud83c\udfaa\ud83d\udc4d ",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2018-10-24T19:19:43Z",
        "closed_at": "2018-10-24T20:32:48Z",
        "merged_at": "2018-10-24T20:32:48Z",
        "body": "Refactor ...props to ...rest StaticRouter and FakeBrowser for consistency over code.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 72,
        "deletions": 289,
        "changed_files": 10,
        "created_at": "2018-10-23T20:51:37Z",
        "closed_at": "2018-10-26T06:27:38Z",
        "merged_at": "2018-10-26T06:27:37Z",
        "body": "Added react-is to validate the proptype for Route's component.\r\n\r\nRemoved a couple of outdated TODOs that dealt with `__DEV__`\r\n\r\nThe rest of the changes were done just from an `npm install` command\r\n\r\nReact-is does add a tiny bit of size ( https://bundlephobia.com/result?p=react-is@16.5.2 ) as noted by the snapshots, but it seems like the best (and official) way to support the check.\r\n\r\nAdds the changes and feedback found in #6327 while also removing a duplicated test",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2018-10-23T04:53:01Z",
        "closed_at": "2018-10-23T13:32:28Z",
        "merged_at": "2018-10-23T13:32:28Z",
        "body": "Was going through the docs and found this misalignment. ",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 83,
        "deletions": 52,
        "changed_files": 4,
        "created_at": "2018-10-21T21:11:14Z",
        "closed_at": "2018-10-25T03:59:58Z",
        "merged_at": "2018-10-25T03:59:58Z",
        "body": "Hi y'all, thanks to everyone for all the work that's gone into this library!!! \ud83d\udc4d \r\n\r\nHere's a summary of my progress so far:\r\n\r\n- [x] Add simpler \"basic\" example for \"Quick Start.\"\r\n- [x] Enhance (previous) nested routing example from \"Quick Start.\"\r\n- [x] Add explainer text to examples.\r\n- [x] Move Philosophy to lower in the nav.\r\n- [x] Quick Start is default content.\r\n\r\nRE: #6409\r\n ",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2018-10-21T18:24:22Z",
        "closed_at": "2018-10-22T00:25:01Z",
        "merged_at": "2018-10-22T00:25:00Z",
        "body": "This is to keep the docs up to date with the current version of React.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2018-10-20T20:05:22Z",
        "closed_at": "2018-10-21T02:41:42Z",
        "merged_at": "2018-10-21T02:41:42Z",
        "body": "rename ...props on Link.js to ...rest - same naming convention used on NavLink.js. renaming for consistency.\r\nalso refactored   proptypes.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 8392,
        "deletions": 4799,
        "changed_files": 21,
        "created_at": "2018-10-17T10:14:28Z",
        "closed_at": "2018-10-20T16:15:37Z",
        "merged_at": "2018-10-20T16:15:37Z",
        "body": "In this diff I upgraded to babel 7, enabled class properties loose mode\r\nand added babel runtime which allows to reuse helpers between all\r\npackages.\r\n\r\nFor CJS bundles I still use inlined helpers.\r\n\r\n![image](https://user-images.githubusercontent.com/5635476/47079521-6a530180-d20e-11e8-87b2-695935f0060d.png)\r\n\r\n![image](https://user-images.githubusercontent.com/5635476/47079555-7a6ae100-d20e-11e8-9bb1-4a496d112a02.png)\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 74,
        "deletions": 169,
        "changed_files": 7,
        "created_at": "2018-10-16T19:42:31Z",
        "closed_at": "2018-10-17T00:58:12Z",
        "merged_at": "2018-10-17T00:58:11Z",
        "body": "Ref https://github.com/ReactTraining/react-router/issues/6393",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-10-15T22:09:18Z",
        "closed_at": "2018-10-16T14:59:25Z",
        "merged_at": null,
        "body": "Docs elsewhere in [codebase](https://github.com/ReactTraining/react-router/blob/master/packages/react-router/docs/api/withRouter.md) note that the order of connect and withRouter matter, but the website does not. \r\n\r\nAs a teacher that directs students here, this will help them find the answer on their own.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 25483,
        "deletions": 15807,
        "changed_files": 17,
        "created_at": "2018-10-14T11:00:42Z",
        "closed_at": "2018-10-15T19:29:59Z",
        "merged_at": "2018-10-15T19:29:59Z",
        "body": "As you know esm distribution for different environments is not trivial\r\nif we go with \"react\" way. I suggest to provide only one esm entry\r\npoint. User bundler will solve environments. Webpack requires only one\r\nflag for this.\r\n\r\nIn this diff I also replaced build script with rollup multi config,\r\nadded build artifacts cleaning and added size snapshot plugin to track\r\npackage size and esm treeshakability.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 31,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-10-09T15:14:50Z",
        "closed_at": "2018-10-15T21:35:38Z",
        "merged_at": null,
        "body": "Currently, [`Route` uses the prop-type of `func`](https://github.com/ReactTraining/react-router/blob/master/packages/react-router/modules/Route.js#L130) to check the `Component` prop. \r\n\r\nHowever, that doesn't cover all valid React components, since `React.forwardRef` returns an object [as noted here](https://github.com/facebook/react/issues/12453).\r\n\r\nSo this failing test is being added to help correct this at some point in the future.\r\n\r\nI thought it may be nice to talk about possible solutions here as well:\r\n\r\n- Wait until the proptypes package [adds support for a Component type](https://github.com/facebook/prop-types/issues/200)\r\n- Change to a custom proptype function that can use [react-is' `isValidElementType`](https://www.npmjs.com/package/react-is) to add the prop type check manually\r\n\r\nHopefully this is helpful!",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 453,
        "deletions": 1,
        "changed_files": 4,
        "created_at": "2018-10-09T14:49:17Z",
        "closed_at": "2019-02-22T23:19:57Z",
        "merged_at": null,
        "body": "Created a component that behaves exactly like Route except it doesn't (render children/ call children function) unless the path prop matches",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2018-10-04T21:32:08Z",
        "closed_at": "2018-10-05T00:09:39Z",
        "merged_at": "2018-10-05T00:09:39Z",
        "body": "## Update react-router-native Quickstart Guide\r\nAlthough match.url works in this basic example, match.path should be used for nested routes.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2018-10-03T21:44:17Z",
        "closed_at": "2018-10-04T01:08:59Z",
        "merged_at": "2018-10-04T01:08:59Z",
        "body": "### Update Basic Example on Website\r\nAlthough match.url works in this basic example, match.path should be used for nested routes.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 90,
        "deletions": 1,
        "changed_files": 4,
        "created_at": "2018-10-03T05:43:02Z",
        "closed_at": "2018-10-15T22:11:13Z",
        "merged_at": "2018-10-15T22:11:12Z",
        "body": "Issue #5789 requested an example/guide for working with url parameters in `react-router`. I implemented this as an example since they allow for a functioning example that a visitor the docs can interact with and see it in action.\r\n\r\nAlmost all (if not all) of the code was gathered from that issue and formatted to work with the docs.\r\n\r\nAt the top of the example, I put a short bit of copy about the fact that url params are implemented using an external library. I just took a stab at this so please feel free to let me know if there are any additional changes that need to made to this copy or the code for the example.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 3148,
        "changed_files": 34,
        "created_at": "2018-10-03T03:59:00Z",
        "closed_at": "2018-10-09T22:09:57Z",
        "merged_at": "2018-10-09T22:09:57Z",
        "body": "Hello there! This is my first pull request to your repository. It updates the Animated component library in the website directory to the newest version (as seen here: https://github.com/animatedjs/animated), in order to fix an error on the mobile browser. \r\n\r\nThe Animated library was using some undocumented internals of React that appear to have been changed in the new version, causing weird exceptions deep in the Animated code. I would recommend testing this solution as I was unable to find any test files for the website, and I also had to make some local modifications to get the app running on my Windows machine (not committed!).\r\n\r\nThanks,\r\ntdurtschi",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2018-09-30T14:14:21Z",
        "closed_at": "2018-09-30T16:27:52Z",
        "merged_at": "2018-09-30T16:27:52Z",
        "body": "Babel has updated its core name to @babel/core and the same naming convention is now applied to plugins too. \r\n\r\nThe plugin `babel-plugin-syntax-dynamic-import` is now available as `@babel/plugin-syntax-dynamic-import`. \r\n\r\nThe old version is also available but that will not work with Babel v7+\r\n\r\nCheers ",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2018-09-21T10:42:39Z",
        "closed_at": "2018-09-21T12:27:32Z",
        "merged_at": "2018-09-21T12:27:32Z",
        "body": "Return the JSX from the `Blocker` component `render` method.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-09-20T10:04:28Z",
        "closed_at": "2018-09-20T14:11:39Z",
        "merged_at": "2018-09-20T14:11:39Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 629,
        "deletions": 532,
        "changed_files": 22,
        "created_at": "2018-09-18T22:54:56Z",
        "closed_at": "2018-09-25T19:41:25Z",
        "merged_at": null,
        "body": "Removed all instances of `componentWillMount` and `componentWillReceiveProps`\r\n\r\nFor the most part, cWM was changed to cDM, except in cases where a parent's function needed to be run before a child's, so those were moved into the constructor. (see `Router.js` as an example).\r\n\r\ncWRP was replaced with componentDidUpdate. In one case where infinite loops could happen, I added an equality check to stop that. (see `Route.js`).\r\n\r\nUpdated all documentation and examples to remove the old lifecycles and use their supported counterparts.\r\n\r\nIt appears that I'm the first person to change many of these files after the addition of prettier as a git hook. Many changes, such as adding `;` and changing single to double quotes `\"`, appear to be a result of that.\r\n\r\nTests all pass. I linked this updated code to one of my projects and it appears to all work the same as before, but I only use pretty basic RR-dom components and it's not exhaustive. \r\n\r\nHopefully resolves #6060 and is a more robust version of #6256 ",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 43,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2018-09-18T07:43:33Z",
        "closed_at": "2018-09-18T14:25:29Z",
        "merged_at": "2018-09-18T14:25:29Z",
        "body": "Hi,\r\n\r\nthis is essentially a port of #5294 to v3.",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 20,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2018-09-13T19:04:14Z",
        "closed_at": "2019-09-17T23:44:20Z",
        "merged_at": null,
        "body": "Hey, first PR over here.\r\n\r\nI just stumbled upon this problem using `NavLinks` and wanted to know what you thought about this change.\r\n\r\n## Motivation\r\nI have a website with a Navbar, with `NavLink`s to different parts of the website, that should become active when different sections are, well, active. Let's say those routes in the Navbar are something like `/events`, `/classes` and such. And inside `/events` you have `/events/home` (which is the default), `/events/cancelled`, etc.\r\n\r\nSo having:\r\n\r\n```<NavLink to=\"/events\" />```\r\n\r\nthere works fine, but with one detail. The `/events` component is the one in charge of redirecting to `/events/home` (which is what is happening now). Making a short flicker appear in the URL.\r\n\r\n## Proposal\r\nAdd a `matchPath` prop to `NavLink`, so that for cases like this, one could have the navigated link and the match link be different.\r\n\r\n```<NavLink to=\"/events/home\" matchPath=\"/events\" />```\r\n\r\nIn this example, this `NavLink` would match with `/events/home` and `/events/otherRoutes`, but still navigate to the default `/events/home` when clicked.\r\n\r\n## Tests\r\n\r\nI would like to add some tests for this, but I'm not sure how to tackle that or where to start testing this. If you like this idea I'd be happy to add tests then :)",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 38,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2018-09-10T00:56:09Z",
        "closed_at": "2018-10-25T03:49:59Z",
        "merged_at": null,
        "body": "The `<Route component />` prop type at the moment is a function. However, if the component has a forwardRef \r\n\r\nYou might not have the control over this if using third-party HOC on your component. As an example, I use `withCookies` on my routed component. The result would be a `forwardRef` because the HOC make sure you still can use ref on your original component.\r\n\r\nTo fix this, we need a better prop-types. Unfortunately, making it reliable isn't as simple as it might look like. There is [already a PR](https://github.com/facebook/prop-types/pull/211) to add `PropTypes.elementType` to the official `prop-types` library. For now, there is a library with the same code (`prop-types-elementtype`).\r\n\r\nI've added a failing test and added the better prop-types.\r\n\r\nLet me know if I need to do anything else to get this merged!",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-08-31T16:05:54Z",
        "closed_at": "2018-08-31T22:09:16Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 164,
        "deletions": 156,
        "changed_files": 5,
        "created_at": "2018-08-30T17:28:52Z",
        "closed_at": "2018-09-19T13:53:05Z",
        "merged_at": null,
        "body": "Replace use of deprecated lifecycle methods with the methods recommended by the React team in the documentation.\r\n\r\nI am not sure if the automatic editing of the files because of this precommit hook: `\"precommit\": \"pretty-quick --staged\"` was supposed to happen but I assume that the style changes are desired. All I changed was replacing `componentWillReceiveProps` with `componentDidUpdate` and add one sentence that it is not recommended to use the lifecycle methods that are soon to be deprecated with a link that explains.\r\n\r\nI used `componentDidUpdate` in each example as that is what is recommended: [Check out Abramov comment](https://github.com/reactjs/reactjs.org/issues/721).\r\n\r\n*Also*, if desired, I can go through the docs and make sure that each page in the docs gets the precommit hook and send another quick PR.\r\n\r\nThanks!",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 156,
        "deletions": 5,
        "changed_files": 4,
        "created_at": "2018-08-25T08:25:20Z",
        "closed_at": "2019-02-22T23:17:33Z",
        "merged_at": null,
        "body": "I've added a little cleanups on top of Lukas' work.",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 26,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2018-08-24T20:36:52Z",
        "closed_at": "2018-08-25T00:30:07Z",
        "merged_at": null,
        "body": "Updates to the `Prompt` component to allow opt in support for the onBeforeUnload browser event. This has been implemented as part of the existing `Prompt` component rather than a new component to allow more convenient use within apps.\r\n\r\nThe functionality is opt in only and will default to the current functionality to keep full backwards compatibility. Support can also be toggled on or off through the prop.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2018-08-15T03:48:51Z",
        "closed_at": "2018-08-23T15:35:34Z",
        "merged_at": "2018-08-23T15:35:34Z",
        "body": "I was recently doing some bundle size analysis using source-map-explorer\r\nand noticed that we had a little bit of duplication of react-router\r\ncode. It seems as though our import of react-router-config was bringing\r\nin modules from react-router/Foo, while our named imports from\r\nreact-router was bringing in modules from react-router/es/Foo.\r\n\r\nAs a workaround, I've set up a webpack alias to avoid the duplication,\r\nbut I think this should be solved in this package so that everyone can\r\nbenefit.\r\n\r\nI believe this is similar to:\r\n\r\n- https://github.com/ReactTraining/react-router/pull/5589",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-08-10T21:49:09Z",
        "closed_at": "2018-08-10T22:52:17Z",
        "merged_at": "2018-08-10T22:52:17Z",
        "body": "See https://github.com/ReactTraining/react-router/pull/6278#issuecomment-412213622 for rationale. In short, the change merged in #6278 will actually _increase_ bundle size for ESM builds if other parts of react-router are used which include other parts of the history module.\r\n\r\nInstead, please consider merging ReactTraining/history#597 and releasing a new version of the history module, which would allow webpack to more aggressively tree-shake react-router's use of history, providing equivalent bundle size savings regardless of how much of react-router is used.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 253,
        "deletions": 15,
        "changed_files": 18,
        "created_at": "2018-08-10T16:57:54Z",
        "closed_at": "2018-10-12T00:12:28Z",
        "merged_at": null,
        "body": "To alleviate some of #6060.\n\ncWRP was easy enough to change. Some instances of cWM weren\u2019t quite as easy due to the legacy context API and having no familiarity with it.\n\nStill, I was able to run this symlinked to my company\u2019s app and see at least a reduction in StrictMode errors with no change in app functionality.\n\nAlso added a StrictMode test for each component, skipped if it wasn\u2019t fixed yet.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 4,
        "changed_files": 5,
        "created_at": "2018-08-02T23:25:35Z",
        "closed_at": "2018-08-05T18:22:24Z",
        "merged_at": "2018-08-05T18:22:24Z",
        "body": "Hello, I was looking through my webpack bundle and found this optimization to reduce bundle size.\r\n\r\nWith these changes, my bundle goes from 797.3kb to 782.9kb, a savings of 14.4kb.\r\n\r\nBefore:\r\n\r\n<img width=\"838\" alt=\"screen shot 2018-08-02 at 4 24 14 pm\" src=\"https://user-images.githubusercontent.com/1571918/43616274-8a252864-9670-11e8-842b-cb562296b90b.png\">\r\n\r\nAfter:\r\n\r\n<img width=\"818\" alt=\"screen shot 2018-08-02 at 4 24 22 pm\" src=\"https://user-images.githubusercontent.com/1571918/43616276-8e0fa8be-9670-11e8-80d2-0e31c716c54c.png\">\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 12,
        "changed_files": 2,
        "created_at": "2018-07-31T10:45:57Z",
        "closed_at": "2018-08-01T14:06:30Z",
        "merged_at": "2018-08-01T14:06:29Z",
        "body": "Further to #6269, this removes the deprecated package from the readme and replaces it with a note for confused Redux users.\r\n\r\nThis is to avoid alarming prospective users who click on a core-seeming package and then see a \"no longer maintained\" message.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 9,
        "changed_files": 1,
        "created_at": "2018-07-17T23:59:24Z",
        "closed_at": "2018-09-25T19:45:31Z",
        "merged_at": null,
        "body": "This is intended to resolve #6060.\r\n\r\nThe warning that was activated in `componentWillReceiveProps` was moved to component `shouldComponentUpdate`, and the `this.unlisten` function is now being set in `constructor`.\r\n\r\n**WARNING**: The unit tests are all green, but I was not able to run a real life setup (at the time of this writing, accepting help) to test this. If someone can test this with React.StrictMode, I would be glad.",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-07-17T19:38:51Z",
        "closed_at": "2018-09-20T19:31:06Z",
        "merged_at": null,
        "body": "Working with @mjackson to update a few minor details on the React Router docs. \ud83c\udf89 ",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 9,
        "changed_files": 1,
        "created_at": "2018-07-10T05:40:02Z",
        "closed_at": "2018-07-10T13:15:59Z",
        "merged_at": null,
        "body": "renderRoutes should render subroutes",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 15,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-07-03T21:56:51Z",
        "closed_at": "2018-07-04T01:02:21Z",
        "merged_at": "2018-07-04T01:02:21Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 208,
        "deletions": 0,
        "changed_files": 7,
        "created_at": "2018-06-30T00:48:35Z",
        "closed_at": "2019-09-17T23:44:08Z",
        "merged_at": null,
        "body": "I have one question. In a \"realistic\" example you would need a data store of some kind (react, localstorage, etc) in order to pass fetched data from server to client, and pass down to component tree.\r\n\r\nIn order to avoid this and keep the example simple, I'm not using renderRoutes() in either client or server, this makes it easy to pass props to component without hassle. Is this the right way to go, or should I add a simple redux store on top of it? Would add maybe 10 additional lines. \r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 159,
        "deletions": 6,
        "changed_files": 4,
        "created_at": "2018-06-23T21:55:11Z",
        "closed_at": "2019-04-07T01:59:06Z",
        "merged_at": null,
        "body": "Most of this PR is pulled from #4539 which is outdated and has a lot of merge conflicts.\r\n\r\nThe implementation is simple: the `matchPath` method will infer that if `options.path` does not have a leading slash, then it is relative to the parent w/ the parent's matched url used as the base.\r\n\r\nI'm hoping that this continues the conversation started in #5127 so that we can move closer to having a solution.\r\n\r\nIn my opinion, `Route` paths should not support `./` or `../`. As for linking, relative links are already working as demonstrated by [this comment](https://github.com/ReactTraining/react-router/issues/5127#issuecomment-374019025). \r\n\r\nRelative route paths should remain simple and straightforward and the logic around relative linking should be delegated to `history` as much as possible possible.",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 8480,
        "deletions": 0,
        "changed_files": 23,
        "created_at": "2018-06-23T16:11:18Z",
        "closed_at": "2018-06-24T17:31:24Z",
        "merged_at": null,
        "body": "I can improve code commenting, readme etc. if need be.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2018-06-22T09:52:01Z",
        "closed_at": "2018-06-22T13:56:02Z",
        "merged_at": "2018-06-22T13:56:02Z",
        "body": "the `Main`  component is not used",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 24,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2018-06-20T09:50:04Z",
        "closed_at": "2018-06-22T13:56:44Z",
        "merged_at": "2018-06-22T13:56:44Z",
        "body": "This PR allows to use render as valid callback in the `react-router-config` configuration tree.\r\n\r\nIt tries to resolve the #4962 issue and it's implemented based on this idea:\r\nhttps://github.com/ReactTraining/react-router/issues/4962#issuecomment-376567551\r\n\r\nFor example:\r\n```\r\n{\r\n    {\r\n        path: \"/restricted-area\",\r\n        render: (props) => isUserLoggedIn() ? <RestrictedArea/> : <Redirect to=\"/login\"/>\r\n    },\r\n    {\r\n        path: \"/login\",\r\n        component: Login\r\n    }\r\n}\r\n```",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-06-19T12:32:22Z",
        "closed_at": "2018-06-19T17:21:15Z",
        "merged_at": "2018-06-19T17:21:15Z",
        "body": "otherwise it throws Invariant Violation: React.Children.only expected to receive a single React element child.",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-06-19T07:25:02Z",
        "closed_at": "2018-06-19T16:23:12Z",
        "merged_at": null,
        "body": "You cannot provide text as a link child without using the text component",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 118,
        "deletions": 7,
        "changed_files": 10,
        "created_at": "2018-06-17T06:25:52Z",
        "closed_at": "2018-10-31T15:20:06Z",
        "merged_at": "2018-10-31T15:20:05Z",
        "body": "Take advantage of Jest's `moduleNameMapper` to test the `cjs`, `es`, and `umd` builds in addition to the source code. The React repo has [a similar process](https://github.com/facebook/react/blob/master/scripts/jest/config.build.js) for testing its builds.\r\n\r\nThe `react-router` and `react-router-dom` tests skip the minimized `umd` builds because those have tests for warnings that get stripped from the minimized bundle.",
        "comments": 32
    },
    {
        "merged": true,
        "additions": 21,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-06-08T12:03:12Z",
        "closed_at": "2018-06-08T13:19:55Z",
        "merged_at": "2018-06-08T13:19:55Z",
        "body": "Added:\r\n- optional parameters\r\n- routeParams\r\n- query - gone, only unparsed search\r\n- getParamNames",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2018-05-24T17:28:15Z",
        "closed_at": "2018-05-25T20:27:19Z",
        "merged_at": "2018-05-25T20:27:19Z",
        "body": "this is a failing test to reproduce issue #6171 \r\n\r\nnot sure how to fix it yet\r\n\r\n![image](https://user-images.githubusercontent.com/2005841/40501617-c6449df0-5f5e-11e8-9c32-f7f87681de49.png)\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 900,
        "deletions": 396,
        "changed_files": 7,
        "created_at": "2018-05-24T00:44:42Z",
        "closed_at": "2021-12-09T15:58:08Z",
        "merged_at": null,
        "body": "`TLDR`\r\n\r\nAdds `redirect`, `props`, `forcedProps` as keys to `route`:\r\n\r\n```\r\nconst routes = [\r\n  {\r\n    component: Root,\r\n    routes: [\r\n      {\r\n        path: \"/\",\r\n        exact: true,\r\n        component: Home\r\n      },\r\n      {\r\n        path: \"/other:id\",\r\n        redirect: \"/child:id\"\r\n      },\r\n      {\r\n        path: \"/child/:id\",\r\n        component: Child,\r\n        props: {\r\n          className: \"child-css-class\"\r\n        },\r\n        routes: [\r\n          {\r\n            path: \"/child/:id/grand-child\",\r\n            component: GrandChild\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n];\r\n```\r\n\r\nAnd passes a `renderChild = props => renderRoutes(route, { extraProps: props })` function to all route `components`:\r\n\r\n```\r\nconst Root = ({ renderChild }) => (\r\n  <div>\r\n    <h1>Root</h1>\r\n    {/* child routes won't render without this */}\r\n    {renderChild()}\r\n  </div>\r\n);\r\n\r\nconst Home = ({ route, renderChild }) => (\r\n  <div>\r\n    <h2>Home</h2>\r\n  </div>\r\n);\r\n\r\nconst Child = ({ renderChild }) => (\r\n  <div>\r\n    <h2>Child</h2>\r\n    {/* child routes won't render without this */}\r\n    {renderChild({ someProp: \"these extra props are optional\" })}\r\n  </div>\r\n);\r\n\r\nconst GrandChild = ({ someProp }) => (\r\n  <div>\r\n    <h3>Grand Child</h3>\r\n    <div>{someProp}</div>\r\n  </div>\r\n);\r\n```\r\n\r\nDocs and tests updated accordingly",
        "comments": 15
    },
    {
        "merged": false,
        "additions": 66,
        "deletions": 46,
        "changed_files": 3,
        "created_at": "2018-05-21T18:47:15Z",
        "closed_at": "2018-10-15T22:47:42Z",
        "merged_at": null,
        "body": "React Router's documentation states:\r\n\r\n> ## path: string\r\n> \r\n> Any valid URL path that [`path-to-regexp@^1.7.0`](https://github.com/pillarjs/path-to-regexp/tree/v1.7.0) understands.\r\n\r\nHowever, `path-to-regexp` officially support a RegExp as a parameter:\r\n\r\n> - **path** An Express-style string, an array of strings, or a regular expression.\r\n\r\nTechnically, providing a `RegExp` as a `path` worked, but it would throw an error because of the PropTypes restriction. This pull request includes the necessary changes, the new test, and the corrected documentation.\r\n\r\nA use case for that is something I just ran into: I needed to display something on all the pages _except_ for root, so I wrote a regexp that matches every string that has characters after the initial slash.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 17,
        "changed_files": 1,
        "created_at": "2018-05-19T12:14:20Z",
        "closed_at": "2018-05-19T18:58:34Z",
        "merged_at": null,
        "body": "I noticed that the match property is only updated in the state of the route when it is rendered.\r\nI think it should be interesting to merge state during render to the props of the rendered component so it gets the right url Params.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2662,
        "deletions": 14448,
        "changed_files": 12,
        "created_at": "2018-05-18T10:09:03Z",
        "closed_at": "2018-11-29T15:06:29Z",
        "merged_at": null,
        "body": "This pull request adds an `updateOnLocationChange` prop to `Route` and a similar config option to `withRouter`. This addresses the \"update blocking\" problem in a way that I didn't find in any other issue or PR (granted I only searched for ~30 minutes, so please do point me towards an existing issue / PR / reddit thread / dead sea scroll I may have missed). It was inspired by #6156 but from what I can gather, that's only the most recent in a long line of related issues.\r\n\r\nFrom the perspective of a `react-router` library consumer the `withRouter` solution to update blocking would change like so:\r\n\r\n```diff\r\n- const MyConnectedComponent = withRouter(connect(mapStateToProps)(MyComponent))\r\n+ const MyConnectedComponent = connect(mapStateToProps)(withRouter(MyComponent, {updateOnLocationChange: true}))\r\n```\r\n\r\n(The implementation is little more than `history.listen` + `forceUpdate`.)\r\n\r\nI propose this solution has the advantage of being isolated / local. With a deeply nested render tree sometimes there's an upstream update blocker (or more than one) keeping a downstream component from rendering. It seems like a shame to have to keep close track of a component's ancestors in order to make sure that it renders properly (performance-wise and developer-sanity-wise). This solution is also opt-in, so it shouldn't break any existing code out there.\r\n\r\nI've added some tests and updated all the relevant docs I could find. The docs go into more detail about the pros and cons of this approach, I figured it'd be silly to duplicate too much of that here.\r\n\r\nAnother option I considered was making `withUpdateOnLocationChange` its own HOC but that seemed a little odd to me. I could not imagine when I would want to use it *without* using `Route` or `withRouter`.\r\n\r\nI'm a first time contributor here :) I love this library, thanks for all your work! I did my best to follow the contribution guidelines, but I'm not sure I updated the `CHANGES.md` quite right and I also ended up with a bunch of updates to various `package-lock.json`s (not sure why). Also various other random files got autoupdated (by husky?). I thought these things might be intentional, let me know if not.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-05-09T07:57:41Z",
        "closed_at": "2018-10-15T22:06:11Z",
        "merged_at": "2018-10-15T22:06:11Z",
        "body": "if target is _self act as target is falsy",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2018-05-06T01:09:01Z",
        "closed_at": "2018-05-06T05:22:19Z",
        "merged_at": "2018-05-06T05:22:19Z",
        "body": "On line 23, fixed the spelling of representation",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2018-04-29T05:38:30Z",
        "closed_at": "2018-05-08T14:24:21Z",
        "merged_at": "2018-05-08T14:24:21Z",
        "body": "For Issue #6109. I updated the default value of `aria-current` on `NavLink` to `\"page\"`. I also added `\"false\"` as a valid option, as defined in the [spec for aria-current](https://www.w3.org/TR/wai-aria-1.1/#aria-current). \r\n\r\nAlso included are updated tests for `NavLink`, to reflect the above changes. The tests pass when I run `npm run test` in the root directory.\r\n\r\nPlease let me know if any further changes need to be made for this PR. If any documentation for `NavLink `needs to be changed, please send me a link to the locations that need to be modified, and I will update them accordingly. Thank you!",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 7,
        "changed_files": 3,
        "created_at": "2018-04-29T00:11:15Z",
        "closed_at": "2018-04-29T20:41:49Z",
        "merged_at": "2018-04-29T20:41:48Z",
        "body": "The most recent `path-to-regexp` versions are backward incompatible:\r\nhttps://github.com/pillarjs/path-to-regexp#compatibility-with-express--4x\r\nhttps://github.com/pillarjs/path-to-regexp/blob/master/History.md#200--2017-08-23\r\n\r\nJust so people don't waste their time reading the wrong documentation.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 400,
        "deletions": 9661,
        "changed_files": 4,
        "created_at": "2018-04-24T08:38:08Z",
        "closed_at": "2018-04-24T12:13:51Z",
        "merged_at": null,
        "body": "In some cases I want to allow the special keys (e.g. alt, ctrl, meta, shift) to be pressed while clicking on a Link component.\r\n\r\nThis new prop (default false) will allow just that.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 0,
        "changed_files": 5,
        "created_at": "2018-04-10T20:32:46Z",
        "closed_at": "2018-04-11T13:26:22Z",
        "merged_at": "2018-04-11T13:26:22Z",
        "body": "Webpack 4.0 introduced support for a `sideEffects` flag in a project's `package.json`: https://webpack.js.org/guides/tree-shaking/#mark-the-file-as-side-effect-free. This is awesome because we can now get Webpack's tree shaking to work as intended for most, if not all projects. \ud83c\udf89 \r\n\r\nI've noticed that in my projects where I've used `react-router-dom`, the recommended import syntax (eg. `import { Route } from 'react-router-dom'`) still pulls in the entire library. While react-router-dom and it's associated packages aren't _that_ large, I'm a bit of a performance junkie \ud83d\ude03. All this PR does is add the `sideEffects: false` flag to the `react-router-dom` package. I created a simple test repo to demo the effects of this flag: https://github.com/taylorc93/react-router-test. I'm noticing ~20KB of minified JS removed from my bundle as a result of this change.\r\n\r\nThe only thing I'm slightly unsure of is whether there are, in fact, side effects. From what I can see, there aren't any, but I could definitely be missing something. Let me know what you think / if there's anything else you need from me to get this merged!\r\n\r\nSide note: Love this project, I've been using it for years and it's worked fabulously. Keep up the great work!",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-04-06T05:21:51Z",
        "closed_at": "2018-04-06T12:21:20Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 41,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2018-04-03T16:20:51Z",
        "closed_at": "2018-04-03T17:21:48Z",
        "merged_at": "2018-04-03T17:21:48Z",
        "body": "This should make it clearer how to get a fork setup to make changes.\r\n\r\nI wonder, though, if we should add `prepare` scripts to each package. Lerna's [`bootstrap` runs `prepare` after installing](https://github.com/lerna/lerna#bootstrap), so we could just build in there and not have to manually call `npm run build`. It is probably slightly more involved because we don't want the website to be built on Travis, but nothing too complicated.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-03-21T08:47:56Z",
        "closed_at": "2018-03-21T14:49:54Z",
        "merged_at": "2018-03-21T14:49:54Z",
        "body": "Fixing that typo was easy, but I'd like also to clarify the following:\r\n\r\n> you should use a \\<BrowserRouter\\> if you have a server that responds to requests and a \\<HashRouter\\> if you are using a static file server\r\n\r\nIt seems to me that both descriptions apply to any situation, so I'm confused.\r\n\r\n> if you have a server that responds to requests\r\n\r\nWhat kind of a server there is that doesn't respond to requests?\r\n\r\n>  if you are using a static file server\r\n\r\nReact stuff is compiled and served as static assets, so it also applies to any case.\r\n\r\nMaybe it gets obvious as you dig deeper into the docs, but I just start reading it and feel like it should be more clear.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-03-20T09:18:27Z",
        "closed_at": "2018-03-20T12:48:56Z",
        "merged_at": null,
        "body": "",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 24,
        "deletions": 22,
        "changed_files": 1,
        "created_at": "2018-03-18T12:11:08Z",
        "closed_at": "2018-03-18T15:45:52Z",
        "merged_at": null,
        "body": "In the current `<Switch />` implementation, only the first matching route is rendered. This doesn't seem consistent with the behaviour of a `<Route />`, which according to the documentation should continue to be rendered if using a `children` prop (with `match` being null).\r\n\r\nThis PR adds a presence check for `children` on children of the `<Switch />` component to allow them to be rendered.\r\n\r\nThis behaviour is necessary in order to implement route animations within a Switch",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 59,
        "deletions": 30,
        "changed_files": 7,
        "created_at": "2018-03-13T13:30:27Z",
        "closed_at": "2018-03-26T14:25:10Z",
        "merged_at": "2018-03-26T14:25:10Z",
        "body": "It seems like react-router-redux assumes the action property is in the location object provided by the history module. So I've added the action property back into the store and added a selector. I've also updated the tests and added a test for this change.\r\n\r\nWe're interested in the action used to cause the route change, to react to `POP`s and `PUSH`s\r\n\r\nThe `location` object doesn't seem to have an `action` property when using `history/createBrowserHistory`\r\n\r\nThe createLocation function is missing the action property https://github.com/ReactTraining/history/blob/master/modules/LocationUtils.js#L5",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-03-06T09:28:37Z",
        "closed_at": "2018-03-06T16:39:59Z",
        "merged_at": "2018-03-06T16:39:59Z",
        "body": "Typo. Add missing word \"to\".",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1227,
        "deletions": 9077,
        "changed_files": 35,
        "created_at": "2018-03-02T09:35:30Z",
        "closed_at": "2018-03-02T12:46:13Z",
        "merged_at": null,
        "body": "\u4efb\u52a1\u8be6\u89c1#5993 ",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 38,
        "deletions": 0,
        "changed_files": 4,
        "created_at": "2018-03-02T06:20:36Z",
        "closed_at": "2018-03-02T12:58:51Z",
        "merged_at": null,
        "body": "I was helping someone on IRC who accidentally passed the global 'history' variable (instance of window.History), instead of the variable called 'history' in the readme.\r\n\r\nThis just adds a few checks with helpful errors when someone passes an invalid history.\r\n\r\nUnfortunately, I couldn't figure out how to get the tests running, so for now I put a testcase on [codesandbox](https://codesandbox.io/s/j7z531y9ww).\r\n\r\nEdit: I'm confused about what's going on in this repo. I had to `git commit --no-verify` to prevent the lerna script from completely reformatting CHANGES.md, and it was trying to update a bunch of package-lock.json files.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 794,
        "deletions": 8916,
        "changed_files": 31,
        "created_at": "2018-03-02T02:05:02Z",
        "closed_at": "2018-03-02T04:18:19Z",
        "merged_at": null,
        "body": "\u4efb\u52a1\u8be6\u89c1 #",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 25,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2018-03-01T11:25:06Z",
        "closed_at": "2018-03-01T13:42:43Z",
        "merged_at": null,
        "body": "When passing a `component` it can now either be a React element which has yet to be created (existing functionality), or an element that has already been created.\r\nThis functionality adds the ability to setup a component which props from the current closure whilst accepting props from the route.\r\n*Example:*\r\n```jsx\r\n// MyParentComponent.js\r\nrender(props) {\r\n  const myPage = (\r\n    <MyPage\r\n      a={props.a}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <Route path=\"/\" component={myPage}/>\r\n  );\r\n}\r\n```\r\n`MyPage` will now get `a` and route props.\r\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-02-22T19:16:25Z",
        "closed_at": "2018-03-04T00:46:17Z",
        "merged_at": "2018-03-04T00:46:17Z",
        "body": "this was hard to use without this extra note",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 15,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2018-02-22T11:49:50Z",
        "closed_at": "2018-02-22T17:02:31Z",
        "merged_at": null,
        "body": "According the docs:\r\n> You can get access to the history object\u2019s properties and the closest <Route>'s match via the withRouter higher-order component. withRouter will pass updated match, location, and history props to the wrapped component whenever it renders.\r\n\r\nIf you wrap component in `withRouter` but current route is not matched **your component will not be rendered** try example. This pull request changes this behaviour and make sure that component is always rendered.\r\n\r\nhttps://codesandbox.io/s/r0nx8z97qn\r\n\r\n```jsx\r\nimport React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { BrowserRouter, Route, withRouter, Link } from \"react-router-dom\";\r\n\r\nfunction Component() {\r\n  return <p>Here is Component.</p>\r\n}\r\n\r\nconst ComponentWithRouter = withRouter(Component);\r\n\r\nfunction App() {\r\n  const children = ({ match }) => {\r\n    return (\r\n      <div>\r\n        <p>This {!match && \"not\"} matched route</p>\r\n        <Component />\r\n        <ComponentWithRouter /> {/* this is not rendered if no match */}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <div>\r\n        <p>\r\n          <Link to=\"/\">/</Link>\r\n        </p>\r\n        <p>\r\n          <Link to=\"/abc\">/abc</Link>\r\n        </p>\r\n        <Route path=\"/abc\" children={children} />\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nrender(<App />, document.getElementById(\"root\"));\r\n```",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 230,
        "deletions": 26,
        "changed_files": 5,
        "created_at": "2018-02-18T22:09:05Z",
        "closed_at": "2018-02-19T14:25:30Z",
        "merged_at": null,
        "body": "Addresses #5955 ",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-02-17T07:41:59Z",
        "closed_at": "2018-02-18T03:38:29Z",
        "merged_at": "2018-02-18T03:38:29Z",
        "body": "Even when the issue template is used, this value seems to be ignored. If the user doesn't update the string we can probably assume that they are on the latest release, but hopefully the bold text will encourage people opening issues to set the correct version.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-02-12T15:39:23Z",
        "closed_at": "2018-02-12T18:19:03Z",
        "merged_at": "2018-02-12T18:19:03Z",
        "body": "`true` to allow the transition was not yet shown, do you think it's a useful addition to the documentation ?",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2018-02-10T10:49:09Z",
        "closed_at": "2018-03-30T08:52:09Z",
        "merged_at": null,
        "body": "When redirecting, `location.state` is lost. This can be useful to pass information like `state: {permanent: true}` which could result in HTTP 301 response.\r\n\r\nSpiritual continuation of #5930; no tests yet, just a proposal.",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2018-02-09T13:27:09Z",
        "closed_at": "2018-02-09T20:12:37Z",
        "merged_at": null,
        "body": "This allows easily assigning context information at redirect time. It would turn the [example code for handling this](https://github.com/ReactTraining/react-router/blob/master/packages/react-router-dom/docs/guides/server-rendering.md#adding-app-specific-context-information) into just\r\n\r\n```jsx\r\n  <Redirect to=\"/somewhere\" addContext={{permanent: true}} />\r\n```\r\n\r\nthoughts?",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 15,
        "deletions": 15,
        "changed_files": 2,
        "created_at": "2018-02-05T09:05:42Z",
        "closed_at": "2018-02-05T12:31:37Z",
        "merged_at": null,
        "body": "It seems like [react-router-redux examples](https://github.com/ReactTraining/react-router/tree/master/packages/react-router-redux/examples) have wrong names of Presentational and Container Components.\r\n\r\n---\r\nAs far as I know we should call `connect()` this way:\r\n```jsx\r\nconst MyContainer = connect(mapStateToProps, mapDispatchToProps)(MyComponent)\r\n     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 container that passes    \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518      \u2191\r\n                         state and action creators                    \u2502\r\n                         into your component \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\r\n\r\ni see this way of using connect there:\r\n- [Usage with React \u00b7 Redux](https://redux.js.org/docs/basics/UsageWithReact.html) | [Full Source](https://github.com/reactjs/redux/tree/master/examples/todos)\r\n- [connect() - returns - react-redux/api.md](https://github.com/reactjs/react-redux/blob/master/docs/api.md#returns)\r\n---\r\nInstead in current examples we see opposite:\r\n```jsx\r\nconst MyComponent = connect(mapStateToProps, mapDispatchToProps)(MyContainer)\r\n     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 component passes  \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518           \u2191\r\n                         to container! \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\r\n---\r\nI'm new in react world so maybe I'm missing something.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 12858,
        "deletions": 986,
        "changed_files": 25,
        "created_at": "2018-01-29T04:16:55Z",
        "closed_at": "2018-09-20T19:24:08Z",
        "merged_at": "2018-09-20T19:24:07Z",
        "body": "## Update!\r\n\r\nOK, a test release is on npm under the `next` tag.\r\n```\r\nnpm install react-router@next react-router-dom@next\r\n```\r\nIt's just those two packages for now, but please give them a try. Report any problems in this PR.\r\n\r\n## Continued...\r\n\r\nCloses #5901.\r\n\r\n~This will obviously not work on Travis until 16.3.0 is out.~ But I can confirm it works locally. \r\n\r\nTo play along at home, simply clone `react` in a parallel folder, `yarn && yarn run build`, and then copy over the files by hand back to this repo:\r\n```sh\r\ncp -a ../react/build/node_modules/react/* node_modules/react/\r\ncp -a ../react/build/node_modules/react-dom/* node_modules/react-dom/\r\n```\r\nThis is mostly a brute force approach. All the tests pass, but I'm doing whatever is necessary to get it to work. There may be some more radical refactors warranted with the new API. The new bitmask stuff is neato.\r\n\r\nWhile not BC yet, I'm least keeping available the old context API hooks. I need to feature sniff `unstable_createContext`. \r\n\r\nOutstanding stuff:\r\n- [x] ~Wait for a React release (duh)~\r\n- [x] ~`<Redirect>`, `<Prompt>`~\r\n- [x] ~`Router#getChildContext` references `this.context.router`~\r\n- [x] ~`<Link>`~\r\n- [x] ~React Router Native stuff~\r\n- [x] ~<= 16.2 compatibility~",
        "comments": 25
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-01-27T07:28:24Z",
        "closed_at": "2018-01-27T16:46:07Z",
        "merged_at": "2018-01-27T16:46:07Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 246,
        "deletions": 65,
        "changed_files": 9,
        "created_at": "2018-01-26T20:03:27Z",
        "closed_at": "2018-01-26T21:46:29Z",
        "merged_at": null,
        "body": "Having Switch use an `enabled` flag on each of it's children would simplify routing.\r\n\r\nFor example, I want to put some of my routes behind an auth check, redirecting to a login screen. I also want to enable some routes for admins while regular users should see a 404 screen.\r\n\r\n```jsx\r\nexport default (routeProps) => (\r\n  <Layout>\r\n    <Switch>\r\n      <Route path=\"/login\" component={Login} />\r\n      <Route path=\"/reset_password\" component={ResetPassword} />\r\n      {!routeProps.user.is_authenticated && <Redirect to=\"/login\" />}\r\n      <Route path=\"/list\" component={List} />\r\n      <Route path=\"/:id/edit\" render={renderProps => \r\n        routeProps.user.is_admin ? <Edit {...renderProps}  />  : <FourOhFour />\r\n      } />\r\n      <Route path=\"/:id\" component={Details} />\r\n      <Route component={FourOhFour} />\r\n    </Switch>\r\n  </Layout>\r\n);\r\n```\r\nWhich works OK, but gets tedious and hard to read when it's all over the place.\r\nIt would also be nice to be able to fall through the `/:id/edit` route instead of putting the alternative inside the Routes render.\r\n\r\nAdding an `enabled` flag that is used by Switch would let me do this instead:\r\n```jsx\r\nexport default (routeProps) => (\r\n  <Layout>\r\n    <Switch>\r\n      <Route path=\"/login\" component={Login} />\r\n      <Route path=\"/reset_password\" component={ResetPassword} />\r\n      <Redirect enabled={!routeProps.user.is_authenticated} to=\"/login\" />\r\n      <Route path=\"/list\" component={List} />\r\n      <Route path=\"/:id/edit\" enabled={routeProps.user.is_admin} component={Edit} /> \r\n      <Route path=\"/:id\" component={Details} />\r\n      <Route component={FourOhFour} />\r\n    </Switch>\r\n  </Layout>\r\n);\r\n```\r\n\r\nThe main thing I want out of the PR is to enable Switch's to check it's children for the `enabled` flag.\r\nI felt that it would be confusing to have a flag on Route and Redirect that is used by Switch but not used by the components themselves, so also added handling of `enabled` to Route and Redirect themselves.\r\n\r\nThis means Route's not in a Switch could also be enabled/disabled.\r\nFor example in this routing only `<Two />` would be rendered, instead of One and Two.\r\n\r\n```jsx\r\nfunction OurRouter(routeProps) {\r\n  return (\r\n    <ConnectedRouter history={props.history}>\r\n      <div>\r\n        <Route enabled={false} path=\"/theroute\" component={One} />\r\n        <Route enabled={true} path=\"/theroute\" component={Two} />\r\n      </div>\r\n    </ConnectedRouter>\r\n  );\r\n}\r\n\r\n```\r\n\r\nA bunch of the edits in the .md files seem to be from the pretty-quick run in the precommit hook...\r\nSorry about that. Please let me know if I should try to get that reverted.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 52,
        "deletions": 42,
        "changed_files": 2,
        "created_at": "2018-01-23T15:45:57Z",
        "closed_at": "2018-03-30T00:29:48Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 53,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2018-01-22T20:17:45Z",
        "closed_at": "2018-01-24T02:02:20Z",
        "merged_at": null,
        "body": "Should (hopefully) resolve #4962\r\n\r\nContext: react-router-config\r\n\r\nIntroduced two new route properties:\r\n1. precondition: `(RouteProps) => boolean`\r\n2. onPreconditionFailed: `(RouteProps && ExtraProps && Route) => React.Node`\r\n\r\n### Example: Authentication\r\n```jsx\r\nconst shouldAuth = ({ match }) => checkAuth(match.params.userId);\r\nconst routes = [\r\n  {\r\n    path: '/foo/bar/:userId',\r\n    component: MyComponent,\r\n    precondition: shouldAuth,\r\n    onPreconditionFailed: ({ location }) => \r\n        <Redirect to={{ pathname: '/login', state: { location.state } }} from={location.pathname} />\r\n  },\r\n  {\r\n    path: '/login',\r\n    component: MyLoginComponent,\r\n  }\r\n]\r\n```\r\nOther use cases including, but not limited to:\r\n- IP filtering\r\n- Feature control\r\n- AB testing",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 154,
        "deletions": 16,
        "changed_files": 2,
        "created_at": "2018-01-22T17:17:28Z",
        "closed_at": "2018-03-30T00:26:31Z",
        "merged_at": null,
        "body": "When checking for matched routes in `<Switch />`, traverse fragments to\r\ndetermine the matched route.\r\n\r\nFixes https://github.com/ReactTraining/react-router/issues/5785",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 146,
        "deletions": 23,
        "changed_files": 6,
        "created_at": "2018-01-20T19:20:16Z",
        "closed_at": "2018-10-15T22:02:04Z",
        "merged_at": "2018-10-15T22:02:04Z",
        "body": "I piggybacked off of the tests written for `matchPath()` by @Shervanator at #5393, and I'm tackling the issue described by @mjackson at #5866.\r\n\r\n- Added support for arrays of paths to `<Route>` and `matchPath()`\r\n- Added a test case to demonstrate that `match.path` is a string\r\n- Added a test case to demonstrate that the component doesn't remount on switches between two matching paths\r\n\r\nI'm happy to add docs and examples if everybody is satisfied with the behavior. Let me know if you think any changes are in order as well.",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2018-01-18T05:28:49Z",
        "closed_at": "2018-01-18T14:47:32Z",
        "merged_at": "2018-01-18T14:47:31Z",
        "body": "There was an issue with the previous `pretty-quick` release that added all edited files (not just staged ones) when committing, which is fixed in this release.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-01-16T08:14:32Z",
        "closed_at": "2018-01-16T16:47:11Z",
        "merged_at": null,
        "body": "Our project is managed by `yarn`.\r\nI install the react-router-redux@next by `npm`.\r\nIt caused some issues. \r\nIt is better to add yarn install command to README.\r\n\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 490,
        "deletions": 205,
        "changed_files": 2,
        "created_at": "2018-01-12T19:59:54Z",
        "closed_at": "2018-01-13T00:52:48Z",
        "merged_at": "2018-01-13T00:52:48Z",
        "body": "This PR adds [`pretty-quick`](https://github.com/azz/pretty-quick) to automatically run `prettier` on staged files before committing. There are [two choices listed on the prettier site](https://prettier.io/docs/en/precommit.html), `pretty-quick` and [`lint-staged`](https://github.com/okonet/lint-staged), but I went with `pretty-quick` because its config is simpler and I don't think RR needs any other pre-commit linting.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2018-01-10T04:50:52Z",
        "closed_at": "2018-01-10T05:56:43Z",
        "merged_at": null,
        "body": "This was a response to [Issue 4962](https://github.com/ReactTraining/react-router/issues/4962). I posted a solution on there which I've copied below:\r\n\r\nI modified the `react-router-config`/[renderRoutes.js](https://github.com/ReactTraining/react-router/blob/master/packages/react-router-config/modules/renderRoutes.js) file to this:\r\n\r\n```javascript\r\n// renderRoutes.js\r\n\r\nimport React from 'react'\r\nimport Switch from 'react-router/Switch'\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nconst renderRoutes = (routes, authed, authPath, extraProps = {}, switchProps = {}) => routes ? (\r\n  <Switch {...switchProps}>\r\n    {routes.map((route, i) => (\r\n      <Route\r\n        key={route.key || i}\r\n        path={route.path}\r\n        exact={route.exact}\r\n        strict={route.strict}\r\n        render={(props) => {\r\n          \r\n          if( !route.restricted || authed || route.path == authPath) {\r\n            return <route.component {...props} {...extraProps} route={route}/>\r\n          }\r\n          const redirPath = authPath ? authPath : '/login'\r\n          return <Redirect to={{pathname: redirPath, state: {from: props.location}}}/>\r\n        }}\r\n      />\r\n    ))}\r\n  </Switch>\r\n) : null\r\n\r\nexport default renderRoutes\r\n```\r\n\r\nI added `authed` and `authPath` as two new arguments to `renderRoutes` function.\r\n* `authed` is true if user is logged in and false otherwise.\r\n* `authPath` is the path you want to redirect to (e.g., /login) if `authed` is false. \r\n\r\nHere is how you call the `renderRoutes` function:\r\n```javascript\r\n// caller of renderRoutes\r\n\r\nimport React from 'react'\r\nimport { Switch } from 'react-router-dom'\r\n//import { renderRoutes } from 'react-router-config'\r\nimport renderRoutes from '../renderRoutes'\r\nimport routes from '../routes3'\r\n\r\nconst authed = false // <-- You can change this\r\nconst authPath = '/login' // <-- You can change this\r\n\r\nconst Main = () => (\r\n   <main>\r\n      <Switch>\r\n         {renderRoutes(routes, authed, authPath)}\r\n      </Switch>\r\n   </main>\r\n)\r\n\r\nexport default Main\r\n```\r\n\r\nHaving `authed` and `authPath` configurable from the caller of renderRoutes is desirable because it gives you more control over these parameters from `redux` / server side. I have not tried trying this solution out with `redux` or the server side logic for logging users in but that's what I'm going to be doing next.\r\n\r\nLastly, an important change need to be added to the routes object as part of this solution. Specifically, for each route, you need to specify a `restricted` field, which can be true if you want the page to be accessible only when `authed` is true, or false if the page is a public page that anyone can access. For example:\r\n\r\n```javascript\r\n// routes.js\r\nimport Home from './components/Home'\r\nimport Login from './components/User/Login'\r\nimport User from './components/User/User'\r\n\r\nconst routes = [\r\n\t{ path: '/',\r\n\t\texact: true,\r\n\t\trestricted: false,  // <-- NEW\r\n\t\tcomponent: Home,\r\n\t},\r\n\t{\r\n\t\tpath: '/login',\r\n\t\trestricted: false, // <-- NEW\r\n\t\tcomponent: Login,\r\n\t},\r\n\t{\r\n\t\tpath: '/user',\r\n\t\trestricted: true, // <-- NEW\r\n\t\tcomponent: User,\r\n\t},\r\n\t{\r\n\t\tpath: '*',\r\n\t\trestricted: false, // <-- NEW\r\n\t\tcomponent: NotFound\r\n\t}\r\n]\r\n\r\n```\r\n\r\nFor completeness, this is what the `Login` component looks like:\r\n\r\n```javascript\r\n// Login.js\r\n\r\nimport React from 'react'\r\n\r\nclass Login extends React.Component {\r\n   render() {\r\n      const { from } = this.props.location.state || { from: {pathname: '/' } }\r\n         return (\r\n\t    <div>\r\n\t       <p>You must log in to view this page at {from.pathname} </p>\r\n\t          <button onClick={this.login}>Log in </button>\r\n\t     </div>\r\n\t )\r\n   }\r\n}\r\n\r\nexport default Login\r\n```\r\n\r\n`this.props.location.state` tells you where you last were before you got directed to `/login`. The idea for this feature came out of the `PrivateRoute` [tutorial](https://reacttraining.com/react-router/web/example/auth-workflow).",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 12,
        "deletions": 12,
        "changed_files": 10,
        "created_at": "2018-01-07T22:53:57Z",
        "closed_at": "2018-01-08T01:21:39Z",
        "merged_at": null,
        "body": "Avoid re-renders on unneeded components. This is usually for Link (and NavLink), although it can include others like Route.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 118,
        "deletions": 119,
        "changed_files": 25,
        "created_at": "2018-01-05T02:21:19Z",
        "closed_at": "2018-01-05T17:20:54Z",
        "merged_at": "2018-01-05T17:20:54Z",
        "body": "```jsx\r\n<Because this=\"looks better than\" />\r\n```\r\n```js\r\n<This does />\r\n```",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 22,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-01-04T17:59:18Z",
        "closed_at": "2018-01-05T01:06:32Z",
        "merged_at": "2018-01-05T01:06:32Z",
        "body": "See #5818 ",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 138,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2018-01-04T13:16:04Z",
        "closed_at": "2018-01-04T14:57:47Z",
        "merged_at": null,
        "body": "StackRoutes, make the route act like modal stacks, just like native app development(eg android activity).",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-01-03T03:54:05Z",
        "closed_at": "2018-01-03T14:27:11Z",
        "merged_at": "2018-01-03T14:27:11Z",
        "body": "Update copyright year to include 2018",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-01-01T00:01:44Z",
        "closed_at": "2018-01-01T03:02:41Z",
        "merged_at": "2018-01-01T03:02:41Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-12-18T06:12:20Z",
        "closed_at": "2017-12-18T14:53:34Z",
        "merged_at": "2017-12-18T14:53:34Z",
        "body": "In v3 the docs [clearly indicated](https://github.com/ReactTraining/react-router/blob/07d6b50ab9a9b6d1940d67abe530044be7f7dc99/docs/API.md#others) that `<Link>` takes DOM props to be put on `<a>`.\r\nIn v4 docs this information [is missing](https://reacttraining.com/react-router/web/api/Link).\r\n\r\nNevertheless, the functionality [is still here](https://github.com/ReactTraining/react-router/blob/96410c69be1ca32e294bf83e7d1321c39ecd286b/packages/react-router-dom/modules/Link.js#L76).\r\nThe contributors [refer to it](https://github.com/ReactTraining/react-router/issues/5760#issuecomment-347979291) as expected, public functionality.\r\nThe [`activeClassName` prop on `NavLink`](https://reacttraining.com/react-router/web/api/NavLink/activeClassName-string) clearly suggests that a regular `className` is also accepted.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 27,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2017-12-14T21:54:02Z",
        "closed_at": "2018-01-05T19:50:59Z",
        "merged_at": "2018-01-05T19:50:59Z",
        "body": "First off - thanks for creating this. Me, myself and my team - and thousands of other developers across the world - are building incredibly successful apps thanks to your hard work and sexy brains. I hugely appreciate your efforts.\r\n\r\nNow, to business.\r\n\r\nWhenever you forget to set the `to` property on a `<Link />` component, You get the following error message:\r\n\r\n![image](https://user-images.githubusercontent.com/1307267/34016039-b5bc8d4c-e120-11e7-953d-f675019320ed.png)\r\n\r\nIf I scroll long enough up the error log, you'll see the error from prop types telling me I forgot to set the required `to` prop - but it usually takes me a minute to figure it out. With the rising of `create-react-app` - many people will probably not find it for a bit, because they are busy looking through the stack traces in the error overlay (like I was in my screen shot above).\r\n\r\n**This PR adds an invariant check** (I'm very open to suggestions about the error message) to ensure it's sent in. If not, the code will throw before it crashes and burns deep down in the `history` package.\r\n\r\nThoughts? It's my first time contributing to your code base, so if I screwed up some formatting way of thinking, please accept my apologies.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 31,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2017-12-14T10:56:51Z",
        "closed_at": "2017-12-14T15:28:52Z",
        "merged_at": "2017-12-14T15:28:52Z",
        "body": "A followup PR of [this discussion](https://github.com/ReactTraining/react-router/pull/5786#issuecomment-351220936).\r\n\r\ncc @ericp96",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-12-08T17:24:01Z",
        "closed_at": "2017-12-08T20:17:10Z",
        "merged_at": "2017-12-08T20:17:10Z",
        "body": "make 'history' the required prop of ConnectedRouter",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2017-12-01T13:05:33Z",
        "closed_at": "2019-09-17T23:44:13Z",
        "merged_at": null,
        "body": "I wanted to re-create the animation I'd seen in the Facebook iOS app for swapping between tabs, where they get shunted left or right as if you're tabs are all on one flat plane and you're simply panning left/right across it.  To do this, I needed a way to intercept the switch component right before it renders the resulting element, and render something slightly different.  I also needed to know the index of the matched item, so I knew whether we were going left or right.\r\n\r\nThis render prop provides the hook I needed, and I imagine would also enable lots of alternative page transitions as well.\r\n\r\nYou can see it being used in [react-router-animated-switch](https://github.com/mopedjs/moped/tree/master/packages/react-router-animated-switch) and there's a live demo at https://adoring-austin-f8272b.netlify.com",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 34,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2017-11-24T16:57:51Z",
        "closed_at": "2017-11-25T22:40:37Z",
        "merged_at": "2017-11-25T22:40:37Z",
        "body": "In order to render routes in a `modal` using `renderRoutes` (https://reacttraining.com/react-router/web/example/modal-gallery), `renderRoutes` receives an optional `location` argument to set on the `Switch` component.",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 4054,
        "deletions": 7061,
        "changed_files": 4,
        "created_at": "2017-11-22T14:48:10Z",
        "closed_at": "2017-11-22T16:16:57Z",
        "merged_at": "2017-11-22T16:16:57Z",
        "body": "As explained in [this comment](https://github.com/ReactTraining/react-router/pull/5748#issuecomment-346366936).\r\n\r\nSorry about that.\r\n\r\nThanks,\r\n\r\nJosep",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 19,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2017-11-22T12:48:26Z",
        "closed_at": "2017-11-22T14:18:28Z",
        "merged_at": "2017-11-22T14:18:28Z",
        "body": "Hi and thanks a lot for this package,\r\n\r\nI've notice a pretty annoying bug with the `createMatchSelector`. In this PR I've added a test to reproduce the bug and a fix.\r\n\r\nBasically what happens is that the selector doesn't update the `match` object if what have change is the `isExact` property.\r\n\r\nFor instance, if I have a \"matchSelector\" for the path \"/sushi\" and the user navigates from \"/sushi\" to \"/sushi/dynamite\", despite of the fact that the `match` object is different (before it was an exact match and now it it's not) the previously memoized match is the one that is returned.\r\n\r\nIt's an easy fix.\r\n\r\nThanks,\r\n\r\nJosep",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-11-21T05:40:39Z",
        "closed_at": "2017-11-21T15:55:21Z",
        "merged_at": "2017-11-21T15:55:21Z",
        "body": "`API's` is possessive, `APIs` is the plural of `API` (I think. If I'm wrong I'm about to learn some grammar!)",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2017-11-20T11:20:18Z",
        "closed_at": "2017-11-21T02:02:37Z",
        "merged_at": null,
        "body": "When I rendered page which have to redirect, my child component push to history new route but `ConnectedRouter` did't dispatch action `LOCATION_CHANGE` a second time, because subscription occurs after render `Redirect` component .\r\n\r\n``` \r\n<Provider store={ store }>\r\n  <ConnectedRouter history={history}>\r\n     <Route exact path=\"/\" render={() => (<Redirect to=\"/test\" />)} />    \r\n  </ConnectedRouter>\r\n</Provider>\r\n```\r\nSo, I think to fix this case needs move `history.listen` from componentDidMount to componentWillMount",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-11-15T14:01:12Z",
        "closed_at": "2017-11-15T15:04:48Z",
        "merged_at": "2017-11-15T15:04:48Z",
        "body": "Correct me if I'm wrong, but I believe `history.location.state` is an `object` and not a `string`?",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-11-14T10:29:27Z",
        "closed_at": "2017-11-14T15:21:57Z",
        "merged_at": null,
        "body": "Change prop type of Route component's 'path' prop to be either string or object (in order there would not be a  warning on regexp passed).",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 3515,
        "deletions": 1610,
        "changed_files": 9,
        "created_at": "2017-11-13T19:05:11Z",
        "closed_at": "2018-01-05T21:03:35Z",
        "merged_at": "2018-01-05T21:03:34Z",
        "body": "I'd also like to get rid of those inline loaders, but that wasn't as straightforward, so I skipped it for the time being.",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 116,
        "deletions": 87,
        "changed_files": 2,
        "created_at": "2017-11-12T16:36:04Z",
        "closed_at": "2018-03-14T03:11:36Z",
        "merged_at": "2018-03-14T03:11:36Z",
        "body": "Currently, there is an inconsistency between the pseudo-history used by the `<StaticRouter>` and the histories created by the `history` package because the `history` package creates locations with decoded pathnames, while the pseudo-history does not. This PR updates the `<StaticRouter>` to use the `createLocation` function from the `history` package to ensure consistent decoding between `<StaticRouter>` and the other routers.\r\n\r\nFixes #5296. #5359 is also partially fixed by this, but that also includes `matchPath` tests which are outside the scope of this PR.",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 3290,
        "deletions": 4839,
        "changed_files": 44,
        "created_at": "2017-11-11T19:42:35Z",
        "closed_at": "2017-11-13T16:07:31Z",
        "merged_at": "2017-11-13T16:07:31Z",
        "body": "Previously, react-router-dom's UMD builds contained duplicate code because they were fetching from both `packages/react-router/node-modules` and `packages/react-router-dom/node_modules`. With hoisting, this build is now fetching from the root `node_modules`.\r\n\r\nI don't think that the changes to the `react-router-dom/rollup.config.js` are actually necessary since rollup will try to resolve from a parent `node_modules`, but I wanted to be explicit about that.\r\n\r\nFixes #5718.",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 196,
        "deletions": 2,
        "changed_files": 6,
        "created_at": "2017-11-10T02:31:06Z",
        "closed_at": "2018-06-06T16:03:39Z",
        "merged_at": null,
        "body": "New pull request based on #5614 ",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 7,
        "changed_files": 2,
        "created_at": "2017-11-09T18:27:47Z",
        "closed_at": "2018-09-21T01:46:00Z",
        "merged_at": null,
        "body": "This PR takes advantage of the fact that with React 16, a component can return multiple elements.\r\n\r\n```js\r\n// 15\r\nReactDOM.render((\r\n  <BrowserRouter>\r\n    <div>\r\n      <One />\r\n      <Two />\r\n    </div>\r\n  </BrowserRouter>\r\n), holder);\r\n\r\n// 16\r\nReactDOM.render((\r\n  <BrowserRouter>\r\n    <One />\r\n    <Two />\r\n  </BrowserRouter>\r\n), holder);\r\n```\r\n\r\nThe `invariant` call will still throw in React 15 if the user passes multiple children to a `<Router>`. I'm not actually sure if there is a convenient way to test this. If someone is using React 15 and attempts to pass multiple children, the `invariant` will throw before the `render` function is called, so the changes to the `render` function should have no effect",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-11-09T16:36:37Z",
        "closed_at": "2017-11-09T20:36:58Z",
        "merged_at": "2017-11-09T20:36:58Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-11-06T21:35:40Z",
        "closed_at": "2017-11-07T01:21:16Z",
        "merged_at": "2017-11-07T01:21:16Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-11-06T09:33:02Z",
        "closed_at": "2017-11-06T15:23:28Z",
        "merged_at": null,
        "body": "In older versions of the router the default behavior had been to pass all properties from a parent component to its children. e.g as can be seen in https://scotch.io/tutorials/react-on-the-server-for-beginners-build-a-universal-react-and-node-app\r\n\r\n```\r\nconst routes = (\r\n  <Route path=\"/\" component={Layout}>\r\n    <IndexRoute component={IndexPage}/>\r\n    <Route path=\"athlete/:id\" component={AthletePage}/>\r\n    <Route path=\"*\" component={NotFoundPage}/>\r\n  </Route>\r\n);\r\n```\r\n\r\nWhat happened here is that in the `Layout` component,  we could create helper method via HOC components and those helper were injected into the child component e.g. IndexPage\r\n\r\nThe change I propose is to bring back that default behavior.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 18,
        "deletions": 16,
        "changed_files": 2,
        "created_at": "2017-11-06T07:46:16Z",
        "closed_at": "2017-11-06T15:12:30Z",
        "merged_at": "2017-11-06T15:12:30Z",
        "body": "For beginners like me it would be nice if you would use the latest version from react-transition-group in your Animations example. In v2 of react-transition-group the implementation for CSS Transitions changed slightly.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-11-02T16:42:08Z",
        "closed_at": "2017-11-02T17:45:33Z",
        "merged_at": "2017-11-02T17:45:33Z",
        "body": "the path is wrong",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-11-02T09:09:56Z",
        "closed_at": "2017-11-02T15:02:03Z",
        "merged_at": "2017-11-02T15:02:03Z",
        "body": "After upgrading to React 16 the react-router v3 throws a peerDependency warning.\r\n\r\nThis fix it to stop this warning and allow downstream modules to build without peerDependency failures.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-11-01T07:53:53Z",
        "closed_at": "2017-11-01T14:07:33Z",
        "merged_at": "2017-11-01T14:07:33Z",
        "body": "The `./` there is important to give the correct link when rendered.\r\n\r\nNote that this is not related to #5259\r\n\r\nAlso note that this breaks not the link when browsing github repo, but for the [website](https://reacttraining.com/react-router/web/api/Switch/Switch-props) - the hyperlink points to `/react-router/location.md` instead of `/react-router/web/api/location.md`",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 10308,
        "deletions": 1576,
        "changed_files": 56,
        "created_at": "2017-10-31T13:59:58Z",
        "closed_at": "2017-10-31T15:34:28Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 337,
        "deletions": 103,
        "changed_files": 11,
        "created_at": "2017-10-27T06:07:25Z",
        "closed_at": "2017-10-27T14:18:38Z",
        "merged_at": null,
        "body": "This is a PR demonstrating one possible implementation of name-spacing react-router-redux to allow the management of multiple routers via redux. Please see this feature request - https://github.com/ReactTraining/react-router/issues/5663.\r\n\r\nIt adds the abstractions that we currently need to dispatch router actions to multiple routers, while remaining backward compatible with the simple interface of react-router-redux.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 0,
        "changed_files": 4,
        "created_at": "2017-10-26T14:11:07Z",
        "closed_at": "2017-11-08T16:56:40Z",
        "merged_at": "2017-11-08T16:56:40Z",
        "body": "I need this so I can build up parameterized URLs outside of a React component, such as in a saga.",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 10,
        "changed_files": 1,
        "created_at": "2017-10-24T15:53:03Z",
        "closed_at": "2017-10-24T17:26:16Z",
        "merged_at": null,
        "body": "The render method computes what `href` should be. This causes challenges when developers want to extend the `Link` component to render a link that is not an anchor tag. For example, developers want to use their own design-language-system component. Now they can:\r\n\r\n```javascript\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport DLSLink from 'path/to/DLSLink';\r\n\r\nclass ReactRouterDlsLink extends RouterLink {\r\n  render() {\r\n    const { innerRef, ...props } = this.props;\r\n    const href = this.getHref();\r\n\r\n    return (\r\n      <DLSLink {...props} onPress={this.handleClick} href={href} ref={innerRef} />\r\n    );\r\n  }\r\n}\r\n```",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2017-10-24T05:42:53Z",
        "closed_at": "2017-10-24T14:11:51Z",
        "merged_at": "2017-10-24T14:11:51Z",
        "body": "If one uses the `createMatchSelector` selector function provided by this library (presumbly using `connect`) in a component that could potentially be in an uninitialized state where the `router` property has not yet been initialized by redux (i.e. the root `<Router>` component of your route hierarchy), the line at https://github.com/ReactTraining/react-router/blob/master/packages/react-router-redux/modules/selectors.js#L9 causes the selector to throw an error by destructuring on the `undefined` return value of `getLocation(state)`.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-10-23T17:48:22Z",
        "closed_at": "2017-10-23T19:59:51Z",
        "merged_at": null,
        "body": "I'm using the event LOCATION_CHANGE to load resources based on his location, rather than based on a component loading, there's a case where I want to know if the user is navigating or replacing the current url",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 113,
        "deletions": 104,
        "changed_files": 2,
        "created_at": "2017-10-19T17:06:55Z",
        "closed_at": "2017-11-10T17:26:15Z",
        "merged_at": "2017-11-10T17:26:15Z",
        "body": "I made some general improvements to things I noticed in the examples:\r\n\r\n- Removed duplicated imports;\r\n- Removed semicolons; \r\n- Changed indentation style;\r\n- Fixed `authReducer` which was removing any props other than `isAuthenticated` because of the spread operator and also triggering an update on default case;",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-10-18T20:39:18Z",
        "closed_at": "2017-10-19T00:31:08Z",
        "merged_at": "2017-10-19T00:31:08Z",
        "body": "fixes #5637 where requireing index.js would fail.\r\n\r\nReproduction steps:\r\n\r\n```\r\n> require('react-router-redux');\r\nError: Cannot find module './selectors'\r\n    at Function.Module._resolveFilename (module.js:527:15)\r\n    at Function.Module._load (module.js:476:23)\r\n    at Module.require (module.js:568:17)\r\n    at require (internal/module.js:11:18)\r\n    at Object.<anonymous> (/home/halkeye/git/sauce/billing/node_modules/react-router-redux/index.js:6:18)\r\n    at Module._compile (module.js:624:30)\r\n    at Object.Module._extensions..js (module.js:635:10)\r\n    at Module.load (module.js:545:32)\r\n    at tryModuleLoad (module.js:508:12)\r\n    at Function.Module._load (module.js:500:3)\r\n```",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 70,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2017-10-18T10:47:21Z",
        "closed_at": "2017-11-07T20:56:59Z",
        "merged_at": null,
        "body": "We have developed an extended switch component that interprets nested routes.\r\n\r\nEx:\r\n\r\n\\<BrowserRouter>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\<InceptionSwitch>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\<DashboardTemplate exact path=\"/dashboard\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\<Route exact path=\"/profile\" component={Dashboard} />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\<Route exact path=\"/settings\" component={Settings} />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\<Route component={NoMatch}/>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\</DashboardTemplate>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\<Route exact path=\"/\" component={Homepage} />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\</InceptionSwitch>\r\n\\</BrowserRouter>\r\n\r\n\r\nSo with this code our application response to:\r\n\r\nRoute: /\r\nRoute: / dashboard / profile\r\nRoute: / dashboard / settings",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-10-16T09:40:12Z",
        "closed_at": "2017-10-16T12:25:53Z",
        "merged_at": null,
        "body": "`history` is is listed as dependency in project's package.json, so there should be no need for explicit install by user",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 20,
        "deletions": 8,
        "changed_files": 3,
        "created_at": "2017-10-13T21:08:27Z",
        "closed_at": "2017-10-14T17:00:50Z",
        "merged_at": null,
        "body": "enable Router to be hooked on `onUnmatch` so that application could handle location when the location doesn't match any of the defined routes.\r\n\r\nAlthough we can append a `<Route path=\"/*\" onEnter={}/>` in the end of Route definition to match any URL, it make the same code not working well on server side.\r\n\r\nSample use case:\r\n\r\n~~~~\r\nimport {match, Router, browserHistory} from 'react-router';\r\nimport {routes} from './routes';\r\nimport {App} from './app';\r\n\r\nmatch({routes, history: browserHistory}, (error, redirectLocation, renderProps) => {\r\n  if (renderProps) {\r\n    renderProps.onUnmatch = function(location) {\r\n        window.location.reload(); //force the page to refresh to hit the server again\r\n    };\r\n  } else {\r\n     alert(\"should not happen here\");\r\n  }\r\n\r\n  var el = React.createElement(\r\n      App, { },\r\n      React.createElement(Router, renderProps)\r\n  );\r\n\r\n  render(el, document.getElementById('root'));\r\n});\r\n\r\n~~~~\r\nFor various reason, we need to put the unmatched URL page into another server, and the those servers are managed by load balancer.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 160,
        "deletions": 39,
        "changed_files": 1,
        "created_at": "2017-10-12T21:51:24Z",
        "closed_at": "2017-11-10T02:32:12Z",
        "merged_at": null,
        "body": "First of all: totally open to feedback here.  I needed server-side rendering to be done for [a variety of reasons](https://medium.com/@cereallarceny/server-side-rendering-with-create-react-app-fiber-react-router-v4-helmet-redux-and-thunk-275cb25ca972) with a client of mine.  I haven't found any sufficiently updated tutorials using `ConnectedRouter`, so I made one myself once I figured it all out.  I'm not sure of the correct copy to have in the readme itself, but I think the tutorial and codebase is helpful.\r\n\r\nIt's also been coded to be 100% independent of `create-react-app` meaning that you can drop it in your application and leave the use of it totally optional.  **This is both simultaneously an example of `ConnectedRouter` in both a client and a server-side setting.**\r\n\r\nPlease let me know how I can improve the copy and I'd be happy to make the changes!",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 791,
        "deletions": 4646,
        "changed_files": 14,
        "created_at": "2017-10-12T19:22:13Z",
        "closed_at": "2018-03-26T04:28:43Z",
        "merged_at": null,
        "body": "Implements #4958. That has been stewing for a while, so I though I might stir things up with a PR.\r\n\r\n**Edit:** Well, the conversation here has certainly turned contentious, so I'm going to expand on _why_ this change is beneficial. **Please read this first.** While any input is welcome, I would appreciate if people kept the discussion to the actual PR and not to use this for an airing of grievances.\r\n\r\nUnder the hood, React Router uses `path-to-regexp` for path matching. `path-to-regexp` has a number of options to affect how it matches paths; the one that we're concerned with here is `end`\r\n> * **end** When `false` the path will match at the beginning. (default: `true`)\r\n\r\nThere are two things to note here:\r\n1. `end` isn't a very descriptive name (nor does the documentation help very much)\r\n2. the default value is `true`\r\n\r\nReact Router dealt which the first part by using the prop name `exact`, which is more clear. However, it also changed the default value to `false`. Having `exact=false` by default means that you can nest routes without having to think about it.\r\n\r\n**What this PR is proposing is a change from `end=false` by default to `end=true` by default, which would align it with `path-to-regexp`'s default**\r\n\r\nThe biggest downside of having `exact=false` by default is that you have to add the `exact` prop to at least 50% of your routes. (All leaf routes should be `exact`, which translates to `path-to-regexp` with `end=true`. If you do not do this, then your app probably matches paths that it should not).\r\n\r\n```js\r\n// v4\r\n<Route path='/albums' render={() => (\r\n  <Switch>\r\n    <Route exact path='/albums' component={Albums} />\r\n    <Route exact path='/albums/:id' component={Album} />\r\n  </Switch>\r\n)} />\r\n```\r\n\r\nThe issue with `exact` is compounded by its usage as a [boolean attribute](https://www.w3.org/TR/html5/infrastructure.html#boolean-attributes). Because the presence of a boolean attribute means that it is `true`, then the absence of it means that it is `false`. This means that **if React Router wants to use boolean attributes, then the default state has to be `false`**. The core of what this PR is doing is to rename the prop that is will be translated to `end` for `path-to-regexp` to one that is `false` by default.\r\n\r\n```js\r\n// v4\r\n<Route path='/' component={Everything} /> // matches all pathnames\r\n// v5?\r\n<Route path='/' component={Root} /> // only matches the pathname \"/\"\r\n```\r\nInstead of adding `exact` to routes that should match exactly, you would add the `parent` (or some other name) prop to routes that should not match exactly.\r\n\r\n```js\r\n// v5?\r\n<Route path='/flavor' component={Flavor} /> // only matches the pathname \"/flavor\"\r\n<Route parent path='/flavor' component={Flavors} />\r\n // matches all* pathnames that begin with the segment \"/flavor\"\r\n// *by all, this means that \"/flavor\" and \"/flavor/vanilla\" will be matched,\r\n// but not \"/flavorless\"\r\n```\r\nThat is the core of what this PR is doing.\r\n\r\n```js\r\n// v4\r\nconst exact = props.exact || false;\r\npathToRegxp(path, { end: exact });\r\n// v5?\r\nconst parent = props.parent || false;\r\npathToRegexp(path, { end: !parent });\r\n```\r\n\r\n### Approaches\r\n\r\nThere are two possible approaches with implementing this change.\r\n\r\n1. The band-aid\r\nThis change could be implemented all at once in a major version release. The benefit of doing this is that we could easily implement a codemod to switch to the new behavior. `<Route>` components with an `exact` prop would remove that prop and `<Route>`s without `exact` would be given a `parent` prop (the actual implementation is more nuanced, but that is the general ideal).\r\n\r\n2. Slow and steady\r\nThis change would be implemented first with a minor version release. The `parent` prop would be supported, but so would `exact`. This allows users to \"v5-proof\" their routes, but **it does not play nicely with boolean attributes**. If both `parent` and `exact` are supported, then there are two ambiguous use cases: `<Route path='/' />` and `<Route exact parent path='/' />`. In order to be non-breaking, we would have to stick to using the `exact` values for these cases. That means that in order to \"v5-proof\" an app, every single route would have to be given a `parent` prop (either boolean or with an explicit value). In the next major release, the `exact` prop would be removed and the absence of a `parent` prop would mean that the route does exact matching.\r\n\r\n### Alternatives\r\n\r\nInstead of implementing this change, what else could be done?\r\n\r\n1. Nothing\r\nBased on the existing comments, some people certainly would prefer the current API. I don't think that RR should maintain a bad API and `exact=false` by default is not intuitive, so I wouldn't call it a good API.\r\n\r\n2. Remove boolean attributes\r\nIf `exact` isn't a boolean attribute, it could be defaulted to `exact = true`. However, this would still be a breaking change.\r\n\r\n3. ???\r\nIf you have an idea for an alternative implementation, please share it.",
        "comments": 34
    },
    {
        "merged": true,
        "additions": 40,
        "deletions": 20,
        "changed_files": 2,
        "created_at": "2017-10-06T06:06:10Z",
        "closed_at": "2017-10-06T16:35:24Z",
        "merged_at": "2017-10-06T16:35:24Z",
        "body": "The `to` prop passed to NavLink needs to have special characters escaped when passed to the Route component.  This change allows NavLink to be used for urls with any characters.\r\n\r\nExample routes that will be taken literally:\r\n- /pizza (1)\r\n- /:pizza*\r\n- /(.*) ",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 7,
        "changed_files": 7,
        "created_at": "2017-10-04T15:37:20Z",
        "closed_at": "2017-11-13T14:56:41Z",
        "merged_at": "2017-11-13T14:56:41Z",
        "body": "Fixes https://github.com/ReactTraining/react-router/issues/5576\r\nThe issue is when we have something like \r\n`import createBrowserHistory from  'history/createBrowserHistory'`\r\nyou get file included into the result dist:\r\n` node_modules/history/createBrowserHistory.js`\r\nAnd then when you import something like\r\n`import {smth} from 'history'`\r\nand your webpack or other build tool is configured to read packages.json>module property then it includes node_modules/history/es/index.js and then node_modules/history/es/createBrowserHistory.js\r\nSo both files are included:\r\n```\r\nnode_modules/history/createBrowserHistory.js\r\nnode_modules/history/es/createBrowserHistory.js\r\n```",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 237,
        "deletions": 31,
        "changed_files": 25,
        "created_at": "2017-10-03T13:01:04Z",
        "closed_at": "2019-09-17T23:44:12Z",
        "merged_at": null,
        "body": "This seems like a big change, but it's fairly small.\r\n\r\nI put all the existing examples in `create-react-app` templates and changed the paths referred by the website docs accordingly. This change will make it possible to have synced sandboxes with the git repository, an added benefit is that curious users can `cd` to an example and run `yarn && yarn start` (or npm equivalent) to run a local version of the example.\r\n\r\nCurious again what you think. If you think the change is too big I can also create a script that will generate the create-react-app examples from the existing examples. I can also keep the examples up to date with CodeSandbox manually, but this is of course the least desired option \ud83d\ude04 .\r\n\r\nIf this PR gets merged we can have synced sandboxes like this:\r\n\r\nhttps://codesandbox.io/s/github/ReactTraining/react-router/tree/master/website/modules/examples/basic",
        "comments": 23
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-10-03T11:09:33Z",
        "closed_at": "2017-10-03T12:46:53Z",
        "merged_at": null,
        "body": "Fixed warning \"Warning: Expected `onClick` listener to be a function, instead got a value of `boolean` type.\"",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 18,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-09-22T15:42:49Z",
        "closed_at": "2017-10-03T22:55:33Z",
        "merged_at": "2017-10-03T22:55:33Z",
        "body": "I read this doc like four times until I decided to click on the breadcrumbs for other guides.  Lo and behold, I found and solved my problem within 30 seconds.  This PR helps others avoid my situation because it indicates that they should also read the other Redux guide if they are experiencing blocked updates.",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-09-21T19:29:29Z",
        "closed_at": "2017-09-21T22:11:25Z",
        "merged_at": null,
        "body": "The action property in the payload of LOCATION_CHANGE went missing in the latest react-router-redux. This change adds it back. I need this to synchronise a stack data structure in a reducer with the history entries data structure.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2017-09-21T15:00:40Z",
        "closed_at": "2017-09-22T15:35:08Z",
        "merged_at": null,
        "body": "In order to customize and trace history in app, I suggest synchronizing the location and the last history action given by the `history.listen ` callback.\r\n\r\nSee https://github.com/ReactTraining/history/blob/master/modules/createBrowserHistory.js#L86\r\n\r\n",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 95,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2017-09-20T17:52:19Z",
        "closed_at": "2017-09-22T15:35:47Z",
        "merged_at": "2017-09-22T15:35:47Z",
        "body": "Add a couple functions to the react-router-redux API\r\n\r\n#### getLocation(state) -> location\r\n\r\nSimply retrieve the location object stored in the store\r\n\r\n#### createMatchSelector(path) -> matchSelector(state) -> match|null\r\n\r\nThis function will create a memoized selector that will match the current location to the given path, if the match turns out to be different than before it will return the new match, otherwise it will keep returning the previous one.\r\n\r\nUsage:\r\n\r\n```js\r\nimport { createMatchSelector } from 'react-router-redux';\r\n\r\nconst usersMatchSelector = createMatchSelector({ path: '/users' });\r\n\r\n// this will effectively update your component when the user enters or leaves the /users route.\r\n// it wont update the component if the users goes from /users/one to /users/two because\r\n// the pattern doesn't have the `exact: true` flag.\r\nconst mapStateToProps = (state) => ({\r\n  match: usersMatchSelector(state);\r\n});\r\n```",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 91,
        "deletions": 382,
        "changed_files": 7,
        "created_at": "2017-09-19T04:59:24Z",
        "closed_at": "2017-09-22T15:37:55Z",
        "merged_at": null,
        "body": "### I do not intend for this PR to get merged, its just a proposal\r\n\r\n## Non-Blocking react-router\r\n\r\nThe main issue here is that in order to _know_ the router state from a component this component must be either rendered using a `<Route component={Component}` or HoC'd `withRouter(Component)` and even then the component will probably not update itself when the route changes.\r\n\r\nThis happens because `Route` doesnt update itself when the history changes. Because of react-router's _context re-definition_ strategy `Route` components will basically hide the `history` from `Route`s that are deep into the VDOM tree behind a virtual history layer thats defined by its parent.\r\n\r\nI myself would much rather pay attention to the `Router`'s history context because its *global* in a sense that I only care about what's in the user's browser address field, not what the current context allows me to see.\r\n\r\nThis approach would make it much easier to listen to history changes from each of the `Route`s, each one would be able to tell if it should update itself or not depending on the way the `path` matches the current `history.location`.\r\n\r\nHere's a test case of what I'm trying to achieve (and the current implementation of react-router wont do)\r\n\r\n```jsx\r\n  it('updates itself even when the match is different', () => {\r\n    const node = document.createElement('div')\r\n\r\n    let push\r\n    let count = 0\r\n    ReactDOM.render((\r\n      <MemoryRouter initialEntries={[ '/sushi/california' ]}>\r\n        <Route path=\"/sushi/:roll\" render={({ history, match }) => {\r\n          push = history.push\r\n          count = count + 1\r\n          return <div>{count}</div>\r\n        }}/>\r\n    </MemoryRouter>\r\n    ), node)\r\n    push('/sushi/dynamite')\r\n    expect(node.innerHTML).toContain(2)\r\n    push('/sushi/dynamite')\r\n    expect(node.innerHTML).toContain(2)\r\n    push('/sushi/dynamite/eat')\r\n    expect(node.innerHTML).toContain(2)\r\n    push('/sushi/california')\r\n    expect(node.innerHTML).toContain(3)\r\n  })\r\n```\r\n\r\nNotice that the component only re-renders when the match is different",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-09-17T14:32:40Z",
        "closed_at": "2017-09-17T19:25:47Z",
        "merged_at": "2017-09-17T19:25:47Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 29,
        "deletions": 2,
        "changed_files": 4,
        "created_at": "2017-09-15T19:31:53Z",
        "closed_at": "2017-09-28T19:54:26Z",
        "merged_at": "2017-09-28T19:54:25Z",
        "body": "Don't build the website in CI or install any of its dependencies. This was suggested by both @timdorr in https://github.com/ReactTraining/react-router/pull/5527#issuecomment-329872051 and @pshrmn in https://github.com/ReactTraining/react-router/issues/4362#issuecomment-328163751. But @ryanflorence seems opposed to the idea (see https://github.com/ReactTraining/react-router/pull/5527#issuecomment-329874880).\r\n\r\nAnyway, just wanted to put up this PR real quick so we have a place to discuss. I personally don't think it's a huge deal either way. It doesn't take a terrible amount of time to build the website in CI, but it is annoying. I also don't think building the site is a very valuable test of what's working and what's not. \u00af\\_(\u30c4)_/\u00af",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 8274,
        "deletions": 36866,
        "changed_files": 15,
        "created_at": "2017-09-15T18:40:12Z",
        "closed_at": "2017-09-18T04:59:37Z",
        "merged_at": null,
        "body": "Let's use yarn workspaces to manage dependencies (see #4362). This should improve install times by reducing the number of packages we need to install.\r\n\r\nAn alternative approach could be to use lerna's `--hoist` feature if we want to stick with the `npm` client. But I'm using yarn pretty much everywhere these days, so I'd like to just go with that.\r\n\r\nCurrently, I can't get the `react-router-native` tests to pass using yarn. It seems jest is [looking for stuff in `packages/react-router-native/node_modules`](https://travis-ci.org/ReactTraining/react-router/builds/276007846) that may not be there because yarn workspaces puts them in the root `node_modules` dir. At least that's my guess.\r\n\r\n/cc @rogeliog who submitted #5502 that uses jest's \"projects\" feature for testing. I wonder if that would help here...",
        "comments": 17
    },
    {
        "merged": true,
        "additions": 1034,
        "deletions": 326,
        "changed_files": 2,
        "created_at": "2017-09-12T13:46:04Z",
        "closed_at": "2017-11-10T17:28:53Z",
        "merged_at": "2017-11-10T17:28:53Z",
        "body": "This PR modifies the [animated transitions](https://reacttraining.com/react-router/web/example/animated-transitions) example to use a `<Switch>` instead of a single route. This should more accurately replicate real world usage (animating between routes).\r\n\r\nI could also switch :smirk: this to use `react-transition-group` v2. I'd have to take a closer look to make sure that nothing else on the website is relying on `react-transition-group`, but I think that it would be nice to use v2.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 31,
        "deletions": 31,
        "changed_files": 5,
        "created_at": "2017-09-12T06:29:56Z",
        "closed_at": "2017-09-12T13:23:40Z",
        "merged_at": "2017-09-12T13:23:40Z",
        "body": "This PR updates the docs and the example `react-router-native` Android app to use the new generic `BackButton` component, instead of the deprecated `AndroidBackButton`.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 155,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2017-09-12T04:30:12Z",
        "closed_at": "2017-10-03T22:56:32Z",
        "merged_at": "2017-10-03T22:56:32Z",
        "body": "I'm adding these examples in order to improve our docs and help to understand the API's usage, just like it's currently done on <a href=\"https://github.com/ReactTraining/react-router/tree/master/packages/react-router-native/examples\">React Router Native</a> .\r\nI would like some help to improve these docs in the future as **React Router Redux** is being developed because right now it's quite simple.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 99,
        "deletions": 61,
        "changed_files": 9,
        "created_at": "2017-09-12T03:35:36Z",
        "closed_at": "2017-09-12T21:23:04Z",
        "merged_at": null,
        "body": "So far zero code changes required and everything appears to still work! I ran through all the examples manually and they all work as expected.\r\n\r\nGREAT JOB REACT TEAM CAUSE ROUTER V3 DOES WEIRD CR*P\r\n\r\n## Try it out in your app\r\n\r\n```\r\nnpm install react-router@v3-next react@next react-dom@next\r\n```\r\n\r\nNote the tag is different for react-router than react and react-dom.\r\n\r\n## We're not done, please help\r\n\r\nThe only changes made to get the test suite green were changes to the tests themselves. 11 tests failed initially. Here\u2019s a rundown of the three categories of failures and my evening thoughts about them.\r\n\r\nBut first, to refresh your memory, in the test suite we have this `execSteps` thing to help us assert between transitions. It\u2019s a (put your fancy pants on) higher order function that takes an array of functions and then returns a function that, when called, calls each step one after another. When no more steps are left, it calls `done` to finish the test off. This function gets passed to `<Router onUpdate/>`, so the router calls it on history transitions.\r\n\r\n1. These tests were failing because the assertions appeared to be asserting on the state of the world before the history transition. For some reason, introducing an extra, empty step, gets the tests to pass in React 16 when it wasn\u2019t necessary before. That made me think extra renders were happening, but a manual test of the theory proved false. A later commit then removes the extra, empty step by removing `execNextStep` from the `ReactDOM.render` callback. Seems weird because when manually testing passing a callback to both `ReactDOM.render` and `<Router onUpdate/>` you get the same behavior in both (onUpdate first, then ReactDOM.render callback second). So, something is weird with the tests, not the source. This concerns me a little bit, but I\u2019m hopeful we only need to change the tests.\r\n\r\n2. Previously a test could synchronously run some assertions, `history.push`, and then assert some more, and then push again and assert all inside the `ReactDOM.render` callback or even just synchronously after the `ReactDOM.render` call. React 16 does not agree with this. These tests were fixed by moving them to the `<Router onUpdate/>` hook or the `ReactDOM.render` callback. These don\u2019t concern me and probably should have been written this way in the first place. Also apps aren't gonna be pushing to history synchronously one after another, that'd be weird.\r\n\r\n3. The last failures are around components that block updates with `shouldComponentUpdate` and `Link` dancing around it with subscriptions. I couldn\u2019t figure out how to make the tests pass, (didn\u2019t try very hard though), but I made a new example that when tested manually works just fine. So I just added `it.skip` to the tests. Just need to figure out how to fix the test on these.\r\n\r\nSo, all in all, the tests are broken but the code is not! *ISN\u2019T TDD GREAT?!*\r\n\r\nWant to help out? `git pull v3-react-16`, `npm test`, and have at it inside of `modules/__tests__`.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 48,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2017-09-11T08:13:51Z",
        "closed_at": "2017-11-13T19:28:19Z",
        "merged_at": "2017-11-13T19:28:19Z",
        "body": "Partially closes #5507.\r\n\r\nRefer to the following two `aria-current` pattern docs from L\u00e9onie Watson:\r\nhttps://tink.uk/using-the-aria-current-attribute/\r\nhttp://design-patterns.tink.uk/aria-current/\r\n\r\nBoth indicates the `aria-current` ARIA state only being rendered on the current element, instead of setting it to `false`.\r\n\r\nI have changed the `NavLink` component to not render this attribute unless it should be set to `true`.\r\n\r\nThis change fixes one of the issues from #5507 , namely that only the active link is then read out by NVDA to be active, instead of all the NavLinks.\r\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-09-10T17:22:17Z",
        "closed_at": "2017-09-11T00:32:20Z",
        "merged_at": "2017-09-11T00:32:20Z",
        "body": "### This change seeks to attain uniformity in the docs.\r\n\r\n[The API docs for `match`](https://github.com/ReactTraining/react-router/blob/0b9917e02391809f6ef12c10a29c75ee0e20efe5/packages/react-router/docs/api/match.md) distinguishes between `match.url` and `match.path`, recommending that `.url` be used for **building nested `<Link>s`** and `.path` for **building nested `<Route>s.`**\r\n\r\nThe example code in the _Quick Start_ guide uses `match.url` for links, however, it also uses `match.url` for routes. This change is to use `match.path` for routes, to ensure uniformity.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 12,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2017-09-10T05:48:32Z",
        "closed_at": "2019-09-17T23:44:09Z",
        "merged_at": null,
        "body": "This very simple, non-breaking change makes it significantly easier to wrap routes in animated transition components.\r\n\r\nIt also solves a problem with the recommended method of using `<Switch key={location.key} location={location}>`: if there are nested route transitions, when the user navigates from one subroute to another, all parent routes will needlessly retransition to themselves (since the `location.key` changes for everything) when only the subroutes need to transition.\r\n\r\nConsider this example:\r\n\r\n```js\r\nconst Account = ({match, location}) => (\r\n  <div>\r\n    <h1>Account</h1>\r\n    <Fader>\r\n      <Switch key={location.key} location={location}>\r\n        <Route path={`${match.url}/profile`} component={Profile} />\r\n        <Route path={`${match.url}/changePassword`} component={ChangePassword} />\r\n      </Switch>\r\n    </Fader>\r\n  </div>\r\n)\r\n\r\n<Route render={({location}) => (\r\n  <Fader>\r\n    <Switch key={location.key} location={location}>\r\n      <Route exact path=\"/\" component={Home} />\r\n      <Route path=\"/about\" component={About} />\r\n      <Route path=\"/account\" component={Account} />\r\n    </Switch>\r\n  </Fader>\r\n)}/>\r\n```\r\n\r\nFor the path `/account/profile`, it renders the following component hierarchy:\r\n\r\n```js\r\n<Router>\r\n  <Fader>\r\n    <Switch key=\"key1\">\r\n      <Route>\r\n        <Account>\r\n          <div>\r\n            <h1>Account</h1>\r\n            <Fader>\r\n              <Switch key=\"key1\">\r\n                <Route>\r\n                  <Profile>\r\n```\r\nIf the user navigates to `/account/changePassword`, it causes both `<Fader>s` to transition, when only the inner one needs to, because both receive a new child key:\r\n```js\r\n<Router>\r\n  <Fader>\r\n    <Switch key=\"key2\">\r\n      <Route>\r\n        <Account>\r\n          <div>\r\n            <h1>Account</h1>\r\n            <Fader>\r\n              <Switch key=\"key2\">\r\n                <Route>\r\n                  <ChangePassword>\r\n```\r\n\r\nThis solution solves that problem by wrapping the matched `<Route>` with any `component` or `render` prop provided to `<Switch>` (new API).  So if user gives each `<Route>` an appropriate `key` then transitions will work exactly as desired.\r\n\r\nNote that it's also no longer necessary to manually pass `location` to each `<Switch>`, which means less developer mistakes and confusion.\r\n\r\n```js\r\nconst Account = ({match}) => (\r\n  <div>\r\n    <h1>Account</h1>\r\n    <Switch component={Fader}>\r\n      <Route key=\"profile\" path={`${match.url}/profile`} component={Profile} />\r\n      <Route key=\"changePassword\" path={`${match.url}/changePassword`} component={ChangePassword} />\r\n    </Switch>\r\n  </div>\r\n)\r\n\r\n<Router>\r\n  <Switch component={Fader}>\r\n    <Route key=\"home\" exact path=\"/\" component={Home} />\r\n    <Route key=\"about\" path=\"/about\" component={About} />\r\n    <Route key=\"account\" path=\"/account\" component={Account} />\r\n  </Switch>\r\n</Router>\r\n```\r\n\r\nWith the above setup, `/account/profile` will render the following component hierarchy.\r\n```js\r\n<Router>\r\n  <Switch>\r\n    <Fader>\r\n      <Route key=\"account\">\r\n        <Account>\r\n          <div>\r\n            <h1>Account</h1>\r\n            <Switch>\r\n              <Fader>\r\n                <Route key=\"profile\">\r\n                  <Profile />\r\n```\r\nIf the user navigates to `/account/changePassword`, only the inner `<Fader>` will transition, because the child key for the outer `<Fader>` remains the same:\r\n```js\r\n<Router>\r\n  <Switch>\r\n    <Fader>\r\n      <Route key=\"account\">\r\n        <Account>\r\n          <div>\r\n            <h1>Account</h1>\r\n            <Switch>\r\n              <Fader>\r\n                <Route key=\"changePassword\">\r\n                  <ChangePassword />\r\n```",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 4720,
        "deletions": 3321,
        "changed_files": 10,
        "created_at": "2017-09-08T06:25:29Z",
        "closed_at": "2018-10-15T21:32:29Z",
        "merged_at": null,
        "body": "This change uses jest`--projects` to handle multiple projects \r\nhttp://facebook.github.io/jest/docs/en/cli.html#projects-project1-projectn-\r\n\r\n<img width=\"557\" alt=\"screen shot 2017-09-07 at 11 24 24 pm\" src=\"https://user-images.githubusercontent.com/574806/30198651-a6e7db36-9423-11e7-84e6-f70a549d1745.png\">\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 53,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2017-09-05T08:57:48Z",
        "closed_at": "2017-09-15T20:55:32Z",
        "merged_at": null,
        "body": "The new component property determines which React component a NavLink\r\nwill render. It defaults to Link, to retain current behavior when omitted.\r\nThe property can be used if the user wants to change the rendered\r\ncomponent, for example when they want to apply a higher order component\r\nto Link, or to render something completely different.\r\n\r\nUpdated docs and added a new test case.\r\n\r\nFixes #5496 ",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 21,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2017-09-01T16:21:15Z",
        "closed_at": "2017-10-03T22:59:16Z",
        "merged_at": "2017-10-03T22:59:16Z",
        "body": "New implementation will parse the string to create an actual location object. This also means that a to string with no pathname will resolve using the current location.\r\n\r\nThe `href` value is also now stored in state, only recalculating it when the `to` prop changes.\r\n\r\n**Edit:** If anyone is looking at this, but hasn't read through #5488, the reason for this PR is that when a user renders a `<Link>` whose string `to` does not include a pathname, the rendered anchor's `href` does not include a pathname (`<Link to='?test=ing'>Test</Link>` -> `<a href='?test=ing'>Test</a>`). This results in conflicts with the output of the `<StaticRouter>` since that explicitly makes `href`s absolute paths by enforcing that the string begins with a forward slash. Since React Router works with location's whose `pathnames` are absolute, I felt it was more appropriate for the `<Link>` to produce absolute URLs than it was for the `<StaticRouter>` to have a special use case.",
        "comments": 15
    },
    {
        "merged": false,
        "additions": 5237,
        "deletions": 2913,
        "changed_files": 70,
        "created_at": "2017-08-28T11:48:24Z",
        "closed_at": "2021-11-05T20:28:06Z",
        "merged_at": null,
        "body": "A failing test showing that matchPatch by itself doesn't handle\r\nnon-latin characters correctly. `<BrowserRouter>` is using `history` which\r\nhandles decoding correctly, so it's not an issue when matching with\r\n`<Route>` but it doesn't work when using `matchPath` directly.\r\n\r\nProbably needs a mention in the `matchPath` docs about this issues, because currently the description suggests it will work.",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 18,
        "deletions": 944,
        "changed_files": 9,
        "created_at": "2017-08-27T21:19:52Z",
        "closed_at": "2017-11-07T20:27:04Z",
        "merged_at": null,
        "body": "See https://github.com/pillarjs/path-to-regexp/blob/master/History.md#200--2017-08-23 for details on the changes to path-to-regexp\r\n\r\nThe biggest change is that instead of using `\"/\"` to match all pathnames, we should use `\"\"`. This is because `/` and `/nested` are siblings (whereas `/nested` and `/nested/route` are parent/child paths).\r\n\r\nAnother change with this is that the wildcard route  is no longer supported. Instead, `(.*)` should now be used instead.\r\n\r\nFinally, the trailing slash on a segment is now enforced (`/test/` no longer matches `/test`).\r\n\r\nMoving discussion here from #5469.",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 12,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-08-22T09:07:45Z",
        "closed_at": "2017-08-30T07:35:16Z",
        "merged_at": null,
        "body": "Add an example of using a function as value of the component prop in <Route /> docs.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 27,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2017-08-20T14:58:28Z",
        "closed_at": "2017-08-20T16:57:51Z",
        "merged_at": null,
        "body": "Implementation for PrivateRoute (route that checks for authenticated user) and algo dealing with it on react-router-config renderRoutes",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-08-20T07:27:11Z",
        "closed_at": "2017-08-20T17:04:49Z",
        "merged_at": "2017-08-20T17:04:49Z",
        "body": "use `prop` instead of `attribute` in route component",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 58,
        "deletions": 111,
        "changed_files": 1,
        "created_at": "2017-08-20T00:02:57Z",
        "closed_at": "2017-08-21T01:57:58Z",
        "merged_at": "2017-08-21T01:57:58Z",
        "body": "Addresses #5418.\r\n\r\nI attempted to convert the site to use `react-loadable` which to use properly would require upgrading webpack. I got that updated but I think `lazy-loader` is unhappy. The nav links start to get populated but the guides are just arrays of `undefined`, i.e., the equivalent of the following:\r\n\r\n```jsx\r\n      {[undefined, undefined, undefined, ...].map(.map((item, i) => (\r\n        <Block key={i} marginBottom=\"10px\">\r\n          <NavLink\r\n            key={i}\r\n            to={`/${environment}/api/${item.title.slug}`}\r\n            triangleColor=\"white\"\r\n            children={item.title.text}\r\n          />\r\n            ))}\r\n```",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 29,
        "deletions": 7,
        "changed_files": 4,
        "created_at": "2017-08-18T05:34:59Z",
        "closed_at": "2017-08-18T15:21:18Z",
        "merged_at": "2017-08-18T15:21:18Z",
        "body": "For this enhancement: https://github.com/ReactTraining/react-router/issues/5435",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-08-14T18:57:49Z",
        "closed_at": "2017-08-15T13:43:59Z",
        "merged_at": null,
        "body": "Make it possible to work with native router for instance or other custom\r\nrouter.\r\n\r\nI was reading a guide how to integrate `react-router` with `redux` and I noticed that `ConnectedRouter` takes default router from `react-router` while it should allow you to use any router you'd like (`NativeRouter` for instance).\r\n\r\nDoes it make sense?\r\n\r\n\u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f  This code isn't tested, just wanted to start the discussion and get answers from maintainers to see if something can be improved. Perhaps I'm missing something here? What do you think?\r\nThanks.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 74,
        "deletions": 3,
        "changed_files": 4,
        "created_at": "2017-08-12T13:51:05Z",
        "closed_at": "2017-08-21T20:12:46Z",
        "merged_at": "2017-08-21T20:12:46Z",
        "body": "Prevents remount component on routes with the same component.\r\n\r\nThis issue was described and fixed for `react-router` here: https://github.com/ReactTraining/react-router/issues/4578 , but for `react-router-config` this bug occurs again due different `key` value on `<Route>` component.\r\n\r\nSince `<Switch>` renders only one component there is no need to use unique `key` prop for `<Route>`.\r\n\r\nNot sure if this is right fix, but it works.\r\n\r\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-08-07T05:35:11Z",
        "closed_at": "2017-08-07T19:26:42Z",
        "merged_at": "2017-08-07T19:26:42Z",
        "body": "Fix Chutney tag did not closed tag.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 14,
        "changed_files": 1,
        "created_at": "2017-08-04T10:16:13Z",
        "closed_at": "2017-08-04T15:34:23Z",
        "merged_at": null,
        "body": "Since we are only ever interested in one match, I wanted to float this idea on the Data Loading example. \r\n\r\nPreviously we used `some` as a circuit-breaking `map` in the form of a side-effect. This is nice because it saves walking the rest of the array after we've already got what we want, but it might be nice to use `find` as that is tailored to these situations \u2013 it looks for the first match and circuit-breaks when it finds it.\r\n\r\nFeel free to dismiss this as subjective/irrelevant/not important \ud83d\ude04 \ud83d\udc4d  This might be nothing more than a matter of taste which is no clearer to readers than the current example.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 47,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2017-08-03T13:50:14Z",
        "closed_at": "2017-08-03T15:56:38Z",
        "merged_at": null,
        "body": "",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-08-01T10:10:22Z",
        "closed_at": "2017-08-01T16:46:27Z",
        "merged_at": null,
        "body": "I am working on a an alternative Switch component which works with routes that render using children function property. For animation purposes but not using react-transition-group.\r\nNormal Switch component renders only first matched component.\r\nMy version of Switch would render all routes but only one will get non-null computedMatch property.\r\nThis change is needed to not ignore null value produced by my Switch component.\r\n\r\nIf you are interested, there is a animated Switch version:\r\n\r\n````\r\nclass Switch extends React.Component {\r\n    static contextTypes = {\r\n        router: PropTypes.shape({\r\n            route: PropTypes.object.isRequired\r\n        }).isRequired\r\n    }\r\n\r\n    static propTypes = {\r\n        children: PropTypes.node,\r\n        location: PropTypes.object\r\n    }\r\n\r\n    componentWillMount() {\r\n        invariant(\r\n            this.context.router,\r\n            'You should not use <Switch> outside a <Router>'\r\n        )\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        warning(\r\n            !(nextProps.location && !this.props.location),\r\n            '<Switch> elements should not change from uncontrolled to controlled (or vice versa). You initially used no \"location\" prop and then provided one on a subsequent render.'\r\n        )\r\n\r\n        warning(\r\n            !(!nextProps.location && this.props.location),\r\n            '<Switch> elements should not change from controlled to uncontrolled (or vice versa). You provided a \"location\" prop initially but omitted it on a subsequent render.'\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const {route} = this.context.router\r\n        const {children} = this.props\r\n        const location = this.props.location || route.location\r\n\r\n        const routes = children.slice(0, -1);\r\n        const defaultRoute = children[children.length - 1];\r\n\r\n        let found = false;\r\n        const newRoutes = React.Children.map(routes, element => {\r\n            if (!React.isValidElement(element)) return;\r\n\r\n            const {path: pathProp, exact, strict, from} = element.props;\r\n            const path = pathProp || from;\r\n\r\n            if (found) { // we do not need more active routes, just return unmatched route\r\n                return React.cloneElement(element, {location, computedMatch: null});\r\n            }\r\n\r\n            const match = path ? matchPath(location.pathname, {path, exact, strict}) : route.match;\r\n\r\n            if (match) {\r\n                found = true;\r\n            }\r\n            return React.cloneElement(element, {location, computedMatch: match});\r\n        });\r\n\r\n        newRoutes.push(React.cloneElement(defaultRoute, {location, computedMatch: found ? null : route.match}));\r\n\r\n        return <div>\r\n            { newRoutes }\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Switch\r\n````",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 35,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2017-08-01T06:45:39Z",
        "closed_at": "2018-01-12T05:59:24Z",
        "merged_at": null,
        "body": "The `path-to-regexp` library supports an array of strings as a pattern, however we are getting PropTypes warnings about this. This PR enables support for this.\r\n\r\nIt seems like we do not touch the path and just pass it on to the `path-to-regexp` library directly.\r\n\r\nSee these previous PR's and Issues for more context:\r\nhttps://github.com/ReactTraining/react-router/pull/4159\r\nhttps://github.com/ReactTraining/react-router/issues/4551",
        "comments": 30
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-07-29T18:40:00Z",
        "closed_at": "2017-08-03T16:20:56Z",
        "merged_at": null,
        "body": "According to [#5346](https://github.com/ReactTraining/react-router/pull/5346/files), `babel-loader`has been removed from `react-router-dom` due to switching to `rollup`. Then if you try to start `react-router-website`  package it will fail with following message \r\n\r\n```\r\nERROR in ../react-router-dom/index.js\r\nModule not found: Error: Cannot resolve module 'babel' in /Users/ryu/Documents/git/react/react-router/packages/react-router-dom\r\n @ ../react-router-dom/index.js 6:22-48\r\n```\r\n\r\nThis issue should be raised due to the `import` pattern in file `react-router-website/modules/ReactRouterDOMShim.js`. In my opinion,  `webpack` will resolve modules and loader based on the source files' location.  After execute `npm run build` on the top-level, every package will has its corresponding `node_modules` folder.  Recently, `babel-loader` is removed from `react-router-dom`, `webpack` could not resolve the modules correctly any more.\r\n\r\nI think it should have two resolutions:\r\n\r\n1. Retain `babel-loader` in `react-route-dom` package. I dont think this is the right thing you want. :)\r\n2. Specify a clear path for `resolve modules` and `resolve loader`, It will benefit no matter where imported modules located, you just need to maintain a `package.json` in concerned package. for this situation, it's `react-router-website`.\r\n\r\nI wonder if I have made a correct diagnosis. looking forward to your feedback. :)",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 36,
        "deletions": 12,
        "changed_files": 2,
        "created_at": "2017-07-28T10:28:34Z",
        "closed_at": "2017-07-28T16:07:32Z",
        "merged_at": null,
        "body": "Right now when you use withRouter on a component with ref it suddenly breaks because withRouter is a stateless component which doesn't allow refs.\r\n\r\nThere is `wrappedComponentRef` property but it forces container to know which child components use withRouter and which don't.\r\n\r\nComponents refs are mostly used to get a DOM node via ReactDOM.findDOMNode so usually it doesn't matter if ref points to withRouter HOC instead of wrapped component.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 8,
        "changed_files": 2,
        "created_at": "2017-07-26T02:02:42Z",
        "closed_at": "2017-07-26T13:52:48Z",
        "merged_at": "2017-07-26T13:52:48Z",
        "body": "Fixes #5372. I also tweaked the description of the string version.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2017-07-25T10:39:00Z",
        "closed_at": "2017-07-25T23:31:51Z",
        "merged_at": "2017-07-25T23:31:51Z",
        "body": "Add missing description for Link component `to` object in react-router-dom and react-router-native.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 164,
        "deletions": 31,
        "changed_files": 7,
        "created_at": "2017-07-23T16:48:02Z",
        "closed_at": "2019-06-12T17:26:31Z",
        "merged_at": "2019-06-12T17:26:30Z",
        "body": "closes https://github.com/ReactTraining/react-router/issues/5331",
        "comments": 38
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2017-07-21T13:29:21Z",
        "closed_at": "2017-07-21T15:35:05Z",
        "merged_at": null,
        "body": "",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 236,
        "deletions": 9,
        "changed_files": 2,
        "created_at": "2017-07-19T17:07:29Z",
        "closed_at": "2019-09-17T23:44:11Z",
        "merged_at": null,
        "body": "https://github.com/ReactTraining/react-router/issues/5296\r\n\r\nPrimarily, this test suite PR demonstrates inconsistencies in path matching depending on context (`matchParams`, `StaticRouter`, and `Router` at a minimum).  It is suggested that all path matching logic be consolidated into a single place to avoid this sort of problem.\r\n\r\nAdditional test cases were also added to cover some potentially tricky use cases I thought up while I was in there.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 33,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-07-19T10:40:36Z",
        "closed_at": "2017-07-19T16:26:51Z",
        "merged_at": "2017-07-19T16:26:51Z",
        "body": "Related to #5271",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2017-07-18T19:57:49Z",
        "closed_at": "2017-07-19T16:26:09Z",
        "merged_at": "2017-07-19T16:26:09Z",
        "body": "The docs make it sound like `withRouter` updates its wrapped component on every router transition (e.g. via listening to history).\r\n\r\n> withRouter will re-render its component every time the route changes\r\n\r\nUpdate clarifies that rerenders are only triggered by parent rerenders.\r\n\r\nsee [this issue](https://github.com/ReactTraining/react-router/issues/5356).  ",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 18,
        "deletions": 16,
        "changed_files": 1,
        "created_at": "2017-07-17T23:31:09Z",
        "closed_at": "2019-04-21T21:14:52Z",
        "merged_at": null,
        "body": "#5246 - Old pull request (look at my last comment)\r\n\r\nProblem:\r\nIf the function onClick throws an error it doesn't apply the method preventDefault to the click event. When this happens the click event keeps the normal behaviour jumping to the next route with a page refresh. Therefore it's hard to detect what is causing the problem, because the error was logged in the context of a different page.\r\n\r\nSolution:\r\nPrevent the <a /> default behaviour on a try/finally. With this we avoid weird bugs in SPA applications (hard to debug) and still delegate the error handling to the application",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-07-16T20:26:12Z",
        "closed_at": "2017-07-16T23:30:12Z",
        "merged_at": "2017-07-16T23:30:12Z",
        "body": "Change log\r\nhttps://github.com/mridgway/hoist-non-react-statics/releases/tag/v2.0.0\r\n\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2017-07-16T19:17:54Z",
        "closed_at": "2017-07-16T23:30:43Z",
        "merged_at": "2017-07-16T23:30:43Z",
        "body": "Missed removing these when switching to Rollup.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 3,
        "changed_files": 4,
        "created_at": "2017-07-16T03:08:29Z",
        "closed_at": "2019-04-03T02:24:08Z",
        "merged_at": null,
        "body": "This is a follow up to #5343\r\n\r\nI was thinking about the `react-router-config` build. In it, I used `react-router`  as an external (`react-router/Switch` maps to `ReactRouter.Switch`). The issue with this is that the user is more likely to be importing the `react-router-dom` UMD, so `ReactRouterDOM` will be defined and `ReactRouter` won't. That will mean that the user has to include the React Router UMD script in order to ensure that their code works.\r\n\r\nThis problem also existed in the Webpack build. However, that was never published because `UMD` was only added to the release files in https://github.com/ReactTraining/react-router/commit/6536e931068dda124a44f90300845ceae575d122. I imagine once it actually is released, someone will use it and run into this problem, so we should probably figure out how to address this.\r\n\r\nWhat this PR does is to modify the globals from `ReactRouter/XX` to `ReactRouterDOM/XX`. The reasoning behind this is that when the UMD script runs, there are three checks:\r\n\r\n1. check if we are in a commonjs environment and if true, use `exports` as the global\r\n2. check if we are in an AMD environment and if true, use `define`\r\n3. if none of the above, use `this` (`Window` in the browser) as the global.\r\n\r\nCorrect me if I am mistaken, but the third one should only happen in the browser, which is where users would be running into this issue. If that is true, then we should be able to say that if you are attempting to use this script in the browser, you should be using the React Router DOM script as well.\r\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 238,
        "deletions": 196,
        "changed_files": 24,
        "created_at": "2017-07-15T22:01:01Z",
        "closed_at": "2017-07-15T23:31:33Z",
        "merged_at": "2017-07-15T23:31:33Z",
        "body": "Switches the `react-router`, `react-router-config`, and `react-router-dom` packages to Rollup for their UMD builds.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-07-14T05:12:50Z",
        "closed_at": "2017-07-14T15:24:27Z",
        "merged_at": "2017-07-14T15:24:27Z",
        "body": "Show you can render redirect in switch.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-07-11T03:29:27Z",
        "closed_at": "2017-07-11T14:01:39Z",
        "merged_at": "2017-07-11T14:01:39Z",
        "body": "Add a note for those that are unaware.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 66,
        "deletions": 2,
        "changed_files": 4,
        "created_at": "2017-07-10T08:38:05Z",
        "closed_at": "2017-07-13T13:54:39Z",
        "merged_at": null,
        "body": "When using the latest `react-router-redux` (5.0.0-alpha.6) on the server a `staticContext` is not created ([as in `StaticRouter`](https://github.com/ReactTraining/react-router/blob/master/packages/react-router/modules/StaticRouter.js#L84)). However, this is [needed by the `Redirect` component](https://github.com/ReactTraining/react-router/blob/master/packages/react-router/modules/Redirect.js#L37) to determine whether it should perform the redirect when rendering on the server:\r\n\r\n```js\r\n  isStatic() {\r\n    return this.context.router && this.context.router.staticContext\r\n  }\r\n\r\n  componentWillMount() {\r\n    if (this.isStatic())\r\n      this.perform()\r\n  }\r\n```\r\n\r\nThis means any use of a `Redirect` component on the server is ignored.\r\n\r\nThis PR adds an extra prop to the `ConnectedRouter` called `isServer` (best name I could think of that wouldn't confuse anyone using it) that instructs it to create the `staticContext`. Any `Redirect` components will then perform the redirect on the server.\r\n\r\nThere is another problem that anything put into the context ([as suggested by the docs](https://reacttraining.com/react-router/web/guides/server-rendering/adding-app-specific-context-information)) is inaccessible when using `react-router-redux` anyway as it isn't placed into the store. But I guess you could just use history state instead?",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-07-06T10:12:59Z",
        "closed_at": "2017-07-06T13:27:00Z",
        "merged_at": null,
        "body": "Enable MemoryRouter to use an external history source",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-06-30T13:01:29Z",
        "closed_at": "2017-06-30T14:48:52Z",
        "merged_at": "2017-06-30T14:48:52Z",
        "body": "Adjust the `Switch` link target.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 5,
        "changed_files": 3,
        "created_at": "2017-06-29T01:15:15Z",
        "closed_at": "2017-07-05T20:05:31Z",
        "merged_at": "2017-07-05T20:05:31Z",
        "body": "This picks up on #5094\r\n\r\nThe only thing I couldn't figure out was how to issue a deprecation warning and where. There aren't any deprecation warnings in the repo that I could see so please provide an example :)\r\n\r\nAs far as where to add the warning, the simple re-export doesn't afford for a place to add a deprecation warning that only effects AndroidBackButton. Perhaps adding back a file called AndroidBackButton.js that exports the functionality of BackButton.js with the warning?\r\n\r\nThanks!",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 31,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2017-06-28T16:07:28Z",
        "closed_at": "2017-06-28T17:37:24Z",
        "merged_at": "2017-06-28T17:37:24Z",
        "body": "Use case: [`react-measure`](https://github.com/souporserious/react-measure):\r\n\r\nI'd like to show a tooltip above a Link. For this I need to know the underlying DOM node's position. Proxying the `ref` via an `innerRef`-prop would allow to do this. (I stole the naming from [`glamorous`](https://github.com/paypal/glamorous#innerref))\r\n\r\nThis would allow to extract the position like this:\r\n\r\n```jsx\r\n<Measure bounds>{({measureRef, contentRect}) => \r\n  <Link to=\"...\" innerRef={measureRef}/>\r\n}</Measure>\r\n```\r\n\r\nBut I'm optimistic that other use-cases might benefit from accessing the inner ref as well!\r\n\r\nHappy to adapt docs (and tests) in this PR if you think this is worthwhile \ud83d\ude42 ",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 22,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-06-26T01:30:05Z",
        "closed_at": "2017-06-26T15:27:25Z",
        "merged_at": "2017-06-26T15:27:25Z",
        "body": "May be helpful for some, I didn't really find it too apparent offhand without searching the issues first on how to do it.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-06-23T15:50:06Z",
        "closed_at": "2017-06-23T18:06:10Z",
        "merged_at": "2017-06-23T18:06:10Z",
        "body": "Solves a problem similar to #4818 related to `DeepLinking`",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 50,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2017-06-22T09:37:44Z",
        "closed_at": "2017-07-13T22:57:05Z",
        "merged_at": null,
        "body": "A reimplementation of #3803 for v4\r\n\r\nFixes #2319",
        "comments": 17
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-06-22T02:40:57Z",
        "closed_at": "2017-06-22T15:46:29Z",
        "merged_at": null,
        "body": "I'm using react-router v4 on some data analytics project, I use `<Redirect />` to add some default value of query parameters to location, wish keeping data unchanged after refresh and/or copy&paste link in another browser.\r\n\r\nThis is how I did this:\r\n\r\n```js\r\nexport default function QueryDatePicker(props) {\r\n  const { history, location, name } = props;\r\n  const query = qs.parse(location.search);\r\n  const value = query[name];\r\n  if (!value) {\r\n    // Add [name] query parameters.\r\n    return (\r\n      <Redirect to={{\r\n        ...location,\r\n        search: qs.stringify({\r\n          ...query,\r\n          [name]: moment().startOf('day').subtract(1, 'days').valueOf(),\r\n        }),\r\n      }}/>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <DatePicker onChange={v => changeQuery(history, location, name, v)} value={moment(+value)} />\r\n  )\r\n}\r\n```\r\n\r\nI also have `QueryRadioGroup` , and use them like this:\r\n\r\n```\r\nexport default function SomePage(props){\r\n  const { location } = props;\r\n  const query = qs.parse(location.search);\r\n  const dataReady = !!query.date && !!query.inDays;\r\n  const url = `/api/task1?from=${query.date}&to=${query.date}&inDays=${query.inDays}`;\r\n\r\n\r\n  return (\r\n    <div>\r\n      <QueryDatePicker {...props} />\r\n      <QueryRadioGroup {...props} name=\"type\" values={VALID_TYPES}/>\r\n\r\n      { dataReady && <Fetch url={url}>\r\n        <SomeComponent />\r\n      </Fetch> }\r\n    </div>\r\n  );\r\n}\r\n```\r\n\r\nEach `QueryXXX` component will return a Redirect to add a query paremeter on location if missing.\r\n\r\nThe problem comes: each `<Redirect />` will be mounted only once, after many `history.replace()` calls, only the latest one will effect. There's no chance for other Redirect to perform again.\r\n\r\nAdd a  `componentWillReceiveProps` method to `Redirect` class which performs again will solve this problem, but is this dangerous? Any better idea for this case?\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-06-21T09:00:15Z",
        "closed_at": "2017-06-21T16:09:00Z",
        "merged_at": null,
        "body": "Hi,\r\n\r\nMy team found a problem with foreign characters and decoding of params with react-router-config. I added a failing test. I'm not sure if this should be handled by `matchRoutes` with using `decodeURI` on the `pathname` param or if this should be done before we use `matchRoutes`?\r\n\r\nAnyway, using something like `decodeURI` is needed to be able to have a equal render between server side routing and browser routing. I need your opinion on where this should be solved.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2017-06-19T18:29:31Z",
        "closed_at": "2017-06-19T19:34:32Z",
        "merged_at": "2017-06-19T19:34:32Z",
        "body": "This was broken in https://github.com/ReactTraining/react-router/pull/5136\r\n\r\nBasically, only `<h1>` (`#`) and `<h2>` (`##`) headings get converted into links for the documentation website, so we need to make the prop headings `<h2>` s.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-06-15T10:04:18Z",
        "closed_at": "2017-06-15T18:05:08Z",
        "merged_at": null,
        "body": "According to React docs(https://facebook.github.io/react/docs/react-api.html#react.purecomponent), `PureComponent` is exactly the same as `Component` but implements `ComponentShouldUpdate` with a shallow prop and state comparison.\r\n\r\n> React.PureComponent is exactly like React.Component but implements shouldComponentUpdate() with a shallow prop and state comparison.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-06-14T15:38:07Z",
        "closed_at": "2017-06-14T17:56:33Z",
        "merged_at": null,
        "body": "**Problem:**\r\nIf the function onClick throws an error it doesn't apply the method preventDefault to the click event. When this happens the click event keeps the normal <a/> behaviour jumping to the next route with a page refresh. Therefore it's hard to detect what is causing the problem, because the error was logged in the context of a different page.\r\n\r\n**Solution:**\r\nCatch the error thrown by the execution of the function onClick() so it can log the error and keep the normal behaviour of the Link component without reloading the page. ",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-06-14T09:56:44Z",
        "closed_at": "2017-06-14T17:52:31Z",
        "merged_at": "2017-06-14T17:52:31Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-06-14T08:25:02Z",
        "closed_at": "2017-06-14T17:52:54Z",
        "merged_at": "2017-06-14T17:52:54Z",
        "body": "Updates API language and removes some ambiguity that confused me/kept me away from this library last time I looked at it (I thought `matchRoutes` could only look at one route, no subroutes, at a time).",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 35,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-06-13T19:41:33Z",
        "closed_at": "2017-06-13T20:57:25Z",
        "merged_at": "2017-06-13T20:57:25Z",
        "body": "This is another usage question that pops up in issues fairly frequently.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 17,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-06-13T19:24:32Z",
        "closed_at": "2017-06-13T20:56:32Z",
        "merged_at": "2017-06-13T20:56:32Z",
        "body": "I haven't seen this question lately, but it comes up occasionally, so it might be useful to add to the FAQ.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-06-13T12:52:33Z",
        "closed_at": "2017-06-13T20:56:19Z",
        "merged_at": "2017-06-13T20:56:19Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-06-09T17:03:53Z",
        "closed_at": "2019-12-27T20:03:13Z",
        "merged_at": null,
        "body": "This fixes an issue where you have something like:\r\n\r\n```js\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <a href=\"/foo/\">Go to foo</a>\r\n      <Route path=\"/foo\" component={Foo} />\r\n    </div>\r\n  );\r\n};\r\nconst Foo = ({match: {url, path}}) => {\r\n  return (\r\n    <div>\r\n      <a href={url + '/bar'}>Go to bar</a>\r\n      <Route path={path + '/bar'} component={Bar} />\r\n    </div>\r\n  );\r\n};\r\nconst Bar = () => <div>Hello World</div>;\r\n```\r\n\r\nIf you load this app and click on the link to \"foo\" it seems to work fine, except that because it's not strict, it has allowed you to add a trailing `/` to the path.  The \"Go to bar\" link then has a double `//` in it, causing the app to break when you attempt to click that link.\r\n\r\nThe easiest fix is to never include a trailing `/` in the `url` if there wasn't one in the path.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-06-05T16:34:58Z",
        "closed_at": "2017-06-05T20:39:48Z",
        "merged_at": "2017-06-05T20:39:48Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 125,
        "deletions": 4,
        "changed_files": 4,
        "created_at": "2017-06-05T10:32:13Z",
        "closed_at": "2017-09-29T23:05:31Z",
        "merged_at": "2017-09-29T23:05:31Z",
        "body": "This pull request adds back a feature from v3 where the `to` URL pathnames of `<Redirect>` could contain parameters.\r\n\r\nCurrently, parameters in `from` are already matched by `<Switch>` and then passed into `<Redirect>` as `computedMatch` prop just like `<Route>` children. However, `<Redirect>` does not do anything with that information yet.\r\n\r\nI implemented a new `generatePath(pattern, params)` function that creates a new pathname using [path-to-regexp's `compile` function](https://github.com/pillarjs/path-to-regexp#compile-reverse-path-to-regexp). This guarantees that patterns are processed in the same way as they are parsed in `matchPath`. This function is used to put the params from `computedMatch` into the respective slots of the `to` prop, which may from now include named parameters as well.\r\n\r\nAll `compile` functions are cached by `pattern` using the same mechanism as `matchPath`.\r\n\r\nMost importantly, the matching logic remains completely untouched and as-is. All of this is meant to be minimally invasive.\r\n\r\nTests, docs and batteries included. It might make sense to make `generatePath` available as a public API helper method and document it like `matchPath`.\r\n\r\n**Examples** (without `<Switch>` for brevity)\r\n\r\n```jsx\r\n// /users/123 \u2192 /users/profile/123\r\n<Redirect from=\"/users/:id\" to=\"/users/profile/:id\" />\r\n\r\n// /users/123 \u2192 /users/profile/123?additional=args\r\n// Location objects work as well, `to.pathname` gets populated with parameters\r\n<Redirect from=\"/users/:id\" to={{ pathname: \"/users/profile/:id\", search: \"?additional=args\" }} />\r\n\r\n// /users/editors/123 \u2192 /users/profile/123\r\n// parameters in `from` that are not included in `to` are ignored\r\n<Redirect from=\"/users/:group/:id\" to=\"/users/profile/:id\" />\r\n\r\n// /users/editors/123 \u2192 /users/home\r\n// `to` can be completely \"static\"\r\n<Redirect from=\"/users/:group/:id\" to=\"/users/home\" />\r\n\r\n// /foo/bar \u2192 does not match, no redirect (duh)\r\n<Redirect from=\"/users/:group/:id\" to=\"/users/home\" />\r\n\r\n// /users/123 \u2192 ERROR\r\n// Parameter :foo is missing in `from`, path-to-regexp throws an error\r\n<Redirect from=\"/users/:id\" to=\"/users/:id/:foo\" />\r\n\r\n// /users/profiles \u2192 /profiles\r\n// Needless to say, all redirects without parameters work just like usual.\r\n<Redirect from=\"/users/profiles\" to=\"/profiles\" />\r\n```",
        "comments": 17
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-06-03T16:58:17Z",
        "closed_at": "2017-06-03T20:10:26Z",
        "merged_at": "2017-06-03T20:10:26Z",
        "body": "Moved history subscription from componentWillMount to componentDidMount to avoid memory leaks during server side rendering.",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-06-03T02:19:11Z",
        "closed_at": "2017-07-13T23:16:35Z",
        "merged_at": "2017-07-13T23:16:35Z",
        "body": "This PR makes it so that all subsection headers (a `##` that creates an `<h2>`) use lowercase letters. There is a little bit of discussion about this in #5197, but I'll explain everything below.\r\n\r\nThe way that GitHub adds `id`s to headers [converts all of the letters to lowercase](https://github.com/jch/html-pipeline/blob/master/lib/html/pipeline/toc_filter.rb#L39). The current way that the React Router website adds `id`s to headers is to convert to lowercase unless the header is from the `api` section, in which case it preserves the case for all letters.\r\n\r\nFor example, on GitHub, the documentation for the section on a `<Route>`'s render methods has the id [`route-render-methods`](https://github.com/ReactTraining/react-router/blob/v4.1.1/packages/react-router/docs/api/Route.md#route-render-methods). However, on the website, it has the id [`Route-render-methods`](https://reacttraining.com/react-router/core/api/Route/Route-render-methods).\r\n\r\nFor `href`s generated by the `react-router-website`'s `markdown-loader`, there is no issue with this case discrepancy.  The problem occurs when there is an existing link within one of the markdown files. If these links are in all lowercase, they will work on GitHub but fail on the React Router website, and vice versa.\r\n\r\nI've avoided the main headers (`#`/`<h1>`) because I don't think that we need to worry about them (we can just link to the whole markdown file instead of the header). I think that there is a separate issue there (try clicking the `<Router>` link in the first sentence of the [`<MemoryRouter>` documentation](https://reacttraining.com/react-router/core/api/StaticRouter)), but that can be handled in a different PR.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2017-06-02T07:41:13Z",
        "closed_at": "2017-06-02T16:25:08Z",
        "merged_at": "2017-06-02T16:25:08Z",
        "body": "URL:s are case sensitive, and fixes another instance of the link to `component-func`.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-06-01T18:51:43Z",
        "closed_at": "2017-06-01T20:47:45Z",
        "merged_at": "2017-06-01T20:47:45Z",
        "body": "https://reacttraining.com/react-router/core/api/Route/component-func should be https://reacttraining.com/react-router/core/api/Route/component",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 77,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2017-06-01T05:53:15Z",
        "closed_at": "2017-06-08T14:02:03Z",
        "merged_at": "2017-06-08T14:02:03Z",
        "body": "This is the JS port of the example added to the TypeScript definitions for StaticRouter and staticContext in https://github.com/DefinitelyTyped/DefinitelyTyped/pull/16812 as requested by @tkrotoff ",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2017-06-01T00:40:01Z",
        "closed_at": "2017-06-01T13:54:03Z",
        "merged_at": "2017-06-01T13:54:03Z",
        "body": "Code uses `img` for routes but comments use `images` for them.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 15,
        "deletions": 15,
        "changed_files": 6,
        "created_at": "2017-05-26T09:34:49Z",
        "closed_at": "2017-07-15T21:24:54Z",
        "merged_at": null,
        "body": "This only upgrades Webpack in the distribution packages, the website package will need some more work.\r\nThe file sizes don't change very much though, but I thought I'd submit the PR anyway.",
        "comments": 14
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-05-25T16:29:45Z",
        "closed_at": "2017-05-25T17:30:01Z",
        "merged_at": "2017-05-25T17:30:01Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 156,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2017-05-23T19:34:45Z",
        "closed_at": "2017-08-23T01:10:12Z",
        "merged_at": "2017-08-23T01:10:12Z",
        "body": "Fixes https://github.com/ReactTraining/react-router/issues/5003\r\n\r\n~~Is it ok I've added `is-equal` dependency? It's used by `expect` already.~~\r\n\r\nI needed it because checking if we are redirecting to the same route is not so trivial.  \r\n`to` can be a String or an Object, and the Object variant can have `pathname`, `search` and `state`, each of which could be a valid new route to redirect to.\r\n\r\ne.g. I might want to redirect to my own route with a different `search` string or `state` data.\r\n\r\n### Other PR Questions:\r\n\r\n- I'd really like the warning to be better, telling the user where that last <Redirect> originated or something that will help him realize where the issue is, any ideas?\r\n- How do I test if the usage of `warning`?  \r\n  In this case if we try to redirect to the same route we call `warning` to notify the user.",
        "comments": 16
    },
    {
        "merged": true,
        "additions": 90,
        "deletions": 0,
        "changed_files": 8,
        "created_at": "2017-05-21T11:35:17Z",
        "closed_at": "2017-06-21T20:31:02Z",
        "merged_at": "2017-06-21T20:31:02Z",
        "body": "Adding a warning as suggested in issue #5114.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-05-19T20:45:01Z",
        "closed_at": "2017-05-20T04:18:33Z",
        "merged_at": "2017-05-20T04:18:33Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 39,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2017-05-18T18:28:25Z",
        "closed_at": "2018-02-22T17:02:24Z",
        "merged_at": null,
        "body": "- Created failing test for `NavLink` - as per #5141 and https://codepen.io/penx/pen/jmeEXz\r\n- Fixed issue #5141 - `NavLink` should render child components that are wrapped by `withRouter`",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 68,
        "deletions": 29,
        "changed_files": 3,
        "created_at": "2017-05-17T19:43:03Z",
        "closed_at": "2017-07-23T17:44:46Z",
        "merged_at": "2017-07-23T17:44:46Z",
        "body": "Add optional otherProps argument to react-router-config's renderRoutes function.\r\n\r\nI'm working on migrating a rather complex project from react-router 3.x to 4.x, and I need the ability to pass props from a parent route's component to all child routes' components.\r\n\r\nAdding the otherProps as an optional argument to renderRoutes allows me to do this...",
        "comments": 16
    },
    {
        "merged": true,
        "additions": 26,
        "deletions": 5,
        "changed_files": 3,
        "created_at": "2017-05-17T18:52:06Z",
        "closed_at": "2017-05-18T04:09:32Z",
        "merged_at": "2017-05-18T04:09:32Z",
        "body": "Missing prop `location`",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-05-17T01:35:41Z",
        "closed_at": "2017-05-17T03:08:41Z",
        "merged_at": null,
        "body": "Add default props for `onClick`.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-05-15T14:00:52Z",
        "closed_at": "2017-05-15T16:20:21Z",
        "merged_at": "2017-05-15T16:20:21Z",
        "body": "documentation missing npm install --save history",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-05-12T19:25:28Z",
        "closed_at": "2017-05-12T20:52:36Z",
        "merged_at": "2017-05-12T20:52:36Z",
        "body": "* append `activeClassName` at end of class attribute ( only for aesthetic purpose  )\r\n* css tip: active-class should be declared after default-class ( css specificity )",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-05-12T08:11:34Z",
        "closed_at": "2017-05-12T13:29:48Z",
        "merged_at": "2017-05-12T13:29:48Z",
        "body": "BlockerAvoider -> BlockAvoider",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 38,
        "deletions": 13,
        "changed_files": 14,
        "created_at": "2017-05-10T21:46:01Z",
        "closed_at": "2017-08-02T14:05:43Z",
        "merged_at": "2017-08-02T14:05:43Z",
        "body": "Fix #5079.",
        "comments": 20
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 6,
        "changed_files": 3,
        "created_at": "2017-05-10T18:32:29Z",
        "closed_at": "2017-07-05T20:05:43Z",
        "merged_at": null,
        "body": "I'm building off of pull request #5093. I'm submitting this as a separate pull request because i'm changing the public API of React-Router-Native. The reason I'm changing the public API is because of React-Native 0.44 the BackHandler now handles the back button on Android AND tvOS.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2017-05-10T18:24:29Z",
        "closed_at": "2017-05-11T02:18:43Z",
        "merged_at": "2017-05-11T02:18:43Z",
        "body": "As of React Native 0.44 the BackAndroid API is deprecated in favor of BackHandler.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-05-10T14:50:56Z",
        "closed_at": "2017-05-10T21:31:59Z",
        "merged_at": "2017-05-10T21:31:59Z",
        "body": "Add missing opening parenthesis",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2017-05-09T09:45:31Z",
        "closed_at": "2017-05-09T13:04:48Z",
        "merged_at": null,
        "body": "This improve will helpful for using multi routers at same page. ",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-05-08T22:13:28Z",
        "closed_at": "2017-05-09T02:20:15Z",
        "merged_at": "2017-05-09T02:20:15Z",
        "body": "My eye was drawn to the individual packages, then I had to come back to this page before realising this link was the primary documentation link.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 62,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2017-05-08T10:12:12Z",
        "closed_at": "2017-11-10T16:01:00Z",
        "merged_at": null,
        "body": "Since there's been some discussion around it in https://github.com/ReactTraining/react-router/issues/4410 I made a quick guide to help other users and to develop a best-practice for the community.\r\n\r\nIt's based on the result of the discussion, mainly on comments by @pshrmn and @v1kku.\r\n\r\nI'm happy about any feedback, especially regarding the language (since I'm not a native english speaker).",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-05-05T11:36:11Z",
        "closed_at": "2017-05-05T18:24:53Z",
        "merged_at": "2017-05-05T18:24:53Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2017-05-03T15:36:43Z",
        "closed_at": "2017-10-03T23:00:41Z",
        "merged_at": "2017-10-03T23:00:41Z",
        "body": "I thought this might help clarify the parameters of `matchRoutes`. ",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 44,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-04-28T07:20:31Z",
        "closed_at": "2017-05-12T13:20:12Z",
        "merged_at": null,
        "body": "Added api docs for react-router-redux",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 12,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2017-04-27T07:16:19Z",
        "closed_at": "2017-07-15T23:32:24Z",
        "merged_at": null,
        "body": "I think that you shouldn't package `prop-types` in the UMD modules.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-04-25T14:00:47Z",
        "closed_at": "2017-04-25T15:53:50Z",
        "merged_at": "2017-04-25T15:53:50Z",
        "body": "Added a note in the docs to make it clearer that the `<ScrollToTop />` component needs to be wrapped in `withRouter`.\r\n\r\n#5031",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-04-25T01:50:30Z",
        "closed_at": "2017-10-03T23:01:16Z",
        "merged_at": null,
        "body": "Append \"**Documentation**\" header above link buttons\r\n\r\n<img width=\"1077\" alt=\"react_router__declarative_routing_for_react_js\" src=\"https://cloud.githubusercontent.com/assets/13282103/25365540/5d24ab94-29a4-11e7-804f-68fb10f38712.png\">\r\n<img width=\"487\" alt=\"react_router__declarative_routing_for_react_js\" src=\"https://cloud.githubusercontent.com/assets/13282103/25365545/632db4a4-29a4-11e7-9a47-05837bd9db0a.png\">\r\n\r\nMotivation: React-Router has very good docs and example but it's link may easy to overlook.\r\n(FYI: My teams junior development member overlooked this link)",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 80,
        "deletions": 70,
        "changed_files": 19,
        "created_at": "2017-04-24T21:28:24Z",
        "closed_at": "2017-07-14T23:48:18Z",
        "merged_at": null,
        "body": "Currently expect@1.x is being integrated into Jest (see more background in https://github.com/facebook/jest/issues/1679).\r\n\r\nIn [jest-codemods](https://github.com/skovhus/jest-codemods) I'm working on a codemod to automate the process of going from mjackson/expect to jest-matchers (if running in a browser) or plain Jest (if running in node). \ud83e\udd16  \r\n\r\nI've tested the codemod on this project and everything should still work. \r\n\r\nLet me know what you think.\r\n\r\n### Blocked: currently fails in older browsers \ud83d\udca3 \r\n\r\nSeems like jest-matchers have untranspiled code `SyntaxError: Unexpected keyword 'const'. Const declarations are not supported in strict mode.`.\r\n\r\nWill look into a solution for this.\r\n",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2017-04-24T11:35:14Z",
        "closed_at": "2017-04-24T16:11:54Z",
        "merged_at": "2017-04-24T16:11:54Z",
        "body": "This PR updates the website example to use the new package.\r\nThe old one will stop working with React 16.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 24,
        "deletions": 9,
        "changed_files": 1,
        "created_at": "2017-04-24T09:44:45Z",
        "closed_at": "2017-04-24T16:01:04Z",
        "merged_at": null,
        "body": "- [x] indicates that to see route changing live (w/o refresh you must have it be a prop)\r\n- [x] more neatly placed in render\r\n- [x] indicates to use View not div for react-native/web like I used it for",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 143,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-04-24T07:37:49Z",
        "closed_at": "2017-05-03T17:07:00Z",
        "merged_at": "2017-05-03T17:07:00Z",
        "body": "This is very basic, but hopefully can provide some footing for a developer before they begin to migrate an application.\r\n\r\nI'll probably add a couple more commits to this with some more details, but ideally other people could expand on this as well.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-04-23T21:32:38Z",
        "closed_at": "2017-04-24T02:30:21Z",
        "merged_at": "2017-04-24T02:30:21Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-04-20T22:29:40Z",
        "closed_at": "2017-04-21T02:39:40Z",
        "merged_at": "2017-04-21T02:39:40Z",
        "body": "Be more precise about the difference with the component attribute and the render/children attribute. Explain why inline function shouldn't be used in the component attribute",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-04-19T17:45:56Z",
        "closed_at": "2017-04-19T19:26:57Z",
        "merged_at": "2017-04-19T19:26:57Z",
        "body": "previously implied that only `router` was injected, but `location`,\r\n`params` and `routes` are also injected.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-04-18T19:13:39Z",
        "closed_at": "2017-04-18T20:32:54Z",
        "merged_at": null,
        "body": "If you have multiple ConnectedRouter components on a page and those components share a single store each component dispatches a `LOCATION_CHANGE` event when it mounts. Since event properly initializes the routing info a subsequently mounted ConnectedRouter does not need to dispatch an event.\r\n\r\nThis pull requests tracks references to stores and only dispatches the initial `LOCATION_CHANGE` if it is new.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-04-17T08:34:40Z",
        "closed_at": "2017-04-17T15:19:42Z",
        "merged_at": "2017-04-17T15:19:42Z",
        "body": "Fixed the broken link",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-04-16T23:39:16Z",
        "closed_at": "2017-04-17T15:20:14Z",
        "merged_at": "2017-04-17T15:20:13Z",
        "body": "react-router alt on logo was.... babel, just fixed it :)",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 32,
        "deletions": 15,
        "changed_files": 1,
        "created_at": "2017-04-14T21:06:46Z",
        "closed_at": "2017-10-03T23:02:23Z",
        "merged_at": null,
        "body": "Side-effects in `render()` are bad, right?\r\n\r\nI noticed that the server-side rendering docs suggest setting the `staticContext` prop the following way:\r\n\r\n```\r\nconst Status = ({ code, children }) => (\r\n  <Route render={({ staticContext }) => {\r\n    if (staticContext)\r\n      staticContext.status = code\r\n    return children\r\n  }}/>\r\n)\r\n```\r\n(Via https://reacttraining.com/react-router/web/guides/server-rendering/404-401-or-any-other-status)\r\n\r\n@gaearon has this to say about side-effects in render:\r\n> In React render() method should not have side effects. Dispatching from render() is wrong.\r\nsource: https://twitter.com/dan_abramov/status/693068087613116416\r\n\r\nReact docs say:\r\n> Keeping render() pure makes components easier to think about.\r\nsource: https://facebook.github.io/react/docs/react-component.html#render\r\n\r\nI think we can take this opportunity to educate developers (who are likely new to react when learning about this project) to do things the Right Way\u2122.\r\n\r\nThis is what I suggest instead:\r\n\r\n```\r\nclass Status extends React.Component {\r\n  static contextTypes = {\r\n    router: React.PropTypes.shape({\r\n      staticContext: React.PropTypes.object\r\n    }).isRequired\r\n  }\r\n  componentWillMount () {\r\n    const { router: { staticContext } } = this.context\r\n    if (staticContext) {\r\n      staticContext.status = this.props.code\r\n    }\r\n  }\r\n  render () {\r\n    return this.props.children\r\n  }\r\n}\r\n```\r\n\r\nSure, it's a little more verbose, but I think the trade-off is worth it.\r\n\r\nWhat do you guys think?",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-04-13T03:56:19Z",
        "closed_at": "2017-04-13T05:19:19Z",
        "merged_at": "2017-04-13T05:19:19Z",
        "body": "withRouter(connect(...)(MyComponent)->\r\nwithRouter(connect(...)(MyComponent))",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-04-12T23:03:10Z",
        "closed_at": "2017-04-13T00:06:30Z",
        "merged_at": "2017-04-13T00:06:30Z",
        "body": "It's vs Its",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 384,
        "deletions": 229,
        "changed_files": 11,
        "created_at": "2017-04-11T20:39:49Z",
        "closed_at": "2017-04-12T00:14:18Z",
        "merged_at": null,
        "body": "Considering React 16 will no longer provide `createReactClass` in the default package I thought it could be useful to have `react-router@3` free of that dependency.\r\n\r\nThis could reduce the library's footprint (if other libraries starts dropping `createReactClass` too) and possibly allow `react-router@3` to make use of the performance improvements offered by React 16+.\r\n\r\nWhat's in this PR:\r\n* We had mixins in [ContextUtils.js](https://github.com/ReactTraining/react-router/blob/1f18e7abb92dd69141f44f4cd846bf82992db9a8/modules/ContextUtils.js). I converted them to Higher Order Components instead. The mixins are still exported for now, to keep compatibility with anyone who depended on it (but they shouldn't, really).\r\n* I changed the functions which used the mixins and wrapped them around the HOCs.\r\n* Rewrote every createReactClass (except for the tests) to use React.Component",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 5,
        "changed_files": 5,
        "created_at": "2017-04-10T23:09:38Z",
        "closed_at": "2017-04-11T00:18:07Z",
        "merged_at": null,
        "body": "updates version for prop-types update to put major change on npm/yarn radar",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-04-10T12:35:46Z",
        "closed_at": "2017-04-10T14:21:25Z",
        "merged_at": "2017-04-10T14:21:25Z",
        "body": "Was incorrect and inconsistent with other badges shown.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 160,
        "deletions": 99,
        "changed_files": 3,
        "created_at": "2017-04-09T18:35:50Z",
        "closed_at": "2017-04-10T16:12:30Z",
        "merged_at": "2017-04-10T16:12:30Z",
        "body": "**Issue:** When having async hooks (onEnter, getComponent) on routes, server side parallel request fails a lot of time.\r\n\r\n**Reason:** Because pending hooks of onEnter and onChange are defined globally (https://github.com/ReactTraining/react-router/blob/v3/modules/TransitionUtils.js#L11), it can cause hooks collision between parallel request. And enterHooks.clear() can cause clearing other request hooks. \r\n\r\n**Fix:** Provide a scope for pending hooks instance and utility methods, so for each request hooks are maintained separately.  \r\n\r\nAdded test case which fails on the current version and passes with the patch on this PR. Let me know if any change required on PR. ",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 75,
        "deletions": 5,
        "changed_files": 9,
        "created_at": "2017-04-09T17:13:29Z",
        "closed_at": "2017-07-14T19:23:57Z",
        "merged_at": "2017-07-14T19:23:57Z",
        "body": "When using <Route> outside a valid <Router>, the message is not that explicit. It throws:\r\n\r\n`Cannot read property 'route' of undefined`\r\n\r\nEven though it's not that bad, I propose we make it even more explicit. Can't be bad to know where the error is coming from. If you made a typo when importing the router, it's not obvious otherwise.\r\n\r\nThis will throw an error rather than a warning because the library code would crash otherwise.",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 8,
        "changed_files": 4,
        "created_at": "2017-04-08T16:03:02Z",
        "closed_at": "2017-04-09T13:45:01Z",
        "merged_at": "2017-04-09T13:45:01Z",
        "body": "Couple of small linter errors fixed.\r\n\r\nI also updated eslint for the main package in order to took advantage of the new no-unuser-vars option, ignorerestsiblings, and allow the omit pattern used like here: https://github.com/Calyhre/react-router/blob/master/packages/react-router/modules/StaticRouter.js#L114",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 88,
        "deletions": 43,
        "changed_files": 47,
        "created_at": "2017-04-08T14:57:58Z",
        "closed_at": "2017-04-09T17:50:23Z",
        "merged_at": "2017-04-09T17:50:23Z",
        "body": "Codemon didn't catch them all, but I think I did \ud83d\ude09",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-04-07T09:35:41Z",
        "closed_at": "2017-04-07T17:46:37Z",
        "merged_at": "2017-04-07T17:46:37Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 115,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2017-04-06T22:25:00Z",
        "closed_at": "2017-10-03T22:54:54Z",
        "merged_at": "2017-10-03T22:54:54Z",
        "body": "While the quick start guide provides a working example, I think that for some people it can be a little bit much to learn React Router by having to parse through a file to figure out what is going on.\r\n\r\nThis covers the basic components that should be known by a user in order to create a `react-router-dom` application. It could be adapted pretty easily for `react-router-native`, but that isn't my wheelhouse.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 24,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2017-04-05T18:15:05Z",
        "closed_at": "2017-04-11T16:23:47Z",
        "merged_at": "2017-04-11T16:23:46Z",
        "body": "fixes #4910",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-04-02T17:29:55Z",
        "closed_at": "2017-04-03T03:35:30Z",
        "merged_at": "2017-04-03T03:35:30Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-04-02T03:15:49Z",
        "closed_at": "2017-04-02T15:23:18Z",
        "merged_at": "2017-04-02T15:23:18Z",
        "body": "This is the \"React Router Template\" from codepen.com/ReactJSTraining. This shouldn't actually be merged until that template is updated to `v4.0.0` (it is currently at `v4.0.0-beta.3`). It appears this hasn't been updated in a while since the old test case actually pointed to `v2.0.0` :laughing:",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 76,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2017-04-01T22:15:36Z",
        "closed_at": "2017-04-11T16:24:43Z",
        "merged_at": "2017-04-11T16:24:43Z",
        "body": "I'm still working on the wording of some of the answers, but here is a prospective initial state for a FAQ as mentioned here: #4852.\r\n\r\nI have no idea if this would actually be put on the documentation site, but I just put it in the root directory for increased visibility.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 374,
        "changed_files": 10,
        "created_at": "2017-03-31T06:51:46Z",
        "closed_at": "2017-04-04T20:23:38Z",
        "merged_at": null,
        "body": "I'm just curious how long it takes to run tests when browser support is removed. Will close once tests execute.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-03-31T05:20:28Z",
        "closed_at": "2017-03-31T13:59:39Z",
        "merged_at": "2017-03-31T13:59:39Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 15,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2017-03-31T04:12:37Z",
        "closed_at": "2017-03-31T14:02:47Z",
        "merged_at": null,
        "body": "close: `[react-router-config]: how to pass `extraProps` to children ? #4880 `",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2017-03-30T16:30:47Z",
        "closed_at": "2017-04-09T13:45:44Z",
        "merged_at": null,
        "body": "Perhaps linting should be added back to the test command?",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 26,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2017-03-29T13:49:13Z",
        "closed_at": "2017-03-29T16:09:28Z",
        "merged_at": null,
        "body": "the [path-to-regexp](https://www.npmjs.com/package/path-to-regexp#usage) API document has describe `path` argument as  \"an array of strings, or a regular expression\" :v:",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-03-28T20:31:58Z",
        "closed_at": "2017-03-29T00:45:11Z",
        "merged_at": null,
        "body": "In several cases (such as when using `react-motion` container components around routes) you need to be able to pass the incoming `style` prop down to the route children of a <Switch />. This PR ensures that the `style` prop that's assigned to `<Switch />` gets sent down to its components.\r\n\r\nAn example of this might be:\r\n\r\n```\r\nimport {TransitionMotion} from 'react-motion';\r\n\r\n<TransitionMotion>\r\n    <Switch>\r\n        <Route ... />\r\n        <Route ... />\r\n    </Switch>\r\n</TransitionMotion>\r\n```\r\n\r\nWhere the `TransitionMotion` component passes down a new `style` prop that should be propagated down to the next immediate DOM node child. Because `Switch` doesn't pass that prop through, the animation is broken.\r\n\r\nA few questions about this PR:\r\n\r\n- I'm currently only passing down the `style` prop to solve my specific needs, but should `Switch` pass down all props instead?\r\n- I'm not sure why the CI tests are failing. I'm not seeing where the error is.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-03-28T08:12:08Z",
        "closed_at": "2017-04-11T16:29:29Z",
        "merged_at": "2017-04-11T16:29:29Z",
        "body": "Fix #4812 ",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-03-28T04:20:42Z",
        "closed_at": "2017-03-28T15:40:55Z",
        "merged_at": "2017-03-28T15:40:55Z",
        "body": "On this page: https://reacttraining.com/react-router/web/api/match\r\n\r\nThe `matchPath` link is pointing to `withRouter`.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2017-03-26T00:42:58Z",
        "closed_at": "2017-03-26T03:18:04Z",
        "merged_at": "2017-03-26T03:18:04Z",
        "body": "Closed the un-closed `<a>` tags in `CONTRIBUTING.md`. They were preventing markdown headers from rendering.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 104,
        "deletions": 7,
        "changed_files": 5,
        "created_at": "2017-03-25T21:46:31Z",
        "closed_at": "2017-04-11T18:42:41Z",
        "merged_at": "2017-04-11T18:42:41Z",
        "body": "This brings the current `withRouter` more in line with what we had in v3.\r\n\r\n1. WrappedComponent: Lets people access the original component as a static property. Useful for unit testing the component without the router (might help with #4795). It's also what react-redux does.\r\n2. wrappedComponentRef prop: Passed as `ref` to the original component. v3 and react-redux use a different API based on `options: { withRef: true }` and `getWrappedInstance()`, but this way seems more comfortable to me to use with ref functions, and we don't need to change the signature to something like `options => Component => Component` or `(Component, options) => Component`. It's also suggested in the  [react docs](https://facebook.github.io/react/docs/higher-order-components.html#refs-arent-passed-through).\r\n3. Hoist statics of the original component",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2017-03-24T11:29:13Z",
        "closed_at": "2017-03-24T13:12:02Z",
        "merged_at": "2017-03-24T13:12:02Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 353,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2017-03-23T20:21:02Z",
        "closed_at": "2017-03-24T17:00:10Z",
        "merged_at": "2017-03-24T17:00:10Z",
        "body": "My attempt at writing tests for #4728 ",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-03-23T16:00:26Z",
        "closed_at": "2017-03-23T17:32:38Z",
        "merged_at": "2017-03-23T17:32:38Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-03-23T08:26:25Z",
        "closed_at": "2017-03-23T14:43:37Z",
        "merged_at": "2017-03-23T14:43:37Z",
        "body": "Without this change I get:\r\n\r\n```js\r\nAndroidBackButton.render(): A valid React element (or null) must be returned.\r\n```\r\n\r\nWhen used as shown in docs:\r\n\r\n```js\r\n          <NativeRouter>\r\n            <View style={{flex: 1}}>\r\n              <AndroidBackButton />\r\n            </View>\r\n          </NativeRouter>\r\n```",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 101,
        "deletions": 9,
        "changed_files": 3,
        "created_at": "2017-03-22T20:13:47Z",
        "closed_at": "2017-07-05T20:16:27Z",
        "merged_at": "2017-07-05T20:16:27Z",
        "body": "This change adds the following behavior to the react-router-native/Link component:\r\n\r\n - `onPress` handler can now be passed to Link\r\n - `onPress` event can now be cancelled using `preventDefault()`\r\n\r\n---\r\n\r\nAn example illustrating the new behavior\r\n\r\n```jsx\r\nimport React, { Component } from 'react'\r\nimport { Link } from 'react-router-native'\r\n\r\nclass Example extends Component {\r\n  onPress(event) { // this function is now called\r\n    event.preventDefault() // this stops react-router from navigating\r\n  }\r\n\r\n  render() {\r\n    return <Link to='/' onPress={this.onPress.bind(this)} />\r\n  }\r\n}\r\n```\r\n\r\nFixes #4811\r\n\r\n---\r\n\r\nNotes: The react-native init included tests are failing. There is not an eslint config in react-router-native, so I tried to match the style of the other packages.",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2017-03-22T12:35:23Z",
        "closed_at": "2017-03-22T14:55:37Z",
        "merged_at": null,
        "body": "",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 18,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-03-21T17:14:14Z",
        "closed_at": "2017-03-21T20:50:00Z",
        "merged_at": "2017-03-21T20:50:00Z",
        "body": "Make it a little bit clearer what `<StaticRouter context>` is for and link to the server rendering guide.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2017-03-20T21:12:33Z",
        "closed_at": "2017-03-21T00:07:07Z",
        "merged_at": "2017-03-21T00:07:07Z",
        "body": "As requested in #4776, I'm redoing this PR against master. This adds additional links that will take a reader directly to the docs on reacttraining.com for each package listed. Screenshot of what I'm proposing:\r\n\r\n<img width=\"609\" alt=\"screen shot 2017-03-20 at 2 08 39 pm\" src=\"https://cloud.githubusercontent.com/assets/1418949/24121890/270882f4-0d77-11e7-8d3e-f4900df92f34.png\">\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 71,
        "deletions": 30,
        "changed_files": 1,
        "created_at": "2017-03-20T18:37:30Z",
        "closed_at": "2017-03-20T19:38:39Z",
        "merged_at": null,
        "body": "This example works, is fairly simple and uses the same template outlining examples on the website. Is this ok or should I add anything else? Is it possibly preferable to use `withRouter` instead of wrapping the `<ConnectedApp/>` component in a `<Route/>`?",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-03-20T07:44:48Z",
        "closed_at": "2017-03-20T15:47:40Z",
        "merged_at": "2017-03-20T15:47:40Z",
        "body": "Because [github.com/ReactTraining/react-router-config](https://github.com/ReactTraining/react-router-config) is 404.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 11,
        "changed_files": 2,
        "created_at": "2017-03-19T16:59:54Z",
        "closed_at": "2017-04-11T16:22:34Z",
        "merged_at": "2017-04-11T16:22:34Z",
        "body": "Small fix. When there is no `className` passed to `NavLink`, `active` class has unnecessary space added after it. Test checking active class updated - now can use `isEqual`.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-03-19T09:10:13Z",
        "closed_at": "2017-03-19T18:58:39Z",
        "merged_at": "2017-03-19T18:58:39Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2017-03-18T02:46:32Z",
        "closed_at": "2017-03-20T03:11:35Z",
        "merged_at": null,
        "body": "I think these links should go to the actual documentation site rather than the file directory on GitHub. Searching for \"React Router 4 Docs\" brought me to this page, when in reality I was looking for the actual doc site.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-03-18T02:21:16Z",
        "closed_at": "2017-03-18T05:00:14Z",
        "merged_at": "2017-03-18T05:00:14Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 43,
        "deletions": 144,
        "changed_files": 6,
        "created_at": "2017-03-17T14:29:14Z",
        "closed_at": "2017-03-17T16:21:26Z",
        "merged_at": null,
        "body": "This is another way to address #4713",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 90,
        "deletions": 22,
        "changed_files": 4,
        "created_at": "2017-03-15T15:43:52Z",
        "closed_at": "2017-03-23T19:31:11Z",
        "merged_at": "2017-03-23T19:31:11Z",
        "body": "Hopefully people will have an easier time finding this when it is on the site.",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 3956,
        "deletions": 0,
        "changed_files": 58,
        "created_at": "2017-03-15T01:11:47Z",
        "closed_at": "2017-07-13T23:24:41Z",
        "merged_at": null,
        "body": "It made its way all the way back! :D ",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-03-14T20:20:16Z",
        "closed_at": "2017-03-14T21:24:38Z",
        "merged_at": "2017-03-14T21:24:38Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2017-03-14T16:06:24Z",
        "closed_at": "2017-03-14T17:14:14Z",
        "merged_at": "2017-03-14T17:14:14Z",
        "body": "I got a warning in my webpack console and see they have update their docs now this is no more `import loadSomething from 'bundle?lazy!./Something'` but `import loadSomething from 'bundle-loader?lazy!./Something'` :)",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 19,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2017-03-14T13:22:51Z",
        "closed_at": "2017-03-14T20:00:29Z",
        "merged_at": "2017-03-14T20:00:28Z",
        "body": "Fixes #4725\r\n\r\nMakes `&&` booleans easier inside of Switch.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 22,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-03-14T06:50:58Z",
        "closed_at": "2017-03-14T12:51:12Z",
        "merged_at": null,
        "body": "add the loadSomething function instruction and how use the code-splitting when user use typeScript\r\nI think it can help users better understand how code-splitting works and help users use it when they use typeScript",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 12,
        "changed_files": 1,
        "created_at": "2017-03-13T22:02:02Z",
        "closed_at": "2017-03-14T01:05:06Z",
        "merged_at": null,
        "body": "By the fact `this.computeMatch` can easily be used directly without holding it result in react state (_here some kind of memoized version for performance reason._)\r\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2017-03-13T16:56:46Z",
        "closed_at": "2017-03-27T17:46:50Z",
        "merged_at": null,
        "body": "The `renderRoutes` doesn't current have any concept of `exact`. Adding it here.\n\nNo `CHANGELOG` because still in beta, and no tests because there don't exist any for `renderRoutes` yet.\n\n... and, on another note since v4 just came out:\n\nThanks for all the work. I can appreciate how challenging (and, frankly, thankless) maintaining an OSS project can be. So just thought it worth expressing my gratitude.",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-03-13T14:07:14Z",
        "closed_at": "2017-03-14T01:25:58Z",
        "merged_at": "2017-03-14T01:25:58Z",
        "body": "I found GUIDE docs scroll management is tiny broken.\r\nAnd append `<ScrollToDoc>`.\r\n\r\n|before|after|\r\n|--|--|\r\n|![kapture 2017-03-13 at 23 01 12](https://cloud.githubusercontent.com/assets/13282103/23857522/fa5814d0-0840-11e7-9355-76f6207f5860.gif) | ![kapture 2017-03-13 at 23 02 49](https://cloud.githubusercontent.com/assets/13282103/23857597/2efd85f8-0841-11e7-82ed-e7e8fc0f18c4.gif) |\r\n\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 77,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2017-03-12T19:28:22Z",
        "closed_at": "2017-03-12T21:59:30Z",
        "merged_at": null,
        "body": "This pull request adds an example that shows how to use `match.path` with nested routes and `match.url` when linking to those.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-03-12T11:47:43Z",
        "closed_at": "2017-03-13T14:34:30Z",
        "merged_at": "2017-03-13T14:34:30Z",
        "body": "While we're all super excited for the release of react router 4, there are still allot of users who still use 2.x so there should be easy access to these documentation pages until they upgrade.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 124,
        "deletions": 11,
        "changed_files": 4,
        "created_at": "2017-03-12T09:39:33Z",
        "closed_at": "2018-06-06T16:02:23Z",
        "merged_at": null,
        "body": "Hi @timdorr,\r\n\r\nThis is my first attempt to make it work with time travelling.\r\n\r\n- I use a similar approach with [connected-react-router](https://github.com/supasate/connected-react-router/blob/07dfa3cfff3587d5bd3776854b1e5a2aec74d5ca/src/ConnectedRouter.js).\r\n- The test cases are from old [react-router-redux](https://github.com/reactjs/react-router-redux/blob/master/test/_createSyncTest.js#L200-L254).\r\n\r\nI make a [repo](https://github.com/supasate/test-react-router-redux) to demonstrate that it starts working now.\r\n\r\nHowever, there are two known problems.\r\n1. [Internal browser stack is modified when time travelling](https://github.com/supasate/connected-react-router/issues/36). It should be later fixed with zalmoxisus/redux-devtools-instrument#15, so, I ignore it for now.\r\n\r\n2. `reset` test case is fail. This is crucial and needs to discuss. \r\n\r\nThis problem is caused by the `reset` action will reset the store to its initial state which its location state is `null` and cannot be pushed to the history object. \r\n\r\nIn [connected-react-router](supasate/connected-react-router), we solved this issue by providing the initial history to be the initial location state in the store like the following:\r\n\r\n```js\r\nconst store = createStore(\r\n  connectRouter(history)(rootReducer), // new root reducer with router state\r\n  initialState,\r\n  compose(\r\n    ...\r\n  ),\r\n)\r\n``` \r\n\r\nThis pattern (higher order reducer) has some advantages.\r\n1. The location in the store will begin with the initial history location instead of `null` (and the devtools's `reset()` will bring the store to match with the first URL request).\r\n2. It doesn't trigger `LOCATION_CHANGE` action at the beginning.\r\n3. Users don't need to manually mount `routerReducer` to the root reducer. It will be done automatically with the key `router`.\r\n\r\nI also make a [PR](https://github.com/supasate/connected-react-router/pull/43/files) to `connected-react-router` to check that it works with same test case.\r\n\r\nSo, if you think this pattern is the right way to go, I will try refactoring the reducer.\r\n\r\n\r\n",
        "comments": 22
    },
    {
        "merged": true,
        "additions": 29,
        "deletions": 1,
        "changed_files": 4,
        "created_at": "2017-03-12T04:38:37Z",
        "closed_at": "2017-03-13T19:06:27Z",
        "merged_at": "2017-03-13T19:06:27Z",
        "body": "This PR will add support for the ConnectedRouter to render Preact components without the help of `preact-compat` alias. As seen in this repo [developit/react-router-4-test](https://github.com/developit/react-router-4-test), it will work out of the box with the normal Router component.\r\n\r\nI'm not sure what other kind of tests you would like to see aside from a snapshot. This shows that it doesn't break the current implementation, but not sure a way to prove in tests, that it does in fact work with Preact.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-03-12T02:27:43Z",
        "closed_at": "2017-03-13T14:35:48Z",
        "merged_at": "2017-03-13T14:35:48Z",
        "body": "Code-splitting documentation for `react-router-dom` has an import for the loadDashboard module, but references the same loadAbout module that precedes it.\r\n\r\nChanges the import filename to reflect the import name.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-03-12T00:37:50Z",
        "closed_at": "2017-03-13T14:33:51Z",
        "merged_at": "2017-03-13T14:33:51Z",
        "body": "## Version\r\n5.0.0-alpha.2 (react-router-redux)\r\n\r\n## Test Case\r\nNot sure how to test an npm pack\r\n## Steps to reproduce\r\n\r\n1. ` npm install react-router-redux@next`\r\n2. include in project\r\n\r\n## Expected Behavior\r\nRun without breaking\r\n\r\n## Actual Behavior\r\n\r\nERROR in ./~/react-router-redux/index.js\r\nModule not found: Error: Cannot resolve 'file' or 'directory' ./actions in /Users/joshfurie/hero.client/node_modules/react-router-redux\r\n @ ./~/react-router-redux/index.js 21:15-35\r\n\r\nERROR in ./~/react-router-redux/index.js\r\nModule not found: Error: Cannot resolve 'file' or 'directory' ./middleware in /Users/joshfurie/hero.client/node_modules/react-router-redux\r\n @ ./~/react-router-redux/index.js 70:18-41",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-03-11T23:06:21Z",
        "closed_at": "2017-07-05T20:11:07Z",
        "merged_at": "2017-07-05T20:11:07Z",
        "body": "Line 32 has to be `aria-current` instead of `ariaCurrent`, otherwise React will strip it out.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-03-11T22:16:22Z",
        "closed_at": "2017-03-13T14:34:05Z",
        "merged_at": "2017-03-13T14:34:05Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 117,
        "deletions": 13,
        "changed_files": 8,
        "created_at": "2017-03-11T19:01:03Z",
        "closed_at": "2018-02-22T17:01:25Z",
        "merged_at": null,
        "body": "This moves the logic for getting the match object for a pathless `<Route>` `matchPath`. When automatic path resolving is added, `matchPath` will need access to the parent `match`, so we will need to pass that argument to `matchPath` eventually anyways.\r\n\r\nWhen a parent `match` is `null`, a match object with default values is returned by `matchPath`. This match object should not be relied upon for resolving paths, but it will allow a `<Route>` that uses the `component` or `render` prop to render.\r\n\r\nFixes #4695",
        "comments": 20
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-03-11T04:39:15Z",
        "closed_at": "2017-03-11T07:19:44Z",
        "merged_at": "2017-03-11T07:19:44Z",
        "body": "Just noticed the lack of space here :smile:",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 25,
        "deletions": 10,
        "changed_files": 1,
        "created_at": "2017-03-10T18:43:08Z",
        "closed_at": "2017-03-10T23:46:29Z",
        "merged_at": "2017-03-10T23:46:29Z",
        "body": "A little bit of rewording and also mention `PureComponent`.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-03-10T15:51:12Z",
        "closed_at": "2017-03-14T01:15:43Z",
        "merged_at": "2017-03-14T01:15:43Z",
        "body": "Pinging off of #4676, this PR improves documentation and directly links the post that was mentioned by @pshrmn. It also includes some example code to help new users understand the issue and mitigate blocking updates.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-03-10T12:46:10Z",
        "closed_at": "2017-03-10T14:07:59Z",
        "merged_at": null,
        "body": "The setRouteLeaveHook example is incorrect as it is missing the call to `window.confirm`.\r\n\r\nThis PR fixes it.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1139,
        "deletions": 20,
        "changed_files": 18,
        "created_at": "2017-03-10T11:40:06Z",
        "closed_at": "2017-03-10T17:08:11Z",
        "merged_at": "2017-03-10T17:08:11Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4318,
        "deletions": 1,
        "changed_files": 19,
        "created_at": "2017-03-09T03:57:19Z",
        "closed_at": "2017-03-10T19:04:01Z",
        "merged_at": "2017-03-10T19:04:01Z",
        "body": "> A wild react-router-redux appears!\r\n\r\nThis is mostly copied from the current project, as it all works as-is. However, it drops the whole synchronizing-location-when-time-traveling thing. It was complex and I don't get the sense it was that popular of a use case. The important part was getting location into Redux's state, so you could easily get to it with `connect()`. If people want it that badly, we can bring it back and update for history 4.x (it shouldn't be a ton of work to do so).\r\n\r\nIt adds a `<ConnectedRouter>` type of router that takes in a history prop and can read the store from `<Provider>` (or a store prop, of course).\r\n\r\nSome other miscellany: \r\n- Test suite is built with Jest. I'm a fan.\r\n- UMD build is with Rollup instead of webpack. We were getting [a 50% size reduction](https://github.com/reactjs/redux/pull/2283) by switching Redux to it, so it seems worthwhile.\r\n- I switched Lerna to independent mode, since react-router-redux is already at 4.0.8. Hopefully this won't cause huge headaches...\r\n\r\nI'll add some comments in where I've got some sticking points before this should get merged.",
        "comments": 11
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 11,
        "changed_files": 1,
        "created_at": "2017-03-08T18:52:21Z",
        "closed_at": "2017-03-08T21:42:10Z",
        "merged_at": "2017-03-08T21:42:10Z",
        "body": "Currently, the `location` object that `<FakeBrowser>` uses as its key is `window.location`, which does not have a `key` property.\r\n\r\nThis PR just renders a `<Route>` around the `<FakeBrowser>` so that it can access the current `location` object. This will reset the active example when the link to it in the sidebar is clicked.\r\n\r\nAlternatively, the `example.slug` could be used as a key. If that is the case, then clicking the sidebar link of the active example will have no effect.\r\n\r\nI am not certain which of those is preferable.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 19,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-03-08T18:18:46Z",
        "closed_at": "2017-03-08T21:43:53Z",
        "merged_at": "2017-03-08T21:43:53Z",
        "body": "I'm not sure if these were intentionally or accidentally removed in 45649fd. I have seen a few people having issues that would be easier to debug with these warnings.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 136,
        "deletions": 64,
        "changed_files": 15,
        "created_at": "2017-03-08T07:04:20Z",
        "closed_at": "2017-03-08T16:36:54Z",
        "merged_at": "2017-03-08T16:36:54Z",
        "body": "Per #4650. This is mostly self-explanatory. I didn't look through the docs, but I am sure there are a few small changes that will need to be made with them.\r\n\r\n@ryanflorence I updated the context references that I saw in `react-router-native`. There aren't any tests there to verify nothing is breaking, but everything looks right to me.\r\n\r\n@mjackson I changed how `staticContext` gets placed on `context.router` to make `<Router>`'s implementation slightly simpler. I can revert it, but then `<Router>` would need to check its parent context.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 27,
        "deletions": 27,
        "changed_files": 5,
        "created_at": "2017-03-07T07:25:59Z",
        "closed_at": "2017-03-07T18:19:02Z",
        "merged_at": null,
        "body": "Fix for overriding context variable `route` with `react-relay` context variable with same name.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-03-07T05:32:19Z",
        "closed_at": "2017-03-07T18:20:20Z",
        "merged_at": "2017-03-07T18:20:20Z",
        "body": "This was not transferred to the data in `Web.js` during the website overhaul.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 97,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-03-06T06:57:21Z",
        "closed_at": "2017-03-06T19:32:32Z",
        "merged_at": "2017-03-06T19:32:32Z",
        "body": "Add a guide to explain why components are not updating after navigation.\r\n\r\nA rough draft, but I think that it conveys the idea well.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 44,
        "deletions": 5,
        "changed_files": 5,
        "created_at": "2017-03-06T05:18:46Z",
        "closed_at": "2017-03-06T17:03:19Z",
        "merged_at": "2017-03-06T17:03:19Z",
        "body": "Add a parent match object as the third argument to `matchPath`.\r\n\r\n```js\r\nmatchPath(pathname, options, parent)\r\n```\r\n\r\nWhen the `path` is undefined, `matchPath` will return the parent match instead of creating a new object. Previously, an undefined `path` would create a new match object. This meant that attempting to access the current `match` within a pathless `<Route>` would give you incorrect values.\r\n\r\n```js\r\n// location = { pathname: '/arizona/phoenix' }\r\n\r\n// before\r\n<Route path='/:state' render={({ match }) => (\r\n  // match = { url: '/arizona', params: { state: 'arizona' }, ... }\r\n  <Route render={({ match }) => (\r\n    // match = { url: '/arizona/phoenix', params: {}, ... }\r\n  )}/>\r\n)}/>\r\n\r\n// after\r\n<Route path='/:state' render={({ match }) => (\r\n  // match = { url: '/arizona', params: { state: 'arizona' }, ... }\r\n  <Route render={({ match }) => (\r\n    // match = { url: '/arizona', params: { state: 'arizona' }, ... }\r\n  )}/>\r\n)}/>\r\n```\r\n\r\nOne benefit of this is that a component wrapped by `withRouter` will receive the proper `match` object (before, it would receive a new `match` object with incorrect values). This will also be beneficial for resolving locations.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-03-03T16:02:26Z",
        "closed_at": "2017-03-08T05:22:29Z",
        "merged_at": "2017-03-08T05:22:29Z",
        "body": "Since most of users provide the same class, it would be great to have it as a default one so we don't need to define it every time or make a wrapper component for this.\r\n\r\nThe other users, who need another class will pass another activeClassName, same as they have to do in current version.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-02-25T00:56:04Z",
        "closed_at": "2017-02-25T03:24:19Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 36,
        "deletions": 250,
        "changed_files": 7,
        "created_at": "2017-02-24T22:39:33Z",
        "closed_at": "2017-02-28T02:16:40Z",
        "merged_at": null,
        "body": "Why?\r\n\r\n1. They are hard to understand\r\n2. They don\u2019t feel like React\r\n3. They were causing *lots of re-rendering on popstate* that we\u2019d have to start doing our own scheduling/batching to get around D: With every new nested Route you'd get another round of rendering.\r\n\r\n## But what about `shouldComponentUpdate`?\r\n\r\nPass `location` to the `PureComponent` (or whatever). If a component as a Route or Switch in it then `location` needs to be a part of the\r\nsCU diffing.\r\n\r\n```jsx\r\n<Route render={({ location }) => (\r\n  <SomePureComponent location={location}/>\r\n)}/>\r\n```\r\n\r\nAlso, `withRouter` continues to subscribe directly to history if somebody would rather jump into the subscription world instead of passing a prop down.\r\n\r\n## What about Redux?\r\n\r\nWe implemented subscriptions so that deep updates work in Redux. But, Redux users want more than just that.\r\n\r\nThey want to:\r\n\r\n1. get deep updates that survive redux\u2019s automatic sCU\r\n2. read routing state from the store, not components\r\n3. navigate with dispatch\r\n4. sync the url and store so the devtools time-travel/upload debugging tools work\r\n\r\nSubscriptions only solved (1). To get the rest requires the exact same touch points whether we do subscriptions or not.\r\n\r\n## In summary\r\n\r\nSince the Redux integration story is identical whether we use subscriptions or not, and normal sCU can be solved by just passing the `location` to the optimized components, there\u2019s no reason we need to keep using subscriptions.\r\n\r\nWe\u2019re bowing out of a fight against React where we implement our own scheduling of updates. Also, we still have `withRouter` if people feel like stepping into the ring.",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-02-24T18:43:24Z",
        "closed_at": "2017-02-24T20:10:16Z",
        "merged_at": null,
        "body": "The previous checks were incorrect and would spam the console with incorrect warnings.\r\n\r\nThe previous check looked like `!(!nextProps.location && this.props.location)` which in the case of the location not existing would always return true.\r\n\r\n`!(!nextProps.location && this.props.location)` => `!(!undefined && undefined)` => `!(false)` => `true`",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 38,
        "deletions": 7,
        "changed_files": 2,
        "created_at": "2017-02-23T18:44:49Z",
        "closed_at": "2017-02-23T22:46:38Z",
        "merged_at": "2017-02-23T22:46:38Z",
        "body": "First commit is a test that fails if you check out that SHA. Next commit will be a fix that comes with a behavior change.\r\n\r\nFixes #4578",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 302,
        "deletions": 38,
        "changed_files": 10,
        "created_at": "2017-02-23T16:11:15Z",
        "closed_at": "2017-03-03T06:27:04Z",
        "merged_at": "2017-03-03T06:27:04Z",
        "body": "When a `<Switch>` or a `<Route>` has a `location` prop, its children should match using that `location` instead of the current `history.location`.\r\n\r\nThis also adds a modal example since the PR changes enable it and that seems to be a popular request.",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2017-02-22T21:42:37Z",
        "closed_at": "2017-02-23T00:32:50Z",
        "merged_at": "2017-02-23T00:32:50Z",
        "body": "",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 102,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2017-02-22T19:26:45Z",
        "closed_at": "2017-02-26T03:53:02Z",
        "merged_at": "2017-02-26T03:53:01Z",
        "body": "**Edited** :scissors:\r\n\r\nRight now, a component that is rendered within a `<Route>` has a `context.router.match` object that it can use to determine \"where\" it is. A photo album link may be in `{ url: '/albums' }` while a photo link may be in `{ url: '/albums/123' }`. This is great for resolving relative paths.\r\n\r\nThe exception is components that are rendered inside of a `<Router>` but not within a `<Route>`. The `context.router` object created by a `<Router>` provides no initial `match` object, so if one of these components wants to know \"where\" it is, is has to use default values. A root match would allow those components to know \"where\" they are without resorting to default values.\r\n\r\n```js\r\nconst url = match && match.url  ? match.url : '/'\r\n```\r\n\r\nThis isn't the only situation where `match` is falsy, though. A `match` can also be `null` when rendered inside of a `<Route>` with a `path` prop that uses the `children` prop to render. In those cases, I do not believe an attempt should be made to resolve the path (see #4560), so it is important to distinguish between the two situations. Efforts could be made to behave differently when `context.router.match` is `undefined` vs. `null`, but when it is `undefined`, we really just want a root match `{ url: '/' }`, so I believe that it makes sense to provide that by adding a root `match`.\r\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 54,
        "changed_files": 1,
        "created_at": "2017-02-22T00:13:07Z",
        "closed_at": "2017-02-24T01:05:29Z",
        "merged_at": "2017-02-24T01:05:29Z",
        "body": "This still does not block anyone to actually do it, as the developer can actually take care of persisting the history and then passing it as `initialEntries` and `initialIndex` props, but I don't know of any app actually doing it.",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2017-02-21T06:10:02Z",
        "closed_at": "2017-02-21T16:27:26Z",
        "merged_at": "2017-02-21T16:27:26Z",
        "body": "Some little fixes for things that were causing warning errors in the Travis builds.\r\n\r\nNo idea who could have missed adding a `<Prompt message>` :innocent:",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2017-02-21T05:47:19Z",
        "closed_at": "2017-02-21T16:30:06Z",
        "merged_at": "2017-02-21T16:30:06Z",
        "body": "Adds `warning` dependency and imports `warning` in `<Switch>` and `<Route>` (missing from 143db65).",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 117,
        "deletions": 5,
        "changed_files": 3,
        "created_at": "2017-02-18T19:26:39Z",
        "closed_at": "2017-02-20T03:20:16Z",
        "merged_at": null,
        "body": "As described in #4548. As you can see, the changes are minimal but I believe they really improve usage.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-02-18T16:50:17Z",
        "closed_at": "2017-02-18T23:23:12Z",
        "merged_at": "2017-02-18T23:23:12Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3832,
        "deletions": 3698,
        "changed_files": 7,
        "created_at": "2017-02-16T18:29:31Z",
        "closed_at": "2019-07-03T14:26:46Z",
        "merged_at": null,
        "body": "Pulled the relative route matching out of #4459. Most of the interesting code to look at is in `matchPath.js`.",
        "comments": 24
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-02-16T10:37:28Z",
        "closed_at": "2017-02-16T16:56:55Z",
        "merged_at": null,
        "body": "See #4534.\r\n\r\nUntested, and not sure if a change needs to be done elsewhere, but this is the concept.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-02-14T12:37:46Z",
        "closed_at": "2017-02-14T15:51:30Z",
        "merged_at": null,
        "body": "The fake-browser part of website seems broken and I kind of fixed it.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 27,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2017-02-14T10:22:31Z",
        "closed_at": "2017-02-14T22:22:28Z",
        "merged_at": null,
        "body": "Currently it seems there's no way pass the http status for redirecting up to the `StaticRouter` context for server side renders.\r\n\r\nThis PR passes up the `state` (as indicated in the docs) to the `context` so we can pick it up and set the status. \r\n\r\nI'm not sure if this should also apply to `BrowserRouter` or somewhere else. Happy to update the PR in case in missed something.\r\n\r\nhttps://github.com/ReactTraining/react-router/pull/4528/commits/3be72c92b9f12e3a84507058173bcf8c8e485653 fixes a `npm lint` issue that caused lint not to pass. The line isn't otherwise part of this PR.",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-02-10T21:56:10Z",
        "closed_at": "2017-02-11T14:24:11Z",
        "merged_at": "2017-02-11T14:24:11Z",
        "body": "Update docs to state that the elements passed to a `<Switch>` should be `<Route>`s. I used \"should\" instead of \"must\" because technically any component with the correct props will work.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-02-10T10:51:33Z",
        "closed_at": "2017-02-10T16:09:32Z",
        "merged_at": "2017-02-10T16:09:31Z",
        "body": "There is no mention of the following in the Injected Props docs at present:\r\n\r\n#### `routes`\r\nThe registered routes.\r\n\r\nAlthough when I'm debugging react-router 3.0.2 I can certainly see it there (and have been using with react-router 2.0 and 3.0).  So I've added it - hope that's helpful.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 15,
        "deletions": 13,
        "changed_files": 1,
        "created_at": "2017-02-09T20:24:40Z",
        "closed_at": "2017-02-13T17:32:00Z",
        "merged_at": "2017-02-13T17:32:00Z",
        "body": "Related to https://github.com/ReactTraining/react-router/issues/4493.\r\nThis [test](https://github.com/oliviertassinari/babel-plugin-transform-react-remove-prop-types/tree/master/test/fixtures/es-class-assign-property-variable) should ensure us it's working correctly.\r\n\r\ncc @timdorr ",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 61,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2017-02-09T17:41:48Z",
        "closed_at": "2017-02-09T18:56:57Z",
        "merged_at": "2017-02-09T18:56:57Z",
        "body": "Adds documentation of the `<NavLink>` component to the API section of the website. ",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 20,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2017-02-09T16:38:39Z",
        "closed_at": "2017-03-08T15:31:53Z",
        "merged_at": null,
        "body": "Currently, the `isActive` prop only receives the `match` object and the current `location` object. This doesn't allow for more interesting active comparisons, like checking whether the `search` prop of a `<NavLink>`'s `to` matches the `search` value of the current `location`.\r\n\r\nThis PR adds the `to` prop as an argument to the `isActive` function call.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-02-08T21:22:49Z",
        "closed_at": "2017-02-09T09:45:09Z",
        "merged_at": "2017-02-09T09:45:09Z",
        "body": "`to` is currently implicitly required. Might as well make it throw when it's not included.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2017-02-08T05:00:39Z",
        "closed_at": "2017-02-08T17:33:00Z",
        "merged_at": "2017-02-08T17:33:00Z",
        "body": "Remove the `react-router` external from `react-router-dom`'s `webpack.config.js`. This was preventing `react-router`'s modules from being bundled into the UMD builds.\r\n\r\nI used the `react-router-dom.js` and `react-router-dom.min.js` files in a mini project and the modules from `react-router` imported as expected. The file sizes are also similar to the beta 4 build, so it appears that everything is being included as expected.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-02-07T10:23:19Z",
        "closed_at": "2017-02-07T16:05:54Z",
        "merged_at": "2017-02-07T16:05:54Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 52,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2017-02-06T18:00:53Z",
        "closed_at": "2017-02-07T00:19:21Z",
        "merged_at": "2017-02-07T00:19:21Z",
        "body": "#4423 added Preact support by making `children` null if its length is zero.\r\n\r\n[`Function.length`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/length) indicates how many arguments the function takes, so a function that takes no arguments has a length of 0.\r\n\r\n```js\r\n<Route path='/okay' children={() => <div>What?</div>} /> // this would set children to null\r\n```\r\n\r\nThis PR will make sure that `children` is an array before setting it to `null` when it is empty.\r\n\r\nI also took the liberty of adding some basic `<Route>` tests for its `component`, `render`, and `children` props.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2017-02-06T11:45:15Z",
        "closed_at": "2017-02-06T16:19:05Z",
        "merged_at": "2017-02-06T16:19:05Z",
        "body": "Everything is in this PR title - colons were missing in the installation docs",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-02-04T14:55:59Z",
        "closed_at": "2017-02-06T16:18:35Z",
        "merged_at": null,
        "body": "Playing with dynamic and complex routes, we need to use a match function as same as `matchPattern`. Sometimes it is not OK to have a different match function in the project which tries to have exact functionality of react-router `matchPattern`.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 471,
        "deletions": 29,
        "changed_files": 15,
        "created_at": "2017-02-04T07:21:53Z",
        "closed_at": "2017-10-13T02:10:54Z",
        "merged_at": null,
        "body": "Part 1 of adding the ability to resolve relative paths. This introduces two functions: `resolveLocation` and `resolvePath`. `resolveLocation` is exported while `resolvePath` is intended for internal use.\r\n\r\n#### `resolveLocation(location, base)`\r\nThis function takes either a string or a location ~~descriptor~~ and returns the same type. It also takes a base string to resolve off of, but can handle when this value is not (or improperly) provided.\r\n\r\nFor a string pathname, it resolves it against the base (unless it is already absolute) and returns the result. For a location ~~descriptor~~, it resolves the `pathname` property, sets the `pathname` to the resolved string, and returns the location ~~descriptor~~.\r\n\r\n#### `resolvePath(path, base)`\r\nThis function takes two strings: the path and the base path to resolve it against. This just does a simple string concatenation (while being mindful of different valid `<Route path>` values).",
        "comments": 26
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2017-02-04T07:15:41Z",
        "closed_at": "2017-02-04T22:48:07Z",
        "merged_at": "2017-02-04T22:48:07Z",
        "body": "ES build was being placed in the root directory of the package. This was causing errors \"unexpected token import\" errors when trying to run the tests.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 68,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2017-02-03T17:45:04Z",
        "closed_at": "2017-02-04T02:14:41Z",
        "merged_at": "2017-02-04T02:14:41Z",
        "body": "Added tests to ensure that the `exact` and `strict` props style active as expected.\r\n\r\nAlso simplified the `isActive` tests.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 24,
        "deletions": 13,
        "changed_files": 1,
        "created_at": "2017-02-03T16:27:32Z",
        "closed_at": "2017-02-07T07:11:09Z",
        "merged_at": "2017-02-07T07:11:09Z",
        "body": "This adds tables showing how the different combinations of a `<Route>`'s `exact` and `strict` props match a `path` against `location.pathname`.\r\n\r\nI also removed the tables that were previously included under the `strict` and `exact` props because they were now redundant (and in the case of `strict`, not completely accurate).\r\n\r\ncloses #4441",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 111,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2017-02-03T14:39:46Z",
        "closed_at": "2017-02-13T17:42:31Z",
        "merged_at": null,
        "body": "Right now given something like:\r\n\r\n```jsx\r\n<Link to=\"/the/path\">the path</Link>\r\n```\r\nand assuming this `<Link>` is always displayed. Then starting at `example.com/`, each click on the link (to got to path or, for example, refresh the page) adds to browser history. And if user later wants to go back to `/` he has to click browser's back button as many times as he clicked the link.\r\n\r\nThat wasn't the case with reac-router v3.\r\n\r\nI changed:\r\n\r\n```diff\r\n// Link.js\r\n+ const { pathname, search, hash } = router.location\r\n+ const toUrl = typeof to === 'string' ? to : to.pathname + to.search + to.hash\r\n\r\n- if (replace) {\r\n+ if (replace || pathname + search + hash === toUrl) {\r\n    router.replace(to)\r\n```\r\n\r\nThus, going from `/same/path/` to `/same/path` would not add to `history`, but any difference in `pathname`, `search` or `hash` would.\r\n\r\nI also added tests for this and other behaviours for `Link`.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 56,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2017-02-03T09:50:45Z",
        "closed_at": "2017-02-05T21:15:20Z",
        "merged_at": "2017-02-05T21:15:20Z",
        "body": "As per issue #4444, this PR adds an invariant which provides a nicer\r\nerror message from `Router` if it is given multiple children.\r\n\r\nAny feedback on the approach, etc, is very welcome! I hope it's OK :)",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2017-02-03T07:24:43Z",
        "closed_at": "2017-02-05T05:11:29Z",
        "merged_at": "2017-02-05T05:11:29Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 19,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2017-02-03T07:16:37Z",
        "closed_at": "2017-02-04T02:26:18Z",
        "merged_at": "2017-02-04T02:26:18Z",
        "body": "Previously, the cache keys for compiled `path-to-regexp` patterns was being computed using:\r\n\r\n```js\r\nconst cacheKey = options.end + options.strict\r\n```\r\n\r\nHowever, this meant that `{ end: true, strict: false }` created the same key as `{ end: false, strict: true }`.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2017-02-03T04:25:30Z",
        "closed_at": "2017-02-04T02:35:17Z",
        "merged_at": "2017-02-04T02:35:17Z",
        "body": "Use `cross-env` to add Windows support for setting environment variables in a script.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-02-03T04:14:54Z",
        "closed_at": "2017-02-04T02:13:32Z",
        "merged_at": "2017-02-04T02:13:32Z",
        "body": "`*.log` could work as well.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 10,
        "changed_files": 4,
        "created_at": "2017-02-01T21:38:07Z",
        "closed_at": "2017-02-01T23:57:07Z",
        "merged_at": "2017-02-01T23:57:07Z",
        "body": "Fixes #4362",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 145,
        "deletions": 0,
        "changed_files": 4,
        "created_at": "2017-02-01T20:36:14Z",
        "closed_at": "2017-02-05T18:09:57Z",
        "merged_at": null,
        "body": "Added an example that lets you test how a `<Route>`'s props match against a URL\r\n\r\n**Edit:** Updated gif for updated example\r\n![route-path-update](https://cloud.githubusercontent.com/assets/1127037/22531188/162b69ac-e8a5-11e6-9900-9855ba30a7b4.gif)\r\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 50,
        "deletions": 16,
        "changed_files": 22,
        "created_at": "2017-02-01T18:03:56Z",
        "closed_at": "2017-02-03T02:18:58Z",
        "merged_at": "2017-02-03T02:18:58Z",
        "body": "This creates an ES build (still transpiled, but with ES2015 import/exports left in tact to enable tree-shaking) inside `es/`, updates the relevant gitignores & npm inclusions, and adds a \"module\" entry point to package.json of react-router and react-router-dom.\r\n\r\nPlease see https://github.com/ReactTraining/react-router/issues/4425#issuecomment-276717662 before merging, as this also updates the react-router imports from react-router-dom to be top-level rather than cherry-picked (necessary to enable descendent tree-shaking). As-is, this increases the bundle size of cherry-picked CJS imports from react-router-dom, since they now include the entire react-router package.\r\n\r\nIMO, this is fine -- if people care about bundle size, they should be using a tree-shaking bundler -- but if you disagree, I can add [this babel plugin](https://github.com/lodash/babel-plugin-lodash) which would transpile the top-level imports back to cherry-picked ones during the CJS build.",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 4,
        "created_at": "2017-02-01T17:04:51Z",
        "closed_at": "2017-02-01T19:57:46Z",
        "merged_at": "2017-02-01T19:57:46Z",
        "body": "Undo changes from PR #4420\r\nSee: https://github.com/ReactTraining/react-router/pull/4420\r\n\r\n.babelrcs intended location was modules dir., so lets move it back.\r\nIn tests.webpack.js, replace const with var, so code works in browsers that do not support the const keyword.\r\n\r\nError caused due to use of const keyword is as below.\r\nSee: https://travis-ci.org/ReactTraining/react-router/builds/197028565\r\n```\r\nIE 10.0.0 (Windows 8 0.0.0) ERROR\r\n  Syntax error\r\n  at /home/travis/build/ReactTraining/react-router/packages/react-router-dom/tests.webpack.js:47 <- webpack:///tests.webpack.js:1:0\r\n```",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 21,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2017-02-01T05:52:41Z",
        "closed_at": "2017-02-01T23:57:37Z",
        "merged_at": "2017-02-01T23:57:37Z",
        "body": "Duplicate of #4402, I added in a test. \r\n\r\nI didn't have write access to @developit's branch so I made a fork. \r\n\r\nNot sure if there is a different/better way to approach this test, but it seemed right to me.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 110,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2017-02-01T05:01:21Z",
        "closed_at": "2017-02-01T11:15:52Z",
        "merged_at": "2017-02-01T11:15:52Z",
        "body": "Verifies that `activeStyle` and `activeClassName` work.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2017-02-01T00:36:12Z",
        "closed_at": "2017-02-01T01:38:52Z",
        "merged_at": "2017-02-01T01:38:52Z",
        "body": "TravisCI build fails with error below.\r\nSee: https://travis-ci.org/ReactTraining/react-router/builds/197028565\r\n\r\n```\r\nIE 10.0.0 (Windows 8 0.0.0) ERROR\r\n  Syntax error\r\n  at /home/travis/build/ReactTraining/react-router/packages/react-router-dom/tests.webpack.js:47 <- webpack:///tests.webpack.js:1:0\r\n```\r\n\r\nThis is because the key word ```const``` in tests.webpack.js does not get transpiled, because .bablerc file is in react-router(-dom)/modules dir. instead of react-router(-dom).\r\nMoving .babelrc to the parent dir resolves the issue.",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-01-31T17:25:19Z",
        "closed_at": "2017-02-01T11:17:23Z",
        "merged_at": "2017-02-01T11:17:23Z",
        "body": "Fix #4413\r\n\r\nNeed help with tests here, as this is not something I'm familiar with at the moment (yep \ud83d\ude14)",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-01-31T15:22:13Z",
        "closed_at": "2017-01-31T16:39:26Z",
        "merged_at": "2017-01-31T16:39:26Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-01-31T09:19:06Z",
        "closed_at": "2017-01-31T16:41:35Z",
        "merged_at": "2017-01-31T16:41:35Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-01-31T07:06:14Z",
        "closed_at": "2017-01-31T16:41:18Z",
        "merged_at": "2017-01-31T16:41:17Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-01-31T03:18:34Z",
        "closed_at": "2017-01-31T16:44:34Z",
        "merged_at": "2017-01-31T16:44:34Z",
        "body": "I try use NavLink and found `isActive` error that `history` is undefined.\r\n\r\nI think may NavLink is not public yet. \r\nIf this PR is unnecessary, please close it.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-01-31T02:29:52Z",
        "closed_at": "2017-02-01T11:25:44Z",
        "merged_at": null,
        "body": "I'm not really sure what cases can lead to this in React, but I believe there are some. It also eliminates the need for [the only hack I had to do](https://github.com/developit/react-router-4-test/blob/master/src/lib/react.js#L11-L15) to make RRv4 work with Preact.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2017-01-27T16:54:26Z",
        "closed_at": "2017-01-27T20:53:16Z",
        "merged_at": "2017-01-27T20:53:16Z",
        "body": "These don't appear to be supported any more",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 116,
        "deletions": 0,
        "changed_files": 7,
        "created_at": "2017-01-26T21:51:29Z",
        "closed_at": "2019-09-17T23:44:09Z",
        "merged_at": null,
        "body": "Redo for #4359 with just the relevant commits.\r\n\r\n@gpltaylor I'll give you commit access so you can provide any other cleanup or fixes that you want. ",
        "comments": 24
    },
    {
        "merged": false,
        "additions": 102,
        "deletions": 89,
        "changed_files": 26,
        "created_at": "2017-01-26T00:32:41Z",
        "closed_at": "2017-02-13T17:44:50Z",
        "merged_at": null,
        "body": "- Bump Webpack to v2\r\n- Upgrade huge-apps example to use ES6 import/export",
        "comments": 13
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2017-01-23T10:04:27Z",
        "closed_at": "2017-01-23T21:33:31Z",
        "merged_at": null,
        "body": "It seems that react-router/v4 misses 2 dependencies, history in react-router-dom/package.json and prismjs in react-router-website/package.json. Without them I was not able to run the website locally.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 451,
        "deletions": 236,
        "changed_files": 29,
        "created_at": "2017-01-21T14:25:16Z",
        "closed_at": "2017-01-26T21:46:33Z",
        "merged_at": null,
        "body": "Implement beforeUnload, allowing custom and standard alerts if a user tries to leave the site.\r\nIncludes docs and example.\r\n\r\nIssue: (#4272)",
        "comments": 17
    },
    {
        "merged": true,
        "additions": 109,
        "deletions": 10,
        "changed_files": 2,
        "created_at": "2017-01-20T19:25:21Z",
        "closed_at": "2017-01-24T05:51:13Z",
        "merged_at": "2017-01-24T05:51:13Z",
        "body": "A fix for #4170 \r\n\r\nCan now add a `strict` boolean prop to `Route` (if the strict prop is omitted it defaults to `true`):\r\n```js\r\n// this will match both /foo and /foo/\r\n<Route exact path=\"/foo\" strict={false} component={foo} />\r\n```\r\n\r\nI ran the tests and it passes all of them, and in my limited testing it works both inside and outside of `<Switch />`",
        "comments": 16
    },
    {
        "merged": false,
        "additions": 533,
        "deletions": 26,
        "changed_files": 13,
        "created_at": "2017-01-19T23:02:04Z",
        "closed_at": "2017-02-04T07:23:35Z",
        "merged_at": null,
        "body": "Re-pulling this for the new v4, if for nothing else than as a proof of concept for relative path support. This adds support for both `<Link>`s (actually I just created a `<RelLink>`, but `<Link>` could be adapted) as well as `<Route>`s and `<Switch>`es.\r\n\r\nThis supports relative URL resolving (described by RFC 3986 ) with the difference being that it does not strip off the last URL segment of the `base` pathname (unless there is a trailing slash).\r\n\r\n```js\r\n// with RFC 3986\r\nresolve('three', '/one/two') // '/one/three'\r\n// keeping last segment\r\nresolve('three', '/one/two') // 'one/two/three'\r\n```\r\n\r\nThis is important because it allows a `<Link>` to be relative to its parent `match.url`.\r\n\r\n```js\r\n// with RFC 3986\r\n<Route path='/one/two' render={() => (\r\n  <Link to='three'>Three</Link> // <a href='one/three'>Three</a>\r\n)} />\r\n// keeping last segment\r\n<Route path='/one/two' render={() => (\r\n  <Link to='three'>Three</Link> // <a href='one/two/three'>Three</a>\r\n)} />\r\n```\r\n\r\nThere are some assumptions made in the resolution process, namely that the `base` pathname is _only_ a pathname (no protocol, domain, search string or hash fragment).\r\n\r\nI adapted the tests provided by RFC 3986, so I am fairly confident in it, but I'd appreciate breaking tests if I missed any situations. \r\n\r\n#### Quick Example\r\n\r\n```js\r\nconst App = () => (\r\n  <div>\r\n    <Header />\r\n    <Route path='parent' component={Parent} />\r\n  </div>\r\n)\r\n\r\n// the parent match of Header is null, which will resolve\r\n// pathnames with an empty URL segment\r\n// 'parent' will resolve to '/parent'\r\nconst Header = () => (\r\n  <header>\r\n    <RelLink to='parent'>Parent</RelLink>\r\n  </header>\r\n)\r\n\r\n// the parent match of Parent is { url: '/parent', ... }\r\n// so pathnames will resolve with '/parent'\r\n// 'one' will resolve to '/parent/child'\r\nconst Parent = () => (\r\n  <div>\r\n    <RelLink to='child'>Child</RelLink>\r\n    <Route path='child' component={Child} />\r\n  </div>\r\n)\r\n\r\nconst Child = () => (\r\n  <div>\r\n    <p>This is the child component</p>\r\n    <RelLink to='..'>Back</RelLink>\r\n  </div>\r\n)\r\n\r\nrender((\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>\r\n), holder)\r\n```",
        "comments": 19
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 12,
        "changed_files": 1,
        "created_at": "2017-01-11T23:42:50Z",
        "closed_at": "2017-01-12T14:28:49Z",
        "merged_at": "2017-01-12T14:28:49Z",
        "body": "In the current implementation, Route's children prop gets passed `history` and `match`, not `matched`. I'm not sure if it should get passed `matched` or if the docs were just outdated. ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 165,
        "deletions": 55,
        "changed_files": 10,
        "created_at": "2017-01-11T06:03:18Z",
        "closed_at": "2017-01-18T03:17:52Z",
        "merged_at": "2017-01-18T03:17:52Z",
        "body": "Currently, the `match` prop would need to be passed down to child props in order that they have access to it. This PR adds two higher-order components that, when used in tandem, will allow the `match` to be accessible through the context. \r\n\r\nThe `matchProvider` HOC wraps the component that will be rendered by a `<Route>` and makes the `match` available through the context. The `withMatch` HOC wraps a component that wants access to its parent `<Route>`'s match.\r\n\r\nI just used the same HOC style as `withHistory`, so these might need to be modified for refs/statics for some users.\r\n\r\n```js\r\n// wrap the component in a matchProvider that will make the match available\r\n// through context\r\nconst App = (\r\n  <BrowserRouter>\r\n    <div>\r\n      <Route path='/foo' component={matchProvider(Foo)} />\r\n    </div>\r\n  </BrowserRoute>\r\n)\r\n\r\nconst Foo = () => (\r\n  <div>\r\n    <FooNav />\r\n    <FooRoutes />\r\n  </div>\r\n)\r\n\r\n// use withMatch to inject context.match as a prop\r\nconst FooNav = withMatch(({ match}) => (\r\n   <Link to={`${match.url}/bar`}>Bar</Link>\r\n))\r\n\r\nconst FooRoutes = withMatch(({ match }) => (\r\n  <Route path={`${match.path}/bar`} component={Bar} />\r\n))\r\n```\r\n\r\nThis approach requires the user to specify that they want the match made available through the context, and could lead to issues with users that neglect to wrap a nested `<Route>`'s component in a `matchProvider` and end up accessing the match of a grandparent `<Route>`.\r\n\r\n```js\r\nconst App = () => (\r\n  <BrowserRouter>\r\n    <div>\r\n      <Route path='/foo' component={matchProvider(Foo)} />\r\n    </div>\r\n  </BrowserRoute>\r\n)\r\n\r\nconst Foo = () => (\r\n  <Route path='/bar' component={Bar} />\r\n)\r\n\r\nconst Bar = withMatch(({ match }) => (\r\n  // match is that match from /foo\r\n))\r\n```\r\n\r\nAn alternative to this would be for either the `Route` to expose the context variable (it currently cannot because it is a functional component) or for `createRouteElement` to automatically wrap what it renders in a `<MatchProvider match={props.match}>` component.",
        "comments": 18
    },
    {
        "merged": true,
        "additions": 49,
        "deletions": 10,
        "changed_files": 1,
        "created_at": "2017-01-11T01:59:13Z",
        "closed_at": "2017-01-11T03:03:04Z",
        "merged_at": "2017-01-11T03:03:04Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2016-12-24T15:59:32Z",
        "closed_at": "2016-12-24T23:15:00Z",
        "merged_at": null,
        "body": "BUG REPORT\r\n\r\n## Version\r\n3.0.0\r\n\r\n## Test Case\r\nfailing-test/app.spec.js\r\n\r\n## Steps to reproduce\r\ncheckout PR\r\n```bash\r\n$ npm run build\r\n$ node_modules/.bin/mocha --compilers js:babel-register failing-test/app.spec.js\r\n```\r\n\r\n## Expected Behavior\r\ntest pass\r\n\r\n## Actual Behavior\r\n```bash\r\n$ node_modules/.bin/mocha --compilers js:babel-register failing-test/app.spec.js\r\n\r\n  hashHistory: failing test\r\n    1) should call hashHistory.push(./foo)\r\n\r\n  0 passing (54ms)\r\n  1 failing\r\n\r\n  1) hashHistory: failing test should call hashHistory.push(./foo):\r\n     TypeError: Cannot read property 'push' of undefined\r\n      at spyOn (node_modules/expect/lib/SpyUtils.js:110:24)\r\n      at Context.<anonymous> (failing-test/app.spec.js:7:17)\r\n```",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 174,
        "deletions": 14,
        "changed_files": 3,
        "created_at": "2016-12-20T18:44:13Z",
        "closed_at": "2017-01-11T03:05:12Z",
        "merged_at": null,
        "body": "Fixes #4283 ",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 17,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2016-12-19T18:02:06Z",
        "closed_at": "2016-12-19T20:18:04Z",
        "merged_at": "2016-12-19T20:18:04Z",
        "body": "withRouter() return wrapped Component if router is not present ([#4292])",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2016-12-10T18:59:38Z",
        "closed_at": "2016-12-12T01:47:22Z",
        "merged_at": "2016-12-12T01:47:22Z",
        "body": "This one is a no-brainer. I couldn't pass `getUserConfirmation` down, found this typo.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-12-07T13:38:13Z",
        "closed_at": "2016-12-07T16:50:32Z",
        "merged_at": null,
        "body": "In a virtual host context `%{REQUEST_FILENAME}` has the same value as `%{REQUEST_URI}`, which would not match any local file and `RewriteBase` isn't allowed there.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 50,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2016-12-05T08:53:57Z",
        "closed_at": "2016-12-05T17:29:09Z",
        "merged_at": null,
        "body": "This allows to create `<a>` tag without an href property.\r\nThe necessity of `noHref` property comes from the fact that angular router is in conflict with react-router's Link component. To be more precise, Angular is [listening to all click events](https://github.com/angular/angular/blob/cf269d9ff43b913dbac4ba0ed6932c708ae58512/modules/angular1_router/src/ng_route_shim.js#L285) and if the click is on an <a> tag with an href that it [recognizes as one of its routes](https://github.com/angular/angular/blob/cf269d9ff43b913dbac4ba0ed6932c708ae58512/modules/angular1_router/src/ng_route_shim.js#L294) and it calls preventDefault() on the event. The Link implementation [checks for default being prevented](https://github.com/ReactTraining/react-router/blob/master/modules/Link.js#L78) and does nothing if it has.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 68,
        "deletions": 15,
        "changed_files": 5,
        "created_at": "2016-11-27T18:05:33Z",
        "closed_at": "2017-02-13T17:45:31Z",
        "merged_at": null,
        "body": "Just added an example for my use case: I have multiple React Apps living in the same page and I like to use React Router v4 within both of them. Afaik I need a shared instance of `createBrowserHistory()` that both React Apps can use. The new v4 API exposes a BrowserRouter that creates a new history object, so I use the underlying Router instead.\r\n\r\nImagine something like:\r\n\r\n```\r\nconst history = createBrowserHistory()\r\nReactDOM.render(<Router history={history}><AppOne /></Router>, document.getElementById('app-one'))\r\nReactDOM.render(<Router history={history}><AppTwo /></Router>, document.getElementById('app-two'))\r\n```\r\n\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2016-11-27T17:34:24Z",
        "closed_at": "2016-11-27T19:21:31Z",
        "merged_at": "2016-11-27T19:21:31Z",
        "body": "Remove some code that is no longer necessary",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 96,
        "deletions": 6,
        "changed_files": 6,
        "created_at": "2016-11-25T07:47:17Z",
        "closed_at": "2016-11-25T17:34:15Z",
        "merged_at": "2016-11-25T17:34:15Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-11-25T04:04:35Z",
        "closed_at": "2016-11-25T17:39:24Z",
        "merged_at": "2016-11-25T17:39:23Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 5821,
        "deletions": 2900,
        "changed_files": 80,
        "created_at": "2016-11-22T22:49:39Z",
        "closed_at": "2016-11-23T16:16:49Z",
        "merged_at": null,
        "body": "#4212 \r\n\r\nThis change modifies the v0.13.6 of the codebase so that it gets rid of the following complaint with newer versions of React:\r\nhttps://facebook.github.io/react/warnings/dont-call-proptypes.html\r\n\r\nThe code was tested with react v15.4.0, so by extension, this version of react-router is compatible with react v15.4.0.\r\n\r\nThis does not introduce any new changes to the API, so it works with all previous tests.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 59,
        "deletions": 2,
        "changed_files": 4,
        "created_at": "2016-11-18T00:08:06Z",
        "closed_at": "2017-01-11T19:26:59Z",
        "merged_at": "2017-01-11T19:26:59Z",
        "body": "For our latest project we need to escape parenthesis since they occur in the URLs (which is uncommon but valid). This PR is based on this old one (https://github.com/ReactTraining/react-router/pull/2533 by @Zoxive) which has been closed since at some point in time you wanted to refactor the URL matching into a separate module - unfortunately that has not happened yet so it would be very nice if the PR would make it this time.\r\n",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2016-11-17T22:39:02Z",
        "closed_at": "2016-12-05T18:53:17Z",
        "merged_at": null,
        "body": "Added route to get passed when using withRouter",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 20,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-11-16T22:38:29Z",
        "closed_at": "2017-01-11T03:09:21Z",
        "merged_at": null,
        "body": "PR for #4134 ",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2016-11-15T20:41:50Z",
        "closed_at": "2016-11-16T01:44:01Z",
        "merged_at": "2016-11-16T01:44:01Z",
        "body": "Since `exactly` should be a boolean value, I think `true` and `false` on example would look more clear.\r\nWhat do you think?",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2016-11-08T11:56:23Z",
        "closed_at": "2017-01-11T03:13:56Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-11-08T11:30:54Z",
        "closed_at": "2016-11-08T12:42:25Z",
        "merged_at": null,
        "body": "path-to-regexp accepts an array (like in expressjs), but the match.js propTypes allow only for strings.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-11-07T06:11:54Z",
        "closed_at": "2016-11-07T13:21:26Z",
        "merged_at": null,
        "body": "As far as i have browsed i haven't seem a documentation allowing `Link` component to prevent navigation. Only learned it from reading `Link` source code. This is my first ever pull request please don't kill me.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 57,
        "deletions": 19,
        "changed_files": 2,
        "created_at": "2016-11-06T20:59:21Z",
        "closed_at": "2016-11-07T13:19:40Z",
        "merged_at": "2016-11-07T13:19:40Z",
        "body": "Fixes #3852. The problem was that `getIndexRoute` didn't consider async `getChildRoutes` when looking for pathless child routes.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 38,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-11-05T16:05:12Z",
        "closed_at": "2017-01-11T03:12:05Z",
        "merged_at": null,
        "body": "Not sure if anyone has though of that yet, but here's another issue related to the technical intricacies of `<Miss>`: When the router transitions to a URL that causes the content of `<Miss>` to unmount, the content will be updated once with the new `location` object, even though there is an active `<Match>`.\r\n\r\nThe same could happen when the change of the match state is initiated by the user, e.g.:\r\n\r\n```js\r\n{ state.loaded && <Match pattern=\"/\" /> } {/* matches once state.loaded turns true */}\r\n<Miss />\r\n```\r\n\r\nLike with the initial mounting (#4104), it seems there's no way for `<Miss>` to know of the current match state before everything has updated, so the only workaround I can think of would be to delay the update until everything has re-rendered by exploiting `shouldComponentUpdate` and `componentDidUpdate`, which doesn't feel right..",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 198,
        "changed_files": 1,
        "created_at": "2016-11-05T06:02:16Z",
        "closed_at": "2016-11-06T01:37:15Z",
        "merged_at": null,
        "body": "Just noticed https://github.com/ReactTraining/react-router/commit/8e717b7135a38e26c8d89f69fe437b7c1849a583#commitcomment-19552486.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 103,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2016-11-04T05:25:27Z",
        "closed_at": "2017-01-11T03:10:22Z",
        "merged_at": null,
        "body": "Fix #4026\r\n\r\nAlways render a provided children prop for <Miss> regardless of route matching.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 28,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2016-11-02T19:41:38Z",
        "closed_at": "2017-01-11T03:17:05Z",
        "merged_at": null,
        "body": "Prevents Link passing isActive = true when URL is `/agent-code` and to value is `/agent`.\r\n\r\nFix for #4130",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 51,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2016-11-01T18:03:52Z",
        "closed_at": "2016-11-05T16:12:15Z",
        "merged_at": null,
        "body": "Still new to v4, so apologies if I missed something :)\r\n\r\nThis adds a test to check if `Miss` renders when added after the first render pass. The simplest fix I found was to check the current match state from context for the initial state.\r\n\r\nBtw, as I see it, #4127 is not a dupe of #4104, since it's about `Miss` *never* rendering, while #4127 is about `Miss` only briefly rendering `null`.\r\n\r\nAlso, there seem to be more issues when subsequently adding a (matching) `Match`, or changing the `pattern` prop. I'd look into it, but perhaps there's already someone working on it or a discussion that I missed?",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 36,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2016-11-01T04:47:32Z",
        "closed_at": "2016-11-01T15:46:03Z",
        "merged_at": null,
        "body": "Related issue https://github.com/ReactTraining/react-router/issues/1147\r\nIt seems like many people including myself are ending up creating custom wrapper around `<Link/>` to handle external link clicks.\r\nI think, ideally that functionality should be handled by react-router as browser has access to current and link's hosts. It turned out that it's relatively easy to compare them on click and prevent router transitions.\r\nHope this PR will make it and looking forward for the feedback.\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-10-31T23:50:39Z",
        "closed_at": "2016-11-01T15:55:17Z",
        "merged_at": null,
        "body": "# Spec for Malformed URI Handling in Match Function\r\n\r\nI encountered an issue in my server-side rendering code where if a user comes in at an invalid route, there is an uncaught `URIError: URI malformed` exception.  I guess I could wrap my `match` call in a try catch, but I would rather not do that.\r\n\r\nI expect that if there is a URI Error then the callback should be called with an error, but this doesn't seem to happen.  Does it seem like a good idea to catch these errors and pass them to the callback?\r\n\r\nThanks!",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 22,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2016-10-31T07:29:07Z",
        "closed_at": "2016-11-01T15:58:50Z",
        "merged_at": "2016-11-01T15:58:50Z",
        "body": "I've reported #4114 but nobody responded.\r\neventually, I fixed it myself. \ud83d\ude02 \r\n\r\nHope you guys are happy with this. \ud83d\ude4f ",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 343,
        "deletions": 6,
        "changed_files": 8,
        "created_at": "2016-10-31T04:59:32Z",
        "closed_at": "2017-01-11T03:22:08Z",
        "merged_at": null,
        "body": "I know that @ryanflorence has mentioned some work on relative URLs in other threads, but I thought that I'd make a pull request with a possible working option based on RFC 1808.\r\n\r\nI left in comments so that hopefully it should be understandable, but you might also need to reference the [RFC 1808](https://tools.ietf.org/html/rfc1808#section-4) steps. It passes the tests described by 1808, albeit with one modification:\r\n\r\nIn 1808, anything after the final forward slash in the base url is removed before resolving URLs. However, in React Router, the content after the final forward slash is the base for its children, so it should not be stripped. The tests have been updated to reflect this.\r\n\r\nNote: I'm exporting the `makeRootRelative` function because it was convenient while I was writing this, but the tests for it should just be folded into the `createRouterPath` tests.\r\n\r\nCurrently the only tests are the examples from the RFC, so those will probably need to be expanded to ensure correctness, but hopefully this can be a good starting point for addressing the issue (mostly because I dislike writing ```to={`${pathname}/bar`}```).",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-10-30T23:17:18Z",
        "closed_at": "2016-10-31T00:58:05Z",
        "merged_at": null,
        "body": "I found an issue in my code where I use the onClick handler to close a navigational menu and found that my onClick was overriding the handleClick of the Link element as it wasn't being excluded from the props passed down.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2016-10-30T19:40:42Z",
        "closed_at": "2016-10-31T11:04:34Z",
        "merged_at": null,
        "body": "On initial load in the browser, the window.location.pathname will sometimes be encoded and needs to be decoded to correctly match your routes (or else something like `/%C3%BCber-uns` will not match `/\u00fcber-uns`);\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 140,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-10-29T21:43:32Z",
        "closed_at": "2017-01-06T23:23:04Z",
        "merged_at": null,
        "body": "More thorough testing of `matchPattern` results than what is done in the `Match` tests.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 37,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-10-27T19:42:14Z",
        "closed_at": "2016-11-05T04:39:54Z",
        "merged_at": null,
        "body": "### Bug 1:\n\nNon `<Match>`/`<Miss>` components in `<MatchGroup>` causes errors\n#### Possible Solution:\n\nenforce that the child's type is either `Miss` or `Match`\n\n``` js\nif (matchedIndex || (child.type !== Miss && child.type !== Match))\n```\n### Bug 2:\n\nMatches outside of `<MatchGroup` break `<Miss>`\n#### Possible Solution:\n\nExpanding on bug 1, enforce that all of a `<MatchGroup>`'s children must be `<Match>` components. In order to deal with misses, add a `miss` prop to `<MatchGroup>` which is a component to render when none of the `<Match>`es matched.\n\nThis avoids subscribing a `<Miss>` to the parent `<MatchProvider>` and the possibility of someone including multiple `<Miss>` components to a `<MatchGroup>` (I'm not sure _why_ someone would do this, but currently they _can_ and only the last one would render)\n\n``` js\n<MatchGroup miss={NoMatch} >\n  <Match exactly pattern=\"/\" component={Home} />\n  <Match pattern=\"/foo\" component={Foo} />\n</MatchGroup>\n```\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2016-10-27T18:41:13Z",
        "closed_at": "2016-10-27T21:11:03Z",
        "merged_at": null,
        "body": "After a bit of searching I found that the addon has been released, via https://github.com/ReactTraining/react-router/issues/3879#issuecomment-255200425\n\nThought I'd help with others on the redux integration search.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2016-10-27T08:10:23Z",
        "closed_at": "2017-01-11T03:11:09Z",
        "merged_at": null,
        "body": "Don't add `key: undefined` to the location if the input does not have a `location` key.\nSee https://github.com/ReactTraining/react-router/commit/90d4832b57ce5a4f7e0c128923d93108173c6b61, https://github.com/ReactTraining/react-router/issues/3956\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 14,
        "deletions": 26,
        "changed_files": 1,
        "created_at": "2016-10-27T07:28:11Z",
        "closed_at": "2017-01-11T03:13:09Z",
        "merged_at": null,
        "body": "do the comparison using `expect(...).toEqual(...)` again.\nThe reason this failed is that `query-string` creates objects without `prototype` when parsing query strings. If we do the same, the comparison succeeds.\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 29,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2016-10-27T07:03:18Z",
        "closed_at": "2017-01-11T03:23:31Z",
        "merged_at": null,
        "body": "See #3863:\nOn one of my pages, where I have a paging table, I store the page number as a query parameter. I use a number in the Link target, e.g. Page 2.\nWhen the component re-renders after I click on the Link, props.location.query.page is a number. However, if I reload the page so that window.location.search is parsed again, props.location.query.page is a string.\nPlease review #4107 before this.\nSee also #4099.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 22,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-10-26T21:10:41Z",
        "closed_at": "2016-11-05T04:49:34Z",
        "merged_at": null,
        "body": "add `key` tests\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 24,
        "deletions": 125,
        "changed_files": 1,
        "created_at": "2016-10-26T20:54:24Z",
        "closed_at": "2016-11-05T04:49:12Z",
        "merged_at": null,
        "body": "Fixes a few issues with the current `StaticRouter` tests:\n1. The function `expectDeepEquality` was included because of issues with `expect.toEqual`. These were caused because the object returned by `query-string`'s `parse` function [has no prototype](https://github.com/sindresorhus/query-string/blob/master/index.js#L20) and `is-equal/why` compares the prototypes of objects when determining equality. A `noPrototypeObject` function was added to modify the expected `query` objects so that `toEqual` will work.*\n2. Removed the `state` and `key` properties from expected location objects because the location is being created from a string.\n3. An `action` property was located on some of the expected location objects, but location has no `action` property, so that was also removed.\n4. Added a test to verify that `action` is included as a prop to the children function rendered by `<StaticRouter>`.\n5. Removed the `location descriptors` tests because the same functionality is being tested in `LocationUtils-tests.js`.\n\n\\* Instead of using the `noPrototypeObject`, `parseQueryString` calls in `createRouterLocation` could be wrapped in `Object.assign({}, ...)`. That has more points of failure, however.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2016-10-26T07:37:08Z",
        "closed_at": "2016-10-27T07:28:34Z",
        "merged_at": null,
        "body": "otherwise `expectDeepEquality({query: {}}, {query: {foo: 'bar'}})` would pass\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 37,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2016-10-26T07:06:23Z",
        "closed_at": "2017-01-11T03:24:56Z",
        "merged_at": null,
        "body": "See #3863:\nOn one of my pages, where I have a paging table, I store the page number as a query parameter. I use a number in the Link target, e.g. <Link to={{query:{page:2}}}>Page 2</Link>.\nWhen the component re-renders after I click on the Link, props.location.query.page is a number. However, if I reload the page so that window.location.search is parsed again, props.location.query.page is a string.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-10-26T06:46:09Z",
        "closed_at": "2016-10-27T07:28:43Z",
        "merged_at": null,
        "body": "Values should be compared using strict equality so types are compared too, e.g. `23 == '23'` but `23 !== '23'`.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-10-25T04:56:54Z",
        "closed_at": "2016-10-25T15:55:52Z",
        "merged_at": "2016-10-25T15:55:52Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 104,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2016-10-23T19:41:30Z",
        "closed_at": "2016-10-24T23:45:09Z",
        "merged_at": null,
        "body": "This should resolve #3889.\n\nI added a note to the documentation listing the restrictions on this, which are:\n1. `to` must be a string. If `to` is an object, then the url will be `/[object%20Object]`.\n2. If any active aware props are used, then a `location` prop must be included in the `<Link>`'s props.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 198,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-10-22T05:38:14Z",
        "closed_at": "2016-10-23T21:38:45Z",
        "merged_at": "2016-10-23T21:38:45Z",
        "body": "Basic tests for the `createRouterLocation` and `createRouterPath` functions.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 32,
        "deletions": 30,
        "changed_files": 1,
        "created_at": "2016-10-21T11:59:14Z",
        "closed_at": "2016-10-24T23:43:10Z",
        "merged_at": null,
        "body": "A tiny size gainz for PropTypes\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 58,
        "deletions": 45,
        "changed_files": 1,
        "created_at": "2016-10-21T00:26:41Z",
        "closed_at": "2016-10-24T23:45:52Z",
        "merged_at": null,
        "body": "Refs #4046\n\nThis doesn't eliminate the file, but it does make the file very small.\n\n[My comment](https://github.com/ReactTraining/react-router/issues/4046#issuecomment-255253295) is not totally correct. I thought that `DescendantComponent.contextTypes.whatever` and the `AncestorComponent.childContextTypes.whatever` had to match. I used `npm pack` and installed my branch into a project of mine that imports and uses your proptypes. As long as `DescendantComponent.contextTypes.whatever` doesn't reject, it will accept any context using that key.\n\nThis also means that I don't actually have to import the proptypes from this project. Testing this forced an upgrade of `react-history` where `PropTypes` were removed. and I had to replace my code with:\n\n``` js\nMyComponent.contextTypes = {\n    history: function() {}\n}\n```\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 15,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2016-10-19T19:34:07Z",
        "closed_at": "2016-10-21T15:49:43Z",
        "merged_at": "2016-10-21T15:49:43Z",
        "body": "Adds the `basename` as a documented prop of the `<ServerRouter>`\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 301,
        "deletions": 166,
        "changed_files": 9,
        "created_at": "2016-10-19T15:34:07Z",
        "closed_at": "2016-11-05T05:00:12Z",
        "merged_at": null,
        "body": "This is a way to manage location changes that is resistant to `shouldComponentUpdate`.\n\nThe main change is that `<MatchProvider>` components are kept updated about the current location. All `<Match>` and `<Miss>` children of a `<MatchProvider>` provide it with update functions. The `<Match>` update functions return a boolean indicating whether they match against the current location. The `<Miss>` update function is the same as the current one.\n\n`<Match>` maintains a `match` state, which is the result of `matchPattern` and is set whenever the component updates naturally (through `componentWillReceiveProps`) or when its `update` function is called.\n\nThis passes the failing miss test that @alisd23 wrote in #4047, but may need additional tests to verify its correctness.\n\nRelated issue: #4035\n",
        "comments": 27
    },
    {
        "merged": true,
        "additions": 63,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2016-10-19T09:40:05Z",
        "closed_at": "2016-10-20T17:30:03Z",
        "merged_at": "2016-10-20T17:30:03Z",
        "body": "Issue:\n`onClick={() => null} to=\"test\">` => Clicking this link with v4-alpha5 causes a page refresh in the browser. That is because the internal onClick was overwritten by the this.props.onClick due to first applying the own props and then applying the ...rest props.\n\nAlternative: Strip out onClick and all other properties that should not be overridden. \n",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 19,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2016-10-19T05:41:53Z",
        "closed_at": "2016-10-26T02:00:21Z",
        "merged_at": "2016-10-26T02:00:21Z",
        "body": "`decodeURIComponent(undefined)` is `\"undefined\"`\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 108,
        "deletions": 10,
        "changed_files": 3,
        "created_at": "2016-10-18T16:14:18Z",
        "closed_at": "2016-10-25T00:07:35Z",
        "merged_at": "2016-10-25T00:07:35Z",
        "body": "Fix for #3220.\n- Transition manager keeps track of pending **async** (or sync) hooks (for `onEnter` and `onChange`).\n- When new transition starts, redirects from pending async hooks are ignored, fixing the unexpected behaviour in #3220 \n- When the hook completes, it is removed from the pending list\n\nThis prevents a redirect from _old_ transitions happening. If a new transition occurs **after** an async hook with a redirect starts, the _new_ location should take precedence, so the redirect is ignored.\n\nSee new tests for situations where this might occur\n\n> Also fixed npm tasks on windows again whilst I was there :smile: \n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-10-17T09:20:38Z",
        "closed_at": "2016-10-18T15:40:03Z",
        "merged_at": "2016-10-18T15:40:03Z",
        "body": "Clean task failed if files didn't exist (my fault), so now it fails silently if a file doesn't exist or an error occurs.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 67,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-10-15T13:31:19Z",
        "closed_at": "2016-10-15T14:59:27Z",
        "merged_at": null,
        "body": "At the first time I saw the sample on REAME.MD, I got a little confused about the React.createClass  syntax, so I added a simple sample for better using with ES6 (using extends React.Component instead).\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 46,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2016-10-14T12:01:17Z",
        "closed_at": "2017-01-11T03:24:10Z",
        "merged_at": null,
        "body": "Refers to issue #4035\n",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 194,
        "deletions": 0,
        "changed_files": 4,
        "created_at": "2016-10-13T14:02:25Z",
        "closed_at": "2017-01-11T03:15:50Z",
        "merged_at": null,
        "body": "For #3847\n\nCurrently passes down the following props:\n- `location`\n- `history` _(excluding location_) - includes history methods (push, go, listen etc...)\n- `router`\n\nJust thought I'd get a PR created to start a discussion on the specifics (or if we want one at all).\n\nTodo:\n- [x] Add `withRef`, `displayName`, `hoistStatics` functionality\n- [x] Add tests\n- [ ] Update docs\n",
        "comments": 18
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-10-12T20:13:15Z",
        "closed_at": "2016-10-13T01:12:08Z",
        "merged_at": "2016-10-13T01:12:08Z",
        "body": "- delete `history` from npm install as it's already a subdependency\n- update `react-router` to `react-router@next`\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 31,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2016-10-12T15:00:00Z",
        "closed_at": "2016-10-13T01:13:02Z",
        "merged_at": "2016-10-13T01:13:02Z",
        "body": "- Convert clean task into node script to work cross-env\n- Remove quotes from build-lib task, so tests folder isn't transpiled\n- Add watch task for better local dev\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2016-10-12T10:57:30Z",
        "closed_at": "2016-10-12T14:05:09Z",
        "merged_at": null,
        "body": "Some changes to make building locally on windows and using npm link easier.\n- Removed single quotes from lib task to fix on windows (let me know if\n  this doesn't work on unix - I assume it still does)\n- Babel-compiled files go to `lib` folder which is gitignore-d, instead of in\n  root.\n- `package.json` now points to `lib/index.js`\n- Clean task now removes `lib` and `umd` folders\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 88,
        "deletions": 33,
        "changed_files": 5,
        "created_at": "2016-10-11T13:12:09Z",
        "closed_at": "2016-10-11T14:23:43Z",
        "merged_at": null,
        "body": "Render `Miss` components on the **first pass**, making server-rendering more optimal.\n\nIt depends on rendering order slightly, (not sure what everyone's thoughts are about this), because it **only** works if the `Miss` component renders _after_ any sibling match components, otherwise it will take 2 passes - as it does currently.\n\nSo this will need **2** render passes to render the `Miss` (if no url's match):\n\n``` js\n<Miss component={NotFound} />\n<Match pattern='/todos' component={Todos} />\n```\n\nBut this can now be done in **1** pass\n\n``` js\n<Match pattern='/todos' component={Todos} />\n<Miss component={NotFound} />\n```\n\nLet me know what your thoughts are about this solution :+1: \n\n---\n\nSummary of changes:\n- Moved registerMatch to componentWillMount of `Match` so matches can be\n  registered before sibling `Miss` components mount, therefore `Miss` doesn't need to\n  rerender after mounting\n- Call listener function once synchronously in `MatchProvider` when `Miss` calls `match.subscribe`\n- Move `match.subscribe` logic to componentWillMount of `Miss` so we can call\n  `setState` synchronously right there. Needed due to the prevous point.\n- Add Miss and Server rendering tests\n\nTodo:\n- [ ] Update docs\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 75,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2016-10-10T15:31:43Z",
        "closed_at": "2016-10-13T01:56:55Z",
        "merged_at": "2016-10-13T01:56:55Z",
        "body": "I added an extra function since the link looks different when using `hashType` `hashbang`.\n\nThis is a fix for #4022. I hope I'm doing it the right way, since this is more or less my first PR.\nHelp appreciated, especially if it needs tests  :)\n",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2016-10-10T08:16:46Z",
        "closed_at": "2016-10-10T15:08:45Z",
        "merged_at": null,
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-10-08T14:12:34Z",
        "closed_at": "2016-10-08T19:51:44Z",
        "merged_at": "2016-10-08T19:51:44Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 61,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-10-07T08:23:05Z",
        "closed_at": "2017-01-11T03:29:45Z",
        "merged_at": null,
        "body": "I added two integration tests that use a `basename`. I think that they should pass but I'm not sure. See https://github.com/ReactTraining/react-router/issues/3839#issuecomment-247258394 for reference. I can try to come up with a fix if you agree that it needs fixing. ;-)\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 77,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2016-10-06T15:38:20Z",
        "closed_at": "2016-10-11T14:38:07Z",
        "merged_at": "2016-10-11T14:38:07Z",
        "body": "Cache matchers by key of `pattern` up to a maximum of **50** matchers. (arbitrary number).\n\nIf anyone has a better idea of what number to use for the cache max, let me know.\n\nRelates to issue #3875\n",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-10-06T13:16:06Z",
        "closed_at": "2016-10-06T15:59:27Z",
        "merged_at": null,
        "body": "Make pathname to be determined as exact also if there is a trailing slash\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 42,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2016-10-06T10:22:58Z",
        "closed_at": "2016-10-06T22:52:04Z",
        "merged_at": "2016-10-06T22:52:04Z",
        "body": "Provide fix and tests for #3938 \n\nApplied the same fix as in #3939, but added a couple tests to prove the case\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 24,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2016-10-06T07:22:00Z",
        "closed_at": "2016-10-06T22:55:37Z",
        "merged_at": "2016-10-06T22:55:37Z",
        "body": "I use `<Router basename=\"/foo\">`. If I call `transitionTo('/')`, I end up at `http://host/foo/` but I expect to land on `http://host/foo`. I also tried passing `{pathname:null}` but that doesn't help either.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2016-10-03T16:32:01Z",
        "closed_at": "2016-10-06T22:57:37Z",
        "merged_at": "2016-10-06T22:57:37Z",
        "body": "To fix the bug for #3970 \n\n`<Match>` needs to call `decodeURIComponent` to properly pass parameters to its component.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 89,
        "deletions": 15,
        "changed_files": 2,
        "created_at": "2016-10-02T04:15:39Z",
        "closed_at": "2016-10-13T19:05:44Z",
        "merged_at": "2016-10-13T19:05:44Z",
        "body": "When a `<Link>` doesn't need to know about the current location, its `<a>` does not need to be wrapped with a `<LocationSubscriber>`.\n#3985\n",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-09-30T14:01:55Z",
        "closed_at": "2016-09-30T19:12:30Z",
        "merged_at": null,
        "body": "Hello lovely humans,\n\n[history](https://www.npmjs.com/package/history) just published its new version 4.2.1.\n\n<table>\n  <tr>\n    <th align=left>\n      State\n    </th>\n    <td>\n      Update :rocket:\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Dependency\n    </td>\n    <td>\n      history\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      New version\n    </td>\n    <td>\n      4.2.1\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Type\n    </td>\n    <td>\n      dependency\n    </td>\n  </tr>\n</table>\n\n\nThis version is **not covered** by your **current version range**.\n\nWithout accepting this pull request your project will work just like it did before. There might be a bunch of new features, fixes and perf improvements that the maintainers worked on for you though.\n\nI recommend you look into these changes and try to get onto the latest version of history.\nGiven that you have a decent test suite, a passing build is a strong indicator that you can take advantage of these changes by merging the proposed change into your project. Otherwise this branch is a great starting point for you to work on the update.\n\nDo you have any ideas how I could improve these pull requests? Did I report anything you think isn\u2019t right?\nAre you unsure about how things are supposed to work?\n\nThere is a collection of [frequently asked questions](https://greenkeeper.io/faq.html) and while I\u2019m just a bot, there is a group of people who are happy to teach me new things. [Let them know](https://github.com/greenkeeperio/greenkeeper/issues/new).\n\nGood luck with your project :sparkles:\n\nYou rock!\n\n:palm_tree:\n\n---\n\nThe new version differs by 220 commits (ahead by 220, behind by 20).\n- [`a62990c`](https://github.com/mjackson/history/commit/a62990cbd226cbff1313b31a5d668bfc250a0444) <code>Version 4.2.1</code>\n- [`9443a3f`](https://github.com/mjackson/history/commit/9443a3f2997e9404c559c7a1a4aef655742a96eb) <code>Update CHANGES</code>\n- [`e07bb3c`](https://github.com/mjackson/history/commit/e07bb3c6509e525edde3469146f60f529993aa67) <code>Minor style tweaks</code>\n- [`141eb05`](https://github.com/mjackson/history/commit/141eb057f7c10fc325e47985aac6958a93c8755a) <code>Fixed createLocation defaults for objects</code>\n- [`8f0dac8`](https://github.com/mjackson/history/commit/8f0dac8cf6722d32561125beaf5e5ee20ae2c486) <code>chore(package): update eslint-plugin-import to version 2.0.0 (#372)</code>\n- [`15f4d47`](https://github.com/mjackson/history/commit/15f4d473b70523969a1196d5f399e331c8afae56) <code>chore(package): update babel-eslint to version 7.0.0 (#370)</code>\n- [`b37e9c8`](https://github.com/mjackson/history/commit/b37e9c868022b2bb7c57efdfdc2252e4447c32da) <code>Version 4.2.0</code>\n- [`637aa0c`](https://github.com/mjackson/history/commit/637aa0cd30faab7a54254fad6260b0598cdd36ef) <code>Update CHANGES</code>\n- [`913bd10`](https://github.com/mjackson/history/commit/913bd1064f639df6d65656aa864b69bc5d24393a) <code>Add createLocation to top-level exports</code>\n- [`5d2364f`](https://github.com/mjackson/history/commit/5d2364f7151ed0337a4e1c3a460ea8deef6d8834) <code>Inline warning</code>\n- [`8450e07`](https://github.com/mjackson/history/commit/8450e07b00ef08f10aba2fd6bd94d337e9cc07e6) <code>Version 4.1.0</code>\n- [`a263d43`](https://github.com/mjackson/history/commit/a263d43f6c20d7c62b59c6eeb9790aff1a5804eb) <code>Update CHANGES</code>\n- [`021c9ba`](https://github.com/mjackson/history/commit/021c9ba650b6a9a9ab1be87f7dfa6c011e00475c) <code>Automatically clean up bad location descriptors</code>\n- [`100e6dd`](https://github.com/mjackson/history/commit/100e6ddcfe9041dc48e2916326bfa4cb93190a29) <code>Use a leading / when doing history.push('')</code>\n- [`1d0d6a0`](https://github.com/mjackson/history/commit/1d0d6a0350865c8f941778436f8f7dbc98a6171f) <code>Update release script</code>\n\nThere are 220 commits in total. See the [full diff](https://github.com/mjackson/history/compare/4e4af9dfab4cf94522cce5fcac85ec9c19c89e0c...a62990cbd226cbff1313b31a5d668bfc250a0444).\n\n---\n\nThis pull request was created by [greenkeeper.io](https://greenkeeper.io/).\n\n<sub>Tired of seeing this sponsor message? :zap: `greenkeeper upgrade`</sub>\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 49,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2016-09-30T13:34:16Z",
        "closed_at": "2016-10-03T18:16:27Z",
        "merged_at": "2016-10-03T18:16:27Z",
        "body": "Miss would not render in ambiguous match example after navigating away and returning to ambiguous path\n\ncloses #3957 \n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-09-29T22:33:50Z",
        "closed_at": "2016-09-30T00:34:06Z",
        "merged_at": null,
        "body": "Hello lovely humans,\n\n[history](https://www.npmjs.com/package/history) just published its new version 4.3.0.\n\n<table>\n  <tr>\n    <th align=left>\n      State\n    </th>\n    <td>\n      Update :rocket:\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Dependency\n    </td>\n    <td>\n      history\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      New version\n    </td>\n    <td>\n      4.3.0\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Type\n    </td>\n    <td>\n      dependency\n    </td>\n  </tr>\n</table>\n\n\nThis version is **not covered** by your **current version range**.\n\nWithout accepting this pull request your project will work just like it did before. There might be a bunch of new features, fixes and perf improvements that the maintainers worked on for you though.\n\nI recommend you look into these changes and try to get onto the latest version of history.\nGiven that you have a decent test suite, a passing build is a strong indicator that you can take advantage of these changes by merging the proposed change into your project. Otherwise this branch is a great starting point for you to work on the update.\n\nDo you have any ideas how I could improve these pull requests? Did I report anything you think isn\u2019t right?\nAre you unsure about how things are supposed to work?\n\nThere is a collection of [frequently asked questions](https://greenkeeper.io/faq.html) and while I\u2019m just a bot, there is a group of people who are happy to teach me new things. [Let them know](https://github.com/greenkeeperio/greenkeeper/issues/new).\n\nGood luck with your project :sparkles:\n\nYou rock!\n\n:palm_tree:\n\n---\n\nThe new version differs by 226 commits (ahead by 226, behind by 20).\n- [`e16b244`](https://github.com/mjackson/history/commit/e16b244cc21a4217f0f21bdbd017790ea7c55eba) <code>Version 4.3.0</code>\n- [`d7e9b15`](https://github.com/mjackson/history/commit/d7e9b153e80001d7a2ddadad42cfb30761f1be77) <code>Update CHANGES</code>\n- [`b559a3b`](https://github.com/mjackson/history/commit/b559a3b31951334f4c230ec898d56e5ddcd6e554) <code>Update CHANGES</code>\n- [`7c6001c`](https://github.com/mjackson/history/commit/7c6001c2f0e226398e6d7f0fea0918287825200a) <code>More stringent key checking in initial entries</code>\n- [`445ce3e`](https://github.com/mjackson/history/commit/445ce3ef4c1d3745dfae6eb199ce47b5d9eafadc) <code>Allow relative pathnames</code>\n- [`264d558`](https://github.com/mjackson/history/commit/264d5580897dee17a0fbfedd28b938ab14c9b0f4) <code>Rename PushBadArgs => PushMissingPathname</code>\n- [`a62990c`](https://github.com/mjackson/history/commit/a62990cbd226cbff1313b31a5d668bfc250a0444) <code>Version 4.2.1</code>\n- [`9443a3f`](https://github.com/mjackson/history/commit/9443a3f2997e9404c559c7a1a4aef655742a96eb) <code>Update CHANGES</code>\n- [`e07bb3c`](https://github.com/mjackson/history/commit/e07bb3c6509e525edde3469146f60f529993aa67) <code>Minor style tweaks</code>\n- [`141eb05`](https://github.com/mjackson/history/commit/141eb057f7c10fc325e47985aac6958a93c8755a) <code>Fixed createLocation defaults for objects</code>\n- [`8f0dac8`](https://github.com/mjackson/history/commit/8f0dac8cf6722d32561125beaf5e5ee20ae2c486) <code>chore(package): update eslint-plugin-import to version 2.0.0 (#372)</code>\n- [`15f4d47`](https://github.com/mjackson/history/commit/15f4d473b70523969a1196d5f399e331c8afae56) <code>chore(package): update babel-eslint to version 7.0.0 (#370)</code>\n- [`b37e9c8`](https://github.com/mjackson/history/commit/b37e9c868022b2bb7c57efdfdc2252e4447c32da) <code>Version 4.2.0</code>\n- [`637aa0c`](https://github.com/mjackson/history/commit/637aa0cd30faab7a54254fad6260b0598cdd36ef) <code>Update CHANGES</code>\n- [`913bd10`](https://github.com/mjackson/history/commit/913bd1064f639df6d65656aa864b69bc5d24393a) <code>Add createLocation to top-level exports</code>\n\nThere are 226 commits in total. See the [full diff](https://github.com/mjackson/history/compare/4e4af9dfab4cf94522cce5fcac85ec9c19c89e0c...e16b244cc21a4217f0f21bdbd017790ea7c55eba).\n\n---\n\nThis pull request was created by [greenkeeper.io](https://greenkeeper.io/).\n\n<sub>Tired of seeing this sponsor message? :zap: `greenkeeper upgrade`</sub>\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-09-29T13:54:53Z",
        "closed_at": "2016-09-30T00:33:22Z",
        "merged_at": null,
        "body": "This commit fixes the issue #3975 \n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2016-09-29T06:48:43Z",
        "closed_at": "2016-09-29T17:01:10Z",
        "merged_at": "2016-09-29T17:01:10Z",
        "body": "Change link urls from master branch to v2.x branch. This also changes links from ReactTraining/history to mjackson/history\n\n[fixes #3971]\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 4997,
        "deletions": 14961,
        "changed_files": 275,
        "created_at": "2016-09-28T07:56:06Z",
        "closed_at": "2016-09-28T13:17:19Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-09-27T08:22:27Z",
        "closed_at": "2016-09-27T12:24:55Z",
        "merged_at": null,
        "body": "Hello lovely humans,\n\n[mocha](https://www.npmjs.com/package/mocha) just published its new version 3.1.0.\n\n<table>\n  <tr>\n    <th align=left>\n      State\n    </th>\n    <td>\n      Update :rocket:\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Dependency\n    </td>\n    <td>\n      mocha\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      New version\n    </td>\n    <td>\n      3.1.0\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Type\n    </td>\n    <td>\n      devDependency\n    </td>\n  </tr>\n</table>\n\n\nThis version is **not covered** by your **current version range**.\n\nWithout accepting this pull request your project will work just like it did before. There might be a bunch of new features, fixes and perf improvements that the maintainers worked on for you though.\n\nI recommend you look into these changes and try to get onto the latest version of mocha.\nGiven that you have a decent test suite, a passing build is a strong indicator that you can take advantage of these changes by merging the proposed change into your project. Otherwise this branch is a great starting point for you to work on the update.\n\nDo you have any ideas how I could improve these pull requests? Did I report anything you think isn\u2019t right?\nAre you unsure about how things are supposed to work?\n\nThere is a collection of [frequently asked questions](https://greenkeeper.io/faq.html) and while I\u2019m just a bot, there is a group of people who are happy to teach me new things. [Let them know](https://github.com/greenkeeperio/greenkeeper/issues/new).\n\nGood luck with your project :sparkles:\n\nYou rock!\n\n:palm_tree:\n\n---\n\n[GitHub Release](https://github.com/mochajs/mocha/releases/tag/v3.1.0)\n\n<h1>3.1.0 / 2016-09-27</h1>\n\n\n<h2>\n<g-emoji alias=\"tada\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f389.png\">\ud83c\udf89</g-emoji> Enhancement</h2>\n\n\n<ul>\n<li>\n<a href=\"https://urls.greenkeeper.io/mochajs/mocha/issues/2357\">#2357</a>: Support <code>--inspect</code> on command-line (<a href=\"https://urls.greenkeeper.io/simov\">@simov</a>)</li>\n<li>\n<a href=\"https://urls.greenkeeper.io/mochajs/mocha/issues/2194\">#2194</a>: Human-friendly error if no files are matched on command-line (<a href=\"https://urls.greenkeeper.io/munter\">@Munter</a>)</li>\n<li>\n<a href=\"https://urls.greenkeeper.io/mochajs/mocha/issues/1744\">#1744</a>: Human-friendly error if a Suite has no callback (BDD/TDD only) (<a href=\"https://urls.greenkeeper.io/anton\">@anton</a>)</li>\n</ul>\n\n\n<h2>\n<g-emoji alias=\"bug\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f41b.png\">\ud83d\udc1b</g-emoji> Bug Fix</h2>\n\n\n<ul>\n<li>\n<a href=\"https://urls.greenkeeper.io/mochajs/mocha/issues/2488\">#2488</a>: Fix case in which <em>variables beginning with lowercase \"D\"</em> may not have been reported properly as global leaks (<a href=\"https://urls.greenkeeper.io/JustATrick\">@JustATrick</a>) <g-emoji alias=\"laughing\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f606.png\">\ud83d\ude06</g-emoji>\n</li>\n<li>\n<a href=\"https://urls.greenkeeper.io/mochajs/mocha/issues/2465\">#2465</a>: Always halt execution in async function when <code>this.skip()</code> is called (<a href=\"https://urls.greenkeeper.io/boneskull\">@boneskull</a>)</li>\n<li>\n<a href=\"https://urls.greenkeeper.io/mochajs/mocha/pull/2445\">#2445</a>: Exits with expected code 130 when <code>SIGINT</code> encountered; exit code can no longer rollover at 256 (<a href=\"https://urls.greenkeeper.io/munter\">@Munter</a>)</li>\n<li>\n<a href=\"https://urls.greenkeeper.io/mochajs/mocha/issues/2315\">#2315</a>: Fix uncaught TypeError thrown from callback stack (<a href=\"https://urls.greenkeeper.io/1999\">@1999</a>)</li>\n<li>Fix broken <code>only()</code>/<code>skip()</code> in IE7/IE8 (<a href=\"https://urls.greenkeeper.io/boneskull\">@boneskull</a>)</li>\n<li>\n<a href=\"https://urls.greenkeeper.io/mochajs/mocha/issues/2502\">#2502</a>: Fix broken stack trace filter on Node.js under Windows (<a href=\"https://urls.greenkeeper.io/boneskull\">@boneskull</a>) </li>\n<li>\n<a href=\"https://urls.greenkeeper.io/mochajs/mocha/issues/2496\">#2496</a>: Fix diff output for objects instantiated with <code>String</code> constructor (<a href=\"https://youtrack.jetbrains.com/issue/WEB-23383\">more</a>) (<a href=\"https://urls.greenkeeper.io/boneskull\">@boneskull</a>)</li>\n</ul>\n\n---\n\nThe new version differs by 145 commits .\n- [`9915dfb`](https://github.com/mochajs/mocha/commit/9915dfbc671f7f5d3cab55acde7356d839c1170c) <code>Release v3.1.0</code>\n- [`037cdae`](https://github.com/mochajs/mocha/commit/037cdae4ec7e41417b2ad8cc9cf09a649080aec6) <code>build dist for v3.1.0</code>\n- [`44a031b`](https://github.com/mochajs/mocha/commit/44a031ba873db3a2e42d0fa6c174b36d6149c1e4) <code>CHANGELOG for v3.1.0 [ci skip]</code>\n- [`8431cb3`](https://github.com/mochajs/mocha/commit/8431cb3f2337146a671d4291485561b60bde2241) <code>fix diff output for String objects; closes #2496 (#2499)</code>\n- [`8bf1f29`](https://github.com/mochajs/mocha/commit/8bf1f297142b02128664523ab5a9b3d55b09c365) <code>ensure windows compat with stack trace filter; closes #2502 (#2503)</code>\n- [`8ccccba`](https://github.com/mochajs/mocha/commit/8ccccba817143539f074362f2f95b3f731d23cef) <code>fix problems with only/skip in IE7/IE8</code>\n- [`8ef51a5`](https://github.com/mochajs/mocha/commit/8ef51a563582fa788b9092028f9aecffe7c32292) <code>use HTML reporter and default to autoWatch/singleRun mode</code>\n- [`96e20df`](https://github.com/mochajs/mocha/commit/96e20df35749136da26f2cbecd057716f23e2a5f) <code>attempt windows-friendly reproducible case for #2315</code>\n- [`f1ac548`](https://github.com/mochajs/mocha/commit/f1ac5485f19c15fc50b683bdbf27c666b7940f7e) <code>fix: fix uncaught TypeError if error occurs on next tick, closes #2315 (#2439)</code>\n- [`3a2dae8`](https://github.com/mochajs/mocha/commit/3a2dae8b360bf3ac58f79530c5b35413dd6ed417) <code>helpful error when necessary suite callback omitted; closes #1744</code>\n- [`e22c407`](https://github.com/mochajs/mocha/commit/e22c40751f1aa04058c20025472783c23c295921) <code>Fix an issue and add relevant tests when describe and xdescribe fail when not supplied with a callback (issue #1744).</code>\n- [`9e7f5f2`](https://github.com/mochajs/mocha/commit/9e7f5f207a9905d3243d33a22c81d3b0c960ccda) <code>Merge branch 'issue/2383'</code>\n- [`93e9fc9`](https://github.com/mochajs/mocha/commit/93e9fc93c6c91553f02fd2045c176435e0f71f73) <code>rename more fixtures; closes #2383</code>\n- [`1786fe2`](https://github.com/mochajs/mocha/commit/1786fe2c2c474d2b649b4c3a0b0a1c71ab8b556b) <code>Report non-match to STDERR and exit if no files are matched (#2450)</code>\n- [`3e22a83`](https://github.com/mochajs/mocha/commit/3e22a837929d153656b0f624aa48cb773d79282d) <code>Exit process with correct error codes (#2445)</code>\n\nThere are 145 commits in total. See the [full diff](https://github.com/mochajs/mocha/compare/e939d8e4379a622e28064ca3a75f3e1bda7e225b...9915dfbc671f7f5d3cab55acde7356d839c1170c).\n\n---\n\nThis pull request was created by [greenkeeper.io](https://greenkeeper.io/).\n\n<sub>Tired of seeing this sponsor message? :zap: `greenkeeper upgrade`</sub>\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-09-25T01:45:50Z",
        "closed_at": "2016-10-06T16:00:24Z",
        "merged_at": null,
        "body": "We should still add the parent pattern when `exactly` is enabled, unless the pattern starts with `/`.\n\n[closes #3938]\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-09-24T16:02:02Z",
        "closed_at": "2016-09-25T02:19:05Z",
        "merged_at": null,
        "body": "Hello lovely humans,\n\n[cross-env](https://www.npmjs.com/package/cross-env) just published its new version 3.0.0.\n\n<table>\n  <tr>\n    <th align=left>\n      State\n    </th>\n    <td>\n      Update :rocket:\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Dependency\n    </td>\n    <td>\n      cross-env\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      New version\n    </td>\n    <td>\n      3.0.0\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Type\n    </td>\n    <td>\n      devDependency\n    </td>\n  </tr>\n</table>\n\n\nThis version is **not covered** by your **current version range**.\n\nWithout accepting this pull request your project will work just like it did before. There might be a bunch of new features, fixes and perf improvements that the maintainers worked on for you though.\n\nI recommend you look into these changes and try to get onto the latest version of cross-env.\nGiven that you have a decent test suite, a passing build is a strong indicator that you can take advantage of these changes by merging the proposed change into your project. Otherwise this branch is a great starting point for you to work on the update.\n\nDo you have any ideas how I could improve these pull requests? Did I report anything you think isn\u2019t right?\nAre you unsure about how things are supposed to work?\n\nThere is a collection of [frequently asked questions](https://greenkeeper.io/faq.html) and while I\u2019m just a bot, there is a group of people who are happy to teach me new things. [Let them know](https://github.com/greenkeeperio/greenkeeper/issues/new).\n\nGood luck with your project :sparkles:\n\nYou rock!\n\n:palm_tree:\n\n---\n\n[GitHub Release](https://github.com/kentcdodds/cross-env/releases/tag/v3.0.0)\n\n<p><a name></a></p>\n\n\n<h2>3.0.0 (2016-09-24)</h2>\n\n\n<h4>Bug Fixes</h4>\n\n\n<ul>\n<li>\n<strong>deps:</strong> Swap lodash.assign for Object.assign. (<a href=\"https://urls.greenkeeper.io/kentcdodds/cross-env/pull/29\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/kentcdodds/cross-env/issues/29\" data-id=\"179036629\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#29</a>) (<a href=\"https://urls.greenkeeper.io/kentcdodds/cross-env/commit/f2275d53\">f2275d53</a>, closes <a href=\"https://urls.greenkeeper.io/kentcdodds/cross-env/issues/28\">#28</a>)</li>\n</ul>\n\n\n<h4>Breaking Changes</h4>\n\n\n<ul>\n<li>Uses native Object.assign. This package no longer supports &lt; Node v4\n(<a href=\"https://urls.greenkeeper.io/kentcdodds/cross-env/commit/f2275d53\">f2275d53</a>)</li>\n</ul>\n\n---\n\nThe new version differs by 4 commits .\n- [`f2275d5`](https://github.com/kentcdodds/cross-env/commit/f2275d53ff09b9a73f88fed3f79793f4e3e1f637) <code>fix(deps): Swap lodash.assign for Object.assign. (#29)</code>\n- [`9976b5e`](https://github.com/kentcdodds/cross-env/commit/9976b5ecdca29ff59573f3b98a829e3663197816) <code>fix(defaults): macOS env.APPDATA should be undefined (#27)</code>\n- [`b7f6245`](https://github.com/kentcdodds/cross-env/commit/b7f624518e65add841996770aaac93c109dacf2b) <code>chore(ci): Run tests against same node versions (#26)</code>\n- [`1582ac1`](https://github.com/kentcdodds/cross-env/commit/1582ac120a875f1398c8fb14f1731b7ca5dae277) <code>Add Related Projects section to README (#22)</code>\n\nSee the [full diff](https://github.com/kentcdodds/cross-env/compare/8ff5555b0f566cbab4e56ddb5de2416be2959a22...f2275d53ff09b9a73f88fed3f79793f4e3e1f637).\n\n---\n\nThis pull request was created by [greenkeeper.io](https://greenkeeper.io/).\n\n<sub>Tired of seeing this sponsor message? :zap: `greenkeeper upgrade`</sub>\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2016-09-23T02:57:59Z",
        "closed_at": "2016-09-28T01:50:45Z",
        "merged_at": null,
        "body": "I don't think getLocation() needs to be called twice per render.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 91,
        "deletions": 15,
        "changed_files": 2,
        "created_at": "2016-09-20T19:27:10Z",
        "closed_at": "2016-10-06T23:10:41Z",
        "merged_at": "2016-10-06T23:10:41Z",
        "body": "Currently, in the v4 branch, `<Match pattern=\"/foo/\" component={Foo} />` fails to match at `/foo/bar/`, because the URL is truncated to `/foo/bar` instead of `/foo/` prior to being matched.\n",
        "comments": 17
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-09-20T07:14:13Z",
        "closed_at": "2016-09-20T12:05:19Z",
        "merged_at": "2016-09-20T12:05:19Z",
        "body": "Attempting to visit the /login route directly results in a \"this.props.location.state is null\" error which breaks the example.  This fix tells the login component to redirect back to the root route on login if the login route was accessed directly.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 133,
        "deletions": 19,
        "changed_files": 5,
        "created_at": "2016-09-19T13:32:55Z",
        "closed_at": "2016-10-06T23:18:15Z",
        "merged_at": "2016-10-06T23:18:15Z",
        "body": "These props allow selecting pushState and replaceState for navigating to\nthe next state.\n\nFix #3903.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-09-19T09:27:19Z",
        "closed_at": "2016-09-19T14:41:50Z",
        "merged_at": "2016-09-19T14:41:50Z",
        "body": "Does this need to be added to the docs too?\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-09-18T01:04:10Z",
        "closed_at": "2016-09-18T03:55:39Z",
        "merged_at": "2016-09-18T03:55:39Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 15,
        "deletions": 10,
        "changed_files": 1,
        "created_at": "2016-09-17T22:04:12Z",
        "closed_at": "2016-10-02T17:08:17Z",
        "merged_at": null,
        "body": "Fixes #3889\n<br />\n<br />Previously, using a Link outside of the Router would break the program. The breaking was caused by the inability to find location when outside of the router context. This PR fixes that by checking if the context contains the router, and if not, marking \"isActive\" as false by default. This introduces the assumption that all <Links> outside of the router are not active.\n<br />\n<br />This also adds a warning to indicate that the user is using the <Link> is being used outside of the error. I am not exactly sure what copy to use in the error.\n<br />\n<br />As of right now, since there is no invariant in handleClick, a <Link> can be \"used\" outside of a router. It simply reloads the page based on the href.\n<br />\n<br />This is my first time contributing, so let me know if there is anything else that needs to be changed or added to resolve this issue.\n",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2016-09-17T06:54:32Z",
        "closed_at": "2016-09-17T19:52:33Z",
        "merged_at": "2016-09-17T19:52:33Z",
        "body": "`history.getCurrentLocation`  was [removed](https://github.com/mjackson/history/compare/v4.0.0-1...v4.0.0-2#diff-04c6e90faac2675aa89e2176d2eec7d8L51) on history `v4.0.0-2` so I thought this check could be updated.\n\nI also took a look to the check on [v3](https://github.com/ReactTraining/react-router/blob/v3/modules/Router.js#L79), it seems that it will catch correctly(besides wording) histories created with history versions `>=4.0.0-2` but no versions `4.0.0` and `4.0.0-1`, I could also make a PR for that if you think is ok. \n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 113,
        "deletions": 0,
        "changed_files": 5,
        "created_at": "2016-09-16T16:38:21Z",
        "closed_at": "2016-09-16T17:52:44Z",
        "merged_at": "2016-09-16T17:52:44Z",
        "body": "Please refer to #3874\n\nFeel free to purpose different name for children function parameters! I am not good at naming things. :(\nThis should also allow creating Link on react-native, not tested yet, I don't have the infra to test it right now!\n\n``` javascript\nconst RNLink = ({to, ...props}) => <Link to={to}>{\n   ({isActive, transition}) => <Text onPress={transition} {...props} />\n}</Link>\n```\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-09-16T12:09:59Z",
        "closed_at": "2016-09-16T15:01:41Z",
        "merged_at": "2016-09-16T15:01:41Z",
        "body": "I found typo\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-09-15T22:32:53Z",
        "closed_at": "2016-09-16T00:51:08Z",
        "merged_at": null,
        "body": "Hello lovely humans,\n\n[history](https://www.npmjs.com/package/history) just published its new version 4.2.0.\n\n<table>\n  <tr>\n    <th align=left>\n      State\n    </th>\n    <td>\n      Update :rocket:\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Dependency\n    </td>\n    <td>\n      history\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      New version\n    </td>\n    <td>\n      4.2.0\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Type\n    </td>\n    <td>\n      dependency\n    </td>\n  </tr>\n</table>\n\n\nThis version is **not covered** by your **current version range**.\n\nWithout accepting this pull request your project will work just like it did before. There might be a bunch of new features, fixes and perf improvements that the maintainers worked on for you though.\n\nI recommend you look into these changes and try to get onto the latest version of history.\nGiven that you have a decent test suite, a passing build is a strong indicator that you can take advantage of these changes by merging the proposed change into your project. Otherwise this branch is a great starting point for you to work on the update.\n\nDo you have any ideas how I could improve these pull requests? Did I report anything you think isn\u2019t right?\nAre you unsure about how things are supposed to work?\n\nThere is a collection of [frequently asked questions](https://greenkeeper.io/faq.html) and while I\u2019m just a bot, there is a group of people who are happy to teach me new things. [Let them know](https://github.com/greenkeeperio/greenkeeper/issues/new).\n\nGood luck with your project :sparkles:\n\nYou rock!\n\n:palm_tree:\n\n---\n\nThe new version differs by 214 commits (ahead by 214, behind by 20).\n- [`b37e9c8`](https://github.com/mjackson/history/commit/b37e9c868022b2bb7c57efdfdc2252e4447c32da) <code>Version 4.2.0</code>\n- [`637aa0c`](https://github.com/mjackson/history/commit/637aa0cd30faab7a54254fad6260b0598cdd36ef) <code>Update CHANGES</code>\n- [`913bd10`](https://github.com/mjackson/history/commit/913bd1064f639df6d65656aa864b69bc5d24393a) <code>Add createLocation to top-level exports</code>\n- [`5d2364f`](https://github.com/mjackson/history/commit/5d2364f7151ed0337a4e1c3a460ea8deef6d8834) <code>Inline warning</code>\n- [`8450e07`](https://github.com/mjackson/history/commit/8450e07b00ef08f10aba2fd6bd94d337e9cc07e6) <code>Version 4.1.0</code>\n- [`a263d43`](https://github.com/mjackson/history/commit/a263d43f6c20d7c62b59c6eeb9790aff1a5804eb) <code>Update CHANGES</code>\n- [`021c9ba`](https://github.com/mjackson/history/commit/021c9ba650b6a9a9ab1be87f7dfa6c011e00475c) <code>Automatically clean up bad location descriptors</code>\n- [`100e6dd`](https://github.com/mjackson/history/commit/100e6ddcfe9041dc48e2916326bfa4cb93190a29) <code>Use a leading / when doing history.push('')</code>\n- [`1d0d6a0`](https://github.com/mjackson/history/commit/1d0d6a0350865c8f941778436f8f7dbc98a6171f) <code>Update release script</code>\n- [`7074a3a`](https://github.com/mjackson/history/commit/7074a3a112663c87387c41939353859a1d4e05d9) <code>Version 4.0.1</code>\n- [`4f7687e`](https://github.com/mjackson/history/commit/4f7687e5df01821a19226b9f0985a1d598d4a335) <code>Update package description</code>\n- [`1fd82f4`](https://github.com/mjackson/history/commit/1fd82f432ff82b16cb9df97a41720e48f91cb0d7) <code>Update README</code>\n- [`e874df6`](https://github.com/mjackson/history/commit/e874df6c7ecfce6ccaea75d8c06dca379aac2ce8) <code>chore(package): update babel-preset-es2015-loose to version 8.0.0 (#363)</code>\n- [`399c72c`](https://github.com/mjackson/history/commit/399c72c4b3e012bebf20128020350427df7bf0ac) <code>Version 4.0.0</code>\n- [`686925c`](https://github.com/mjackson/history/commit/686925cea9bf2e2559c1c6d9a747314c26ccdfee) <code>Update CHANGES</code>\n\nThere are 214 commits in total. See the [full diff](https://github.com/mjackson/history/compare/4e4af9dfab4cf94522cce5fcac85ec9c19c89e0c...b37e9c868022b2bb7c57efdfdc2252e4447c32da).\n\n---\n\nThis pull request was created by [greenkeeper.io](https://greenkeeper.io/).\n\n<sub>Tired of seeing this sponsor message? :zap: `greenkeeper upgrade`</sub>\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-09-15T14:39:25Z",
        "closed_at": "2016-09-15T15:44:05Z",
        "merged_at": null,
        "body": "Hello lovely humans,\n\n[history](https://www.npmjs.com/package/history) just published its new version 4.1.0.\n\n<table>\n  <tr>\n    <th align=left>\n      State\n    </th>\n    <td>\n      Update :rocket:\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Dependency\n    </td>\n    <td>\n      history\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      New version\n    </td>\n    <td>\n      4.1.0\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Type\n    </td>\n    <td>\n      dependency\n    </td>\n  </tr>\n</table>\n\n\nThis version is **not covered** by your **current version range**.\n\nWithout accepting this pull request your project will work just like it did before. There might be a bunch of new features, fixes and perf improvements that the maintainers worked on for you though.\n\nI recommend you look into these changes and try to get onto the latest version of history.\nGiven that you have a decent test suite, a passing build is a strong indicator that you can take advantage of these changes by merging the proposed change into your project. Otherwise this branch is a great starting point for you to work on the update.\n\nDo you have any ideas how I could improve these pull requests? Did I report anything you think isn\u2019t right?\nAre you unsure about how things are supposed to work?\n\nThere is a collection of [frequently asked questions](https://greenkeeper.io/faq.html) and while I\u2019m just a bot, there is a group of people who are happy to teach me new things. [Let them know](https://github.com/greenkeeperio/greenkeeper/issues/new).\n\nGood luck with your project :sparkles:\n\nYou rock!\n\n:palm_tree:\n\n---\n\nThe new version differs by 210 commits (ahead by 210, behind by 20).\n- [`8450e07`](https://github.com/mjackson/history/commit/8450e07b00ef08f10aba2fd6bd94d337e9cc07e6) <code>Version 4.1.0</code>\n- [`a263d43`](https://github.com/mjackson/history/commit/a263d43f6c20d7c62b59c6eeb9790aff1a5804eb) <code>Update CHANGES</code>\n- [`021c9ba`](https://github.com/mjackson/history/commit/021c9ba650b6a9a9ab1be87f7dfa6c011e00475c) <code>Automatically clean up bad location descriptors</code>\n- [`100e6dd`](https://github.com/mjackson/history/commit/100e6ddcfe9041dc48e2916326bfa4cb93190a29) <code>Use a leading / when doing history.push('')</code>\n- [`1d0d6a0`](https://github.com/mjackson/history/commit/1d0d6a0350865c8f941778436f8f7dbc98a6171f) <code>Update release script</code>\n- [`7074a3a`](https://github.com/mjackson/history/commit/7074a3a112663c87387c41939353859a1d4e05d9) <code>Version 4.0.1</code>\n- [`4f7687e`](https://github.com/mjackson/history/commit/4f7687e5df01821a19226b9f0985a1d598d4a335) <code>Update package description</code>\n- [`1fd82f4`](https://github.com/mjackson/history/commit/1fd82f432ff82b16cb9df97a41720e48f91cb0d7) <code>Update README</code>\n- [`e874df6`](https://github.com/mjackson/history/commit/e874df6c7ecfce6ccaea75d8c06dca379aac2ce8) <code>chore(package): update babel-preset-es2015-loose to version 8.0.0 (#363)</code>\n- [`399c72c`](https://github.com/mjackson/history/commit/399c72c4b3e012bebf20128020350427df7bf0ac) <code>Version 4.0.0</code>\n- [`686925c`](https://github.com/mjackson/history/commit/686925cea9bf2e2559c1c6d9a747314c26ccdfee) <code>Update CHANGES</code>\n- [`75a6342`](https://github.com/mjackson/history/commit/75a6342abe43efaa2f69af5ce3ce4b8722ae4a97) <code>Update README</code>\n- [`1b9d274`](https://github.com/mjackson/history/commit/1b9d2743d34cb40765ab651a1f9f10c6c2158a0e) <code>Update README</code>\n- [`de2c9e3`](https://github.com/mjackson/history/commit/de2c9e3b17a08e4d16cfb9b1da2fd6871601dc42) <code>Add tests for hash history state warnings</code>\n- [`e9cec9b`](https://github.com/mjackson/history/commit/e9cec9b9a784a718a79b4d37d40020ee0cfda035) <code>Fix typo</code>\n\nThere are 210 commits in total. See the [full diff](https://github.com/mjackson/history/compare/4e4af9dfab4cf94522cce5fcac85ec9c19c89e0c...8450e07b00ef08f10aba2fd6bd94d337e9cc07e6).\n\n---\n\nThis pull request was created by [greenkeeper.io](https://greenkeeper.io/).\n\n<sub>Tired of seeing this sponsor message? :zap: `greenkeeper upgrade`</sub>\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 34,
        "deletions": 1,
        "changed_files": 4,
        "created_at": "2016-09-15T01:40:35Z",
        "closed_at": "2016-09-16T19:18:18Z",
        "merged_at": "2016-09-16T19:18:18Z",
        "body": "Fixes #3839\nUses @chentsulin's code from #3843\n\nBasenames are handled by the history, but not by the stuff that actually displays URLs. This fixes things so rendered hrefs include the basename.\n\nNote: This is broken as-is, as we need to strip the basename from the location pushed to history too.\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 738,
        "deletions": 2344,
        "changed_files": 51,
        "created_at": "2016-09-14T22:23:35Z",
        "closed_at": "2016-09-16T16:25:02Z",
        "merged_at": null,
        "body": "Hello lovely humans,\n\n[eslint-plugin-react](https://www.npmjs.com/package/eslint-plugin-react) just published its new version 6.2.2.\n\n<table>\n  <tr>\n    <th align=left>\n      State\n    </th>\n    <td>\n      Update :rocket:\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Dependency\n    </td>\n    <td>\n      eslint-plugin-react\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      New version\n    </td>\n    <td>\n      6.2.2\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Type\n    </td>\n    <td>\n      devDependency\n    </td>\n  </tr>\n</table>\n\n\nThis version is **not covered** by your **current version range**.\n\nWithout accepting this pull request your project will work just like it did before. There might be a bunch of new features, fixes and perf improvements that the maintainers worked on for you though.\n\nI recommend you look into these changes and try to get onto the latest version of eslint-plugin-react.\nGiven that you have a decent test suite, a passing build is a strong indicator that you can take advantage of these changes by merging the proposed change into your project. Otherwise this branch is a great starting point for you to work on the update.\n\nDo you have any ideas how I could improve these pull requests? Did I report anything you think isn\u2019t right?\nAre you unsure about how things are supposed to work?\n\nThere is a collection of [frequently asked questions](https://greenkeeper.io/faq.html) and while I\u2019m just a bot, there is a group of people who are happy to teach me new things. [Let them know](https://github.com/greenkeeperio/greenkeeper/issues/new).\n\nGood luck with your project :sparkles:\n\nYou rock!\n\n:palm_tree:\n\n---\n\n[GitHub Release](https://github.com/yannickcr/eslint-plugin-react/releases/tag/v6.2.2)\n\n<h3>Fixed</h3>\n\n\n<ul>\n<li>Fix <code>no-unused-prop-types</code> crash (<a href=\"https://urls.greenkeeper.io/yannickcr/eslint-plugin-react/pull/825\">#825</a> <a href=\"https://urls.greenkeeper.io/EvNaverniouk\" class=\"user-mention\">@EvNaverniouk</a>)</li>\n<li>Fix <code>jsx-no-target-blank</code> crash (<a href=\"https://urls.greenkeeper.io/yannickcr/eslint-plugin-react/issues/821\">#821</a>)</li>\n</ul>\n\n---\n\nThe new version differs by 121 commits .\n- [`6b58f21`](https://github.com/yannickcr/eslint-plugin-react/commit/6b58f218daecbbe4e7eb18ced028745145a089d3) <code>Update CHANGELOG and bump version</code>\n- [`a0e0e57`](https://github.com/yannickcr/eslint-plugin-react/commit/a0e0e576c699115b743fcc28ae308eb4bd7f05d2) <code>Fix no-unused-prop-types crash (fixes #825)</code>\n- [`cf3b220`](https://github.com/yannickcr/eslint-plugin-react/commit/cf3b2204b6c338de9fa13fd90faf965a8113e4df) <code>Fix jsx-no-target-blank crash (fixes #821)</code>\n- [`0de2a9e`](https://github.com/yannickcr/eslint-plugin-react/commit/0de2a9e9c75a13af1415efa3d2566b6ac28e5b7d) <code>Update CHANGELOG and bump version</code>\n- [`d75dc08`](https://github.com/yannickcr/eslint-plugin-react/commit/d75dc089a915e39286d9420639d07edb4df278f8) <code>Update dependencies</code>\n- [`fa99e13`](https://github.com/yannickcr/eslint-plugin-react/commit/fa99e13629c025d46220d0b57fecbe5823320f4f) <code>Fix no-target-blank to be case insensitive</code>\n- [`3291358`](https://github.com/yannickcr/eslint-plugin-react/commit/329135873ceb928860e46871be418ace4d7dd8ab) <code>Use ESLint markVariableAsUsed method instead of our (now useless) custom one (fixes #799)</code>\n- [`ffd8ea7`](https://github.com/yannickcr/eslint-plugin-react/commit/ffd8ea77d103cf981fe1086deabf449bd5ffdfc1) <code>Fix jsx-no-target-blank to target only anchor elements</code>\n- [`79b56b4`](https://github.com/yannickcr/eslint-plugin-react/commit/79b56b49857f213235ece5356b95171e3b305334) <code>Fix false positive in no-unused-prop-types (fixes #801)</code>\n- [`bb5b1df`](https://github.com/yannickcr/eslint-plugin-react/commit/bb5b1df5a13ff504c4f241f3a4f674e99ed4043e) <code>Fix typo in no-unused-prop-types.md (#815)</code>\n- [`7abd9e8`](https://github.com/yannickcr/eslint-plugin-react/commit/7abd9e8606381cb482a0c10fc1ae4203d7ed9237) <code>Merge pull request #813 from AndiDog/patch-1</code>\n- [`36a4a40`](https://github.com/yannickcr/eslint-plugin-react/commit/36a4a406d5be556ae8f43c63daab96ec51cf9df3) <code>Add examples of correctly specified propTypes</code>\n- [`fd06c06`](https://github.com/yannickcr/eslint-plugin-react/commit/fd06c063b32f433f93a4d1fad11575deb6a69d1d) <code>Fix readme link (#794)</code>\n- [`9f76459`](https://github.com/yannickcr/eslint-plugin-react/commit/9f764599a537728e7ac9fa332d0ac6e3a6deb788) <code>[Docs] `prefer-stateless-function`: fix docs for `ignorePureComponents` option.</code>\n- [`80fd8e1`](https://github.com/yannickcr/eslint-plugin-react/commit/80fd8e16c1640626ed694f78166f03d19208b366) <code>Update CHANGELOG and bump version</code>\n\nThere are 121 commits in total. See the [full diff](https://github.com/yannickcr/eslint-plugin-react/compare/46c800805c735074c5e9f43a8b0c907ded024790...6b58f218daecbbe4e7eb18ced028745145a089d3).\n\n---\n\nThis pull request was created by [greenkeeper.io](https://greenkeeper.io/).\n\n<sub>Tired of seeing this sponsor message? :zap: `greenkeeper upgrade`</sub>\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 21,
        "deletions": 19,
        "changed_files": 1,
        "created_at": "2016-09-14T14:13:44Z",
        "closed_at": "2016-09-14T18:56:07Z",
        "merged_at": "2016-09-14T18:56:07Z",
        "body": "Solves #3837 problem\n\nBefore: `A valid React element (or null) must be returned`.\nAfter: everything renders ok.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2016-09-14T11:19:04Z",
        "closed_at": "2016-09-14T13:04:09Z",
        "merged_at": "2016-09-14T13:04:09Z",
        "body": "`Miss` and `Redirect` are not actually used in this example.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2016-09-14T09:03:18Z",
        "closed_at": "2016-09-14T13:19:38Z",
        "merged_at": null,
        "body": "Try fix #3839\n\n`router.createHref` should handle basename\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-09-14T08:10:55Z",
        "closed_at": "2016-09-14T13:03:37Z",
        "merged_at": "2016-09-14T13:03:37Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-09-14T06:44:45Z",
        "closed_at": "2016-09-14T13:02:50Z",
        "merged_at": "2016-09-14T13:02:50Z",
        "body": "I'm pretty sure this was the intended phrasing.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 20,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2016-09-14T05:39:28Z",
        "closed_at": "2016-09-14T13:07:27Z",
        "merged_at": null,
        "body": "fixes a stray pointy bracket \n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-09-14T05:11:30Z",
        "closed_at": "2016-09-14T13:09:59Z",
        "merged_at": "2016-09-14T13:09:59Z",
        "body": "change outdated URL link\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2016-09-14T01:57:38Z",
        "closed_at": "2016-09-14T03:20:16Z",
        "merged_at": null,
        "body": "index.js isn't in the root directory in `history@2.1.2` which version is used by `react-router`\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 32,
        "deletions": 28,
        "changed_files": 1,
        "created_at": "2016-09-14T01:46:16Z",
        "closed_at": "2016-09-16T15:44:28Z",
        "merged_at": null,
        "body": "The quickstart doesn't work because some comments are JS comments and they aren't a child of anything.\n\nStill having issues getting the quickstart to work with this code. I get:\n\n> Uncaught Error: MatchProvider.render(): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-09-14T01:23:51Z",
        "closed_at": "2016-09-14T03:18:49Z",
        "merged_at": "2016-09-14T03:18:49Z",
        "body": "Using #root because that is what create-react-app gives by default\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 52,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2016-09-13T21:42:31Z",
        "closed_at": "2016-09-13T23:57:34Z",
        "merged_at": "2016-09-13T23:57:34Z",
        "body": "Add failing test.\n\n`renders deep match` test works, but\n`should render deep match on path change` not.\n\nI think that the problem is because [this.parent](https://github.com/ReactTraining/react-router/blob/v4/modules/MatchProvider.js#L22) does not updated on route change.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 46,
        "deletions": 38,
        "changed_files": 4,
        "created_at": "2016-09-13T21:05:16Z",
        "closed_at": "2016-09-14T18:58:40Z",
        "merged_at": null,
        "body": "`MatchProvider` (and, by extension, `StaticRouter`), can only accept a single child (or a function). The Quick Start has a `BrowserRouter` with multiple children but it throws an error. This commit fixes that example, but an addition to the documentation may be warranted if this is intended behavior until multiple components can be returned from render (https://github.com/facebook/react/issues/2127).\n\nA possible fix would be to wrap a div around the children in `MatchProvider` but that would introduce a block element into the render and may not be the user's intent.\n",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-09-13T20:07:50Z",
        "closed_at": "2016-09-13T21:12:23Z",
        "merged_at": "2016-09-13T21:12:23Z",
        "body": "This adds `createServerRenderContext` to the main exports file, allowing it to be accessed exactly as it is in the v4 docs website.\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-09-13T17:23:18Z",
        "closed_at": "2016-09-13T19:23:08Z",
        "merged_at": "2016-09-13T19:23:08Z",
        "body": "This might fix the new docs in Firefox. I was able to fix it in the developer tools, and I think this is the right place to apply it. Honestly, I find Firefox's flexbox implementation to be closer to the spec usually, so Firefox's behavior may be correct and you need this.\n\nI can't figure out how to run the site, so I don't know if this works. Opening this PR to at least point you in the right direction.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-09-13T17:06:21Z",
        "closed_at": "2016-09-13T18:43:53Z",
        "merged_at": null,
        "body": "reactjstraining organization does not exist, updated link to reference repository in reactjs org.\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2016-09-13T14:11:42Z",
        "closed_at": "2016-09-13T16:19:06Z",
        "merged_at": null,
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-09-13T11:52:44Z",
        "closed_at": "2016-09-13T14:18:20Z",
        "merged_at": "2016-09-13T14:18:20Z",
        "body": "The actual type of this.props.params.portfolioId will be a string as opposed to a number.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 7,
        "changed_files": 2,
        "created_at": "2016-09-12T23:22:54Z",
        "closed_at": "2016-09-13T16:27:54Z",
        "merged_at": "2016-09-13T16:27:54Z",
        "body": "Only need to create the location in match.\n\nFixes #3807\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2016-09-12T07:34:27Z",
        "closed_at": "2016-09-12T20:06:21Z",
        "merged_at": null,
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 46,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2016-09-08T22:32:39Z",
        "closed_at": "2016-09-09T22:01:44Z",
        "merged_at": "2016-09-09T22:01:44Z",
        "body": "Hello, folks!\n\nThis PR addresses Issue https://github.com/reactjs/react-router/issues/2319. It allows Link components to render anchor tags without `href`s when the `to` prop is not specified.\n\nLove to hear what you think - I hope this is helpful! :v:\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-09-08T10:42:26Z",
        "closed_at": "2016-09-08T16:43:42Z",
        "merged_at": "2016-09-08T16:43:42Z",
        "body": "fix a missing replacement in commit https://github.com/reactjs/react-router/commit/759b4b1543de9e912c3188519fb20ad656b5feae\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-09-08T04:11:05Z",
        "closed_at": "2016-09-08T16:44:44Z",
        "merged_at": "2016-09-08T16:44:44Z",
        "body": "This just reduces the surface area of history that we use.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-09-05T08:24:47Z",
        "closed_at": "2016-09-28T01:52:55Z",
        "merged_at": null,
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2016-09-04T16:12:32Z",
        "closed_at": "2016-09-05T16:40:35Z",
        "merged_at": "2016-09-05T16:40:35Z",
        "body": "the current link is broken.\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2016-09-03T10:23:56Z",
        "closed_at": "2016-09-03T15:20:41Z",
        "merged_at": "2016-09-03T15:20:41Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 159,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2016-09-01T18:21:07Z",
        "closed_at": "2016-09-28T01:54:29Z",
        "merged_at": "2016-09-28T01:54:29Z",
        "body": "Working on a URL generator based on a route path.  Using `formatPattern` gets close, but fails when we have routes like `search(/collection/:collectionId)`.  This PR takes care of that case.\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 15,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2016-09-01T13:37:32Z",
        "closed_at": "2016-09-01T20:31:59Z",
        "merged_at": null,
        "body": "",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 95,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2016-08-27T09:56:21Z",
        "closed_at": "2016-08-27T14:29:37Z",
        "merged_at": null,
        "body": "Hello,\n\nI have the current feature in my project where a bunch of links should replace history entry instead of pushing into it. I know i could have made an entire custom history, but it looked overkill when a simple variation in the Link component could have done it properly, so i added an optional prop named `action` which default is `push` (so it's non-breaking) and can also be set to `replace` (thanks to propTypes.oneOf).\n\nAt first it felt out of place for me to have this because the links are now manipulating the history directly. But after thinking further, they actually did it already, with a single method instead of many, meaning the coupling to the history object has not increased _that much_.\n\nI'd be pleased to answer any questions,\n\nThanks\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-08-25T11:56:42Z",
        "closed_at": "2016-09-28T01:53:22Z",
        "merged_at": null,
        "body": "I guess [this](https://github.com/reactjs/react-router/pull/657) was removed because the functionality was removed from the router, and then someone [created](https://github.com/reactjs/react-router/issues/2019#issuecomment-222102709) a standalone package for this right?\n\nBut lots of [old](https://github.com/reactjs/react-router/issues/655) [issues](https://github.com/reactjs/react-router/issues/1196) and [pulls](https://github.com/reactjs/react-router/pull/657) still [reference](https://github.com/reactjs/react-router/issues/810) the old docs \"rackt\" that don't exist any more. But people will still find those issues and can't find any reference to the old scroll behavior in the current docs. \n\nLet's add this reference.\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 171,
        "deletions": 114,
        "changed_files": 10,
        "created_at": "2016-08-24T22:43:53Z",
        "closed_at": "2016-08-30T03:41:51Z",
        "merged_at": "2016-08-30T03:41:51Z",
        "body": "###### Recreating this from the private repo...\n\nSo, I thought MatchCounterProvider could be a little more robust and useful. This allows you to nest `<Match>`es and then use that context to create relative patterns.\n\nI think this will help smooth over the biggest transition from 2.x, since that supports relative route paths.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 69,
        "deletions": 54,
        "changed_files": 2,
        "created_at": "2016-08-19T03:37:19Z",
        "closed_at": "2016-08-19T15:11:46Z",
        "merged_at": "2016-08-19T15:11:46Z",
        "body": "Cleans up code style, variable naming, and tests\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 11,
        "changed_files": 3,
        "created_at": "2016-08-18T10:23:53Z",
        "closed_at": "2016-08-18T13:21:32Z",
        "merged_at": "2016-08-18T13:21:32Z",
        "body": "- Updated `docs/guides/README.md` to be in line with `docs/README.md`\n- Capitalized `testing.md` to match the rest\n- Added `Testing.md` to `docs/README.md` as well. \n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 30,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2016-08-18T05:10:48Z",
        "closed_at": "2016-08-19T03:14:54Z",
        "merged_at": "2016-08-19T03:14:54Z",
        "body": "Following up on conversation from [this](https://github.com/reactjs/react-router/issues/3652) bug. Adding the ability to specify an withRef option to be passed to withRouter. The signature has changed from `withRouter(MyComponent)` to `withRouter()(MyComponent)` except now you can do this `withRouter({withRef:true})(MyComponent)` and later `instanceOfMyComponent.getWrappedInstance()` returning the component instance wrapped by withRouter. This feature is also demonstrated in react-redux in [code](https://github.com/reactjs/react-redux/blob/master/src/components/connect.js#L265) and is [documented](https://github.com/reactjs/react-redux/blob/master/docs/api.md#getwrappedinstance-reactcomponent). If given the thumbs up I will update the documentation, and write a codemod script.\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 9,
        "changed_files": 9,
        "created_at": "2016-08-17T10:22:59Z",
        "closed_at": "2016-08-19T15:09:33Z",
        "merged_at": "2016-08-19T15:09:33Z",
        "body": "Fix for the changed default export behavior in babel 6. The default export now needs to be explicitly required(). See also http://stackoverflow.com/questions/33505992/babel-6-changes-how-it-exports-default.\n\nHad a look at the other examples, they're all ok.\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 24,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2016-08-16T21:56:04Z",
        "closed_at": "2016-08-16T23:40:04Z",
        "merged_at": "2016-08-16T23:40:04Z",
        "body": "withRouter should allow a router prop specified on a wrapped component\nto be used instead of the router in context; this pattern is more\nflexible, avoids overwriting explicitly set props, and makes testing\ncomponents wrapped by withRouter more simple.\n",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 75,
        "deletions": 3,
        "changed_files": 7,
        "created_at": "2016-08-10T01:11:51Z",
        "closed_at": "2016-08-15T02:23:25Z",
        "merged_at": "2016-08-15T02:23:25Z",
        "body": "First pass at #3606. Not 100% happy with it right now. It would be easier to architect if we had guaranteed Promise availability, but alas... \n\nI've got some practical things in there for Babel's `default` exports. And we can't just accept a Promise instead of a function, since `System.import` won't code split in that case. That's probably the most ugly part of it.\n\nBut this works:\n\n``` jsx\n<Route path='/' getComponent={() => System.import('./app')} />\n```\n\n![](http://img.pandawhale.com/post-19259-so-I-got-that-going-for-me-whi-CKYI.gif)\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 29,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2016-08-09T16:48:24Z",
        "closed_at": "2016-08-16T01:26:33Z",
        "merged_at": "2016-08-16T01:26:33Z",
        "body": "Right now, if you pass in a value with properties that is not a valid React Router middleware, we just silently ignore it. This leads to really confusing things happening like https://github.com/relay-tools/react-router-relay/issues/189.\n\nI don't think anybody's intentionally passing in empty objects to `applyRouterMiddleware`, so this should be a nice DX convenience.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 54,
        "deletions": 5,
        "changed_files": 5,
        "created_at": "2016-08-05T08:45:49Z",
        "closed_at": "2016-08-05T14:47:46Z",
        "merged_at": null,
        "body": "Hi!\n\nI have a use-case where I need to save a reference to the route definition, but my routes are declared in JSX.\n\nGiven React background, I expected `ref` to work in JSX, but it's not. \n\nThis PR makes it possible to receive `ref` callback when route is created:\n\n``` jsx\nlet usersRoute\n\nrender((\n  <Router>\n    <Rote ref={ route => usersRoute = route} path=\"users\" component={Users} />\n  </Router>\n), document.body)\n```\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 32,
        "deletions": 21,
        "changed_files": 5,
        "created_at": "2016-08-05T00:00:15Z",
        "closed_at": "2016-08-09T03:20:14Z",
        "merged_at": "2016-08-09T03:20:14Z",
        "body": null,
        "comments": 6
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2016-08-02T18:11:11Z",
        "closed_at": "2016-08-02T19:51:20Z",
        "merged_at": "2016-08-02T19:51:20Z",
        "body": "I forgot to update this when I moved the ES module build. Plus a bit of tiny housekeeping.\n\nThis is trivial enough that I'll just merge it once CI passes.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-08-02T08:18:04Z",
        "closed_at": "2016-08-02T16:20:12Z",
        "merged_at": "2016-08-02T16:20:12Z",
        "body": "While developing a widget which is meant to be embedded into websites\nvia an iframe, we noticed `history` taking over the parent page\u2019s\nback/forward button (not a bug, just the way browser history works). We\nwere able to isolate the routing to the widget by using\n`memoryHistory`.\n\nThis PR just adds a tiny note that `createMemoryHistory` can be useful\nfor a case like that.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2016-07-28T22:03:34Z",
        "closed_at": "2016-07-29T23:11:15Z",
        "merged_at": "2016-07-29T23:11:15Z",
        "body": "Fixes #3679.\n\nIncludes #3678 (needed for CI to pass).\n\n`PatternUtils` is sort of a mess, incidentally. There's no reason to export `compilePattern`, and there's no real reason that `getParams` should still exist (nothing calls it). I also don't know why `getRouteParams` is completely separate module, either.\n\nI want to fix/deprecate, but it's not that compelling right now.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 15,
        "changed_files": 1,
        "created_at": "2016-07-28T16:02:32Z",
        "closed_at": "2016-07-29T17:56:29Z",
        "merged_at": "2016-07-29T17:56:29Z",
        "body": "After https://github.com/ReactTraining/history/commit/b7152a4c6da99a150dd3e2b9011c85fb2d18e6bd.\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-07-27T05:10:52Z",
        "closed_at": "2016-07-28T15:02:07Z",
        "merged_at": "2016-07-28T15:02:07Z",
        "body": "I have been searching in the tutorials and guides but unable to find the instruction on how to navigate back to the previous page. I hope this addition will help more users.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 124,
        "deletions": 124,
        "changed_files": 21,
        "created_at": "2016-07-27T00:22:46Z",
        "closed_at": "2016-07-27T18:49:11Z",
        "merged_at": "2016-07-27T18:49:11Z",
        "body": null,
        "comments": 7
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-07-26T17:17:57Z",
        "closed_at": "2016-07-26T21:05:11Z",
        "merged_at": "2016-07-26T21:05:11Z",
        "body": "This is what webpack 2 prefers. Ideally Rollup will follow along as well.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 56,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2016-07-25T23:35:32Z",
        "closed_at": "2016-07-26T21:05:20Z",
        "merged_at": "2016-07-26T21:05:20Z",
        "body": "Closes https://github.com/reactjs/react-router/issues/3657\n\nI'm not absolutely sure this is entirely correct \u2013 the \"nice\" way to use this requires creating a throwaway function in render. But `<Link>` isn't a pure component right now anyway.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 173,
        "deletions": 212,
        "changed_files": 4,
        "created_at": "2016-07-25T23:24:20Z",
        "closed_at": "2016-07-26T01:59:53Z",
        "merged_at": "2016-07-26T01:59:53Z",
        "body": null,
        "comments": 2
    },
    {
        "merged": true,
        "additions": 22,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-07-21T12:54:53Z",
        "closed_at": "2016-07-22T00:21:13Z",
        "merged_at": "2016-07-22T00:21:13Z",
        "body": "This change adds an example to the documentation on how to use the onEnter callback to redirect a user to another page.\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 53,
        "deletions": 53,
        "changed_files": 6,
        "created_at": "2016-07-19T03:52:29Z",
        "closed_at": "2016-07-19T15:07:00Z",
        "merged_at": "2016-07-19T15:07:00Z",
        "body": "This code isn't going to win any beauty awards. I'd like to clean this up structurally before v3.0.0 final if I have time, but it's not going to involve any major API changes (just internal refactoring).\n\nI figure it's okay to take out the invariant on `history.getCurrentLocation` because anybody attempting to use a v2 history will just hit an exception when `history.getCurrentLocation` fails due to not existing. If it comes up, it'd be easy enough to add back the inverse of the removed invariant to assert a non-v3 history.\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 19,
        "deletions": 13,
        "changed_files": 2,
        "created_at": "2016-07-14T21:38:41Z",
        "closed_at": "2016-07-15T01:26:15Z",
        "merged_at": "2016-07-15T01:26:15Z",
        "body": "This doesn't change any behavior. It just syncs up the logic to the\nlatest that I have elsewhere.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 34,
        "deletions": 46,
        "changed_files": 5,
        "created_at": "2016-07-14T18:21:42Z",
        "closed_at": "2016-07-14T20:24:11Z",
        "merged_at": "2016-07-14T20:24:11Z",
        "body": "- I don't know why I had a branch to sometimes not run coverage, there's no reason not to always run coverage\n- The Mobile Safari custom browsers had a key collision\n- If we use the ES2015 support in recent Node releases, our random scripts all pass lint again, so we might as well lint them\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 20,
        "changed_files": 1,
        "created_at": "2016-07-14T16:13:37Z",
        "closed_at": "2016-07-15T20:25:23Z",
        "merged_at": "2016-07-15T20:25:23Z",
        "body": "Fixes #3635\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 85,
        "deletions": 72,
        "changed_files": 18,
        "created_at": "2016-07-05T16:34:45Z",
        "closed_at": "2016-07-13T20:28:37Z",
        "merged_at": "2016-07-13T20:28:37Z",
        "body": "I was going through cleaning up old branches, and realized I still had this one sitting around.\n\nMight as well check it in? I think it works.\n\nFrom https://github.com/reactjs/react-router/issues/3281, but looks like nobody's desperately in need of a release or anything.\n",
        "comments": 24
    },
    {
        "merged": false,
        "additions": 53,
        "deletions": 12,
        "changed_files": 4,
        "created_at": "2016-07-04T11:53:35Z",
        "closed_at": "2016-07-04T18:08:34Z",
        "merged_at": null,
        "body": "I changed onEnter callback to inject props.\n\nonEnter(nextState : object, replace : function,  ?callback : function(error, redirectInfo, asyncProps))\n\nsecond parameter will not works right now. I added this parameter to keep consistency.\nIt will look like 'match' functions callback.\nmaybe we can use this parameter as alternative of 'replace' function\nthird parameter will passing into container component.\n\nHere is example\n\n```\n<Route path=\"test\" component={TestContainer} onEnter={(nextState, replace, callback) => {\n  callback(null, null, { injectProps: 'hello world!' });\n}}>\n```\n\nTestContainer will have injectProps,\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 133,
        "changed_files": 5,
        "created_at": "2016-07-03T04:26:21Z",
        "closed_at": "2016-07-03T22:54:20Z",
        "merged_at": "2016-07-03T22:54:20Z",
        "body": "Takes out the deprecation in getComponents, and removes some old deprecated docs\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 41,
        "deletions": 39,
        "changed_files": 6,
        "created_at": "2016-07-01T21:08:52Z",
        "closed_at": "2016-07-02T02:19:52Z",
        "merged_at": "2016-07-02T02:19:52Z",
        "body": "Among other things, this makes our CI run against the new React release.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-07-01T07:20:29Z",
        "closed_at": "2016-07-01T15:23:49Z",
        "merged_at": null,
        "body": "add support for `getWrappedInstance` inspired by `react-redux`\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 46,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2016-06-30T17:23:41Z",
        "closed_at": "2016-08-02T16:32:12Z",
        "merged_at": null,
        "body": "Closes #3549\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 19,
        "changed_files": 1,
        "created_at": "2016-06-30T15:27:38Z",
        "closed_at": "2016-06-30T16:51:11Z",
        "merged_at": "2016-06-30T16:51:11Z",
        "body": "We are adding a warning to React that warns when you call `PropTypes` validation functions by yourself. This is going to be unsupported as we want to make them behave more like black boxes so people stop calling them, and it would become safe for us to make them no-ops in production, saving some code size.\n\nI tried the [new code](https://github.com/facebook/react/pull/7132) on some projects, and it appears that React Router calls propTypes directly generating the warnings: https://github.com/facebook/react/pull/7132#issuecomment-229534202.\n\nI\u2019m not sure how valuable that check was so I just removed it. If it\u2019s super valuable, we can replace it with `React.createElement` call that would make React check the prop types, but in this case I\u2019d need to have a test case verifying the behavior you wanted because I\u2019m not sure I fully understand why this call is necessary.\n\nI\u2019d appreciate if you could merge this and cut a release (especially if you could also backport it to 2.x) because otherwise React is start emitting warnings about React Router in a month or so.\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-06-30T09:33:33Z",
        "closed_at": "2016-06-30T15:56:28Z",
        "merged_at": null,
        "body": "Added a line that explains how to access the pushed state from router.push. It's currently not really clear within the documentation. http://stackoverflow.com/questions/34169068/passing-state-via-this-history-pushstate\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-06-30T07:56:37Z",
        "closed_at": "2016-06-30T15:50:38Z",
        "merged_at": null,
        "body": "How to redirect errors in a java servlet to index.html so that you can hit f5 or manually enter the url you desire.\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2016-06-25T03:36:56Z",
        "closed_at": "2016-06-25T07:02:38Z",
        "merged_at": "2016-06-25T07:02:38Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-06-23T13:12:14Z",
        "closed_at": "2016-06-24T03:37:52Z",
        "merged_at": "2016-06-24T03:37:52Z",
        "body": "I foolishly moved my Link component outside of the Router. I managed to figure it out pretty quickly but the error wasn't terribly helpful. See #3225. Thoughts?\n",
        "comments": 14
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-06-23T02:51:27Z",
        "closed_at": "2016-06-23T04:02:06Z",
        "merged_at": "2016-06-23T04:02:06Z",
        "body": null,
        "comments": 6
    },
    {
        "merged": true,
        "additions": 34,
        "deletions": 13,
        "changed_files": 2,
        "created_at": "2016-06-22T21:57:53Z",
        "closed_at": "2016-06-23T02:35:46Z",
        "merged_at": "2016-06-23T02:35:45Z",
        "body": null,
        "comments": 3
    },
    {
        "merged": true,
        "additions": 159,
        "deletions": 151,
        "changed_files": 8,
        "created_at": "2016-06-21T06:38:11Z",
        "closed_at": "2016-06-21T20:43:54Z",
        "merged_at": "2016-06-21T20:43:54Z",
        "body": "cc @avanderhoorn: This is what I meant\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 84,
        "deletions": 35,
        "changed_files": 9,
        "created_at": "2016-06-20T18:23:11Z",
        "closed_at": "2016-06-21T06:02:52Z",
        "merged_at": "2016-06-21T06:02:52Z",
        "body": "As it says on the label, this is an initial POC of making `params` and `remainingPathname` available to `getChildRoutes` providers. This was instigated primarily via a discussion with @taion and a another minor discussion with @timdorr.\n\n**Use Case**\nThe use case this is intended to help with is in cases where the child route to be returned by `getChildRoutes` is dependent on the `params` that have been evaluated so far. For instance, if I have `:country` as the path for the current route being matched, in the `getChildRoutes` function for that route, I want to be able to access the `country` param so that I can decide which child route should be returned for that country (it can be different in different cases). Additionally, I have other cases where I want to \"read forward\" into `remainingPathname` of the path to decide what child route should be returned. The later being a more minor use case.\n\nCurrently, without this patch, the only context I have available is the `location` arg, which is not that useful and which I end up having to parse manually. This is doable, but is tedious and leads to very brittle code (i.e. if you add/remove \"upstream\" path segments).\n\n**Approach**\nAs discussed with @taion, this PR has been done in a \"non breaking\" fashion - it follows the same pattern as a similar commit which was done to `getComponent` - [here](https://github.com/reactjs/react-router/commit/3076dca3c4335cf8a18d09cd28bc2c651ca946de). This is done by making all the location properties available at the root level for non dev builds but adding warnings to usage of those properties in dev builds (again following the same logic as with `getComponent`). \n\nAt the time of calling `getChildRoutes` we have access to the current `params` that have been available (which is what I am primarily after) and the remainder of the path that needs to yet to be parsed. As such, a state object is created with these values, plus the additional location properties, and passed into the registered `getChildRoutes`.\n\n**Questions**\n- `progressState` vs `nextState` - Elsewhere in the system, this object is called `nextState`, I wasn't sure you would consider if this exactly matches the semantics at play here since technically its not the \"final\" state and doesn't match the same structure as the current `nextState`. Hence I have called this `progressState`. Do you agree with this, is there a better name or should it just be `nextState`?\n\n**Note**\nI have abstracted out the `deprecateLocationProperties` function from `getComponents` as the logic is exactly the same. I'm assuming this is appropriate/desirable. \n\n**Work to be done**\nAssuming we are good with this PR and/or get to a point where we are good with it, I will finish off the, tests, samples update, docs, etc (inline with the work that was done with the `getComponent` [commit](https://github.com/reactjs/react-router/commit/3076dca3c4335cf8a18d09cd28bc2c651ca946de) mentioned earlier).\n",
        "comments": 17
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-06-13T10:54:00Z",
        "closed_at": "2016-06-13T13:46:27Z",
        "merged_at": null,
        "body": "i just think the link should return after the onClick function\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-06-12T12:47:10Z",
        "closed_at": "2016-06-12T17:50:15Z",
        "merged_at": null,
        "body": "The \"Minimize Bundle Size\" guides explain how to reduce file size by\nonly importing the neccessary parts of react-router.\nI created a small babel plugin to do this transformation automatically.\nhttps://www.npmjs.com/package/babel-plugin-transform-react-router-optimize\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-06-10T15:41:35Z",
        "closed_at": "2016-06-10T17:38:39Z",
        "merged_at": "2016-06-10T17:38:39Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 293,
        "deletions": 414,
        "changed_files": 7,
        "created_at": "2016-06-04T08:01:12Z",
        "closed_at": "2016-06-04T22:13:46Z",
        "merged_at": "2016-06-04T22:13:46Z",
        "body": "For stateless components (also called presentational/dumb components), Facebook introduced a much simpler syntax than ES6 classes.\nStateless functional components simply take props as an argument and return the element you want to render.\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 18,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-06-02T09:50:22Z",
        "closed_at": "2016-06-02T13:51:37Z",
        "merged_at": null,
        "body": "isActive should take into account query transformations made by stringifyQuery function\n",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-05-31T17:40:44Z",
        "closed_at": "2016-06-04T22:54:57Z",
        "merged_at": "2016-06-04T22:54:57Z",
        "body": "Hey hey,\n\n_(formal bug report below, without as much context on my solution)_\n\n> TL;DR; Like `react`, use `loose-envify` dependency / browserify transform to prevent browserify users from shipping development code in production.\n> (Warning: big file) L248 of https://github.com/ThibWeb/react-router-browserify-build/blob/master/bundle.js#L248.\n\nWhen using `browserify` to bundle a project that uses `react-router`, the default configuration of browserify transforms causes around 3kb of minified/gzipped warning messages to end up in the production bundles.\n\nThe source of the problem is that by default browserify transforms do not run on packages in `node_modules`. Configuring those to run on the whole bundle is simple, but I believe [this is counter-intuitive to the common \"best practices](https://github.com/babel/babelify#why-arent-files-in-node_modules-being-transformed)\", and people might overlook this.\n\nI imagine this hasn't been reported before because React users seem to use Webpack more than Browserify, and Webpack's `DefinePlugin` targets the whole bundle.\n\n`facebook/react` handles this problem by depending on `loose-envify`, and [declaring the transform it in its `package.json`](https://github.com/facebook/react/blob/c9504d99a55d544b38ad452a776250e3ea6ee68c/packages/react/package.json#L30). Since React itself does this I believe that react-router should follow the lead and _not rely on users to do the right thing_. That said, it's another burden on the package authors for something that can also be handled with appropriate configuration by users. It also needs to be done in https://github.com/mjackson/history, and a big number of other React-related projects I imagine.\n\nThe other option is to document this issue in this project and others, by specifying the consequences (dev code in production, dead weight in the JS bundles) and fix (`global` flag for a transform that replaces `NODE_ENV` and potentially other variables).\n\n---\n## Version\n\n2.3.0, 2.4.1, and `history@2.1.2` (probably all of `react-router@2` & other versions of `history` as well)\n## Test Case\n\nhttps://github.com/ThibWeb/react-router-browserify-build\n(Warning: big file) L248 of https://github.com/ThibWeb/react-router-browserify-build/blob/master/bundle.js#L248.\n## Steps to reproduce\n\nCompile a project using `react-router` with browserify, without running an \"envify\" transform over all `node_modules` (default behavior).\n\nExample: `NODE_ENV=production browserify index.js -t [ babelify ] -t [ envify ] > bundle.js`\n## Expected Behavior\n\nMessages intended for developers should be surrounded by `'production' !== 'production'` (or other env values for that matter) checks so that minification removes them.\n## Actual Behavior\n\n\u00b13kb (gzipped) of development aid messages are kept in the bundle and make their way to production.\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2016-05-31T12:57:57Z",
        "closed_at": "2016-05-31T14:35:18Z",
        "merged_at": null,
        "body": "It would be good to enhance the synthetic event passed to the `onClick` event handler with extra information from the `Link` component itself and the router.   Since no one should be interested in the instance of Link itself, I propose passing just its properties as the `linkProps` property of the event object.  The router instance is available from `this.context` that can be merged straight away.  If, at any time and as requested elsewhere, `location` also becomes available in the context, it would also become available in the event object.  This would allow for more informed decisions in the `onClick` handler such as:  \n\n``` js\n<Link to=\"somewhere\" onClick={ev => {\n  if (ev.router.isActive(ev.linkProps.to)) ev.preventDefault();\n}}>\n```\n\nWith this information, it would be easy for anyone to implement relative links just by composing the values in `ev.location.pathname`, `ev.linkProps.to` \n\nThough calling `ev.router.push` would be the natural way to redirect such a relative link, I would suggest accepting a `ev.linkProps.redirectTo` property.  This property is initially `undefined` but can be set by the developer in the `onClick` handler.   Then, it would be used in `this.context.router.push(event.linkProps.redirectTo || to)`.  The advantage of doing this so is that it goes through the normal flow of code, checking for left-click and modifier keys.\n\nI think the changes are inexpensive (requires no extra resources) and backward compatible with existing code and provides tons of useful information that may help developers take better decisions in the event handler.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-05-23T11:23:07Z",
        "closed_at": "2016-05-23T12:40:39Z",
        "merged_at": "2016-05-23T12:40:39Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2016-05-21T03:55:16Z",
        "closed_at": "2016-05-23T17:41:06Z",
        "merged_at": "2016-05-23T17:41:06Z",
        "body": "Basically the text for API docs is copied from `createTransitionManager`, looks like it is good, though didn't had chance to dig into router's internals.\nRemoved last line _Returns a function that may be used to unbind the listener._, as react-router manages this itself.\n\nLet me know what you think. Hope got it right.\n\nFixes #3488 \n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 18,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2016-05-20T04:54:18Z",
        "closed_at": "2016-05-31T04:01:59Z",
        "merged_at": "2016-05-31T04:01:59Z",
        "body": "Per discussion in #3325. It's a bit awkward to have to opt in to context or wrap route components in `withRouter` in order to do things like `router.push` considering all the other routing concerns already injected into route components.\n\nIf this can go in 2.x I can retarget there. I think the issue title threw me :confused:\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 69,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2016-05-19T21:18:02Z",
        "closed_at": "2016-05-20T05:41:32Z",
        "merged_at": null,
        "body": "### Issue I'm trying to solve\n\nWhile trying to write helpers for redux-observable to make using redux and rxjs more ergonomic with react-router, I ran into a need to be able to know if anything under `props.params` has actually changed. At that point I discovered that `props.params` is always a new instance, even if the properties underneath it have not changed.\n\nIdeally, we'd be able to check `nextProps.params === currentProps.params` in our components to know if we should update or fire other logic.\n\nRight now props.params is at least not being mutated, but that's more because it's stateless so it's brand new every time.\n### What I've attempted here isn't working yet.\n1. I'm not entirely sure how to get the test harness to act like route params have changed. So the test I've added is likely garbage.\n2. Basically I tried to move `getRouteParams` to be a method of `RouteContext`, so RouteContext could track the current route params so they can be compared after they change. I then made an attempt at making them route params immutable.\n### It's a start\n\nUnfortunately, I don't have much more time today to dig into this because I have other deliverables and I'll just need to work around our issue with react-router and circle back\n\nI'd love any advice/help in getting this to work, particularly in the tests. I'm pretty new to hacking on react router, as we were running a fork of react-router for a while that @jayphelps maintained for us.\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-05-18T07:47:29Z",
        "closed_at": "2016-05-18T12:44:54Z",
        "merged_at": "2016-05-18T12:44:54Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2016-05-16T18:04:56Z",
        "closed_at": "2016-05-16T21:30:17Z",
        "merged_at": "2016-05-16T21:30:17Z",
        "body": "Haven't tested this but noticed it while copying and pasting code, presume this change needs to be made. Thanks for posting this example by the way!\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 20,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2016-05-14T14:52:07Z",
        "closed_at": "2016-05-21T00:10:22Z",
        "merged_at": null,
        "body": "I needed to handle async routes with potential redirects in the render method on the client, so I figured I would add it to the doc. Not sure if this is the right way to go about it, but if it is it'd probably be good to have it in the documentation if it is.\n",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 25,
        "deletions": 7,
        "changed_files": 3,
        "created_at": "2016-05-12T10:09:55Z",
        "closed_at": "2016-05-17T18:16:09Z",
        "merged_at": "2016-05-17T18:16:09Z",
        "body": "Replace decodeURIComponent with _tryDecodeURIComponent to ignore crash \"URIError: malformed URI sequence\".\n",
        "comments": 11
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-05-10T16:57:39Z",
        "closed_at": "2016-05-10T21:55:02Z",
        "merged_at": "2016-05-10T21:55:02Z",
        "body": "For us poor suckers still stuck using 0.13.x, https://github.com/reactjs/react-router/tree/0.13.x/doc is a lot more useful than https://github.com/reactjs/react-router/tree/0.13.x/docs/guides (and for a long time I just assumed there was no API documentation because of this link in the readme).\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 54,
        "deletions": 27,
        "changed_files": 6,
        "created_at": "2016-05-09T17:08:27Z",
        "closed_at": "2016-05-09T19:00:47Z",
        "merged_at": "2016-05-09T19:00:47Z",
        "body": "Not sure if this is a great way to do it but let\u2019s start here. Partially fixes #3325\u2014at least for my use cases.\n\nI\u2019m not sure how to put `route` there because it depends on how deep you are. So I just limited it to `params` and `location`.\n",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 401,
        "changed_files": 8,
        "created_at": "2016-05-06T22:48:30Z",
        "closed_at": "2016-05-07T01:15:14Z",
        "merged_at": "2016-05-07T01:15:14Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 32,
        "deletions": 20,
        "changed_files": 1,
        "created_at": "2016-05-06T22:40:24Z",
        "closed_at": "2016-05-07T01:17:42Z",
        "merged_at": "2016-05-07T01:17:42Z",
        "body": "- Use separate context object\n- Use correct subscribe method\n\nI'm putting this PR here ahead of pulling this out into a separate library just for the sake of visibility. This fixes a couple of my bugs in the original ContextSubscriber implementation. After this, I'll pull this out into a separate library.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 20,
        "deletions": 1,
        "changed_files": 11,
        "created_at": "2016-05-06T20:18:48Z",
        "closed_at": "2016-05-07T14:20:48Z",
        "merged_at": null,
        "body": "Made it easier to navigate between documents.\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 214,
        "deletions": 84,
        "changed_files": 5,
        "created_at": "2016-05-05T10:12:44Z",
        "closed_at": "2016-05-05T15:37:16Z",
        "merged_at": null,
        "body": "routerLink provides a convenient way to customize the appearance of `<Link>`s by essentially \"injecting\" some properties to the wrapped component such as linkActive and handleClick.\n\nFor example, with this component it is easy (and maintainable) to write components that applies classes if the link is not active or that should not be \"fully clickable\" (e.g., a `<div>` containing the actual link).\n\nFurthermore, this component extracts most of the logic from `<Link>` which now becomes a presentation-only component wrapped by routerLink (hence more maintainable, hopefully).\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 170,
        "deletions": 3,
        "changed_files": 4,
        "created_at": "2016-05-05T01:22:26Z",
        "closed_at": "2016-05-06T22:29:38Z",
        "merged_at": "2016-05-06T22:29:38Z",
        "body": "The second attempt to fix #470, thereby unbreaking every project that uses React Redux with React Router. (The first attempt was #3429.)\n\nI\u2019m mostly using the snippets @taion wrote in https://github.com/reactjs/react-router/pull/3429#issuecomment-217048841 and https://github.com/reactjs/react-router/issues/470#issuecomment-217046400 as they work great, with minor tweaks to accommodate the overall project code style. I tested this on a few example projects I have, and they seem to work (even with React Redux `connect()` optimizations which was the goal.)\n\nAll existing tests are passing.\n\n@taion expressed a desire for this to be separated from the router code. I don\u2019t disagree but I personally just won\u2019t have the time to maintain it, so I\u2019m not ready to do this. I\u2019m also not 100% sure that this exact approach will not need any changes, and if it does, it would be easier to do this before any of this becomes a public API of any module.\n\nI would _really_ like to get this into 3.0. Any performance downsides from this PR in my opinion are drowned by the performance downsides of people having to turn off `connect()` optimizations. In a typical app, user actions happen much more frequently on the page than route changes. Given the popularity of both Redux and React Router, even if we personally don\u2019t use them together, I\u2019m sure that _lots_ of React Router users do, and will benefit from this finally not breaking.\n",
        "comments": 14
    },
    {
        "merged": false,
        "additions": 183,
        "deletions": 35,
        "changed_files": 4,
        "created_at": "2016-05-04T23:44:52Z",
        "closed_at": "2016-05-05T01:12:18Z",
        "merged_at": null,
        "body": "Fixes #470, thereby unbreaking every project that uses React Redux with React Router.\n\nThis follows the approach described in https://github.com/reactjs/react-router/pull/3340#discussion_r60169008, but I\u2019m happy for this to go into 3.0 rather than 2.x. I tested this on a few apps, and it works well in my testing. I\u2019m happy to add as many additional unit tests as you like if this is something you are ready to consider to take in. I believe it\u2019s going to take a huge pain point away from using these together, and I\u2019m super excited about the possibility of this shipping.\n\nTechnical details as comments inline.\n",
        "comments": 11
    },
    {
        "merged": true,
        "additions": 17,
        "deletions": 18,
        "changed_files": 3,
        "created_at": "2016-05-03T19:39:16Z",
        "closed_at": "2016-05-05T02:37:24Z",
        "merged_at": "2016-05-05T02:37:24Z",
        "body": "I don't want to anachronistically update the v2.x upgrade guide to reference libraries that didn't exist at the time, but it's worth noting that the API to scroll-behavior has in fact changed.\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 21,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-04-29T12:27:18Z",
        "closed_at": "2016-04-29T14:04:40Z",
        "merged_at": null,
        "body": "Hello,\n\nWe use react-router in multiple React applications - thanks a lot for all the hard work -, all using both `basename` and `IndexRedirect` features. We've noticed some strange behavior when using the two, so I began playing with the tests and found the following, which seems odd to me, though I may be missing something.\n## Version\n\n2.4.0, possibly others as well\n## Test Case\n\nSee failing test case commit\n## Steps to reproduce\n- Setup a `UserRouterHistory` with a basename,\n- Setup an `IndexRedirect` to a given pathname\n- Match the `IndexRedirect`\n## Expected Behavior\n- Pathname is updated accordingly and does not include the basename\n## Actual Behavior\n- Pathname is updated but does include the basename\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 22,
        "changed_files": 1,
        "created_at": "2016-04-28T23:08:26Z",
        "closed_at": "2016-04-29T17:38:26Z",
        "merged_at": "2016-04-29T17:38:26Z",
        "body": "In practice, tree-shaking does not currently allow for the kind bundle size reduction achievable using direct module imports, so shouldn't encourage it as an option for minimizing bundle size.\n\n@Rich-Harris explains it here: https://github.com/reactjs/redux/pull/1369#issuecomment-210853615.\n\nSpecifically, because of the way we set up the singleton histories, those will not tree-shaken out, as noted by @tomduncalf in https://github.com/reactjs/react-router/issues/3387#issuecomment-215051101.\n\nThe best approach then is to import from the ES module directory, but I don't think we should encourage people to import from `react-router/es6/*` when we want to move that to `react-router/es/*`. Maybe we should maintain an ES module build in both `/es` and `/es6`.\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-04-27T16:30:53Z",
        "closed_at": "2016-04-27T18:34:52Z",
        "merged_at": "2016-04-27T18:34:52Z",
        "body": "When checking to see if target was supported on the Link module, I first checked props and noticed it wasn't there, but then noticed it was used below in the code. This might help other developers quickly determine that target is a supported prop. \n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-04-27T11:27:31Z",
        "closed_at": "2016-04-27T17:18:59Z",
        "merged_at": null,
        "body": "I believe, this is a proper fix for https://github.com/denvned/isomorphic-relay-router/issues/26.\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 26,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-04-27T08:54:31Z",
        "closed_at": "2016-04-27T15:13:36Z",
        "merged_at": null,
        "body": "I think a example will more clearly demonstrate how it works.\nThey don't need to check in issue or google where can they retrieve the `router` object.\nAs my opinion, a naive example means a lot to the developers.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-04-27T02:13:15Z",
        "closed_at": "2016-04-28T15:11:50Z",
        "merged_at": "2016-04-28T15:11:50Z",
        "body": "This solution is an improvement over the `createElement` method in that it passes eslint-plugin-react problem https://github.com/yannickcr/eslint-plugin-react/issues/512, and that conceptually, I think a middleware is the place to do these kind of manipulations.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 41,
        "deletions": 5,
        "changed_files": 3,
        "created_at": "2016-04-26T16:51:00Z",
        "closed_at": "2016-04-27T20:16:24Z",
        "merged_at": null,
        "body": "Maybe?\n\nIt'd address e.g. https://github.com/reactjs/react-router/issues/3387.\n\nGoing to make a separate PR to history that makes the base href check lazy, which is probably more correct.\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-04-25T17:32:28Z",
        "closed_at": "2016-04-25T20:48:56Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 46,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2016-04-25T14:57:40Z",
        "closed_at": "2016-04-28T14:43:03Z",
        "merged_at": null,
        "body": "`isActive` expects array parameters in the location query to have the same ordering as in the expected location descriptor. I _think_ the router automatically orders them alphabetically when you do `this.context.router.push(myLocationDescriptor)`, so this assumption can become annoying as you then have to make sure you sort before calling `isActive`.\n\nAdditionally, if one of the parameters in the expected location descriptor is an empty array, isActive returns false if said parameter is absent from the url.\n\nI am happy to fix this, but I want to confirm with you first that this behaviour is desirable (it is in my case :):\n- order of values in array shouldn't matter for `isActive`\n- empty array params missing from the URL should not affect `isActive`\n\nThanks for a great product.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-04-23T00:19:51Z",
        "closed_at": "2016-04-23T01:51:58Z",
        "merged_at": null,
        "body": "I got `Uncaught Error: Cannot find module \"history\"` because when I upgraded to 2.0.0 I dropped `history` from `package.json`, but it's required if you do this.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-04-22T10:19:22Z",
        "closed_at": "2016-04-22T14:14:11Z",
        "merged_at": null,
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2016-04-22T00:28:08Z",
        "closed_at": "2016-04-22T02:28:23Z",
        "merged_at": "2016-04-22T02:28:23Z",
        "body": "This doesn't do anything right now, but might avoid problems later.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 75,
        "deletions": 58,
        "changed_files": 5,
        "created_at": "2016-04-20T18:51:38Z",
        "closed_at": "2016-04-21T05:24:35Z",
        "merged_at": "2016-04-21T05:24:35Z",
        "body": "It turns out what I was doing with the output of `matchPattern` was an abuse and only worked in loose mode. Granted, we're still using loose mode, but we might as well not abuse ES6 semantics.\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-04-20T17:40:50Z",
        "closed_at": "2016-04-21T05:24:52Z",
        "merged_at": "2016-04-21T05:24:51Z",
        "body": "#2933 is the larger goal\n#3359 raises my case for why this specific doc update should be prioritized\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 369,
        "deletions": 335,
        "changed_files": 16,
        "created_at": "2016-04-18T21:21:27Z",
        "closed_at": "2016-04-21T16:12:44Z",
        "merged_at": "2016-04-21T16:12:44Z",
        "body": "Closes #3350.\n\nThis is a little funky because we have to set a static on the composed component. I was originally just going to set `Component.contextTypes` and call it a day, but that creates a side effect. Is there any downside or error in the proposed solution? `hoist-non-react-statics` is nice to keep from running into unintended surprises (especially if the component is wrapped multiple times). \n",
        "comments": 29
    },
    {
        "merged": true,
        "additions": 119,
        "deletions": 63,
        "changed_files": 21,
        "created_at": "2016-04-18T18:03:24Z",
        "closed_at": "2016-04-18T20:27:32Z",
        "merged_at": "2016-04-18T20:27:32Z",
        "body": "Closes https://github.com/reactjs/react-router/issues/3205, https://github.com/reactjs/react-router/issues/3342\n\nThis does a few things:\n- Rename the exported `location` and `router` prop types to `locationShape` and `routerShape`, and export them at top-level from `react-router`\n- Deprecate all the old internal prop types that should not have been exported\n- Deprecate the old `location` and `router` prop type names\n- Add back the removed prop types per #3342\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 42,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-04-18T11:03:54Z",
        "closed_at": "2016-04-18T20:18:13Z",
        "merged_at": "2016-04-18T20:18:13Z",
        "body": "Explain usage of `context.router` for:\n- Components created with `React.createClass`\n- Components created with ES classes extending `React.Component`\n- Components created as stateless functions\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-04-18T06:56:57Z",
        "closed_at": "2016-04-18T14:24:10Z",
        "merged_at": null,
        "body": "This addresses a regression in react-router version 2.2.0 where the default export of `PropTypes` had some useful shapes removed. Fixes #3342.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 41,
        "deletions": 1575,
        "changed_files": 23,
        "created_at": "2016-04-18T03:18:27Z",
        "closed_at": "2016-04-21T07:22:44Z",
        "merged_at": "2016-04-21T07:22:44Z",
        "body": "See #3336.\n",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 12,
        "changed_files": 4,
        "created_at": "2016-04-16T22:49:18Z",
        "closed_at": "2016-04-18T03:00:26Z",
        "merged_at": "2016-04-18T03:00:26Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-04-16T16:19:21Z",
        "closed_at": "2016-04-16T17:36:33Z",
        "merged_at": "2016-04-16T17:36:33Z",
        "body": "This is the more correct way of addressing #3333. webpack 2 users should configure webpack to look at jsnext:main instead of importing from react-router/es6, which is not intended to be supported.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2016-04-16T16:10:53Z",
        "closed_at": "2016-04-16T17:37:11Z",
        "merged_at": "2016-04-16T17:37:11Z",
        "body": "Fixes #3333\n\nRevert \"Move ES module build to es/ (#3295)\"\n\nThis reverts commit d4f8d3cad70fb0a79629221b5cf47efb552a97d1.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 184,
        "deletions": 1,
        "changed_files": 4,
        "created_at": "2016-04-15T18:41:53Z",
        "closed_at": "2016-04-16T16:05:35Z",
        "merged_at": "2016-04-16T16:05:35Z",
        "body": "I'll add some docs in @knowbody's new docs site thing, but here's the quick version:\n\n``` js\n// end users put the middleware in the `render` prop\n<Router render={applyRouterMiddleware(useFoo())}/>\n\n// a middleware returns an object w/ two methods\nconst useFoo = () => ({\n  // this will wrap `RouterContext` to participate in rendering at the top level of\n  // the Router rendering tree\n  renderRouterContext: (child, renderProps) => (\n    <FooRootContainer>{child}</FooRootContainer>\n  ),\n\n  // this will wrap the route components when RouterContext renders them\n  renderRouteComponent: (child, routeComponentProps) => (\n    <FooContainer>{child}</FooContainer>\n  )\n})\n\n// typically these things just add something to context\nconst FooRootContainer = React.createClass({\n  propTypes: { children: React.PropTypes.node.isRequired },\n  childContextTypes: { foo: React.PropTypes.string },\n  getChildContext() { return { foo: FOO_ROOT_CONTAINER_TEXT } },\n  render() {\n    return this.props.children\n  }\n})\n\n// so that the route component containers or other components anywhere in the tree\n// can access it\nconst FooContainer = React.createClass({\n  propTypes: { children: React.PropTypes.node.isRequired },\n  contextTypes: { foo: React.PropTypes.string.isRequired },\n  render() {\n    const { children, ...props } = this.props\n    const fooFromContext = this.context.foo\n    return cloneElement(children, { ...props, fooFromContext })\n  }\n})\n```\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 34,
        "deletions": 12,
        "changed_files": 4,
        "created_at": "2016-04-14T22:51:04Z",
        "closed_at": "2016-08-02T16:31:30Z",
        "merged_at": null,
        "body": "From @ryanflorence on https://github.com/reactjs/react-router/pull/3246#issuecomment-210139897:\n\n> Added the 3.0 milestone. We don't want to release this until we have features/improvements that depend on it, otherwise it's just annoying to our users. If we get those going we can move this to an earlier release.\n> \n> @taion, mind enumerating the feature(s) that depend on this?\n\nSo I think at the end of it all, it looks like nothing strictly depends on this. It just makes a lot of things simpler, like relative link support, and lets us further optimize checking whether links are active.\n\nSo there's nothing strictly requiring this any more, but we should still do it sooner or later.\n",
        "comments": 17
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2016-04-14T21:46:02Z",
        "closed_at": "2016-04-15T00:02:43Z",
        "merged_at": null,
        "body": "`Router.PropTypes.router` is `undefined`. The tutorial uses `React.PropTypes.object`, and which seems to work properly\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-04-14T21:10:55Z",
        "closed_at": "2016-04-14T23:52:37Z",
        "merged_at": "2016-04-14T23:52:37Z",
        "body": "The current `homepage` is redirecting to http://facebook.github.io/react/.\nThat's annoying when using a tool like [npm-check](https://www.npmjs.com/package/npm-check) to check the change log.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 61,
        "deletions": 46,
        "changed_files": 2,
        "created_at": "2016-04-14T19:22:27Z",
        "closed_at": "2016-04-14T20:56:35Z",
        "merged_at": "2016-04-14T20:56:35Z",
        "body": "Now that we've finally landed #3158 (hopefully for good), we can optimize `isActive` a bit.\n\nPaths are fully canonical now except for possibly the trailing slash.\n\nThus, for checking `indexOnly` active state, we only need to verify that the paths are the same, net of leading/trailing slash normalization. This ought to be a lot faster than actually running the path match.\n\nAdditionally, this condition is also sufficient (but not necessary) for a route match in the general case.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-04-14T09:47:35Z",
        "closed_at": "2016-04-14T14:57:18Z",
        "merged_at": null,
        "body": "Set the correct PropType for router when setting the context in ConfirmNavigation quide #3310 \n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 20,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2016-04-14T06:57:29Z",
        "closed_at": "2016-04-14T16:04:12Z",
        "merged_at": "2016-04-14T16:04:12Z",
        "body": "Fixes #3307\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 10,
        "changed_files": 1,
        "created_at": "2016-04-13T23:42:23Z",
        "closed_at": "2016-04-14T16:04:35Z",
        "merged_at": "2016-04-14T16:04:35Z",
        "body": "This is finally fixed on npm 3.8.7 and higher\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 119,
        "deletions": 40,
        "changed_files": 17,
        "created_at": "2016-04-13T19:16:12Z",
        "closed_at": "2016-04-13T23:27:21Z",
        "merged_at": "2016-04-13T23:27:21Z",
        "body": "Fixes https://github.com/reactjs/react-router/issues/3262\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2016-04-12T21:54:35Z",
        "closed_at": "2016-04-13T18:36:09Z",
        "merged_at": "2016-04-13T18:36:09Z",
        "body": "`<Link />` always adds the `class=\"\"` attribute even when it's not defined or is active. When you do server rendering you don't want unnecessary attributes.\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-04-12T15:46:27Z",
        "closed_at": "2016-04-14T18:14:01Z",
        "merged_at": null,
        "body": "For now, this is just a breaking test from #3277.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2016-04-11T12:53:58Z",
        "closed_at": "2016-04-11T14:38:07Z",
        "merged_at": null,
        "body": "Don't really know why 'oneOfType' is left alone in 'Link' while others are defined in 'PropTypes.js'.\nFound it cleaner to remove 'oneOfType' from Link and describe it in PropTypes as the others. Sure @taion or @timdorr has some input on why this is bad, but was worth as shot.\n\nAlso, I didn't find this to collide with #3218 \n# \n\nLastly; I'm sorry for so many PR's. I learn from your replies, which helps me to be a better programmer, writing future code. I'm very thankful for you answering PR's instead of just closing them, which would be quite tempting, as you get a lot of issues and PR's that's not right. \n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 52,
        "deletions": 48,
        "changed_files": 21,
        "created_at": "2016-04-07T07:19:47Z",
        "closed_at": "2016-04-07T20:42:42Z",
        "merged_at": null,
        "body": "Added page to align centre with list margins.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-04-06T15:07:21Z",
        "closed_at": "2016-04-06T16:19:50Z",
        "merged_at": null,
        "body": "Added a small paragraph about why we use ES6 like this so we don't seem like matrix minions when they review our code.\n",
        "comments": 11
    },
    {
        "merged": true,
        "additions": 29,
        "deletions": 30,
        "changed_files": 7,
        "created_at": "2016-04-06T08:27:33Z",
        "closed_at": "2016-04-06T14:31:08Z",
        "merged_at": "2016-04-06T14:31:08Z",
        "body": "Added Component to import statement to save some space. We have two choices.\nEither to do React.Component with all other than huge-apps, for\nhuge-apps to be an example. Or we could use Component rather than\nReact.Component in the all of the examples.\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 32,
        "deletions": 32,
        "changed_files": 16,
        "created_at": "2016-04-06T04:57:54Z",
        "closed_at": "2016-04-06T07:19:34Z",
        "merged_at": "2016-04-06T07:19:34Z",
        "body": "Replaced React.component with component.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 63,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2016-04-05T20:05:17Z",
        "closed_at": "2016-04-12T14:55:48Z",
        "merged_at": "2016-04-12T14:55:48Z",
        "body": "- Hope I have done is correct! This example will help to show \"page not found\" implementation on client side. Refs my comments on https://github.com/reactjs/react-router/issues/458\n- If its correct then I would like to update the doc too for Page not found on client side. It might help in https://github.com/reactjs/react-router/issues/2933 fix \"Document how to make a client-side \"not found\" route (i.e. with <Route path=\"*\" component={NotFound} />)\" under Potential Improvements\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 113,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2016-04-05T11:16:08Z",
        "closed_at": "2016-04-12T16:27:37Z",
        "merged_at": "2016-04-12T16:27:37Z",
        "body": "Simple workflow that uses querystring parameters to determine if a user can look at a page or not. Parameters can come from a form submission, or from an url with those parameters in.\n\nWhile I understand this is definitely not the best way to do any sort of authentication, I was recently working on an [app](http://contentful.github.io/discovery-app-react/) where this was desirable.\n\nI extracted this flow out of that small app where the usage workflow can be something like:\n- new user comes in and uses the form to authenticate\n- user can then share the url with the auth parameters in the querystring if desired\n\nIf this is too much for an example I can try and slim it down to an async onEnter example, as that is my main reasoning for adding this. As far as I can tell there is currently no example which demonstrates that.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-04-05T04:15:28Z",
        "closed_at": "2016-04-05T09:23:26Z",
        "merged_at": "2016-04-05T09:23:26Z",
        "body": "New users assume Link tags are basically equivalent to A tags. It is a rude awakening to discover relative links do not work.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 65,
        "deletions": 37,
        "changed_files": 4,
        "created_at": "2016-04-05T02:58:23Z",
        "closed_at": "2016-04-15T00:22:51Z",
        "merged_at": null,
        "body": "Ref #3172\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 10,
        "changed_files": 1,
        "created_at": "2016-04-03T10:27:18Z",
        "closed_at": "2016-04-03T15:19:38Z",
        "merged_at": "2016-04-03T15:19:38Z",
        "body": "Really tiny update to the testing tutorial - changed `jest.dontMock` to `jest.unmock`, removed the bit about es6 module syntax not being compatible with `jest.dontMock` and added jest to the list of dependencies.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-03-29T17:02:28Z",
        "closed_at": "2016-03-29T18:13:42Z",
        "merged_at": "2016-03-29T18:13:42Z",
        "body": "This was previously present to support installing from source.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 18,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-03-24T15:09:19Z",
        "closed_at": "2016-03-30T15:14:07Z",
        "merged_at": "2016-03-30T15:14:07Z",
        "body": "Since use of [scroll-behavior](https://github.com/taion/scroll-behavior) is so popular, maybe show an example of how to upgrade it in the v2.0.0 upgrade guide.\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 46,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2016-03-24T13:45:20Z",
        "closed_at": "2016-03-24T15:00:25Z",
        "merged_at": "2016-03-24T15:00:25Z",
        "body": "- Add information about included enhancers\n- Improve example to make it clear the factory comes from the history\n  package\n- Document usage of useRouterHistory on histories page, with examples\n  regarding usage with options and other enhancers\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 28,
        "deletions": 17,
        "changed_files": 6,
        "created_at": "2016-03-22T03:05:03Z",
        "closed_at": "2016-04-12T15:42:44Z",
        "merged_at": "2016-04-12T15:42:44Z",
        "body": "Depending on how #3205 shakes out, this provides updated and correct PropTypes.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 22,
        "deletions": 33,
        "changed_files": 2,
        "created_at": "2016-03-21T20:20:04Z",
        "closed_at": "2016-03-22T02:17:07Z",
        "merged_at": "2016-03-22T02:17:07Z",
        "body": "Fixes https://github.com/reactjs/react-router/issues/3215\n",
        "comments": 23
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-03-21T15:43:55Z",
        "closed_at": "2016-03-21T17:27:54Z",
        "merged_at": "2016-03-21T17:27:54Z",
        "body": "For folks that need to use the UMD build, it would be nice if there was a build that included the warnings that folks could use during development.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-03-19T03:00:55Z",
        "closed_at": "2016-03-19T05:39:00Z",
        "merged_at": null,
        "body": null,
        "comments": 1
    },
    {
        "merged": true,
        "additions": 24,
        "deletions": 18,
        "changed_files": 7,
        "created_at": "2016-03-18T20:24:04Z",
        "closed_at": "2016-03-19T23:56:43Z",
        "merged_at": "2016-03-19T23:56:43Z",
        "body": "Replaces #3201\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2016-03-18T12:04:21Z",
        "closed_at": "2016-03-18T20:24:13Z",
        "merged_at": null,
        "body": "`isActive()` is broken because of changes on https://github.com/sindresorhus/query-string/pull/48 \n\n**Reproduction**\nNow, test is faling on newly `npm install` of this repository.\n",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 13,
        "changed_files": 1,
        "created_at": "2016-03-17T21:26:34Z",
        "closed_at": "2016-03-21T15:23:48Z",
        "merged_at": "2016-03-21T15:23:48Z",
        "body": null,
        "comments": 3
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2016-03-15T10:55:23Z",
        "closed_at": "2016-03-18T00:22:09Z",
        "merged_at": "2016-03-18T00:22:09Z",
        "body": "The `<Link>` API has been updated in 2.0 ([see this](https://github.com/reactjs/react-router/blob/master/upgrade-guides/v2.0.0.md#link-to-onenter-and-isactive-use-location-descriptors)).\n\nThe library informs the user via console messages when deprecated attributes are used: ![console](https://cloud.githubusercontent.com/assets/767959/13775417/a8fd2284-eaa4-11e5-8317-0827c0be35b0.jpg)\n\nThis PR updates the API docs for `<Link>` to reflect these changes.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 8716,
        "deletions": 10,
        "changed_files": 52,
        "created_at": "2016-03-11T02:06:28Z",
        "closed_at": "2016-03-18T01:01:23Z",
        "merged_at": null,
        "body": "Ref issue https://github.com/reactjs/react-router/issues/2933, I got this up and running with Jekyll. This is just a start, but hopefully some more people will jump in to help out.\n\nThings that still need to be worked on include:\n- Many of the links need to be redone.\n- Add page for react router tutorial.\n- Jekyll was having some problems parsing some of the stuff on the v2.0.0 Change Log page. So it's blank for now.\n- Design stuff\n",
        "comments": 12
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 9,
        "changed_files": 1,
        "created_at": "2016-03-11T00:16:21Z",
        "closed_at": "2016-03-11T01:42:41Z",
        "merged_at": "2016-03-11T01:42:41Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 141,
        "deletions": 41,
        "changed_files": 5,
        "created_at": "2016-03-07T18:08:24Z",
        "closed_at": "2016-04-01T15:20:13Z",
        "merged_at": "2016-04-01T15:20:13Z",
        "body": "On further thought, the current behavior, despite being tested, is clearly just buggy. This will make life easier and opens the door to having a much simpler algorithm for checking isActive in the indexOnly sense.\n",
        "comments": 21
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-03-07T05:33:04Z",
        "closed_at": "2016-03-07T10:26:18Z",
        "merged_at": "2016-03-07T10:26:18Z",
        "body": null,
        "comments": 1
    },
    {
        "merged": true,
        "additions": 43,
        "deletions": 28,
        "changed_files": 3,
        "created_at": "2016-03-07T05:27:39Z",
        "closed_at": "2016-03-07T10:25:53Z",
        "merged_at": "2016-03-07T10:25:53Z",
        "body": "This includes proper `<IndexRedirect>` documentation.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-03-05T14:31:30Z",
        "closed_at": "2016-03-05T18:03:04Z",
        "merged_at": "2016-03-05T18:03:04Z",
        "body": "I know we show, that in the example above but maybe it's hard to find while searching the repo or docs.\n",
        "comments": 12
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-03-04T22:12:51Z",
        "closed_at": "2016-03-07T05:33:49Z",
        "merged_at": null,
        "body": "I just ran into that issue: https://github.com/reactjs/react-router/issues/3151 because of an API somehow hard to find.\n\nI think it can be great to add that example to make that easier to find.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-02-29T07:06:22Z",
        "closed_at": "2016-02-29T15:25:44Z",
        "merged_at": null,
        "body": "add handleBack method\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2016-02-27T15:14:04Z",
        "closed_at": "2016-02-27T19:40:09Z",
        "merged_at": "2016-02-27T19:40:09Z",
        "body": "",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2016-02-25T06:15:37Z",
        "closed_at": "2016-02-25T19:59:33Z",
        "merged_at": null,
        "body": "Implements suggestion in #3110.\n\nThis should be a minor bump, as it adds more cases where `setRouterLeaveHook` will be called. Namely, on \"hard leaves\" where the user is has the browser navigate to another page or closes the window. \n\nAs @taurose pointed out, this also will stop the BFCache from operating, but [this may be a good thing](https://github.com/reactjs/react-router/issues/837) since it causes some misbehavior anyways.\n",
        "comments": 12
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 13,
        "changed_files": 1,
        "created_at": "2016-02-23T18:34:39Z",
        "closed_at": "2016-02-24T17:50:43Z",
        "merged_at": "2016-02-24T17:50:43Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 131,
        "deletions": 45,
        "changed_files": 4,
        "created_at": "2016-02-21T20:16:12Z",
        "closed_at": "2016-03-21T15:25:15Z",
        "merged_at": "2016-03-21T15:25:15Z",
        "body": "closes #2547\n\nAdds an onChange hook for Routes, which allows routes to respond to non leave/enter changes.\n\nI changed up the signature a bit, which may be more self serving than anything else, but I also think it nicely mirrors the React hooks. In particular onChange is called with `prevState` along with `nextState` and `replace`. Which just makes checking for the particular change you are interested in easier. It also allows for not doing any work in the case of a location not changing in a way that is relevant to the particular route. Let me know tho if I'm off base there. The diff is a bit noiser then it might otherwise be if I left that out\n",
        "comments": 24
    },
    {
        "merged": true,
        "additions": 55,
        "deletions": 16,
        "changed_files": 2,
        "created_at": "2016-02-21T16:40:00Z",
        "closed_at": "2016-02-22T13:47:42Z",
        "merged_at": "2016-02-22T13:47:42Z",
        "body": "~~Needs test cases.~~\n\nFixes #3106\n\nThere will be some edge cases (e.g. if the parent applies a key when rendering the child route) that this will mess up, but it's the best we can do for now.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 222,
        "deletions": 332,
        "changed_files": 10,
        "created_at": "2016-02-21T00:02:25Z",
        "closed_at": "2016-03-13T23:28:11Z",
        "merged_at": null,
        "body": "This demonstrates ripping out all of our path matching logic and just using the logic from Express.\n\nThis would be a breaking change due to the change to syntax for optional parameters, along with handling for unnamed parameters (e.g. splats).\n\nThis would allow using custom regexes (and potentially path arrays for multiple-choice matching) for path parameters, but I haven't added tests demonstrating that yet.\n\nFor more details, for how this would work, see:\n- http://expressjs.com/en/guide/routing.html\n- https://github.com/pillarjs/path-to-regexp#readme\n",
        "comments": 46
    },
    {
        "merged": false,
        "additions": 323,
        "deletions": 72,
        "changed_files": 4,
        "created_at": "2016-02-19T01:27:46Z",
        "closed_at": "2016-08-02T16:30:57Z",
        "merged_at": null,
        "body": "This is sort of a WIP of what could be extremely useful for routing.  IMO, there should be a few other methods of doing what I have here, such as a a \"requirements\" field to do simple regex without the need of creating a function as well as a \"defaults\" to set param defaults.\n\nI've ran into the need to have more of an ability to match multiple routes and do some sort of check.  I've resorted to insane hacks to get around it.\n\nThis PR shows just the \"condition\" method being used.\n\n``` javascript\nfunction isValidCategory(match, callback) {\n  callback(null, ['baking', 'bbq'].indexOf(match.params.category) > -1)\n}\n\nconst routes = (\n  <Route path=\"/\" component={App}>\n    <IndexRoute component={Home} />\n    <Route path=\":category(/:page)\" component={Category} condition={isValidCategory} />\n    <Route path=\":slug\" component={Page} />\n  </Route>\n);\n```\n\nI haven't dug too much into the code, I just wanted to see how hard it would be to add this functionality, and it turns out that the way I did it didn't take more than 10 minutes to do.\n",
        "comments": 39
    },
    {
        "merged": false,
        "additions": 26,
        "deletions": 17,
        "changed_files": 2,
        "created_at": "2016-02-17T03:02:53Z",
        "closed_at": "2016-02-18T02:32:57Z",
        "merged_at": null,
        "body": "Ran into this with react-router-redux: reactjs/react-router-redux#284\n\nIf users don't provide a history they create themselves, the history created by `match` doesn't have the same entries as the location provided. This can lead to all sorts of funky behavior.\n\nWe'll probably also want to drop [the default location](https://github.com/reactjs/history/blob/86881335c9c544341030321331d17480849b47a9/modules/createMemoryHistory.js#L36) provided by `createMemoryHistory` and throw if an initial location isn't provided.\n",
        "comments": 25
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 7,
        "changed_files": 4,
        "created_at": "2016-02-11T03:47:15Z",
        "closed_at": "2016-02-11T05:32:27Z",
        "merged_at": "2016-02-11T05:32:27Z",
        "body": "The folder `basics` doesn't exist anywhere\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 12,
        "deletions": 12,
        "changed_files": 1,
        "created_at": "2016-02-10T08:36:41Z",
        "closed_at": "2016-02-10T11:05:48Z",
        "merged_at": null,
        "body": "In the Table of Contents, if you clicked on any links under  _Basics_ or _Advanced_ it currently throws a 404 because of incorrect relative paths.\n\nFixed the relative paths. \n\nP.S. This is my first open source contribution! :smile: \n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-02-02T20:56:18Z",
        "closed_at": "2016-02-10T19:36:15Z",
        "merged_at": null,
        "body": "added note about accessing the current path within the onUpdate function.\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-02-02T00:09:09Z",
        "closed_at": "2016-02-02T01:35:21Z",
        "merged_at": "2016-02-02T01:35:21Z",
        "body": "This should import from the base module.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-02-01T23:39:18Z",
        "closed_at": "2016-02-02T01:36:05Z",
        "merged_at": "2016-02-02T01:36:05Z",
        "body": null,
        "comments": 1
    },
    {
        "merged": false,
        "additions": 133,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2016-01-27T23:48:02Z",
        "closed_at": "2016-04-21T05:33:22Z",
        "merged_at": null,
        "body": "Fixes #1923. I wanted to take a stab at this. Is this the right direction?\n\nI built on #2351 and the suggested path by @taion. Happy to change anything based on feedback. Will add tests and other items after getting some feedback.\n\n**TODO**\n- [x] Add tests\n- [ ] Add splat test case\n- [ ] Add nested route test case (false warning currently)\n- [ ] ~~Verify it works for greedy routes~~\n- [ ] ~~Verify it works for redirects~~\n- [ ] ~~Figure out how to avoid polluting the history (when app starts each `CreateLocation()` call seems to add a history entry. Can I keep the history separate or wipe it out?~~\n\nCurrently, these routes:\n\n``` js\n<Router history={browserHistory}>\n    <Route path=\"/\" component={App}>\n      <IndexRoute component={Index}/>\n      <Route path=\"users\" component={Users}>\n        <IndexRoute component={UsersIndex}/>\n        <Route path=\":id\" component={User}/>\n      </Route>\n      <Route path=\"/:id/:ob\" component={Agressive}/>\n      <Route path=\"/about/:id\" component={About}/>\n      <Route path=\"/about\" component={About}/>\n      <Route path=\"/about/testing\" component={Unreachable}/>\n    </Route>\n  </Router>\n```\n\nwill result in:\n![screen shot 2016-01-27 at 3 22 49 pm](https://cloud.githubusercontent.com/assets/606014/12632446/d280328a-c50c-11e5-907c-417cfa77c488.png)\n",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 87,
        "deletions": 44,
        "changed_files": 5,
        "created_at": "2016-01-24T04:04:40Z",
        "closed_at": "2016-01-24T16:35:58Z",
        "merged_at": null,
        "body": "Continuation of #2965\n## \n#2883 was actually busted and had a test that didn't cover what it was supposed to.\n\nIn an ideal world we'd just use the same history and transitionManager for match() and <Router> on the client side, but the deprecation wrapping API messes with that too much, so this might be the best we can do for now.\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 95,
        "deletions": 46,
        "changed_files": 5,
        "created_at": "2016-01-23T19:52:18Z",
        "closed_at": "2016-01-27T18:45:32Z",
        "merged_at": "2016-01-27T18:45:32Z",
        "body": "Fixes https://github.com/rackt/react-router/issues/2935\n\nhttps://github.com/rackt/react-router/pull/2883 was actually busted and had a test that didn't cover what it was supposed to.\n\n~~In an ideal world we'd just use the same `history` and `transitionManager` for `match()` and `<Router>` on the client side, but the deprecation wrapping API messes with that too much, so this might be the best we can do for now.~~\n",
        "comments": 11
    },
    {
        "merged": true,
        "additions": 42,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-01-19T09:36:05Z",
        "closed_at": "2016-02-03T20:15:42Z",
        "merged_at": "2016-02-03T20:15:42Z",
        "body": "When using `basename` and hitting a redirect, the `basename` gets swallowed. I'm not sure if this is the correct place for the failing test, but it illustrates the issue.\n\nAfter hitting `/redirect-to-inbox`, the basenames array should contain `[ '/foo', '/foo', '/foo' ]`. The last element however is empty: `[ '/foo', '/foo', '' ]`. This results in a wrong path: instead of `/foo/inbox` we get `/inbox`.\n\nI've no idea how to fix this, but I hope the failing test helps!\n",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 58,
        "deletions": 13,
        "changed_files": 2,
        "created_at": "2016-01-18T04:57:32Z",
        "closed_at": "2016-01-18T19:53:32Z",
        "merged_at": "2016-01-18T19:53:32Z",
        "body": "For #2922\n",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 48,
        "deletions": 15,
        "changed_files": 2,
        "created_at": "2016-01-18T02:02:45Z",
        "closed_at": "2016-01-18T06:02:33Z",
        "merged_at": "2016-01-18T06:02:33Z",
        "body": "Fixes #2920\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 29,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2016-01-16T18:37:05Z",
        "closed_at": "2016-01-16T21:40:13Z",
        "merged_at": "2016-01-16T21:40:13Z",
        "body": null,
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 6,
        "changed_files": 3,
        "created_at": "2016-01-15T22:04:49Z",
        "closed_at": "2016-02-03T19:47:48Z",
        "merged_at": "2016-02-03T19:47:48Z",
        "body": "Fixes https://github.com/rackt/react-router/issues/2859\n\nThe tests won't pass until https://github.com/rackt/history/pull/200 is merged and released.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2016-01-14T21:21:11Z",
        "closed_at": "2016-01-14T23:14:42Z",
        "merged_at": "2016-01-14T23:14:42Z",
        "body": null,
        "comments": 5
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 18,
        "changed_files": 6,
        "created_at": "2016-01-14T20:18:16Z",
        "closed_at": "2016-01-14T21:18:50Z",
        "merged_at": null,
        "body": "Closes https://github.com/rackt/react-router/issues/2853\n\nWell... mostly. Via `createRouterHistory` and `match`, we always end up pulling in `useQueries` and `useBasename`, which is not entirely ideal. That's for https://github.com/rackt/react-router/issues/2814, though.\n\nThis also drops the top-level default export of `Router`, which was undocumented and inconsistent and shouldn't really be used.\n",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-01-14T06:15:24Z",
        "closed_at": "2016-01-14T14:41:20Z",
        "merged_at": "2016-01-14T14:41:20Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 74,
        "deletions": 15,
        "changed_files": 3,
        "created_at": "2016-01-11T05:59:09Z",
        "closed_at": "2016-01-13T00:28:55Z",
        "merged_at": "2016-01-13T00:28:55Z",
        "body": "Closes #2714\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 24,
        "deletions": 7,
        "changed_files": 2,
        "created_at": "2016-01-09T21:25:49Z",
        "closed_at": "2016-01-13T00:17:36Z",
        "merged_at": "2016-01-13T00:17:36Z",
        "body": null,
        "comments": 6
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-01-09T11:04:07Z",
        "closed_at": "2016-01-09T13:39:42Z",
        "merged_at": null,
        "body": "In the original version this would always return a string (true) when the this.state.isSaved was false, giving the user no choice but to save the content if he wanted to leave. This way it will display a confirmation dialog and let the user decide if he wants to drop the work or not. Just for example sake :)\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 25,
        "deletions": 16,
        "changed_files": 2,
        "created_at": "2016-01-07T20:30:35Z",
        "closed_at": "2016-01-07T23:03:32Z",
        "merged_at": "2016-01-07T23:03:32Z",
        "body": "Firefox and Chrome were really old and auto-update now.\n\nAlso, iOS 9 and 8 distribution is high, so they should be tested too. Also bumped up Safari and used Windows 10 where possible.\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 107,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-01-07T12:33:26Z",
        "closed_at": "2016-01-11T05:59:25Z",
        "merged_at": null,
        "body": "Added test cases that compare rendering on the client and server (one of which fails intentionally). Hopefully these address the root cause but feel free to weigh in if they're not quite right.\n\nSee #2714\n",
        "comments": 11
    },
    {
        "merged": true,
        "additions": 69,
        "deletions": 39,
        "changed_files": 9,
        "created_at": "2016-01-06T19:43:05Z",
        "closed_at": "2016-01-07T20:10:20Z",
        "merged_at": "2016-01-07T20:10:20Z",
        "body": "Fixes #2828\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2016-01-04T18:23:05Z",
        "closed_at": "2016-01-04T20:27:07Z",
        "merged_at": "2016-01-04T20:27:07Z",
        "body": "Small update to the V2 upgrade guid.  In V2, custom query parsing needs to be done via custom histories:  https://github.com/rackt/react-router/blob/master/upgrade-guides/v2.0.0.md#using-custom-histories\n\nFixes #2842\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-01-03T10:45:25Z",
        "closed_at": "2016-01-03T13:58:36Z",
        "merged_at": "2016-01-03T13:58:36Z",
        "body": "The generated ID is `contextrouter`: https://github.com/rackt/react-router/blob/master/docs/API.md#contextrouter\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2016-01-01T01:02:55Z",
        "closed_at": "2016-01-01T17:08:09Z",
        "merged_at": "2016-01-01T17:08:09Z",
        "body": "",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-12-30T23:41:42Z",
        "closed_at": "2015-12-31T00:48:05Z",
        "merged_at": "2015-12-31T00:48:04Z",
        "body": "[`createMemoryHistory` is documented](https://github.com/rackt/react-router/blob/54ec6a81d759bb78b17687d6b0689b0fc6e49873/docs/guides/basics/Histories.md#creatememoryhistory) as being importable from the React Router package but isn't being exported in 2.0.0-rc3\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-12-28T23:59:38Z",
        "closed_at": "2016-01-01T00:38:46Z",
        "merged_at": "2016-01-01T00:38:46Z",
        "body": "",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 46,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2015-12-25T12:15:25Z",
        "closed_at": "2015-12-26T19:12:51Z",
        "merged_at": null,
        "body": "It is a common need when building accessible interfaces that a different link title should be set depending on the context.\n\nFor example, given this set of links in a main menu:\n\n``` html\n<a href=\"/\" title=\"Home\">Home</a>\n<a href=\"/about\" title=\"About\">About</a>\n```\n\nWhen the current page is `/about`, then the titles could change to:\n\n``` html\n<a href=\"/\" title=\"Home\">Home</a>\n<a href=\"/about\" title=\"About (current page)\">About</a>\n```\n\nThat way, someone using a screen reader can know which page is currently displayed.\n\nThis pull request adds a way to set a custom title on Link components when their routes are active.\n",
        "comments": 15
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 10,
        "changed_files": 1,
        "created_at": "2015-12-21T18:49:52Z",
        "closed_at": "2015-12-21T21:25:15Z",
        "merged_at": "2015-12-21T21:25:15Z",
        "body": "No longer needed with any reasonably recent npm.\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-12-21T07:33:54Z",
        "closed_at": "2015-12-21T15:50:03Z",
        "merged_at": "2015-12-21T15:50:03Z",
        "body": "fix an error\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-12-20T21:43:59Z",
        "closed_at": "2015-12-20T23:06:02Z",
        "merged_at": "2015-12-20T23:06:02Z",
        "body": "It doesn't link to anything,\n`Cannot GET /shared-root`\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 96,
        "deletions": 39,
        "changed_files": 2,
        "created_at": "2015-12-20T19:22:44Z",
        "closed_at": "2015-12-20T23:36:42Z",
        "merged_at": "2015-12-20T23:36:42Z",
        "body": null,
        "comments": 5
    },
    {
        "merged": true,
        "additions": 2255,
        "deletions": 866,
        "changed_files": 75,
        "created_at": "2015-12-19T00:14:05Z",
        "closed_at": "2015-12-20T08:38:48Z",
        "merged_at": "2015-12-20T08:38:48Z",
        "body": "This is the first step in a very iterative move to the new API. I want each commit to have green tests, and each commit will attempt to do something somewhat small.\n\nYou can see in `Router.js` and `match.js` instead of setting up just a history, we now have two objects, a history and a transition manager.\n\n`history` does everything it used to do up until `useRoutes`.\n\n`transitionManager` does what `useRoutes` did (its the same code, naturally) except it doesn't wrap the history, it just uses it. Its name is not quite right. It is stateful and handles three things:\n1. stores and calls leave hooks\n2. owns `isActive`\n3. matches routes to locations\n\nPerhaps there's a better name that describes owning those three responsibilities, or perhaps we'll see where those responsibilities should move to, but this satisfies the new API and successfully removes some responsibility from the history object. I don't think the slight misnomer should hold up a release, but I'm happy to get some simple commits in that clean up the responsibility even further than this already does.\n\nRegarding the duplicate tests\n1. We need to test the old and new API, therefore just copy existing tests\n2. When we remove deprecated API, we can just delete the file, much easier than journeying through our tests for those that exercise the old API\n\nNext steps:\n- [x] add the singleton dom histories\n- [ ] update examples\n- [ ] identify other tests that need duplication for the new API\n- [x] clean up warnings caused by internal modules using the old API (like `Link`)\n- [ ] audit and ensure test coverage that exercises the old API after `Link` and friends are updated.\n- [ ] maybe move `isActive` into `RouterContext` so middleware componnets can \"pause the world\" (`isActive` will check against the props passed to it, rather than the internal state of `transitionManager`)\n- [ ] :shipit:\n",
        "comments": 15
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2015-12-16T12:04:29Z",
        "closed_at": "2015-12-16T14:50:27Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-12-12T20:26:10Z",
        "closed_at": "2015-12-13T02:08:27Z",
        "merged_at": null,
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 4,
        "changed_files": 4,
        "created_at": "2015-12-10T23:16:18Z",
        "closed_at": "2015-12-17T14:49:59Z",
        "merged_at": "2015-12-17T14:49:59Z",
        "body": "This should be published as `1.0.3`. Should fix both the warnings from `history` (removed in `1.16.0`) and any errors about unmet peerDependencies.\n\nAlso, note this is on the `1.0.x` branch.\n",
        "comments": 23
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 13,
        "changed_files": 4,
        "created_at": "2015-12-09T00:18:36Z",
        "closed_at": "2015-12-09T11:44:44Z",
        "merged_at": "2015-12-09T11:44:44Z",
        "body": null,
        "comments": 2
    },
    {
        "merged": false,
        "additions": 92,
        "deletions": 31,
        "changed_files": 8,
        "created_at": "2015-12-08T22:41:25Z",
        "closed_at": "2015-12-09T00:17:49Z",
        "merged_at": null,
        "body": null,
        "comments": 18
    },
    {
        "merged": false,
        "additions": 52,
        "deletions": 22,
        "changed_files": 5,
        "created_at": "2015-12-08T15:20:57Z",
        "closed_at": "2015-12-08T19:42:30Z",
        "merged_at": null,
        "body": "I updated the docs here, but not `CHANGES` because we need to comprehensively update them ahead of an interim release.\n- API docs on this were out of date.\n- It's almost never useful to try to call `createLocation` yourself to make a location object; it's almost always less buggy and easier to just pass in the `path`.\n- This is forward-compatible with e.g. updating the `history.createLocation` API to take a location descriptor (rather than a list of args). (but I don't think there's a good reason to encourage users to pass in a location descriptor here)\n",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 195,
        "deletions": 530,
        "changed_files": 15,
        "created_at": "2015-12-08T15:00:04Z",
        "closed_at": "2015-12-08T17:56:51Z",
        "merged_at": null,
        "body": "This reverts commit d2af254522cba7f36c9980852801e66a98fe3e70.\n",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-12-08T08:35:30Z",
        "closed_at": "2015-12-08T20:34:09Z",
        "merged_at": "2015-12-08T20:34:09Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-12-08T06:51:06Z",
        "closed_at": "2015-12-08T13:06:58Z",
        "merged_at": "2015-12-08T13:06:58Z",
        "body": "This example confused one of my students as it shows a `Router` without the required children/routes. I added routes to make it valid, without making the actual point of the example less obvious (I hope).\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-12-07T22:52:24Z",
        "closed_at": "2015-12-08T20:33:28Z",
        "merged_at": "2015-12-08T20:33:28Z",
        "body": "During the rename to RouterContext, the server_Rendering-test.js was only partially updated. It should be importing RouterContext not RoutingContext.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2015-12-06T20:13:16Z",
        "closed_at": "2015-12-07T17:13:31Z",
        "merged_at": "2015-12-07T17:13:31Z",
        "body": "query-string serializes arrays differently from qs\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 105,
        "deletions": 11,
        "changed_files": 2,
        "created_at": "2015-12-06T20:03:52Z",
        "closed_at": "2015-12-07T19:01:08Z",
        "merged_at": "2015-12-07T19:01:08Z",
        "body": "Re-made from https://github.com/rackt/react-router/pull/2658.\n\nTests will fail until https://github.com/rackt/history/pull/173 is merged and released.\nCodemod: https://github.com/rackt/rackt-codemod/pull/5.\n\nI'm still using `context.history` here - we could potentially merge this and release it before the API changes to get rid of the deprecation warnings for users, per https://github.com/rackt/history/issues/172#issuecomment-162336396.\n\nI'm going to be extremely busy over the next week and a half or so, and someone else might have to shepherd this to release (docs, changelog, &c.), which is why this branch is on the main repo instead of my personal fork.\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 64,
        "deletions": 12,
        "changed_files": 2,
        "created_at": "2015-12-06T17:56:20Z",
        "closed_at": "2015-12-08T21:52:42Z",
        "merged_at": "2015-12-08T21:52:42Z",
        "body": "Also rewrite how `router` is formed to keep it concise.\n",
        "comments": 19
    },
    {
        "merged": true,
        "additions": 369,
        "deletions": 9,
        "changed_files": 9,
        "created_at": "2015-12-05T20:20:08Z",
        "closed_at": "2015-12-06T11:37:51Z",
        "merged_at": "2015-12-06T11:37:51Z",
        "body": "Peep the commit message.\n- I could use some help updating all the stuff in `/docs`. Don't worry about CHANGES.md. The changes coming down the pipe after this will require a more cohesive explanation of how to update your code than we can do with each individual commit that changes API.\n- could use help updating all of OUR code to the new API (particularly in `Link` and in our tests), but that should maybe be a separate pull request just to \"prove\" that the old API still works (afaict it does, tests pass anyway!).\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 19,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-12-04T10:11:21Z",
        "closed_at": "2015-12-04T13:48:30Z",
        "merged_at": null,
        "body": "Clarify how to opt out of persistent state in the hash based routing solution.  \n\nSince the hash based routing solution is the default (and so works without explicit imports) I thought it might be worth highlighting what exactly should be imported in order to do this. \n\nWhen implementing this myself I needed to do a little digging and wanted to save others the effort.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-12-03T16:30:52Z",
        "closed_at": "2015-12-03T17:55:45Z",
        "merged_at": "2015-12-03T17:55:45Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-12-02T10:49:00Z",
        "closed_at": "2015-12-02T21:13:02Z",
        "merged_at": null,
        "body": "Added extra docs in API.md, leaving ServerRendering.md as is.\nFixes #2622 \nSEE https://github.com/rackt/react-router/pull/2629\n",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-12-02T00:23:48Z",
        "closed_at": "2015-12-02T10:55:47Z",
        "merged_at": null,
        "body": "Fixes #2622\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 32,
        "deletions": 14,
        "changed_files": 1,
        "created_at": "2015-12-01T15:41:28Z",
        "closed_at": "2015-12-02T11:23:37Z",
        "merged_at": "2015-12-02T11:23:37Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-12-01T13:15:58Z",
        "closed_at": "2015-12-01T15:41:43Z",
        "merged_at": null,
        "body": "This issue has been pointed out in #2572 but the documentation remained unclear because there is still no mention that the callback should be resolved with an object of the form:\n\n``` js\n{\n  component: MyComponentClass\n}\n```\n\nI think it makes sense to be explicit about the expected object instead of just saying just `myIndexRoute`(as it currently stands in the docs). I spent >30minutes trying to figure out why my IndexRoute was not being mounted correctly :8ball: \n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-11-30T01:00:55Z",
        "closed_at": "2015-11-30T17:28:24Z",
        "merged_at": null,
        "body": "",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-11-25T23:04:39Z",
        "closed_at": "2015-11-26T00:57:02Z",
        "merged_at": null,
        "body": "Since the child routes are populated in `this.props.children`, if you want to progagate properties to the children, you have to call `React.cloneElement` on _each_ child, which you can do using `React.Children.map`.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-11-20T20:04:11Z",
        "closed_at": "2015-11-26T04:16:33Z",
        "merged_at": "2015-11-26T04:16:33Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2015-11-20T19:59:47Z",
        "closed_at": "2015-12-02T14:35:56Z",
        "merged_at": null,
        "body": "Closes https://github.com/rackt/react-router/issues/2502\n\nThis opens up subsequent possibilities for accepting histories on `<Router>` that have already been enhanced with `useRoutes` or an equivalent, which will expose further customization options for users.\n\nThat will be for another PR, though.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 38,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2015-11-18T22:11:48Z",
        "closed_at": "2015-11-26T04:16:56Z",
        "merged_at": null,
        "body": "This allows me to have Higher Order Routes.\nIn my case I want to protect all child routes by intercepting onEnter of each route and redirect if user has no permission for this route.\n\n``` jsx\n<InterceptRoutes onEnter={secureRoute}>\n  <Route path=\"/\" component={App} access=\"ROLE_USER\">\n    <Route path=\"dashboard\" component={Dashboard} />\n  </Route>\n  <Route path=\"/login\" component={Login} />\n  <Route path=\"/logout\" component={Logout} />\n</InterceptRoutes>\n```\n",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2015-11-17T06:57:11Z",
        "closed_at": "2015-11-17T18:11:37Z",
        "merged_at": null,
        "body": "We need replaceState rather than pushState sometimes\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 58,
        "deletions": 23,
        "changed_files": 2,
        "created_at": "2015-11-13T13:44:15Z",
        "closed_at": "2015-11-18T21:41:57Z",
        "merged_at": "2015-11-18T21:41:57Z",
        "body": "@ryanflorence You might be hitting something like this with your AsyncProps work.\n\nThe issue is that when wrapping a named component with `createElement`, I don't know _which_ named component I'm wrapping, so if the different named components on a route have different data requirements, I may not be able to connect them to what's on the data context.\n\nUsing `key` seems like the most minimal way to get things to work.\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2015-11-13T13:35:10Z",
        "closed_at": "2015-11-20T16:02:39Z",
        "merged_at": "2015-11-20T16:02:39Z",
        "body": "Closes https://github.com/rackt/react-router/issues/2538\n\nJust the SSR test for now - we can add more later if we want, but this is the one we really care about.\n\nNot generating coverage for this right now, since we're not merging coverage data across platforms.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 175,
        "deletions": 165,
        "changed_files": 10,
        "created_at": "2015-11-12T21:37:35Z",
        "closed_at": "2015-11-17T18:11:05Z",
        "merged_at": "2015-11-17T18:11:05Z",
        "body": "By removing usages of [class-properties](https://babeljs.io/docs/plugins/transform-class-properties/) which are still experimental, ie8 is fully supported. We also protect against it happening in the future with a blacklist of that feature in babel. \n",
        "comments": 22
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2015-11-12T18:10:20Z",
        "closed_at": "2015-11-13T04:57:35Z",
        "merged_at": "2015-11-13T04:57:35Z",
        "body": "This is the rest of #2517, &c. Largely no-op but we should merge to clean/freshen these.\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 21,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2015-11-12T18:07:27Z",
        "closed_at": "2015-11-13T22:52:30Z",
        "merged_at": "2015-11-13T22:52:30Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 43,
        "deletions": 2,
        "changed_files": 4,
        "created_at": "2015-11-12T17:41:13Z",
        "closed_at": "2015-11-12T20:56:41Z",
        "merged_at": null,
        "body": "Our app has slightly different urls than most, but they are still valid to all browsers. We use parentheses to surround our entity ids. ex: #/Order(1).\n\nFirst time pull request ever, let me know what I can do/fix.\n\nHere's the gist of what I would like written in one of the tests:\n\n```\ndescribe('and a param is parentheses escaped with additional param', function () {\n    const pattern = '/comments\\\\(:id\\\\)/:mode'\n\n    it('returns the correct path when param is supplied', function () {\n        expect(formatPattern(pattern, { id:'123', mode: 'edit' })).toEqual('/comments(123)/edit')\n    })\n})\n```\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-11-12T16:40:01Z",
        "closed_at": "2015-11-13T17:25:52Z",
        "merged_at": "2015-11-13T17:25:52Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 4,
        "changed_files": 4,
        "created_at": "2015-11-12T16:27:34Z",
        "closed_at": "2015-11-20T17:16:10Z",
        "merged_at": "2015-11-20T17:16:10Z",
        "body": "Closes https://github.com/rackt/react-router/issues/2524. Replaces #2523.\n\n~~Don't merge this, it's just a strawman to show what we'd have to change.~~\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2015-11-12T15:43:01Z",
        "closed_at": "2015-11-12T20:11:53Z",
        "merged_at": "2015-11-12T20:11:53Z",
        "body": "Now that we have a v1.0.0, the docs page should probably point there for now as a stopgap.\n\nThe goal is to limit the risk of confusing users by showing them documentation for features on master that aren't yet in the stable release.\n",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-11-12T13:00:20Z",
        "closed_at": "2015-11-12T15:02:27Z",
        "merged_at": "2015-11-12T15:02:27Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 77,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2015-11-11T04:31:50Z",
        "closed_at": "2015-11-11T17:00:15Z",
        "merged_at": null,
        "body": "This adds a connectHistory higher-order component that makes the history object accessible via props to a wrapped component.\n\nI took my best guess and named the passed-in prop `history`. A warning is logged if it ends up overwriting an existing prop.\n## connectHistory\n### Proposed API:\n\n``` javascript\nimport { connectHistory } from 'react-router'\n\nclass MyComponent extends React.Component {\n  handleClick () {\n    this.props.history.pushState(null, '/some/path')\n  }\n  render () {\n    return <h1 onClick={() => this.handleClick()}>Click Me!</h1>\n  }\n}\n\nexport default connectHistory(MyComponent)\n```\n\nI've done my best to follow the repo's practices and guidelines. Let me know if you need adjustments. If this looks good I'm happy to modify the documentation and/or CHANGES.md.\n",
        "comments": 18
    },
    {
        "merged": false,
        "additions": 133,
        "deletions": 104,
        "changed_files": 4,
        "created_at": "2015-11-10T22:27:34Z",
        "closed_at": "2015-11-12T18:07:45Z",
        "merged_at": null,
        "body": "Per https://github.com/rackt/react-router/pull/2492#issuecomment-155583252, separate from the question of ES5 v ES6, this had some actual config updates like not adding coverage instrumentation to standard testing runs that I think we want for now.\n",
        "comments": 14
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-11-10T04:03:17Z",
        "closed_at": "2015-11-10T12:37:36Z",
        "merged_at": "2015-11-10T12:37:36Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 36,
        "deletions": 7,
        "changed_files": 4,
        "created_at": "2015-11-10T03:08:24Z",
        "closed_at": "2015-11-11T18:21:29Z",
        "merged_at": "2015-11-11T18:21:29Z",
        "body": "I'd really love for the route state to be passed into the `onUpdate` callback `<Router />` prop. In particular, I'm working on some ReactRouter based integration for another project and found maintaining the scope of `onUpdate` in the callback to be troublesome.\n\nThis is a follow up to https://github.com/rackt/react-router/issues/1539. Things got a little quiet there so I thought I'd just send a PR to get the conversation going again.\n\nReally, I suppose it's more a shame that state isn't provided to the callback inside of `ReactComponent::setState`. But here we are :smile:.\n\nAlso: awesome work on the 1.0 API. This is really top notch.\n",
        "comments": 20
    },
    {
        "merged": true,
        "additions": 17,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2015-11-07T17:13:10Z",
        "closed_at": "2015-11-07T23:36:35Z",
        "merged_at": "2015-11-07T23:36:35Z",
        "body": "- Build status usually goes before npm version (see e.g. https://github.com/facebook/react)\n- There is virtually no activity on IRC and it feels wrong to direct people there\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2015-11-07T16:22:00Z",
        "closed_at": "2015-11-07T23:36:55Z",
        "merged_at": "2015-11-07T23:36:55Z",
        "body": "Okay fine I also threw in an unrelated copy-editing change a few lines up. Sorry!\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 170,
        "deletions": 142,
        "changed_files": 6,
        "created_at": "2015-11-07T14:32:32Z",
        "closed_at": "2015-11-07T15:36:40Z",
        "merged_at": "2015-11-07T15:36:40Z",
        "body": "Just cleaning up the config scripts a bit.\n",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2015-11-05T14:05:32Z",
        "closed_at": "2015-11-05T20:08:11Z",
        "merged_at": "2015-11-05T20:08:11Z",
        "body": "We currently have a bunch of random stuff like `coverage/` and `.travis.yml` in our distributed tarball. IMO it's easier to keep track of things when whitelisting rather than blacklisting from `package.json`, and easier to tell what we're doing.\n\nThis does drop `modules/` from the tarball, though - I do feel that it's pretty standard to exclude the pre-transpiled ES6 sources from most builds (React does this, for example), but - Chesterton's fence and all.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 14,
        "changed_files": 1,
        "created_at": "2015-11-04T20:57:18Z",
        "closed_at": "2015-11-05T14:24:06Z",
        "merged_at": null,
        "body": "When using named/multiple components in a route definition, they are now available as this.props[name] not this.props.children[name]. This PR updates the docs to match the [example](https://github.com/rackt/react-router/blob/master/examples/sidebar/app.js) and the [test coverage](https://github.com/rackt/react-router/blob/master/modules/__tests__/Router-test.js#L108). This also drops the duplicate named component paragraph, which is superfluous.\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 60,
        "changed_files": 1,
        "created_at": "2015-11-04T18:01:04Z",
        "closed_at": "2015-11-05T02:17:44Z",
        "merged_at": "2015-11-05T02:17:44Z",
        "body": "I think this was a leftover. Nothing calls into this from anywhere as far as I can tell. It doesn't even show up in coverage because it's never used.\n\nI mean, also, anybody importing from `react-router/lib/DOMUtils`... I don't know.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 77,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2015-11-04T16:58:09Z",
        "closed_at": "2015-11-05T02:29:04Z",
        "merged_at": null,
        "body": "Don't merge this as-is (obviously, since there are no tests or documentation and it's probably not even in the right project).\n\nThis is a PoC for #2469 demonstrating a reasonable way to add scroll behavior management without introducing any new concepts.\n\nI was planning on adding another implementation that used an abstract route, but this just seems overall better.\n\nThis should really live in rackt/history instead of here, but the relevant (no longer used) DOMUtils functions were in this repo, so it seemed clearer to add it here.\n",
        "comments": 29
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2015-11-04T02:14:45Z",
        "closed_at": "2015-11-04T08:43:55Z",
        "merged_at": "2015-11-04T08:43:55Z",
        "body": "Closes #2463\n\nThis at least updates the v0.13.x branch and fixes the changelog present there. Can't do anything about the v0.13.5 tag that's already set.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 141,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2015-11-04T01:38:18Z",
        "closed_at": "2015-11-04T09:44:36Z",
        "merged_at": "2015-11-04T09:44:36Z",
        "body": "wtb 100% coverage\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2015-11-02T19:44:33Z",
        "closed_at": "2015-11-02T23:11:54Z",
        "merged_at": "2015-11-02T23:11:54Z",
        "body": "50434 -> 49406 bytes on minified bundle\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 590,
        "deletions": 41,
        "changed_files": 14,
        "created_at": "2015-11-01T16:22:07Z",
        "closed_at": "2015-11-05T19:48:39Z",
        "merged_at": null,
        "body": "Closes #2286 \n\nAnother pull request for custom matching parameter rules, this time with the specifics proposed by @th0r\n\nThis time was easier, and I like the final result more. I still need to add the documentation and the rule inheritance feature, but let men know what you think for now\n",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 18,
        "changed_files": 1,
        "created_at": "2015-11-01T03:21:07Z",
        "closed_at": "2015-11-01T15:50:53Z",
        "merged_at": "2015-11-01T15:50:52Z",
        "body": "Fixes https://github.com/rackt/react-router/issues/2438\n\nUnless I'm missing some reason that we need to keep this around. This is out last chance to delete it before semver means we can't do so without cutting a 2.x.\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 225,
        "deletions": 27,
        "changed_files": 6,
        "created_at": "2015-10-31T15:14:40Z",
        "closed_at": "2015-11-03T06:02:31Z",
        "merged_at": "2015-11-03T06:02:31Z",
        "body": "This fixes the behavior referenced https://github.com/rackt/react-router/pull/2421#issuecomment-152698992, per https://github.com/rackt/react-router/pull/2425#issuecomment-152625621.\n\nI add the check in `matchRoutes` to ensure that index routes actually don't have paths set (since you might not hit the prop type check if you're using plain route objects).\n\nI've also added a couple of extra test cases to cover more routing and matching.\n\n@mjackson Can you take a look when you have a chance? If we don't want to ignore extraneous slashes between path elements (analogous to what we do at the end of a path), then the previous implementation of \"active on index\" is probably better.\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 18,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-10-31T09:29:17Z",
        "closed_at": "2015-10-31T10:43:02Z",
        "merged_at": "2015-10-31T10:43:02Z",
        "body": "I've been bitten by this before and subsequently seen it as a source of questions on Stack Overflow and Reactiflux.\n\nIt's especially tricksy because `Router` is commonly used when importing 0.13.x.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 88,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2015-10-30T21:37:53Z",
        "closed_at": "2015-10-31T10:44:16Z",
        "merged_at": "2015-10-31T10:44:16Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 47,
        "deletions": 10,
        "changed_files": 2,
        "created_at": "2015-10-30T19:19:22Z",
        "closed_at": "2015-10-30T21:07:22Z",
        "merged_at": "2015-10-30T21:07:22Z",
        "body": "Fixes #2072\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 107,
        "deletions": 47,
        "changed_files": 3,
        "created_at": "2015-10-30T17:16:56Z",
        "closed_at": "2015-10-30T21:08:12Z",
        "merged_at": "2015-10-30T21:08:12Z",
        "body": "Fixes https://github.com/rackt/react-router/issues/2355\n\nThis is mostly straightforward, except for adding some special-casing to check that we only match at path boundaries.\n",
        "comments": 11
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-10-30T07:08:45Z",
        "closed_at": "2015-10-30T12:22:58Z",
        "merged_at": "2015-10-30T12:22:58Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2015-10-29T00:53:11Z",
        "closed_at": "2015-10-29T03:57:04Z",
        "merged_at": "2015-10-29T03:57:04Z",
        "body": "Use code blocks in tables for Lifecycle Hooks\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 335,
        "deletions": 28,
        "changed_files": 6,
        "created_at": "2015-10-28T05:08:28Z",
        "closed_at": "2015-11-02T15:01:12Z",
        "merged_at": null,
        "body": "Closes #2286\n\nHi guys, I started working on the URL rules for parameter matching. It\u2019s still a work in progress, as I still need to:\n- [ ] finish implementing rule parameters\n- [ ] write proper tests\n- [ ] write the doc\n\nI just wanted to throw the PR so that you can tell me if it makes sense. @taion, I tried to mimic werkzeug and removing the pythonisms, let me know what you think.\n",
        "comments": 23
    },
    {
        "merged": true,
        "additions": 58,
        "deletions": 4,
        "changed_files": 6,
        "created_at": "2015-10-28T02:30:30Z",
        "closed_at": "2015-10-28T10:08:45Z",
        "merged_at": "2015-10-28T10:08:44Z",
        "body": "As discussed #2284, this pull request add support to greedy splat `**`.\n\nExample of matching:\n\n```\n/*/c matches /you/are/okay/c\n/*/c does not match /you/are/cool/c\n/**/c matches /you/are/cool/c\n```\n\nFix #2284 \n",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 42,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2015-10-26T23:39:15Z",
        "closed_at": "2015-10-28T15:55:47Z",
        "merged_at": "2015-10-28T15:55:47Z",
        "body": "Right now there's no way in `isActive` to require that a given query key is missing in the currently active query.\n\nThis makes `null` values on the specified query match absent or otherwise `null`-y values on the active query.\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 107,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2015-10-26T20:49:19Z",
        "closed_at": "2015-11-03T06:02:17Z",
        "merged_at": "2015-11-03T06:02:17Z",
        "body": "Closes #2088 \n\nAnother attempt at #2376. The tests illustrate the intended usage. I think this is a much less gross API on the React Router side.\n",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-10-25T01:43:21Z",
        "closed_at": "2015-10-25T17:54:11Z",
        "merged_at": "2015-10-25T17:54:11Z",
        "body": "React.render has been deprecated by React team. Use ReactDOM instead.\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 167,
        "deletions": 58,
        "changed_files": 4,
        "created_at": "2015-10-24T16:03:41Z",
        "closed_at": "2015-10-26T20:18:19Z",
        "merged_at": null,
        "body": "TODO: Add docs if we like this feature\n\nCloses #2088 \n\nI decided to get this out there for visibility before spending time adding explicit docs. The new test case shows this in action, including a bit of an unavoidable quirk.\n\nThere's a few things behind this idea:\n- `createElement` is not ideal as a point for general customizability because it's not composable - a user doesn't get anything to allow e.g. using both `ReactRouterRelay.createElement` and some other custom `createElement` function\n- It's possible to inject additional root components with `createElement`, but it's fairly annoying to do so: https://github.com/relay-tools/react-router-relay/blob/v0.7.0/src/Container.js#L20-L23 (i.e. expose something on child context, and check whether that thing is there - if not, you must be on the root)\n- This allows the routing middleware to access more data about the current router state (i.e. both `components` and `routes`), while not forcing us to expose those as props to all route components, which shouldn't need access to all of those (i.e. we could revert the commit fixing https://github.com/rackt/react-router/issues/1788 and remove `routes` from the props injected to route components again)\n\nLet me know what y'all think.\n",
        "comments": 14
    },
    {
        "merged": true,
        "additions": 15,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-10-23T18:29:36Z",
        "closed_at": "2015-10-24T13:00:50Z",
        "merged_at": "2015-10-24T13:00:50Z",
        "body": "Closes #2364 \n\nHere's one way to let users easily use `Lifecycle` when using ES6 classes. Zero LoC change on our end!\n\nI think this is a bit cleaner than implementing on our wrapper - it'd essentially just be duplicating code from a perfectly good library that's already there.\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 7,
        "changed_files": 2,
        "created_at": "2015-10-23T04:17:55Z",
        "closed_at": "2015-10-23T09:04:28Z",
        "merged_at": "2015-10-23T09:04:28Z",
        "body": "Per https://github.com/rackt/react-router/pull/2336#commitcomment-13933868.\n\nI'm not entirely comfortable with this - in a vacuum I'd prefer we not have `location` on child context either, but I mostly agree with the point that getting rid of it is not worth making another breaking change.\n\nMight want to consider somehow deprecating it anyway, though.\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 21,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-10-22T22:33:58Z",
        "closed_at": "2015-10-27T15:34:05Z",
        "merged_at": "2015-10-27T15:34:05Z",
        "body": "So I can link to it. Thanks!\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2015-10-22T20:07:38Z",
        "closed_at": "2015-10-23T15:37:45Z",
        "merged_at": "2015-10-23T15:37:45Z",
        "body": "",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 31,
        "deletions": 13,
        "changed_files": 5,
        "created_at": "2015-10-22T19:02:37Z",
        "closed_at": "2015-10-24T00:09:44Z",
        "merged_at": "2015-10-24T00:09:44Z",
        "body": "I'm a big fan of code coverage, so I've added it! It builds locally at `./coverage/html/index.html` and also ships off to codecov.io. I'm happy to switch to Coveralls or Code Climate if people have other preferences.\n\nThings are viewable here: https://codecov.io/github/rackt/react-router?ref=6d9bfba5582e32c1dae0e6506bd7ce2869c365a5\n",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 99,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2015-10-22T14:22:04Z",
        "closed_at": "2015-11-06T17:12:58Z",
        "merged_at": null,
        "body": "This is a first pass at #1923, with thanks to @knowbody and @grabbou for their help so far.\n",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-10-22T13:37:12Z",
        "closed_at": "2015-10-22T14:59:34Z",
        "merged_at": "2015-10-22T14:59:34Z",
        "body": "",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 56,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2015-10-21T08:33:50Z",
        "closed_at": "2015-10-21T10:33:48Z",
        "merged_at": "2015-10-21T10:33:48Z",
        "body": "This test is related to #1939 which was closed, but not fixed.\n",
        "comments": 25
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-10-20T14:45:40Z",
        "closed_at": "2015-10-21T11:21:01Z",
        "merged_at": "2015-10-21T11:21:01Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2015-10-20T13:35:44Z",
        "closed_at": "2015-10-21T16:33:34Z",
        "merged_at": "2015-10-21T16:33:34Z",
        "body": "It took me some time to understand what happens, and I updated the page so the explanation is more clear (at least for me). Feedback is welcome :)\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2015-10-20T05:58:26Z",
        "closed_at": "2015-10-20T17:46:49Z",
        "merged_at": "2015-10-20T17:46:49Z",
        "body": "Updated the docs to use `classes` and `ReactDOM`. \n\nThis allows the user to get the most updated approached to build React with react-router\n",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 351,
        "deletions": 0,
        "changed_files": 14,
        "created_at": "2015-10-19T00:19:49Z",
        "closed_at": "2015-10-21T00:11:05Z",
        "merged_at": "2015-10-21T00:11:05Z",
        "body": "Demonstrates partial/lazy loading with auth and dynamic routes\n\nSee PR #1947\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 41,
        "deletions": 7,
        "changed_files": 4,
        "created_at": "2015-10-18T18:21:30Z",
        "closed_at": "2015-10-18T21:15:43Z",
        "merged_at": "2015-10-18T21:15:43Z",
        "body": "For consistency with React v0.14, don't prevent the transition if the onClick handler returns false.\n\nCloses #2219 \n\nI added a basic test case to cover the default being prevented. Also reworded the IndexLink part of the upgrade guide slightly because it was a bit confusing - can split that out into a separate PR if desired though.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-10-15T22:55:15Z",
        "closed_at": "2015-10-16T23:45:27Z",
        "merged_at": "2015-10-16T23:45:27Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-10-15T01:27:20Z",
        "closed_at": "2015-10-15T04:11:03Z",
        "merged_at": "2015-10-15T04:11:03Z",
        "body": "Closes #2277\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 136,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-10-14T13:01:45Z",
        "closed_at": "2015-10-14T14:57:46Z",
        "merged_at": "2015-10-14T14:57:46Z",
        "body": "I put together some updated testing docs for React-router 1.x.\n\nThere wasn't much to write as testing should \"just work\" with react-router 1.x but mainly this doc helps those upgrading from prior testing setups.\n\nAs I do more testing and run into issues, I can add more to the docs.\n\nRe issue #2149\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2015-10-14T10:42:53Z",
        "closed_at": "2015-10-14T14:22:00Z",
        "merged_at": "2015-10-14T14:22:00Z",
        "body": "Just fixed the animation examples to reference the correct dependency. \n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-10-14T05:25:56Z",
        "closed_at": "2015-10-14T10:40:21Z",
        "merged_at": "2015-10-14T10:40:21Z",
        "body": "- Set `history` peer dep to minor version needed by react-router core\n\nSee also: https://github.com/rackt/react-router/pull/2258#issuecomment-147937726\n\n<!-- Reviewable:start -->\n\n[<img src=\"https://reviewable.io/review_button.png\" height=40 alt=\"Review on Reviewable\"/>](https://reviewable.io/reviews/rackt/react-router/2268)\n\n<!-- Reviewable:end -->\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 687,
        "deletions": 674,
        "changed_files": 16,
        "created_at": "2015-10-14T01:45:47Z",
        "closed_at": "2015-10-15T14:26:14Z",
        "merged_at": null,
        "body": "This is some prep work for #2259.\n\nIf you install gitbook and drop in this into `book.json`:\n\n``` json\n{\n  \"gitbook\": \"~2.4.3\",\n  \"structure\": {\n    \"summary\": \"docs/README.md\"\n  },\n  \"plugins\": [\"edit-link@1.4.1\", \"prism@1.0.0\", \"-highlight\"],\n  \"pluginsConfig\": {\n    \"edit-link\": {\n      \"base\": \"https://github.com/rackt/react-router/tree/master\",\n      \"label\": \"Edit This Page\"\n    }\n  }\n}\n```\n\nThen you can run `gitbook serve` to see how this looks. It's mostly cosmetic changes, though I did break apart the API docs so it's not just a big list of stuff.\n\n`ConfirmingNavigation.md` doesn't render it's nested tables properly in gitbook. However, since that may be specific to that tool, I didn't include any changes there.\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 79,
        "deletions": 18,
        "changed_files": 12,
        "created_at": "2015-10-13T23:04:44Z",
        "closed_at": "2015-10-14T21:16:06Z",
        "merged_at": "2015-10-14T21:16:06Z",
        "body": "I work on a [large React project](http://github.com/getsentry/sentry), and upgrading our app to both react 0.14 and react-router 1.0.0 at the same time felt like a long, risky undertaking \u2013\u00a0especially with the huge, breaking API changes to react-router.\n\nInstead, I decided to modify the 0.13.x branch of react-router to support react 0.14, mostly by just substituting calls to react's now-missing internal methods with the same libraries used by react-router 1.0 (e.g. \"invariant\", \"history\", and \"warning\").\n\nI've tested this branch locally on my react 0.14 branch of Sentry, and it seems to work fine.\n",
        "comments": 29
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2015-10-13T17:57:39Z",
        "closed_at": "2015-10-13T22:23:16Z",
        "merged_at": "2015-10-13T22:23:16Z",
        "body": "Since we don't plan on making any breaking changes in the history package without a major version bump, we should be able to just have a peer dep on history `~1`. Please review and merge if it looks good to you, @taion.\n\nFixes #2211\nFixes #2252\n",
        "comments": 18
    },
    {
        "merged": true,
        "additions": 43,
        "deletions": 7,
        "changed_files": 2,
        "created_at": "2015-10-11T04:32:00Z",
        "closed_at": "2015-10-11T15:52:34Z",
        "merged_at": "2015-10-11T15:52:34Z",
        "body": "This mirrors the logic in matchRouteDeep.\n\nRan into this bug earlier just now. This is just a tactical fix for now to get the logic in sync with the route matching logic.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2015-10-10T16:34:37Z",
        "closed_at": "2015-10-15T09:47:20Z",
        "merged_at": null,
        "body": "",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 100,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-10-10T02:12:32Z",
        "closed_at": "2015-10-30T19:19:42Z",
        "merged_at": null,
        "body": "@mjackson, so this is what I've got for a test #2072. \n\nI didn't see any tests for dynamic routes and I didn't know where it should go best, so I went ahead and created a new file for that, as well as a directory for the routes that should be dynamically loaded. Lemme know if that's wrong or you've got something better in mind!\n\nAnd second, I couldn't actually test this, I'm assuming that its because dynamic routing is done through webpack. How should I actually make sure the test works?\n",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-10-08T15:03:19Z",
        "closed_at": "2015-10-08T16:57:26Z",
        "merged_at": null,
        "body": "So, I'm really not sure if this is the right way to solve whatever issue is\nhappening here, but adding these two dependencies does solve the immediate\nissue that has been reported as #2208.\n\nI wish that I had more time to investigate, but this does solve the issue\nthat's holding things up for me on another project.\n\nFeel free to reject this PR if it's overkill, but maybe this'll help your\nimmediate problem @justjacksonn! Cheers.\n\nCloses #2208\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2015-10-08T10:22:49Z",
        "closed_at": "2015-10-08T18:22:30Z",
        "merged_at": null,
        "body": "this fixes #2195 \n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2015-10-08T10:04:11Z",
        "closed_at": "2015-10-08T16:55:08Z",
        "merged_at": null,
        "body": "Replaced deprecated static call to createLocation\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-10-08T00:19:31Z",
        "closed_at": "2015-10-09T04:23:05Z",
        "merged_at": "2015-10-09T04:23:05Z",
        "body": "This pull request adds the ability to open links in new windows or tabs (or frames or browsing contexts in HTML5), using the `target` attribute of the `<a>` tag. Basically, if `target` is set, we let the browser handle the transition itself (similarly to when we middle-click on a link to open it in a new tab).\n\nSee #1510 and #2188 for more discussions about this requirement.\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 39,
        "deletions": 28,
        "changed_files": 13,
        "created_at": "2015-10-07T23:04:02Z",
        "closed_at": "2015-10-08T22:44:18Z",
        "merged_at": "2015-10-08T22:44:18Z",
        "body": "",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 85,
        "deletions": 70,
        "changed_files": 13,
        "created_at": "2015-10-07T22:05:35Z",
        "closed_at": "2015-10-08T21:59:05Z",
        "merged_at": "2015-10-08T21:59:05Z",
        "body": "",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-10-07T04:39:43Z",
        "closed_at": "2015-10-07T14:17:40Z",
        "merged_at": "2015-10-07T14:17:40Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-10-06T15:41:01Z",
        "closed_at": "2015-10-08T19:40:56Z",
        "merged_at": null,
        "body": "This would make it easy to pass state (e.g. `req.body`) without having to duplicate `match()`'s history creation in order to pass a location object in.\n\n``` js\nmatch({ routes, location: req.url, state: req.body }, ...\n```\n",
        "comments": 11
    },
    {
        "merged": true,
        "additions": 21,
        "deletions": 17,
        "changed_files": 4,
        "created_at": "2015-10-05T20:59:40Z",
        "closed_at": "2015-10-05T22:09:57Z",
        "merged_at": "2015-10-05T22:09:57Z",
        "body": "#2169 was just a docs tweak. This has some real meat. You shouldn't get some upstream deprecation warnings from `history` with this.\n\nThe build is still failing on isActive because of be371966. The internal state isn't being populated initially by `useRoutes` when using `match`. I'll see if I can get to that one too.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2015-10-05T20:10:42Z",
        "closed_at": "2015-10-05T22:11:16Z",
        "merged_at": "2015-10-05T22:11:16Z",
        "body": "`createLocation` is [now deprecated](https://github.com/rackt/history/pull/79) and so are these docs :smile: \n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-10-04T00:33:52Z",
        "closed_at": "2015-10-04T09:10:51Z",
        "merged_at": "2015-10-04T09:10:51Z",
        "body": "This looks like a typo to me.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-10-02T12:21:42Z",
        "closed_at": "2015-10-06T04:46:41Z",
        "merged_at": "2015-10-06T04:46:41Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2015-10-01T16:27:39Z",
        "closed_at": "2015-10-06T05:24:50Z",
        "merged_at": "2015-10-06T05:24:50Z",
        "body": "Further tweak to the docs to make clear that the hash based URL \"_k\" is directly related to hash based histories and doesn't come along for the ride with createBrowserHistory. I realised upon re-reading it that it was a touch confusing at present.\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 120,
        "deletions": 0,
        "changed_files": 4,
        "created_at": "2015-10-01T10:37:33Z",
        "closed_at": "2015-10-22T21:23:49Z",
        "merged_at": "2015-10-22T21:23:49Z",
        "body": "@knowbody a couple of concerns:\n- not super happy with the static properties, although I needed to set up `path` as well to make `links` from breadcrumbs working. \n- it won't work with any HOC's, so use case is pretty limited. In my custom project, I was using a HOC called `@RouterPage(title)` that was the top-most HOC assigning these static properties for use with router and with DocumentTitle. Quite verbose, but it was working efficiently.\n\nAnd generally it feels like styling and breadcrumbs component can be (and should) be extracted to a separate component, but just wanted to check if we are heading in the same direction first ;)\n\nCommits to be squashed into one later.\n",
        "comments": 14
    },
    {
        "merged": true,
        "additions": 62,
        "deletions": 6,
        "changed_files": 3,
        "created_at": "2015-09-30T05:20:06Z",
        "closed_at": "2015-10-06T06:09:21Z",
        "merged_at": "2015-10-06T06:09:21Z",
        "body": "For issue #2118 \n\nqueryIsActive compare Object{foo: Object{1: 'bar'}} with Object{foo: Object{4: 'bar'}} wrong.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 26,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2015-09-30T02:14:47Z",
        "closed_at": "2015-10-06T01:09:52Z",
        "merged_at": "2015-10-06T01:09:52Z",
        "body": "Fixes #2122 \n\nAny time the query params change, onLeave and onEnter hooks will both be called. \n\nIf comparing `state.location.query` instead of `state.location.search` would be more appropriate, let me know and I can adjust the PR\u2013`state.location.search` was just easiest since it's a simple string comparison.\n",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 87,
        "deletions": 30,
        "changed_files": 2,
        "created_at": "2015-09-28T19:48:49Z",
        "closed_at": "2015-10-07T20:21:06Z",
        "merged_at": null,
        "body": "IndexLink now being activated correctly. Need to test it with #2079 \n",
        "comments": 15
    },
    {
        "merged": true,
        "additions": 17,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2015-09-28T13:14:47Z",
        "closed_at": "2015-10-07T18:42:43Z",
        "merged_at": "2015-10-07T18:42:43Z",
        "body": "I thought it would make the upgrade process easier for other users by making it clearer which props must be passed via props and which can still be passed via context.\n\nAs far as I can make out, only history and location are available via context.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 85,
        "deletions": 22,
        "changed_files": 1,
        "created_at": "2015-09-25T11:42:53Z",
        "closed_at": "2015-10-07T19:38:57Z",
        "merged_at": null,
        "body": "When nesting IndexRoute's, some of them become invalidly marked as active, this PR contains the failing test for the case.\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2015-09-24T16:34:01Z",
        "closed_at": "2015-09-25T04:52:14Z",
        "merged_at": null,
        "body": "@ryanflorence this fixes #1957 \n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-09-22T03:47:20Z",
        "closed_at": "2015-09-22T11:23:44Z",
        "merged_at": "2015-09-22T11:23:44Z",
        "body": "Noticed that the link to the documentation section for routes didn't span the entire word.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1140,
        "deletions": 947,
        "changed_files": 31,
        "created_at": "2015-09-21T03:50:02Z",
        "closed_at": "2015-10-12T19:02:48Z",
        "merged_at": null,
        "body": "Allows use with React Native or other custom React version.  I followed the same pattern as rackt/react-redux.\n\nThe only breaking change with this (since all tests pass, and you guys write awesome tests) would be for people who import directly from \"react-router/lib/[something]\" and use private APIs. I'm not sure what your thoughts would be on what to do about those people.\n\nI'm also aware that you might not even want to accept a PR like this, given the fact that one day (though none of us know what day that is haha) we can all depend on React >= 0.14, and react-router can depend on just react (sans react-dom), and that will (hopefully) _just work_ with react-native with no changes needed. Ahhh, the future. It will be so nice.\n\nBut for using react-router on RN today, this is needed.\n",
        "comments": 15
    },
    {
        "merged": true,
        "additions": 58,
        "deletions": 7,
        "changed_files": 2,
        "created_at": "2015-09-21T02:15:41Z",
        "closed_at": "2015-10-06T02:12:08Z",
        "merged_at": "2015-10-06T02:12:08Z",
        "body": "This is a rough implementation that can be cleaned up further, but I wanted to request for comments on the approach first before cleaning the implementation.\n\nIt adds `patterns` to `nextState`/`match` (State) in order to find the parent's matched pattern before appending to it. It can instead traverse parent routes and prepend the paths until it finds the first route that contains `/`. That adds more logic to Redirect but I'm happy to do that as well.\n\nResolves #1905\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-09-18T03:05:07Z",
        "closed_at": "2015-09-18T04:06:41Z",
        "merged_at": "2015-09-18T04:06:41Z",
        "body": "removed the boolean typecasting to dry up the code since the parameter passed will be a booelan\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 10,
        "changed_files": 2,
        "created_at": "2015-09-17T20:32:18Z",
        "closed_at": "2015-09-18T04:06:05Z",
        "merged_at": "2015-09-18T04:06:04Z",
        "body": "The QueryUtils module is the only one with a dependency on the `qs` module (as raised in #1985), but it isn't in use anywhere in the library. We can remove both it and its `qs` dependency.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-09-16T21:39:40Z",
        "closed_at": "2015-09-17T20:00:59Z",
        "merged_at": "2015-09-17T20:00:59Z",
        "body": "QueryUtils depends on qs, but it's not in package.json\n\nline 9 \n\n```\nvar _qs = require('qs');\n```\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2015-09-16T19:49:40Z",
        "closed_at": "2015-09-26T05:53:39Z",
        "merged_at": null,
        "body": "If any route hooks are registered, [transitionHook calls matchRoutes](https://github.com/rackt/react-router/blob/v1.0.0-rc1/modules/useRoutes.js#L106) to determine what route hooks and caches the computed next state as partialNextState.  However when these cached results are used later [in the history.listen callback](https://github.com/rackt/react-router/blob/v1.0.0-rc1/modules/useRoutes.js#L44), it shortcuts logic in the main path [to update the history object's state](https://github.com/rackt/react-router/blob/v1.0.0-rc1/modules/useRoutes.js#L52).  \n\nSince this is required of all paths that call finishMatch (including the one that uses the cached partialNextState), it's been moved there.\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-09-16T11:59:45Z",
        "closed_at": "2015-09-16T15:44:46Z",
        "merged_at": "2015-09-16T15:44:46Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 97,
        "deletions": 61,
        "changed_files": 7,
        "created_at": "2015-09-16T05:22:12Z",
        "closed_at": "2015-10-06T15:24:25Z",
        "merged_at": null,
        "body": "Closes #1966 \n\nI removed the example because it would be no longer relevant/correct if this component is added.\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 34,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2015-09-15T17:45:06Z",
        "closed_at": "2015-09-15T19:50:18Z",
        "merged_at": "2015-09-15T19:50:18Z",
        "body": "- Removes the link to the old github.io site (currently redirected to the repo's master/1.0.x docs)\n- Adds a link to the 0.13.x branch's docs\n- Adds a README w/ a table of contents for the 0.13.x docs\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 81,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-09-15T14:49:08Z",
        "closed_at": "2015-09-25T00:03:27Z",
        "merged_at": "2015-09-25T00:03:27Z",
        "body": "no fix yet, just a failing test\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2015-09-15T04:19:20Z",
        "closed_at": "2015-10-18T23:50:32Z",
        "merged_at": null,
        "body": "Demonstrates partial/lazy loading with auth and dynamic routes\n\nSee #1941\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 17,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-09-15T02:04:04Z",
        "closed_at": "2015-10-28T13:20:02Z",
        "merged_at": null,
        "body": "Query params are not available when doing server-side rendering with `match()`. This is because queries are only added to location objects by `useQueries()`, when it passes `location` to a listener: https://github.com/rackt/history/blob/master/modules/useQueries.js#L28-L29\n\nQueries work on the client because match is called from inside a listener: https://github.com/rackt/react-router/blob/master/modules/useRoutes.js#L210\n\nBut they don't work on the server, because the `match.js` module calls `history.match()` directly without listening: https://github.com/rackt/react-router/blob/master/modules/match.js#L20\n\nThis PR adds a failing test case. I would have tried to fix it as well, but the solution doesn't seem all that straightforward. You could listen to the history object and then immediately unlisten to get the proper location object, but that seems a bit hacky.\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2015-09-14T16:15:20Z",
        "closed_at": "2015-09-14T20:52:46Z",
        "merged_at": "2015-09-14T20:52:46Z",
        "body": "I don't know why it caught my eye, but const isn't available in many scenarios without a transpiler.\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 30,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-09-14T15:37:24Z",
        "closed_at": "2015-09-14T23:10:20Z",
        "merged_at": null,
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-09-14T10:45:00Z",
        "closed_at": "2015-09-14T12:23:40Z",
        "merged_at": "2015-09-14T12:23:40Z",
        "body": "Wasted a few minutes trying to figure out why my `onEnter` hooks weren't firing properly :smile: \n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2015-09-13T20:41:08Z",
        "closed_at": "2015-09-14T12:30:15Z",
        "merged_at": "2015-09-14T12:30:15Z",
        "body": "Fix usage of onEnter function from the auth-flow example.\n\nWas giving this error:\n\n```\nUncaught TypeError: Cannot read property 'indexOf' of null\n```\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 45,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-09-13T06:46:49Z",
        "closed_at": "2015-09-13T22:51:25Z",
        "merged_at": "2015-09-13T22:51:25Z",
        "body": "I love the huge-apps example. It gives a good idea about building applications larger than the standard todo list. The recursive directory call was easy to understand but I got a lot more value from unrolling the loop to see just what this looks like all put together.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2015-09-12T17:51:58Z",
        "closed_at": "2015-09-12T20:12:28Z",
        "merged_at": "2015-09-12T20:12:28Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 153,
        "deletions": 0,
        "changed_files": 4,
        "created_at": "2015-09-12T12:22:55Z",
        "closed_at": "2015-09-12T16:51:24Z",
        "merged_at": "2015-09-12T16:51:24Z",
        "body": "Based on https://github.com/rackt/react-router/pull/1226.\n\nI've updated the code to use the latest API / code style, it should be good to go now :rocket: \n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2015-09-12T10:47:15Z",
        "closed_at": "2015-09-12T16:50:43Z",
        "merged_at": "2015-09-12T16:50:43Z",
        "body": "Hello, I think this is component instead of handler, or maybe I misunterstood something. :O\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 36,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2015-09-12T09:45:55Z",
        "closed_at": "2015-09-12T16:48:38Z",
        "merged_at": "2015-09-12T16:48:38Z",
        "body": "These two things caught me out with the upgrade path so I thought I would send through a PR. You will likely want to add more context but adding both of these to your documentation would help someone trying to convert everything over/set up a new project.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2015-09-12T01:35:05Z",
        "closed_at": "2015-09-12T04:44:40Z",
        "merged_at": "2015-09-12T04:44:40Z",
        "body": "Just some minor grammar fixes. This is an absolutely fantastic upgrade guide, thanks for all your hard work!\n\n**Edit**: Looks like the \"Thanks\" fix is in the other open PR, but the rest are new.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 47,
        "deletions": 42,
        "changed_files": 3,
        "created_at": "2015-09-12T00:40:26Z",
        "closed_at": "2015-09-12T06:18:34Z",
        "merged_at": "2015-09-12T06:18:34Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 51,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2015-09-11T14:11:39Z",
        "closed_at": "2015-09-11T19:30:19Z",
        "merged_at": null,
        "body": "Example\n\n```\n<Route getChildRoutes={function(cb) {\n    cb(null, [<Route path=\"loaded\"/>]);\n}} />\n```\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 39,
        "deletions": 12,
        "changed_files": 6,
        "created_at": "2015-09-11T02:07:20Z",
        "closed_at": "2015-09-11T12:59:16Z",
        "merged_at": null,
        "body": "A few changes to the docs:\n- Changed to using `ReactDOM.render()` as in 0.14 that is changing\n- Added a transitionTo  / mixin example\n- Added a History example - I wasn't able to find any docs on this but fished it out of an issue. \n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-09-10T19:27:00Z",
        "closed_at": "2015-09-11T12:36:20Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 21,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-09-10T19:17:37Z",
        "closed_at": "2015-09-11T19:21:50Z",
        "merged_at": "2015-09-11T19:21:50Z",
        "body": "This is following #1574. The test you added was passing in beta3 so I added a test case which fails. Note that it's now passing against master (which is nice)! It's just to make sure we cover all cases.\n\nThis is against beta3\n\n![image](https://cloud.githubusercontent.com/assets/4422516/9798367/7c947f4e-57ce-11e5-919e-0dba29c0faa4.png)\n\nAnd this is against current master\n\n![screen shot 2015-09-10 at 3 05 39 pm](https://cloud.githubusercontent.com/assets/4422516/9798197/717e41d6-57cd-11e5-9dfa-950dc31027f1.png)\n\n---\n\nIf you want to test against beta3 the code needs to be adapted a bit\n\n``` jsx\ndescribe('at a route with special characters', function () {\n  it('does not double escape', function(done) {\n    // https://github.com/rackt/react-router/issues/1574\n    let MyComponent = React.createClass({\n      render () { return <div>{this.props.params.some_token}</div> }\n    })\n\n    React.render((\n      <Router history={new MemoryHistory('/point/aaa%2Bbbb')}>\n        <Route path=\"point/:some_token\" component={MyComponent} />\n      </Router>\n    ), div, function () {\n      expect(div.textContent.trim()).toEqual('aaa+bbb');\n      done();\n    });\n  });\n\n  it('does not double escape when nested', function(done) {\n    // https://github.com/rackt/react-router/issues/1574\n    let MyWrapperComponent = React.createClass({\n      render () { return this.props.children; }\n    });\n    let MyComponent = React.createClass({\n      render () { return <div>{this.props.params.some_token}</div> }\n    });\n\n    React.render((\n      <Router history={new MemoryHistory('/point/aaa%2Bbbb')}>\n        <Route component={MyWrapperComponent}>\n          <Route path=\"point/:some_token\" component={MyComponent} />\n        </Route>\n      </Router>\n    ), div, function () {\n      expect(div.textContent.trim()).toEqual('aaa+bbb');\n      done();\n    });\n  });\n});  \n```\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2015-09-10T00:33:01Z",
        "closed_at": "2015-09-10T06:55:31Z",
        "merged_at": "2015-09-10T06:55:31Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-09-09T12:14:38Z",
        "closed_at": "2015-09-09T17:31:56Z",
        "merged_at": "2015-09-09T17:31:56Z",
        "body": "Updates `karma` to 0.13.9. Resolves Issue #1855. \n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-09-09T02:08:19Z",
        "closed_at": "2015-09-09T07:59:18Z",
        "merged_at": "2015-09-09T07:59:18Z",
        "body": "s/rendering/render/\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-09-09T01:46:38Z",
        "closed_at": "2015-09-09T08:12:00Z",
        "merged_at": "2015-09-09T08:12:00Z",
        "body": "Pretty self-explanatory.\n\nBtw, almost done with the rewrite for Redux React Router based on the changes in latest beta and it's working great :)\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 21,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-09-08T23:10:04Z",
        "closed_at": "2015-09-11T19:18:09Z",
        "merged_at": "2015-09-11T19:18:09Z",
        "body": "Hash links don't seem to work, as far as I can tell. The router attempts to navigate to a route that includes the hash at the end of it, resulting in a route not found error. Attached are a couple of failing tests for the issue.\n\nRelated issue: #394 \n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-09-08T22:29:30Z",
        "closed_at": "2015-09-11T17:42:44Z",
        "merged_at": null,
        "body": "Hey! I wanted to check and see what y'all think of potentially modifying `formatPattern` to support optional param groups a little better. I've got an odd case in an application where we're using optional groups of parameters instead of query params, effectively.\n\nI'm using `formatPattern` to generate paths for `transitionTo` in a couple of places, and it's not returning the URLs that I would expect. The behavior I hoped for is that if there's an optional group of parameters, like `/foo(/type/:typeName)`, that if no `typeName` value was present, the path generated by `formatPattern` wouldn't include that optional segment.\n- Expected result: `/foo`\n- Actual result: `/foo/type/`\n\nIf this isn't something `formatPattern` should handle, I expect that the right solution is for me to use splats and handle it manually.\n\nSee the attached failing tests for examples.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2015-09-08T18:57:09Z",
        "closed_at": "2015-09-11T17:41:34Z",
        "merged_at": null,
        "body": "",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1256,
        "deletions": 0,
        "changed_files": 40,
        "created_at": "2015-09-08T18:17:32Z",
        "closed_at": "2015-09-10T17:11:59Z",
        "merged_at": null,
        "body": "This is a new PR that serves as a cleanup of https://github.com/rackt/react-router/pull/1811\n\n---\n\nMixin support for ES6 classes through ES7 decorators\n\nUsage:\n\n```\nimport { NavigationDecorator } from 'react-router';\n\n@NavigationDecorator\nexport default class Nav extends Component {\n    // ...  \n}\n```\n\nInternally I created `DecoratorUtils` with all the necessary logic. Converting a mixin to a decorator is a one-liner\n\n```\nexport const NavigationDecorator = createDecorator(Navigation); \n```\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 5,
        "changed_files": 4,
        "created_at": "2015-09-08T13:27:48Z",
        "closed_at": "2015-09-08T15:18:20Z",
        "merged_at": "2015-09-08T15:18:20Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 30,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2015-09-07T23:59:41Z",
        "closed_at": "2015-09-09T17:28:46Z",
        "merged_at": "2015-09-09T17:28:46Z",
        "body": "this fixes #1561 \n\n@ryanflorence could you give some feedback on this diff? is that the behaviour we want?\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 56,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2015-09-07T10:19:36Z",
        "closed_at": "2015-09-11T17:40:23Z",
        "merged_at": null,
        "body": "@ryanflorence added example showing redirect with IndexRoute.\nRelates to: https://github.com/rackt/react-router/issues/1814#issuecomment-138045435\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 83,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2015-09-04T07:34:48Z",
        "closed_at": "2015-09-05T20:46:45Z",
        "merged_at": "2015-09-05T20:46:45Z",
        "body": "- subscribe to history changes\n- don't use the context to pass data\n- works with parents that implement shouldComponentUpdate\n- solves #470, #1772 \n",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2015-09-04T05:31:27Z",
        "closed_at": "2015-09-05T20:53:40Z",
        "merged_at": "2015-09-05T20:53:40Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 24,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2015-09-04T01:22:35Z",
        "closed_at": "2015-09-05T21:02:12Z",
        "merged_at": null,
        "body": "makes this possible:\n\n```\n<Route name=\"lazy\" path=\"/lazy\" plainRoute={{\n  getComponents (cb) {\n    //load lazily, asynchronously and only called when needed\n    require.ensure([], (require) => {\n      cb(null, require('your_lazy_component'))\n    })\n  }\n}}>\n\n```\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2015-09-03T23:30:45Z",
        "closed_at": "2015-09-11T17:36:25Z",
        "merged_at": "2015-09-11T17:36:25Z",
        "body": "Fixes the regex for trailing slashes in PathUtils to not match /? if it\nis at the beginning of a url's query params\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-09-03T08:59:15Z",
        "closed_at": "2015-09-05T20:53:04Z",
        "merged_at": "2015-09-05T20:53:04Z",
        "body": "```\n// react-router/modules/index.js\nexport PropTypes from './PropTypes';\n```\n\nThis line will get a `undefined` value as `PropTypes`.\n\nWe should export whole PropTypes as default or just `export { * as PropTypes } from './PropTypes';`\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1751,
        "deletions": 966,
        "changed_files": 73,
        "created_at": "2015-09-03T08:10:07Z",
        "closed_at": "2015-09-11T17:34:09Z",
        "merged_at": null,
        "body": "Mixin support for ES6 classes through ES7 decorators\n\nUsage:\n\n```\nimport { NavigationDecorator } from 'react-router';\n\n@NavigationDecorator\nexport default class Nav extends Component {\n    // ...  \n}\n```\n\nInternally I created `DecoratorUtils` with all the necessary logic. Converting a mixin to a decorator is a one-liner\n\n```\nexport const NavigationDecorator = createDecorator(Navigation); \n```\n",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-09-02T09:49:58Z",
        "closed_at": "2015-09-05T20:54:16Z",
        "merged_at": "2015-09-05T20:54:16Z",
        "body": "Fixes  'this' is not allowed before super() error when running examples\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2015-09-02T09:45:24Z",
        "closed_at": "2015-09-05T20:55:21Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-08-31T19:04:14Z",
        "closed_at": "2015-09-05T20:56:44Z",
        "merged_at": "2015-09-05T20:56:44Z",
        "body": "Otherwise third-party tools end up having to re-implement this logic, including `isReactChildren()`.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-08-31T14:38:30Z",
        "closed_at": "2015-09-05T20:56:22Z",
        "merged_at": "2015-09-05T20:56:22Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 176,
        "deletions": 7,
        "changed_files": 5,
        "created_at": "2015-08-28T08:41:01Z",
        "closed_at": "2015-09-11T17:05:16Z",
        "merged_at": null,
        "body": "I've made a small modification to the getComponents module to pass in the state params to the user defined getComponents method.\n\nThis will allow use-cases like this:\n\n``` javascript\nvar typeHandler = function(params, cb) {\n    switch(params.typename) {\n        case 'user': cb(null, PersonCalendarWrapper);\n        case 'team': cb(null, GroupCalendarWrapper);\n    }\n    cb();\n}\n\nvar periodHandler = function(params, cb) {\n    cb(null, require(params.typename + '/' + params.period + '-calendar'));\n}\n\n<Router handler={App}>\n    <Route name='calendar' path='calendar' components={CalendarMaster}>\n        <Route name='type' path=':typename/:id' getComponents={typeHandler}>\n            <Route name='period' path=':period' getComponents={periodHandler} />\n        </Route>\n    </Route>\n</Router>\n```\n\nAlso included are tests for the entire getComponents module (which were not present before).\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2015-08-27T20:47:27Z",
        "closed_at": "2015-09-05T20:56:04Z",
        "merged_at": "2015-09-05T20:56:04Z",
        "body": "Clarify that the `<Redirect/>` component does not support relative paths in the `to` property. (Iss #1658)\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-08-26T19:16:27Z",
        "closed_at": "2015-09-05T20:57:05Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2015-08-25T08:55:15Z",
        "closed_at": "2015-09-05T20:57:35Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5943,
        "deletions": 1277,
        "changed_files": 78,
        "created_at": "2015-08-19T22:37:41Z",
        "closed_at": "2015-09-08T13:21:49Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-08-19T21:33:58Z",
        "closed_at": "2015-08-23T18:57:52Z",
        "merged_at": null,
        "body": "Resolves #1743 \n\nThis PR adds a ref to the top-level component returned by Router. This is necessary for testing, especially when used with libraries such as [react-test-tree](https://github.com/QubitProducts/react-test-tree).\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 34,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2015-08-19T10:21:52Z",
        "closed_at": "2015-09-10T10:37:52Z",
        "merged_at": null,
        "body": "Fixes https://github.com/rackt/react-router/issues/1632\n\ne.g.\n\n```\nlet routes = [\n    { from: '/', to: '/begin' },\n    {\n        path: '/',\n        component: App,\n        childRoutes: [\n            { path: '/begin', component: Begin },\n\n            { from: '/about', to: '/about-us' },\n            { path: '/about-us', component: AboutUs }\n        ]\n    }\n];\n```\n",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 727,
        "deletions": 248,
        "changed_files": 26,
        "created_at": "2015-08-18T06:18:58Z",
        "closed_at": "2015-08-31T17:04:59Z",
        "merged_at": null,
        "body": "## Don't merge; using this PR for discussion\n## PR has changed considerably since this initial comment. See [below](https://github.com/rackt/react-router/pull/1728#issuecomment-133793699) for latest.\n\nFollow up to https://github.com/rackt/react-router/pull/1724 and [this gist](https://gist.github.com/acdlite/26628a2b3b7bdc76f805), which formed the first draft of this PR.\n\nThis PR introduces a modular API that separates history listening, route matching, and component rendering:\n\n``` js\n// Create router by passing routes to route-creating function\n// `createReactRouter()` is an enhanced version of base `createRouter()`\nconst router = createReactRouter(\n  <Route component={Parent}>\n    <Route path=\"/\" component={Child} />\n  </Route>\n);\n\n// Listen for location changes\n// For server-side rendering, omit history and use `createLocation()` directly\nhistory.listen(location => {\n  router.match(location, (error, state) => {\n    React.render(<RouterComponent {...state} />, el);\n  };\n});\n```\n\nPrimary features of this API\n- Separate route matching and history listening allows for integrations with external state libraries, like Redux. It also makes server-side rendering easier \u2014 no special API needed, just pass a location object.\n- Separate rendering opens up the possibility of integrating with UI libraries other than React with minimal hassle, by sharing the core routing logic.\n- `<RouterComponent>` is a pure, dumb component (simply renders the app for a given set of props \u2014 no internal state whatsoever), replacing `<Router>` which is a stateful, smart component. Not sure about the naming, but I'm going with `<RouterComponent>` for now to avoid a name clash while both of these components exist in the codebase.\n- \"Non-essential\" routing features \u2014 like async component loading, transition hooks, and JSX routes \u2014 are implemented as **router enhancers** on top of a base `createRouter()` function. These are just like **store enhancers** in Redux, higher-order components in React, or decorators. Aside from making the library easier to maintain, they give flexibility to the consumer, and open up the possibility for some really cool userland extensions. We took this approach with Redux and the community response has been overwhelming.\n\nFor an example of how router enhancers work, take a look at `createReactRouter()`, which combines multiple enhancers into a single router creating function:\n\n``` js\nconst createReactRouter =\n  useComponents(\n    useTransitionHooks(\n      useJSXRoutes(\n        createRouter\n      )\n    )\n  );\n```\n\nSo far, I've migrated over a single test file: `Router-test.js -> RouterComponent-test.js`. I'll probably hold off on migrating any more until I've received feedback.\n### Todo\n- [X] Base `createRouter()`\n- [X] Implement component loading, transition hooks, and JSX routes as router enhancers\n- [X] `<RouterComponent>` that renders for a given state returned by `router.match()`\n- [X] `<Link>` functionality\n- [ ] ~~Navigation and State mixins re-implemented as higher-order components~~ Keep for backwards compatibility\n- [ ] Re-implement `<Router>` on top of these primitives; maintain 1.0 compatibility if possible.\n- [ ] ~~Convert all existing tests~~ Pass existing tests without modifications\n\nBy the way, I have to mention that because of the great work that's already been done to move the core pieces of logic into pure functions (`matchRoutes()`, `getComponents()`, `runTransitions()`, etc.), it was a breeze to whip this PR together \u2014 I was able to focus entirely on API rather than having to re-implement/refactor complicated routing code. Really awesome work.\n",
        "comments": 46
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-08-17T23:07:02Z",
        "closed_at": "2015-09-05T21:16:23Z",
        "merged_at": "2015-09-05T21:16:23Z",
        "body": "Referencing issue #1264, this issue is fixed in the current master branch.  This pull request adds a test to show this is the case.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 391,
        "deletions": 262,
        "changed_files": 7,
        "created_at": "2015-08-17T16:39:44Z",
        "closed_at": "2015-08-18T06:19:45Z",
        "merged_at": null,
        "body": "**Re-submission of #1719 from rackt branch**\n\nThis PR refactors the existing Router component class into two separate modules: one for rendering (React component) and one for managing state updates.\n## Why?\n\nThe new 1.0 API goes a long way toward putting rendering back in hands of users, but `<Router>` still controls the re-render cycle when location changes occur. This is a problem for integrating with external state libraries like Redux.\n\nAdditionally, most of what makes React Router cool isn't specific to React. By separating out the React and non-React parts, you could eventually move the core routing stuff into a separate project, and allow people to create bindings for Cycle, Angular... (_cough_ Redux _cough_)... whatever. This is similar in spirit to @mjackson's https://github.com/rackt/history or @ryanflorence's https://github.com/ryanflorence/nested-router. (The selfish answer is that I would like this API in order to address https://github.com/acdlite/redux-react-router/issues/1)\n## Implementation\n\nI've tried to keep this PR as minimal as possible. None of the original tests have been modified. Existing code has been preserved as much as possible, even in a few cases where it could have been simplified.\n\n`<Router>` keeps the same API as before, with one addition: instead of configuring the router using props, you can create the router using `createRouter(config)` and then pass it to `<Router>` like so:\n\n``` js\nReact.render(<Router history={history} routes={routes} />);\n\n// same as\nconst router = createRouter({ history, routes });\nReact.render(<Router router={router} />);\n```\n\nOr you can separate it even further by subscribing to the router and passing location directly, like we do with server-side rendering:\n\n``` js\nrouter.listen(() => {\n  const { location } = router.getState();\n  React.render(<Router location={location} routes={routes} />);\n});\n```\n## Looking ahead\n\nIf/when this PR is merged, we can take additional steps to simplify the implementation of the base router. For example, right now the router returned by `createRouter()` is an instance of a class, but there's really no reason it needs to be: the only important state is contained inside the history object. Everything else can be implemented as pure functions \u2014 the most important function, `Router.run()`, already is. Perhaps in a future PR we can rid of `createRouter()` entirely and replace it with a collection of pure functions, a la nested-router.\n",
        "comments": 13
    },
    {
        "merged": false,
        "additions": 392,
        "deletions": 262,
        "changed_files": 7,
        "created_at": "2015-08-16T20:44:22Z",
        "closed_at": "2015-08-17T16:40:22Z",
        "merged_at": null,
        "body": "**Re-submitted as https://github.com/rackt/react-router/pull/1724**\n\nThis PR refactors the existing Router component class into two separate modules: one for rendering (React component) and one for managing state updates.\n## Why?\n\nThe new 1.0 API goes a long way toward putting rendering back in hands of users, but `<Router>` still controls the re-render cycle when location changes occur. This is a problem for integrating with external state libraries like Redux.\n\nAdditionally, most of what makes React Router cool isn't specific to React. By separating out the React and non-React parts, you could eventually move the core routing stuff into a separate project, and allow people to create bindings for Cycle, Angular... (_cough_ Redux _cough_)... whatever. This is similar in spirit to @mjackson's https://github.com/rackt/history or @ryanflorence's https://github.com/ryanflorence/nested-router. (The selfish answer is that I would like this API in order to address https://github.com/acdlite/redux-react-router/issues/1)\n## Implementation\n\nI've tried to keep this PR as minimal as possible. None of the original tests have been modified. Existing code has been preserved as much as possible, even in a few cases where it could have been simplified.\n\n`<Router>` keeps the same API as before, with one addition: instead of configuring the router using props, you can create the router using `createRouter(config)` and then pass it to `<Router>` like so:\n\n``` js\nReact.render(<Router history={history} routes={routes} />);\n\n// same as\nconst router = createRouter({ history, routes });\nReact.render(<Router router={router} />);\n```\n\nOr you can separate it even further by subscribing to the router and passing location directly, like we do with server-side rendering:\n\n``` js\nrouter.listen(() => {\n  const { location } = router.getState();\n  React.render(<Router location={location} routes={routes} />);\n});\n```\n## Looking ahead\n\nIf/when this PR is merged, we can take additional steps to simplify the implementation of the base router. For example, right now the router returned by `createRouter()` is an instance of a class, but there's really no reason it needs to be: the only important state is contained inside the history object. Everything else can be implemented as pure functions \u2014 the most important function, `Router.run()`, already is. Perhaps in a future PR we can rid of `createRouter()` entirely and replace it with a collection of pure functions, a la nested-router.\n",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2015-08-16T10:30:51Z",
        "closed_at": "2015-09-11T17:14:13Z",
        "merged_at": null,
        "body": "According to the upgrade path, `?/:p?` is the correct syntax for optional route parameters, not `(/:p)`. Anyway I tried both ways by fiddling with the examples and only the first one worked.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2015-08-15T19:30:42Z",
        "closed_at": "2015-09-11T17:32:34Z",
        "merged_at": "2015-09-11T17:32:34Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 15,
        "deletions": 16,
        "changed_files": 12,
        "created_at": "2015-08-12T09:20:21Z",
        "closed_at": "2015-09-11T17:30:43Z",
        "merged_at": null,
        "body": "",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-08-08T03:33:25Z",
        "closed_at": "2015-08-26T12:57:27Z",
        "merged_at": "2015-08-26T12:57:27Z",
        "body": "This link is broken. I updated it to point to the website, but you might prefer that I...\n1. point it somewhere else\n2. remove it entirely\n\njust lmk.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2015-08-07T20:55:48Z",
        "closed_at": "2015-09-05T23:01:07Z",
        "merged_at": null,
        "body": "This sets the onEnter function only when it's defined in the handler, otherwise it keeps the callback defined in the JSX (also works with onLeave)\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2015-08-05T15:39:07Z",
        "closed_at": "2015-09-11T17:00:53Z",
        "merged_at": null,
        "body": "routerWIllLeave's second param is actually a `transition` object, not a `router` object. At least in React Router 1.0-beta3.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 18,
        "changed_files": 2,
        "created_at": "2015-08-05T12:33:39Z",
        "closed_at": "2015-08-10T00:28:15Z",
        "merged_at": null,
        "body": "Hello,\nI am opening this PR to fix the following issues in the EcmaScript 2015 code of react-router:\n- Using `module.exports` is only valid when using the CommonJS module format, but if you plan to transpile your code to a different module format, it will not work.\n- `import { isLocation }` is only valid if `isLocation` was exported with the `export` keyword, it does not look inside the default export. Here also, it may work depending on the module format you transpile your code to.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 19,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2015-08-02T16:09:26Z",
        "closed_at": "2015-08-10T00:59:08Z",
        "merged_at": null,
        "body": "This is fixing a huge bug for the isActive. If I had a path starting with /hell and another by /hello, isActive would think /hello is active when I am on the /hell URL. This is perfectly fixed now :)\n\nI wasn't able to write unit tests because `karma start` was crashing for me. I would get this:\n(Looks like Travis was having the same error before my PR)\n\n```\nWARN [preprocess]: Can not load \"webpack\"!\n  TypeError: Object [object Object] has no method 'refreshFiles'\n    at Plugin.notifyKarmaAboutChanges (/var/git/thereactivestack/react-router/node_modules/karma-webpack/index.js:108:15)\n    at Plugin.<anonymous> (/var/git/thereactivestack/react-router/node_modules/karma-webpack/index.js:72:9)\n    at Tapable.applyPlugins (/var/git/thereactivestack/react-router/node_modules/webpack/node_modules/tapable/lib/Tapable.js:26:37)\n    at Watching._done (/var/git/thereactivestack/react-router/node_modules/webpack/lib/Compiler.js:78:17)\n    at Watching.<anonymous> (/var/git/thereactivestack/react-router/node_modules/webpack/lib/Compiler.js:61:18)\n    at Tapable.emitRecords (/var/git/thereactivestack/react-router/node_modules/webpack/lib/Compiler.js:281:37)\n    at Watching.<anonymous> (/var/git/thereactivestack/react-router/node_modules/webpack/lib/Compiler.js:58:19)\n    at /var/git/thereactivestack/react-router/node_modules/webpack/lib/Compiler.js:274:11\n    at Tapable.applyPluginsAsync (/var/git/thereactivestack/react-router/node_modules/webpack/node_modules/tapable/lib/Tapable.js:60:69)\n    at Tapable.afterEmit (/var/git/thereactivestack/react-router/node_modules/webpack/lib/Compiler.js:271:8)\nINFO [karma]: Karma v0.12.37 server started at http://localhost:9876/\nINFO [launcher]: Starting browser Chrome\nINFO [Chrome 44.0.2403 (Linux 0.0.0)]: Connected on socket k3-vXGcIA8yu4S8lLBYy with id 79713155\nChrome 44.0.2403 (Linux 0.0.0) ERROR\n  Uncaught ReferenceError: require is not defined\n  at /var/git/thereactivestack/react-router/tests.webpack.js:1\nChrome 44.0.2403 (Linux 0.0.0): Executed 0 of 0 ERROR (0.047 secs / 0 secs)\n```\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-08-01T17:45:40Z",
        "closed_at": "2015-08-10T00:31:06Z",
        "merged_at": "2015-08-10T00:31:06Z",
        "body": "Old link, https://github.com/mtscout6/react-router-bootstrap, points to the new repository.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-08-01T13:19:45Z",
        "closed_at": "2015-08-10T00:30:34Z",
        "merged_at": null,
        "body": "i was getting the error when running the examples \n\nERROR in ./examples/auth-flow/app.js\nModule build failed: SyntaxError: /react-router/examples/auth-flow/app.js: Line 73: 'this' is not allowed before super()\n\nthis fixes it and lets me run the examples.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-07-31T20:38:24Z",
        "closed_at": "2015-09-11T16:58:11Z",
        "merged_at": null,
        "body": "If I've understood everything correctly, the `history` attribute should be present in the `Router` in `client.js`.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-07-31T18:00:59Z",
        "closed_at": "2015-09-11T16:56:39Z",
        "merged_at": null,
        "body": "From eslint v1.0 standard rules disabled.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 69,
        "changed_files": 1,
        "created_at": "2015-07-30T15:06:31Z",
        "closed_at": "2015-08-10T00:36:28Z",
        "merged_at": null,
        "body": "I realize I should have read more carefully, but the example code deleted here and especially the link to [this documentation](https://github.com/rackt/react-router/blob/master/doc/00%20Guides/0%20Overview.md) threw me off for 30-40 minutes this morning.  I finally found the [up-to-date documentation](http://rackt.github.io/react-router/) - thanks.  I'm thinking you might want to remove it from the main README to help out the next person.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-07-30T12:34:07Z",
        "closed_at": "2015-07-30T22:55:30Z",
        "merged_at": "2015-07-30T22:55:30Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 415,
        "deletions": 246,
        "changed_files": 7,
        "created_at": "2015-07-29T09:58:51Z",
        "closed_at": "2015-08-11T23:41:28Z",
        "merged_at": null,
        "body": "I've seen in the docs that function passed as getComponents prop to Route was supposed to get state user is navigating to. It wasn't getting it so I passed it there.\n\nNot sure if it callback should be the first parameter and state the second. If other way around is preferable then we need to correct usage in examples as well..\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-07-28T00:23:45Z",
        "closed_at": "2015-07-30T22:54:58Z",
        "merged_at": "2015-07-30T22:54:58Z",
        "body": "Slight grammatical change to make the paragraph more understandable.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 96,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2015-07-23T22:28:26Z",
        "closed_at": "2015-07-25T21:00:37Z",
        "merged_at": null,
        "body": "I created issue #1570  a few days ago, bringing to light some confusion I have regarding nested route matching. I'm using the latest beta version of react router, and am trying to replicate what I did while using version 0.13.3 with regards to the visual and structural layout of my `Route`s.\n\nFor example, in 0.13.3 I had a `Route` tree that looked like this ...\n\n``` jsx\nexport default (\n  <Route path=\"/\" handler={ApplicationView}>\n    <Route name=\"auth\">\n      <Route name=\"signin\" handler={AuthenticationSigninView} />\n      <Route name=\"signup\" handler={AuthenticationSignupView} />\n      <Route name=\"signout\" handler={AuthenticationSignoutView} />\n    </Route>\n    <Route name=\"replay\">\n      <Route name=\"replay-detail\" path=\":id\" handler={ReplayDetailView} />\n      <DefaultRoute name=\"replay-index\" handler={ReplayIndexView} />\n    </Route>\n    <DefaultRoute handler={ReplayIndexView} />\n  </Route>\n);\n```\n\nBecause of `DefaultRoute`, I was able to structure the `Route` tree in such a way that it provided a few nice benefits ...\n1. my `Route` tree visually matched my URL structure, with proper nested indentation denoting nested URL paths\n2. the tree also visually matched the nested structure of the UI components as child components of their parent handler\n3. the `auth` and `replay` `Route`s had no `handler` but still existed to provide the URL structure and visual representation of the child-parent nestedness\n\nSo, when migrating to 1.0 it was my goal to mimic this and retain that visual consistency. First things first, `DefaultRoute` is gone, with the prevailing suggested approach being to provide a `Route` with `path=\"/\"`. Using that approach, I now have a 1.0 `Route` tree that looks like this ...\n\n``` jsx\nexport default (\n  <Router history={history}>\n    <Route component={reduxRouteComponent(store)}>\n      <Route path=\"/\" component={ApplicationView}>\n        <Route path=\"auth\">\n          <Route path=\"signin\" component={AuthenticationSigninView} />\n          <Route path=\"signup\" component={AuthenticationSignupView} />\n          <Route path=\"signout\" component={AuthenticationSignoutView} />\n        </Route>\n        <Route path=\"replay\">\n          <Route path=\"/\" component={ReplayIndexView} onEnter={handleOnEnter} />\n          <Route path=\":id\" component={ReplayDetailView} onEnter={handleOnEnter} />\n        </Route>\n      </Route>\n    </Route>\n  </Router>\n);\n```\n\nI've got the same `auth` and `replay` `Route`s, for visual structural purposes, and their nested components. With this router, the auth-related routes all work because they match an exact route and there's no ambiguity. The replay-related route with the `path=\"/\"` does not work, though. \n\nThis pull request is my attempt at adding some more tests that target this specific scenario. The path `/replay` causes the route matching code to stop right at that first `Route` component, where path literally equals \"replay\", instead of greedily going deeper and finding that there's a child that also matches that route first.\n\nAs a result, I'm forced to remove the parent `Route` and bring the child child routes out to the same level, and just give them paths like \"replay\" and \"replay/:id\". Doing this causes me to lose that visual consistency that was so nice.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 137,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-07-23T16:37:05Z",
        "closed_at": "2015-09-11T16:21:59Z",
        "merged_at": null,
        "body": "I've been migrating my app from 0.13 to 1.0 for the last few weeks. I figured I'd help out by starting to update the UPGRADE_GUIDE with the big changes I've had to do so far. This is definitely not a complete list yet - so please advise on what else needs to be added. Or go ahead and use this as a starting point and take over from here.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 41,
        "deletions": 45,
        "changed_files": 1,
        "created_at": "2015-07-22T03:25:49Z",
        "closed_at": "2015-07-30T22:57:57Z",
        "merged_at": null,
        "body": "Current \"What's it look like?\" in the readme does not reflect how react-router is used in its present version.  This pull request updates the readme to reflect functional code for react-router.\n\nExample, current readme Router:\n<img width=\"724\" alt=\"screen shot 2015-07-21 at 8 01 53 pm\" src=\"https://cloud.githubusercontent.com/assets/9373445/8817246/1a3b6b74-2fe6-11e5-9637-80f0d4ce25c9.png\">\n\nProposed updates this, and the rest of the readme.\n<img width=\"608\" alt=\"screen shot 2015-07-21 at 8 23 09 pm\" src=\"https://cloud.githubusercontent.com/assets/9373445/8817274/5e822a34-2fe6-11e5-9af0-0f08edd5083b.png\">\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-07-20T23:52:51Z",
        "closed_at": "2015-09-11T16:19:16Z",
        "merged_at": null,
        "body": "It seems to me that when someone clicks on a Link, if the current router state is the same as what the resulting router state would be after the Link is done transitioning, we should just disallow the transition to begin with.\n\nThis helps to avoid unnecessary flickering, particularly in a flux environment.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2015-07-20T22:30:06Z",
        "closed_at": "2015-08-10T00:47:10Z",
        "merged_at": null,
        "body": "When using location.query you no longer need to check if location.query is null before accessing a property.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-07-20T13:48:37Z",
        "closed_at": "2015-07-30T22:58:46Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-07-15T19:09:37Z",
        "closed_at": "2015-07-16T16:26:32Z",
        "merged_at": "2015-07-16T16:26:32Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2015-07-13T22:24:58Z",
        "closed_at": "2015-09-11T16:16:57Z",
        "merged_at": null,
        "body": "When testing a component it's easy to forget to pass the event data to `click()`\n\nIf it's left out, regular clicks would still trigger, but ReactRouter Links would not.\n\nSuggestions are welcome if I should test it better or anything.  I didn't want to document this, since it's intended just as a convenience in case someone (like me) forgets to pass event data. to `React.addons.TestUtils.Simulate.click`\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-07-12T03:12:25Z",
        "closed_at": "2015-07-16T16:27:02Z",
        "merged_at": "2015-07-16T16:27:02Z",
        "body": "includes https://github.com/r3dm/warning/pull/2 for browserify builds\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-07-10T14:39:12Z",
        "closed_at": "2015-08-10T15:14:11Z",
        "merged_at": null,
        "body": "Here is simple solution for bug #1513 of missing `router` field in context of `Link`. Critical for unit testing.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-07-09T20:54:11Z",
        "closed_at": "2015-09-11T16:14:55Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 21,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-07-06T20:28:05Z",
        "closed_at": "2015-09-11T16:13:46Z",
        "merged_at": null,
        "body": "Check if Router run was given a history class instance.\nThen setup history class instance.\nAdd history object to nextState on successful callback.\n\ncloses #1486\n",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-07-05T02:29:15Z",
        "closed_at": "2015-09-09T10:37:31Z",
        "merged_at": null,
        "body": "As a newcomer to react-router, it took me longer than I'd like to admit that my main/app component needs to include `this.props.children` in order for my links to work & render properly.  I was thrown off by the lack of inclusion of it in the readme.  I'm hoping this will help prevent others from making the same mistake. :)\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-07-04T12:27:20Z",
        "closed_at": "2015-07-13T20:00:16Z",
        "merged_at": "2015-07-13T20:00:16Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2015-07-04T06:00:36Z",
        "closed_at": "2015-07-05T17:52:31Z",
        "merged_at": null,
        "body": "Was reading through the docs, saw a couple of its/it's mistakes.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 9,
        "changed_files": 5,
        "created_at": "2015-07-04T04:05:52Z",
        "closed_at": "2015-07-10T00:32:07Z",
        "merged_at": "2015-07-10T00:32:07Z",
        "body": "<3 you guys!\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2015-07-03T12:52:39Z",
        "closed_at": "2015-08-10T00:33:42Z",
        "merged_at": null,
        "body": "The `handleError` currently gives no clue about where the error occurred. \n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 104,
        "deletions": 11,
        "changed_files": 4,
        "created_at": "2015-07-02T20:51:38Z",
        "closed_at": "2015-07-29T01:56:20Z",
        "merged_at": null,
        "body": "This is intended to fix https://github.com/rackt/react-router/issues/1441.\n\nIt's possible that you have better ideas in mind for solving this, so feel free to disregard this PR if that's the case. \n\nI pulled the path matching code into URLUtils so that they're easier to test. Maybe it's possible to re-use some of the existing pattern matching, but I didn't see an easy way.\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 72,
        "deletions": 109,
        "changed_files": 3,
        "created_at": "2015-07-02T18:23:06Z",
        "closed_at": "2015-08-26T13:01:33Z",
        "merged_at": null,
        "body": "Fix for `navigator not defined` when building isomorp... I mean universal apps. :)\n\nhttps://github.com/rackt/react-router/issues/1316\n",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 64,
        "deletions": 19,
        "changed_files": 9,
        "created_at": "2015-07-02T10:03:41Z",
        "closed_at": "2015-09-11T16:12:22Z",
        "merged_at": null,
        "body": "This PR fixes the following in the docs:\n- grammar mistakes (there might be more, I haven't read through all of the docs yet)\n- code style (add missing semicolons, remove shorthand if-statements)\n\nI noticed the source code also uses a mix of regular and shorthand if-statements. The doc fixes are in a separate commit, so it's easy to pull those out if you'd rather keep the shorthand version.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 46,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-06-30T19:12:05Z",
        "closed_at": "2015-09-11T16:11:23Z",
        "merged_at": null,
        "body": "Its probably the worst + these are the only options from what I can see in the code.\nit should be written somewhere.\n\n@mjackson @ryanflorence or anyone who has any suggestions on how to address this better?\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2015-06-30T15:42:35Z",
        "closed_at": "2015-06-30T21:34:13Z",
        "merged_at": "2015-06-30T21:34:13Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2015-06-30T03:36:00Z",
        "closed_at": "2015-06-30T21:14:45Z",
        "merged_at": null,
        "body": "Hi,all:\n\nI fix a document error about how to call HashHistory in document.\n\n`{new HashHistory}` will cause an error when we use webpack, `{new HashHistory({})}` should be better.\n\n```\n97:30  error    Missing '()' invoking a constructor  new-parens\n```\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-06-27T17:45:56Z",
        "closed_at": "2015-06-29T13:04:50Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-06-27T15:27:16Z",
        "closed_at": "2015-06-29T13:03:18Z",
        "merged_at": "2015-06-29T13:03:18Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 44,
        "deletions": 45,
        "changed_files": 23,
        "created_at": "2015-06-27T06:50:11Z",
        "closed_at": "2015-06-30T21:07:04Z",
        "merged_at": "2015-06-30T21:07:04Z",
        "body": "Instead of just updating the docs, this is an implementation for what @ryanflorence said on #1339 and @mjackson on #1426.\n\nthis PR lets you use a history singleton with `BrowserHistory` and `HashHistory`:\n\n``` js\nvar { history } = require('react-router/lib/HashHistory');\nReact.render(<Router history={ history } ... />, ...);\n```\n",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 12,
        "deletions": 5,
        "changed_files": 3,
        "created_at": "2015-06-26T19:13:49Z",
        "closed_at": "2015-06-27T06:59:15Z",
        "merged_at": null,
        "body": "tl;dr: people should not do\n\n``` js\nReact.render(<Router history={ new HashHistory } />, ...);\n```\n\nbut create a \"singleton\" history instance and call it with\n\n``` js\nvar history = new HashHistory();\nReact.render(<Router history={ history } />, ...);\n```\n\nthis PR fixes the confusion made while integrating some libraries, like [microcosm](https://github.com/vigetlabs/microcosm/) and [react-hot-loader](https://github.com/gaearon/react-hot-loader) stated [here](https://github.com/rackt/react-router/issues/1418#issuecomment-115391528).\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 5,
        "changed_files": 3,
        "created_at": "2015-06-26T06:50:15Z",
        "closed_at": "2015-06-26T17:25:08Z",
        "merged_at": "2015-06-26T17:25:08Z",
        "body": "Just so the examples are more consistent in that regard.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-06-25T19:42:42Z",
        "closed_at": "2015-06-30T21:49:46Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-06-25T14:54:59Z",
        "closed_at": "2015-06-27T00:06:54Z",
        "merged_at": "2015-06-27T00:06:54Z",
        "body": "As per comment from @devknoll in https://github.com/rackt/react-router/issues/1362\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-06-24T18:52:54Z",
        "closed_at": "2015-06-30T21:49:28Z",
        "merged_at": "2015-06-30T21:49:28Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-06-24T03:21:35Z",
        "closed_at": "2015-06-24T15:25:31Z",
        "merged_at": null,
        "body": "missing forward slash in a JSX component in async-data example.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-06-22T23:16:05Z",
        "closed_at": "2015-06-23T22:01:17Z",
        "merged_at": "2015-06-23T22:01:17Z",
        "body": "Fixed semi-colon typo in docs example code\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-06-22T09:28:10Z",
        "closed_at": "2015-06-24T15:24:06Z",
        "merged_at": "2015-06-24T15:24:06Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2015-06-22T09:09:33Z",
        "closed_at": "2015-06-24T15:23:59Z",
        "merged_at": "2015-06-24T15:23:59Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-06-22T03:43:55Z",
        "closed_at": "2015-06-24T16:17:45Z",
        "merged_at": "2015-06-24T16:17:45Z",
        "body": "Branching on state instead of props.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 344,
        "deletions": 201,
        "changed_files": 6,
        "created_at": "2015-06-20T20:45:04Z",
        "closed_at": "2015-07-16T18:52:45Z",
        "merged_at": "2015-07-16T18:52:45Z",
        "body": "See #1363 for previous discussion.\n",
        "comments": 18
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-06-20T05:34:30Z",
        "closed_at": "2015-06-24T15:25:07Z",
        "merged_at": null,
        "body": "fixed JSX syntax error in examples/async-data/app.js\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 218,
        "deletions": 144,
        "changed_files": 6,
        "created_at": "2015-06-19T17:26:32Z",
        "closed_at": "2015-06-20T20:45:55Z",
        "merged_at": null,
        "body": "This PR attempts to fix/improve the current Histories in a couple of ways:\n1. Store state in `sessionStorage` based on `key` with `BrowserHistory` as well\n2. Normalize behavior in terms of creating new history entries (part of #1031)\n3. Fix a bug with `HashHistory` ignoring hashChange after transitioning to the same path that's currently active\n\nWhile trying to do all those things, I felt like the History classes needed some refactoring. So `History` is now responsible for managing keys and state, and performing navigations.\n\nSubclasses now have to do the following:\n1. Implement `push(path, key): entry` and `replace(path, key): entry` instead of `pushState` and `replaceState`. These should only apply the given path (and optionally key) to whatever they're working with, but not call `this._notifyChange` or set `this.location`\n2. For pop events, instead of setting up `this.location` and calling `this._notifyChange` themselves, they now have to call `this.handlePop(path, entry)`\n3. Initial location is now set in `setup()` by calling `super.setup(path, entry)`, after which `this.location` can be safely read\n\nThe (optional) `entry` object will be merged into `state`, allowing subclasses to pass arbitrary information to the user based on the current entry. It's also used to signal `History` that `key` (and thus `state`) is supported. In the future, we could add additional props like that, such as `current` and `length`.\n\nAlso, I had to change the scrolling test to include timeouts; otherwise, the hashchange event timings would have been off, I think. Not sure why I couldn't reproduce this with the old code (not exactly fun to debug :smile:). Anyway, as far as I can tell, the scrolling didn't even work before and the test passed due to native browser scrolling (which is still the case..).\n\nLet me know what you think; I'm also open to applying these changes to the old API if you don't agree with them.\n\n@mjackson @ryanflorence @gaearon\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2015-06-19T07:47:22Z",
        "closed_at": "2015-06-19T13:35:01Z",
        "merged_at": "2015-06-19T13:35:01Z",
        "body": "I'm always annoyed when clicking these links and the route to:\n\nhttp://rackt.github.io/react-router/#TODO\n\n.... so I fixed them. \n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 43,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-06-18T22:35:16Z",
        "closed_at": "2015-09-11T16:06:02Z",
        "merged_at": null,
        "body": "As per a conversation in Slack with @mjackson.\n\nI'm not positive if the expected behavior of the second test is correct. Note that the test, as written, passes if the `<Redirect />` is moved up one line (to be directly under `<Router />`).\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 18,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-06-18T21:24:14Z",
        "closed_at": "2015-06-19T06:33:53Z",
        "merged_at": "2015-06-19T06:33:53Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-06-18T19:23:45Z",
        "closed_at": "2015-06-19T07:05:39Z",
        "merged_at": null,
        "body": " On browser load, when having an onEnter event with a redirect on the transition prevLocation is null, so assume we don't want to update the scroll position.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-06-18T16:25:19Z",
        "closed_at": "2015-06-18T19:04:24Z",
        "merged_at": "2015-06-18T19:04:24Z",
        "body": "`<Link>` is used but never imported.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-06-18T14:13:21Z",
        "closed_at": "2015-06-18T19:04:38Z",
        "merged_at": "2015-06-18T19:04:38Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2015-06-18T13:50:28Z",
        "closed_at": "2015-06-18T19:05:07Z",
        "merged_at": "2015-06-18T19:05:07Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2015-06-18T10:31:41Z",
        "closed_at": "2015-06-18T19:06:08Z",
        "merged_at": "2015-06-18T19:06:08Z",
        "body": "IE8 gives an error:\n\n> Object doesn't support this property or method\n\nIt is fixed by the use of `detachEvent`.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2015-06-18T06:44:48Z",
        "closed_at": "2015-06-18T19:06:23Z",
        "merged_at": "2015-06-18T19:06:23Z",
        "body": "`history={HashHistory}` should be `history = {new HashHistory()}`\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2015-06-17T22:11:31Z",
        "closed_at": "2015-06-18T19:06:56Z",
        "merged_at": null,
        "body": "http://rackt.github.io/react-router/tags/v1.0.0-beta2.html#Overview\nThe 'new' keyword for instantiating HashHistory is missing in the examples.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-06-17T19:44:53Z",
        "closed_at": "2015-06-18T19:33:04Z",
        "merged_at": "2015-06-18T19:33:04Z",
        "body": "Added the missing new keyword to HashHistory\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 83,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-06-16T19:48:42Z",
        "closed_at": "2015-09-11T13:12:54Z",
        "merged_at": null,
        "body": "In reference to issue #1317 \n\nFails as of 285a61f\n\nWhen transitioning from `/grandparent/parentB/child` to `/grandparent/parentA`, it calls `Grandparent.routerWillLeave`, which it should not.\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2015-06-16T15:21:59Z",
        "closed_at": "2015-06-16T17:18:19Z",
        "merged_at": null,
        "body": "Move props into `if`.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 14,
        "changed_files": 7,
        "created_at": "2015-06-16T14:56:13Z",
        "closed_at": "2015-06-17T02:15:02Z",
        "merged_at": "2015-06-17T02:15:02Z",
        "body": "This commit normalizes the way we export history classes. Instead of automatically creating a new Browser/HashHistory for people when they require the module, we just export the class like we do with History and MemoryHistory.\n\nThis gives us a few things:\n- We don't have to explain to people that they need to `import { HashHistory }` in order to create their own HashHistory.\n- We don't require people using CommonJS to `var HashHistory = require('react-router/lib/HashHistory').default`, which sucks\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-06-16T06:32:04Z",
        "closed_at": "2015-06-17T02:14:03Z",
        "merged_at": "2015-06-17T02:14:03Z",
        "body": "closes #1318\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2015-06-15T18:18:57Z",
        "closed_at": "2015-06-16T01:35:50Z",
        "merged_at": null,
        "body": "Currently makePath accepts string queries. This commit allows them in isActive as well.\n\nWill add a test a bit later. Please don't merge yet.\n\nAlso, docs will be updated after https://github.com/rackt/react-router/pull/1311 is merged.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 7,
        "changed_files": 3,
        "created_at": "2015-06-15T17:02:14Z",
        "closed_at": "2015-06-18T19:33:44Z",
        "merged_at": "2015-06-18T19:33:44Z",
        "body": "Looks like replacing `location.query` with `location.state` was incomplete.\n\nAlso fixed `Link`'s property name in docs (`s/href/to`) and examples in its doc comments.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2015-06-15T05:33:20Z",
        "closed_at": "2015-06-16T01:36:21Z",
        "merged_at": "2015-06-16T01:36:20Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-06-15T04:00:58Z",
        "closed_at": "2015-06-16T02:05:41Z",
        "merged_at": "2015-06-16T02:05:41Z",
        "body": "I'm presuming that's supposed to be 'really'.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-06-15T01:35:20Z",
        "closed_at": "2015-06-15T03:06:43Z",
        "merged_at": "2015-06-15T03:06:43Z",
        "body": "warning is not import\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-06-14T19:21:32Z",
        "closed_at": "2015-06-15T03:00:31Z",
        "merged_at": "2015-06-15T03:00:31Z",
        "body": "based in the example it seems like this should be `RootRoute.indexRoute` instead of `RootRoute.defaultRoute`.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2015-06-12T22:08:42Z",
        "closed_at": "2015-06-15T03:00:47Z",
        "merged_at": "2015-06-15T03:00:47Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-06-12T20:23:41Z",
        "closed_at": "2015-06-14T12:08:36Z",
        "merged_at": "2015-06-14T12:08:35Z",
        "body": "The documentation website is a pain to navigate on iOS otherwise\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 46,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2015-06-12T19:30:59Z",
        "closed_at": "2015-06-19T13:40:37Z",
        "merged_at": "2015-06-19T13:40:37Z",
        "body": "It renders differently on the server because the url on server is stripped by nginx and it is not an active route.\n",
        "comments": 13
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-06-12T16:22:36Z",
        "closed_at": "2015-06-12T17:49:09Z",
        "merged_at": "2015-06-12T17:49:09Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-06-12T08:22:14Z",
        "closed_at": "2015-06-12T14:29:22Z",
        "merged_at": "2015-06-12T14:29:22Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-06-12T06:57:02Z",
        "closed_at": "2015-06-12T14:29:44Z",
        "merged_at": "2015-06-12T14:29:44Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-06-11T12:38:17Z",
        "closed_at": "2015-06-12T14:30:10Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-06-10T23:09:49Z",
        "closed_at": "2015-06-12T14:31:17Z",
        "merged_at": "2015-06-12T14:31:17Z",
        "body": "Per bower/bower.json-spec@a325da3\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-06-10T22:54:06Z",
        "closed_at": "2015-06-11T23:10:34Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-06-10T17:02:56Z",
        "closed_at": "2015-06-12T14:33:01Z",
        "merged_at": null,
        "body": "fix: typo\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 88,
        "deletions": 35,
        "changed_files": 10,
        "created_at": "2015-06-06T05:34:18Z",
        "closed_at": "2015-06-12T14:33:08Z",
        "merged_at": null,
        "body": "pinterest example almost works now, just need to\nadd the omitted path searching to the route\nmatching.\n\nthis isn\u2019t sending the state to transition hooks\nbut totally should\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 263,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2015-06-05T21:47:41Z",
        "closed_at": "2015-09-11T13:07:12Z",
        "merged_at": null,
        "body": "It's often desirable to transition to a new state changing only a single\npart of the URL. This is currently cumbersome as Router.transitionTo and\nRouter.replaceWith both require the full state of the new URL.\n\nRouter#transitionToMixin and Router#replaceWithMixin are identical to\ntheir non-Mixin siblings, however, they use the current router state,\naugmenting it with the provided values.\n\nThese new methods are also exposed on the Navigation mixin.\n\nFor example using the current Navigation and State mixins:\n\n```\n// before\nvar query = this.getQuery();\nquery.sortDir = 'desc';\nthis.replaceWith(\n  this.getPathname(),\n  this.getParams(),\n  query\n);\n\n// after\nthis.replaceWithMixin(null, null, { sortDir: 'desc' });\n```\n\nIssue: #378\n",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-06-05T14:36:29Z",
        "closed_at": "2015-06-12T14:36:13Z",
        "merged_at": null,
        "body": "Avoid use of ES6 class getter to fix IE8\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 7,
        "changed_files": 3,
        "created_at": "2015-06-04T23:44:36Z",
        "closed_at": "2015-06-19T06:19:34Z",
        "merged_at": null,
        "body": "This changes the behavior of `PathUtils.injectParams`. I'm not sure if there was some important reasoning behind preserving a `/` in a path component, but it seems to me that it would break reloading unless the pattern in question was a splat.\n\nThat is, given a pattern like `/foo/:id/bar`, if `id` is set to `baz/qux`, then before this patch the final URL would be `/foo/baz/qux/bar`. Upon reload, the pattern would fail to match and the router would 404. With this patch, the URL ends up being `/foo/baz%2Fqux/bar`, which correctly matches the pattern.\n\nThe API-facing behavior remains unchanged.\n\nThis fixes #1264 and #1128.\n",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 18,
        "deletions": 21,
        "changed_files": 1,
        "created_at": "2015-06-04T21:35:08Z",
        "closed_at": "2015-06-12T14:38:40Z",
        "merged_at": null,
        "body": "I know you guys are still working on the rewrite, I just wanted to make this example work again :)\n\nThanks\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2015-06-04T10:16:03Z",
        "closed_at": "2015-06-12T14:39:10Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-06-04T09:47:21Z",
        "closed_at": "2015-06-12T14:39:54Z",
        "merged_at": "2015-06-12T14:39:54Z",
        "body": "the last one's size is not the same with others's\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2557,
        "deletions": 2482,
        "changed_files": 4,
        "created_at": "2015-06-02T20:01:03Z",
        "closed_at": "2015-08-10T00:44:56Z",
        "merged_at": null,
        "body": "Use `hasOwnProperty` from `{}` instead of from `qs` object.\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2015-06-02T00:34:55Z",
        "closed_at": "2015-06-02T02:30:11Z",
        "merged_at": null,
        "body": "This matches [React convention since 0.11](https://facebook.github.io/react/blog/2014/07/17/react-v0.11.html#rendering-to-null) so routes may be specified like this:\n\n```\n    <Route name=\"landing\" path=\"/\" handler={ LandingRoute }>,\n    (\n      config.env === 'development'\n      && <Route name=\"styleguide\" handler={ StyleGuideRoute } />\n    ),\n    <NotFoundRoute handler={ NotFound } />\n```\n\nIn regular React, they'll be rendered as `<noscript>` but will eventually be skipped altogether. In react-router, they'll simply be ignored during iteration.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 71,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2015-06-01T19:59:15Z",
        "closed_at": "2015-06-13T23:45:10Z",
        "merged_at": null,
        "body": "My questions from the referenced issue regarding the testing still stands. The tests for the mixins already cover the functionality. Maybe just check for the existence of the relevant props?\n\nMy first contribution, yay! \u263a\ufe0f\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-05-31T16:06:56Z",
        "closed_at": "2015-06-12T14:44:16Z",
        "merged_at": "2015-06-12T14:44:16Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 154,
        "deletions": 0,
        "changed_files": 4,
        "created_at": "2015-05-24T02:55:15Z",
        "closed_at": "2015-09-11T13:04:58Z",
        "merged_at": null,
        "body": "Hey,\n\nthis is based on the \"animations\" example. It goes further by adding nested routes that are animated as well. I think it is worth a separate example as making this work is not as simple as combining examples for animation and examples for nesting. I had a hard time figuring it out, and this issue is not uncommon (https://github.com/rackt/react-router/issues/1129, https://github.com/rackt/react-router/issues/874).\n\nThe interesting bit:\n\n``` javascript\nvar App = React.createClass({\n  render() {\n    // Only take the first-level part of the path as key, instead of the whole path.\n    var pathname = this.props.location.pathname;\n    var key = pathname.split('/')[1] || 'root';\n\n    return (\n      <CSSTransitionGroup component=\"div\" transitionName=\"swap\">\n        {cloneElement(this.props.children || <div/>, { key: key })}\n      </CSSTransitionGroup>\n    );\n  }\n});\n```\n\nThis approach is similar to the one described in [this blog post](http://unitstep.net/blog/2015/03/03/using-react-animations-to-transition-between-ui-states/). I'm not sure how much of a hack that is, but it works! \n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-05-23T20:32:01Z",
        "closed_at": "2015-05-27T01:20:39Z",
        "merged_at": "2015-05-27T01:20:39Z",
        "body": "The new location is https://github.com/react-bootstrap/react-router-bootstrap\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2015-05-23T19:20:30Z",
        "closed_at": "2015-05-27T01:20:53Z",
        "merged_at": "2015-05-27T01:20:53Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-05-22T01:39:21Z",
        "closed_at": "2015-05-27T01:21:47Z",
        "merged_at": "2015-05-27T01:21:47Z",
        "body": "Fixes #1218 - Docs font-family declaration misspelling of monospace.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-05-21T14:40:56Z",
        "closed_at": "2015-09-11T13:03:47Z",
        "merged_at": null,
        "body": "In browser loaders are becoming popular, and the added config, adds support for importing react-router with steal.js (and systemjs)\n",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 96,
        "deletions": 7,
        "changed_files": 2,
        "created_at": "2015-05-21T00:49:37Z",
        "closed_at": "2015-05-24T05:46:52Z",
        "merged_at": null,
        "body": "This allows to inject a custom \"route handler\" (hah!). This is a useful hook to render something different from react-router's default call to `React.createElement`. This method will be called for every component on every step of the route tree and it can conditionally return a `ReactElement`. This is useful when building an application with Relay.\n\nActual Code Example:\n\n``` js\nfunction render(component, {params, route}) {\n  var {name, queries, component} = route;\n  if (name && queries && Relay.isContainer(component)) {\n    return (\n      <RelayRootContainer\n        Component={component}\n        route={{name, params, queries}}\n      />\n    );\n  }\n}\n\nvar routes = (\n  <Route component={Root} render={render}>\n    <Route \u2026>\n      <Route name=\"app\" component={App} queries={{\u2026}} />\n      <Route name=\"profile\" component={Profile} queries={{\u2026}} />\n      <Route name=\"events\" component={Events} queries={{\u2026}} />\n    </Route>\n  </Route>\n);\n```\n\nThe application code is not affected by this; components will just receive `this.props.children`.\n\nIt is possible that such a render function might be useful on more steps than just the top level. In this case I would consider changing my code to walk up the matched route tree and select the first render method that is defined. If we do this, we might also want to consider walking up the matched route tree and calling all render methods (closest ones first) until one of them renders to an element.\n",
        "comments": 15
    },
    {
        "merged": false,
        "additions": 287,
        "deletions": 245,
        "changed_files": 3,
        "created_at": "2015-05-21T00:06:34Z",
        "closed_at": "2015-06-12T14:49:30Z",
        "merged_at": null,
        "body": "",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 120,
        "deletions": 136,
        "changed_files": 12,
        "created_at": "2015-05-20T15:18:39Z",
        "closed_at": "2015-05-27T01:07:01Z",
        "merged_at": null,
        "body": "**WORK IN PROGRESS, DO NOT MERGE**\n\nThis PR is a work-in-progress bringing scroll position save and restore to the 1.0 branch.\n",
        "comments": 11
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2015-05-19T20:16:40Z",
        "closed_at": "2015-06-14T12:08:14Z",
        "merged_at": "2015-06-14T12:08:14Z",
        "body": "https://facebook.github.io/react/blog/2015/03/10/react-v0.13.html\nhttps://facebook.github.io/react/docs/component-api.html#getdomnode\n",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-05-18T23:32:48Z",
        "closed_at": "2015-06-12T14:50:51Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-05-15T20:07:04Z",
        "closed_at": "2015-05-17T00:33:25Z",
        "merged_at": "2015-05-17T00:33:25Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-05-14T00:11:32Z",
        "closed_at": "2015-05-17T01:16:42Z",
        "merged_at": "2015-05-17T01:16:42Z",
        "body": "Document the `<Link params={user} />` functionality added in #231\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 285,
        "deletions": 213,
        "changed_files": 4,
        "created_at": "2015-05-12T11:50:57Z",
        "closed_at": "2015-06-12T14:56:40Z",
        "merged_at": null,
        "body": "Fix for https://github.com/rackt/react-router/issues/1178\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-05-11T23:04:24Z",
        "closed_at": "2015-05-17T01:12:49Z",
        "merged_at": "2015-05-17T01:12:49Z",
        "body": "Teeny grammar fix\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-05-11T02:11:33Z",
        "closed_at": "2015-06-12T15:01:47Z",
        "merged_at": "2015-06-12T15:01:47Z",
        "body": "\u2026oves warning\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-05-09T12:16:58Z",
        "closed_at": "2015-05-09T15:00:21Z",
        "merged_at": "2015-05-09T15:00:21Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-05-09T03:04:40Z",
        "closed_at": "2015-05-09T05:26:44Z",
        "merged_at": "2015-05-09T05:26:44Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-05-09T02:59:27Z",
        "closed_at": "2015-05-09T05:27:00Z",
        "merged_at": "2015-05-09T05:27:00Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2015-05-08T19:24:13Z",
        "closed_at": "2015-06-13T19:04:13Z",
        "merged_at": null,
        "body": "I'm not really sure where the best place to put this test was, but when mocking out my Router during testing I ran into this:\n\n```\nTypeError: Cannot read property 'some' of undefined\n        at Array.some (native)\n```\n\nSince `state` is private to the closure of `createRouter`, it can't be mocked out. This PR sets a default for `activeRoutes` to be an empty array to account for this.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 17,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2015-05-07T14:09:35Z",
        "closed_at": "2015-06-19T00:12:48Z",
        "merged_at": null,
        "body": "Fixes #1099. Tests included.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2015-05-06T20:44:44Z",
        "closed_at": "2015-05-09T05:30:47Z",
        "merged_at": null,
        "body": "#1162\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3668,
        "deletions": 4000,
        "changed_files": 136,
        "created_at": "2015-05-06T06:54:43Z",
        "closed_at": "2015-06-12T06:23:18Z",
        "merged_at": "2015-06-12T06:23:18Z",
        "body": "**NOTE: DO NOT MERGE YET**\n\nThis PR is a complete rewrite of the router with the following goals in mind:\n- simpler top-level API with less boilerplate\n- async route config and/or component loading (better support for code splitting in large apps)\n- simpler API for server-side rendering\n- more React-like `<RouteHandler>` API\n- easier data fetching API\n\n... and a bunch of other stuff that we've learned from various issues over the past year.\n\nHere's a summary of the various things you can do:\n### Top-level API\n\n``` js\nvar { createRouter, Route } = require('react-router');\n\nvar Router = createRouter(\n  <Route component={App}>\n    <Route name=\"home\" component={Home}/>\n  </Route>\n);\n\n// The minimal client-side API requires you to pass a history object to your router.\nvar BrowserHistory = require('react-router/lib/BrowserHistory');\nReact.render(<Router history={BrowserHistory}/>, document.body);\n\n// On the server, you need to run the request path through the router\n// first to figure out what props it needs. This also works well in testing.\nRouter.match('/the/path', function (error, props) {\n  React.renderToString(<Router {...props}/>);\n});\n```\n\nThe `props` arg here contains 4 properties:\n- `location`: the current `Location` (see below)\n- `branch`: an array of the routes that are currently active\n- `params`: the URL params\n- `components`: an array of components (classes) that are going to be rendered to the page (see below for component loading)\n\nThe `branch` and `components` are particularly useful for fetching data, so you could do something like this:\n\n``` js\nBrowserHistory.listen(function (location) {\n  Router.match(location, function (error, props) {\n    // Fetch data based on what route you're in.\n    fetchData(props.branch, function (data) {\n      // Use higher-order components to wrap the ones that we're gonna render to the page.\n      wrapComponentsWithData(props.components, data);\n      React.render(<Router {...props}/>, document.body);\n    });\n  });\n});\n```\n\nInside your `App` component (or any component in the hierarchy) you use `this.props.children` instead of `<RouteHandler>` to render your child route handler. This eliminates the need for `<RouteHandler>`, context hacks, and `<DefaultRoute>` since you can now choose to render something else by just checking `this.props.children` for truthiness.\n\n`<NotFoundRoute>` has also been removed in favor of just using `<Route path=\"*\">`, which does the exact same thing.\n### Non-JSX Config\n\nYou can provide your route configuration using plain JavaScript objects; no JSX required. In fact, all we do is just strip the props from your JSX elements under the hood to get plain objects from them. So JSX is purely sugar API.\n\n``` js\nvar Router = createRouter(\n  {\n    component: App,\n    childRoutes: [{\n      name: 'home',\n      component: Home\n    }]\n  }\n);\n```\n\nNote the use of `childRoutes` instead of `children` above. If you need to load more route config asynchronously, you can provide a `getChildRoutes(callback)` method. For example, if you were using [webpack's code splitting feature](http://webpack.github.io/docs/code-splitting.html) you could do:\n\n``` js\nvar Router = createRouter(\n  {\n    component: App,\n    getChildRoutes(callback) {\n      require.ensure([ './HomeRoute' ], function (require) {\n        callback(null, [ require('./HomeRoute') ]); // args are error, childRoutes\n      }\n    }\n  }\n);\n```\n\nWhich brings me to my next point ...\n### Gradual Path Matching\n\nSince we want to be able to load route config on-demand, we can no longer match the deepest route first. Instead, we start at the top of the route hierarchy and traverse downwards until the entire path is consumed by a branch of routes. This works fine in most cases, but _it makes it difficult for us to nest absolute paths_, obviously.\n\nOne solution that @ryanflorence proposed was to let parent routes essentially specify a function that would return `true` or `false` depending on whether or not that route thought it could match the path in some grandchild. So, e.g. you would have something like:\n\n``` js\nvar Router = createRouter(\n  {\n    path: '/home',\n    component: Home,\n    childRouteCanMatch(path) {\n      return (/^\\/users\\/\\d+$/).test(path);\n    },\n\n    // keep in mind, these may be loaded asynchronously\n    childRoutes: [{\n      path: '/users/:userID',\n      component: UserProfile\n    }]\n  }\n);\n```\n\nNow, if the path were something like `/users/5` the router would know that it should load the child routes of `Home` because one of them probably matches the path. This hasn't been implemented yet, but I thought I'd mention it here for discussion's sake.\n### Async Component Loading\n\nAlong with on-demand loading of route config, you can also easily load components when they are needed.\n\n``` js\nvar Router = createRouter(\n  {\n    path: '/home',\n    getComponents(callback) {\n      require.ensure([ './Home' ], function (require) {\n        callback(null, require('./Home')); // args are error, component(s)\n      }\n    }\n  }\n);\n```\n### Rendering Multiple Components\n\nRoutes may render a single component (most common) or multiple. Similar to `ReactChildren`, if `components` is a single component, `this.props.children` will be a single element. In order to render multiple components,  `components` should be an object that is keyed with the name of a prop to use for that element.\n\n``` js\nvar App = React.createClass({\n  render() {\n    var { header, sidebar } = this.props;\n    // ...\n  }\n});\n\nvar Router = createRouter(\n  {\n    path: '/home',\n    component: App,\n    childRoutes: [{\n      path: 'news',\n      components: { header: Header, sidebar: Sidebar }\n    }]\n  }\n);\n```\n\nNote: When rendering multiple child components, `this.props.children` is `null`. Also, arrays as children are not allowed.\n### Props\n\nAside from `children`, route components also get a few other props:\n- `location`: the current `Location` (see below)\n- `params`: the URL params\n- `route`: the route object that is rendering that component\n### Error/Update Handling\n\nThe router also accepts `onError` and `onUpdate` callbacks that are called when there are errors or when the DOM is updated.\n### History/Location API\n\nEverything that used to be named `*Location` is now called `*History`. A history object is a thing that emits `Location` objects as the user navigates around the page. A `Location` object is just a container for the `path` and the `navigationType` (i.e. push, replace, or pop).\n\nHistory objects are also much more powerful now. All have a `go(n)` implementation, and `HTML5History` and `History` (used mainly for testing) have reliable `canGo(n)` implementations.\n\nThere is also a `NativeHistory` implementation that should work on React Native, tho it's a little tricky to get it working ATM.\n### Transition Hooks\n\nThe `willTransitionTo` and `willTransitionFrom` transition hooks have been removed in favor of more fine-grained hooks at both the route and component level. The transition hook signatures are now:\n- `route.onLeave(router, nextState)`\n- `route.onEnter(router, nextState)`\n\nTransition hooks still run from the leaf of the branch we're leaving, up to the common parent route, and back down to the leaf of the branch we're entering, in that order. Additionally, component instances may register hook functions that can be used to observe and/or prevent transitions when they need to using the new `Transition` mixin. Component instance-level hooks run before route hooks.\n\n``` js\nvar { Transition } = require('react-router');\n\nvar MyComponent = React.createClass({\n  mixins: [ Transition ],\n  transitionHook(router) {\n    if (this.refs.textInput.getValue() !== '' && prompt('Are you sure?'))\n      router.cancelTransition();\n  },\n  componentDidMount() {\n    this.addTransitionHook(this.transitionHook);\n  },\n  componentWillUnmount() {\n    this.removeTransitionHook(this.transitionHook);\n  },\n  render() {\n    return (\n      <div>\n        <input ref=\"textInput\" type=\"text\"/>\n      </div>\n    );\n  }\n});\n```\n\nAnyway, apologies for the long-winded PR, but there's a lot of stuff here! Please keep comments small and scoped to what we're doing here. I'd hate for this to turn into a huge thread :P\n\nEdit: Added data-loading example.\nEdit: Added transition hooks.\nEdit: Added props for named children, disallow arrays.\nEdit: Added `addTransitionHook`/`removeTransitionHook` API.\nEdit: Renamed `Router.run` => `Router.match`\nEdit: Removed static transition hooks\n\nStuff we still need:\n\nOk. Stuff we still need here:\n- [ ] Support absolute paths inside nested UI somehow in new path matching algorithm\n- [x] ~~Move routerWillLeave hook to instance lifecycle method instead of static~~ Add component-level API for observing/preventing transitions\n- [x] Add back scroll history support (@gaearon can you help w/ this?)\n- [ ] Maybe remove `canGo(n)` support (@taurose can you help determine if the current impl. is legit or not? if not, let's just remove it)\n\nCOME ON! LET'S GET THIS MERGED AND SHIP 1.0!!!!\n",
        "comments": 141
    },
    {
        "merged": false,
        "additions": 18,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2015-05-04T10:42:31Z",
        "closed_at": "2015-06-12T17:47:25Z",
        "merged_at": null,
        "body": "1. Fix typo \"pefect fit\" to \"perfect fit\".\n2. I think we should adding `<RouteHandler/>` into Inbox so we can render Message properly (which users may forget to add).\n3. I think we should adding semi-colons at the end of return().\n4. Once we start to use ES6, I think we should keeping its consistency on document, so I replaced some function definition with ES6 function shorthand.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2015-04-30T06:37:01Z",
        "closed_at": "2015-05-17T01:16:11Z",
        "merged_at": null,
        "body": "This use of an ES6 getter was being transpiled into `Object.defineProperty()`, which throws an error in IE8 when creating a router.\n\nThis simply avoids the use of the getter with a minimal change. It seems that the `needsDOM` property is only used once in the codebase. Perhaps use an `instanceof` check instead?\n",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 255,
        "deletions": 0,
        "changed_files": 5,
        "created_at": "2015-04-28T11:37:34Z",
        "closed_at": "2015-05-17T01:08:58Z",
        "merged_at": null,
        "body": "This PR adds feature to prevent rendering current route handler and then to render not-found route handler in transition hooks.\n\n``` javascript\n\nclass SomeComponent extends React.Component {\n  static willTransitionTo(transition, params, query, callback) {\n    fetchUser(params.userId).then((status, res)=> {\n      if (status === 404) {\n        transition.notFound();\n      } else {\n         // ...\n      }\n    });\n  }\n}\n```\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2015-04-26T00:16:26Z",
        "closed_at": "2015-06-12T17:47:51Z",
        "merged_at": null,
        "body": "... also made the README more understandable\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 78,
        "deletions": 10,
        "changed_files": 4,
        "created_at": "2015-04-24T17:56:29Z",
        "closed_at": "2015-05-27T01:26:24Z",
        "merged_at": null,
        "body": "IS NOT COMPLETE!!! DO NOT MERGE!!!\n\nThis is basic PR for plugin support.\nPlugin is an object that contains hook-methods. This PR contains `PluginDispatcher` that handles such hooks:\n- `validateParams` - method that checks if extracted params are valid. If some plugin reports that they are invalid then `Match` will continue lookup for route.\n- `transformMatch` - method that can change or replace `Match` instance.\n\nThere is new method on router `plug` and plugin can be registered this way:\n\n``` javascript\nvar router = new Router({/* options here */});\nrouter.plug(Constraints);\nrouter.plug(ExtraParams);\n```\n\nIf this feature can be accepted then I will continue with documentation, tests etc.\n\nBelow are some examples of plugins.\n\n**Constraints plugin**\n\nChecks if extracted params match regexps specified in `constraints` prop of route (and its parents).\n\n``` javascript\nvar ConstraintsPlugin = {\n  validateParams(params, route, pathname) {\n    while (route) {\n      let {constraints} = route.options;\n\n      if (constraints) {\n        let hasError = Object.keys(constraints).some((paramName)=> {\n          return params.hasOwnProperty(paramName) && !constraints[paramName].test(params[paramName]);\n        });\n\n        if (hasError) {\n          return false;\n        }\n      }\n\n      route = route.parent;\n    }\n\n    return true;\n  }\n}\n\nvar routes = (\n  <Route handler=\"App\">\n    <DefaultRoute handler={Home} />\n    <Route path=\"user/:userId\" constraints={{userId: /^\\d+$/}} handler=\"User\">\n      <DefaultRoute handler=\"UserInfo\" />\n      <Route path=\":assetType\" constraints={{assetType: /^(video|audio)$/}} handler={UserMedia} />\n      <Route path=\"dashboard\" handler={UserDashboard} />\n    </Route>\n    <NotFoundRoute handler={NotFound} />\n  </Route>\n);\n\nrouter.plug(ConstraintsPlugin);\n```\n\n**ExtraParams plugin**\n\nExtends matched params with additional data specified in `extra` prop of route\n\n``` javascript\nvar ExtraParamsPlugin = {\n  transformMatch(match) {\n    for (let i = 0; i < match.routes.length; i++) {\n      let {extra} = match.routes[i].options;\n\n      if (extra) {\n        match.params = Object.assign({}, extra, match.params);\n      }\n    };\n\n    return match;\n  }\n}\n\nvar routes = (\n  <Route handler=\"App\">\n    <DefaultRoute handler={Home} />\n    <Route path=\"me\" extra={{own: true}} handler={User} />\n    <Route path=\"user/:userId\" handler=\"User\" />\n    <NotFoundRoute handler={NotFound} />\n  </Route>\n);\n\nrouter.plug(ExtraParamsPlugin);\n```\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-04-22T16:22:43Z",
        "closed_at": "2015-05-17T01:11:42Z",
        "merged_at": "2015-05-17T01:11:42Z",
        "body": "fix link to Router.create\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-04-21T18:04:15Z",
        "closed_at": "2015-05-17T01:11:11Z",
        "merged_at": null,
        "body": "First One:\n\nERROR in ./examples/auth-flow/app.js\nModule build failed: SyntaxError:\n/Users/erik/towbook/react-router/examples/auth-flow/app.js: Line 73:\n'this' is not allowed before super()\n\nSecond:\n\nERROR in ./examples/auth-flow/app.js\nModule build failed: SyntaxError:\n/Users/erik/towbook/react-router/examples/auth-flow/app.js: Line 73:\n'this' is not allowed before super()\n\nRunning on node v0.12.2\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2015-04-20T14:46:24Z",
        "closed_at": "2015-06-12T17:48:46Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-04-16T03:50:16Z",
        "closed_at": "2015-04-17T15:57:41Z",
        "merged_at": null,
        "body": "",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-04-15T20:53:01Z",
        "closed_at": "2015-05-17T01:15:40Z",
        "merged_at": null,
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2015-04-15T19:12:26Z",
        "closed_at": "2015-05-27T11:47:25Z",
        "merged_at": "2015-05-27T11:47:25Z",
        "body": "Not sure if I am missing some syntax here or get/set methods on a different version of node, but my impl required this tweak.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2015-04-13T17:53:53Z",
        "closed_at": "2015-05-14T12:39:16Z",
        "merged_at": null,
        "body": "In my case, this fixes #1022 and #1040\n",
        "comments": 15
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-04-13T10:18:34Z",
        "closed_at": "2015-05-17T01:14:11Z",
        "merged_at": "2015-05-17T01:14:11Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2015-04-12T17:48:50Z",
        "closed_at": "2015-04-12T21:13:18Z",
        "merged_at": "2015-04-12T21:13:18Z",
        "body": "Hello,\n\nIf you want to test an element with `<RouteHandler />` component in it, you need in additional the `routeDepth` into `stubRouterContext`.\n\nI don't know the side effects but this was proposed by @taurose in the issue I have created: https://github.com/rackt/react-router/issues/1055\n\nBest.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-04-04T07:24:17Z",
        "closed_at": "2015-05-17T01:13:09Z",
        "merged_at": "2015-05-17T01:13:09Z",
        "body": "Update copyright date to reflect current year (2015)\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2015-04-02T19:52:47Z",
        "closed_at": "2015-06-12T17:49:24Z",
        "merged_at": null,
        "body": "Including ReactCSSTransitionGroup directly from react/lib/ReactCSSTransitionGroup causes intermittent bugs which prevent enter animations from behaving properly in some cases.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2015-04-02T05:32:38Z",
        "closed_at": "2015-05-27T11:46:06Z",
        "merged_at": "2015-05-27T11:46:06Z",
        "body": "Tiny swap to bring docs up to date.\n\nHey, it's something!\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 76,
        "deletions": 36,
        "changed_files": 6,
        "created_at": "2015-04-01T15:45:20Z",
        "closed_at": "2015-06-20T20:47:36Z",
        "merged_at": null,
        "body": "This PR does two things:\n1. Always dispatch even if the path is the same as the one that was rendered last. \n2. Normalize behavior of Location push/replace in order to \n   - not create an additional history entry if path has not changed (HistoryLocation and TestLocation)\n   - trigger refresh (new LocationAction type) even if path has not changed (currently HashLocation just ignores those)\n\nFor 1), I needed to update some tests to avoid recursion loops and adapt to the new behavior of causing more dispatches.\n\nFor 2), it would have also been possible to implement that in `Router.transitionTo/replaceWith`. I opted for changing the locations because the changes actually handle two different problems as outlined above. So it seems more logical to me to normalize them this way, instead of having the router work around those discrepancies.\n\nNotes:\n- this will make it so that aborting a transition will cause the previously rendered route to be refreshed\n- edge case for HashLocation: using browser navigation to go back or forward (multiple steps) to the same path that's currently active will not trigger a refresh, since this won't trigger the hashchange event\n\nFixes #826 and #1027 \n\nWould be great if someone could look over this :)\n",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 43,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2015-03-30T03:20:55Z",
        "closed_at": "2015-06-13T19:06:52Z",
        "merged_at": null,
        "body": "this commit adds a utility method to check for the terminal active route by name.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 75,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2015-03-26T18:44:30Z",
        "closed_at": "2015-06-12T17:56:11Z",
        "merged_at": null,
        "body": "This usage is arguably a corner case, and there are plenty of ways of working around it (some of which are maybe better and more idiomatic), but the resulting bug from this usage was unexpected to me.\n\nGiven the following contrived example component:\n\n``` javascript\nclass SomeComponent extends React.Component {\n  render() {\n    const leafRoute = this.context.router.getCurrentRoutes().pop();\n    // ... does some leafRoute-dependent something-or-other\n  }\n}\n```\n\nWhen another component in the same render cycle happens to want router state:\n\n``` javascript\nclass SomeOtherComponent extends React.Component {\n  render() {\n    const matchedRouteCount = this.context.router.getCurrentRoutes().length;\n    console.log(matchedRouteCount);  // Uh oh, this is now n - 1, thanks to SomeComponent!\n  }\n}\n```\n\nThis PR includes a new suite of simple tests for demonstrating the problem, as well as a naive solution.\n\nThere might be a simpler way of testing this, as well as a more robust way of solving it. I'm happy to update the PR to meet either (or both!) of these ideals.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2015-03-26T07:14:51Z",
        "closed_at": "2015-03-26T14:06:07Z",
        "merged_at": "2015-03-26T14:06:07Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-03-25T23:18:38Z",
        "closed_at": "2015-05-27T11:43:53Z",
        "merged_at": null,
        "body": "I think it was a typo, just I got stuck for a while figuring it out, so I'm sending this to help future viewers.\n\nBy the way, when I use this I'm getting this warning: Warning: Failed Context Types: Invalid context `router` of type `object` supplied to `Link`, expected `function`. Check the render method of `TrainingGroupTile`. So I guess the childContextType did changed? Maybe this document needs more updates?\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 95,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2015-03-25T18:53:20Z",
        "closed_at": "2015-09-11T13:02:47Z",
        "merged_at": null,
        "body": "Used the existing example `auth-flow` as the base, so some of the views (`Dashboard`) are the exact same.\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-03-25T15:19:21Z",
        "closed_at": "2015-05-17T01:13:17Z",
        "merged_at": null,
        "body": "### rackt/react-router now has a Chat Room on Gitter\n\n@ryanflorence has just created a chat room. You can visit it here: [https://gitter.im/rackt/react-router](https://gitter.im/rackt/react-router?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&content=body_link).\n\nThis pull-request adds this badge to your README.md:\n\n[![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/rackt/react-router?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=body_badge)\n\nIf my aim is a little off, please [let me know](https://github.com/gitterHQ/readme-badger/issues).\n\nHappy chatting.\n\nPS: [Click here](https://gitter.im/settings/badger/opt-out) if you would prefer not to receive automatic pull-requests from Gitter in future.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2015-03-25T10:41:09Z",
        "closed_at": "2015-05-27T11:42:32Z",
        "merged_at": null,
        "body": "Use `React.createElement()` in `Link`'s `render()` instead\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 15,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2015-03-24T19:12:30Z",
        "closed_at": "2015-03-27T09:55:01Z",
        "merged_at": null,
        "body": "Added support for meta data on routes:\n\n``` javascript\nvar routes = (\n  <Route handler={App}>\n    <DefaultRoute name=\"home\" handler={Home} meta={{icon: 'home', label: 'Home'}}/>\n    // ...\n  </Route>\n);\n```\n\nrelated: #927 #492 \n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2015-03-24T14:47:40Z",
        "closed_at": "2015-05-17T15:26:09Z",
        "merged_at": null,
        "body": "@mjackson @gaearon \n\nI'm happy to use context to provide some clean APIs for people, but I'm not comfortable with everybody needing to use `contextTypes` in user code.\n\nThis puts the router on `props` of handlers so people can access it w/o any extra work. I'll write some tests and merge if I can get a thumbs up from one of you.\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 15,
        "deletions": 23,
        "changed_files": 10,
        "created_at": "2015-03-24T10:43:26Z",
        "closed_at": "2015-03-24T11:44:43Z",
        "merged_at": "2015-03-24T11:44:43Z",
        "body": "Hey.\n\nI assumed showing git diffs wasn't your point here so I removed them and also changed a few `func.isRequired` you missed into `func`.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-03-23T06:22:15Z",
        "closed_at": "2015-03-24T11:50:25Z",
        "merged_at": null,
        "body": "`Path` should be `PathUtils` - all examples are broken\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 20,
        "deletions": 14,
        "changed_files": 1,
        "created_at": "2015-03-21T19:59:34Z",
        "closed_at": "2015-09-11T12:37:52Z",
        "merged_at": null,
        "body": "Currently, when a transition hook is defined, we invoke the callbacks within a try-catch block. Since everything after that is synchronous, throwing within router.run or during render will cause the error to be caught inside the transition handling, calling the callback a second time, and ultimately Router.handleError.\n\nI changed it so that the callback is never called twice, and only synchronous transition hooks are contained within the try-catch block.\n\nI'm not absolutely sure if this the right way though. We could also \n- not catch any errors at all (aside from the errors passed via callback)\n- catch (synchronous) errors even if callback is in arguments list. But then we'd have to wait for the hook to finish execution before continuing, i.e. buffer synchronous callback invocations. Otherwise, calling callback synchronously would again lead to the problem this PR tries to solve. \n\nThis would (mostly) fix #946, although I think there's another (browser) issue when it comes to reporting rethrown errors.\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2015-03-21T17:51:52Z",
        "closed_at": "2015-03-24T11:49:45Z",
        "merged_at": "2015-03-24T11:49:45Z",
        "body": "Fix issue #979 which caused an error when running the examples because of a typo.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 118,
        "deletions": 4,
        "changed_files": 5,
        "created_at": "2015-03-21T14:07:21Z",
        "closed_at": "2015-06-18T21:44:26Z",
        "merged_at": null,
        "body": "This is a convenience method that implements the use case provided as the last example in the api doc for the `goBack()` function:\n\n``` js\nif (!this.context.router.goBack()) {\n  this.context.router.transitionTo('/otherpage')\n}\n```\n\nThis PR also adds some missing tests for `goBack` itself.\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 69,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2015-03-20T14:56:29Z",
        "closed_at": "2015-05-26T16:36:21Z",
        "merged_at": null,
        "body": "`Router.runSync` is a high-level convenience method that creates, configures, and runs a router synchonously in one shot. The method signature is:\n\n``` js\n{ Handler, state } = Router.runSync(routes[, location ]);\n```\n\nUsing the current URL path on the server-side:\n\n``` jsx\n{ Handler } = Router.runSync(routes, req.path);\nReact.render(<Handler/>, document.body);\n```\n\nUsing `window.location.hash` to manage the URL, you could do:\n\n``` jsx\n{ Handler } = Router.runSync(routes);\nReact.render(<Handler/>, document.body);\n```\n\nUsing HTML5 history and a custom \"cursor\" prop:\n\n``` js\n{ Handler } = Router.runSync(routes, Router.HistoryLocation);\nReact.render(<Handler cursor={cursor}/>, document.body);\n```\n\n**Note:** In contrast to `Router.run`, this method acts on the assumption that all routing is fully synchronous, which is usually the case. The sole exception to this are route handlers with transition hooks taking a callback that is asynchronously invoked when transitioning. On the server-side, this affects only `willTransitionTo` (with a callback argument).\n\n---\n\nThis obsoletes pull request #848. I've created this new one to make a clean cut. Compared to the old one, none of the existing code has changed; only additions were made.\n",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 47,
        "deletions": 21,
        "changed_files": 2,
        "created_at": "2015-03-20T14:42:45Z",
        "closed_at": "2015-03-20T22:01:10Z",
        "merged_at": null,
        "body": "@ryanflorence @mjackson \n\nHey guys,\n\nI'm **not** here to ask to merge this PR, instead I would like to get your feedback on how you would configure your component lifecycle when you need to fetch new data on a URL path change.\nSo I've modified the Contact example to support this case in order to better show you the changes: basically, when I click on `/contact/ryan` I want to fetch fresh data of `ryan` and so on.\n\nInitially, I just thought to fetch new data whenever the `componentWillReceiveProps`\n\n``` diff\n   componentWillReceiveProps: function () {\n-    this.setState(this.getStateFromStore());\n+    var id = this.getParams().id;\n+    ContactStore.fetchContact(id);\n   },\n```\n\nUnfortunately this causes an infinite loop as the parent component (`App` in this case) is also listening to store changes. What happens here is:\n- store fetches new data \n- store notifies of change\n- parent component is listening to that and re-renders\n- re-rendering triggers `componentWillReceiveProps` of `Contact` children component\n- `fetchContact` is called again\n\nSo at the end I came up with this solution which basically checks if component is fetching, if params have changed and so on. I feel though it's not really the best way to do that and was wondering if you guys have a better and cleaner approach to that.\n\nMany thanks in advance, looking forward to your feedback.\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 20,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2015-03-18T22:55:58Z",
        "closed_at": "2015-06-19T06:23:42Z",
        "merged_at": null,
        "body": "It decodes the path before operating on it, it should `encodeURI` before replacing it.\n\nWithout this change any URL that includes a properly encodes space (`%20`) gets converted to a space if the URL doesn't have a leading slash.\n",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2015-03-17T19:37:30Z",
        "closed_at": "2015-03-21T17:04:32Z",
        "merged_at": "2015-03-21T17:04:32Z",
        "body": "This is a tiny little patch to clean up the CSS on the animation example. It adds `px` to width and height properties so that the values are actually applied to the HTML display, and removes a duplicate class declaration for `.Image` which was being overridden. \n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-03-16T22:09:58Z",
        "closed_at": "2015-03-21T17:03:37Z",
        "merged_at": "2015-03-21T17:03:37Z",
        "body": "This commit fixes https://github.com/rackt/react-router/issues/958 \n\nUsing HashLocation, the _actionType was lost on **transition.redirect** due to multiple async onHashChange calls for push and replace, which made the redirect wrongly trigger a **pop** state.\n\nregards,\nmario\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2015-03-16T14:35:58Z",
        "closed_at": "2015-03-21T17:02:28Z",
        "merged_at": null,
        "body": "the warning had actually two causes: \n- the fact that the array was created in `getChildContext` which was called twice to perform the check. keeping a reference to it solves this\n- the fact that the `RouteHandler` component didn't wrap its handler with an element\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2015-03-15T19:28:52Z",
        "closed_at": "2015-03-21T17:00:54Z",
        "merged_at": null,
        "body": "This commit fixes two bugs in Path.withQuery:\n1. Strip of the query if the new one is empty (added a test).\n2. use object-assign instead of qs/lib/utils/merge.\n    (see https://github.com/hapijs/qs/issues/67)\n\nThanks for the awesome project!\n\nCheers,\nMax\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 18,
        "deletions": 18,
        "changed_files": 9,
        "created_at": "2015-03-13T21:19:40Z",
        "closed_at": "2015-03-21T16:56:57Z",
        "merged_at": null,
        "body": "I was getting a deprecation warnings while running the examples from master, so I exchanged the deprecated code to the code which the deprecation warnings suggested.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-03-13T19:43:24Z",
        "closed_at": "2015-03-21T16:45:16Z",
        "merged_at": "2015-03-21T16:45:16Z",
        "body": "A small fix for https://github.com/rackt/react-router/issues/789\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 50,
        "deletions": 31,
        "changed_files": 9,
        "created_at": "2015-03-11T19:37:34Z",
        "closed_at": "2015-03-20T21:28:37Z",
        "merged_at": null,
        "body": "This does it! Hizzah!\n\n![screen shot 2015-03-11 at 1 36 04 pm](https://cloud.githubusercontent.com/assets/590904/6605191/94c344b2-c7f3-11e4-8c1c-2c445ff1dfc3.png)\n",
        "comments": 61
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2015-03-11T17:26:49Z",
        "closed_at": "2015-03-11T19:37:48Z",
        "merged_at": null,
        "body": "This PR fixes the broken transition tests associated with the `0.13-compat` branch. Basically `this` was wrong.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2015-03-11T17:15:56Z",
        "closed_at": "2015-03-11T19:37:57Z",
        "merged_at": null,
        "body": "Using a counter instead of checking array length _seems_ to address the React invariant. Any thoughts here?\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2015-03-11T15:23:59Z",
        "closed_at": "2015-03-11T19:38:06Z",
        "merged_at": null,
        "body": "From what I've read, it looks like [`classnames`](https://github.com/JedWatson/classnames) is the new replacement for `classSet`. This PR makes that change to eliminate the deprecation warning.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2015-03-11T15:14:59Z",
        "closed_at": "2015-03-11T19:38:12Z",
        "merged_at": null,
        "body": "Best I can tell this handles it. \n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 21,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-03-10T21:42:48Z",
        "closed_at": "2015-03-21T16:43:50Z",
        "merged_at": null,
        "body": "Hey I found the documentation about route params to be very useful, but as a developer I would love to see that in the README to get a better and more immediate idea of the `Route` interface.\n\nCould we include them on the README?\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-03-10T19:47:54Z",
        "closed_at": "2015-03-21T16:42:22Z",
        "merged_at": "2015-03-21T16:42:22Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2015-03-10T13:04:51Z",
        "closed_at": "2015-03-21T16:41:50Z",
        "merged_at": "2015-03-21T16:41:50Z",
        "body": "`/` and `/?a` route to the same place, but `/?` won't match any route and will trigger not found. This issue is not experienced with `HistoryLocation` in the browser because when the URL ends with `?` then `window.location.search == \"\"` thereby dropping the question mark; however when using `req.url` in Node.js the `?` is not automatically dropped.\n\nI've fixed the issue via a tweak to the regex, and added a relevant test.\n\nI'm not sure if we need to change `extractQuery` in PathUtils to return false if `match[1].length === 0`?\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-03-10T04:46:32Z",
        "closed_at": "2015-03-21T16:40:13Z",
        "merged_at": "2015-03-21T16:40:13Z",
        "body": "This PR fixes a very small typo in the overview guide.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2015-03-09T17:49:54Z",
        "closed_at": "2015-03-10T00:38:28Z",
        "merged_at": "2015-03-10T00:38:28Z",
        "body": "It is immediately assigned from getParams() and so clearly is an unused argument. Moreover other functions do not call it with an argument.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-03-09T13:55:11Z",
        "closed_at": "2015-03-21T16:40:00Z",
        "merged_at": null,
        "body": "Async example would crash at [/examples/async-data/app.js#L64](https://github.com/rackt/react-router/blob/master/examples/async-data/app.js#L64). Mentioned at [Issue 897](https://github.com/rackt/react-router/issues/897)\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 175,
        "deletions": 2,
        "changed_files": 6,
        "created_at": "2015-03-06T04:58:55Z",
        "closed_at": "2015-03-21T16:38:43Z",
        "merged_at": null,
        "body": "We have a rapidly growing React application which renders on both the server- and client-sides. Some sections of the app are on separate subdomains. The app uses the same views/assets/code across many subdomains, so we control it all through one runtime. This mean react-router needs to be able to distinguish which host or subdomain it's on to render the appropriate routes. This PR adds two features to the API: \n\n[`<Route criteria />`](https://github.com/careerlounge/react-router/blob/33af5b9c388aad697fb9b9b00cf9c1d96b11b382/docs/api/components/Route.md#criteria): criteria is an object of key: values. value can either be a RegExp or primitive type which will be compared against the same key set by `setGlobalCriteria`. If it matches, it will be considered as a route match. If criteria is not set, it automatically matches. \n\nThe syntax can be a mouthful (`<Route criteria={ { host: /^auth\\./ } } />`) but is most flexible. Alternate syntax such as `<Route match-host={ /\\.auth/ } />` (ala `data-` attributes) could be considered.\n\n[`Router.setGlobalCriteria(object)`](https://github.com/careerlounge/react-router/blob/33af5b9c388aad697fb9b9b00cf9c1d96b11b382/docs/guides/path-matching.md#matching-global-criteria) sets the criteria, updating each object[key] with _globalCriteria[key]. Criteria is stored statically, as I don't suppose people use multiple Routers on one page.\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 27,
        "deletions": 27,
        "changed_files": 1,
        "created_at": "2015-03-04T19:55:08Z",
        "closed_at": "2015-03-20T22:22:32Z",
        "merged_at": null,
        "body": "Inspired by [this comment](https://github.com/rackt/react-router/commit/47ca64c6c1615d5a1330f002af861dafdd1a167f#commitcomment-10037061) by @tgriesser, I changed `this` to `Router` inside router's static methods.\n\nIf we take this change, we will avoid binding because we already know the context and don't need it.\n\nAnother benefit is making source more easy to follow. When I just started contributing, I kept getting confused what `this` means in a particular method, until I realized most action happens in statics. This change makes it obvious.\n\nI made these edits on Github so they're not tested. What do you think? @mjackson \n\nNote: **this change fixes an actual mistake** introduced [here](https://github.com/rackt/react-router/commit/47ca64c6c1615d5a1330f002af861dafdd1a167f#commitcomment-10037061). It is intended to prevent similar mistakes from happening in the future.\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2015-03-04T07:19:25Z",
        "closed_at": "2015-03-04T21:08:46Z",
        "merged_at": "2015-03-04T21:08:46Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-03-01T19:59:03Z",
        "closed_at": "2015-03-13T01:31:19Z",
        "merged_at": null,
        "body": "The first time I read the section titled \"thanks, ember,\"  I thought it was sarcastic.  Possibly this is because of the strange tension that seems to exist between the camps.  However, this slight change in wording makes it clear that this is a real, non-sarcastic thanking of emberl\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 545,
        "deletions": 482,
        "changed_files": 23,
        "created_at": "2015-02-28T17:32:30Z",
        "closed_at": "2015-03-01T16:39:24Z",
        "merged_at": null,
        "body": "This resolves issues with including this package in a non es6 environment. An alternate approach is to resolving the require issue with browserify is to provide a 'browserify.transform' property in the package.json file.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2015-02-27T23:46:57Z",
        "closed_at": "2015-03-21T15:55:56Z",
        "merged_at": null,
        "body": "This uses the new `this.context.router`, and specifically uses `.getCurrentPath()` which is 95% of the time what uniquely identifies the page.\n\nQuestions:\n- should it be using contextTypes, or the mixin?\n- should it directly require `react-router/modules/PropTypes` to get `PropTypes.router`, or use `.any`?\n\nI'm not sure what addHandlerKey does, but it works without it, and we're setting a key ourselves anyway.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-02-27T19:06:59Z",
        "closed_at": "2015-03-25T19:01:55Z",
        "merged_at": "2015-03-25T19:01:55Z",
        "body": "Fixes issue #886.\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2015-02-26T10:48:41Z",
        "closed_at": "2015-02-26T13:28:22Z",
        "merged_at": "2015-02-26T13:28:22Z",
        "body": "This pull request fixes two things:\n- When changing routes, `Router.dispatch` gets correctly called and does not throw an error. (An issue I raised in #638 )\n- Link click handlers are not correctly bound and don't throw an error when called\n\nI haven't touched the rest and there are still some tests that are failing.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-02-25T22:18:49Z",
        "closed_at": "2015-02-26T13:30:33Z",
        "merged_at": null,
        "body": "I am trying to do my due diligence on checking for compat issues with the new version but since the peer dependancy range for the router is `0.12.x` I can't install `0.13.x` rc or otherwise. I would be great if the range here was more permissive, even if it comes with a \"buyer beware\" warning. Alternatively we could just pin to the current and next version, since React tends to be pretty good on upgrading to the next from the last most recent: `>=0.12.0 < 0.14.0`\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 12,
        "changed_files": 1,
        "created_at": "2015-02-21T11:06:38Z",
        "closed_at": "2015-02-25T23:11:25Z",
        "merged_at": "2015-02-25T23:11:25Z",
        "body": "```\n* Communicate the next transition\nto the login form using query params\ninstead of statics.\n\n* This style is more like server side\nrouting.\n```\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-02-19T09:23:13Z",
        "closed_at": "2015-02-26T13:31:15Z",
        "merged_at": "2015-02-26T13:31:15Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 76,
        "deletions": 19,
        "changed_files": 2,
        "created_at": "2015-02-18T14:59:30Z",
        "closed_at": "2015-03-20T14:51:30Z",
        "merged_at": null,
        "body": "This implements the synchronous version of `router.run()`, useful in server environments that are able to evaluate JavaScript but have no notion of callbacks (e.g. [ExecJS](https://github.com/sstephenson/execjs)).\n\nNaturally, this is also usable within Node.js. Here's an example:\n\n``` jsx\nvar routes = <Route handler={Foo} path=\"/foo\"/>;\nvar router = Router.create(routes);\n\nexpress().get(/.*/, function(req, res, next) {\n  var {Handler, state} = router.runSync(req.path);\n  // do something interesting with `state` object\n  res.send(React.renderToString(<Handler />));\n});\n```\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 496,
        "deletions": 279,
        "changed_files": 11,
        "created_at": "2015-02-16T20:57:20Z",
        "closed_at": "2015-02-17T18:45:10Z",
        "merged_at": "2015-02-17T18:45:10Z",
        "body": "This branch formalizes and enhances two of the core primitives in the router: Route and Match.\n\nWe get a few benefits from this:\n- **Routes may now be created programmatically**, as well as via JSX.\n  This is useful in situations where it is desirable to assemble\n  the route configuration using separate modules, instead of all\n  at once. For example, in ApplicationRoute.js you could have:\n\n``` js\n    module.exports = Router.createRoute();\n```\n\n   and in UserProfileRoute.js:\n\n``` js\n    var ApplicationRoute = require('./ApplicationRoute');\n\n    module.exports = Router.createRoute({\n      parentRoute: ApplicationRoute,\n      path: 'users/:id'\n    });\n```\n\nThis change is not very useful for small route configs, so I'd like to preserve the nice JSX syntax we have now for convenience when creating small to mid-sized apps. But for large apps, the ability to create routes programmatically is a huge deal. In the situation above, routes can be declared as CommonJS modules, allowing users to use bundlers to resolve dependencies for them and only load the portion of the route hierarchy they need when they need it.\n- **`<Link to>` may reference a Route object directly**.\n\n``` xml\n     <Link to={UserProfileRoute}>\n```\n\nThis goes hand in hand with the previous feature which allows components that link to route handlers to express their dependencies as CommonJS modules. `<Route name>` is still supported for JSX route configurations with the following caveat:\n- **Route names may be re-used at different levels of the hierarchy**.\n  For example, you could have two different routes named \"new\" but\n  nested inside different parent routes.\n\n``` xml\n    <Route name=\"users\" handler={Users}>\n      <DefaultRoute handler={ShowAllUsers}/>\n      <Route name=\"new\" handler={NewUser}/>\n    </Route>\n    <Route name=\"posts\" handler={Posts}>\n      <DefaultRoute handler={ShowAllPosts}/>\n      <Route name=\"new\" handler={NewPost}/>\n    </Route>\n```\n\n   Using this route configuration, you could <Link to=\"users.new\"> or  `<Link to=\"posts.new\">` depending on which one you wanted. A side effect of this is that names of nested routes are no longer \"global\", so e.g. `<Link to=\"new\">` won't work because it is ambiguous, but  `<Link to=\"posts\">` will still work.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 213,
        "deletions": 23,
        "changed_files": 6,
        "created_at": "2015-02-16T03:30:48Z",
        "closed_at": "2015-06-15T03:34:52Z",
        "merged_at": null,
        "body": "(Work in progress) \n\nThis PR makes the router more aware of the current session history by managing a counter and an id that's stored inside history.state. Before every push, the counter is incremented, and on every location change, it is reloaded from the active state (or reset). The (random) id is used to distinguish between two \"sessions\" within the same browser tab.\n\nSince only `HistoryLocation` supports state, I also added `utils/addLocationState.js` which can be used to wrap other locations to attach state to the query (for local development, or environments without url bar). Not sure if it's worth having though.\n\nThe history state is currently exposed via `state.history`:\n- `state.history.current`: index of currently active session entry (1-based)\n- `state.history.id`: random string id for current \"session\"; each id has its own series of entries\n- `state.history.key`: key for caching based on active entry in browser tab (concatenation of the two above, for convenience)\n\nUse cases:\n- more reliable `goBack()` check (already implemented), perhaps also `goForward()` and `go(n)`\n- scroll position can be saved by history entry, not just by path (already implemented)\n- persisting arbitrary data based on browser session entry (e.g. form data)\n- basis for more advanced navigation (#767), such as going back or forward to when a route was last visited\n- animations based on navigation direction (back vs forward), or even pages that were traversed\n\nSeems to be related to #828.\n",
        "comments": 18
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-02-15T10:54:51Z",
        "closed_at": "2015-02-16T19:06:44Z",
        "merged_at": null,
        "body": "rackt/react-router#839\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2015-02-14T01:15:02Z",
        "closed_at": "2015-02-14T04:32:02Z",
        "merged_at": "2015-02-14T04:32:02Z",
        "body": "Converting from `String` \u2192 `StaticLocation` up front allows this.\n\nDiscovered this while testing server-side rendering of #828, where a `StaticLocation` must be passed to provide a payload.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 80,
        "deletions": 6,
        "changed_files": 3,
        "created_at": "2015-02-13T22:08:42Z",
        "closed_at": "2015-02-13T23:13:20Z",
        "merged_at": "2015-02-13T23:13:20Z",
        "body": "If you are styling components in the component itself (not using external CSS), then active styling is not possible at the moment. This PR adds an optional `activeStyle` property to Link to allow for this scenario.\n\nSuper simple example:\n\n``` js\n\nvar style = {\n  color: 'white',\n  fontSize: 12,\n  textDecoration: 'none'\n};\n\nvar activeStyle = assign({}, style, {\n  color: 'red'\n});\n\n<Link style={style} activeStyle={activeStyle} to=\"route\">Link</Link>\n```\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 18,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2015-02-13T07:16:03Z",
        "closed_at": "2015-06-12T18:04:26Z",
        "merged_at": null,
        "body": "This PR makes sure a descriptive error message is thrown when we have a route with `RouteHandler` as handler but no children.\n\nThis scenario is likely more common now after `RouteHandler` was [made default if no handler is provided](https://github.com/rackt/react-router/pull/794).\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-02-13T02:42:02Z",
        "closed_at": "2015-02-13T22:29:34Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2015-02-13T02:10:10Z",
        "closed_at": "2015-02-13T22:28:41Z",
        "merged_at": "2015-02-13T22:28:41Z",
        "body": "With the current implementation `<NotFoundRoute {...props}>{[]}</NotFoundRoute>` fails, but clearly there are no children. This uses a more accurate check to determine whether there are actually component children.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 55,
        "deletions": 46,
        "changed_files": 10,
        "created_at": "2015-02-13T01:07:53Z",
        "closed_at": "2015-06-12T18:06:41Z",
        "merged_at": null,
        "body": "Starting a PR to discuss a feature addition which solved the problems I was having in #792 with form submission and redisplay without having to funnel everything through `query`.\n\nThis adds a new `payload` parameter to `location.push()` and `location.replace()`, the other API methods which ultimately use them, `willTransitionTo` hooks and as a new property of the `state` object passed to the `router.run()` callback.\n\n~~It also replaces internal use of strings for static locations with a `StaticLocation` constructor in order to be able to pass a payload object when running on the server.~~\n\nI've used this in the [payload branch of insin/isomorphic-lab](https://github.com/insin/isomorphic-lab/tree/payload/src) with the History location on the client and the new Static location on the server, and in this [modified version of the Mega Demo contacts form](http://insin.github.io/react-router-form/payload.html) with the Hash location.\n\nExamples:\n- [Server-side usage in Express middleware](https://github.com/insin/isomorphic-lab/blob/payload/src/react-router-middleware.jsx)\n- [Client-side usage in the `run()` callback](https://github.com/insin/isomorphic-lab/blob/payload/src/client.jsx)\n- [Isomorphic usage in a component](https://github.com/insin/isomorphic-lab/blob/payload/src/components/AddThing.jsx) which uses it to pass POST data to a transition and to pass errors (for both server and client) and user input (for redisplay on the server) via a redirect without putting anything in the URL, with the same component acting as the route handler for the entire thing.\n\nNow that I have the basics I needed working, there's other stuff I just fudged my way around or didn't really look at properly, such as:\n- Naming, of course. I just called it something generic because I had 2 separate use cases in mind which just so happened to be solved by the same solution.\n- History management - should we avoid writing history when flinging this effectively hidden data around? What does the back button behave like and what should it behave like?\n- \"From\" and \"to\" transition hooks - I fudged this just to get my \"to\" hooks called when transitioning back to the same component with a payload, without changing the URL. @mjackson mentioned on IRC that this area has a bit of rework coming up in any case.\n- Refresh behaviour - should anything special be done here, or should people accept that data will be lost if you use this feature and refresh the resulting page?\n- Testing - I just added the new parameter where necessary to get tests passing locally, there are no new test specs for it yet.\n- Documentation - this feature is potentially ripe for abuse/misuse by people trying to get to grips with the router, should it be documented in a very use-case/context specific way?\n\nOh yeah, and is this a feature you want, or is having a built-in way to bypass the URL a bit naughty for a router? :smile: \n",
        "comments": 15
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 14,
        "changed_files": 1,
        "created_at": "2015-02-13T00:52:36Z",
        "closed_at": "2015-03-21T14:02:28Z",
        "merged_at": "2015-03-21T14:02:28Z",
        "body": "This update simply removes the `<Routes/>` from here.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-02-12T20:37:05Z",
        "closed_at": "2015-02-13T22:29:06Z",
        "merged_at": "2015-02-13T22:29:06Z",
        "body": "Upgrade path: The goBack function now returns true (on successful back) or false (no react-router history to navigate back to), previously the return from goBack was always undefined.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 52,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2015-02-11T08:57:46Z",
        "closed_at": "2015-02-12T19:17:40Z",
        "merged_at": null,
        "body": "Since it is a [very](https://github.com/rackt/react-router/issues/760) [common](https://github.com/rackt/react-router/issues/666) [use case](https://github.com/rackt/react-router/issues/83) to want the `active` class of a `Link` to be applied to the parent tag for Bootstrap compatibility, this PR adds a new optional `wraptag` prop to `Link`. If supplied, the link will be wrapped in the given tag, and the class names applied to the wrapper instead of the anchor tag.\n\nThat means I can now do this:\n\n``` javascript\n<Link to=\"foo\" wraptag=\"li\">Foo</Link>\n```\n\ninstead of having to [make my own wrapper component](https://github.com/rackt/react-router/blob/master/docs/api/mixins/State.md#examples), looking something like this:\n\n``` javascript\nvar Navlink = React.createClass({\n  mixins: [ State ],\n  render: function() {\n    var p = this.props;\n    var className = (p.linkClasses || '')+(this.isActive(p.to, p.params, p.query) ? ' active' : '');\n    return <li className={className}>{Link(p)}</li>;\n  }\n});\n```\n",
        "comments": 13
    },
    {
        "merged": true,
        "additions": 822,
        "deletions": 789,
        "changed_files": 4,
        "created_at": "2015-02-10T09:27:19Z",
        "closed_at": "2015-02-10T10:38:41Z",
        "merged_at": "2015-02-10T10:38:41Z",
        "body": "https://github.com/rackt/react-router/issues/787\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2015-02-09T21:00:01Z",
        "closed_at": "2015-02-17T18:45:51Z",
        "merged_at": "2015-02-17T18:45:51Z",
        "body": "Previously, special characters in query were left as is, potentially overwriting other query parameters and causing ambiguity.\nNow, they are properly escaped.\nFixes #804.\n",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2015-02-09T18:05:22Z",
        "closed_at": "2015-02-09T21:27:54Z",
        "merged_at": "2015-02-09T21:27:54Z",
        "body": "diggin the ascii art\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2015-02-09T17:59:03Z",
        "closed_at": "2015-02-09T21:29:14Z",
        "merged_at": "2015-02-09T21:29:14Z",
        "body": "(edits while snooping through the docs)\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 36,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2015-02-09T01:45:21Z",
        "closed_at": "2015-06-15T03:11:52Z",
        "merged_at": null,
        "body": "I added the ability to define Routes in the static section of the handler so that each module can operate independently. I also added a test case which demonstrates the use. \n\nAn example:\n\n```\nvar App= React.createClass({\n  statics: {\n    routes: [\n       <Route name=\"inbox\" handler={Inbox}/>,\n       <Route name=\"calendar\" handler={Calendar}/>,\n       <DefaultRoute handler={Dashboard}/>\n    ]\n  },\n\n  render: function () {\n    return (\n      <div>\n        <header>\n          <ul>\n            <li><Link to=\"app\">Dashboard</Link></li>\n            <li><Link to=\"inbox\">Inbox</Link></li>\n            <li><Link to=\"calendar\">Calendar</Link></li>\n          </ul>\n          Logged in as Jane\n        </header>\n\n        {/* this is the important part */}\n        <RouteHandler/>\n      </div>\n    );\n  }\n});\n\nvar routes = (\n  <Route name=\"app\" path=\"/\" handler={App} />\n);\n\nRouter.run(routes, function (Handler) {\n  React.render(<Handler/>, document.body);\n});\n```\n\nThis allows App to exist entirely in its own space and not require any callers to know what its route structure is.\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 27,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-02-08T21:25:20Z",
        "closed_at": "2015-02-09T09:51:11Z",
        "merged_at": "2015-02-09T09:51:11Z",
        "body": "Re: #793\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 48,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2015-02-08T17:13:11Z",
        "closed_at": "2015-02-10T19:57:20Z",
        "merged_at": null,
        "body": "This PR makes the `handler` prop for `Route` non-mandatory. If no handler is provided a default handler will be used that simply renders the current `RouteHandler`. \n\nThis is useful when I have a top level tab without any contents of its own, but still want to have a navlink to it. Consider your [overview example](https://github.com/rackt/react-router/blob/master/docs/guides/overview.md). Let's say I don't want to always show the list of messages on the left. First when I click the \"Inbox\" tab I see the list, clicking a message lets me see just the message, no list. All the while I want the \"Inbox\" tab to show as active. That means two child routes to the inbox tab, but no actual content tied to the inbox path. This PR lets me do this:\n\n``` javascript\n<Route path=\"/inbox\">\n  <DefaultRoute handler={List} />\n  <Route path=\"/inbox/:messageid\" handler={Message} />\n</Route>\n```\n\nWhile before I've solved this problem like this:\n\n``` javascript\n<Route path=\"/inbox\" handler={Multiroute}>\n  <DefaultRoute handler={List} />\n  <Route path=\"/inbox/:messageid\" handler={Message} />\n</Route>\n```\n\nWhere `Multiroute` is a simple dummy component rendering the active child:\n\n``` javascript\nvar Multiroute = React.createClass({\n  render: function(){\n    return <RouteHandler {...this.props} />;\n  }\n});\n```\n\nThis dummy component is what this PR now uses as a default handler.\n",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2015-02-08T11:52:33Z",
        "closed_at": "2015-02-10T09:19:16Z",
        "merged_at": null,
        "body": "Fix for https://github.com/rackt/react-router/issues/787\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-02-06T18:18:02Z",
        "closed_at": "2015-02-10T19:50:29Z",
        "merged_at": "2015-02-10T19:50:29Z",
        "body": "See #778\n\nThis commit ensures that we don't leak references to a component if the route depth decreases when navigating to a new route.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 55,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2015-02-06T11:23:14Z",
        "closed_at": "2015-02-06T16:14:32Z",
        "merged_at": null,
        "body": "The use case I've had where I need this functionality is when developing a mobile application you will often not want many new entries into the history for sub tabs within a screen. Ie. the user should be one 'back' tap away from the previous parent route. Allowing us to use react-router to compose views nicely and not become too intrusive to user navigation.\n\nThink of when you browse a large gallery online and it remembers the history of each image you clicked on. To get back to the parent you have to spam the 'back' button _a lot_ unless there is a more obvious quick route back. On websites you usually have the space to have a heirarcheal navigation but often there is not the real estate on mobile devices so you rely on natural back and forth transitions for the user.\n\nI'd also argue there should be functionality to transition to a route without any history modification (ie. a parent route is always the 'master' and children are not remembered for when you navigate further) but I think that is for a separate PR.\n\nLet me know if there are any thoughts!\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-02-06T00:32:22Z",
        "closed_at": "2015-02-06T18:06:59Z",
        "merged_at": null,
        "body": "I'm currently developing an application with a route structure like so:\n\n``` jsx\n<Route name=\"app\" path=\"/\" handler={App}>\n  <Route name=\"search\" path=\"search\" handler={SearchResults}/>\n  <Route name=\"result\" path=\"result/:resultId\" handler={ResultPage}>\n    <DefaultRoute name=\"resultDetail\" handler={ResultDetail}/>\n    <Route name=\"relatedResults\" path=\"related\" handler={RelatedResults}/>\n  </Route>\n</Route>\n```\n\nWhenever I transition from one of the two child routes of ResultPage to the SearchResults route, the `mountedComponents` variable inside createRouter.js leaks a reference to the child route, as no component will overwrite it with a call to `setRouteComponentAtDepth`. This could potentially leak a large amount of memory through references to props, etc.\n\nThis PR fixes that by recreating the array with every route dispatch. I'm not sure how to create a test specifically for this, as it just changes an internal variable's behavior, and the failing case is a silent memory leak.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2015-02-05T13:35:59Z",
        "closed_at": "2015-02-05T15:53:53Z",
        "merged_at": null,
        "body": "",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2015-02-05T09:41:22Z",
        "closed_at": "2015-02-05T11:28:04Z",
        "merged_at": "2015-02-05T11:28:04Z",
        "body": "#762 Thanks to @taurose\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2015-02-05T07:31:05Z",
        "closed_at": "2015-02-06T15:58:31Z",
        "merged_at": "2015-02-06T15:58:31Z",
        "body": "...sh\n\nWhen a parent route of a child route has an optional trailing slash, the\ngenerated path for the child route will have two slashes in a row. Fix\nthe trailing slash matcher pattern to account for this case.\n\nThis bug occurs when calling `Path.injectParams(pattern, params)` to\ngenerate a path. The `pattern` for the path of a child route whose\nparent has an optional trailing slash looks something like\n`parent/?/child`. If we just replace `/?` with `/` we end up with\n`parent//child`, so we need to replace `/?/` with `/`.\n\nThis fixes issue #768.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 42,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2015-02-05T06:04:40Z",
        "closed_at": "2015-06-15T03:13:06Z",
        "merged_at": null,
        "body": "Here's a humble stab at making `to=` in the Link component optional.\n",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-02-04T22:02:52Z",
        "closed_at": "2015-02-06T15:59:11Z",
        "merged_at": null,
        "body": "Causes tests to fail, illustrating issue #768\n\nThis probably deserves a new test scenario, but there are a lot of edge cases that currently aren't being tested for `makePath()`.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2015-02-04T17:07:33Z",
        "closed_at": "2015-02-04T19:06:46Z",
        "merged_at": "2015-02-04T19:06:46Z",
        "body": "For readability and maintenance, I suggest composing like this. :)\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2015-02-02T09:20:29Z",
        "closed_at": "2015-02-02T16:45:28Z",
        "merged_at": "2015-02-02T16:45:28Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2015-02-01T10:48:04Z",
        "closed_at": "2015-02-01T19:13:00Z",
        "merged_at": null,
        "body": "",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 24,
        "deletions": 14,
        "changed_files": 1,
        "created_at": "2015-01-31T07:57:46Z",
        "closed_at": "2015-02-02T07:21:17Z",
        "merged_at": null,
        "body": "Happy to clean this up further / put elsewhere. But I think this is a nice way of resolving nested routes. Following the [docs / examples](https://github.com/rackt/react-router/blob/master/docs/api/run.md) today, routes need to be named or they get an undefined key. Also, props.data needs to be accessed by the route name.\n\nex:\n\n``` javascript\n<Application name={'application'} path={'/'} handler={ApplicationLayout}>\n  <Nested1 handler={Nested2}>\n    <Nested2 name={'nested2'} path={'n2'} handler={Nested2} />\n  </Nested1>\n</Application>\n\n// could result in something like this\n\ndata: {\n  application: { currentUser: {}},\n  undefined: { something: true },\n  nested2: { somethingElse: true }\n}\n\n// and then the you have to go a level deeper in props to access data that should be higher up based on route depth\n\nvar Nested2 = React.createClass({\n  // also has access to this.props.data.application\n  render: function() {\n    <div>{this.props.data.nested2.somethingElse}</div>\n  }\n})\n```\n\nusing the method i proposed you can do this, which i think is a bit nicer to work with\n\n``` javascript\n// names not necessary for data\n<Application path={'/'} handler={ApplicationLayout}>\n  <Nested1 handler={Nested2}>\n    <Nested2 name={'nested2'} path={'n2'} handler={Nested2} />\n  </Nested1>\n</Application>\n\n// data fetched from the static promise is available under this.props.data; this.props.data.nestedData is passed to routeHandler, in sync with depth\nvar ApplicationLayout = React.createClass({\n  render: function() {\n    <div>\n        <p>{this.props.data.currentUser.name}</p>\n        <RouteHandler data={this.props.data.nestedData} />\n    </div>\n  }\n});\n```\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-01-28T04:15:19Z",
        "closed_at": "2015-02-02T07:17:53Z",
        "merged_at": "2015-02-02T07:17:53Z",
        "body": "this makes contributing easier imo\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-01-25T08:30:14Z",
        "closed_at": "2015-01-25T19:52:03Z",
        "merged_at": "2015-01-25T19:52:03Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 26,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2015-01-23T16:47:11Z",
        "closed_at": "2015-01-25T01:17:41Z",
        "merged_at": null,
        "body": "This patch allows us to tell qs not to use array element indices when\nserializing the query parameters to a string.\n\nAlso, it fixes an issue where the query string fragment of the generated\npaths would get double-encoded; once by qs#stringify(), and another time\nby Path#encode().\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-01-21T10:57:16Z",
        "closed_at": "2015-01-24T22:47:05Z",
        "merged_at": "2015-01-24T22:47:05Z",
        "body": "As I followed the overview instruction, I found the `require(...)` is not complete. Therefore, I added the corresponding dependencies in the docs.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2015-01-20T01:09:37Z",
        "closed_at": "2015-01-20T05:21:38Z",
        "merged_at": "2015-01-20T05:21:38Z",
        "body": "I just tried to do something like this:\n\n``` jsx\n<Route name=\"app\" path=\"/\" handler={Application}>\n      <Route name=\"job\" path=\"job/:job_id/?\" handler={JobLayout}>\n          <Route name=\"report\" handler={Report} />\n          {__DEBUG__ && <Route name=\"debug\" handler={Debug} />}\n          <DefaultRoute handler={JobForm} />\n     </Route>\n</Route>\n```\n\nWhere the `__DEBUG__` var is injected via webpack at compile time. This works fine during development, but in production, the line becomes equivalent to `{undefined}`. This pattern for conditionally rendering nodes is fairly common in React. I thought it might make sense to allow this here by skipping over falsy values in the `createRoutesFromChildren` function.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-01-20T00:10:03Z",
        "closed_at": "2015-01-20T05:21:58Z",
        "merged_at": "2015-01-20T05:21:58Z",
        "body": "Explicit source of Router, Route, DefaultRoute in overview.md\n\nI've only see one person run into this on StackOverflow, but it doesn't hurt to be explicit (we are dealing with react users, right?).\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-01-19T16:27:33Z",
        "closed_at": "2015-01-26T22:40:34Z",
        "merged_at": "2015-01-26T22:40:34Z",
        "body": "We can't reliably restore scroll position on Forward due to browser differences and incompatibilities.\nInstead, we will only restore previous scroll position when user presses Back, and scroll to top on Forward.\n\nFixes #707.\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-01-19T08:26:14Z",
        "closed_at": "2015-01-24T20:23:03Z",
        "merged_at": "2015-01-24T20:23:03Z",
        "body": "Fixed typo `req.send` -> `res.send`.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-01-18T21:03:39Z",
        "closed_at": "2015-01-24T20:23:21Z",
        "merged_at": "2015-01-24T20:23:21Z",
        "body": "Since [webpack 1.5](http://webpack.github.io/docs/changelog.html#1-5) the casing of `buffer` has been changed to `Buffer` (because it refers to the global `Buffer` variable)\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-01-14T09:21:56Z",
        "closed_at": "2015-01-24T22:28:43Z",
        "merged_at": null,
        "body": "To make testing easier.\n\nrefs #678\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-01-13T11:54:37Z",
        "closed_at": "2015-01-15T04:54:09Z",
        "merged_at": "2015-01-15T04:54:09Z",
        "body": "Fixed instance of 'segement' with 'segment'.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 121,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2015-01-09T05:19:53Z",
        "closed_at": "2015-01-09T15:57:48Z",
        "merged_at": "2015-01-09T15:57:48Z",
        "body": "Currently, the dispatchHandler doesn't distinguish between stale (superseded) async transitions and the current (pending) ones. This works fine in most cases since a new transition will cause a cancellation of the current one. So when the old transition is finished, the router will call the abort handler which will simply ignore it.\n\nHowever, I found two problems with this:\n1. Besides executing the no-op abort handler, finishDispatch also sets pendingTransition to null.  This can be a problem if a stale transition ends while another async one is in progress. If a third transition occurs, the router tries to cancel the ongoing one as usual, but its reference was removed after the completion of the first transition. As a result, that transition will go through once it is complete.\n2. If an async transition is aborted, but another transition is started before it completes, the router will still manipulate the history stack when completed (pop for abort, replace for redirect). This is because the cancellation by the router is ignored if the transition has already been aborted.\n   It can not happen if you always call the callback immediately after aborting the transition.\n\nThe PR contains tests for those two cases, as well as a possible fix. \n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2015-01-05T20:42:44Z",
        "closed_at": "2015-01-16T05:34:24Z",
        "merged_at": "2015-01-16T05:34:24Z",
        "body": "On new installs the examples don't compile. That's because when.js had been removed as a dependency in #654. This PR fixes it by replacing the use of when.js with promises.\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 29,
        "deletions": 9,
        "changed_files": 1,
        "created_at": "2015-01-05T08:39:56Z",
        "closed_at": "2015-01-15T16:47:14Z",
        "merged_at": "2015-01-15T16:47:14Z",
        "body": "Supersedes #606, that's the only missing piece. Let me know if you want tests for this; I'm not sure where to put them because there are not tests for `addRoutes` either. But this has been working for me for a few weeks so I don't think it's problematic.\n",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-01-05T08:25:40Z",
        "closed_at": "2015-01-07T20:00:56Z",
        "merged_at": "2015-01-07T20:00:56Z",
        "body": "Fixes #655\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 65,
        "deletions": 102,
        "changed_files": 8,
        "created_at": "2014-12-31T07:10:02Z",
        "closed_at": "2014-12-31T15:57:12Z",
        "merged_at": "2014-12-31T15:57:12Z",
        "body": "This commit also removes our dependency on when.js and introduces\na callback argument in transition hooks. Users are expected to call\ncallback(error) when they're finished doing async stuff. If they\ndon't have a callback in their argument list, we automatically call\nthe callback for them for backwards compat.\n\nFixes #273\nFixes #631 \n\nI have mixed feelings about this PR. Part of me wishes that everyone would get on the same page, realize how cool promises are, use webpack, and be happy. But hey, at least we get:\n1. smaller file size\n2. 1 less dependency\n3. easier compat with browserify\n",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-12-28T11:17:01Z",
        "closed_at": "2014-12-29T16:41:55Z",
        "merged_at": "2014-12-29T16:41:55Z",
        "body": "I have submitted a pull request https://github.com/cdnjs/cdnjs/pull/4137 to add React Router to the CDN.\n\nI have prepared this `README.md` with a note about the library being available on the CDN.\n\nI will let you guys know in here when the library is live on the CDN and then we can merge this pull request.\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-12-27T08:09:19Z",
        "closed_at": "2014-12-28T14:54:01Z",
        "merged_at": "2014-12-28T14:54:01Z",
        "body": "## What's up?\n\nSpotted a typo when I was browsing the doc :smile_cat:  \n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2014-12-26T08:23:56Z",
        "closed_at": "2014-12-28T14:55:00Z",
        "merged_at": "2014-12-28T14:55:00Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-12-22T15:56:58Z",
        "closed_at": "2015-06-15T03:14:11Z",
        "merged_at": null,
        "body": "https://github.com/rackt/react-router/issues/535\n",
        "comments": 13
    },
    {
        "merged": true,
        "additions": 68,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2014-12-21T19:08:00Z",
        "closed_at": "2015-01-16T04:49:25Z",
        "merged_at": "2015-01-16T04:49:25Z",
        "body": "Failing test for #627\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 4055,
        "deletions": 3681,
        "changed_files": 13,
        "created_at": "2014-12-18T19:16:08Z",
        "closed_at": "2014-12-19T20:16:26Z",
        "merged_at": "2014-12-19T20:16:26Z",
        "body": "This branch is an attempt to use webpack to build our tests instead of Browserify.\n\nI'm currently having an issue that I hope @sokra can help with in this branch. When I run `./scripts/test` I get the following error:\n\n```\nERROR [karma]: [TypeError: Not a string or buffer]\nTypeError: Not a string or buffer\n    at Hash.update (crypto.js:209:17)\n    at sha1 (/Users/michael/Projects/react-router/node_modules/karma-webpack/index.js:129:7)\n    at /Users/michael/Projects/react-router/node_modules/karma-webpack/index.js:151:15\n    at MemoryFileSystem.(anonymous function) [as readFile] (/Users/michael/Projects/react-router/node_modules/webpack-dev-server/node_modules/webpack-dev-middleware/node_modules/memory-fs/lib/MemoryFileSystem.js:205:11)\n    at doRead (/Users/michael/Projects/react-router/node_modules/karma-webpack/index.js:117:32)\n    at Plugin.readFile (/Users/michael/Projects/react-router/node_modules/karma-webpack/index.js:120:3)\n    at process._tickCallback (node.js:419:13)\n```\n\nDigging a bit deeper, it looks like the memory-fs module is having problems finding some of the files it needs. The two errors I'm seeing are:\n\n```\n/_js/modules/__tests__/Router-test.js Error: Path doesn't exists /_js/modules/__tests__/Router-test.js\n/_js/modules/components/__tests__/DefaultRoute-test.js Error: Path doesn't exists /_js/modules/components/__tests__/DefaultRoute-test.js\n```\n\n@sokra Would you mind taking a look at this branch and telling me what I'm doing wrong?\n",
        "comments": 27
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2014-12-18T10:29:04Z",
        "closed_at": "2014-12-19T20:16:28Z",
        "merged_at": null,
        "body": "`modules/utils/createRouter.js` now contains a `process.env.NODE_ENV` check, which isn't getting envified when react-router gets bundled as a dependency of an app. This change will make that happen.\n\n(You can try `--global-transform` to force envification, but it can get a bit... explodey... if not all your dependencies have envify somewhere in their dependencies)\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 7,
        "changed_files": 3,
        "created_at": "2014-12-16T19:24:13Z",
        "closed_at": "2014-12-23T23:01:33Z",
        "merged_at": "2014-12-23T23:01:33Z",
        "body": "2 examples were triggering: `Each child in an array should have a unique \"key\" prop. Check the render method of App. See http://fb.me/react-warning-keys for more information.`\n\n1 example was triggering: `Warning: PreDashboard is calling a React component directly. Use a factory or JSX instead. See: http://fb.me/react-legacyfactory`\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2014-12-14T21:29:33Z",
        "closed_at": "2014-12-15T22:11:27Z",
        "merged_at": null,
        "body": "For #605. React gets scroll this way-- https://github.com/facebook/react/blob/5d3b12bb3bd6a092cf00ede07b8255a8399c2e58/src/vendor/core/dom/getUnboundedScrollPosition.js\n\nI have confirmed this going Back restores scroll pos in safari firefox chrome... also in IE11, though you see the page scrolling back to its old position.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 113,
        "deletions": 27,
        "changed_files": 3,
        "created_at": "2014-12-14T20:22:36Z",
        "closed_at": "2014-12-29T20:16:59Z",
        "merged_at": null,
        "body": "",
        "comments": 14
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2014-12-13T05:21:53Z",
        "closed_at": "2014-12-13T22:51:23Z",
        "merged_at": null,
        "body": "This is a quick hack to get hashbang working quickly. I might of missed a major step and there are no tests.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2014-12-12T23:00:58Z",
        "closed_at": "2015-01-16T04:30:37Z",
        "merged_at": "2015-01-16T04:30:37Z",
        "body": "Hi there,\n\n`Path.withQuery` did not strip off the query once it became empty. Here's a fix + test. :smiley: \n\nCheers,\nMax\n",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 68,
        "deletions": 4,
        "changed_files": 5,
        "created_at": "2014-12-11T06:49:52Z",
        "closed_at": "2015-06-15T03:28:33Z",
        "merged_at": null,
        "body": "I've been trying to make an authentication mixin that can access the state in one of my flux stores but am not using singletons that I can make available to the static methods. Would it be alright to pass a context object through to the static willTransition hook methods to allow them access to arbitrary services you might need?\n\n```\n    var context = {...}\n    Router.create({routes: routes, transitionContext: context})\n\n    statics: {\n      willTransitionTo: function(transition) {\n         var loginState = transition.context.getStore(LoginStore).getState();\n      }\n    }\n```\n",
        "comments": 96
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2014-12-10T21:21:01Z",
        "closed_at": "2014-12-11T17:39:24Z",
        "merged_at": "2014-12-11T17:39:24Z",
        "body": "Otherwise `this.getQuery()` from the `Router.State` mixin will always return an empty object, as the query string isn\u2019t part of the matched route.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-12-10T19:17:27Z",
        "closed_at": "2014-12-15T22:05:55Z",
        "merged_at": null,
        "body": "Fixes #586 \n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-12-05T22:35:43Z",
        "closed_at": "2014-12-11T17:40:03Z",
        "merged_at": "2014-12-11T17:40:03Z",
        "body": "Line 23 refers to route \"/user\"\nLines 62-66 refer to route \"/users\"\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-12-05T20:19:48Z",
        "closed_at": "2014-12-15T22:01:17Z",
        "merged_at": "2014-12-15T22:01:17Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-12-04T20:48:15Z",
        "closed_at": "2014-12-15T22:00:51Z",
        "merged_at": null,
        "body": "It was pointing to the branch `latest`, which were in fact not the latest (it was stuck at v. 0.9). Since `npm docs react-router` uses this, it pointed to stale information.\n\nIt now points to the main branch according to github, which would presumably be the most up-to-date info.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2014-12-04T03:38:22Z",
        "closed_at": "2014-12-04T05:31:14Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 47,
        "deletions": 36,
        "changed_files": 3,
        "created_at": "2014-12-04T02:34:40Z",
        "closed_at": "2014-12-15T21:59:06Z",
        "merged_at": null,
        "body": "This allows users to use react-router in a different way, that allows some new functionality. I can add tests to show new functionality as well, just wanted to throw this up for comments.\n\nCloses #558\n\nNew possible usage from a parent route handler:\n\n``` js\nReact.createClass({\n  mixins: [require('react-router/mixins/RouteHandler')],\n\n  render() {\n    return (\n      <div>\n       {this.getRouteHandler()}\n      </div>\n    );\n  }\n});\n```\n\nThis basically avoid having an extra CompositeClass in between your parent and child components. For me this allowed me to clone this.getHandler() and not have that clone change on a route transition. A little hard to explain, but I could see a multitude of uses for this. Another example would be the ability to check statics on your child routes within your parents, etc.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 43,
        "deletions": 43,
        "changed_files": 8,
        "created_at": "2014-12-03T04:34:39Z",
        "closed_at": "2015-01-09T03:17:24Z",
        "merged_at": null,
        "body": "Fixes #545 \n\nHope I didn't miss anything ;)\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 47,
        "deletions": 36,
        "changed_files": 3,
        "created_at": "2014-11-30T20:08:57Z",
        "closed_at": "2014-12-15T21:45:50Z",
        "merged_at": null,
        "body": "To show issue #548 \n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2014-11-27T18:23:56Z",
        "closed_at": "2014-12-01T17:19:02Z",
        "merged_at": "2014-12-01T17:19:02Z",
        "body": "I turned functions of the form 'function foo(){}' into 'var foo = function...(){}' in Router.run, so it works in strict mode. Fixes issue #532 \n\nDoes this fix need a unit test? If so, I'm not sure how to test it.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-11-27T09:44:50Z",
        "closed_at": "2014-11-27T18:18:21Z",
        "merged_at": "2014-11-27T18:18:21Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 218,
        "deletions": 112,
        "changed_files": 5,
        "created_at": "2014-11-26T13:26:43Z",
        "closed_at": "2014-11-26T17:34:57Z",
        "merged_at": "2014-11-26T17:34:57Z",
        "body": "This PR exposes `ImitateBrowserBehavior` and `ScrollToTopBehavior` and reintroduces `ignoreScrollBehavior` which allows you to opt out of scrolling changes within bounds of some ancestor route.\n\nThis was already implemented in #388 but it is missing in new API so I'm reimplementing it.\nThis PR adds test for `ScrollToTopBehavior` but lacks tests for `ignoreScrollBehavior`. I'll add these shortly.\n",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-11-25T20:49:26Z",
        "closed_at": "2014-11-26T12:27:44Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2014-11-25T10:18:29Z",
        "closed_at": "2014-11-25T17:58:34Z",
        "merged_at": null,
        "body": "While redirecting using `transition.redirect(to, params, query)` with a query param, it will double encode the query params. E.g.\n\n```\ntransition.redirect(\"foo\", null, {next: \"/bar\"})\n// ..leads to\n// /foo%3Fnext%3D%252Fbar\n// ..but should redirect to instead\n// /foo?next=%2Fbar\n```\n\nWith this fix it should work, although I'm not really sure what implications this change has. \n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 11,
        "changed_files": 3,
        "created_at": "2014-11-23T23:52:38Z",
        "closed_at": "2014-11-24T05:26:22Z",
        "merged_at": "2014-11-24T05:26:22Z",
        "body": "Removed some dead links, added missing links to api/README.md and changed the reference for changing scroll behavior from Routes to Router.create.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 50,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2014-11-23T01:56:59Z",
        "closed_at": "2014-12-15T21:43:26Z",
        "merged_at": "2014-12-15T21:43:26Z",
        "body": "Upgraded to 0.11 and discovered that params now passed a bit differently. I had rewritten my app code to use `willTransitionTo` instead of old `componentWillReceiveProps`.\n\nI'm using query params for filtering results. Surprisingly discovered that now query changes doesn't fire hooks, while still producing transition.\n\nThis pull request fixes that.\n",
        "comments": 13
    },
    {
        "merged": false,
        "additions": 69,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2014-11-22T16:51:04Z",
        "closed_at": "2014-11-23T17:08:34Z",
        "merged_at": null,
        "body": "- Added functionality that allows Link components to respond to the TouchEnd event, and not also fire the resulting click event.\n\n[DONT MERGE]\n\nBecause tests are done in Firefox, I can't simulate touch events in order to test this. Did you have a recommendation?\n",
        "comments": 17
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-11-22T15:52:39Z",
        "closed_at": "2014-11-23T06:23:31Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-11-22T15:32:32Z",
        "closed_at": "2014-11-22T20:16:50Z",
        "merged_at": "2014-11-22T20:16:50Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2014-11-22T10:28:46Z",
        "closed_at": "2014-11-22T20:16:26Z",
        "merged_at": null,
        "body": "Allows to also get a param or query param by name directly : \n\n```\nvar name = this.getParams('name');\nvar something = this.getQuery('something');\n```\n\nin addition to \n\n```\nvar name = this.getParams().name;\nvar something = this.getQuery().something;\n```\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2014-11-18T11:58:37Z",
        "closed_at": "2014-11-26T18:26:24Z",
        "merged_at": null,
        "body": "Scroll position should only be recorded for PUSH and POP actions.\nThere is no point in saving it if the item is replaced in browser history.\n\n(This is mostly a correctness fix)\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 585,
        "deletions": 8,
        "changed_files": 5,
        "created_at": "2014-11-18T01:35:31Z",
        "closed_at": "2014-11-27T01:56:40Z",
        "merged_at": "2014-11-27T01:56:40Z",
        "body": "Previously, navigating (by clicking Back button or a link) while a transition in progress would put router into an inconsistent state.\n\nNow, a pending transition will be aborted by the router if user navigates away while it was pending.\n\nFixes #479\n",
        "comments": 12
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-11-18T00:20:10Z",
        "closed_at": "2014-11-23T06:31:09Z",
        "merged_at": null,
        "body": "Fixes regression #399 \n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 31,
        "deletions": 7,
        "changed_files": 2,
        "created_at": "2014-11-17T23:42:15Z",
        "closed_at": "2014-11-26T15:44:35Z",
        "merged_at": null,
        "body": "This is supposed to fix #432, #439.\n\n@mjackson @rpflorence what do you think?\n\n---\n\nPreviously, the only way to opt out of scroll updates for a route would be by using `ignoreScrollBehavior`.\nThis, however, made it hard to implement arguably the most common use case: resetting scroll when `params` change and preserving it when only `query` changes.\n\nThis commit completely disables scroll updates when only `query` has changed.\nThis provides a reasonable default behavior and leaves `ignoreScrollBehavior` for more complicated cases.\n\nIf you'd rather keep the old behavior and reset scroll on query changes, you can either promote `query` variables to be route `params` or reset scroll position yourself in response to `query` changes in route handler's `componentDidUpdate`.\n",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-11-17T03:05:35Z",
        "closed_at": "2014-11-23T06:28:41Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 17,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2014-11-08T18:02:52Z",
        "closed_at": "2014-12-15T21:47:15Z",
        "merged_at": null,
        "body": "Since React 0.12 components should be wrapped with `React.createFactory(...)` when used without JSX. This factory method does not carry over static properties which breaks `willTransitionFrom` and `willTransitionTo`. I have provided an example of this in a separate branch, see 0b447d6.\n\nThe factory does however expose the wrapped class in its \"type\"-property where we can access the static properties.\n\nPlease review!\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 4,
        "changed_files": 4,
        "created_at": "2014-11-04T18:40:30Z",
        "closed_at": "2014-11-06T20:55:31Z",
        "merged_at": null,
        "body": "It removes most of the following warnings:\n\n> Warning: `ComponentName` is calling a React component directly. Use a factory or JSX instead. See: http://fb.me/react-legacyfactory\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2014-10-30T00:14:06Z",
        "closed_at": "2014-10-30T04:49:19Z",
        "merged_at": "2014-10-30T04:49:19Z",
        "body": "Upgrading reacjs to 0.12.0 breaks react v0.11.2. To fix, use 0.11.x instead of >=0.11.0 until react-router supports react v0.12.\n\ncc: @rpflorence \n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 7,
        "changed_files": 3,
        "created_at": "2014-10-28T21:10:04Z",
        "closed_at": "2014-10-30T05:18:42Z",
        "merged_at": null,
        "body": "- Replace ReactDescriptor with ReactElement (fix #433)\n- Replace removed `mixInto` with Object.assign - using `object-assign` polyfill\n- Other deprecated methods are not replaced (e.g. merge, copyProperties etc). probably better to fix them together.\n\nNote that react uses own polyfill for Object.assign - see https://github.com/facebook/react/issues/1998 and https://github.com/facebook/react/pull/2350\n\nAlso this will not work on react < 0.12. I think previous versions should have depend on ^0.11.0, not >= 0.11.0.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2014-10-28T21:01:42Z",
        "closed_at": "2014-10-30T05:19:39Z",
        "merged_at": null,
        "body": "ReactDescriptor becomes ReactElement, and mixInto is ditched in favor of object.assign.\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 12,
        "changed_files": 1,
        "created_at": "2014-10-23T13:24:51Z",
        "closed_at": "2014-10-30T05:21:04Z",
        "merged_at": null,
        "body": "- DefaultRoute doesn't work, replaced with `<Route name='/' ... />`\n- `<this.props.activeRouteHandler/>` doesn't work, replaced with `{this.props.activeRouteHandler()}`, and a more descriptive comment added\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-10-20T04:58:11Z",
        "closed_at": "2014-10-20T13:48:35Z",
        "merged_at": null,
        "body": "I was trying this example and I believe this change is needed for jsx to properly parse. Took me a while of head scratching to realize that when it didn't look right, it's because it really wasn't right. I'm new to react so I could just still be confused.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 20,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2014-10-17T00:36:10Z",
        "closed_at": "2014-11-23T06:25:08Z",
        "merged_at": null,
        "body": "We have a use case where we render multiple `<Routes />` components at different points in our app (we are embedding react into an existing Ember app). An issue arises when a different location is pushed _outside_ of react-router and then a new `<Routes>` component is mounted. In previous versions of react-router this worked fine. This fixes a recently introduced regression.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2014-10-13T14:38:46Z",
        "closed_at": "2014-10-13T16:03:18Z",
        "merged_at": "2014-10-13T16:03:18Z",
        "body": "Fixes #397\n\nHave not tested yet.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 429,
        "deletions": 109,
        "changed_files": 10,
        "created_at": "2014-10-13T00:16:27Z",
        "closed_at": "2014-10-21T14:54:44Z",
        "merged_at": null,
        "body": "Stuff to do for server rending integration:\n- [x] don't replace the HTML (253bc1ae)\n- [x] get data from multiple promises (db8298a00)\n- [x] add some nested routes and make sure they work\n- [x] get `activeRouteHandler` to work again\n- [ ] wait for async props to load before changing the previous screen by default (avoid flickers, assume data fetching is fast)\n- [ ] add option to `<Route/>` to not wait for data to load (opt in when you expect it to be slow)\n- [ ] add some indication to route handler being transitioned from that it is on the outs while data loads for the next route\n\n---\n\nThis commit adds the ability for route handlers to load props\nthey need for a given route, optionally asynchronously. Props\nloaded in this manner cascade from route handlers further up\nthe hierarchy to children, such that props loaded by children\ntake precedence.\n\ngetRouteProps should return a \"hash\" of props, the values of\nwhich may either be immediate or deferred using promises. As\npromises resolve, forceUpdate is used to re-render the `<Routes>`.\nIf no props are promises, the operation is fully synchronous\nand route handlers will have all the props they need on the\ninitial render.\n\nAs implemented, this work should satisfy the use cases in #319,\n #261, #314, #374, and (indirectly) #262.\n",
        "comments": 60
    },
    {
        "merged": true,
        "additions": 68,
        "deletions": 7,
        "changed_files": 3,
        "created_at": "2014-10-12T22:10:04Z",
        "closed_at": "2014-10-13T17:00:37Z",
        "merged_at": "2014-10-13T17:00:37Z",
        "body": "You are now able to create links with optional parameters, before if you tried to do this the following error was returned `Missing \"param\" parameter for path \"/path/:param?\"`.\n\nFixes some of the issues mentioned in #290.\n",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-10-11T18:29:22Z",
        "closed_at": "2014-10-11T20:12:25Z",
        "merged_at": "2014-10-11T20:12:25Z",
        "body": "Noticed that NotFoundRoute was used the examples but not \"required\" in the code snippet.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 108,
        "deletions": 5,
        "changed_files": 3,
        "created_at": "2014-10-11T18:12:04Z",
        "closed_at": "2014-10-15T16:49:20Z",
        "merged_at": "2014-10-15T16:49:20Z",
        "body": "This PR adds `ignoreScrollBehavior` on `Route` component as [discussed](https://github.com/rackt/react-router/pull/326#issuecomment-58593491) in #326.\n\nIt seems to work on my project but I'd like to hear your opinions on **how I should approach testing**.\nShould I unit-test `Routes`, `ScrollContext`, or what?\n\n---\n\nIf you specify `ignoreScrollBehavior` on a route, scroll behavior will not be triggered when transitioning _within_ that route. It _will_, however, be triggered when transitioning _outside_ this route. This allows us to support a variety of scenarios where you might want scroll behavior to be ignored:\n- Searching, where path is updated every time you change a query\n- Tabs, where you'd rather not scroll to top when switching between them\n\nIn the first case, by specifying `ignoreScrollBehavior` on `search` route we ensure that transitions from `search` to `search` (which is what happens when you type a search query) will _not_ trigger scroll behavior, but transitions from `search` to `home` and back will.\n\nIn the second case, by specifying `ignoreScrollBehavior` on `home` parent route, we say transitions _within_ `home` (e.g. from `feed` to `discover` and back) don't trigger scroll behavior. However if you go from `feed` to `about`, scroll behavior will be respected.\n\n``` javascript\n<Routes location=\"history\">\n  <Route handler={App}>\n    <Route name=\"home\" path=\"/\" handler={HomePage}\n           ignoreScrollBehavior>\n      <Route name=\"feed\" path=\"/\" handler={FeedPage} />\n      <Route name=\"discover\" path=\"/discover\" handler={DiscoverPage} />\n    </Route>\n    <Route name=\"search\" path=\"/search\" handler={SearchResultsPage}\n           ignoreScrollBehavior />\n    <Route name=\"about\" path=\"/about\" handler={AboutPage} />\n  </Route>\n</Routes>\n```\n\n(I'll draw a better picture later :-)\n\n![](https://cloud.githubusercontent.com/assets/810438/4585743/db9431f0-500a-11e4-9a47-b56116e28cf6.jpg)\n\nBy default, scroll behavior is performed on all transitions (red arrows). Routes can create \u201cscrolling realms\u201d for themselves and their descendants by specifying `ignoreScrollBehavior` (purple areas). Transitions that are fully confined to a single scrolling realm, don't have any scroll behavior performed (blue arrows). If transition is not fully confined to a scrolling realm, `scrollBehavior` of `Routes` is respected.\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 28,
        "deletions": 22,
        "changed_files": 1,
        "created_at": "2014-10-10T23:19:30Z",
        "closed_at": "2014-10-11T01:29:17Z",
        "merged_at": "2014-10-11T01:29:17Z",
        "body": "...callback\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 50,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2014-10-10T19:16:15Z",
        "closed_at": "2014-10-30T05:23:37Z",
        "merged_at": null,
        "body": "**WIP: DON'T MERGE THIS**\n\nThis method allows people on the server to use the router as simply a router that matches their route descriptors, and not something that emits a react view.\n\nIts common for a server to emit both HTML and JSON at the same url, depending the `Accept` header. We have an opportunity here to encourage the use of the router for these kinds of servers, instead of making the decision to use react router more difficult by requiring a separate routing mechanism for emitting json (or other types of data).\n\nImagine something like this on the server:\n\n``` js\nhandleReqeuest(function(req, res) {\n  var requestType = getRequestType(req);\n\n  if (requestType === 'json') {\n    Router.matchRoutes(routes, req.path, function(err, abortReason, state) {\n\n      // devs could add a static `getJSON` to handlers to represent their url as json\n      var deepestHandler = state.matches.reverse()[0].route.props.handler\n\n      deepestHandler.getJSON(function(json) {\n        res.json(json);\n      });\n    });\n  }\n  else if (requestType === 'html') {\n    Router.renderRoutesToString(routes, req.path, function(err, abortReason, html) {\n      res.send(html);\n    });\n  }\n});\n```\n\nRight now this just sends along the `nextState`, we'd definitely need to prune down the `state` object a bit, I don't want to have to support our internal data structure as public API.\n",
        "comments": 14
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 7,
        "changed_files": 4,
        "created_at": "2014-10-09T00:01:20Z",
        "closed_at": "2014-10-30T05:22:07Z",
        "merged_at": null,
        "body": "I opened and save all the files in the module's root, modules, and scripts folders.  This removed all trailing whitespace in those files. \n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-10-08T23:59:22Z",
        "closed_at": "2014-10-09T17:22:39Z",
        "merged_at": null,
        "body": "It should be in peerDependencies, not devDependencies.  Otherwise,\nyou'll get needless failures on `npm list`.\n\nNote: if you are developing ReactRouter itself, your repo should be\ninside your calling app's node_modules until this is fixed:\n\nhttps://github.com/npm/npm/issues/5875\n\nIf you try to instead resolve this by installing a copy of React inside\nReactRouter's node_modules, you're liable to end up with a broken\nbuild, because webpack will include both copies in parallel.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 60,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2014-10-08T23:51:11Z",
        "closed_at": "2014-10-16T03:28:43Z",
        "merged_at": null,
        "body": "Anything you pass into handlerProps will be passed as props into all your handlers.\n\nFor instance:\n\n```\n<Routes\n    handlerProps =  {\n                      {\n                        \"favoriteFruit\": \"banana\",\n                        \"favoriteDrink\": \"smoothie\"\n                      }\n                    }\n>\n    <Route handler = { Trunk } >\n        <Route handler = { Branch } >\n            <Route handler = { Leaf } />\n        </Route>\n    </Route>\n</Routes>\n```\n\nif Leaf was the active route; Trunk, Branch, and Leaf would all be\ncalled with favoriteFruit and favoriteDrink as props, like so:\n\n```\n<Trunk\n    favoriteFruit = \"banana\"\n    favoriteDrink = \"smoothie\"\n>\n    <Branch\n        favoriteFruit = \"banana\"\n        favoriteDrink = \"smoothie\"\n    >\n        <Leaf\n            favoriteFruit = \"banana\"\n            favoriteDrink = \"smoothie\"\n        />\n    </Branch>\n</Trunk>\n```\n\n---\n\nIf the test can be improved, please let me know!\n",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-10-08T20:00:03Z",
        "closed_at": "2014-10-09T17:31:08Z",
        "merged_at": null,
        "body": "Add package support for the [JSPM Module Loader](http://jspm.io)\n## Problem\n\nThe package's main property points to source files instead of the distributable. When consuming this library with something like jspm we want to be using `dist/react-router.js`\n## Solution\n\nFortunately jspm can utilize jspm-specific configuration so that a library doesn't have to alter their main property if they don't want to. See [Configuring Packages for jspm](https://github.com/jspm/registry/wiki/Configuring-Packages-for-jspm) for more information on the specifics.\n",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2014-10-08T08:06:02Z",
        "closed_at": "2014-10-08T14:00:51Z",
        "merged_at": "2014-10-08T14:00:51Z",
        "body": "Fixes #369.\n\nTest Plan: npm test\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-10-08T02:22:17Z",
        "closed_at": "2015-02-24T23:45:42Z",
        "merged_at": null,
        "body": "",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2014-10-07T20:39:39Z",
        "closed_at": "2014-10-08T01:22:06Z",
        "merged_at": "2014-10-08T01:22:04Z",
        "body": "fixes #343 \n\n@mjackson @spicyj \n\nI'm worried I'm not thinking about this clearly, but I don't think we need to decode the query params before sending them on to the `qs` module. Can you think of anything I'm missing?\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-10-06T18:30:04Z",
        "closed_at": "2014-10-06T20:49:44Z",
        "merged_at": "2014-10-06T20:49:44Z",
        "body": "Trailing commas don't work in old versions of IE, and are not present\nin the rest of the codebase. Removed the one that remained, which\nallows Google Closure compiler to compiles this code.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-10-06T04:16:30Z",
        "closed_at": "2014-10-06T14:13:35Z",
        "merged_at": "2014-10-06T14:13:35Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-10-06T02:16:10Z",
        "closed_at": "2014-10-07T20:41:02Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2014-10-05T15:46:05Z",
        "closed_at": "2014-10-07T20:41:14Z",
        "merged_at": null,
        "body": "Most the time people ask about getting at route info, they just want to know the name of the active child route.\n\nToday you can do that like this:\n\n``` js\nrender: function() {\n  var child = this.props.activeRouteHandler();\n  var name = child.name;\n  return  <div>{child}</div>;\n}\n```\n\nThis is useful for sidebar implementations, scoped page search (we do this), and I'm sure many other things.\n\nMight as well just give devs the active route so the code becomes:\n\n``` js\nrender: function() {\n  var name = this.props.activeRoute.name;\n  return  <div><this.props.activeRouteHandler/></div>;\n}\n```\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 22,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2014-10-05T15:33:55Z",
        "closed_at": "2014-10-07T20:41:22Z",
        "merged_at": null,
        "body": "Seems to me most everybody's use-case for wanting to know anything about routes is to know the active routes.\n\nThis simply exposes the route container's active routes publicly.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2014-10-05T03:46:34Z",
        "closed_at": "2014-10-07T20:24:07Z",
        "merged_at": "2014-10-07T20:24:07Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2014-10-04T03:26:56Z",
        "closed_at": "2014-10-06T22:03:04Z",
        "merged_at": null,
        "body": "Fixes #291\n\nBy using a timeout, we break outside of the catching effect of Promise.then, so any errors that occur within setState will bubble up and be able to be caught and logged by the console.\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2014-10-02T19:51:45Z",
        "closed_at": "2014-10-05T02:33:31Z",
        "merged_at": "2014-10-05T02:33:31Z",
        "body": "matched correct directory name\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2208,
        "deletions": 1895,
        "changed_files": 60,
        "created_at": "2014-09-29T16:50:05Z",
        "closed_at": "2014-10-04T03:47:41Z",
        "merged_at": "2014-10-04T03:47:41Z",
        "body": "This PR is a little messy (apologies) because I had to merge with @gaearon's changes that we merged into master, but it should preserve everything he did WRT scrolling behavior.\n\nThere may be a few bugs. Please run through the examples and let me know what you find!\n\n@rpflorence checklist edit:\n- [x] data-flow example: click on a taco, refresh, page is blank, introduced by  8b787037dead245c3d3a49ab411e29a7bb5cde8a\n- [x] master-detail and transitions examples: `Router.transitionTo` is not a function (should probably just search all examples to fix these)\n- [x] all examples: if you refresh at a route and then use the back button it doesn't work (works fine, however, before a refresh, simple-master-detail is a good one to see this behavior)\n- [x] ~~partial app loading (while you're in there fix this maybe?! j/k we can worry about this later)~~\n",
        "comments": 12
    },
    {
        "merged": true,
        "additions": 84,
        "deletions": 3,
        "changed_files": 4,
        "created_at": "2014-09-29T15:16:26Z",
        "closed_at": "2014-10-08T02:30:00Z",
        "merged_at": "2014-10-08T02:30:00Z",
        "body": "closes #275\ncloses #294\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 41,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2014-09-29T14:48:28Z",
        "closed_at": "2014-10-05T04:02:15Z",
        "merged_at": null,
        "body": "Fixes a bug introduced in #326 that caused transitions to fail.  \n\nFlux forbids actions dispatched in the middle of dispatch, but that's precisely what happens when `PUSH` triggers `REPLACE` in default abortion handler.\n\nWith this commit, we introduce a pending action queue that is always executed in one tick, but allows action handlers to fire other actions.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 31,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2014-09-29T13:52:00Z",
        "closed_at": "2014-09-29T19:10:47Z",
        "merged_at": null,
        "body": "Fixes #301 \n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 11,
        "changed_files": 2,
        "created_at": "2014-09-29T13:20:00Z",
        "closed_at": "2014-10-03T14:05:13Z",
        "merged_at": "2014-10-03T14:05:13Z",
        "body": "I forgot to remove these guys in #326.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-09-29T10:28:14Z",
        "closed_at": "2014-10-05T03:58:45Z",
        "merged_at": "2014-10-05T03:58:45Z",
        "body": "",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 315,
        "deletions": 136,
        "changed_files": 14,
        "created_at": "2014-09-29T00:06:13Z",
        "closed_at": "2014-09-29T03:56:17Z",
        "merged_at": "2014-09-29T03:56:17Z",
        "body": "> Note: This PR lacks docs\n\nThis removes support for `preserveScrollPosition` due to its unforunate naming.\nInstead, we introduce three scrolling strategies:\n- `none`: Router doesn't scroll the window when routes change\n- `scrollToTop` (default): Router always scrolls to top when routes change\n- `imitateBrowser`: Router tries to act like browser acts with server-rendered pages: it scrolls to top when clicking on links, but tries to restore position when navigating back and forward\n\nYou can only specify these on `<Routes />` only.\nPer-route overrides are not supported, but you can supply a custom strategy object.\n\nThis also fixes #252.\n\nMigration path:\n\nThe default changed from what corresponded to `imitateBrowser`, to `scrollToTop`.\nIf router's server-rendered scrolling imitation worked well for you, you must now specify it explicitly:\n\n```\n// before\n<Routes>\n<Routes preserveScrollPosition={false}>\n\n// after\n<Routes scrollStrategy='imitateBrowser'>\n```\n\nIf you wish router to not try to manage scrolling, you must opt out:\n\n```\n// before\n<Routes preserveScrollPosition={true}>\n\n// after\n<Routes scrollStrategy='none'>\n```\n\nAlso, as a third option, you may now use the simple `scrollToTop` strategy.\n",
        "comments": 34
    },
    {
        "merged": false,
        "additions": 118,
        "deletions": 125,
        "changed_files": 9,
        "created_at": "2014-09-28T19:22:49Z",
        "closed_at": "2014-09-28T21:40:57Z",
        "merged_at": null,
        "body": "As discussed in #252, I would like to be able to differentiate between user- and browser-initiated events.\nThis allows us to avoid trying to restore scroll position when user clicks on links.\n\n@mjackson and I thought that perhaps turning `*Location` objects into full-fledged action creators helps achieve that goal.\nCurrent path state would move into `PathStore` which becomes less sophisticated.\n\nIn this pull request, I'd like to ask @mjackson and @rpflorence to comment on whether we proceed with this approach, seeing how I changed `HistoryLocation` and `PathStore`. (Scrolling is not implemented here, but this PR is pre-requisite for implementing proper scrolling anyway.)\n\nThis approach is more in line with Flux:\n- All actions (whether user's or browser's) go through the same flow\n- PathStore only keeps track of store instead of doing stuff\n\nThe downsides (?):\n- Custom `Locations` now need to know about `LocationDispatcher`, `ActionTypes` and `PayloadSources`\n- The action-creating parts of `HistoryLocation` will be duplicated in all `Locations`, they get more fat\n\nI don't think these problems are that bad, but I'd like a few opinions before going ahead with this.\nThanks!\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 82,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2014-09-27T23:07:13Z",
        "closed_at": "2014-10-05T03:56:57Z",
        "merged_at": null,
        "body": "#### Description\n\nThis pr adds a couple of helper components that make dealing with transitioning in complex components a little easier.  The two components, `<TransitionTo />` and `<ReplaceWith />` expect to be rendered and will trigger their respective `Router` actions.\n\nIn a component that manages a fair amount of async state, I often find myself rendering different pieces of content in response to the different states of my data (e.g. spinner when data is loading, alerts when in error state, normal otherwise).  Sometimes, I need to move to a completely different page in response to what the data tells me (think redirecting to login when checking the server for auth state).  Instead of having that state inspection logic in `componentDidUpdate` and another set of data state inspection logic in `render`, these components let me unify that logic in the `render` method.\n#### Usage\n\n```\nif (this.state.auth == 'loading') {\n  return <LoadingThingy>;\n}\n\nif (this.state.auth == 'loggedout') {\n  return <TransitionTo name=\"login\" query={{next: window.location.pathname + window.location.search}} />;\n}\n\nreturn <SoManyAwesomeThings />;\n```\n",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-09-27T14:26:06Z",
        "closed_at": "2014-09-29T05:30:37Z",
        "merged_at": "2014-09-29T05:30:37Z",
        "body": "Just a simple path fix. Perhaps it might also be more advantageous to explain that these commands should be run from the root of the project? I always try to assume a user has no knowledge of NPM/package.json/etc.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 38,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2014-09-26T20:39:47Z",
        "closed_at": "2014-09-30T03:03:13Z",
        "merged_at": null,
        "body": "",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-09-25T12:52:09Z",
        "closed_at": "2014-10-03T14:05:36Z",
        "merged_at": "2014-10-03T14:05:36Z",
        "body": "I found that there is an undocumented prop, `name`, which is passed to a `RouteHandler` in addition to `params`, `query`, and `activeRouteHandler`. It is really useful so I added it to the docs (hopefully it's not meant to be internal use only).\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-09-24T15:28:29Z",
        "closed_at": "2014-11-23T06:27:33Z",
        "merged_at": null,
        "body": "Currently changed props are not passed down to children as reported by issue https://github.com/rackt/react-router/issues/268.\n\nBut this is necessary if the router should work with a functional cursor library, like:\nhttps://github.com/mquan/cortex\nhttps://github.com/dustingetz/react-cursor\nhttps://github.com/caseywebdev/cursors\n\nThis pull request contains the changes necessary to support changing props. This was a quick way to get it working and might not be the prettiest, but I felt like I should atleast share this effort... Might help to integrate it into `computeHandlerProps` or so...\n",
        "comments": 37
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-09-22T16:01:23Z",
        "closed_at": "2014-10-05T03:54:42Z",
        "merged_at": "2014-10-05T03:54:42Z",
        "body": "Something like this may be helpful either here or in the README\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2014-09-18T16:32:35Z",
        "closed_at": "2014-09-19T02:16:57Z",
        "merged_at": null,
        "body": "Makes `Link` more like Ember's `link-to`, allowing any React component to act as a link (i.e. to get the `active` class and nice `to`/`params`/`query` handling).\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-09-17T19:25:01Z",
        "closed_at": "2014-10-05T03:47:09Z",
        "merged_at": null,
        "body": "Using Router.transitionTo with a dot in the path throws : \n\n`Uncaught Error: Invariant Violation: Missing \"splat\" parameter for path : [the path]`\n\nRelated to #297\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2014-09-17T16:57:30Z",
        "closed_at": "2014-10-05T02:44:00Z",
        "merged_at": null,
        "body": "eg <Redirect from=\"oldPath\" to=\"newPath\" params={{ id: \"defaultId\" }} />\n",
        "comments": 12
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 7,
        "changed_files": 2,
        "created_at": "2014-09-17T09:17:38Z",
        "closed_at": "2014-09-17T15:14:29Z",
        "merged_at": "2014-09-17T15:14:29Z",
        "body": "This patch resolves a small issue where `ActiveDelegate.paramsAreActive` and `ActiveDelegate.queryIsActive` only cast the incoming parameters to strings.\n\nThis prevents the following link from having the `active` class set:\n\n``` javascript\n<Link params={{numeric: 123}} />\n```\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 26,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-09-16T07:00:47Z",
        "closed_at": "2014-09-29T15:59:14Z",
        "merged_at": null,
        "body": "Added four tests. Only 1 (the first one) is succeeding.\n\nThese are related to issue #279.\n\nHope I didn't mess things up too much..\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2014-09-15T20:29:12Z",
        "closed_at": "2014-09-18T18:13:15Z",
        "merged_at": "2014-09-18T18:13:15Z",
        "body": "I added a `retryAndReplace` method to `Transition` that acts the same as `retry` except it uses `replaceWith` instead of `transitionTo`.\n\nMy use case for this was that I was saving a transition during authentication. After authentication, I would prefer the back button to go to the screen that requested the original transition instead of back to the auth screen.\n",
        "comments": 14
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-09-14T14:16:09Z",
        "closed_at": "2014-09-16T18:11:41Z",
        "merged_at": null,
        "body": "Just spent some time scratching my head here ...\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-09-11T15:29:49Z",
        "closed_at": "2014-09-12T23:37:40Z",
        "merged_at": "2014-09-12T23:37:40Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-09-11T13:26:18Z",
        "closed_at": "2014-09-11T18:49:08Z",
        "merged_at": "2014-09-11T18:49:08Z",
        "body": "https://github.com/facebook/flux/issues/45 also impacts react-router when it is being used with webpack with source maps support.\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2014-09-08T17:13:17Z",
        "closed_at": "2014-09-13T19:54:10Z",
        "merged_at": "2014-09-13T19:54:10Z",
        "body": "The overview sample code for NotFoundRoute contains some unclosed tags.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 236,
        "deletions": 208,
        "changed_files": 10,
        "created_at": "2014-09-02T16:21:50Z",
        "closed_at": "2014-09-02T20:05:21Z",
        "merged_at": null,
        "body": "<Routes> components now store their own active state and emit active\nstate change events to ActiveState descendants that are interested.\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 14,
        "changed_files": 2,
        "created_at": "2014-08-31T22:06:03Z",
        "closed_at": "2014-09-01T00:34:41Z",
        "merged_at": "2014-09-01T00:34:41Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 162,
        "deletions": 80,
        "changed_files": 15,
        "created_at": "2014-08-29T08:52:31Z",
        "closed_at": "2014-08-29T14:32:02Z",
        "merged_at": "2014-08-29T14:32:02Z",
        "body": "The router now remembers the last window scroll position at various\npaths and automatically scrolls the window to match after transitions\ncomplete unless preserveScrollPosition=true is used.\n\nThis commit also introduces a flux-style architecture to the high-level\ntransitionTo/replaceWith/goBack methods.\n\nFixes #189\nFixes #186\n",
        "comments": 13
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-08-28T08:36:29Z",
        "closed_at": "2014-08-28T13:25:32Z",
        "merged_at": "2014-08-28T13:25:32Z",
        "body": "This fixes #238 \n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 26,
        "deletions": 10,
        "changed_files": 1,
        "created_at": "2014-08-27T22:38:22Z",
        "closed_at": "2014-08-28T13:08:29Z",
        "merged_at": "2014-08-28T13:08:29Z",
        "body": "Fixes #230\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 118,
        "deletions": 13,
        "changed_files": 5,
        "created_at": "2014-08-27T02:26:22Z",
        "closed_at": "2014-08-27T19:27:58Z",
        "merged_at": null,
        "body": "Please review and merge #214 before this.\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-08-26T10:36:57Z",
        "closed_at": "2014-08-26T12:50:17Z",
        "merged_at": "2014-08-26T12:50:17Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 68,
        "deletions": 32,
        "changed_files": 8,
        "created_at": "2014-08-26T05:17:03Z",
        "closed_at": "2014-08-26T16:24:57Z",
        "merged_at": "2014-08-26T16:24:57Z",
        "body": "- old behavior is maintained, but logs a\n  deprecation warning\n- instead of passing in properties to fill in\n  the dynamic segments, we just take it from the\n  params object\n\ncloses #217\n",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 114,
        "deletions": 22,
        "changed_files": 7,
        "created_at": "2014-08-26T04:14:20Z",
        "closed_at": "2014-08-26T15:03:42Z",
        "merged_at": "2014-08-26T15:03:42Z",
        "body": "gimme some of that sweet, sweet DOM diffing\n\ncloses #97\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-08-26T01:38:20Z",
        "closed_at": "2014-08-26T03:58:22Z",
        "merged_at": "2014-08-26T03:58:22Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-08-22T12:11:29Z",
        "closed_at": "2014-08-22T17:01:14Z",
        "merged_at": null,
        "body": "Fixes a warning from event-emitter when using more than ten Links (or\nother components using the ActiveState mixin) by allowing an unlimited number of listeners (as suggested here: http://nodejs.org/docs/latest/api/events.html#events_emitter_setmaxlisteners_n). \n\nThis is to try to fix issue #220.\n\nOr would it be better to somehow group event listeners? Or is there some other way of solving this problem?\n\n(Sorry if I'm doing this wrong, haven't done a pull request before.)\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 122,
        "deletions": 106,
        "changed_files": 4,
        "created_at": "2014-08-19T18:55:47Z",
        "closed_at": "2014-08-27T19:20:49Z",
        "merged_at": null,
        "body": "[changed] \\* in paths no longer matches .\n[added] Support for arrays in query strings\n\nFixes #142\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 14,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-08-14T07:41:02Z",
        "closed_at": "2014-08-14T13:46:00Z",
        "merged_at": null,
        "body": "Unwinds incoming arrays to findMatches to allow a usage like this:\n\n```\n<Routes>\n    {someRoutes}\n    {someOtherRoutes}\n    <Route name=\"start ... />\n</Routes\n```\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 226,
        "deletions": 107,
        "changed_files": 13,
        "created_at": "2014-08-14T06:36:01Z",
        "closed_at": "2014-08-14T23:00:37Z",
        "merged_at": "2014-08-14T23:00:37Z",
        "body": "Also, changed behavior of routes with no name, path, or children so\nthey act as default routes. <DefaultRoute> is essentially just sugar.\n\nFixes #164\nFixes #193\n",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2014-08-09T09:12:56Z",
        "closed_at": "2014-08-09T17:12:19Z",
        "merged_at": "2014-08-09T17:12:19Z",
        "body": "Some minor typos in docs\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 429,
        "deletions": 12,
        "changed_files": 16,
        "created_at": "2014-08-07T23:21:19Z",
        "closed_at": "2014-10-10T05:37:43Z",
        "merged_at": null,
        "body": "This PR allows the path to be given to <Routes> as a prop.\n\n``` javascript\n<Routes initialPath=\"/some/path\"> ... </Routes>\n```\n\nThis only works server side. This patch also stops the URLStore and RoutesStore being started as componentWillMount is called but componentWillUnmount isn't call on server side. This would lead to a memory leak and potential async issue when multiple pages are being rendered at once.\n\nWhen rendering on server side you should always make a new instance of `<Routes>` so if multiple pages are being rendered they don't change the routes in another page.\n\n``` javascript\nvar App = React.createClass({\n  render: function(){\n    return <Routes initialPath={this.props.initialPath} location=\"history\"> ... </Routes>\n  }\n});\n\n//server side\nReact.renderComponentToString(<App initialPath=\"/some/path\" />);\n\n//client side\nReact.renderCompoent(<App />, domelement);\n```\n",
        "comments": 108
    },
    {
        "merged": true,
        "additions": 21,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2014-08-07T14:50:09Z",
        "closed_at": "2014-08-08T17:11:02Z",
        "merged_at": "2014-08-08T17:11:02Z",
        "body": "See https://github.com/rackt/react-router/pull/173 for previous discussion.\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2014-08-06T23:59:22Z",
        "closed_at": "2014-08-07T04:46:23Z",
        "merged_at": "2014-08-07T04:46:23Z",
        "body": "Fixes #170 by merging in props to Link.\n\nAlso fixes the docs to mention that className can be passed, which was already being merged in Link.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2014-08-06T22:49:37Z",
        "closed_at": "2014-08-07T00:32:14Z",
        "merged_at": "2014-08-07T00:32:14Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2014-08-06T22:14:35Z",
        "closed_at": "2014-08-07T14:50:21Z",
        "merged_at": null,
        "body": "When `stopPropagation` is set, `event.stopPropagation()` will be called in the `<Link />`'s click handler.\n\nI didn't add tests for this because I didn't see any for `<Link/>` yet; LMK if they're needed.\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 77,
        "deletions": 0,
        "changed_files": 6,
        "created_at": "2014-08-06T19:52:58Z",
        "closed_at": "2014-08-07T04:33:43Z",
        "merged_at": "2014-08-07T04:33:43Z",
        "body": "not sure how to test this. I want to get some functional tests going, but for now I've got it in one of the examples and it works, its also very simple code just exercising existing API.\n\nI think my next task is to make testing way better.\n\ncloses #159\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 317,
        "deletions": 139,
        "changed_files": 11,
        "created_at": "2014-08-05T22:18:22Z",
        "closed_at": "2014-08-13T07:07:16Z",
        "merged_at": null,
        "body": "Mostly just cut/paste code into various locations handlers.  A nice side-effect is that we could use the `memoryHandler` for rendering on the server-side I would imagine.  Just need to support passing in the `currentPath` somehow.\n\nAll tests should be passing.  As @mjackson warned me, I did have some trouble with the tests, but they should all be passing now, and I think the coverage isn't too bad.\n\nThis location handler API will make it easy to plug in HistoryJS support now.\n\ncloses #166\n",
        "comments": 19
    },
    {
        "merged": false,
        "additions": 150,
        "deletions": 79,
        "changed_files": 4,
        "created_at": "2014-08-05T20:17:07Z",
        "closed_at": "2014-08-06T22:15:18Z",
        "merged_at": null,
        "body": "The goal here is to be able to allow for a [react-bootstrap](https://github.com/react-bootstrap/react-bootstrap) `NavItem` to utilize the power of `Link`. Virtually removing all the duplicated code in [react-router-bootstrap](https://github.com/mtscout6/react-router-bootstrap) in particular for the [`NavItemLink` component](https://github.com/mtscout6/react-router-bootstrap/blob/master/src/NavItemLink.cjsx).\n",
        "comments": 21
    },
    {
        "merged": true,
        "additions": 27,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2014-08-03T16:15:25Z",
        "closed_at": "2014-08-04T04:04:47Z",
        "merged_at": "2014-08-04T04:04:47Z",
        "body": "Navigation to root URL can fail when the URLStore is setup with\nlocation strategy 'hash'. This happens because URLStore.push\nverifies the current path. Unfortunately the used currentPath is\nnot valid for the location strategies _hash_ and _history_.\n\nThis change changes URLStore.push so that it uses the location\nstrategy specific current path. This value is already provided\nby URLStore.getCurrentPath.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-08-01T04:33:38Z",
        "closed_at": "2014-08-06T05:28:05Z",
        "merged_at": "2014-08-06T05:28:05Z",
        "body": "There are a lot of requests to introspect in handlers on the route name. We transfer other \"static\" props to the handler, why not `name`?\n\nSome requests:  #150, #119.\n\nUse cases:\n- single handler for multiple routes can branch on name\n- introspection in general allows for building convention in an app\n- bread crumbs\n- managing document title\n\nBut really, best argument for passing it down to the handler is that we pass other props down and there is no harm in the handler knowing the name of the route its handling.\n\nIf we don't pass it in, then people can/will just do this instead:\n\n``` xml\n<Route name=\"someName\" gimmeabreak=\"someName\"/>\n```\n",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 46,
        "deletions": 33,
        "changed_files": 26,
        "created_at": "2014-08-01T03:49:18Z",
        "closed_at": "2014-08-06T18:20:16Z",
        "merged_at": "2014-08-06T18:20:16Z",
        "body": "this puts all public modules in the root of the\npackage to:\n- conveniently require them\n- easily identify what is public v. private\n\nfor example:\n\n``` js\n// instead of doing this\nvar Router = require('react-router');\nvar Link = Router.Link;\n\n// or this\nvar Link = require('react-router/modules/Link');\n\n// you can now do this\nvar Link = require('react-router/Link');\n```\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 212,
        "deletions": 101,
        "changed_files": 4,
        "created_at": "2014-07-31T04:25:53Z",
        "closed_at": "2014-08-14T22:46:53Z",
        "merged_at": "2014-08-14T22:46:53Z",
        "body": "Also, removed Routes.handleAsyncError and Routes.handleCancelledTransition.\n\nThis PR exposes these handlers as props so they can be overridden by users. The `onTransitionError` prop is especially useful since it permits users to attach their own error handlers instead of using the default error handler that just `throw`s (see #151).\n\nI've written tests for these new features that all pass when I run them alone. However, when I run `npm test` locally there are 3 failing tests, but I'm not convinced that any of them have to do with my changes. I've digged around quite a bit but can't figure out what's going on in the DOM while the tests are running.\n\n@rpflorence Since you're more experienced with karma than I am (and writing DOM tests in general) I thought you might be able to take a look?\n",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 38,
        "deletions": 4,
        "changed_files": 4,
        "created_at": "2014-07-27T15:45:55Z",
        "closed_at": "2014-08-07T17:26:45Z",
        "merged_at": "2014-08-07T17:26:44Z",
        "body": "When a page\u2019s content is long and you transition\nto a new route, the scroll position persists\nand its super dumb.\n\nThis mixin goes on a route handler that you know\nhas long content and scrolls the window up when\nyou leave the page.\n\nNot a bad idea to put this on every route handler\n\ncloses #121\n",
        "comments": 14
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-27T14:29:08Z",
        "closed_at": "2014-07-27T15:33:01Z",
        "merged_at": "2014-07-27T15:33:01Z",
        "body": "The new example would throw an error because `Routes` is undefined.\n\nIt might be neater to use the new style with React 0.11.x in the examples, not sure how you feel about that. e.g.\n\n```\nvar Router = require('react-router');\nReact.renderComponent((\n  <Router.Routes>\n```\n\n...etc.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 187,
        "deletions": 0,
        "changed_files": 5,
        "created_at": "2014-07-27T04:54:33Z",
        "closed_at": "2014-07-27T16:13:18Z",
        "merged_at": "2014-07-27T16:13:18Z",
        "body": "This is just a start on the work needed to eventually support server-side rendering (see #57). The other things needed are:\n\n1) A `renderRoutesToString(routes, path)` method\n2) Actually mixing this in to `Route` (or a `RouteHandler` mixin, see #65)\n\nIdeally we can merge these pieces one at a time and make a release when they're all ready.\n",
        "comments": 12
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-07-25T08:17:21Z",
        "closed_at": "2014-07-27T04:33:36Z",
        "merged_at": null,
        "body": "Restore the de facto browser behavior for middle click on links: Open to\nbackground tab.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 570,
        "deletions": 485,
        "changed_files": 16,
        "created_at": "2014-07-25T07:05:01Z",
        "closed_at": "2014-07-26T22:38:52Z",
        "merged_at": null,
        "body": "Fixes #112.\n\nTest Plan: Loaded each of the examples and clicked around. npm test too.\n",
        "comments": 32
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2014-07-23T18:01:54Z",
        "closed_at": "2014-07-24T20:22:59Z",
        "merged_at": null,
        "body": "This change allows a params prop to be passed to the Link component as an alternative to passing a separate prop for each route param.  Although you could achieve the same result using transferPropsTo, doing so will also transfer extraneous props that aren't route params, causing isActive to return false when it should return true.\n",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-07-23T12:44:21Z",
        "closed_at": "2014-07-23T15:59:28Z",
        "merged_at": null,
        "body": "It tripped me up quite a bit :)\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 37,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-07-22T08:14:47Z",
        "closed_at": "2014-07-22T13:12:32Z",
        "merged_at": "2014-07-22T13:12:32Z",
        "body": "Made a few improvements:\n- The test for `URLStore.replace` was calling `URLStore.push`\n- Added coverage for `URLStore.back`\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-10T20:39:19Z",
        "closed_at": "2014-07-27T04:40:51Z",
        "merged_at": null,
        "body": "It doesn't feel very \"React-like\" to have to keep track of whether I've changed the URL already or not.\n",
        "comments": 16
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-07-02T17:13:44Z",
        "closed_at": "2014-07-14T17:26:54Z",
        "merged_at": "2014-07-14T17:26:54Z",
        "body": "Still calling it `Router`.  Previous docs called it `ReactRouter`.  Not sure which you want to encourage.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 275,
        "deletions": 1,
        "changed_files": 6,
        "created_at": "2014-07-02T16:05:18Z",
        "closed_at": "2014-07-02T17:57:11Z",
        "merged_at": null,
        "body": "Replaces #52 \n\nAllows your route handlers to place constraints on the path and/or params they will handle and redirects to another route if the constraints do not match.\n\nUsage:\n\n``` javascript\nvar UserEditHandler = React.createClass({\n  mixins      : [ Constrainable ],\n\n  statics : {\n    redirectTo : '404',\n    pathConstraints : /^\\/user\\/123\\/(create|edit)$/\n  },\n\n  render : function() { return React.DOM.div(); }\n});\n\nvar PageEditHandler = React.createClass({\n    mixins : [Constrainable],\n    statics : {\n        redirectTo : '404',\n        paramConstraints : {\n            pageId : /^[A-Za-z]+$/,\n            action : /^\\d+$/\n        },\n    },\n    render : function() { return React.DOM.div(); }\n});\n\nReact.renderComponent(\n    <Route handler={SiteWrapper}>\n        <Route path='/user/:userId/:action' handler={UserEditHandler} />\n        <Route path='/page/:pageId/:action' handler={PageEditHandler} />\n    </Route>,\n    document.body\n);\n```\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2014-07-01T15:11:46Z",
        "closed_at": "2014-07-01T17:12:14Z",
        "merged_at": "2014-07-01T17:12:14Z",
        "body": "Implement the correct format for repository, see https://www.npmjs.org/doc/package.json.html#repository\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2014-06-30T17:43:21Z",
        "closed_at": "2014-07-02T12:47:01Z",
        "merged_at": null,
        "body": "Re: issue #58\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2014-06-28T16:45:30Z",
        "closed_at": "2014-06-28T19:46:57Z",
        "merged_at": "2014-06-28T19:46:57Z",
        "body": "I noticed when I had an numeric 0 as a parameter value that an invariant messages was thrown. This is because the param value was coercing to false. This PR changes that invariant to handle those situations.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-06-27T23:26:10Z",
        "closed_at": "2014-06-28T06:11:28Z",
        "merged_at": "2014-06-28T06:11:28Z",
        "body": "Assigning new props to a Link instance should force a re-check of it's active state.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-06-27T12:56:55Z",
        "closed_at": "2014-06-27T15:04:15Z",
        "merged_at": "2014-06-27T15:04:15Z",
        "body": "When you set className on a Link instance, isActive is never true since it is included in the route comparison.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 77,
        "deletions": 6,
        "changed_files": 3,
        "created_at": "2014-06-26T15:29:39Z",
        "closed_at": "2015-10-15T20:57:01Z",
        "merged_at": null,
        "body": "Adds the ability to specify regex constraints for param values on individual routes. Example:\n\n``` javascript\n\nvar constraints = { id : /^\\d+/, action: /^(create|read|update|delete)$/ };\nReact.renderComponent((\n    <Route handler={SiteWrapper}>\n        <Route name='posts' handler={PostPage} path='/posts/:id/:action' constraints={constraints} />\n        <Route name='404' handler={NotFoundPage} path='*' />\n    </Route>\n), document.body);\n\n```\n\nIn this example, the path `/posts/123/read` will route to `PostPage`, while the paths `/posts/abc/read` and `/posts/123/foobar` will route to `NotFoundPage`.\n",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2014-06-26T14:37:33Z",
        "closed_at": "2014-06-27T03:34:19Z",
        "merged_at": "2014-06-27T03:34:19Z",
        "body": "Small nitpick, makes the components look a bit better in React Developer Tools.\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-06-25T02:09:01Z",
        "closed_at": "2014-06-25T21:59:15Z",
        "merged_at": "2014-06-25T21:59:15Z",
        "body": "Not being familiar with Ember, I wasn't clear on how nested routes work. This example would definitely have helped me understand (assuming it's correct).\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2014-06-24T03:45:00Z",
        "closed_at": "2014-07-02T13:50:40Z",
        "merged_at": "2014-07-02T13:50:40Z",
        "body": "This makes it less likely to clash with a user's react version.  If they upgrade to 0.11 when it comes out, your package will automatically use their version.  If you discover it's not compatible with 0.11, you can restrict the peerDependencies to disallow it, and then they'll get a warning/error instead of it silently including both react versions.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 14,
        "changed_files": 3,
        "created_at": "2014-06-22T21:03:58Z",
        "closed_at": "2014-06-23T15:56:47Z",
        "merged_at": "2014-06-23T15:56:47Z",
        "body": "webpack creates **one** chunk per `require.ensure`. To create a chunk per module you need one `require.ensure` per module. That's repeated work if you do this manually so the bundle-loader does it for you. So to keep most of the original code you could do it with:\n\n``` diff\n-    require.ensure([], function() {\n-      this.routeCache[this.globalName] = require('./async-components/' + this.filePath);\n+    require('bundle!./async-components/' + this.filePath)(function(component) {\n+      this.routeCache[this.globalName] = component;\n```\n\nBut this would only use components in a pre-defined path :( So a better practise is to not pass a path to a module, but to pass the bundle function. See PR. I also removed to global `routeCache` and replaced it with a static class var.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1096,
        "deletions": 1136,
        "changed_files": 35,
        "created_at": "2014-06-21T22:19:18Z",
        "closed_at": "2014-06-24T04:55:36Z",
        "merged_at": "2014-06-24T04:55:36Z",
        "body": "This PR simplifies things quite a bit.\n\nThere are now only two types of React components: `Route` and `Link`. Both components are able to be rendered normally using `React.renderComponent`. Everything that was previously encapsulated in `Router` is now in `Route`, but only the top-level routes ever render. All others are used for configuration, as before.\n\nThe recommended usage is now:\n\n``` js\nvar routes = (\n  <Route handler={App}>\n    <Route name=\"user\" path=\"user/:userId\" handler={User}/>\n  </Route>\n);\n\nReact.renderComponent(routes, document.body);\n```\n\nwhich should be more familiar to React users than our custom `Router#renderComponent` method.\n\nThis work should help with #38 and #34.\n",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 59,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2014-06-20T10:07:01Z",
        "closed_at": "2014-06-20T13:34:08Z",
        "merged_at": null,
        "body": "This adds a `renderComponentToString()` method for server-side rendering. Server side rendering doesn't work yet since we need to call `dispatch()` before `renderComponent()`, but it looks like you already have a plan in place for this seeing as it appears that `state.props` is expected to be shared.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 26,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2014-06-17T16:29:55Z",
        "closed_at": "2014-06-18T20:02:46Z",
        "merged_at": null,
        "body": "Fixes #28.\n\nI'm not sure if it's correct to do `document.createElement` in a test, but it seems to work.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-06-11T06:37:39Z",
        "closed_at": "2014-06-11T15:36:01Z",
        "merged_at": "2014-06-11T15:36:01Z",
        "body": "Seems query string routing was only working in hash mode, this tiny fix makes sure `getWindowPathname` uses both `pathname` and `search` properties of the location object.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2014-06-07T17:27:37Z",
        "closed_at": "2014-06-08T03:00:57Z",
        "merged_at": "2014-06-08T03:00:57Z",
        "body": "Argument name xml can be confusing.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2014-05-31T08:31:00Z",
        "closed_at": "2014-06-05T17:30:34Z",
        "merged_at": null,
        "body": "Fix `ReactRouter.replaceWith()` in examples to include an empty params object.\n\nWithout the fix the following error will occur.\n`Uncaught TypeError: Cannot read property 'query' of undefined`\n\nI think this could also be fixed by making the params object optional.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 75,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2014-05-28T03:54:39Z",
        "closed_at": "2014-05-28T18:12:46Z",
        "merged_at": "2014-05-28T18:12:46Z",
        "body": "First stab at documenting the API of the Routes, Route, and Link components. \n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 95,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2014-05-27T08:13:38Z",
        "closed_at": "2014-06-20T08:37:05Z",
        "merged_at": null,
        "body": "I don't have time to completely grok the details of the impl right now, so I did the minimum setup needed and added a comment as to how you'd get this working with server rendering.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 29,
        "deletions": 18,
        "changed_files": 12,
        "created_at": "2014-05-27T07:31:31Z",
        "closed_at": "2014-05-27T15:24:28Z",
        "merged_at": "2014-05-27T15:24:28Z",
        "body": "",
        "comments": 2
    }
]