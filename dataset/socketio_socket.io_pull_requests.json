[
    {
        "merged": true,
        "additions": 631,
        "deletions": 321,
        "changed_files": 11,
        "created_at": "2023-09-02T20:54:13Z",
        "closed_at": "2023-10-11T08:37:13Z",
        "merged_at": "2023-10-11T08:37:13Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* [x] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behavior\r\nThe types of the `emit`, `emitWithAck`, `serverSideEmit`, and `serverSideEmitWithAck` have issues with their types.\r\n\r\nThey revert to `any` very often or aren't arrays when they should be (server/namespace emit and server/namespace => broadcastOperator emit).\r\n\r\n### New behavior\r\nThis fixes most of this behavior and adds tests for them.\r\n\r\n### Other information (e.g. related issues)\r\nFixes #4813 \r\n\r\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-07-27T08:28:11Z",
        "closed_at": "2023-10-10T15:32:19Z",
        "merged_at": "2023-10-10T15:32:19Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [x] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behavior\r\n\r\nNo socket.io client library for PHP listed.\r\n\r\n### New behavior\r\n\r\nList Elephant.IO as socket.io client library for PHP.\r\n\r\n### Other information (e.g. related issues)\r\n\r\n\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 74,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2023-07-19T08:06:04Z",
        "closed_at": "2023-07-21T06:33:46Z",
        "merged_at": "2023-07-21T06:33:46Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* [x] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\nChange is fixing bug described here: https://github.com/socketio/socket.io/issues/4772\r\n\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-06-18T11:04:40Z",
        "closed_at": "2023-06-20T05:49:02Z",
        "merged_at": "2023-06-20T05:49:02Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* [x] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [x] other\r\n\r\n### Current behavior\r\nThe type of socket.data is Partial<SocketData>. If I am passing SocketData type as {id: number, name: string}, then as I read socket.data.name I would have to use non-null assertions even though my own type implies that id would always be defined.\r\n\r\n### New behavior\r\nNow, if someone wants to specify that a few or all of their properties might not be available at runtime, they can do so by specifying that in their own type.\r\n\r\n\r\n### Other information (e.g. related issues)\r\nSee [issue 4537](https://github.com/socketio/socket.io/issues/4537)\r\n\r\n\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 9176,
        "deletions": 8703,
        "changed_files": 91,
        "created_at": "2023-04-30T09:07:52Z",
        "closed_at": "2023-05-03T08:20:32Z",
        "merged_at": null,
        "body": "### The kind of change this PR does introduce\r\n\r\n* [x] a bug fix\r\n* [ ] a new feature\r\n* [x] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behavior\r\nThe current private chat example for **vue** does have two problems, it's outdated and uses legacy ssl provider. This means it can't run on Node version above 16. Other issues are with installing dependencies and people getting confused of why a redis connection error has occured.\r\n\r\n### New behavior\r\nI have fixed the issue by adding `NODE_OPTIONS=--openssl-legacy-provider` while serving the website and also adding documentation that improves the understanding of getting started with the example.\r\n\r\n### Other information (e.g. related issues)\r\n#4681 ",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-04-29T08:39:23Z",
        "closed_at": "2023-05-04T05:27:10Z",
        "merged_at": "2023-05-04T05:27:10Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* [x] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\nI moved `types` condition to the front. `package.json#exports` are **order-sensitive** - they are always matched from the top to the bottom. When a match is found then it should be used and no further matching should occur. \r\n\r\nRight now, the current setup works in TypeScript but it's considered a bug and it should not be relied upon, see the thread and the comment [here](https://github.com/microsoft/TypeScript/issues/50762#issuecomment-1528318260). For that reason, I would like to fix all popular packages that misconfigured their `exports` this way so the bug can be fixed in TypeScript.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-03-28T08:41:03Z",
        "closed_at": "2023-08-11T11:44:43Z",
        "merged_at": null,
        "body": "Parser maybe parse `undefined` value to `null`, like [msgpackr](https://github.com/kriszyp/msgpackr#readme)'s `encodeUndefinedAsNil` option.\r\n\r\n\r\n### The kind of change this PR does introduce\r\n\r\n* [x] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behavior\r\nThrow error.\r\n\r\n### New behavior\r\nWork fine.\r\n\r\n### Other information (e.g. related issues)\r\n\r\n\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 39411,
        "deletions": 5453,
        "changed_files": 276,
        "created_at": "2023-03-25T17:55:27Z",
        "closed_at": "2023-04-13T06:38:26Z",
        "merged_at": null,
        "body": "### The kind of change this PR does introduce\r\n\r\n* [x] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behavior\r\n\r\n\r\n### New behavior\r\n\r\n\r\n### Other information (e.g. related issues)\r\n\r\n\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-02-09T18:05:25Z",
        "closed_at": "2023-02-20T00:17:18Z",
        "merged_at": null,
        "body": "### The kind of change this PR does introduce\r\n\r\n* [x] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behavior\r\n\r\nTypes are not found when typescript moduleResolution is set to NodeNext, issue #4621\r\n\r\n### New behavior\r\n\r\nWorks normally with NodeNext\r\n\r\n### Other information (e.g. related issues)\r\n\r\nMust be merged together with the engine.io PR https://github.com/socketio/engine.io/pull/669\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 7,
        "changed_files": 2,
        "created_at": "2023-02-03T12:24:18Z",
        "closed_at": "2023-02-04T08:04:13Z",
        "merged_at": null,
        "body": "### The kind of change this PR does introduce\r\n* [X] a new feature\r\n\r\n### New behavior\r\nThe \"disconnecting\" and \"disconnect\" events will now include additional details to help debugging if anything has gone wrong.\r\nThe goal is to mirror this change made to the client : https://github.com/socketio/socket.io-client/commit/b862924b7f1720979e5db2f0154906b305d420e3\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-01-28T18:05:35Z",
        "closed_at": "2023-02-16T08:25:44Z",
        "merged_at": "2023-02-16T08:25:44Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [x] other\r\n\r\n### Current behavior\r\n\r\n\r\n### New behavior\r\n\r\n\r\n### Other information (e.g. related issues)\r\n\r\n\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 123,
        "deletions": 2,
        "changed_files": 5,
        "created_at": "2023-01-19T22:51:11Z",
        "closed_at": "2023-01-23T06:58:16Z",
        "merged_at": null,
        "body": "- When a socket disconnects from a child namespace (those created by a ParentNamespace), if this option is enabled and there are no other sockets connected, it will call nsp.adapter.close() and remove the namespace.\r\n- The namespace can be connected to later (it will be recreated)\r\n- Added some tests to cover the new code changes\r\n\r\n\r\n### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [x] a new feature\r\n* [ ] an update to the documentation\r\n* [x] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behavior\r\nCurrently, child namespaces (those created by a `ParentNamespace`, maybe dynamic namespace is the correct term?) exist forever while the server is running. This can cause issues with certain adapters (like redis) where it continues to subscribe and never unsubscribes, as pointed out in [this  issue](https://github.com/socketio/socket.io-redis-adapter/issues/480).\r\n\r\n### New behavior\r\nThis PR adds a new server option, `cleanupEmptyChildNamespaces`. With this option enabled, when a client socket disconnects, if there are no other sockets connected  to the namespace, the following with occur:\r\n\r\n- Call `nsp.adapter.close()`\r\n- Remove the namespace from the servers internal namespace list (`_nsps`)\r\n- Remove the namespace from it's parent list (`ParentNamespace.children`)\r\n\r\nCalling `adapter.close()` will allow the adapters to clean up any subscriptions. \r\n\r\nRemoving the namespace from `_nsps` is necessary, otherwise the adapters won't re-subscribe when the namespace is connected to again. \r\n\r\nRemoving the namespace from the `ParentNamespace.children` is to prevent memory leaks, since the old namespace is no longer used.\r\n\r\n### Other information (e.g. related issues)\r\nOne thing I'm unsure of is how this will affect the other adapters. I only use the redis adapter, which doesn't implement close yet (I will be creating a new PR to implement it). I don't know if calling close on the other adapters would have some bad side effects.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 9182,
        "deletions": 8714,
        "changed_files": 91,
        "created_at": "2023-01-18T02:58:06Z",
        "closed_at": "2023-10-10T18:06:15Z",
        "merged_at": null,
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [x] other\r\n\r\n### Current behavior\r\nThe current examples doesn't include how to implement private messaging in React.\r\n\r\n### New behavior\r\nThis PR adds a new example for implementing private messaging in React.\r\n\r\n### Other information (e.g. related issues)\r\n#4580 \r\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-01-17T13:21:56Z",
        "closed_at": "2023-01-18T07:16:27Z",
        "merged_at": "2023-01-18T07:16:27Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [x] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behavior\r\n\r\n\r\n### New behavior\r\n\r\n\r\n### Other information (e.g. related issues)\r\n\r\nAdds new `maxHttpBufferSize` default value which was mentioned in releases and not in changelog.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-01-10T23:20:17Z",
        "closed_at": "2023-01-12T05:26:23Z",
        "merged_at": "2023-01-12T05:26:23Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [x] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\nThis adds the [rust-socketio](https://github.com/1c3t3a/rust-socketio) implementation to the list of socket.io implementations.\r\n\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-01-10T23:06:03Z",
        "closed_at": "2023-01-11T09:45:57Z",
        "merged_at": "2023-01-11T09:45:57Z",
        "body": "This adds typings for the socket.io `engine` field, which offers better IntelliSense when retrieving the server, as well as more confidence on the developer-side of what types of fields are entering the server.\r\n\r\nThis fixes #4590.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 20,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-12-15T15:38:52Z",
        "closed_at": "2023-01-24T08:25:20Z",
        "merged_at": null,
        "body": "### The kind of change this PR does introduce\r\n\r\n* [x] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behavior\r\nThe RemoteSocket does currently not expose a timeout method. With that I encountered problems when emitting events by using a remote socket that I fetched from another instance by using the redis adapter. \r\n\r\nWhen I emit a message like this: \r\n\r\n```typescript\r\nremoteSocketFromServer2.emit('send', { key: 'value' }, (err, res) => {\r\n    if (err) {\r\n        ...\r\n    } else {\r\n        ...\r\n    }\r\n});\r\n```\r\n\r\nthen the client receives the emitted message but the callback of the sender is invoked immediately with a timeout error. Reason for that is that the flags.timeout of the BroadcastOperator is not set when emitting the message. \r\n\r\n<img width=\"681\" alt=\"image\" src=\"https://user-images.githubusercontent.com/5354675/207900044-eec50d72-67fe-4dc1-a6a7-18b254e30a41.png\">\r\n\r\n\r\n### New behavior\r\nExposes a timeout method that can be called on the RemoteSocket to set a timeout. \r\n\r\n### Other information (e.g. related issues)\r\n\r\nI encountered this problem by using the following dependencies:\r\n\r\n```json\r\n{\r\n    \"socket.io\": \"^4.5.4\",\r\n    \"socket.io-client\": \"^4.5.4\",\r\n    \"@socket.io/redis-adapter\": \"^8.0.0\",\r\n}\r\n```\r\n\r\nThe following piece of code can be used to reproduce the issue: \r\n\r\n```typescript\r\nimport Redis from 'ioredis';\r\nimport { createAdapter } from '@socket.io/redis-adapter';\r\n\r\nimport { Server } from 'socket.io';\r\n\r\nimport { io as ioClient } from 'socket.io-client';\r\n\r\ndescribe('Redis socket io store System Test', () => {\r\n    let io1: Server;\r\n    let io2: Server;\r\n\r\n    beforeAll(async () => {\r\n        io1 = new Server();\r\n        io1.listen(5001);\r\n        setupRedisAdapterForServer(io1);\r\n\r\n        io2 = new Server();\r\n        io2.listen(5002);\r\n        setupRedisAdapterForServer(io2);\r\n    });\r\n\r\n    function setupRedisAdapterForServer(io: Server) {\r\n        const pubClient = new Redis({\r\n            port: 6379, // Redis port\r\n            host: '127.0.0.1', // Redis host\r\n            username: 'default', // Not used\r\n            password: 'my-top-secret', // Not Used\r\n            db: 0 // Defaults to 0\r\n        });\r\n\r\n        const subClient = pubClient.duplicate();\r\n        io.adapter(createAdapter(pubClient, subClient, { requestsTimeout: 5000 }));\r\n    }\r\n\r\n    it('scenario', async () => {\r\n        const socket2 = await connectSocket(5002);\r\n\r\n        socket2.on('send', (msg, ack) => {\r\n            ack('OK');\r\n        });\r\n\r\n        const socketsFromServer2 = await io1.in(socket2.id).fetchSockets();\r\n        const socketFromServer2 = socketsFromServer2[0];\r\n\r\n        let result;\r\n        socketFromServer2.emit('send', { key: 'value' }, (err, res) => {\r\n            if (err) {\r\n                result = err;\r\n            } else {\r\n                result = res[0];\r\n            }\r\n        });\r\n\r\n        while (!result) {\r\n            await delay(250);\r\n        }\r\n\r\n        expect(result).toBe('OK');\r\n    });\r\n});\r\n\r\nconst delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\r\n\r\nasync function connectSocket(port) {\r\n    const socket = ioClient('http://localhost:' + port, {\r\n        transports: ['websocket']\r\n    });\r\n\r\n    const promise = new Promise((resolve, reject) => {\r\n        socket.on('connect', () => {\r\n            resolve('success');\r\n        });\r\n        socket.on('connect_error', (err) => {\r\n            reject(err);\r\n        });\r\n    });\r\n\r\n    await promise;\r\n\r\n    return socket;\r\n}\r\n\r\n```\r\n\r\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 11905,
        "deletions": 5170,
        "changed_files": 65,
        "created_at": "2022-11-08T06:47:28Z",
        "closed_at": "2022-12-07T05:49:27Z",
        "merged_at": null,
        "body": "### A missing next() function in the middleware in the documentation, more specifically in the \"Additional attributes\" on this [link](https://socket.io/docs/v4/server-socket-instance/#additional-attributes)\r\n\r\n\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 4901,
        "deletions": 6,
        "changed_files": 3,
        "created_at": "2022-09-24T16:50:27Z",
        "closed_at": "2022-10-06T15:47:52Z",
        "merged_at": null,
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [x] other\r\n\r\n### Current behavior\r\njava script files are not formatted \r\n\r\n### New behavior\r\nNow are well formatted and readable.\r\n\r\n### Other information (e.g. related issues)\r\n\r\n\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-09-02T15:47:18Z",
        "closed_at": "2022-09-02T22:10:19Z",
        "merged_at": "2022-09-02T22:10:19Z",
        "body": "This PR adds explicit [permissions section](https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#permissions) to workflows. This is a security best practice because by default workflows run with [extended set of permissions](https://docs.github.com/en/actions/security-guides/automatic-token-authentication#permissions-for-the-github_token) (except from `on: pull_request` [from external forks](https://securitylab.github.com/research/github-actions-preventing-pwn-requests/)). By specifying any permission explicitly all others are set to none. By using the principle of least privilege the damage a compromised workflow can do (because of an [injection](https://securitylab.github.com/research/github-actions-untrusted-input/) or compromised third party tool or action) is restricted.\r\nIt is recommended to have [most strict permissions on the top level](https://github.com/ossf/scorecard/blob/main/docs/checks.md#token-permissions) and grant write permissions on [job level](https://docs.github.com/en/actions/using-jobs/assigning-permissions-to-jobs) case by case.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2022-08-11T19:32:04Z",
        "closed_at": "2022-09-01T20:14:26Z",
        "merged_at": null,
        "body": "Fixes a build break in 4.8 caused by a bug fixed on the TS side; see https://github.com/microsoft/TypeScript/issues/49489",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2022-07-25T18:36:09Z",
        "closed_at": "2022-09-01T20:13:56Z",
        "merged_at": "2022-09-01T20:13:55Z",
        "body": "Hi there! \ud83d\udc4b\r\n\r\nTypeScript recently added some stricter checking around unconstrained generics being incompatible with emptyish object types. The changes are only in nightly versions of TypeScript right now, but we've been exploring how open-source projects have been impacted. These are the changes necessary for socket.io to build cleanly in TypeScript 4.8.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-06-30T10:09:15Z",
        "closed_at": "2022-07-05T12:16:07Z",
        "merged_at": null,
        "body": "#4407\r\n\r\n\r\n### The kind of change this PR does introduce\r\n\r\n* [x] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behavior\r\n\r\n\r\n### New behavior\r\n\r\n\r\n### Other information (e.g. related issues)\r\n\r\n\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 58,
        "deletions": 27,
        "changed_files": 6,
        "created_at": "2022-05-08T15:57:18Z",
        "closed_at": "2022-05-28T16:22:58Z",
        "merged_at": null,
        "body": "### The kind of change this PR does introduce\r\n\r\n* [x] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Example data\r\n```\r\nexport class EmitEvents implements EventsMap {\r\n    'join': (data: string) => string;\r\n}\r\nexport class ListenEvents implements EventsMap {\r\n    'message': (data: string) => number;\r\n}\r\n```\r\n### Current behavior : Emit (and derivates)\r\n```\r\nconst sock: Socket<EmitEvents, ListenEvents>;\r\n//typing for sock.emit is:\r\n//sock.emit(ev : \"join\", data : string);\r\nsock.emit('join', \"hello\", (res)=>{console.log(res)}); // Leads to error since the callback is not defined in typing\r\n```\r\n### New behavior\r\n```\r\nconst sock: Socket<EmitEvents, ListenEvents >;\r\n//typing for sock.emit is:\r\n//sock.emit(ev : \"join\", data : string, cb?:(response : string)=>void); // Uses the return type of the EmitEvent to type the response in the callback\r\nsock.emit('join', \"hello\", (res)=>{console.log(res)}); // Compiles\r\n```\r\n\r\n### Current behavior : On (and derivates)\r\n```\r\nconst sock: Socket<EmitEvents, ListenEvents>;\r\n//typing for sock.on is:\r\n//sock.on(ev : \"message\", listener : (data: string)=>void);\r\nsock.emit('join', \"hello\", (data, cb)=>{cb(\"Welcome\")}); // Leads to error since the callback is not defined in typing\r\n```\r\n\r\n### New behavior\r\n```\r\nconst sock: Socket<EmitEvents, ListenEvents>;\r\n//typing for sock.on is:\r\n//sock.on(ev : \"message\", listener : (data: string, cb:(response:number)=>void)=>void); // Uses return type of the ListenEvent as Cb type\r\nsock.emit('join', \"hello\", (data, cb)=>{cb(1)}); // Compiles\r\n```\r\n\r\n\r\n### Other information (e.g. related issues)\r\n\r\nCould possibly break older type script versions from building the Project.\r\nThe fix is using following features which I haven't seen be used in other parts of the code:\r\n    1. named tuples        (Released in TS4.0)\r\n    2. ReturnType  utility (Released in TS2.8)\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 9,
        "changed_files": 1,
        "created_at": "2022-04-25T08:30:13Z",
        "closed_at": "2022-05-03T06:18:14Z",
        "merged_at": null,
        "body": "### The kind of change this PR does introduce\r\n\r\n* [x] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behavior\r\nCurrently you can't attach a https server to the socket.io instance. You would first need to cast it to any and then to http.Server if you want to use it\r\n\r\n### New behavior\r\nSocket.io should now also accept https.Server\r\n\r\n### Other information (e.g. related issues)",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-04-19T11:35:02Z",
        "closed_at": "2022-04-20T20:47:34Z",
        "merged_at": "2022-04-20T20:47:34Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [x] other\r\n\r\n### Current behavior\r\n\r\nPrevious create-react-app example can work normally. However, the `useEffect` hook will work multiple times when a new message arrives.\r\n\r\nI add two console log to show the problem (line 14 and 26 in [Gist](https://gist.github.com/wdwang09/931347966471780437a5d0288269a1d7)).\r\n\r\n![before](https://user-images.githubusercontent.com/40729335/163992306-5f377e9f-c75f-424b-8f09-397429b8c9db.gif)\r\n\r\nSocket.IO callback will change the states, so the React component updates and call `useEffect` again.\r\n\r\n### New behavior\r\n\r\nI fix this problem by passing a second argument to `useEffect` ([doc](https://reactjs.org/docs/hooks-effect.html#tip-optimizing-performance-by-skipping-effects)). When states change, don't run `useEffect` again.\r\n\r\n![after](https://user-images.githubusercontent.com/40729335/163993072-87617d37-58ad-4be5-8483-6d2704258604.gif)\r\n\r\n### Other information (e.g. related issues)\r\n\r\nOther change: I add the logo and other elements generated by create-react-app.\r\n\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-02-20T21:51:47Z",
        "closed_at": "2022-04-24T23:52:34Z",
        "merged_at": null,
        "body": "### The kind of change this PR does introduce\r\n\r\n* [x] a bug fix\r\n\r\n### Current behavior\r\nsocketServer.of(...) method has not ability to pass templates like Socket constructor do \r\n\r\n### New behavior\r\nEnables\r\n\r\n### Other information (e.g. related issues)\r\nI've created, but not accepted yet\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 151,
        "deletions": 5,
        "changed_files": 6,
        "created_at": "2022-02-13T04:05:33Z",
        "closed_at": "2022-04-20T20:23:10Z",
        "merged_at": null,
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behavior\r\n\r\n\r\n### New behavior\r\n\r\n\r\n### Other information (e.g. related issues)\r\n\r\n\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 7,
        "changed_files": 2,
        "created_at": "2022-01-25T09:44:25Z",
        "closed_at": "2022-01-25T21:18:18Z",
        "merged_at": "2022-01-25T21:18:18Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [x] other\r\n\r\n### Current behavior\r\n\r\n\r\n### New behavior\r\n\r\n\r\n### Other information (e.g. related issues)\r\nRunned npm audit fix in order to update the engine.io dependency version. The new version fixes the vulnerability [CVE-2022-21676](https://github.com/socketio/engine.io/security/advisories/GHSA-273r-mgr4-v34f)\r\n\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-01-23T18:59:01Z",
        "closed_at": "2022-01-25T00:25:06Z",
        "merged_at": "2022-01-25T00:25:06Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* [x] a bug fix\r\n\r\n### Current behavior\r\n\r\n#4138 added an `Event` type using Typescript\u2019s labelled tuple syntax:\r\n\r\n```ts\r\ntype Event = [eventName: string, ...args: any[]];\r\n```\r\n\r\nThis fails to compile if a consumer is using a TypeScript version less than 4.x\r\n\r\nReference: https://www.typescriptlang.org/docs/handbook/release-notes/typescript-4-0.html#labeled-tuple-elements\r\n\r\n### New behavior\r\n\r\nThis PR removes the labelling in the `Event` type to continue to support TypeScript 3.x as did 0cb6ac9.\r\n\r\n\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 60,
        "deletions": 38,
        "changed_files": 5,
        "created_at": "2022-01-03T16:06:01Z",
        "closed_at": "2022-01-06T06:14:56Z",
        "merged_at": "2022-01-06T06:14:56Z",
        "body": "Adds https://github.com/socketio/socket.io/issues/4229#issuecomment-1003607352",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2022-01-03T15:39:09Z",
        "closed_at": "2022-01-04T08:09:42Z",
        "merged_at": "2022-01-04T08:09:42Z",
        "body": "Fixes #4229\r\n\r\nhttps://github.com/socketio/socket.io/issues/4229#issuecomment-1003607352 will be done in another PR\r\n\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-12-26T16:13:56Z",
        "closed_at": "2021-12-28T09:27:09Z",
        "merged_at": "2021-12-28T09:27:09Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* [x] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behaviour\r\n\r\nUsing `typescript@4.6.0-dev.20211225` and `\"moduleResolution\": \"nodenext\"` we are unable to resolve types of `socket.io`\r\n\r\n### New behaviour\r\n\r\nMake TypeScript successfully resolve types\r\n\r\n### Other information (e.g. related issues)\r\n\r\nSee https://github.com/microsoft/TypeScript/issues/46770#issuecomment-966612103 for detail, in `nodenext` module resolution it requires a `types` field in `exports` with full filename including extension",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-12-15T11:54:38Z",
        "closed_at": "2022-01-05T07:26:08Z",
        "merged_at": null,
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [x] other\r\n\r\n### Current behavior\r\n\r\n### New behavior\r\n\r\nNow Event type can be used for writing socket middlewares\r\n\r\n### Other information (e.g. related issues)\r\n\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 32,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2021-12-13T12:42:00Z",
        "closed_at": "2022-04-25T00:05:34Z",
        "merged_at": null,
        "body": "### The kind of change this PR does introduce\r\n\r\n* [] a bug fix\r\n* [ ] a new feature\r\n* [x] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [x] other\r\n\r\n### Current behavior\r\nYou can run it with Docker\r\n\r\n### New behavior\r\n\r\n\r\n### Other information (e.g. related issues)\r\n\r\n\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-11-30T08:49:42Z",
        "closed_at": "2021-11-30T23:02:14Z",
        "merged_at": "2021-11-30T23:02:14Z",
        "body": "\u2026module system\r\n\r\n\r\n### The kind of change this PR does introduce\r\n\r\n* [] a bug fix\r\n* [ ] a new feature\r\n* [x ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behavior\r\n\r\nMight not be clear for users that you need to import { Server } from the library. \r\n\r\n### New behavior\r\n\r\nNo behavior has changed. The documentation just makes it clearer now. \r\n\r\n### Other information (e.g. related issues)\r\n\r\n\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2021-11-27T11:37:07Z",
        "closed_at": "2021-11-30T23:03:43Z",
        "merged_at": "2021-11-30T23:03:43Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [x] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [x] other\r\n\r\n### Current behavior\r\nThe source code of the example app `examples/chat`  implies that reconnetion status (failure or success) is shown to the user.\r\nIn fact, it's not, because the reconnection events are listened to incorrectly: you're supposed to listen to the Manager's events like `socket.io.on(...)`, not just `socket.on(...)`.\r\n\r\nI only wanted to take a look at how to handle disconnections and do reconnections, but here is what it came down to :)\r\n\r\n### New behavior\r\nThe example works as it's supposed to, you can now see messages like \"attempt to reconnect has failed\" in the UI.\r\n\r\n### Other information (e.g. related issues)\r\nAlso updated README in the example: it says you need to run `npm ci` to install packages, but since lockfiles are gitignored in the `example` folder, you actually need to run `npm i`\r\n\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 84,
        "deletions": 39,
        "changed_files": 5,
        "created_at": "2021-11-06T17:23:54Z",
        "closed_at": "2021-11-08T14:21:49Z",
        "merged_at": "2021-11-08T14:21:48Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [x] other\r\n\r\n### Current behavior\r\n\r\n`Socket.data` is `any`\r\n\r\n### New behavior\r\n\r\n`Socket.data` is `any` by default but `Partial<ProvidedType>` if a type is provided in the `Server` and/or `Socket` constructors\r\n\r\n### Other information (e.g. related issues)\r\n\r\nI had to wrap the provided type in `Partial` because we are initializing the `Socket.data` with `{}`. I did not want to alter this behavior but instead I just wanted to provide a simple way to type the `Socket.data` field. This fixes #4155.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 3938,
        "deletions": 138,
        "changed_files": 3,
        "created_at": "2021-10-27T16:12:29Z",
        "closed_at": "2022-04-25T00:02:05Z",
        "merged_at": null,
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [x] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behavior\r\n\r\n\r\n### New behavior\r\n\r\n\r\n### Other information (e.g. related issues)\r\n\r\n\r\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 10,
        "changed_files": 1,
        "created_at": "2021-10-22T17:28:07Z",
        "closed_at": "2021-10-24T05:19:44Z",
        "merged_at": "2021-10-24T05:19:44Z",
        "body": "create Event type based on other uses where the first element is the event name and use it for use()\r\n\r\n\r\n### The kind of change this PR does introduce\r\n\r\n* [x] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behavior\r\n\r\nuse() had `any[]` for event arg type fn arg\r\n\r\n### New behavior\r\n\r\nuse() now has `[eventName: string, ...args: any[]]` for event arg type of fn arg\r\n\r\n### Other information (e.g. related issues)\r\n\r\n\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 55,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2021-10-22T17:11:26Z",
        "closed_at": "2021-10-24T05:58:59Z",
        "merged_at": null,
        "body": "### The kind of change this PR does introduce\r\n\r\n* [x] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behavior\r\n\r\nA race condition exists when creating dynamic namespaces (see #4136)\r\n\r\n### New behavior\r\n\r\nThe race condition is fixed.\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2021-10-16T08:29:06Z",
        "closed_at": "2021-10-16T21:58:56Z",
        "merged_at": "2021-10-16T21:58:56Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* [x] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behavior\r\n\r\ncustom server instances not running attach function in constructor. this breaks feathers/socketio package which relies on socket.io.\r\n\r\n### New behavior\r\n\r\ncustom server instance now runs attach function in constructor\r\n\r\n### Other information (e.g. related issues)\r\n\r\nfixes #4124\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-10-07T16:22:51Z",
        "closed_at": "2021-10-08T12:18:03Z",
        "merged_at": "2021-10-08T12:18:03Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [x] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behavior\r\nOld library is deprecated: https://github.com/Quobject/SocketIoClientDotNet\r\n\r\n### New behavior\r\nOfficial site docs are pointing to this actively maintained library: https://github.com/doghappy/socket.io-client-csharp\r\n\r\n### Other information (e.g. related issues)\r\nSite docs link: https://socket.io/docs/v4/\r\n\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-10-03T12:52:54Z",
        "closed_at": "2021-10-12T10:23:32Z",
        "merged_at": null,
        "body": "previous link went to 404 page\r\n\r\n\r\n### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [x] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behavior\r\nlink goes to 404 page\r\n\r\n### New behavior\r\nlink goes to v4 documentation page\r\n\r\n### Other information (e.g. related issues)\r\nn/a\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2021-09-17T05:59:23Z",
        "closed_at": "2021-09-20T06:41:47Z",
        "merged_at": null,
        "body": "\r\n\r\n### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [x] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behavior\r\n\r\nWhen migrating from CommonJS to ESM, the end user no longer had the default option available unless they `import io from 'socket.io/dist/index.js'`.\r\n\r\nYou can see at the bottom of this file: https://unpkg.com/socket.io@4.2.0/dist/index.js\r\n\r\nThere is this line:\r\n\r\n```js\r\nmodule.exports = (srv, opts) => new Server(srv, opts);\r\n```\r\n\r\nwhich is a convenience for CommonJS users, but ESM users don't have this option (unless they import `dist/index.js`)\r\n\r\n### New behavior\r\n\r\nNow they can `import io from 'socket.io'` which is similar to `const io = require('socket.io')` as they had when using CommonJS.\r\n\r\n### Other information (e.g. related issues)\r\n\r\nn/a",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-09-16T22:14:01Z",
        "closed_at": "2021-09-20T07:15:09Z",
        "merged_at": null,
        "body": "### The kind of change this PR does introduce\r\n\r\n* [x] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behavior\r\n\r\nUsing the `name` field in the `cookie` server option produces a type error since the field isn't in `CookieSerializeOptions` but is added by socket.io (engine.io specifically).\r\n\r\n### New behavior\r\n\r\nThe type error doesn't happen anymore.\r\n\r\n### Other information (e.g. related issues)\r\n\r\nSee [the code](https://github.com/socketio/engine.io/blob/master/lib/server.js#L355) that references `name` in engine.io.\r\n\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 60,
        "deletions": 65,
        "changed_files": 2,
        "created_at": "2021-08-26T10:47:37Z",
        "closed_at": "2021-08-26T21:40:04Z",
        "merged_at": null,
        "body": "### Remove Duplicates\r\n\r\n* [x] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n\r\nISSUE #4063 \r\n\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-08-12T01:55:18Z",
        "closed_at": "2021-08-30T06:39:36Z",
        "merged_at": null,
        "body": "Fixed the default export (exported using 'module.exports') not having type definitions\r\n\r\n\r\n### The kind of change this PR does introduce\r\n\r\n* [x] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behavior\r\nThe default export exported using `module.exports` is not exported using `export default`. As a consequence, the default export is not typed and when using typescript as\r\n```typescript\r\nimport io from 'socket.io'\r\nio(3000) // This expression is not callable.\r\n```\r\n\r\n### New behavior\r\n```typescript\r\nimport io from 'socket.io'\r\nio(3000) // Works normally\r\n```",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2021-07-17T21:01:49Z",
        "closed_at": "2021-08-30T05:59:47Z",
        "merged_at": "2021-08-30T05:59:47Z",
        "body": "### The kind of change this PR does introduce\n\n* [ ] a bug fix\n* [x] a new feature\n* [ ] an update to the documentation\n* [ ] a code change that improves performance\n* [ ] other\n\n### Current behavior\n\nClient JavaScript will not be served if the request URL contains a query string.\n\n### New behavior\n\nClient JavaScript will be served, even if the request URL contains a query string.\n\n### Other information (e.g. related issues)\n\nResolves socketio/socket.io#4023\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-07-13T18:21:43Z",
        "closed_at": "2021-07-15T19:48:20Z",
        "merged_at": "2021-07-15T19:48:20Z",
        "body": "test/todo-management/todo.tests.ts:275:3 - error TS2582: Cannot find name 'describe'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha`.\r\n\r\n\r\n### The kind of change this PR does introduce\r\n\r\n* [x] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behavior\r\n\r\n\r\n### New behavior\r\n\r\n\r\n### Other information (e.g. related issues)\r\n\r\n\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2021-06-25T17:05:00Z",
        "closed_at": "2021-06-28T07:14:48Z",
        "merged_at": null,
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [X] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behavior\r\n\r\nA non-sense expression on cron field is present, node 16 not present\r\n\r\n### New behavior\r\n\r\nA non-sense expression on cron field removed, node 16 added\r\n\r\n### Other information (e.g. related issues)\r\n\r\nRe-add possibly the cron schedule if you want\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-06-23T08:34:57Z",
        "closed_at": "2021-06-24T12:53:47Z",
        "merged_at": "2021-06-24T12:53:46Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [X] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behavior\r\n\r\nSetup node v1 in github actions\r\n\r\n### New behavior\r\n\r\nSetup node v2 in github actions\r\n\r\n### Other information (e.g. related issues)\r\n\r\nChangelogs [here](https://github.com/actions/setup-node/releases) \r\n\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2166,
        "deletions": 36345,
        "changed_files": 117,
        "created_at": "2021-05-13T21:30:33Z",
        "closed_at": "2021-05-13T22:37:36Z",
        "merged_at": null,
        "body": "### The kind of change this PR does introduce\r\n\r\n* [] a bug fix\r\n* [ ] a new feature\r\n* [x] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behavior\r\n\r\nPer discussion from https://codaproject.slack.com/archives/G01K0R0BAPR/p1620658218002900 rename the coda-hq org to coda\r\n\r\n### New behavior\r\n\r\nChange `coda-hq` to `coda`. \r\n\r\n### Other information (e.g. related issues)\r\n\r\n\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-05-12T20:22:19Z",
        "closed_at": "2021-06-01T21:04:55Z",
        "merged_at": null,
        "body": "Node.js v10.x has reached the EOL, and it will be no longer supported\r\n\r\n\r\n### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [x] other\r\n\r\n### Current behavior\r\n\r\n\r\n### New behavior\r\n\r\n\r\n### Other information (e.g. related issues)\r\n\r\n\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2021-05-12T18:41:34Z",
        "closed_at": "2021-06-01T21:05:05Z",
        "merged_at": null,
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [x] other\r\n\r\n### Current behavior\r\n\r\n\r\n### New behavior\r\n\r\n\r\n### Other information (e.g. related issues)\r\n\r\nThis is a simple code style change\r\n\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 62,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-04-21T20:29:15Z",
        "closed_at": "2021-08-30T06:36:30Z",
        "merged_at": null,
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [x] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behavior\r\n\r\n`RemoteSocket` objects cannot emit to other members in some rooms. This simple fix is letting users specify to which rooms the `Socket` (retrieved as `RemoteSocket`) is into, and broadcast to them, excepting the original sender.\r\n\r\n```js\r\nio.of('/some-namespace').fetchSockets().then(sockets => {\r\n    sockets.forEach(socket => {\r\n        // Issue: What if you want to emit to everyone but a RemoteSocket?\r\n        if (typeof socket.to !== 'undefined') {\r\n            socket.to('some-room').emit('event', { foo: 'bar' });\r\n        }\r\n    });\r\n});\r\n```\r\n\r\n### New behavior\r\n\r\nYou can now call `.to()` and `.in()` on `RemoteSocket` objects. This way, you can use for example the Redis adapter and use the `RemoteSocket` as a normal `Socket` object when broadcasting to everyone except the sender:\r\n\r\n```js\r\nio.of('/some-namespace').fetchSockets().then(sockets => {\r\n    sockets.forEach(socket => {\r\n        socket.to('some-room').emit('event', { foo: 'bar' });\r\n    });\r\n});\r\n```\r\n\r\n### Other information (e.g. related issues)\r\n\r\nCloses #3857\r\n\r\nIn #3857 is described in simple terms the desired behavior.\r\n\r\nThis also fixes a use case I confront with (and perhaps many will confront).\r\n\r\nConsider having a multi-node or a multi-process deployment of Socket.IO, each one exposing a REST API to accept broadcasting messages (same as Pusher API) and their WS server, used by the clients. Both use Redis adapter and are set up properly for high scalability.\r\n\r\nIf Alice is on Node 1, and Bob is on Node 2, and Alice makes an HTTP request to Node 2 to emit to everyone but to Alice (by using the Client Socket ID), the `fetchSockets()` call will retrieve Bob as `Socket` and Alice as `RemoteSocket`, but calling `.emit()` from `RemoteSocket` will not allow Alice to emit to anyone else.\r\n\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 28,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-03-23T14:24:21Z",
        "closed_at": "2023-10-10T18:00:27Z",
        "merged_at": "2023-10-10T18:00:27Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [x] other\r\n\r\n### Current behavior\r\n\r\nThe examples aren't built by CI.\r\n\r\n### New behavior\r\n\r\nThe examples that can be built are now built as part of CI.\r\n\r\n### Other information (e.g. related issues)\r\n\r\nOpening this to ensure that PRs like #3855 are checked as part of CI.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2021-03-23T14:23:31Z",
        "closed_at": "2021-03-24T22:12:22Z",
        "merged_at": "2021-03-24T22:12:22Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [x] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behavior\r\n\r\n`socket` is inferred as type `Socket` as of 4.0.0; it was previously inferred as `any`. The type annotation is no longer needed to cast the `any` to `Socket`.\r\n\r\n### New behavior\r\n\r\nThe `Socket` type annotation can be safely removed. The behavior is unchanged, but it's less code.\r\n\r\n### Other information (e.g. related issues)\r\n\r\nTyped events in socket.io 4.0 remove the need for writing type annotations in callbacks of reserved events.\r\n\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-03-17T18:05:16Z",
        "closed_at": "2021-03-18T10:39:49Z",
        "merged_at": null,
        "body": "Using a `true` here breaks using union types to do emits.. ie this no longer works\r\n`(channel ? io.to(channel) : io).emit(\"stuff\", message);`\r\n\r\n\r\n### The kind of change this PR does introduce\r\n\r\n* [x] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behavior\r\n\r\n\r\n### New behavior\r\n\r\n\r\n### Other information (e.g. related issues)\r\n\r\n\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 49,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2021-03-12T13:45:59Z",
        "closed_at": "2021-03-31T09:37:38Z",
        "merged_at": "2021-03-31T09:37:37Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* [x] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behavior\r\n\r\nDue to a compiler bug, we had the following issue (see #3833):\r\n\r\n```ts\r\nimport { Server } from \"socket.io\";\r\n\r\nconst io = new Server(3000, {});\r\n\r\n// this works fine\r\nio.on(\"connection\", (socket) => {});\r\n\r\nenum Event {\r\n    CONNECTION = \"connection\",\r\n}\r\n// Fails to compile!\r\n// Argument of type '(socket:Socket) => void' is not assignable to parameter of type 'never'.\r\n// ts(2345)\r\nio.on(Event.CONNECTION, (socket) => {});\r\n```\r\n\r\n### New behavior\r\n\r\nThe above code now compiles. However, in the line `io.on(Event.CONNECTION, (socket) => {});`, the lambda parameter `socket` is inferred to be of type `any` instead of `Socket` if an enum member is used. \r\n\r\nNote that this only affects the situation where an enum member is used: If a string literal is used, the correct type (`Socket`) is still inferred.\r\n\r\nAlso note that inferring `any` in this situation is what was already happening in 3.x. So we are essentially reverting to that, at least until the compiler bug is fixed.\r\n\r\n### Other information (e.g. related issues)\r\n\r\nFixes #3833 \r\n\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-03-10T09:59:01Z",
        "closed_at": "2021-03-10T13:37:09Z",
        "merged_at": null,
        "body": "C:\\Users\\user\\devel\\ts-socket\\server.ts:10\r\n    cb();\r\n    ^\r\nTypeError: cb is not a function\r\n    at Socket.<anonymous> (C:\\Users\\user\\devel\\ts-socket\\server.ts:10:5)\r\n    at Socket.emit (events.js:315:20)\r\n    at Socket.EventEmitter.emit (domain.js:486:12)\r\n    at C:\\Users\\user\\devel\\ts-socket\\node_modules\\socket.io\\dist\\socket.js:435:32 \r\n    at processTicksAndRejections (internal/process/task_queues.js:75:11)\r\n\r\n\r\n### The kind of change this PR does introduce\r\n\r\n* [x] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behavior\r\n\r\n\r\n### New behavior\r\n\r\n\r\n### Other information (e.g. related issues)\r\n\r\n\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2018,
        "deletions": 111,
        "changed_files": 11,
        "created_at": "2021-03-01T21:46:45Z",
        "closed_at": "2021-03-09T23:27:14Z",
        "merged_at": null,
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [x] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behavior\r\n\r\n#### User events\r\n\r\n`EventEmitter` functions, namely `on` and `emit`, accept a string as the event name, and `any[]` as the remaining parameters. This allows users to:\r\n\r\n- Register listeners that listen to wrong event names\r\n- Register listeners that don't match the emitted values\r\n\r\n#### Reserved events\r\n\r\nBecause the event emitter functions aren't strictly typed, it also means that `server.on(\"connection\", (socket: Socket) => { ... })` needs an explicit cast of `socket: Socket`.\r\n\r\n### New behavior\r\n\r\n#### User events\r\n\r\nTypeScript users can define interfaces for the API between server and client by defining interfaces:\r\n\r\n```ts\r\ninterface Messages {\r\n  hello: string;\r\n}\r\n```\r\n\r\nWhen creating the `Server`, users can optionally pass this interface as a type parameter:\r\n\r\n```ts\r\nconst server = new Server<Messages>(httpServer);\r\n```\r\n\r\nWith this in place, calls to `Socket.emit` and `Socket.on` are strictly typed to only allow emitting and listening to `\"hello\"` events:\r\n\r\n```ts\r\nserver.on(\"connection\", (socket) => {\r\n  socket.on(\"hello\", (message) => console.log(message)); // works\r\n  socket.on(\"goodbye\", (message) => console.log(message)); // doesn't type check\r\n});\r\n```\r\n\r\nIt's also possible to define different messages for each direction of the connection:\r\n\r\n```ts\r\ninterface ClientToServerMessages {\r\n  ping: void;\r\n}\r\n\r\ninterface ServerToClientMessages {\r\n  pong: void;\r\n}\r\n\r\nconst server = new Server<ClientToServerMessages, ServerToClientMessages>(httpServer);\r\nserver.on(\"connection\", (socket) => {\r\n  socket.on(\"ping\", () => socket.emit(\"pong\")); // works\r\n  socket.on(\"pong\", () => socket.emit(\"ping\")); // doesn't type check\r\n});\r\n```\r\n\r\nNote that if no type parameter is passed to `Server`, then events are typed as before.\r\n\r\n#### Reserved events\r\n\r\n`server.on(\"connection\", socket => { ... })` now correctly infers the `Socket` type for `socket`. No cast needed! Other reserved events are now also correctly inferred. Strict typing of reserved events is also present when no type parameters are passed to `Server`.\r\n\r\nThis does make this a breaking change if users rely on the `on` callback arguments being of type `any`. This was the case in this project's tests, where `socket` being of typed `any` was used to access private members of `Socket`. The fix is to cast `as any`, which makes the implicit `any` type explicit.\r\n\r\n### Other information (e.g. related issues)\r\n\r\nFixes #3742 \r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2021-02-21T17:58:44Z",
        "closed_at": "2021-02-22T06:36:46Z",
        "merged_at": null,
        "body": "### The kind of change this PR does introduce\r\n\r\n* [x] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behavior\r\n\r\n\r\n### New behavior\r\n\r\n\r\n### Other information (e.g. related issues)\r\n\r\n\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 97,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2021-02-02T11:03:17Z",
        "closed_at": "2021-03-01T08:34:01Z",
        "merged_at": null,
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [x] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### New behavior\r\n\r\nThis PR adds the possibility to exclude specific socket ids when emitting messages:\r\n```js\r\nio.except(id).emit(\"foo\", \"bar\");\r\nsocket.broadcast.except(id).emit(\"foo\", \"bar\");\r\nsocket.to(\"room\").except(id).emit(\"foo\", \"bar\");\r\n```\r\nIn combination with https://github.com/socketio/socket.io-adapter/pull/66 this will allow excluding all sockets in a specific room as well.\r\n\r\n### Other information (e.g. related issues)\r\n\r\nSee also https://github.com/socketio/socket.io-adapter/pull/66 and https://github.com/socketio/socket.io-emitter/pull/92.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-02-01T15:08:27Z",
        "closed_at": "2021-03-18T13:06:13Z",
        "merged_at": "2021-03-18T13:06:13Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* [x] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behavior\r\nClients do not render participants messages due addChatMessage is trying to access to un initiated options to set fade to false\r\n\r\n### New behavior\r\nNow renders\r\n\r\n### Other information (e.g. related issues)\r\n\r\n\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 84,
        "deletions": 76,
        "changed_files": 4,
        "created_at": "2021-01-27T03:01:38Z",
        "closed_at": "2021-02-02T10:51:20Z",
        "merged_at": null,
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [x] other\r\n\r\n### Current behavior\r\n\r\n- Fluent method signatures return the type of the class.\r\n- Method return types are inferred especially when void.\r\n- Overloads do not specify a general-case type signature.\r\n\r\n### New behavior\r\n\r\n- Fluent method signatures return the type of the class, or the type of a derived class calling the base method.\r\n- Method return types are explicitly specified. I think this is an improvement in that it explicitly specifies intention, and the compiler will check that the function body doesn't violate that intention. Let me know if you would like me to revert this change.\r\n- General-case overload type signatures are specified. This prevents undesirable behaviour when using conditional types such as `ReturnType`.  [See this StackOverflow answer](https://stackoverflow.com/a/52760599/11107541).\r\n\r\nPackages that use TypeScript and depend on this package should not experience any breakage or new compiler warnings as a result of this change.\r\n\r\n### Other information (e.g. related issues)\r\n\r\nhttps://www.typescriptlang.org/docs/handbook/advanced-types.html#polymorphic-this-types\r\n\r\nI am motivated to make this change because I am working on a type-utility for socket.io that would enable stronger type checking for `on` and `emit` on both the client and server sides. It involves making interfaces that extend the `Socket` class. Without polymorphic `this`, I wouldn't be able to chain fluent methods such as `on` while keeping my extension-interface's special typings behaviour. Here is a discussion thread I started about this idea: #3777.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-01-20T14:42:43Z",
        "closed_at": "2021-01-20T21:34:52Z",
        "merged_at": "2021-01-20T21:34:52Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [x] other\r\n\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-01-18T16:05:41Z",
        "closed_at": "2021-04-08T12:09:07Z",
        "merged_at": null,
        "body": "### The kind of change this PR does introduce\r\n\r\n* [x] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behavior\r\nCurrently, the Session IDs cannot be sent to the client after they were generated by the server using custom generation method. It seems like the initial handshake results with a good ID, but the one generated after `on('connect', ...)` are not custom generated. Here is the connections in the WS tab:\r\n\r\n| Data | Length |\r\n| - | - |\r\n| 0{\"sid\":\"5533569206.4606719705\",\"upgrades\":[],\"pingInterval\":25000,\"pingTimeout\":5000} | 86 |\r\n| 40/echo-app,{\"headers\":{\"X-CSRF-TOKEN\":\"9Os3T9FdJMaJBLbG15dOG9IWX3XLSGu5uYilVrnI\"}} | 83 |\r\n| 40/echo-app,{\"sid\":\"o4IkedYULu37hAzfAAAD\"} | 42 |\r\n| 42/echo-app,[\"subscribe\",{\"channel\":\"presence-room\",\"auth\":{\"headers\":{\"X-CSRF-TOKEN\":\"9Os3T9FdJMaJBLbG15dOG9IWX3XLSGu5uYilVrnI\"}}}] | 132 |\r\n\r\nAs you can see, the first `sid` is correct (as it is generated in a custom manner), but the subsequent `sid` is not generated using the custom function.\r\n\r\n### New behavior\r\nNot sure if this is a good implementation the way I did it, but I expect this function to be replaceable like the Engine.IO has the `generateId()` function [as explained in the documentation](https://socket.io/docs/v3/server-api/#server-engine-generateId).\r\n\r\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 47,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2021-01-18T10:48:12Z",
        "closed_at": "2021-08-30T06:36:13Z",
        "merged_at": null,
        "body": "### The kind of change this PR does introduce\r\n\r\n* [x] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behavior\r\n\r\nI have a use case where I dynamically create namespaces, but when the namespace is created I also set up some middleware. Those middleware functions are not run for the socket that triggered the dynamic namespace to be created though:\r\n\r\n```js\r\nsio.of((name, query, next) => {\r\n  if (isValidNamespace(name) {\r\n    next(null, true);\r\n    sio.of(name).use((socket, next) => {\r\n\r\n      // This middleware function is not run for the socket that caused the\r\n      // namespace to be created, only for subsequent connections.\r\n      socket.user = authenticate(socket);\r\n      next(null);\r\n\r\n    });\r\n  } else {\r\n    return next(null, false};\r\n  }\r\n});\r\n```\r\n\r\n### New behavior\r\n\r\nThe middleware function should be run for the first connection as well.\r\n\r\n### Other information (e.g. related issues)\r\n\r\nI am aware that you can register middleware directly on the dynamic namespace like\r\n```js\r\nsio.of((name, query, next) => next(null, true)).use((socket, next) => {\r\n  // Do something\r\n});\r\n```\r\nbut in my use case I have to do some setup work when a namespace is created, which requires me to pass the *true* namespace.\r\n\r\nI have solved this by manually patching the socket.io server object\r\n```js\r\nconst { _checkNamespace } = Server.prototype;\r\nServer.prototype._checkNamespace = function(name, auth, fn) {\r\n  return _checkNamespace.call(this, name, auth, function(nsp) {\r\n    if (nsp) {\r\n      process.nextTick(() => fn.call(this, nsp));\r\n    } else {\r\n      fn(nsp);\r\n    }\r\n  });\r\n};\r\n```\r\nwhich delays the connection of the socket to the namespace to the next tick, allowing to do some *synchronous* setup work first. It's exactly that solution that I've used in this PR as well. I've added a test case and all existing tests still pass.\r\n\r\nA similar solution can be used to backport this to the v2 branch as well as the issue exists here too.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-01-16T15:48:31Z",
        "closed_at": "2021-01-17T21:10:37Z",
        "merged_at": "2021-01-17T21:10:37Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [x] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behavior\r\nLink goes to https://github.com/socketio/socket.io-client/blob/master/docs/API.md#new-managerurl-options\r\n\r\n### New behavior\r\nLink goes to https://socket.io/docs/v3/client-api/#new-Manager-url-options\r\n\r\n### Other information (e.g. related issues)\r\n\r\nFixed broken link in Auto-reconnection support section.\r\n\r\n\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-01-15T03:15:14Z",
        "closed_at": "2021-01-15T21:20:05Z",
        "merged_at": "2021-01-15T21:20:05Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [x] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behavior\r\nNo change in behavior.\r\n\r\n### New behavior\r\nNo change in behavior.\r\n\r\n\r\n### Other information (e.g. related issues)\r\nNo related issues.\r\n\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2021-01-07T19:38:06Z",
        "closed_at": "2021-01-08T13:58:38Z",
        "merged_at": "2021-01-08T13:58:38Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [x] other\r\n\r\n### Current behavior\r\nNo strict type checking for few cases in `if` expressions\r\n\r\n### New behavior\r\nadded strict type checks\r\n\r\n### Other information (e.g. related issues)\r\n\r\n\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-12-22T17:17:49Z",
        "closed_at": "2021-01-04T09:39:16Z",
        "merged_at": null,
        "body": "https://github.com/visionmedia/debug/issues/797\r\n\r\n\r\n### The kind of change this PR does introduce\r\n\r\n* [x] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behavior\r\n\r\n\r\n### New behavior\r\n\r\n\r\n### Other information (e.g. related issues)\r\n\r\n\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 483,
        "deletions": 476,
        "changed_files": 10,
        "created_at": "2020-12-11T02:34:30Z",
        "closed_at": "2020-12-11T11:19:21Z",
        "merged_at": "2020-12-11T11:19:21Z",
        "body": "- upgrade prettier to 2.2.0 to gain support for TypeScript's\r\n  new type-only-imports feature.\r\n\r\ntests are passing on my local machine (I was a bit confused by the two expected errors at first). You may want to regenerate package-lock.json yourself if you have (what I think is) a healthy level of distrust. I didn't add a malicious package to it, but there's nothing to immediately stop me from doing so.\r\n\r\n\r\n### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [x] other\r\n\r\n\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-11-29T09:02:20Z",
        "closed_at": "2020-12-09T06:04:31Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1112,
        "deletions": 2814,
        "changed_files": 2,
        "created_at": "2020-11-25T19:07:15Z",
        "closed_at": "2021-01-04T09:36:40Z",
        "merged_at": null,
        "body": "### The kind of change this PR does introduce\r\n\r\n* **a bug fix**\r\n* ~a new feature~\r\n* ~an update to the documentation~\r\n* ~a code change that improves performance~\r\n* ~other~\r\n\r\n### Current behavior\r\n\r\nDependencies are outdated, see #3709 \r\n\r\n### New behavior\r\n\r\nAll dependencies are updated, except for Mocha and Prettier.\r\n\r\n### Other information (e.g. related issues)\r\n\r\nIn order for me to work on this project I first had to fix\r\n[~Cannot run tests on Windows #3707~](https://github.com/socketio/socket.io/issues/3707). \r\nI sent a pull request for that:\r\n[~Make tests work on Windows #3708~](https://github.com/socketio/socket.io/pull/3708)\r\nThis PR depends on that PR, so I suggest merging that one first. It's a very small change.\r\n*UPDATE*: That PR was merged \ud83d\udc4d \r\n\r\nThen, once that is merged, I suggest merging this PR, which is also a small change.\r\n\r\nAfter that, we can try updating Mocha and Prettier in separate PRs. I left them out because updating them caused some issues:\r\n\r\n* [Tests fail with latest version of Mocha #3710](https://github.com/socketio/socket.io/issues/3710)\r\n* [Updating Prettier causes many files to become invalid #3712](https://github.com/socketio/socket.io/issues/3712)\r\n\r\n",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 1038,
        "deletions": 2756,
        "changed_files": 2,
        "created_at": "2020-11-25T16:55:00Z",
        "closed_at": "2020-11-28T00:55:20Z",
        "merged_at": "2020-11-28T00:55:20Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* **a bug fix**\r\n* ~a new feature~\r\n* ~an update to the documentation~\r\n* ~a code change that improves performance~\r\n* ~other~\r\n\r\n### Current behavior\r\n\r\nTests fail on Windows because of the use of single quotes in NPM scripts where Windows only accepts double quotes and because of a bug in NYC that was fixed in 15.0.0.\r\n\r\n### New behavior\r\n\r\nTests run and succeed as expected.\r\n\r\n### Other information (e.g. related issues)\r\n\r\nFull logs of fix + new results:\r\n\r\n```sh\r\nC:\\ws\\socketio>npm outdated\r\nPackage           Current    Wanted    Latest  Location\r\n@types/mocha        8.0.3     8.0.4     8.0.4  socket.io\r\n@types/node       14.14.7  14.14.10  14.14.10  socket.io\r\ndebug               4.1.1     4.1.1     4.3.1  socket.io\r\nengine.io           4.0.1     4.0.4     4.0.4  socket.io\r\neslint             7.12.1    7.14.0    7.14.0  socket.io\r\nmocha               3.5.3     3.5.3     8.2.1  socket.io\r\nnyc                11.9.0    11.9.0    15.1.0  socket.io\r\nprettier           1.19.1    1.19.1     2.2.0  socket.io\r\nsocket.io-parser    4.0.1     4.0.2     4.0.2  socket.io\r\nsuperagent          3.8.3     3.8.3     6.1.0  socket.io\r\nsupertest           3.4.2     3.4.2     6.0.1  socket.io\r\ntypescript          4.0.5     4.1.2     4.1.2  socket.io\r\n\r\nC:\\ws\\socketio>npm uninstall --save-dev nyc && npm install --save-dev nyc\r\nremoved 327 packages and audited 226 packages in 3.234s\r\n\r\n14 packages are looking for funding\r\n  run `npm fund` for details\r\n\r\nfound 3 vulnerabilities (2 low, 1 critical)\r\n  run `npm audit fix` to fix them, or `npm audit` for details\r\n+ nyc@15.1.0\r\nadded 99 packages from 78 contributors and audited 325 packages in 8.649s\r\n\r\n20 packages are looking for funding\r\n  run `npm fund` for details\r\n\r\nfound 3 vulnerabilities (2 low, 1 critical)\r\n  run `npm audit fix` to fix them, or `npm audit` for details\r\n\r\nC:\\ws\\socketio>npm test\r\n\r\n> socket.io@3.0.3 test C:\\ws\\socketio\r\n> npm run format:check && npm run compile && nyc mocha --require ts-node/register --reporter spec --slow 200 --bail --timeout 10000 test/socket.io.ts\r\n\r\n\r\n> socket.io@3.0.3 format:check C:\\ws\\socketio\r\n> prettier --check \"lib/**/*.ts\" \"test/**/*.ts\"\r\n\r\nChecking formatting...\r\nAll matched files use Prettier code style!\r\n\r\n> socket.io@3.0.3 compile C:\\ws\\socketio\r\n> rimraf ./dist && tsc\r\n\r\n\r\n\r\n  socket.io\r\n    \u221a should be the same version as client\r\n    server attachment\r\n      http.Server\r\n        \u221a should serve client\r\n        \u221a should serve source map\r\n        \u221a should serve client (min)\r\n        \u221a should serve source map (min)\r\n        \u221a should serve client (gzip)\r\n        \u221a should serve bundle with msgpack parser\r\n        \u221a should serve source map for bundle with msgpack parser\r\n        \u221a should handle 304\r\n        \u221a should not serve static files\r\n        \u221a should work with #attach\r\n        \u221a should work with #attach (and merge options)\r\n      port\r\n        \u221a should be bound\r\n        \u221a should be bound as a string\r\n        \u221a with listen\r\n        \u221a as a string\r\n    handshake\r\n      \u221a should send the Access-Control-Allow-xxx headers on OPTIONS request\r\n      \u221a should send the Access-Control-Allow-xxx headers on GET request\r\n      \u221a should allow request if custom function in opts.allowRequest returns true\r\n      \u221a should disallow request if custom function in opts.allowRequest returns false\r\n    close\r\n      \u221a should be able to close sio sending a srv\r\n      \u221a should be able to close sio sending a port\r\n      graceful close\r\n        \u221a should stop socket and timers (4625ms)\r\n    namespaces\r\n      \u221a should be accessible through .sockets\r\n      \u221a should be aliased\r\n      \u221a should automatically connect\r\n      \u221a should fire a `connection` event\r\n      \u221a should fire a `connect` event\r\n      \u221a should work with many sockets\r\n      \u221a should be able to equivalently start with \"\" or \"/\" on server\r\n      \u221a should be equivalent for \"\" and \"/\" on client\r\n      \u221a should work with `of` and many sockets\r\n      \u221a should work with `of` second param\r\n      \u221a should disconnect upon transport disconnection\r\n      \u221a should fire a `disconnecting` event just before leaving all rooms\r\n      \u221a should return error connecting to non-existent namespace\r\n      \u221a should not reuse same-namespace connections\r\n      \u221a should find all clients in a namespace\r\n      \u221a should find all clients in a namespace room\r\n      \u221a should find all clients across namespace rooms\r\n      \u221a should not emit volatile event after regular event (506ms)\r\n      \u221a should emit volatile event (514ms)\r\n      \u221a should enable compression by default\r\n      \u221a should disable compression\r\n      \u221a should throw on reserved event\r\n      \u221a should close a client without namespace\r\n      dynamic namespaces\r\n        \u221a should allow connections to dynamic namespaces with a regex\r\n        \u221a should allow connections to dynamic namespaces with a function\r\n        \u221a should disallow connections when no dynamic namespace matches\r\n    socket\r\n      \u221a should not fire events more than once after manually reconnecting\r\n      \u221a should not fire reconnect_failed event more than once when server closed (8262ms)\r\n      \u221a should receive events\r\n      \u221a should receive message events through `send`\r\n      \u221a should error with null messages\r\n      \u221a should handle transport null messages\r\n      \u221a should emit events\r\n      \u221a should emit events with utf8 multibyte character\r\n      \u221a should emit events with binary data\r\n      \u221a should emit events with several types of data (including binary)\r\n      \u221a should receive events with binary data (133ms)\r\n      \u221a should receive events with several types of data (including binary) (147ms)\r\n      \u221a should not emit volatile event after regular event (polling) (212ms)\r\n      \u221a should not emit volatile event after regular event (ws) (213ms)\r\n      \u221a should emit volatile event (polling) (511ms)\r\n      \u221a should emit volatile event (ws) (207ms)\r\n      \u221a should emit only one consecutive volatile event (polling) (518ms)\r\n      \u221a should emit only one consecutive volatile event (ws) (219ms)\r\n      \u221a should emit regular events after trying a failed volatile event (polling) (219ms)\r\n      \u221a should emit regular events after trying a failed volatile event (ws) (206ms)\r\n      \u221a should emit message events through `send`\r\n      \u221a should receive event with callbacks\r\n      \u221a should receive all events emitted from namespaced client immediately and in order (118ms)\r\n      \u221a should emit events with callbacks\r\n      \u221a should receive events with args and callback\r\n      \u221a should emit events with args and callback\r\n      \u221a should receive events with binary args and callbacks (117ms)\r\n      \u221a should emit events with binary args and callback\r\n      \u221a should emit events and receive binary data in a callback (122ms)\r\n      \u221a should receive events and pass binary data in a callback\r\n      \u221a should have access to the client\r\n      \u221a should have access to the connection\r\n      \u221a should have access to the request\r\n      \u221a should see query parameters in the request\r\n      \u221a should see query parameters sent from secondary namespace connections in handshake object\r\n      \u221a should handle very large json (3505ms)\r\n      \u221a should handle very large binary data (2610ms)\r\n      \u221a should be able to emit after server close and restart (2175ms)\r\n      \u221a should enable compression by default\r\n      \u221a should disable compression\r\nNote: warning expected and normal in test.\r\nMissing error handler on `socket`.\r\nError: Illegal attachments\r\n    at Decoder.decodeString (C:\\ws\\socketio\\node_modules\\socket.io-parser\\dist\\index.js:160:23)\r\n    at Decoder.add (C:\\ws\\socketio\\node_modules\\socket.io-parser\\dist\\index.js:105:27)\r\n    at Client.ondata (C:\\ws\\socketio\\dist\\client.js:57:43)\r\n    at Socket.emit (events.js:198:13)\r\n    at Socket.onPacket (C:\\ws\\socketio\\node_modules\\engine.io\\lib\\socket.js:97:16)\r\n    at WebSocket.emit (events.js:198:13)\r\n    at WebSocket.onPacket (C:\\ws\\socketio\\node_modules\\engine.io\\lib\\transport.js:83:10)\r\n    at WebSocket.onData (C:\\ws\\socketio\\node_modules\\engine.io\\lib\\transport.js:93:10)\r\n    at WebSocket.onData (C:\\ws\\socketio\\node_modules\\engine.io\\lib\\transports\\websocket.js:60:11)\r\n    at WebSocket.emit (events.js:198:13)\r\n    at Receiver.receiverOnMessage (C:\\ws\\socketio\\node_modules\\ws\\lib\\websocket.js:797:20)\r\n    at Receiver.emit (events.js:198:13)\r\n    at Receiver.dataMessage (C:\\ws\\socketio\\node_modules\\ws\\lib\\receiver.js:437:14)\r\n    at Receiver.getData (C:\\ws\\socketio\\node_modules\\ws\\lib\\receiver.js:367:17)\r\n    at Receiver.startLoop (C:\\ws\\socketio\\node_modules\\ws\\lib\\receiver.js:143:22)\r\n    at Receiver._write (C:\\ws\\socketio\\node_modules\\ws\\lib\\receiver.js:78:10)\r\n    at doWrite (_stream_writable.js:415:12)\r\n    at writeOrBuffer (_stream_writable.js:399:5)\r\n    at Receiver.Writable.write (_stream_writable.js:299:11)\r\n    at Socket.socketOnData (C:\\ws\\socketio\\node_modules\\ws\\lib\\websocket.js:872:35)\r\n    at Socket.emit (events.js:198:13)\r\n    at addChunk (_stream_readable.js:288:12)\r\n    at readableAddChunk (_stream_readable.js:269:11)\r\n    at Socket.Readable.push (_stream_readable.js:224:10)\r\n    at TCP.onStreamRead [as onread] (internal/stream_base_commons.js:94:17)\r\n      \u221a should error with raw binary and warn (222ms)\r\nNote: warning expected and normal in test.\r\nMissing error handler on `socket`.\r\nError: handle me please\r\n    at Socket._onpacket (C:\\ws\\socketio\\dist\\socket.js:80:987)\r\n    at C:\\ws\\socketio\\dist\\client.js:61:495\r\n    at process._tickCallback (internal/process/next_tick.js:61:11)\r\n      \u221a should not crash when receiving an error packet without handler (248ms)\r\n      \u221a should not crash with raw binary (144ms)\r\n      \u221a should handle empty binary packet (134ms)\r\n      \u221a should not crash when messing with Object prototype (and other globals) (155ms)\r\n      \u221a should throw on reserved event\r\n      onAny\r\n        \u221a should call listener\r\n        \u221a should prepend listener\r\n        \u221a should remove listener\r\n    messaging many\r\n      \u221a emits to a namespace\r\n      \u221a emits binary data to a namespace\r\n      \u221a emits to the rest\r\n      \u221a emits to rooms (123ms)\r\n      \u221a emits to rooms avoiding dupes\r\n      \u221a broadcasts to rooms\r\n      \u221a broadcasts binary data to rooms\r\n      \u221a keeps track of rooms\r\n      \u221a deletes empty rooms\r\n      \u221a should properly cleanup left rooms\r\n      \u221a allows to join several rooms at once\r\n    middleware\r\n      \u221a should call functions\r\n      \u221a should pass errors\r\n      \u221a should pass an object\r\n      \u221a should only call connection after fns\r\n      \u221a should only call connection after (lengthy) fns (319ms)\r\n      \u221a should be ignored if socket gets closed\r\n      \u221a should call functions in expected order (190ms)\r\n      \u221a should disable the merge of handshake packets\r\n      \u221a should work with a custom namespace\r\n\r\n\r\n  118 passing (28s)\r\n\r\n---------------------|---------|----------|---------|---------|---------------------------------------------------------\r\nFile                 | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s\r\n---------------------|---------|----------|---------|---------|---------------------------------------------------------\r\nAll files            |   84.95 |    77.92 |   81.45 |   85.99 |\r\n client.js           |    95.7 |    81.48 |     100 |   95.65 | 54,130,175,209\r\n index.js            |   78.03 |    76.32 |   70.45 |   80.57 | ...,146-147,241,246-249,255-260,306,337,358-359,379-411\r\n namespace.js        |   86.75 |    81.48 |      85 |   86.75 | 87-88,148,168,188-201,211\r\n parent-namespace.js |   95.65 |      100 |   85.71 |   95.65 | 29\r\n socket.js           |    85.9 |    77.78 |   82.35 |   85.81 | ...-229,267,291-301,327,357,375-376,408-409,465,477-488\r\n---------------------|---------|----------|---------|---------|---------------------------------------------------------\r\n```\r\n\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2020-11-18T04:52:42Z",
        "closed_at": "2020-11-25T10:09:18Z",
        "merged_at": "2020-11-25T10:09:18Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [x] other\r\n\r\n### Current behavior \r\nPR template has \"behavior\" spelled \"behaviour\"\r\n\r\n### New behavior \r\nPR template now has \"behavior\"  spelled correctly\r\n\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-11-18T04:44:52Z",
        "closed_at": "2021-01-14T23:28:21Z",
        "merged_at": "2021-01-14T23:28:21Z",
        "body": "Exports the Namespace and Socket type from MJS wrapper\r\n\r\n\r\n### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [x] other\r\n\r\n### Current behavior\r\nMJS wrapper only exports Server\r\n\r\n### New behavior\r\nMJS wrapper exports Server, Namaspace and Socket types \r\n\r\n### Other information (e.g. related issues)\r\n\r\nI would say is a continuation of PR https://github.com/socketio/socket.io/pull/3684 and my comment there\r\nhttps://github.com/socketio/socket.io/pull/3684#issuecomment-729396811\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-11-08T19:40:03Z",
        "closed_at": "2020-11-09T07:58:14Z",
        "merged_at": "2020-11-09T07:58:14Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [x] other\r\n\r\n### Current behaviour\r\n\r\nNeeded interfaces/types are not exposed. `@types/socket.io` used to export these.\r\n\r\n### New behaviour\r\n\r\nExported needed types.\r\n\r\n### Other information (e.g. related issues)\r\n\r\nNoticed while upgrading. Will create a similar PR to `socket.io-client`.\r\nMay want to consider adding the type modifier to the export, so that the actual abstractions won't be exposed. Downside: it will make the `.d.ts` only compatible with ts@2.8+.\r\n\r\n### Off-topic\r\nYou using TypeScript and publishing built-in `.d.ts` is awesome.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2020-11-06T23:38:14Z",
        "closed_at": "2020-12-30T10:22:29Z",
        "merged_at": null,
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [x] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behaviour\r\n\r\nUpon connection, sockets automatically join a room based on their id.\r\n\r\n### New behaviour\r\n\r\nUpon connection, sockets only automatically join a room based on their id if the autojoin option is enabled. (It defaults to `true` for backward compatibility.)\r\n\r\n### Other information (e.g. related issues)\r\n\r\nOur use case of socket.io doesn't require this \"convenience room.\" However, its existence is a major issue for us because it has allowed a DOS attack -- each room creation is causing allocation of AWS resources via our socket.io adapter, which can't be immediately released. We hit our AWS quota for SNS topic resources and then crash.\r\n\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-10-02T07:25:48Z",
        "closed_at": "2020-10-04T21:20:05Z",
        "merged_at": "2020-10-04T21:20:05Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [x] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\nI just found out that there is no reference on the Readme about how to integrate Socket.io on [Fastify](https://www.fastify.io/).\r\nHere is the plugin [link](https://github.com/alemagio/fastify-socket.io).\r\n\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-08-25T14:48:43Z",
        "closed_at": "2020-09-01T07:44:45Z",
        "merged_at": null,
        "body": "v3.2.0 changed default value of `pingTimeout` to 5000. Although docs still states `60000` as default in parentheses.\r\n\r\n\r\n### The kind of change this PR does introduce\r\n\r\n* [] a bug fix\r\n* [ ] a new feature\r\n* [x] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behaviour\r\n\r\n\r\n### New behaviour\r\n\r\n\r\n### Other information (e.g. related issues)\r\n\r\n\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-07-28T09:55:09Z",
        "closed_at": "2021-08-30T06:37:02Z",
        "merged_at": null,
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [x] other\r\n\r\n### Current behaviour\r\nChanging the path is not immediately apparent. The example doesn't point out the default path. And you wouldn't add a script tag to /socket.io/socket.io.js when building apps with webpack for instance.\r\n\r\n### New behaviour\r\nJust gives someone better direction if they're not building something as straightforward.\r\n\r\n### Other information (e.g. related issues)\r\n\r\n\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2020-06-30T02:03:33Z",
        "closed_at": "2021-01-14T23:30:18Z",
        "merged_at": "2021-01-14T23:30:18Z",
        "body": "This pull request adds a `Run on Repl.it` badge to the `README`. This will allow users to easily run this repository in their browser, without having to set up an environment. You can learn more about Repl.it [here](https://repl.it).\r\n\r\n\r\n### The kind of change this PR does introduce\r\n\r\n* [x] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behaviour\r\n\r\n\r\n### New behaviour\r\n\r\n\r\n### Other information (e.g. related issues)\r\n\r\n\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 102,
        "deletions": 5,
        "changed_files": 4,
        "created_at": "2020-05-24T16:43:40Z",
        "closed_at": "2021-01-14T23:21:27Z",
        "merged_at": null,
        "body": "### The kind of change this PR does introduce\r\n\r\n* [x] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behaviour\r\n\r\nSocket.io server ignores 'socket.io-client' module installed inside `socket.io` when there's an installation of 'socket.io-client' sibling to 'socket.io'.\r\n\r\n### New behaviour\r\n\r\nNow uses closest 'socket.io-client' installation.\r\n\r\n### Other information (e.g. related issues)\r\n\r\nFix is by @Apollon77, taken from PR #3557. Their fix fixes #3555.\r\n\r\nI added a failing test to show it actually had a behavior issue prior to the fix, and give an example of how it fails. Plus to prevent a regression in the future.\r\n\r\n\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-05-02T07:01:10Z",
        "closed_at": "2021-01-14T23:37:41Z",
        "merged_at": "2021-01-14T23:37:41Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [x] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behaviour\r\n```markdown\r\n- [Java](https://github.com/socketio/socket.io-client-java)\r\n- [C++](https://github.com/socketio/socket.io-client-cpp)\r\n- [Swift](https://github.com/socketio/socket.io-client-swift)\r\n- [Dart](https://github.com/rikulo/socket.io-client-dart)\r\n```\r\n\r\n### New behaviour\r\n```markdown\r\n- [Java](https://github.com/socketio/socket.io-client-java)\r\n- [C++](https://github.com/socketio/socket.io-client-cpp)\r\n- [Swift](https://github.com/socketio/socket.io-client-swift)\r\n- [Dart](https://github.com/rikulo/socket.io-client-dart)\r\n- [Python](https://github.com/miguelgrinberg/python-socketio)\r\n- [.Net](https://github.com/Quobject/SocketIoClientDotNet)\r\n```\r\n\r\n### Other information\r\n<https://socket.io/docs/#Other-client-implementations>\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-04-17T07:07:12Z",
        "closed_at": "2020-09-19T01:01:20Z",
        "merged_at": "2020-09-19T01:01:20Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [x] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-03-26T07:23:01Z",
        "closed_at": "2021-08-30T06:35:33Z",
        "merged_at": null,
        "body": "### The kind of change this PR does introduce\r\n\r\n* [x] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behaviour\r\nsocket.client.request.client.getPeerCertificate() always returns null\r\n\r\n### New behaviour\r\nsocket.client.peerCertificate is populated before the underlying TLS is closed so it is available \r\non socket.on(\"connection\")\r\n\r\nI belive this is the result of a change in node tls functionality.\r\n\r\n[https://github.com/nodejs/node/commit/eff8c3e02417652b78436eaa10d049e8c60e5275](https://github.com/nodejs/node/commit/eff8c3e02417652b78436eaa10d049e8c60e5275)\r\n\r\n### Other information (e.g. related issues)\r\n\r\n[https://github.com/socketio/socket.io/issues/3567](https://github.com/socketio/socket.io/issues/3567)\r\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2020-02-23T13:33:12Z",
        "closed_at": "2021-01-14T23:31:58Z",
        "merged_at": null,
        "body": "The old logic missed some places and was not able to look into the node_modules of the socket.io library itself.\r\n\r\nThe new logic always uses require.resolve to lookup the \"correct\" location for the socker.io-client library and then construct the path correctly\r\n\r\nThis fixes #3555 \r\n\r\nA fast release of a fixed version would be awesome!\r\n\r\n\r\n### The kind of change this PR does introduce\r\n\r\n* [x] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behaviour\r\n\r\n\r\n### New behaviour\r\n\r\n\r\n### Other information (e.g. related issues)\r\n\r\n\r\n",
        "comments": 12
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-02-07T18:44:00Z",
        "closed_at": "2020-09-19T00:58:28Z",
        "merged_at": null,
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [x] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behaviour\r\n\r\nDoes not test current LTS (v12) of node.js.\r\n\r\n### New behaviour\r\n\r\nTest current LTS (v12) of node.js.\r\n\r\n### Other information (e.g. related issues)\r\n\r\nNope\r\n\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-01-16T16:14:18Z",
        "closed_at": "2021-08-30T06:35:15Z",
        "merged_at": null,
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [x] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behaviour\r\n2018 has passed, now is 2020, license year need to update.\r\n\r\n### New behaviour\r\nUpdate license year.\r\n\r\n### Other information (e.g. related issues)\r\n[#3153 ](https://github.com/socketio/socket.io/pull/3153)\r\n\r\n\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-11-09T22:57:44Z",
        "closed_at": "2020-09-19T01:02:31Z",
        "merged_at": null,
        "body": "### The kind of change this PR does introduce\r\n\r\n* [x] an update to the document\r\n\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-11-01T05:11:11Z",
        "closed_at": "2020-09-19T00:57:52Z",
        "merged_at": null,
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [x] other\r\n\r\n### Current behaviour\r\n\r\n\r\n### New behaviour\r\n\r\n\r\n### Other information (e.g. related issues)\r\n\r\n\r\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2019-10-15T07:31:42Z",
        "closed_at": "2021-01-04T23:48:38Z",
        "merged_at": null,
        "body": "### The kind of change this PR does introduce\r\n\r\n* [x] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behaviour\r\n\r\nWhen multiplexing is turned on - which is the default - the query sent to the server when connecting to another namespace is incorrectly processed (as described in #3495).\r\n\r\n### New behaviour\r\n\r\nThe query params are correctly overriden on the server.\r\n\r\n### Other information (e.g. related issues)\r\n\r\nSee #3495.\r\n\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 15,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2019-09-07T21:21:44Z",
        "closed_at": "2021-01-15T21:22:59Z",
        "merged_at": null,
        "body": "When handling compression at the proxy server level, the client receives a weak ETag.\r\nWeak ETags are prefixed with `W/`, e.g. `W/\"2.2.0\"`.\r\nUpon cache validation we should take care of these too.\r\n\r\n\r\n### The kind of change this PR does introduce\r\n\r\n* [x] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behaviour\r\nServer responds with a 200 + full payload for a weak but matching etag.\r\n\r\n### New behaviour\r\nServer responds with 304.\r\n\r\n### Other information (e.g. related issues)\r\nSee linked rfc https://tools.ietf.org/html/rfc7232#section-2.3\r\n\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 14,
        "changed_files": 4,
        "created_at": "2019-08-21T17:07:54Z",
        "closed_at": "2019-09-20T08:50:13Z",
        "merged_at": "2019-09-20T08:50:13Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [x] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behaviour\r\nBuffer() is deprecated warning message in test\r\n\r\n### New behaviour\r\nNo warning message in test\r\n\r\n### Other information (e.g. related issues)\r\n\r\n\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 22,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2019-07-10T12:36:48Z",
        "closed_at": "2020-12-30T10:26:40Z",
        "merged_at": null,
        "body": "### The kind of change this PR does introduce\r\n\r\n* [] a bug fix\r\n* [x ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behaviour\r\n\r\n\r\n### New behaviour\r\n\r\n\r\n### Other information (e.g. related issues)\r\n\r\n\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-07-04T22:23:40Z",
        "closed_at": "2019-09-20T08:37:55Z",
        "merged_at": "2019-09-20T08:37:55Z",
        "body": "I was struggling with CORS issues using explicitly the default origins value `*` on development, a value that is retrieved from a `.env` file, but turns out that the default is actually `*:*`.\r\n\r\n### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [x] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current documentation\r\norigins (String): the allowed origins (`*`)\r\n\r\n### New documentation\r\norigins (String): the allowed origins (`*:*`)\r\n\r\n### Other information (e.g. related issues)\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 113,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2019-06-10T14:01:51Z",
        "closed_at": "2021-08-30T06:35:02Z",
        "merged_at": null,
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [X] a new feature\r\n* [x] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behaviour\r\nOutgoing packets cannot be intercepted in an easy way (i.e. for checking authentication before sending).\r\n\r\n### New behaviour\r\nInterceptors (middleware) can be registered on a namespace and socket in a similar way the connection middleware is registered. When Socket.packet is called to send a packet, all middleware is called, similar to the connection middleware. If no error occurred, the underlying client's packet() method is called. If one middleware returned an error, the error is sent to the client.\r\n\r\n### Other information (e.g. related issues)\r\n\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 49,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2019-04-24T15:06:48Z",
        "closed_at": "2021-08-09T19:13:20Z",
        "merged_at": null,
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [x] other\r\n\r\n### The Change\r\n\r\nThis PR adds Azure Pipelines to perform CI builds and PR builds. Pipelines offers several key advantages:\r\n\r\n1) Single definition for all platforms (Linux/Windows/Mac) reduces the amount of time spent maintaining CI.\r\n2) Free Windows and MacOS builds - right now we're not building on Windows/MacOS at all, but [some issues appear only on a specific OS](https://github.com/socketio/socket.io/issues/1686).\r\n3) Fast overall build times because of free parallelism - Pipelines offers 10 free concurrent jobs and unlimited build minutes for all OSS projects.\r\n\r\n**Disclaimer**\r\n\r\nFull disclosure, I'm an engineer on the Pipelines team, but I also think Pipelines provides some pretty significant advantages here.\r\n\r\n### Additional Info\r\n\r\nYou can see that this works in [my pipeline](https://dev.azure.com/socketio/socket.io/_build/results?buildId=6)\r\n\r\n![image](https://user-images.githubusercontent.com/42773683/56670319-a022e800-6680-11e9-9479-5265cfb47d68.png)\r\n\r\nWith test reporting! I added an [intentionally failing PR](https://github.com/damccorm/socket.io/pull/1) build to demonstrate this.\r\n\r\n![image](https://user-images.githubusercontent.com/42773683/56670429-d3657700-6680-11e9-98aa-b4eefbada391.png)\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-03-30T10:11:39Z",
        "closed_at": "2021-01-14T23:40:17Z",
        "merged_at": null,
        "body": "### The kind of change this PR does introduce\r\n\r\n* [] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [x] other\r\n\r\n### Current behaviour\r\n\r\n\r\n### New behaviour\r\n\r\n\r\n### Other information (e.g. related issues)\r\n\r\nChanges in code for better readability \r\n* a useless `!!` in condition\r\n* add console.error in empty catch function\r\n\r\n\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-02-28T07:22:46Z",
        "closed_at": "2019-03-15T21:22:22Z",
        "merged_at": "2019-03-15T21:22:22Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [x] other\r\n\r\nUse `master` License: https://github.com/socketio/socket.io/blob/master/LICENSE",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2019-01-19T06:08:49Z",
        "closed_at": "2021-01-14T23:25:33Z",
        "merged_at": null,
        "body": "\u2026operty name\r\n\r\n\r\n### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [x] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behaviour\r\n\r\n\r\n### New behaviour\r\nUsing trailing comma and shorthand property name of ECMAScript grammar\r\n\r\n### Other information (e.g. related issues)\r\n\r\n\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2018-11-19T21:55:56Z",
        "closed_at": "2018-11-20T06:37:01Z",
        "merged_at": null,
        "body": "- engine.io: https://github.com/socketio/engine.io/compare/3.2.0...3.3.1\r\n- socket.io-parser: https://github.com/socketio/socket.io-parser/compare/3.2.0..3.3.0\r\n\r\n\r\n### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [x] other\r\n\r\n### Current behaviour\r\n\r\n\r\n### New behaviour\r\n\r\n\r\n### Other information (e.g. related issues)\r\n\r\n\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 20,
        "deletions": 20,
        "changed_files": 1,
        "created_at": "2018-10-28T15:56:25Z",
        "closed_at": "2018-11-07T23:26:55Z",
        "merged_at": "2018-11-07T23:26:55Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [x] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behaviour\r\n\r\n\r\n### New behaviour\r\n\r\n\r\n### Other information (e.g. related issues)\r\n\r\n\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 149,
        "deletions": 15,
        "changed_files": 3,
        "created_at": "2018-10-25T13:57:25Z",
        "closed_at": "2020-09-19T00:54:10Z",
        "merged_at": null,
        "body": "### The kind of change this PR does introduce\r\n\r\n* [x] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behaviour\r\n\r\n\r\n### New behaviour\r\n\r\n\r\n### Other information (e.g. related issues)\r\n\r\n\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-10-23T19:11:26Z",
        "closed_at": "2018-11-20T06:40:11Z",
        "merged_at": "2018-11-20T06:40:11Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* [x] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behaviour\r\nAccessing the clients of a dynamic namespace throws because doing io.of(/your-regex/g) returns a namespace with no adapter and the clients methods tries to access namespace.adapter.clients\r\n\r\n### New behaviour\r\nClearer error \r\n\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 235,
        "deletions": 77,
        "changed_files": 12,
        "created_at": "2018-10-02T08:01:42Z",
        "closed_at": "2018-11-20T06:41:12Z",
        "merged_at": null,
        "body": "### The kind of change this PR does introduce\r\n\r\n* [x] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [x] other\r\n\r\n### Current behaviour\r\n\r\n\r\n### New behaviour\r\n\r\n\r\n### Other information (e.g. related issues)\r\n\r\n\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-09-02T19:59:35Z",
        "closed_at": "2021-08-30T06:34:46Z",
        "merged_at": null,
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [x] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behaviour\r\n\r\nNo badge\r\n\r\n### New behaviour\r\n\r\nBadge that displays the npm install size\r\n\r\n\r\n### Other information (e.g. related issues)\r\n\r\n\r\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 14,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2018-08-27T21:44:18Z",
        "closed_at": "2018-11-20T06:41:27Z",
        "merged_at": null,
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [x] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### New behaviour\r\nIt would be also great to do something like this:\r\n`io.sockets.connected[{socketA, socketB, socketC, socketD}].join(roomtoken)`\r\n`io.sockets.connected[{socketA, socketB, socketC, socketD}].leave(roomtoken)`\r\nThat will make lobby based applications easier to manage ^^\r\n\r\n\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-08-15T23:08:11Z",
        "closed_at": "2018-08-18T21:32:07Z",
        "merged_at": "2018-08-18T21:32:07Z",
        "body": "Simple grammar correction to README.\r\n\r\n\r\n### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [x] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behaviour\r\n\r\n\r\n### New behaviour\r\n\r\n\r\n### Other information (e.g. related issues)\r\n\r\n\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-07-26T17:49:48Z",
        "closed_at": "2018-08-28T07:08:34Z",
        "merged_at": null,
        "body": "this is not set to the element\r\n\r\n\r\n### The kind of change this PR does introduce\r\n\r\n* [x] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behaviour\r\n\r\n\r\n### New behaviour\r\n\r\n\r\n### Other information (e.g. related issues)\r\n\r\n\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 12,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-06-06T07:11:30Z",
        "closed_at": "2018-11-20T06:52:13Z",
        "merged_at": null,
        "body": "### The kind of change this PR does introduce\r\n\r\n* [] a bug fix\r\n* [ x ] a new feature\r\n* [ x ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\nHello everyone, I updated the disconnect reasons in the documentation. I extracted them from the source code of the library. Please let me know if everything is correct.\r\n\r\nI would like to propose a more precise format for the disconnection reasons, something like this:\r\n\r\n```json\r\n\"code\": xxx,\r\n\"reason\": \"The reason of the error\",\r\n\"message\": \"The message of the error\"\r\n```\r\n\r\nWith this format, it is easier to parse reasons and build logic upon the disconnection event.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 39,
        "deletions": 43,
        "changed_files": 1,
        "created_at": "2018-05-07T16:01:49Z",
        "closed_at": "2021-01-14T23:36:17Z",
        "merged_at": "2021-01-14T23:36:17Z",
        "body": "- Add default initializers\r\n- Use let and const instead var\r\n\r\n\r\n### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [x] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behaviour\r\nThe chat example can be updated with ES6 features like default params, constants (avoiding the use of `var`), and template literals.\r\n\r\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Default_parameters\r\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/const\r\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals\r\n\r\n### New behaviour\r\nThe chat example with these three features.\r\n\r\n### Other information (e.g. related issues)\r\n\r\n\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 65,
        "deletions": 5,
        "changed_files": 4,
        "created_at": "2018-05-03T00:54:04Z",
        "closed_at": "2021-08-30T06:34:25Z",
        "merged_at": null,
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [x] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behaviour\r\n\r\nIt is not possible to send messages to the local (server) endpoint. In scenarios where rooms/broadcasts are used, this requires the server to maintain a separate room->socket mapping so that administrative actions can be performed (e.g., close all sockets in room 'foo').\r\n\r\n### New behaviour\r\n\r\nWith this change (and related PR https://github.com/socketio/socket.io-adapter/pull/56), it is possible to emit/broadcast messages that are handled by the local (server) endpoint by inserting `.loopback` into the emit syntax. On connect, the server can add handlers for messages that originate server-side, and later broadcast those messages in order to effect administrative actions (e.g., close all sockets in room 'foo') without maintaining independent mappings.\r\n\r\n### Other information (e.g. related issues)\r\n\r\nhttps://github.com/socketio/socket.io-adapter/pull/56 must be committed before this change, as `socket.io-adapter` is used in tests and must honour the `loopback` flag.\r\n",
        "comments": 11
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-04-28T14:59:58Z",
        "closed_at": "2018-04-30T20:32:26Z",
        "merged_at": "2018-04-30T20:32:26Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* [x] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behaviour\r\nRequires package JSON of socket.io/client without the JSON extension defined. This causes those of us who bundle this dependency to bump into a failure, as it cannot resolve the file. This is already sorted in the later versions of socket.io, but we're unfortunately tied to 1.7.4 for now.\r\n\r\n### New behaviour\r\nAdds JSON extension in the require so it can resolve the dependency when bundling.\r\n\r\n### Other information (e.g. related issues)\r\nWe're using Fusebox as our module bundler. If this can make it into a 1.7.5 patch, that'd be ace.\r\n\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 35,
        "deletions": 35,
        "changed_files": 2,
        "created_at": "2018-04-23T00:59:18Z",
        "closed_at": "2018-04-27T11:00:27Z",
        "merged_at": "2018-04-27T11:00:27Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [x] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behaviour\r\nNot ES6 formatted\r\n\r\n### New behaviour\r\nIs now ES6 formatted\r\n\r\n### Other information (e.g. related issues)\r\nES6 ftw\r\n\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-04-06T12:14:44Z",
        "closed_at": "2018-04-27T11:03:26Z",
        "merged_at": "2018-04-27T11:03:26Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [x] other\r\n\r\n### Current behaviour\r\n\r\nCurrently, the only way to set the local flag when in socket context is as follow\r\n\r\n```js\r\nsocket.flags['local'] = true;\r\n```\r\n\r\n### New behaviour\r\n\r\nNow we can add the local flag the same way we do it on the Namespace object\r\n\r\n```js\r\nsocket.local...\r\n```\r\n### Other information (e.g. related issues)\r\n\r\nhttps://github.com/socketio/socket.io/issues/3217\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2018-03-19T21:33:01Z",
        "closed_at": "2018-11-20T06:58:01Z",
        "merged_at": null,
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [x] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behaviour\r\n\r\n\r\n### New behaviour\r\n\r\n\r\n### Other information (e.g. related issues)\r\n\r\n\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 147,
        "deletions": 117,
        "changed_files": 5,
        "created_at": "2018-03-08T12:32:09Z",
        "closed_at": "2018-03-29T21:08:08Z",
        "merged_at": "2018-03-29T21:08:08Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [x] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behaviour\r\n\r\n\r\n### New behaviour\r\n\r\nThe following test should describe the expected behaviour:\r\n```js\r\nconst socket = client(srv, '/dynamic-101');\r\nio.of(/^\\/dynamic-\\d+$/).on('connect', (socket) => {\r\n  // socket.nsp.name = '/dynamic-101'\r\n});\r\n\r\nsocket.on('error', function(err) {\r\n  expect().fail();\r\n});\r\nsocket.on('connect', () => {\r\n  // ...\r\n});\r\n```\r\n\r\n### Other information (e.g. related issues)\r\n\r\n\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-02-01T22:39:04Z",
        "closed_at": "2018-02-28T22:04:08Z",
        "merged_at": null,
        "body": "### The kind of change this PR does introduce\r\n* [x] an update to the documentation\r\n\r\n### Current behaviour\r\nLicense is covered until 2017.\r\n\r\n### New behaviour\r\nLicense is covered until 2018.\r\n\r\n### Other information (e.g. related issues)\r\nNone\r\n\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-01-12T08:34:15Z",
        "closed_at": "2018-02-25T08:26:25Z",
        "merged_at": "2018-02-25T08:26:25Z",
        "body": "### The kind of change this PR does introduce\r\n* [x] other\r\n\r\n### Current behaviour\r\n\r\n\r\n### New behaviour\r\n\r\n\r\n### Other information (e.g. related issues)\r\nTypo in `Readme.md`\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-01-04T09:05:16Z",
        "closed_at": "2018-04-06T06:02:59Z",
        "merged_at": null,
        "body": "### The kind of change this PR does introduce\r\n\r\n* [x] a bug fix\r\n\r\n### Current behaviour\r\nclient.on('error', (err) => {\r\n    console.log(err);\r\n});\r\n\r\nclient.on('entter', () => {\r\n    try {\r\n       throw new Error('test');\r\n   } catch (err) {\r\n      client.emit('error', err);\r\n  }    \r\n});\r\n\r\ni must try catch error in a listener,otherwise the error listener does not work.\r\n### New behaviour\r\nclient.on('error', (err) => {\r\n    console.log(err);\r\n});\r\nclient.on('entter', () => {\r\n    throw new Error('test');\r\n});\r\n### Other information (e.g. related issues)\r\n\r\n\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-12-31T23:56:08Z",
        "closed_at": "2018-02-28T22:03:02Z",
        "merged_at": "2018-02-28T22:03:02Z",
        "body": "TO DO:\r\n\r\n- [x] Wait to the next year (100% done, depends on timezone)\r\n- [x] Merge!\r\n\r\n:octocat:",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-12-19T02:53:57Z",
        "closed_at": "2018-11-20T06:56:31Z",
        "merged_at": null,
        "body": "### The kind of change this PR does introduce\r\n\r\n* [x] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behaviour\r\nWhen event packet received by `onevent` doesn't contain a valid array as the value of the `data` property, the subsequent call to dispatch will cause a `TypeError`, because the `apply` call on `emit` would expect the 2nd parameter to be an array type. \r\n\r\n### New behaviour\r\nNow if event packet's `data` property is not already an array, we will convert it to an array before passing it to the `apply` call, to avoid the `TypeError` exception on rare occurrence of the problem as raised in issue #3139.\r\n\r\n### Other information (e.g. related issues)\r\nThere seem to be quite a few other places that would use a similar array type check in `socket.js`, but would rather hold off on updating all these places until further reporting of the `TypeError` exceptions.\r\n\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2017-12-12T07:21:45Z",
        "closed_at": "2018-11-20T06:59:29Z",
        "merged_at": null,
        "body": "### The kind of change this PR does introduce\r\n\r\n* [x] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behaviour\r\n\r\n\r\n### New behaviour\r\n\r\n\r\n### Other information (e.g. related issues)\r\n\r\n\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-12-03T08:46:28Z",
        "closed_at": "2018-02-25T08:26:05Z",
        "merged_at": null,
        "body": "The same problem as issue183, if not change the path\r\n\r\n```\r\n$ nodejs index.js \r\n/3Dev/Projects/TelinkAutoTest/SocketIO/socket.io/examples/chat/index.js:7\r\nVar io = require ('socket.io') (server);\r\n    ^^\r\n\r\nSyntaxError: Unexpected identifier\r\n    at exports.runInThisContext (vm.js:53:16)\r\n    at Module._compile (module.js:374:25)\r\n    at Object.Module._extensions..js (module.js:417:10)\r\n    at Module.load (module.js:344:32)\r\n    at Function.Module._load (module.js:301:12)\r\n    at Function.Module.runMain (module.js:442:10)\r\n    at startup (node.js:136:18)\r\n    at node.js:966:3\r\n```\r\n\r\n\r\n### The kind of change this PR does introduce\r\n\r\n* [x] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behaviour\r\n\r\n\r\n### New behaviour\r\n\r\n\r\n### Other information (e.g. related issues)\r\n\r\n\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 52,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2017-12-02T23:42:10Z",
        "closed_at": "2018-02-28T22:04:52Z",
        "merged_at": null,
        "body": "The following vulnerabilities are fixed with an upgrade:\r\n- https://snyk.io/vuln/npm:debug:20170905\r\n- https://snyk.io/vuln/npm:debug:20170905\r\n- https://snyk.io/vuln/npm:debug:20170905\r\n\r\n\r\nThe following vulnerabilities are fixed with a Snyk patch:\r\n- https://snyk.io/vuln/npm:ms:20151024\r\n- https://snyk.io/vuln/npm:ws:20160920\r\n\r\n\r\nThe following vulnerabilities are ignored:\r\n- https://snyk.io/vuln/npm:debug:20170905\r\n- https://snyk.io/vuln/npm:engine.io-client:20160426\r\n\r\nLatest report for ibraheem5022/socket.io:\r\nhttps://snyk.io/test/github/ibraheem5022/socket.io\r\n\r\nSome vulnerabilities weren't fixed or ignored, and so will still fail\r\nthe Snyk test report.\r\n\r\n\r\n### The kind of change this PR does introduce\r\n\r\n* [x] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behaviour\r\n\r\n\r\n### New behaviour\r\n\r\n\r\n### Other information (e.g. related issues)\r\n\r\n\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2017-11-02T19:10:07Z",
        "closed_at": "2018-11-20T07:01:10Z",
        "merged_at": "2018-11-20T07:01:10Z",
        "body": "Added support for touch to the whiteboard example.\r\n\r\n\r\n### The kind of change this PR does introduce\r\n\r\n* [x] a bug fix\r\n\r\n### Current behavior\r\n\r\nTouch is not working on the whiteboard example\r\n\r\n### New behavior\r\n\r\nAdded support for touch in whiteboard example\r\n\r\n### Other information (e.g. related issues)\r\n\r\n\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-10-28T14:37:28Z",
        "closed_at": "2018-02-28T22:05:26Z",
        "merged_at": null,
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [x] other\r\n\r\n### Current behaviour\r\n\r\ndebug package has a security vulnerability: see [here](https://david-dm.org/socketio/socket.io) and [here on Node security Platform](https://nodesecurity.io/advisories/debug_regular-expression-denial-of-service).\r\n\r\n\r\n### New behaviour\r\n\r\nThe new version fixes the security vulnerability.\r\nThis will fix the red \"dependencies\" badge in the README.\r\n\r\n### Other information (e.g. related issues)\r\n\r\nhttps://github.com/visionmedia/debug/issues/501\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 113,
        "changed_files": 5,
        "created_at": "2017-10-09T00:41:44Z",
        "closed_at": "2017-10-16T05:46:43Z",
        "merged_at": "2017-10-16T05:46:43Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [x] other\r\n\r\n### Current behaviour\r\nCurrently it uses gulp and make.\r\n\r\n### New behaviour\r\nUse just plain and simple npm scripts.\r\n\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-10-04T19:31:58Z",
        "closed_at": "2017-10-07T13:08:15Z",
        "merged_at": "2017-10-07T13:08:15Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [x] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behaviour\r\n\r\n\r\n### New behaviour\r\n\r\n\r\n### Other information (e.g. related issues)\r\n\r\n\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-09-29T16:43:10Z",
        "closed_at": "2017-10-07T12:36:02Z",
        "merged_at": "2017-10-07T12:36:02Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [x] a fix to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 182860,
        "deletions": 17838,
        "changed_files": 157,
        "created_at": "2017-09-20T10:20:04Z",
        "closed_at": "2017-09-27T22:16:45Z",
        "merged_at": null,
        "body": "### The kind of change this PR does introduce\r\n\r\n* [x] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behaviour\r\n\r\n\r\n### New behaviour\r\n\r\n\r\n### Other information (e.g. related issues)\r\n\r\n\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2017-09-16T15:53:43Z",
        "closed_at": "2018-01-21T05:12:58Z",
        "merged_at": null,
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [x] other\r\n\r\nUpdate build tool\r\n\r\n### Current behaviour\r\n\r\nUses preset-es2015\r\n\r\n### New behaviour\r\n\r\nUses https://github.com/babel/babel-preset-env, has the same functionality without options but is future facing.\r\n\r\n### Other information (e.g. related issues)\r\n\r\n> Babel 7 post: http://babeljs.io/blog/2017/09/12/planning-for-7.0\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 21,
        "deletions": 18,
        "changed_files": 3,
        "created_at": "2017-08-25T20:24:16Z",
        "closed_at": "2017-08-26T05:36:27Z",
        "merged_at": "2017-08-26T05:36:27Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* [x] a bug fix\r\n\r\n### Other information (e.g. related issues)\r\n\r\nCloses https://github.com/socketio/socket.io/issues/2996\r\n\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 18,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2017-08-25T19:48:49Z",
        "closed_at": "2017-08-26T05:35:57Z",
        "merged_at": "2017-08-26T05:35:57Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* [x] a bug fix\r\n\r\n### Current behaviour\r\n\r\n\r\n### New behaviour\r\n\r\n\r\n### Other information (e.g. related issues)\r\n\r\nCloses https://github.com/socketio/socket.io/issues/3036\r\n\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2017-08-17T17:17:59Z",
        "closed_at": "2020-09-19T00:53:16Z",
        "merged_at": null,
        "body": "Needed a way to determine which socket disconnected.  Updated the emit() callbacks for \"disconnecting\" and \"disconnected\" to return the unique ID of the socket connection.\r\n\r\n### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [x] a new feature\r\n* [x] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ]  other\r\n\r\n### Current behaviour\r\n\r\n    client.on('disconnect',()=>{\r\n       // returns no useful information\r\n    });\r\n\r\n### New behaviour\r\n\r\n    client.on('disconnect',(reason,id)=>{\r\n        console.log(`The user with socket ID ${id} just disconnected`);\r\n    });\r\n\r\n### Other information (e.g. related issues)\r\n\r\n\r\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-07-24T20:36:06Z",
        "closed_at": "2017-08-26T05:44:25Z",
        "merged_at": "2017-08-26T05:44:25Z",
        "body": "getting rid of github warning of using path.join",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-06-30T14:24:57Z",
        "closed_at": "2017-07-01T05:57:35Z",
        "merged_at": "2017-07-01T05:57:35Z",
        "body": "io.emit was missing in the cheat sheet.\r\n\r\n\r\n### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [x] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behaviour\r\n\r\n\r\n### New behaviour\r\n\r\n\r\n### Other information (e.g. related issues)\r\n\r\n\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-06-23T01:04:59Z",
        "closed_at": "2017-08-27T06:40:27Z",
        "merged_at": "2017-08-27T06:40:27Z",
        "body": "Fix the cleanInput() function to prevent input from having injected markup.\r\n\r\n\r\n### The kind of change this PR does introduce\r\n\r\n* [x] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behaviour\r\nthe function returns exactly the same input.\r\n\r\n### New behaviour\r\nprvents injected markup\r\n\r\n### Other information (e.g. related issues)\r\n\r\n\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-06-17T12:52:15Z",
        "closed_at": "2017-06-19T10:16:27Z",
        "merged_at": "2017-06-19T10:16:27Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [x] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-06-03T22:14:20Z",
        "closed_at": "2017-06-08T10:28:57Z",
        "merged_at": "2017-06-08T10:28:57Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* [x] a bug fix\r\n* [ ] a new feature\r\n* [x] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behaviour\r\n![capture d ecran 2017-06-03 a 18 09 51](https://cloud.githubusercontent.com/assets/38223/26757403/2de08896-4888-11e7-880e-d857c1b2a23e.png)\r\n![capture d ecran 2017-06-03 a 18 07 10](https://cloud.githubusercontent.com/assets/38223/26757404/2de28164-4888-11e7-9e8d-53f83d76472e.png)\r\n![capture d ecran 2017-06-03 a 18 07 04](https://cloud.githubusercontent.com/assets/38223/26757407/2de7efb4-4888-11e7-8e69-91bb0a6d20d7.png)\r\n![capture d ecran 2017-06-03 a 18 06 37](https://cloud.githubusercontent.com/assets/38223/26757406/2de68728-4888-11e7-9abb-7813c88ab981.png)\r\n\r\n\r\n### New behaviour\r\n1. Update URL of badge to [https://slackin-socketio.now.sh/badge.svg](https://slackin-socketio.now.sh/badge.svg)\r\n1. Update URL To slack channel [https://slackin-socketio.now.sh](https://slackin-socketio.now.sh)\r\n![capture d ecran 2017-06-03 a 18 12 25](https://cloud.githubusercontent.com/assets/38223/26757422/8f9fd3de-4888-11e7-9efd-f9a30439d5a0.png)\r\n\r\n### Other information (e.g. related issues)\r\n\r\n\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 35,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2017-05-20T06:23:15Z",
        "closed_at": "2017-05-22T11:01:59Z",
        "merged_at": "2017-05-22T11:01:59Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* [x] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behaviour\r\n\r\nUsing a middleware could previously lead to a connecting client\r\nreceiving a connect event from the server before the server triggers\r\nits own connect event.\r\n\r\n### New behaviour\r\n\r\n\r\n### Other information (e.g. related issues)\r\n\r\nFixes https://github.com/socketio/socket.io/issues/2935.\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-05-11T08:02:04Z",
        "closed_at": "2018-02-28T23:23:46Z",
        "merged_at": "2018-02-28T23:23:46Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [x] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behaviour\r\n\r\n\r\n### New behaviour\r\n\r\n\r\n### Other information (e.g. related issues)\r\n\r\n\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 86,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2017-05-08T19:49:10Z",
        "closed_at": "2017-05-08T22:44:43Z",
        "merged_at": null,
        "body": "Please merge this pull request to activate your Open Collective https://opencollective.com/socketio",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 15,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-05-07T06:39:03Z",
        "closed_at": "2017-05-08T22:45:17Z",
        "merged_at": "2017-05-08T22:45:17Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 320,
        "deletions": 0,
        "changed_files": 10,
        "created_at": "2017-05-06T20:42:36Z",
        "closed_at": "2017-05-08T22:46:02Z",
        "merged_at": "2017-05-08T22:46:01Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [x] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2017-04-18T21:09:06Z",
        "closed_at": "2017-04-19T20:19:58Z",
        "merged_at": "2017-04-19T20:19:58Z",
        "body": "It had showed four pound signs, now it is bold. I fixed it by deleting and re-adding the space in between the pounds and the text. Not sure why that was the issue, but I fixed it nonetheless.\r\n\r\n\r\n### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [x] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behaviour\r\nShowed four pound signs\r\n\r\n### New behaviour\r\nIt's bold now\r\n\r\n### Other information (e.g. related issues)  \r\nNone\r\n\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 71,
        "deletions": 71,
        "changed_files": 8,
        "created_at": "2017-04-17T01:07:36Z",
        "closed_at": "2017-05-07T06:02:50Z",
        "merged_at": null,
        "body": "Make version v0.9 compatible with Node ^v6.9.1 by using require('events') instead of process.EventEmitter\r\n\r\n* [x] a bug fix\r\n* [x] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-04-06T05:19:47Z",
        "closed_at": "2017-05-08T22:45:35Z",
        "merged_at": null,
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [x] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behaviour\r\nOmit release history about `1.7.3`\r\n\r\n### New behaviour\r\nAdd release history about `1.7.3`\r\n\r\n### Other information (e.g. related issues)\r\n\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-04-01T10:43:23Z",
        "closed_at": "2018-11-20T07:02:04Z",
        "merged_at": "2018-11-20T07:02:04Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [x] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behaviour\r\nNo cache-control header is sent when requesting clien script\r\n\r\n### New behaviour\r\nServer will send cache-control header with value \"public, max-age=0\"\r\n\r\n\r\n### Other information (e.g. related issues)\r\n\r\n\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-03-31T08:14:38Z",
        "closed_at": "2017-04-03T05:20:38Z",
        "merged_at": "2017-04-03T05:20:38Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [x] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behaviour\r\n\r\n- The information currently present in the cheat sheet does not show users how they can emit to a room that is within a namespace.\r\n\r\n### New behaviour\r\n\r\n- Adds an example of how someone would emit to a room within a namespace.\r\n\r\n### Other information (e.g. related issues)\r\n\r\n\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-03-20T07:19:02Z",
        "closed_at": "2017-03-27T11:15:20Z",
        "merged_at": "2017-03-27T11:15:20Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [x] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behaviour\r\n![image](https://cloud.githubusercontent.com/assets/1404810/24091038/cc6878f8-0d45-11e7-90ba-396395fff2e4.png)\r\n\r\n### New behaviour\r\n![image](https://cloud.githubusercontent.com/assets/1404810/24091043/da7ec366-0d45-11e7-9edc-56a75958d548.png)\r\n\r\n### Other information (e.g. related issues)\r\nN/A",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-03-17T14:56:01Z",
        "closed_at": "2017-03-18T23:34:00Z",
        "merged_at": "2017-03-18T23:34:00Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [x] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behaviour\r\n\r\n\r\n### New behaviour\r\n\r\n\r\n### Other information (e.g. related issues)\r\n\r\n\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-03-10T23:52:19Z",
        "closed_at": "2018-03-10T08:03:28Z",
        "merged_at": "2018-03-10T08:03:28Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [x] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behaviour\r\n\r\nThe docs for `origins(fn)` currently don't mention that `error` has to be supplied as a string.  This really tripped me up as I was supplying an Error instance as I usually do for callbacks, which crashes w/ certain versions of Node.\r\n\r\n### New behaviour\r\n\r\nAdded line to documentation indicating that `error` should be a string.\r\n\r\n### Other information (e.g. related issues)\r\n\r\nAn alternative to this would be to patch `engine.io` to allow an Error instance in its [abortConnection method](https://github.com/socketio/engine.io/blob/bd1e81ec3d11f18c5fc09c55745d5ff66d037cc1/lib/server.js#L497), using its `message` property as the error message.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-03-08T23:33:30Z",
        "closed_at": "2017-03-29T12:16:24Z",
        "merged_at": null,
        "body": "### The kind of change this PR does introduce\r\n\r\n* [] a bug fix\r\n* [ ] a new feature\r\n* [x ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behaviour\r\nBad title\r\n\r\n### New behaviour\r\nGood title\r\n\r\n### Other information (e.g. related issues)\r\n\r\nSeems some are having trouble finding the docs, we should make it searchable.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 25,
        "deletions": 14,
        "changed_files": 1,
        "created_at": "2017-03-07T08:51:38Z",
        "closed_at": "2017-03-29T12:17:49Z",
        "merged_at": null,
        "body": "### The kind of change this PR does introduce\r\n\r\n* [] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [x] other\r\n\r\n### Current behaviour\r\nChat example is not responsive\r\n\r\n### New behaviour\r\nChat example is responsive\r\n\r\n### Other information (e.g. related issues)\r\nIntroduces a minimal css reference to skeleton css fwk around 1kb.\r\n\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-02-27T13:38:02Z",
        "closed_at": "2017-03-29T11:52:08Z",
        "merged_at": "2017-03-29T11:52:08Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [x] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\nWith this guidance, users can learn how to assign custom socket ids to connections on the server side.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 15,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-02-23T13:40:13Z",
        "closed_at": "2017-03-29T12:15:37Z",
        "merged_at": null,
        "body": "### The kind of change this PR does introduce\r\n\r\n* [x] an update to the documentation\r\n\r\n### Other information (e.g. related issues)\r\n\r\nExplicitly say that Server extends EventEmitter, and list a few methods from EventEmitter that are potentially useful.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2017-02-23T13:19:22Z",
        "closed_at": "2020-09-19T00:48:53Z",
        "merged_at": null,
        "body": "### The kind of change this PR does introduce\r\n\r\n* [x] a code change that improves performance\r\n\r\n### Other information (e.g. related issues)\r\n\r\nSetting an object's prototype is discouraged, and `__proto__` is not required to exist outside of browsers.\r\n\r\nUse the standard way of making a class inherit from another",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-02-16T18:13:59Z",
        "closed_at": "2017-02-16T21:01:54Z",
        "merged_at": "2017-02-16T21:01:54Z",
        "body": "Includes the following (from engine.io changelog):\r\n\r\n* [fix] Initialize the WebSocket server in the Server constructor ([#476](https://github.com/socketio/engine.io/issues/476))\r\n* [chore] Bump ws to version 1.1.2 (vulnerability fix) ([#480](https://github.com/socketio/engine.io/issues/480))\r\n\r\n\r\n### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [x] other\r\n\r\n### Current behaviour\r\n\r\nSocket.io installs version 2.0.0 of the engine.io dependency.\r\n\r\n### New behaviour\r\n\r\nSocket.io installs version 2.0.2 of the engine.io dependency.\r\n\r\n### Other information (e.g. related issues)\r\n\r\nIMHO it's worth considering changing this dependency to `'engine-io': '~2.0.0'` to avoid having to make new releases of `socket.io` every time `engine.io` is patched, since both modules are maintained by the same group.  But I can appreciate the desire to lock things down hard.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-02-10T18:57:53Z",
        "closed_at": "2017-02-13T22:33:35Z",
        "merged_at": null,
        "body": "### Fix an incorrect `emit` call\r\n\r\n* [x] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\nSorry if the PR is not what you expect. However, I don't think the call is correct at all.\r\n\r\nIt keeps throwing this error on a *certain page* (I can't share the code):\r\n\r\n```\r\nbs_1         | /code/node_modules/browser-sync/node_modules/socket.io/lib/socket.js:501\r\nbs_1         |       emit.apply(self, event);\r\nbs_1         |            ^\r\nbs_1         | TypeError: Function.prototype.apply: Arguments list has wrong type\r\nbs_1         |     at /code/node_modules/browser-sync/node_modules/socket.io/lib/socket.js:501:12\r\nbs_1         |     at process._tickCallback (node.js:355:11)\r\napp_bs_1 exited with code 1\r\n```\r\n\r\nIt's totally fine if you close this PR. I just don't know what is the source of the issue, and I'm now sure how to reproduce it :worried:\r\n\r\nAnyway, this is [just a one-line fix](http://www.catb.org/jargon/html/O/one-line-fix.html) :wink: ",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-02-08T17:11:16Z",
        "closed_at": "2017-02-13T22:52:08Z",
        "merged_at": "2017-02-13T22:52:08Z",
        "body": "This is documentation for the server code, and the commented code demonstrates the client's response.\r\n\r\nUpdate the wording to match.\r\n\r\n\r\n### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [x] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behaviour\r\n\r\n\r\n### New behaviour\r\n\r\n\r\n### Other information (e.g. related issues)\r\n\r\n\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-01-31T14:59:41Z",
        "closed_at": "2017-02-01T14:23:56Z",
        "merged_at": "2017-02-01T14:23:56Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [x] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behaviour\r\nI used the express setup with my latest project and stumbled into an error, that was hard to fix, because it was so small and crucial.  \r\nI accidently called `app.listen(PORT)` instead of `server.listen(PORT)`  \r\nThis basically leads to working Express functionality and routes, but the `/socket.io` route will not be present and thus the GET request for any client willing to connect gets a 404.  \r\n\r\n### New behaviour\r\nI hope this small comment may save another one the four hours I spent on tracing my mistake.  \r\n\r\n### Other information (e.g. related issues)",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 53,
        "deletions": 3,
        "changed_files": 4,
        "created_at": "2017-01-26T01:14:15Z",
        "closed_at": "2017-06-03T12:47:51Z",
        "merged_at": null,
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [X] a new feature\r\n* [X] an update to the documentation\r\n* [x] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behaviour\r\n\r\nWhen an object is emitted, the hasBin() function is used which iterates through the object checking for binary data. (https://github.com/socketio/has-binary)\r\n\r\n\r\n### New behaviour\r\n\r\nThe hasBinary flag allows for you to specify whether the object you emit has binary data or not, which skips the inefficient hasBin() function.  You can now do\r\n\r\n```\r\nsocket.hasBinary(true).emit(\"hello\",someobjectwithbinary); // Contains binary data\r\n\r\nsocket.hasBinary(false).emit(\"helloagain\",objectwithnobin); // No binary data\r\n\r\nsocket.emit(\"bye\",anotherobject); // normal function\r\n```\r\n\r\n### Other information (e.g. related issues)\r\n\r\nI found out that I could make socket.io two times faster by implementing this. Since in many circumstances a developer would know when he/she will send binary data (or not), the performance can be drastically improved by providing this information. This is because without it, the HasBinary function will run, which itinerates through everything in a object to check for binary data. This is very inefficient with large objects. This new flag allows for developers to fix this problem.",
        "comments": 14
    },
    {
        "merged": true,
        "additions": 23,
        "deletions": 19,
        "changed_files": 3,
        "created_at": "2017-01-24T06:30:48Z",
        "closed_at": "2017-02-01T14:28:14Z",
        "merged_at": "2017-02-01T14:28:14Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* a new feature\r\n\r\nRelated:\r\n- https://github.com/socketio/engine.io/pull/471\r\n- https://github.com/socketio/socket.io/issues/1954",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 8,
        "changed_files": 3,
        "created_at": "2017-01-19T14:31:00Z",
        "closed_at": "2017-01-24T06:10:20Z",
        "merged_at": "2017-01-24T06:10:20Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* a new feature\r\n\r\n### New behaviour\r\n\r\nThis would enable the use of some custom parsers, like the following based on msgpack:\r\n```js\r\nconst msgpack = require('notepack.io');\r\nconst Emitter = require('component-emitter');\r\n\r\nclass Encoder {\r\n  encode(obj, callback){\r\n    var encoded = msgpack.encode(obj);\r\n    callback([encoded]);\r\n  }\r\n}\r\n\r\nclass Decoder extends Emitter {\r\n  add(obj){\r\n    var decoded = msgpack.decode(obj);\r\n    this.emit('decoded', decoded);\r\n  }\r\n  destroy(){}\r\n}\r\n\r\nexports.Encoder = Encoder;\r\nexports.Decoder = Decoder;\r\n```\r\n\r\nAnd then:\r\n```js\r\nconst server = require('http').createServer();\r\nconst myCustomParser = require('./my-custom-parser');\r\nconst io = require('socket.io')(server, {\r\n  parser: myCustomParser\r\n});\r\n```\r\nThat would also provide a workaround for https://github.com/socketio/socket.io-parser/issues/61.\r\n\r\nRelated: https://github.com/socketio/socket.io/issues/1652 https://github.com/socketio/socket.io/issues/1946\r\n\r\nNote: that would need to update `socket.io-client` and `socket.io-adapter` too.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 188,
        "deletions": 0,
        "changed_files": 11,
        "created_at": "2017-01-17T13:20:49Z",
        "closed_at": "2017-02-22T11:48:46Z",
        "merged_at": "2017-02-22T11:48:46Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* an update to the documentation\r\n\r\nRelated: https://github.com/socketio/socket.io/issues/2109 https://github.com/socketio/socket.io/issues/2823",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 20,
        "changed_files": 2,
        "created_at": "2017-01-14T01:03:20Z",
        "closed_at": "2017-01-16T07:23:23Z",
        "merged_at": "2017-01-16T07:23:23Z",
        "body": "Deleting properties is a v8 'optimization killer'\r\n\r\n\r\n### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [x] a code change that improves performance\r\n* [ ] other",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2017-01-13T22:00:46Z",
        "closed_at": "2017-01-16T07:25:53Z",
        "merged_at": "2017-01-16T07:25:53Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [x] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behaviour\r\n\r\nEncoder per connection\r\n\r\n### New behaviour\r\n\r\nSingle encoder\r\n\r\n### Other information (e.g. related issues)\r\n\r\n\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 73,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-01-13T11:31:49Z",
        "closed_at": "2017-01-16T22:16:47Z",
        "merged_at": "2017-01-16T22:16:47Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* an update to the documentation\r\n\r\nRelated: https://github.com/socketio/socket.io/issues/2823\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 713,
        "deletions": 0,
        "changed_files": 10,
        "created_at": "2017-01-11T17:00:16Z",
        "closed_at": "2017-01-16T07:33:23Z",
        "merged_at": "2017-01-16T07:33:23Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* an update to the documentation\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 697,
        "deletions": 0,
        "changed_files": 10,
        "created_at": "2017-01-11T12:52:54Z",
        "closed_at": "2017-01-16T07:33:10Z",
        "merged_at": "2017-01-16T07:33:10Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* an update to the documentation\r\n\r\n\r\n\r\n\r\n\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 697,
        "deletions": 0,
        "changed_files": 10,
        "created_at": "2017-01-11T10:53:10Z",
        "closed_at": "2017-01-16T07:32:54Z",
        "merged_at": "2017-01-16T07:32:54Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* an update to the documentation\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 219,
        "deletions": 0,
        "changed_files": 6,
        "created_at": "2017-01-09T17:05:32Z",
        "closed_at": "2017-01-16T07:32:34Z",
        "merged_at": "2017-01-16T07:32:34Z",
        "body": "Reviews are welcome!\r\n\r\n![whiteboard](https://cloud.githubusercontent.com/assets/13031701/21775357/0c042e6c-d696-11e6-9dcc-effce56b3c5a.gif)\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-01-04T08:13:33Z",
        "closed_at": "2017-01-06T16:11:04Z",
        "merged_at": "2017-01-06T16:11:04Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [x] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behaviour\r\nN/A\r\n\r\n### New behaviour\r\nN/A\r\n\r\n### Other information (e.g. related issues)\r\nN/A\r\n\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-01-03T17:55:18Z",
        "closed_at": "2017-01-04T05:37:12Z",
        "merged_at": "2017-01-04T05:37:12Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [x] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behaviour\r\n\r\n\r\n### New behaviour\r\n\r\n\r\n### Other information (e.g. related issues)\r\n\r\n\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2016-12-30T06:27:48Z",
        "closed_at": "2017-01-22T06:21:46Z",
        "merged_at": "2017-01-22T06:21:46Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [x] other\r\n\r\n### Current behaviour\r\n\r\nBrowserify doesn't supports require.resolve, and as a consequence, makes nexe fails the compilation : \r\n\r\n### New behaviour\r\n\r\nThis PR attempts to read the content of the socket.io-client file via fs.readFileSync and falls back to the original require.resolve if this file cannot be found. \r\n\r\n### Other information (e.g. related issues)\r\n\r\nhttps://github.com/nexe/nexe/issues/289\r\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2016-12-20T23:44:54Z",
        "closed_at": "2016-12-30T15:18:10Z",
        "merged_at": "2016-12-30T15:18:10Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [x] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behaviour\r\n\r\n\r\n### New behaviour\r\n\r\n\r\n### Other information (e.g. related issues)\r\n\r\n\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 14,
        "deletions": 10,
        "changed_files": 10,
        "created_at": "2016-12-14T21:04:29Z",
        "closed_at": "2017-05-07T06:00:26Z",
        "merged_at": null,
        "body": "### The kind of change this PR does introduce\r\n\r\n* [x] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behaviour\r\nSocket.IO 0.9.x does not work in Node.JS 7.0 due to the removal of `process.EventEmitter`. A myriad of existing software depends on Socket.IO 0.9.x, therefore it will either be necessary to update Socket.IO 0.9.x, or fork it. Some existing software still using 0.9.x includes the Yez extension for Google Chrome + corresponding Node.JS application.\r\n\r\n### New behaviour\r\nThis patch changes usages of `process.EventEmitter` to `require('events')`.",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 548,
        "deletions": 38,
        "changed_files": 12,
        "created_at": "2016-12-14T09:27:42Z",
        "closed_at": "2017-01-24T06:10:37Z",
        "merged_at": null,
        "body": "### The kind of change this PR does introduce\r\n\r\n* [x] a bug fix\r\n* [x] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behaviour\r\n\r\n\r\n### New behaviour\r\n\r\n\r\n### Other information (e.g. related issues)\r\n\r\n\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 558,
        "deletions": 399,
        "changed_files": 3,
        "created_at": "2016-12-11T14:14:07Z",
        "closed_at": "2016-12-30T15:10:55Z",
        "merged_at": "2016-12-30T15:10:55Z",
        "body": "Related: https://github.com/socketio/socket.io/issues/1948\r\n\r\nReviews are welcome! I kept the style used in [engine.io](https://github.com/socketio/engine.io) README.\r\n\r\nCloses: a lot of issues.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-12-07T11:09:09Z",
        "closed_at": "2016-12-30T15:11:27Z",
        "merged_at": "2016-12-30T15:11:27Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* [x] an update to the documentation\r\n\r\n### Current behaviour\r\n\r\n\r\n### New behaviour\r\n\r\n\r\n### Other information (e.g. related issues)\r\n\r\n\r\n\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 93,
        "deletions": 66,
        "changed_files": 2,
        "created_at": "2016-12-01T21:04:10Z",
        "closed_at": "2021-01-14T23:36:53Z",
        "merged_at": null,
        "body": "### The kind of change this PR does introduce\r\n\r\nA code change that improves performance.\r\n\r\n### Current behaviour\r\nThe slim client is not served.\r\n\r\n### New behaviour\r\nThe new slim client (and its source map) are served.\r\n\r\n### Other information (e.g. related issues)\r\nThis refactor also:\r\n\r\n1. Gzips the response.\r\n2. Streams the files as binary, instead of buffering strings on init and converting the strings back to binary on each request.\r\n3. Removes code duplication for source map serving.\r\n\r\nI also added test for serving the source maps and slim client.",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 15,
        "deletions": 13,
        "changed_files": 2,
        "created_at": "2016-11-30T12:48:09Z",
        "closed_at": "2016-12-01T01:25:14Z",
        "merged_at": "2016-12-01T01:25:14Z",
        "body": "This PR fixes https://github.com/socketio/socket.io/issues/2771\r\n\r\n### The kind of change this PR does introduce\r\n\r\n* [x] a bug fix\r\n\r\n### Current behaviour\r\nSocket.use middleware drops nodejs process if error thrown in next function\r\n\r\n\r\n### New behaviour\r\nSocket.use middleware sends ```error``` packet correctly without dropping nodejs instance.\r\n\r\n\r\n### Other information (e.g. related issues)\r\nSocket cannot emit ```error``` event, because default behavior of EventEmitter will drop nodejs instance.\r\nDetails: https://nodejs.org/api/events.html#events_error_events",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2016-11-25T02:41:16Z",
        "closed_at": "2016-12-30T15:21:00Z",
        "merged_at": null,
        "body": "### The kind of change this PR does introduce\r\n\r\n* [x] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behaviour\r\nthe existing reference to the socket.io.js in the script tag doesn't exist anymore. That had the demo chat application not go ahead and kept asking what's your nickname?\r\n\r\n### New behaviour\r\nthe new script tag refers to the CDN location of the socket.io.js file and the error will not be there anymore.\r\n\r\n### Other information (e.g. related issues)\r\n\r\n\r\n\r\nthe existing reference to the socket.io.js doesn't exist anymore so updated it with the recent CDN backed version",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2016-11-12T22:26:59Z",
        "closed_at": "2016-11-15T20:52:56Z",
        "merged_at": "2016-11-15T20:52:56Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [x] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behaviour\r\nPreviously unable to pass a `done` callback to the `Server#close()` method.\r\n\r\n### New behaviour\r\nNow able to pass a `done` callback to the `Server#close()` method.\r\n\r\n### Other information (e.g. related issues)\r\ncandidate for #2739",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 11,
        "changed_files": 2,
        "created_at": "2016-11-08T16:23:06Z",
        "closed_at": "2016-11-16T00:17:20Z",
        "merged_at": "2016-11-16T00:17:20Z",
        "body": "### The kind of change this PR does introduce\r\n\r\n* [x] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behaviour\r\nRight now parameters passed during handshake, such as tokens, are being dropped.\r\n\r\n### New behaviour\r\nParameters are preserved as intended\r\n\r\n### Other information (e.g. related issues)\r\nFixes #2712\r\n\r\n\r\n",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2016-10-21T01:34:51Z",
        "closed_at": "2016-10-24T00:35:01Z",
        "merged_at": "2016-10-24T00:35:01Z",
        "body": "I recreated the pull request.\ncc: @darrachequesne \n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2016-10-21T00:39:53Z",
        "closed_at": "2016-10-24T01:21:11Z",
        "merged_at": "2016-10-24T01:21:11Z",
        "body": "Tests seem to fail due to https://github.com/socketio/engine.io/pull/393.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-10-18T00:32:19Z",
        "closed_at": "2016-10-21T01:06:59Z",
        "merged_at": "2016-10-21T01:06:59Z",
        "body": "asbtracts -> abstracts\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 32,
        "changed_files": 1,
        "created_at": "2016-10-17T05:32:17Z",
        "closed_at": "2016-10-21T01:29:23Z",
        "merged_at": null,
        "body": "There already exists client function in test script for creating client.\nThis commit simplify the test script.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-10-16T00:32:59Z",
        "closed_at": "2016-11-05T00:06:04Z",
        "merged_at": "2016-11-05T00:06:04Z",
        "body": "Test 'should be able to close sio sending a port' defined a clientSocket\nbut didn't set 'reconnection: false'.\n\nNow, the default behavior of a clientSocket is 'reconnection: true'.\nAs a result, the clientSocket was \"leaked\" from the test case\nand seemed to intermittently connect to the servers in subsequent\ntest cases. This would cause other tests to timeout unexpectedly.\n\nIt's not clear to me why this would happen, since the test case\nassigns a unique port number to the socket.\nHowever, if you go into socket.io-client and assign and log\nunique IDs to each socket, then you'll see that this clientSocket\nshows up in other test cases if the reconnectionDelay strikes\nunluckily.\n\nA better fix might be to close the socket before exiting the test, but I'm not 100% sure how to do that since I don't see a call to done() anywhere.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-10-05T15:23:04Z",
        "closed_at": "2016-10-06T08:03:55Z",
        "merged_at": "2016-10-06T08:03:55Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 28,
        "deletions": 9,
        "changed_files": 2,
        "created_at": "2016-10-05T05:25:11Z",
        "closed_at": "2016-11-23T13:22:02Z",
        "merged_at": null,
        "body": "It is just a simple implementation of sub-room feature for socket.io\n\nUsage\n\n```\n//Server-side\nvar io = socket(server, { enableSubRoom : true, subRoomSeparator : ':' });\nio.on('connection', function(socket) {\n  socket.join('test:sub:room');\n});\nio.to('test').emit('event', 'testing1');\nio.to('test:sub').emit('event', 'testing2');\n\n//Client-side\nvar io = socket(url);\nio.on('event', console.log)\n// => testing1\n// => testing2\n```\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2016-09-27T13:17:00Z",
        "closed_at": "2016-10-17T05:25:32Z",
        "merged_at": null,
        "body": "There already exists client function within test file `socket.io.js` for create client.\nMaybe someone didn't notice when writing test script.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 394,
        "deletions": 79,
        "changed_files": 3,
        "created_at": "2016-09-21T13:11:22Z",
        "closed_at": "2016-11-23T13:25:54Z",
        "merged_at": null,
        "body": "I created a new file \"main2.js\" in the directory  ../socket.io/examples/chat/pubblic\nThis file is alternative to \"main.js\". It's does not use jquery library. \nI modified ../socket.io/examples/chat/index.js by adding a variable (userNames) to show user names connected. I commit all these in the \"nojquery\" branch.\nbest regards\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-09-17T09:19:28Z",
        "closed_at": "2016-10-21T01:16:36Z",
        "merged_at": "2016-10-21T01:16:36Z",
        "body": "Currently these are caught by socket.io and treated as client errors. See https://github.com/socketio/socket.io/issues/2544#issuecomment-247599752\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2016-09-17T09:19:16Z",
        "closed_at": "2017-01-16T07:29:12Z",
        "merged_at": "2017-01-16T07:29:12Z",
        "body": "Currently the server treats the connection as closed but never actually closes it. See #2544\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 20,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2016-09-10T13:34:10Z",
        "closed_at": "2016-11-18T00:52:45Z",
        "merged_at": "2016-11-18T00:52:45Z",
        "body": "- make the example autonomous (`npm install && npm start`)\n- add disconnect/reconnect logs (and send username on reconnection)\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 1090,
        "deletions": 1053,
        "changed_files": 4,
        "created_at": "2016-08-29T16:15:46Z",
        "closed_at": "2020-09-19T00:48:11Z",
        "merged_at": null,
        "body": "Hi,\n\nIn my PhD research, I am using socket.io in some experiments.\n\nAs a result, I detected the existence of 4 main \"classes\" in the current codebase (Namespace, Client, Server, Socket).\n\nSo, I decided to rewrite this code to follow the new syntax for classes provided by ECMAScript 2016, which I think is much more readable. All changes are just syntactical. I was also very careful to preserve the code style.\nFinally, all tests are green in the migrated code.\n\nDo you think it is worth to integrate these changes to the project?\n\nThank you\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-07-31T11:40:50Z",
        "closed_at": "2016-11-24T22:44:52Z",
        "merged_at": "2016-11-24T22:44:52Z",
        "body": "\u2026 the emit to the pub\\sub server\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-07-11T13:50:50Z",
        "closed_at": "2016-10-21T01:10:34Z",
        "merged_at": "2016-10-21T01:10:34Z",
        "body": "Just a small change really. I noticed that clicking the badge unfortunately did not take me to the npm registry page. So here you go\u2026 Have a nice day.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-07-04T16:48:02Z",
        "closed_at": "2016-12-30T15:22:17Z",
        "merged_at": "2016-12-30T15:22:17Z",
        "body": "Null can be passed as \"srv\" argument and will fail on \"srv.listen\" check.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2016-06-30T00:56:31Z",
        "closed_at": "2016-10-30T13:19:00Z",
        "merged_at": "2016-10-30T13:19:00Z",
        "body": "The standard says that an ETag must be surrounded in double quotes:\n\nhttps://tools.ietf.org/html/rfc7232#section-2.3\n\nAlthough browsers tend to be lenient, omitting the quotes can confuse/break some kinds of proxies and other tools that demand compliant formatting. For example, Sandstorm.io enforces strict HTTP usage for security reasons and will block responses with invalid ETags.\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-06-28T07:06:14Z",
        "closed_at": "2016-11-05T00:14:21Z",
        "merged_at": "2016-11-05T00:14:21Z",
        "body": "Previously, only `on` and `emit` methods were supported by Socket.IO server. This PR iterates over all EventEmitter methods and proxies them over to the main namespace.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 24,
        "deletions": 20,
        "changed_files": 1,
        "created_at": "2016-06-26T18:35:59Z",
        "closed_at": "2016-08-05T19:07:30Z",
        "merged_at": "2016-08-05T19:07:30Z",
        "body": "The documentation, inadvertently, causes confusion for newer programmers, hindering their learning curve and ability to learn `socket.io` faster.\n\nThis proposed change aims at preventing this confusion in order to allow new programmers easier access to resources, especially when searching the web for more information.\n\nThe name `socket` in the documentation refers to the API gateway, or the abstraction layer, related to the `client` and other properties. However, in the rest of the programming world, `sockets` usually refer to Berklee sockets or the lower-level communication channel that is used to implement Protocols such as the Websocket Protocol and HTTP.\n\nNew programmers often search for more informations using the `sockets` keyword when they are grappling with learning the `socket.io` API. These searches are ineffective, and hinder new programmers from accessing the information they need and advancing as fast as they could have been advancing.\n\nA good example is the stack overflow site, where newer programmers incorrectly tag their questions `sockets` and in turn their questions don't reach the right community and don't get a (prompt) response.\n\nBy simply changing the name of the variable used to describe socket.io's \"Socket\" class instances from `socket` to `client`, this mixup should be mitigated considerably.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-06-13T15:25:11Z",
        "closed_at": "2017-01-12T16:02:33Z",
        "merged_at": null,
        "body": "This adds a remix link to a version of the Socket.io Chat demo on HyperDev - some users might prefer this as they get a copy of the code that just runs without any setup, and they can edit it straight away. I can add maintainers to the HyperDev project.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-05-26T12:40:32Z",
        "closed_at": "2016-10-30T13:22:00Z",
        "merged_at": "2016-10-30T13:22:00Z",
        "body": "Support for the serving of the client script mess with packagers like\nbrowserify, webpack. Especcialy in projects where it is not used at all.\nThis patch is workaround to avoid that problem in the cases when client\nscript is not served.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 22,
        "deletions": 3,
        "changed_files": 4,
        "created_at": "2016-05-20T13:02:02Z",
        "closed_at": "2016-09-14T00:26:40Z",
        "merged_at": null,
        "body": "it adds a functionality to pass {origins: 'none'} in options\nto disable serving cross origin requests. \n\nit depends on https://github.com/socketio/engine.io/pull/395\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-05-17T12:49:05Z",
        "closed_at": "2016-10-06T21:12:15Z",
        "merged_at": "2016-10-06T21:12:15Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-04-30T19:10:58Z",
        "closed_at": "2016-10-21T01:22:25Z",
        "merged_at": null,
        "body": "Looks as though the `opts` argument passed to the constructor is optional, so just ensuring that it is documented as such so our IDE's won't scream at us about it. :)\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-04-16T07:05:20Z",
        "closed_at": "2016-11-05T00:11:28Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2016-04-11T13:12:24Z",
        "closed_at": "2016-04-11T15:45:11Z",
        "merged_at": "2016-04-11T15:45:11Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1394,
        "deletions": 32,
        "changed_files": 10,
        "created_at": "2016-04-05T19:55:45Z",
        "closed_at": "2020-09-19T00:47:44Z",
        "merged_at": null,
        "body": "**node v4 LTS does not have full support for the [rest parameters](http://node.green/), whereas node v6 does, I am waiting for node v6 to become more popular to continue working on this PR**\n\nThis PR refactors existing codebase's anonymous functions into es6 arrow functions.\nA new `dist` folder holds the babel transpiled es5 code which is served by default by using `\"main\": \"./dist/index\",` in `package.json` (there is no `index.js` for this repo so `package.json` defines the entry point)\n\nDue to the new Lexical `arguments` (https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Functions/Arrow_functions)\nI have changed one use of `var args = Array.prototype.slice.call(arguments);` into rest parameters syntax `...args`. \nsee: https://github.com/nus-fboa2016-si/socket.io/blob/ae6379f8d60b275e9fc2bbb2de6639e11a3b180d/lib/socket.js#L346\n\nHowever, the rest parameters feature is behind the staging flag for node.js:\nhttps://nodejs.org/en/docs/es6/#which-features-are-behind-the-es_staging-flag\nSo the test for current code will fail on node due to syntax error, one way is to test using the `harmony` flag: \n\n```\nnode --harmony `which gulp` test && node --harmony `which gulp` test-compat\n```\n\nFor the sake of simplicity, I have removed the tests for the current code and only test the compat version of the code transpiled by `babel`\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-04-01T15:20:41Z",
        "closed_at": "2016-04-10T18:24:43Z",
        "merged_at": "2016-04-10T18:24:42Z",
        "body": "#2451 #2405 #2475 #2491\n\nThis should fix break since b73d9be and #2239 \n\nSince I'm not using namespaces, I need someone else help to check if this would break them.\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 11,
        "changed_files": 2,
        "created_at": "2016-04-01T13:09:28Z",
        "closed_at": "2016-04-11T18:57:43Z",
        "merged_at": "2016-04-11T18:57:43Z",
        "body": "#2507\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-04-01T09:17:06Z",
        "closed_at": "2016-04-01T10:28:36Z",
        "merged_at": null,
        "body": "should fix break since https://github.com/socketio/socket.io/commit/b73d9bea4efb48277eee685763026ff2df5a79ab\n#2451  #2405  #2475  #2491\n\nbut this could be another breaking change, I'm not sure what will this affect to those who parse nsp name from server side id.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2016-03-29T15:24:34Z",
        "closed_at": "2016-11-23T13:32:02Z",
        "merged_at": null,
        "body": "The listed instructions do not work, this update does. I spent a good 2 hours trying to figure out why the heck nothing worked until I ran across [this SO post](http://stackoverflow.com/questions/24222483/socket-io-1-0-express-4-2-no-socket-connection/24222869#24222869) that lists the code change in this PR, which worked perfectly with modern Express.\n\nAnother update to the site's http://socket.io/docs/ will be necessary, as that also lists code for express 3/4 that simply does not work.\n",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 58,
        "deletions": 11,
        "changed_files": 4,
        "created_at": "2016-03-19T11:29:13Z",
        "closed_at": "2016-04-03T01:31:30Z",
        "merged_at": "2016-04-03T01:31:30Z",
        "body": "This allows to test both the **current** source files in `lib` directory and **compat** version transformed by babel in `dist` directory by setting the environmental variable `MODE`.\nIn the future when we move the code base to es6, we can make sure both versions pass the test.\n\nMajor changes:\n- explicit `require` path (`../lib` instead of `..`) in the test, allowing us to switch the default version we serve inside `package.json`'s main between `lib`(current version) and `dist`(compat version) and not affect the tests.\n- more verbose output for `mocha` reporter to check if we are testing compat or current version, it prints `testing compat version` in the console (I can change it back to dot since I have tested this in CI and it is running the correct versions)\n- build the compat version to `dist` before testing.\n- set the environmental variables to instruct the CI to run both current test and compat tests for node 0.10, 0.12, 4. In the future we could drop the current test for node 0.10 and 0.12 when we move to es6.\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2016-03-16T18:13:17Z",
        "closed_at": "2016-04-11T13:20:46Z",
        "merged_at": "2016-04-11T13:20:46Z",
        "body": "I updated the repository URL and removed an unnecessary path to gulp.\n\nEven if gulp is not installed globally, the script 'test' will still run fine.  \"...executables will be added to the PATH for executing the scripts.\" (https://docs.npmjs.com/misc/scripts#path)\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-03-16T03:30:13Z",
        "closed_at": "2016-10-21T01:20:21Z",
        "merged_at": null,
        "body": "`opts` object is optional\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 783,
        "deletions": 763,
        "changed_files": 11,
        "created_at": "2016-03-13T10:31:12Z",
        "closed_at": "2017-01-12T15:58:11Z",
        "merged_at": null,
        "body": "Brief:\n- Add ESLint\n- Fix code to make it conform to the standard\n- Add gulp task for linting (`gulp lint`)\n- Run lint before test\n\nImportant changes/refactoring due to ESLint will be annotated on the diff\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 40,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-03-10T09:26:07Z",
        "closed_at": "2016-11-24T22:39:43Z",
        "merged_at": "2016-11-24T22:39:43Z",
        "body": "This fix allows server to serve the sourcemap of socket.io-client generated by webpack builder using `gulp build` task.\n\nThe corresponding PR for `socket.io-client` is https://github.com/socketio/socket.io-client/pull/953\n\nTested in Chrome and Firefox using a custom package of `socket.io-client` with sourcemap file. It also catches the error when there is not sourcemap available in `socket.io-client`.\n\nScreenshots of how the generated source map looks in browsers:\n![screen shot 2016-03-10 at 4 00 40 pm](https://cloud.githubusercontent.com/assets/1209810/13664967/11eb898e-e6e5-11e5-8106-f7a87b23114f.png)\n![screen shot 2016-03-10 at 4 00 29 pm](https://cloud.githubusercontent.com/assets/1209810/13664972/14d06520-e6e5-11e5-81a8-6a51a638a091.png)\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-03-09T01:57:21Z",
        "closed_at": "2016-04-11T14:00:07Z",
        "merged_at": "2016-04-11T14:00:07Z",
        "body": "Not sure why `.username` was floated, but it causes the messages to steadily march to the right in Firefox, per screenshot:\n\n![socket](https://cloud.githubusercontent.com/assets/24193/13622893/e54235aa-e567-11e5-9635-36d6cde74145.png)\n\nRemoving the float (or setting `.messages > * { clear: both; }`) results in identical, correct display in both Chrome and Firefox.\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 70,
        "deletions": 11,
        "changed_files": 4,
        "created_at": "2016-03-06T03:33:53Z",
        "closed_at": "2016-03-13T04:04:48Z",
        "merged_at": "2016-03-13T04:04:48Z",
        "body": "- Add `gulp` to repo\n- Add `gulp` tasks to mirror `make` recipes\n- Add `transpile` task for babel transformation\n- Redirect all `make` recipes to `gulp`\n- Remove node 0.8 from travis\n\nNote: ESLint will be on the next PR as fixes for linting errors will make reviewing of PR difficult\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2016-03-01T16:53:24Z",
        "closed_at": "2016-10-21T01:02:59Z",
        "merged_at": "2016-10-21T01:02:59Z",
        "body": "Making proper optional Docs for socketIO\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-02-26T21:00:41Z",
        "closed_at": "2016-04-11T14:02:17Z",
        "merged_at": null,
        "body": "I just downloaded the program and looked at it and it showed the messages being weirdly displayed (adding the width of the last username to the start of the new message like so:\n\n```\nTestUser this is a mesage\n               TestUser this is another message\n                             TestUser this is message 3\n```\n\nFor some reason, reducing the font-size by 10% appears to fix the bug.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-02-22T16:01:52Z",
        "closed_at": "2016-11-05T00:19:15Z",
        "merged_at": "2016-11-05T00:19:15Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2016-02-05T13:10:12Z",
        "closed_at": "2016-11-23T13:58:42Z",
        "merged_at": null,
        "body": "I suggest to replace for in loop with hasOwnProperty check with significantly cheaper Object.keys and for loop (jsperf: https://jsperf.com/object-keys-vs-for-in-perf). In String.prototype.of method you call String constructor  which usually receives some string as an input. It is cheaper to use implicit string conversion, and performance benefit is even larger for inputs of type string (jsperf: http://jsperf.com/implicitstringconversion)\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 41,
        "deletions": 10,
        "changed_files": 5,
        "created_at": "2016-01-31T07:48:43Z",
        "closed_at": "2016-04-11T15:44:59Z",
        "merged_at": "2016-04-11T15:44:59Z",
        "body": "Server-side implementation of the fix for issue [#331](https://github.com/socketio/socket.io-client/issues/331).\nClient fix on PR [#943](https://github.com/socketio/socket.io-client/pull/943) on socket.io-client \n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-01-30T20:54:39Z",
        "closed_at": "2016-04-11T14:09:41Z",
        "merged_at": "2016-04-11T14:09:41Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2016-01-30T04:01:43Z",
        "closed_at": "2016-04-11T18:58:08Z",
        "merged_at": "2016-04-11T18:58:08Z",
        "body": "updated the express version, addressing #2152\n\nthe example works fine with new version express\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-01-30T03:34:42Z",
        "closed_at": "2016-04-11T14:05:33Z",
        "merged_at": "2016-04-11T14:05:33Z",
        "body": "Added the documentation for Socket#disconnect, issue #2400.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2016-01-27T09:52:34Z",
        "closed_at": "2016-01-29T16:21:22Z",
        "merged_at": null,
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 23,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2016-01-21T11:54:58Z",
        "closed_at": "2016-01-21T17:15:36Z",
        "merged_at": "2016-01-21T17:15:36Z",
        "body": "Related https://github.com/socketio/socket.io/issues/2069, https://github.com/socketio/engine.io/pull/378\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-01-18T12:38:09Z",
        "closed_at": "2016-10-21T01:04:16Z",
        "merged_at": null,
        "body": "applying .text() to text(input) doesnt strip html.  However, if you do .html(input).text() it does.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-01-11T19:07:55Z",
        "closed_at": "2016-11-05T00:20:27Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2016-01-09T21:09:18Z",
        "closed_at": "2016-01-17T06:22:05Z",
        "merged_at": "2016-01-17T06:22:05Z",
        "body": "Related: https://github.com/socketio/socket.io/issues/2371\n\nThe website (http://socket.io/docs/server-api/) should be updated accordingly.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2016-01-07T22:05:15Z",
        "closed_at": "2016-01-17T06:22:52Z",
        "merged_at": "2016-01-17T06:22:52Z",
        "body": "Will look like:\n\n![image](https://cloud.githubusercontent.com/assets/13031701/12184309/c1a1111e-b594-11e5-8655-bce480420de1.png)\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 10,
        "changed_files": 1,
        "created_at": "2015-12-25T10:56:18Z",
        "closed_at": "2016-01-06T09:18:20Z",
        "merged_at": null,
        "body": "which will cause memory leak\n",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 195,
        "deletions": 9,
        "changed_files": 4,
        "created_at": "2015-12-25T10:38:02Z",
        "closed_at": "2016-11-05T00:58:51Z",
        "merged_at": null,
        "body": "clean up for #2247 \n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-12-20T09:19:04Z",
        "closed_at": "2016-01-17T06:23:35Z",
        "merged_at": "2016-01-17T06:23:35Z",
        "body": "update docs source code :+1: \n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 28,
        "deletions": 28,
        "changed_files": 5,
        "created_at": "2015-12-14T07:33:20Z",
        "closed_at": "2016-01-17T06:25:32Z",
        "merged_at": "2016-01-17T06:25:32Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 65,
        "deletions": 6,
        "changed_files": 3,
        "created_at": "2015-12-07T11:06:48Z",
        "closed_at": "2016-11-18T00:56:25Z",
        "merged_at": null,
        "body": "With these changes socket.io middleware functions can return Promises instead of using the `done` callback. This does not require including a Promise polyfill in socket.io.\n",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 45,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2015-12-03T07:07:51Z",
        "closed_at": "2016-10-06T21:23:27Z",
        "merged_at": "2016-10-06T21:23:26Z",
        "body": "As suggested there https://github.com/socketio/socket.io/issues/1814 (all credits to @X-Coder)\n\n``` javascript\nsocket.on('disconnecting', function(){\n  var rooms = socket.rooms.slice();\n  // socket.rooms should not be empty here (on 'disconnect' it is, because `leaveAll()` has already been called)\n});\n```\n",
        "comments": 15
    },
    {
        "merged": true,
        "additions": 19,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2015-11-27T21:15:06Z",
        "closed_at": "2015-11-28T18:56:46Z",
        "merged_at": "2015-11-28T18:56:46Z",
        "body": "Related:\n- https://github.com/socketio/socket.io/pull/2312\n- https://github.com/socketio/socket.io-redis/issues/53 (the second point should also be fixed as `this.rooms` is now an object)\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 32,
        "deletions": 8,
        "changed_files": 5,
        "created_at": "2015-11-23T14:22:41Z",
        "closed_at": "2015-11-23T17:19:35Z",
        "merged_at": "2015-11-23T17:19:35Z",
        "body": "Please excuse me for this poorly-written PR: https://github.com/socketio/socket.io/pull/2239\n\nI added a test, but it will currently fail due to:\n- https://github.com/socketio/engine.io/pull/367\n- https://github.com/socketio/socket.io-client/pull/913\n\nPlease tell me if something is missing.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2015-11-23T08:29:57Z",
        "closed_at": "2015-11-23T17:19:03Z",
        "merged_at": "2015-11-23T17:19:03Z",
        "body": "This fix is based on https://github.com/socketio/socket.io/pull/2302 .\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 9,
        "changed_files": 4,
        "created_at": "2015-11-20T21:07:07Z",
        "closed_at": "2015-11-21T14:21:39Z",
        "merged_at": "2015-11-21T14:21:39Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-11-19T08:33:21Z",
        "closed_at": "2015-11-22T01:39:23Z",
        "merged_at": "2015-11-22T01:39:23Z",
        "body": "[Package `ms` is vulnerable to DoS attacks](https://nodesecurity.io/advisories/46). The issue was fixed in `v0.7.1`.\n\nPackage `debug` was updated accordingly in `v2.2.0`.\n\nThis PR updates the required version of `debug` ([Node Security tools](https://www.npmjs.com/package/nsp) will complain and fail until this is fixed).\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2015-11-18T12:35:51Z",
        "closed_at": "2016-01-17T11:57:28Z",
        "merged_at": null,
        "body": "fixes socketio/socket.io#2311\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 158,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2015-11-15T02:33:23Z",
        "closed_at": "2016-11-05T00:54:33Z",
        "merged_at": null,
        "body": "Hello!\n\nI had implemented support for socket middleware functions that allow one to listen for dynamic event names, preprocess data, catch all and so on, without resorting to any monkey-patching. I'd be happy if you will consider this useful.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2015-11-13T18:07:27Z",
        "closed_at": "2015-11-16T21:12:56Z",
        "merged_at": null,
        "body": "Fixed Travis CI badge\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2015-11-13T03:31:19Z",
        "closed_at": "2015-11-23T08:33:19Z",
        "merged_at": null,
        "body": "Created with https://github.com/dkhamsing/frankenstein\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-10-28T21:36:40Z",
        "closed_at": "2015-11-20T16:37:01Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-10-27T02:37:57Z",
        "closed_at": "2016-04-11T14:14:11Z",
        "merged_at": null,
        "body": "This is just plain strange, but using fotn size above 150% makes the alignment got crazy on firefox. No idea at all why and how. \n\nCheck http://imgur.com/TRdhV8Y to have an idea of what I am talking about.\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-10-06T19:46:06Z",
        "closed_at": "2015-11-16T21:12:26Z",
        "merged_at": "2015-11-16T21:12:26Z",
        "body": "Remove broken build status caused by the name change of the github organization.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-10-01T22:33:36Z",
        "closed_at": "2015-11-20T16:37:33Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 9,
        "changed_files": 1,
        "created_at": "2015-09-28T10:16:48Z",
        "closed_at": "2015-10-09T06:04:51Z",
        "merged_at": null,
        "body": "original commit will cause memory leak when middleware request is done and client is closed, `process.nextTick` will make run callback queue after client close event handler\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-09-21T09:04:24Z",
        "closed_at": "2015-11-23T17:32:33Z",
        "merged_at": null,
        "body": "",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2015-09-18T19:44:20Z",
        "closed_at": "2015-09-21T21:27:29Z",
        "merged_at": null,
        "body": "Fixes npm install failures with node 4. (Requires XCode 7).\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-09-16T09:41:39Z",
        "closed_at": "2015-11-23T17:31:48Z",
        "merged_at": "2015-11-23T17:31:48Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-09-16T09:34:32Z",
        "closed_at": "2015-11-23T08:17:27Z",
        "merged_at": null,
        "body": "The previous reference `automattic/socket.io-client#bf98153` points to 0.7.x of `ws` package which could not compile under Node 4.0.0.\n\nWe have to point to `ws` 0.8.0 to make it compile.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 115,
        "deletions": 46,
        "changed_files": 6,
        "created_at": "2015-09-15T09:31:07Z",
        "closed_at": "2015-12-25T10:52:39Z",
        "merged_at": null,
        "body": "",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2015-09-15T08:06:39Z",
        "closed_at": "2015-12-14T07:29:04Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 40,
        "deletions": 46,
        "changed_files": 5,
        "created_at": "2015-09-11T20:54:29Z",
        "closed_at": "2015-11-22T18:34:57Z",
        "merged_at": "2015-11-22T18:34:57Z",
        "body": "See #2199 \n",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-09-09T23:54:16Z",
        "closed_at": "2015-11-23T08:34:03Z",
        "merged_at": null,
        "body": "I believe this is necessary to get the changes in so this can build w/ node 4.0.0\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2015-09-09T19:35:29Z",
        "closed_at": "2015-11-23T18:07:12Z",
        "merged_at": null,
        "body": "This PR is not meant to be merged. Rather it is intended to run the tests on CI and see which fail for which node versions.\n\nRelated: #2228\n\n<!-- Reviewable:start -->\n\n[<img src=\"https://reviewable.io/review_button.png\" height=40 alt=\"Review on Reviewable\"/>](https://reviewable.io/reviews/socketio/socket.io/2233)\n\n<!-- Reviewable:end -->\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-09-09T08:32:58Z",
        "closed_at": "2015-11-23T18:07:33Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-09-01T05:36:50Z",
        "closed_at": "2016-10-21T01:00:38Z",
        "merged_at": "2016-10-21T01:00:38Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-08-28T04:20:44Z",
        "closed_at": "2015-11-23T08:09:48Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 28,
        "deletions": 19,
        "changed_files": 4,
        "created_at": "2015-08-23T17:49:38Z",
        "closed_at": "2016-11-18T01:06:40Z",
        "merged_at": null,
        "body": "While I was looking at how `socket.io` worked internally (which by the way, great job!) I spotted some code which can be optimized (https://github.com/socketio/socket.io/commit/b37f97697a7ec423cead09b67997a0a952f5ff46) and standardised (https://github.com/socketio/socket.io/commit/906cdae4d383d924c173d4475ba597f880ee19c8).\n\nAlso replaced deprecated [__defineGetter__()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__) with defineProperty().\n\nAll changes were tested successfully (of course after including PR https://github.com/socketio/socket.io/pull/2193).\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-08-23T17:16:52Z",
        "closed_at": "2015-11-23T08:37:07Z",
        "merged_at": "2015-11-23T08:37:07Z",
        "body": "The documentation was a little confusing because it showed the socket.to() example under the socket.in() heading. I have made minor changes to be more clear.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2015-08-17T02:43:26Z",
        "closed_at": "2015-11-16T21:10:24Z",
        "merged_at": "2015-11-16T21:10:24Z",
        "body": "Migrated legacy URLs containing 'Automattic' to the new org 'socketio'\n### \\* Before\n\n<img width=\"557\" alt=\"screen shot 2015-08-16 at 8 37 00 pm\" src=\"https://cloud.githubusercontent.com/assets/4898263/9297076/a618ed40-4456-11e5-9a76-bdccdab1c530.png\">\n### \\* After\n\n<img width=\"538\" alt=\"screen shot 2015-08-16 at 8 38 13 pm\" src=\"https://cloud.githubusercontent.com/assets/4898263/9297084/c5a43fc0-4456-11e5-8549-4e7e40fb7ba9.png\">\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2015-08-16T22:28:47Z",
        "closed_at": "2015-08-29T22:57:40Z",
        "merged_at": null,
        "body": "fixed package.json so it pulls 1.3.6 client, fixed typo in socket.io-adapter commit code\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-08-11T14:46:38Z",
        "closed_at": "2015-11-23T08:37:47Z",
        "merged_at": null,
        "body": "just fix a link\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-08-03T19:01:35Z",
        "closed_at": "2016-11-23T14:12:01Z",
        "merged_at": null,
        "body": "Clean up the grammar in the Readme so that it conveys the intended meaning.\nNo code changes. Thanks!\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-08-01T19:16:25Z",
        "closed_at": "2015-11-23T08:38:44Z",
        "merged_at": null,
        "body": "The package.json dependency for 1.3.6 was on an earlier version of socket.io-client, 1.3.5, causing the test suite to fail. This change pulls the correct version of socket.io-client after `npm install`.\nSee Issue #2182 \n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2015-07-11T07:30:57Z",
        "closed_at": "2015-07-15T01:03:01Z",
        "merged_at": "2015-07-15T01:03:01Z",
        "body": "Learning nodejs\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-07-06T15:36:24Z",
        "closed_at": "2015-11-18T20:56:01Z",
        "merged_at": "2015-11-18T20:56:01Z",
        "body": "We declare `sent = false` and even check `if (sent)` is truthy, but we never set it to truthy, therefore it never really _prevents double callbacks_...\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2015-06-24T19:07:27Z",
        "closed_at": "2016-11-23T14:07:28Z",
        "merged_at": null,
        "body": "Added a few periods and commas which were missing. Pluralised the word 'paramater' where it was incorrectly specified to singular on line 281.\nVery minor edit. No source code changed.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-06-20T13:17:02Z",
        "closed_at": "2015-11-23T08:39:55Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 18,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2015-06-15T17:23:53Z",
        "closed_at": "2015-11-22T16:20:22Z",
        "merged_at": null,
        "body": "Currently, the server only serves the unminified, uncompressed source.  This pull adds functionality to serve the minified, gzipped source at `/socket.io.min.js`.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 18,
        "deletions": 16,
        "changed_files": 4,
        "created_at": "2015-06-03T08:13:59Z",
        "closed_at": "2015-11-23T08:43:47Z",
        "merged_at": null,
        "body": "Various performance improvements. This follows pull request #2123 and contains the same modifications replayed over current master.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-05-29T18:36:30Z",
        "closed_at": "2015-11-20T20:59:05Z",
        "merged_at": "2015-11-20T20:59:05Z",
        "body": "Socket#request is defined as getter, so we shouldn't try to set value.\n\nRelated: https://github.com/Automattic/socket.io/issues/2120\n",
        "comments": 13
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-05-19T02:52:23Z",
        "closed_at": "2015-06-05T18:51:35Z",
        "merged_at": null,
        "body": "see also http://npm1k.org\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 18,
        "deletions": 16,
        "changed_files": 5,
        "created_at": "2015-05-18T13:02:23Z",
        "closed_at": "2015-06-03T08:15:27Z",
        "merged_at": null,
        "body": "Various performance improvements.\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-05-05T00:11:12Z",
        "closed_at": "2015-06-05T18:51:30Z",
        "merged_at": "2015-06-05T18:51:30Z",
        "body": "This pull request changes the value of the license property in `package.json` to a standard, machine-readable SPDX license identifier, [`\"MIT\"`](https://spdx.org/licenses/MIT).\n\nnpm doesn't require that you use a valid SPDX identifier, but it's strongly recommended. (Try `npm help 7 package.json` and search for \u201cLicense\u201d.) Other source code package managers, like Maven for Java and RubyGems for Ruby, recommend the same. I can't give legal advice via GitHub, but I'm happy to answer questions about SPDX or point you to good resources.\n\nWhy care about SPDX? A machine-readable standard makes it possible for programs, rather than just people, to review a module or even an entire codebase to make sure that licenses are compatible. Whatever the reason\u2014strong personal conviction, company policy, terms of a business deal\u2014SPDX makes it easier to collaborate with others when licenses can be a problem, and helps take open-source software to more places. Given that [npm has a ton of modules](http://www.modulecounts.com/) but also handles dependencies in a novel way, I think a little license hygiene could help npm build amazing new relationships between communities that lawyers have long kept apart.\n\nThanks for your contribution to open-source software!\n\nK\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 204,
        "deletions": 0,
        "changed_files": 4,
        "created_at": "2015-04-30T17:41:46Z",
        "closed_at": "2017-01-12T15:51:58Z",
        "merged_at": null,
        "body": "I created a the simple collaborative whiteboard example with sockets.io.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 36,
        "deletions": 25,
        "changed_files": 1,
        "created_at": "2015-04-26T18:18:57Z",
        "closed_at": "2015-04-27T01:37:22Z",
        "merged_at": null,
        "body": "[deleted]\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-04-11T10:21:09Z",
        "closed_at": "2016-11-23T14:00:07Z",
        "merged_at": "2016-11-23T14:00:07Z",
        "body": "Comment about https://github.com/Automattic/socket.io/commit/3f72dd3322bcefff07b5976ab817766e421d237b\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-03-24T13:55:16Z",
        "closed_at": "2015-04-11T04:38:41Z",
        "merged_at": "2015-04-11T04:38:41Z",
        "body": "When a socket connects, it joins its own room, resulting in a call to adapter.add.\nThe adapter in turn should be able to find the socket by id.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 11,
        "changed_files": 1,
        "created_at": "2015-03-13T20:47:20Z",
        "closed_at": "2017-01-12T15:47:16Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 27,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2015-03-12T21:54:11Z",
        "closed_at": "2015-11-16T21:15:08Z",
        "merged_at": "2015-11-16T21:15:08Z",
        "body": "Fixes #2050 \n",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 44,
        "deletions": 42,
        "changed_files": 2,
        "created_at": "2015-03-09T08:52:06Z",
        "closed_at": "2017-01-12T15:46:58Z",
        "merged_at": null,
        "body": "Using promises, I remove unreliable `setTimeout()` hack.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 36,
        "deletions": 32,
        "changed_files": 3,
        "created_at": "2015-03-09T07:52:30Z",
        "closed_at": "2017-01-12T15:48:30Z",
        "merged_at": null,
        "body": "How about using generators & promises for more readable and robust asynchronous operation?\nFirst, I try it at testing code.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-03-04T18:18:53Z",
        "closed_at": "2015-11-23T18:12:38Z",
        "merged_at": null,
        "body": "I just add io.js test to travis.\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 45,
        "deletions": 0,
        "changed_files": 4,
        "created_at": "2015-03-01T19:16:00Z",
        "closed_at": "2017-01-12T15:49:48Z",
        "merged_at": null,
        "body": "Allows the client codebase to check for a namespace before setting up an additional listener.  Adding multiple listeners to the same namespace can cause too many 'emit' events to get called.  So, this fork update allows code like this to work:\n\n```\nexports.createNamespace = function(namespaceId, storageFunc, cb) {\n  //\n  // Socket listener.  Gets messages from the clients and rebroadcasts them\n  // to all the other clients.\n  //\n\n  var ioNamespaceId = '/' + namespaceId;\n\n  if (io.has(ioNamespaceId)) {\n    debug('reusing existing namespace: ' + ioNamespaceId);\n  } else {\n    var nsp = io.of(ioNamespaceId);\n    debug('created socket namespace: ' + ioNamespaceId);\n\n    nsp.on('connection', function(socket){\n      debug('got connection!');\n      socket.on('addComment', function(data) {\n        storageFunc(data, function(err, result) {\n          if (err) {\n            debug('(error) can\\'t save data! ' + util.inspect(err));\n          }\n          socket.broadcast.emit('addedComment', data);\n        });\n      });\n    });\n  }\n  cb();\n};\n```\n\nAlso - adding additional \".idea\" entry to .gitignore so Webstorm users don't have to manually add it when they fork.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 109,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2015-02-19T18:41:51Z",
        "closed_at": "2015-04-05T22:51:54Z",
        "merged_at": "2015-04-05T22:51:54Z",
        "body": "Add `volatile` and `compress()` to namespace including aliases for `Server`.\n\nNote: required to merge https://github.com/Automattic/socket.io/pull/2006 to pass all tests. \n\nRelated: https://github.com/Automattic/socket.io/issues/1952, https://github.com/Automattic/socket.io/issues/1741, https://github.com/Automattic/socket.io-client/issues/742\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 21,
        "deletions": 17,
        "changed_files": 3,
        "created_at": "2015-02-14T19:43:32Z",
        "closed_at": "2015-04-05T22:51:49Z",
        "merged_at": "2015-04-05T22:51:49Z",
        "body": "- Change optional arguments to an option object.\n- No use of `flags` on `Socket#packet` so that we don't need to clear `flags` within it.\n-  Enable volatile and compress when broadcasting\n\nRelated: https://github.com/Automattic/socket.io-adapter/pull/26\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2015-02-11T18:38:18Z",
        "closed_at": "2015-11-22T18:17:02Z",
        "merged_at": "2015-11-22T18:17:02Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-02-11T15:16:58Z",
        "closed_at": "2017-01-12T15:46:58Z",
        "merged_at": null,
        "body": "Hi there,\n\nI want to propose to add this badge to the README to show off inline-documentation: [![Inline docs](http://inch-ci.org/github/Automattic/socket.io.svg)](http://inch-ci.org/github/Automattic/socket.io)\n\nThe badge links to [Inch CI](http://inch-ci.org) and shows an evaluation by [InchJS](http://trivelop.de/inchjs), a project that tries to raise the visibility of inline-docs (early adopters include [forever](https://github.com/foreverjs/forever), [node-sass](https://github.com/sass/node-sass) and [when](https://github.com/cujojs/when)).\n\nThe idea is to motivate aspiring Node developers to dive into Open Source projects and read the code.\nIt's about _engagement_, because, while testing and code coverage are important, inline-docs are the humanly engaging factor in Open Source. This project is about making people less adverse to jumping into the code and see whats happening, because they are not left alone while doing so. I know that, because I put off reading other people's code way too long in my life.\n\nAlthough this is \"only\" a passion project, I really would like to hear your thoughts, critique and suggestions. Your status page is http://inch-ci.org/github/Automattic/socket.io\n\nWhat do you think?\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-02-10T21:41:37Z",
        "closed_at": "2015-11-22T16:31:14Z",
        "merged_at": null,
        "body": "The word 'varibles' should be 'variables' in the comment describing their initialization.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 50,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2015-02-03T14:10:42Z",
        "closed_at": "2015-11-23T17:41:29Z",
        "merged_at": null,
        "body": "If you call clients() multiple times with different rooms you end up with clients from all the rooms specified in previous calls.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 235,
        "deletions": 10,
        "changed_files": 5,
        "created_at": "2015-02-01T07:02:19Z",
        "closed_at": "2017-01-12T15:52:18Z",
        "merged_at": null,
        "body": "I've found that it would be very useful for synchronization purposes to be able to send messages to server-side sockets in namespaces/rooms directly without transiting to/from the client.\n\nMy proposal for this functionality is a new method `intercom` which functions essentially identically to the `broadcast` API, except that it broadcasts to server-side sockets instead of client-side sockets.\n\n`intercom` is implemented as both a `Namespace` instance method as well as a flag for sockets. This allows syntax like:\n\n`io.of('/namespace').in('room').intercom('event', data);`\n\nas well as\n\n`socket.intercom.emit('event', data);`\n\nthe latter following the same semantics as its broadcast equivalent -- namely, the origin socket is skipped in the emission.\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 163,
        "deletions": 1,
        "changed_files": 4,
        "created_at": "2015-01-26T01:01:35Z",
        "closed_at": "2015-01-31T16:34:43Z",
        "merged_at": "2015-01-31T16:34:43Z",
        "body": "",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2015-01-25T23:31:54Z",
        "closed_at": "2017-01-12T15:40:40Z",
        "merged_at": null,
        "body": "A couple tests seemed to be testing different semantics than what they described, so I updated them. However, upon updating the test `should be equivalent for \"\" and \"/\" on client`, the tests appear to be broken. I may be misunderstanding the wording of the unit tests, but it seems that the tests shouldn't fail here if the functionality as described is working.\n",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 17,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-01-25T04:19:59Z",
        "closed_at": "2015-01-30T04:34:38Z",
        "merged_at": "2015-01-30T04:34:38Z",
        "body": "this is a failing test for socket.io-client issue #1956 \n\nthe fix is located in pull request https://github.com/Automattic/socket.io-client/pull/808\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2015-01-25T00:50:25Z",
        "closed_at": "2017-01-12T15:36:28Z",
        "merged_at": null,
        "body": "includes failing test, checks for subdomains using regex one-liner\nsupports multiple subdomains e.g. herp.derp.example.com or just herp.example.com\nboth will return \"example.com\" as expected\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2015-01-23T19:19:31Z",
        "closed_at": "2016-11-05T00:15:02Z",
        "merged_at": null,
        "body": "Now we can remove a previously attached main namespace listener directly, eg. removing a `connection` event handler.\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 63,
        "deletions": 5,
        "changed_files": 5,
        "created_at": "2015-01-21T20:03:33Z",
        "closed_at": "2015-01-23T18:04:43Z",
        "merged_at": "2015-01-23T18:04:43Z",
        "body": "Support compression and add the `compress` method which user can set the `compress` flag for a subsequent event emission.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-01-14T22:24:37Z",
        "closed_at": "2015-01-17T12:21:38Z",
        "merged_at": "2015-01-17T12:21:38Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2015-01-13T18:27:45Z",
        "closed_at": "2015-01-17T12:24:04Z",
        "merged_at": null,
        "body": "Fixed Capitalization in comments\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 28,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2015-01-13T15:23:59Z",
        "closed_at": "2015-01-17T12:21:53Z",
        "merged_at": "2015-01-17T12:21:53Z",
        "body": "Checks for a similar case as reported in https://github.com/Automattic/socket.io/issues/1621\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-01-11T05:11:14Z",
        "closed_at": "2015-01-17T12:22:11Z",
        "merged_at": "2015-01-17T12:22:11Z",
        "body": "Only made 1 change:\n1) Modified the license to include a range with the current year.\n\nNo other changes made.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-01-08T17:34:06Z",
        "closed_at": "2015-01-10T23:00:32Z",
        "merged_at": null,
        "body": "A bugfix introduced to fix bug #1670 when leaving rooms still exhibits wrong and unexpected behaviour.\nIf the room that should be left is not found in self.rooms, indexOf returns -1, \nmaking the arguments of arr.splice (-1,1), meaning remove one room from the end of self.rooms.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-12-26T12:16:45Z",
        "closed_at": "2015-01-10T22:33:21Z",
        "merged_at": "2015-01-10T22:33:21Z",
        "body": "Update `debug` to `v2.1.0`.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-12-22T05:17:16Z",
        "closed_at": "2015-01-10T22:49:00Z",
        "merged_at": "2015-01-10T22:49:00Z",
        "body": "underylings to underlyings\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 148,
        "deletions": 14,
        "changed_files": 3,
        "created_at": "2014-12-19T19:29:56Z",
        "closed_at": "2018-02-28T23:22:35Z",
        "merged_at": null,
        "body": "This is another attempt to fix #1854.  It is much more limited in its approach (no automatic disconnects and no host support - as in #1865).\n\nI'm new to the code base so not sure if this is the right approach - open to feedback on how I'm doing this.  The questions I have with my approach:\n- Does it make sense to set up another middleware path for this?  Or should I allow unknown namespaces to flow through to the existing middleware path and then tear down the connection if the namespace isn't found (or is disallowed)?\n- Should I pass more than just the name of the namespace to give the server more discretion in allowing the new namespace?\n- Is there a better name than `useNamespace` for adding the middleware?  Name feels odd but couldn't think of anything better.\n\nThanks to @davidbau for #1865 which got me going in the right direction.\n",
        "comments": 68
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-12-19T13:29:39Z",
        "closed_at": "2015-01-10T23:04:51Z",
        "merged_at": null,
        "body": "change code to fix issue #1919 \n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 204,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2014-12-08T09:23:44Z",
        "closed_at": "2015-01-17T12:23:06Z",
        "merged_at": "2015-01-17T12:23:06Z",
        "body": "Tests the following behavior with the existing volatility implementation:\n- Volatile events can be sent\n- Volatile events are not sent after sending a regular event (in the same tick)\n- Normal events can be queued normally after a successful (not dropped) volatile event\n- Only one volatile should be sent when more than one sent consecutively\n\nAll these properties are tested both on the polling and ws transports.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2014-11-25T17:40:23Z",
        "closed_at": "2015-01-10T22:36:07Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 622,
        "deletions": 17,
        "changed_files": 4,
        "created_at": "2014-11-15T12:50:27Z",
        "closed_at": "2015-01-10T22:48:16Z",
        "merged_at": null,
        "body": "This pull requests adds dynamic namespace support, virtual host support, and an optional /socket.io/status page to help monitor dynamic (and regular) namespaces.\n\nIt addresses https://github.com/Automattic/socket.io/issues/1854\n\nFrom the library user's point of view, it doesn't change any existing behavior.  Passes current unit tests, but adds some functionality.\n#### Three new options.\n\nhost: true - enables hostname qualification on namespaces\nhost: 'roothost.com' - enables hostnames, but matching hosts (may be a regexp) are still unqualified\nhost: '*' - the default - all hosts are unqualified\n\nretirement: 10000 (default) - the number of ms to wait before cleaning up an empty dynamic namespace\n\nserveStatus: false (default) - set to true to enable socket.io/status\n#### One main new public API\n\nserver.setupNamespace(pattern, fn) - call to set up all namespaces matching \"pattern\" (which may be a string or regexp).\n\nThe rules are: each namespace instance is called with at most one setup function.  When a new dynamic namespace is connected by a client, the best-matching setup function is found and called.  Exact string matches are preferred over regexps, and within those groups, the last registered name/pattern gets precedence.  If no pattern matches a client's requested namespace name, an error is sent to the client.\n#### Other public functions\n\nserver.getHost(conn) - override to normalize hostnames\nnamespace.host - has the hostname\nnamespace.fullname() - '//host/name'\nnamespace.retriement - set to milliseconds to persist after going empty (defaulted)\nnamespace.expire(fn) - register an expiration callback for when a stale namespace is deleted\n",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2014-10-17T17:59:41Z",
        "closed_at": "2014-10-18T07:08:45Z",
        "merged_at": null,
        "body": "I checked the performance of `!~` vs `===` with `process.hrtime`.\n`===` is faster.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 656,
        "deletions": 0,
        "changed_files": 6,
        "created_at": "2014-10-07T21:35:34Z",
        "closed_at": "2015-01-10T22:40:09Z",
        "merged_at": null,
        "body": "I have forked the chat example and made it work using Cluster.  There is an updated README within the example's directory that instructs you on how to configure Redis.\n\nMy solution used the `sticky-session` module (https://github.com/indutny/sticky-session) for routing requests to a slave based on IP address.  This means that if you want to test this application, you will need to hit index.html from different machines in order to see requests hitting distinct slaves.\n\nI unfortunately had to drop support for showing the number of connected users in the chat room. In Socket.IO 1.2.0 there will be support for listing the number of connected clients, and therefore being able to get the count (https://github.com/Automattic/socket.io/pull/1630#issuecomment-55276496). \n\nI would love some feedback from the project maintainers about how I did on using cluster, and whether my solution is in-line with their vision on the best practice for scaling Socket.io across multiple nodes.  \n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-10-06T05:10:19Z",
        "closed_at": "2014-11-12T09:04:09Z",
        "merged_at": "2014-11-12T09:04:09Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-10-05T04:54:14Z",
        "closed_at": "2014-11-12T09:04:32Z",
        "merged_at": null,
        "body": "Add the trailing slash to messageBody\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-10-02T06:45:11Z",
        "closed_at": "2014-10-02T09:12:41Z",
        "merged_at": null,
        "body": "Open up the option to provide a custom handler to check cross origin handling. This is needed (for example) for situations where CORS needs to be verified dynamically against allowed origins in a database\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 19,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2014-09-20T17:23:10Z",
        "closed_at": "2014-09-22T18:25:23Z",
        "merged_at": "2014-09-22T18:25:23Z",
        "body": "Tests that empty rooms are deleted. Fails without the adapter bump.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2014-09-19T04:41:45Z",
        "closed_at": "2014-09-22T18:42:59Z",
        "merged_at": "2014-09-22T18:42:59Z",
        "body": "Added a few periods and commas which were missing. Also added the word each to clarify how multiple users each enter a unique username.\nVery minor edit. No source code changed.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 42,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2014-09-12T03:37:04Z",
        "closed_at": "2014-09-22T19:38:14Z",
        "merged_at": "2014-09-22T19:38:14Z",
        "body": "Implementing 2nd method from issue #1772\n\n**Why is it needed:** To dynamically check whether origin is allowed to access, when hard-coded origins are not an option (for example based on values in database that dynamically change).\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2014-09-10T12:50:00Z",
        "closed_at": "2014-09-25T22:13:18Z",
        "merged_at": "2014-09-25T22:13:18Z",
        "body": "The usage information for `Server#close` doesn't set `io` to an instance of `Server`. This has been fixed.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 12,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2014-09-08T08:32:31Z",
        "closed_at": "2015-01-10T23:32:48Z",
        "merged_at": null,
        "body": "if the stuff recieved is an array as string, it'll be json parsed automatically\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-09-04T18:13:36Z",
        "closed_at": "2014-09-06T10:10:31Z",
        "merged_at": null,
        "body": "I have never used the debug library, and it's not clear to use for new users (without full code).\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-09-04T17:11:42Z",
        "closed_at": "2014-09-11T15:05:58Z",
        "merged_at": "2014-09-11T15:05:58Z",
        "body": "The example application's main file is marked in its 'package.json' as being 'app.js'.  There is no 'app.js'.  So I've fixed the main file property to be 'index.js'.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 32,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-08-19T21:02:15Z",
        "closed_at": "2014-09-22T18:29:31Z",
        "merged_at": null,
        "body": "Makes sure volatile messages are written through engine.io if the transport is open, and not written if the transport is closed.\n\nFails when L605 commented out.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-08-19T12:09:29Z",
        "closed_at": "2014-09-25T22:14:04Z",
        "merged_at": null,
        "body": "Add description of how the message is passed through the components and links to protocols.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 25,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2014-08-19T02:40:20Z",
        "closed_at": "2014-08-20T08:27:46Z",
        "merged_at": "2014-08-20T08:27:46Z",
        "body": "On server, `.of(name)` should use the same key in `.nsps` object for \"\" and \"/\"\n\nImportant to use `String(name)` and `===` to keep out keys that don't cast to \"\"\n",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2014-08-18T17:57:10Z",
        "closed_at": "2014-09-03T20:08:56Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2014-08-12T02:56:11Z",
        "closed_at": "2014-08-12T22:47:12Z",
        "merged_at": "2014-08-12T22:47:12Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-08-12T02:51:08Z",
        "closed_at": "2014-08-12T22:45:58Z",
        "merged_at": "2014-08-12T22:45:58Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 25,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2014-08-03T07:22:52Z",
        "closed_at": "2016-10-21T00:56:35Z",
        "merged_at": null,
        "body": "also object value check as a substitute for indexOf, avoid this situation: !!\"aaa.bb.cc\".indexOf(\"a.bb.cc\")\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2014-08-01T11:23:25Z",
        "closed_at": "2014-08-01T12:45:01Z",
        "merged_at": "2014-08-01T12:45:01Z",
        "body": "Made the room management test slightly more complicated to spot the error with splice, fixed it (props @Marreck) and did the same with `socket.leaveAll` not updating the rooms array.\n\nAddressing #1697\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 17,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2014-07-25T23:26:52Z",
        "closed_at": "2015-01-22T21:42:48Z",
        "merged_at": null,
        "body": "Currently, even if the parsed url.protocol is `https:`,\nServer.checkRequest was matching against port 80. This defaults that\ncheck to use 443 if the protocol is `https:`\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2014-07-23T17:00:54Z",
        "closed_at": "2014-09-22T18:27:35Z",
        "merged_at": "2014-09-22T18:27:35Z",
        "body": "A `resource` value set through the `set` function is now taken into account (and any `path` value set in the constructor) if no path option is specified in the `attach` function itself. \n\nUpdated the resource test to actually check we can reach the underlying Engine.IO server with the set path.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 18,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2014-07-22T12:10:57Z",
        "closed_at": "2014-08-01T12:45:32Z",
        "merged_at": "2014-08-01T12:45:32Z",
        "body": "Namespaces should be allocated only by the server using `of`\n\n``` js\nsio.of('<namespace>').on(...)\n```\n\nA client cannot connect to a namespace not allocated by the server.\n\nPlease check it @guille\n\nThanks @smaffer\n#1681\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2014-07-16T15:43:07Z",
        "closed_at": "2014-07-16T17:58:54Z",
        "merged_at": "2014-07-16T17:58:54Z",
        "body": "Source of bug: after connection to nsp '/', the socket's connectBuffer\nwas being deleted. On attempt to reconnect, we attempted to push to a deleted array.\nInstead of the deleting the connect buffer, it is now emptied.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-07-09T12:28:58Z",
        "closed_at": "2014-07-16T01:25:59Z",
        "merged_at": "2014-07-16T01:25:59Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 14,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2014-07-04T04:52:25Z",
        "closed_at": "2015-11-05T05:39:54Z",
        "merged_at": null,
        "body": "fix cross domain bug when disconnect\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2014-07-02T11:48:22Z",
        "closed_at": "2014-09-22T19:54:41Z",
        "merged_at": null,
        "body": "",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2014-06-29T13:44:14Z",
        "closed_at": "2014-07-01T06:32:23Z",
        "merged_at": "2014-07-01T06:32:23Z",
        "body": "We should use the standard http protocol to handler the etag header. The client request header should be `If-None-Match`, not `Etag`.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 101,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2014-06-24T01:08:40Z",
        "closed_at": "2014-07-01T02:10:26Z",
        "merged_at": "2014-07-01T02:10:26Z",
        "body": "When creating a new Server with a port\n\n``` js\nvar PORT = 3030;\nvar sio = require('socket.io')(PORT);\n```\n\nsocket.io is creating a new http server https://github.com/Automattic/socket.io/blob/master/lib/index.js#L209 when only sending a PORT. This will allow to close this server \n\nCurrently \n\n``` js\nvar PORT = 3030;\nvar sio = require('socket.io')(PORT);\n\nsio.engine.close();\n\nvar sio = require('socket.io')(PORT);\n\n  Error: listen EADDRINUSE\n```\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 73,
        "deletions": 2,
        "changed_files": 4,
        "created_at": "2014-06-17T12:19:24Z",
        "closed_at": "2016-10-21T00:42:41Z",
        "merged_at": null,
        "body": "Added a clients function that calls the adapter's clients function, in order to get the connected clients in a room.\nPull requests implementing the underlying adapter functions:\nRedis adapter: https://github.com/Automattic/socket.io-redis/pull/15\nMemory adapter: https://github.com/Automattic/socket.io-adapter/pull/5\n",
        "comments": 60
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2014-06-14T10:52:44Z",
        "closed_at": "2014-09-22T18:42:10Z",
        "merged_at": "2014-09-22T18:42:10Z",
        "body": "...and thus requires the `new` keyword\n",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 15,
        "deletions": 15,
        "changed_files": 1,
        "created_at": "2014-06-10T07:44:38Z",
        "closed_at": "2014-06-10T23:36:30Z",
        "merged_at": null,
        "body": "added chinese Commits\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-06-09T20:17:06Z",
        "closed_at": "2014-09-22T19:20:37Z",
        "merged_at": null,
        "body": "I know this should be tested first.  Just wanted to get some options about this kind of change.\n",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 48,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2014-06-06T08:19:21Z",
        "closed_at": "2014-09-25T22:16:20Z",
        "merged_at": null,
        "body": "",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2014-06-03T07:04:15Z",
        "closed_at": "2015-01-10T22:40:46Z",
        "merged_at": null,
        "body": "Just making those debug information more helpful as it's very easy to get lost when trying stuff with multiple clients.\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 24,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-06-02T06:25:06Z",
        "closed_at": "2014-06-13T17:10:40Z",
        "merged_at": "2014-06-13T17:10:40Z",
        "body": "here is the test i talked about here https://github.com/Automattic/socket.io-client/pull/682\n\nthis test fails with the current upstream client, but passes with the client above.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 174126,
        "deletions": 1,
        "changed_files": 4,
        "created_at": "2014-05-31T03:43:46Z",
        "closed_at": "2014-05-31T16:50:19Z",
        "merged_at": "2014-05-31T16:50:19Z",
        "body": "test ack arguments for binary to properly set the packet type.\n\nAlso added tests for really big files.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 11,
        "changed_files": 1,
        "created_at": "2014-05-29T16:55:14Z",
        "closed_at": "2014-09-22T18:33:55Z",
        "merged_at": null,
        "body": "also assert that middleware are functions\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2014-05-29T01:37:39Z",
        "closed_at": "2014-05-29T03:47:20Z",
        "merged_at": "2014-05-29T03:47:20Z",
        "body": "This should prevent XSS if one were to send messages using socket.io from the console.\n\nFor example:\n\n``` js\nvar user = io('http://chat.socket.io');\nuser.emit('add user', '');\nuser.emit('new message', '<script>alert(1)</script>');\n```\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2014-05-29T00:10:52Z",
        "closed_at": "2014-05-29T18:33:36Z",
        "merged_at": "2014-05-29T18:33:36Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-05-28T20:39:51Z",
        "closed_at": "2014-05-30T09:02:16Z",
        "merged_at": "2014-05-30T09:02:16Z",
        "body": "Disables horizontal scroll. \n\nBug example:\n\n![hscroll](https://cloud.githubusercontent.com/assets/744973/3110685/28cf2ece-e6a8-11e3-9f0e-dd57e7a4a1c8.gif)\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-05-27T22:26:22Z",
        "closed_at": "2014-09-03T20:07:48Z",
        "merged_at": null,
        "body": "The handshake error message is too generic and we can't pass more information if we want to display a more detailed error message on clients. \n\nRight now the log.warn is displaying enough detail in the server console. However clients can't access it. \n\nWith this fix we can now send detailed error messages using callback(\"Session Invalid\",false) resulting in \"handshake error Session Invalid\" on the client.\n\nFix for the following issues:\nhttps://github.com/LearnBoost/socket.io/issues/545\nhttps://github.com/LearnBoost/socket.io/issues/331\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-05-24T19:21:36Z",
        "closed_at": "2014-05-24T22:19:48Z",
        "merged_at": "2014-05-24T22:19:48Z",
        "body": "bump bump bump no more circular problem hopefully\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 55,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2014-05-24T14:26:14Z",
        "closed_at": "2014-05-24T18:08:00Z",
        "merged_at": "2014-05-24T18:08:00Z",
        "body": "This PR has sketch of the backwards compatibility for `socket.handshake`.\n\nFor some reason `req.connection.address()` returns null. I'm assuming that it's visible if we do it in the actual handshake logic in Engine.IO, so we might want to consider moving the call there, and setting the property on the Engine.IO socket.\n\nAnother thing we might want to consider is moving the `time` and `issued` properties to be set in Engine.IO exactly when handshaking.\n\n@guille thoughts?\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2014-05-09T07:42:12Z",
        "closed_at": "2014-09-03T20:07:48Z",
        "merged_at": null,
        "body": "Pull request https://github.com/LearnBoost/socket.io/pull/1346 introduced an issue with long connections, because the `_dataLength` variable in the parser was never reset to 0.\n\nFix this issue by reseting the variable when the parser gets an error, closes or reaches the end of a packet.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-05-05T14:57:50Z",
        "closed_at": "2014-05-06T14:15:27Z",
        "merged_at": null,
        "body": "Npm will now throw a warning:\n\nnpm WARN package.json socket.io@1.0.0-pre2 No repository field.\n\nIf the repository field is not present.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-04-16T15:31:54Z",
        "closed_at": "2014-09-03T20:07:48Z",
        "merged_at": null,
        "body": "It took me quite some time to figure out where the standalone was coming from. Would be nice to know from the get go. Thx.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-04-10T18:46:26Z",
        "closed_at": "2014-04-14T20:11:04Z",
        "merged_at": "2014-04-14T20:11:04Z",
        "body": "Would be bad if they were ever not using the same protocol version, eh?\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-04-09T23:10:13Z",
        "closed_at": "2014-09-03T20:07:48Z",
        "merged_at": null,
        "body": "Not sure if this is necessary but this should make it more visible for those who don't check the wiki.\n\nAlso looking for suggestions about things to add. There seem to be come misunderstandings about access to some things in socket.request (like client ip), for instance; I tried to debug that particular problem but didn't see a solution just yet.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 101,
        "deletions": 1,
        "changed_files": 4,
        "created_at": "2014-04-09T19:31:59Z",
        "closed_at": "2014-04-11T16:46:37Z",
        "merged_at": "2014-04-11T16:46:37Z",
        "body": "Added both BC (you can use set to set the origins) as well as logic for putting in the callback to engine.io for request verification.\n\nSee https://github.com/LearnBoost/engine.io/pull/243\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2014-03-28T12:20:06Z",
        "closed_at": "2014-09-03T20:07:48Z",
        "merged_at": null,
        "body": "socket.io supports cors internally today. The problem with this approach is that sometimes socket.io is used with platforms such as express (ie, serving other content) - this content often has it's own way of supporting CORS\n\nFor example, a popular setup would be to have the nginx or apache in front of the node.js handle the cors (saving the need to upgrade and offloading the prefetch requests).\n\nIn those cases, the socket.io part returns double the CORS headers, and this is illegal in CORS - it fails in Chrome for example.\n\nThis change request enables optionally to turn off cors support. By default it's still on\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2014-03-26T18:01:53Z",
        "closed_at": "2014-04-13T19:25:36Z",
        "merged_at": "2014-04-13T19:25:36Z",
        "body": "Works if https://github.com/LearnBoost/engine.io/pull/238 is merged and engine.io version is bumped.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 92,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2014-03-25T20:20:20Z",
        "closed_at": "2014-03-25T23:09:16Z",
        "merged_at": "2014-03-25T23:09:16Z",
        "body": "And also some tests.\n\nIs this what you had in mind, @guille?\n\nEventually this PR might lead to the BC that was discussed in https://github.com/LearnBoost/socket.io/issues/1463\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2014-03-22T10:05:56Z",
        "closed_at": "2014-04-23T04:16:31Z",
        "merged_at": null,
        "body": "When using latest node and karma we are seeing the following error:\n\n```\n[Error: error:24064064:random number generator:SSLEAY_RAND_BYTES:PRNG not seeded]\n```\n\nAs the error says, PRNG is not seeded. pseudoRandomNumers is ok. The problem is that entropySource, in v8, is seeded with sizeof(int64_t), which is 8 bytes (at least on macs). OpenSSL requires 32 bytes of randomness (http://git.openssl.org/gitweb/?p=openssl.git;a=blob;f=crypto/rand/rand_lcl.h;h=6696b8057bbe71d532d17bb12ca95afe07ae4f8d;hb=refs/heads/master#l115)\n\nAlso created an issue for nodejs here https://github.com/joyent/node/issues/7338\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 83,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-03-06T22:13:44Z",
        "closed_at": "2014-03-24T17:21:19Z",
        "merged_at": "2014-03-24T17:21:19Z",
        "body": "Added 6 tests -- one comparing version against client, one checking binding as string, and four checking interaction of binary data and ack callbacks.\n\nNOTE: these tests will fail without a socket.io-parser that is capable of encoding acks as binary. See this parser pr https://github.com/LearnBoost/socket.io-parser/pull/6\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 127,
        "deletions": 28,
        "changed_files": 5,
        "created_at": "2014-03-03T03:29:57Z",
        "closed_at": "2014-03-03T04:53:37Z",
        "merged_at": "2014-03-03T04:53:37Z",
        "body": "Summary:\nAdded binary support to broadcasting by adding a binary check to namespace.js and pre-encoding events in adapter.js.\n\nQuestion: \nI think the pre-encoding stuff in adapter (and the new parameter in client.js) is relatively clean, but it could possibly be better. I was thinking of checking if packet is an array (it is post-encoding) or an object (pre-encoding) rather than passing the \"preEncoded\" flag, but let me know what you think.\n\nThe commit message:\nlib/namespace.js previously was not considering whether an event had\nbinary data and was giving all events parser.EVENT type -- now it uses\nthe has-binary-data module to set the event type appropriately.\n\nThen, after this fix there was a problem with lib/adapter.js -- because\nsocket.io-parser modifies the packet object in its encoding, the sockets\nafter the 1st in a broadcast were not getting the correct data. To fix\nthis, the data is encoded once in adapter, and then the encoded data\nis passed to each of the sockets.\n\nlib/socket.js and lib/client.js were updated to allow for the above. The\n.packet method of each now takes an optional second \"preEncoded\" parameter\n-- if this is true, then client skips the encoding and just writes the\npacket argument directly to engine.\n\ntest/socket.io.js was updated to add two new tests that test\nmulti-messaging of events with binary data.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 17,
        "deletions": 7,
        "changed_files": 2,
        "created_at": "2014-03-01T08:25:56Z",
        "closed_at": "2014-03-01T16:21:53Z",
        "merged_at": "2014-03-01T16:21:53Z",
        "body": "Add a new message when users join and leave to show the updated participants count.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 22,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2014-02-26T18:47:37Z",
        "closed_at": "2014-03-01T16:53:49Z",
        "merged_at": "2014-03-01T16:53:49Z",
        "body": "Notes:\nThis reflects the latest class-based socket.io-protocol. \n\nOlder commit messages:\nThis is a squash of four boring commits. The gist is that client.js\nencoding and decoding stuff was updated to take an array of encoded packets\nto write, and to handle sequences of binary packets to decode. There was\nalso merging done with upstream. All tests are passing.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 37,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2014-02-20T03:26:58Z",
        "closed_at": "2014-06-17T14:54:54Z",
        "merged_at": null,
        "body": "Not sure if I fully understand all the parts to the new socket 1.0, but I needed this ability. I believe I separated the parts into the namespace and adapter correctly, but please do check me over. Thanks!\n",
        "comments": 59
    },
    {
        "merged": true,
        "additions": 114,
        "deletions": 7,
        "changed_files": 5,
        "created_at": "2014-02-18T20:30:07Z",
        "closed_at": "2014-02-21T21:02:27Z",
        "merged_at": "2014-02-21T21:02:27Z",
        "body": "Building on engine.io's new binary support, added support for receiving and sending events with binary data serverside. Uses new asynchronous encoding as well.\n\nExample of binary in use: https://github.com/kevin-roark/socketio-binaryexample\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-02-18T17:31:29Z",
        "closed_at": "2014-02-19T01:00:06Z",
        "merged_at": "2014-02-19T01:00:06Z",
        "body": null,
        "comments": 3
    },
    {
        "merged": true,
        "additions": 504,
        "deletions": 0,
        "changed_files": 6,
        "created_at": "2014-02-12T00:24:54Z",
        "closed_at": "2014-02-18T23:51:51Z",
        "merged_at": "2014-02-18T23:51:51Z",
        "body": "Added an example of a simple chat room. The chat room can handle multiple users. Uses Express.\n\nFeatures:\n- Multiple users can join a chat room by entering a unique username on website load.\n- Users can type chat messages to the chat room\n- A notification is sent to all users when a user joins or leaves the chatroom\n",
        "comments": 13
    },
    {
        "merged": true,
        "additions": 42,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2014-02-03T19:14:50Z",
        "closed_at": "2014-02-03T22:00:14Z",
        "merged_at": "2014-02-03T22:00:14Z",
        "body": "When you set middlewares both with and without namespaces, these middleware functions run in parallel. I believe they should run in series. All middlewares of main namespace should be called first.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-02-03T10:08:44Z",
        "closed_at": "2014-02-03T14:52:08Z",
        "merged_at": "2014-02-03T14:52:08Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-01-24T13:30:44Z",
        "closed_at": "2014-02-08T20:13:01Z",
        "merged_at": "2014-02-08T20:13:01Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 22,
        "deletions": 16,
        "changed_files": 3,
        "created_at": "2014-01-14T06:50:36Z",
        "closed_at": "2014-09-03T20:07:48Z",
        "merged_at": null,
        "body": "\"close timeout\" is passed to the client, and the client closes connection if no data is exchanged in said timeout. Great. But server also sets a timeout **after** client closes connection. This timeout is completely orthogonal to client's \"close timeout\".  \n\nAs per the wiki, which I suspect is a little outdated, \"close timeout\" is for the server to wait for clients to reconnect **after** closing connections. Since clients are used to \"close timeout\" as mentioned above, I propose a new option \"reopen timeout\" for the server, which does exactly what the wiki says for \"close timeout\".\n\nThis is especially helpful with polling transports. Right now, server has to wait polling timeout + close timeout to emit \"disconnected\". Setting \"close timeout\" too low to speed up this forces all clients to keep refreshing connections very frequently.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-01-02T09:20:13Z",
        "closed_at": "2014-02-15T01:16:13Z",
        "merged_at": "2014-02-15T01:16:13Z",
        "body": "Changed \"the best next\" to \"the next best\".\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 32,
        "deletions": 15,
        "changed_files": 5,
        "created_at": "2013-12-30T15:14:59Z",
        "closed_at": "2014-09-03T20:07:48Z",
        "merged_at": null,
        "body": "When socket id were exist and not to establish connection to overwrite original socket id. Otherwise, the client close the establish connection but not exist server, it will cause **CLOSE_WAIT** connections.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2013-12-18T11:08:00Z",
        "closed_at": "2014-09-03T20:07:48Z",
        "merged_at": null,
        "body": "Nodejs 0.10.20 throw an \"ECONNRESET\" error when the socket is reset. After this exception, the socket wasn't cleanly closed, causing a weird behavior.\n\nPull request based on the solution given in bug report #1343\n\nSome related issues: #1281 #1367\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 76,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2013-12-16T16:12:16Z",
        "closed_at": "2014-09-03T20:07:48Z",
        "merged_at": null,
        "body": "When I use socket.io, I often need to somehow add listeners to every existing and future sockets during my server execution. This is hard to do currently with socket.io, but it is a very useful feature that many users would probably like.\n\nSo I added a function in the namespace that does that. A new variable stores the global event callbacks so that each time a new client connects it can directly make it listen those events.\n\nI also added two related tests on the mocha file.\n\nPS: Sorry if I'm doing something wrong, this is my first pull request and I have no idea what I'm doing.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 63,
        "deletions": 66,
        "changed_files": 3,
        "created_at": "2013-12-13T14:28:10Z",
        "closed_at": "2014-05-22T17:49:53Z",
        "merged_at": "2014-05-22T17:49:53Z",
        "body": "Every time a connection is made, socket.io subscribes to 5 additional channels in redis to keep sync in state across multiple nodes (which are unsubscribed on disconnect). This causes problems with high numbers of concurrent connections, eg. 10000 concurrent = 50000 redis subscriptions, which causes redis to use orders of magnitude more CPU.\n\nThis patch uses 5 static channels to convey the sync information instead of subscribing and unsubscribing with every connection. The pub/sub count in redis now stays at 13 whether 10 users are connected, 10,000, or 100,000.\n",
        "comments": 18
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2013-12-02T20:39:29Z",
        "closed_at": "2014-09-03T20:07:48Z",
        "merged_at": null,
        "body": "- Fix the pong frame converting to utf8.\n- Echo ping's data: http://tools.ietf.org/html/rfc6455#section-5.5.3.\n",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2013-11-29T14:31:42Z",
        "closed_at": "2013-12-09T16:02:53Z",
        "merged_at": null,
        "body": "Tried this out.\nWorked only when added \"listen\".\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2013-11-18T15:59:39Z",
        "closed_at": "2013-12-09T16:02:35Z",
        "merged_at": null,
        "body": "Now it`s possible to broadcast functions.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 60,
        "deletions": 6,
        "changed_files": 3,
        "created_at": "2013-11-15T08:33:13Z",
        "closed_at": "2013-11-15T12:01:16Z",
        "merged_at": "2013-11-15T12:01:16Z",
        "body": "Patch possible DOS attack vector\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 112,
        "deletions": 56,
        "changed_files": 3,
        "created_at": "2013-11-14T19:48:07Z",
        "closed_at": "2013-11-15T08:34:39Z",
        "merged_at": null,
        "body": "This is a fix for possible DOS attack vector of hogging all the memory in the system with incoming data.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2013-11-07T06:50:03Z",
        "closed_at": "2013-12-09T16:16:01Z",
        "merged_at": null,
        "body": "hi, guys\ni have a scene, like:\n\n```\nreturn callback('COOKIE_ERROR', false) unless some_cookie\n\nreturn callback('INVALID_USER', false) unless invalid_user_object\n\nreturn callback('TOKEN_EXPIRED', false) if token_expired\n```\n\nspecial handle by this error message.\n\nsuch modifications, alright?\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2013-10-31T05:53:50Z",
        "closed_at": "2014-09-03T20:07:48Z",
        "merged_at": null,
        "body": "We are using log4js-node for logging in our application.\n\n``` js\nvar log = log4js.getLogger('socket');\nlog.setLevel('ERROR');\n\nio.set('logger', log);\n```\n\nNow, when socket.io gets the logger, it overrides the logger settings. This breaks the log4js-node logger instance and results in an exception. This PR will prevent this and just return the logger which was set through io.set()\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2013-10-24T06:10:47Z",
        "closed_at": "2013-12-09T16:17:42Z",
        "merged_at": "2013-12-09T16:17:42Z",
        "body": "Without this fix, the following warning message will appear if security level is set very high in IE:\n\n\"Internet Explorer has modified this page to prevent Cross Site Scripting...\"\n\nThere was a fix to this problem, by adding \"X-XSS-Protection\" to headers when using jsonp-polling.\n\nhttps://github.com/ajaxorg/socket.io/commit/62f7335b5eddf0e3b41dc46a5c8d3f17e8324997\n\nHowever, jsonp-polling uses http-polling also when handling requests, so I needed to add similar fix to http-polling.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 109,
        "deletions": 10,
        "changed_files": 6,
        "created_at": "2013-10-17T08:19:46Z",
        "closed_at": "2013-12-09T16:04:04Z",
        "merged_at": null,
        "body": "- Redis Store was memory leaked.  \n  In https://github.com/LearnBoost/socket.io/tree/0.9  \n  So please merge this commit for the branch.  \n- Evidence:  \n  https://github.com/natsuki-yamanaka/socket.io-test2\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 62,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2013-10-16T05:58:55Z",
        "closed_at": "2014-09-03T20:07:33Z",
        "merged_at": null,
        "body": "At the time of the high load of redis, there is a case where pub/sub of handshake is overdue after connection. \nThis is a plan for preventing reduction of a connection rate. \n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2013-10-16T02:45:26Z",
        "closed_at": "2013-12-09T16:03:52Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2013-10-08T16:32:34Z",
        "closed_at": "2013-10-09T15:32:45Z",
        "merged_at": "2013-10-09T15:32:45Z",
        "body": "The onDisconnect(id, local) method is called without a [local] parameter.\n[message:id] and [disconnect:id] channels are not unsubscribed from redis.  Therefore, messageConsumers continues increasing and memory leak.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2013-09-27T22:41:22Z",
        "closed_at": "2014-09-03T20:07:33Z",
        "merged_at": null,
        "body": "Make the connection object reference available in handshake data so\nthat servers that need to authorize based on connection data (e.g.\nsource IP), to make decisions based on the client certificate etc, can\ndo so.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2013-09-12T02:13:33Z",
        "closed_at": "2013-12-09T16:27:02Z",
        "merged_at": "2013-12-09T16:27:02Z",
        "body": "A comma is used when there are three or more items in a series or when you are separating two or more independent clauses. [source](http://www.getitwriteonline.com/archive/020204whencommabfand.htm)\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2013-09-06T17:53:58Z",
        "closed_at": "2014-09-03T20:07:33Z",
        "merged_at": null,
        "body": "updating namespace.js similar to socket.io-client/dist/socket.io.js such that it clears the acks object after running the ack function... prevents memory leak.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 649,
        "changed_files": 1,
        "created_at": "2013-08-29T19:09:44Z",
        "closed_at": "2013-12-09T16:16:23Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2013-08-27T11:52:40Z",
        "closed_at": "2014-09-03T20:07:33Z",
        "merged_at": null,
        "body": "fix LearnBoost/socket.io#1304\n\nPart of the solution to karma-runner/karma#705\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2013-08-21T17:01:35Z",
        "closed_at": "2014-09-03T20:07:33Z",
        "merged_at": null,
        "body": "I am a bot.  I add repository fields to package.json files because they're super useful for npm.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2013-08-09T14:52:42Z",
        "closed_at": "2014-09-03T20:07:33Z",
        "merged_at": null,
        "body": "I wasn't able to run tests, continue on working on this. But meanwhile, here is my changes...\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2013-08-08T13:24:53Z",
        "closed_at": "2014-09-03T20:07:33Z",
        "merged_at": null,
        "body": "Hi,\n\nI was struggling to manage the namespace client disconnection in the application that we are working. \nI realised that when the client disconnect from a namespace, after if I tried to connect again to the same namespace, it didn't receive the messages from the server, at least if the client reconnected the socket to the same namespace some seconds after he had disconnected it.\n\nAfter debugging the code for awhile, I found this fix.\n\nThis pull request corresponds to another pull request to socket.io-client that I've done: [#568](https://github.com/LearnBoost/socket.io-client/issues/568)\n\nBy the way, I also realised that if I would like to manage a disconnection to a namespace, emitted by the client I have to listen the 'disconnect' event and manage the first call checking if the message is 'packet' and in that case call the method 'disconnect()' from the socket; next the piece of code  to do that:\n\n``` js\nvar io = require('socket.io').listen(80);\nvar chat = io\n    .of('/chat')\n    .on('connection', function (socket) {\n        socket.on('disconnect', function (msg) {\n            if (msg === 'packet') {\n                socket.disconnect();\n            }\n        });\n    });\n```\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 53,
        "deletions": 48,
        "changed_files": 2,
        "created_at": "2013-06-14T08:00:25Z",
        "closed_at": "2014-09-03T20:07:33Z",
        "merged_at": null,
        "body": "similar issue : #1133\n- Improve the performance of subscribe/unsubscribe/message event logic. (redis.js)\n- Remove duplicates clearHandlers call. (transport.js)\n\nI operate the system which have lots of simultaneous connections. (frequent reconnection)\nAs time passed, The performance and reliability drops dramatically.\n\nI applied the changed code and the performance and reliability was dramatically improved.\n\nIf it was helpful to the other person, it will be good.\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2013-05-24T05:43:26Z",
        "closed_at": "2013-12-09T16:29:09Z",
        "merged_at": null,
        "body": "Make adding headers to 304 response for static objects. Browsers want know expires date for not modified objects too.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 164,
        "deletions": 634,
        "changed_files": 15,
        "created_at": "2013-04-22T15:20:37Z",
        "closed_at": "2014-09-03T20:07:33Z",
        "merged_at": null,
        "body": "Redis Store's MessagePack implementation does not work correctly.\nMessagepack#unpack expects buffers as an argument. So, before unpack, input value should be converted to Buffer Object. And, pack's return value must be a String encoded with binary, not SlowBuffer object.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2013-04-19T02:46:03Z",
        "closed_at": "2013-12-09T16:16:38Z",
        "merged_at": "2013-12-09T16:16:38Z",
        "body": "Also stringified the versions as they should be, as it is a yaml file so `0.10` becomes `0.1`, so for versions we should use strings - `\"0.10\"` stays `0.10`\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2013-04-15T17:33:22Z",
        "closed_at": "2014-09-03T20:07:33Z",
        "merged_at": null,
        "body": "Live examples by Runnable.com. Developers find runnable examples useful to learn and test API/library features.\n\nWe're also on your other repo -\nhttps://github.com/LearnBoost/mongoose\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 15,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2013-04-14T14:07:48Z",
        "closed_at": "2014-02-04T01:23:37Z",
        "merged_at": null,
        "body": "fixes #1213\n\nI'll send a pull request anyway, though don't know whether this is a acceptable way to fix the problem. \n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2013-04-03T15:08:10Z",
        "closed_at": "2014-09-03T20:07:33Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2013-03-27T08:07:38Z",
        "closed_at": "2014-09-03T20:07:33Z",
        "merged_at": null,
        "body": "NPM spec allows for the socket.io license in the package.json. For completeness, I added it in :)\n\nhttps://npmjs.org/doc/json.html\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2013-03-16T11:37:51Z",
        "closed_at": "2014-09-03T20:07:33Z",
        "merged_at": null,
        "body": "i'm using chrome and can't scroll inside the example boxes on the website. the \"client\" example for the \"acknowledgements\" section contains a few comments, but unfortunately, they're cut off.\n\n![socket-example](https://f.cloud.github.com/assets/71851/266712/9cd3771e-8e2d-11e2-8f83-a4a502286ab3.png)\n\nso i would suggest to either pull this simple fix or place the comments inside the box.\n\nthanks for this awesome library!\n\ncheers,\ndaniel\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2013-03-14T23:10:25Z",
        "closed_at": "2013-03-19T23:35:17Z",
        "merged_at": "2013-03-19T23:35:17Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2013-03-04T11:25:20Z",
        "closed_at": "2013-12-09T16:04:36Z",
        "merged_at": null,
        "body": "Add dependencies status badge.\nMore info on badges:\u00a0https://github.com/olivierlacan/shields\nThanks\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2013-02-27T15:56:54Z",
        "closed_at": "2013-03-30T10:27:25Z",
        "merged_at": null,
        "body": "",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2013-02-18T17:47:06Z",
        "closed_at": "2013-02-27T14:44:26Z",
        "merged_at": null,
        "body": "If the socket is destroyed, node.js from 0.8.20 version will raise an error here.\n",
        "comments": 14
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2013-01-25T00:12:36Z",
        "closed_at": "2013-01-25T04:44:37Z",
        "merged_at": null,
        "body": "- Admittedly undertested.  This issues also affects early revs of socket.io.  The 'ws' library also exhibits this behavior and a pull request has been created for that lib.  \n\nSee: https://github.com/jmatthewsr-ms/node-slab-memory-issues\n",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 35,
        "deletions": 15,
        "changed_files": 3,
        "created_at": "2013-01-15T03:00:56Z",
        "closed_at": "2014-09-03T20:07:33Z",
        "merged_at": null,
        "body": "Hi.  I made this patch that significantly improves the number of connections socket.io can handle with the redis store before falling over (on my machine, from about 3000 to about 8000).     My understanding of the internals isn't thorough enough to really know if this breaks anything, but from some quick tests with two servers and using the publish/subscribe mechanism it seems to be ok.  If you see any issues with it, let me know and I'll redo it.\n",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 6403,
        "deletions": 1715,
        "changed_files": 40,
        "created_at": "2012-12-28T16:16:48Z",
        "closed_at": "2014-09-03T20:07:33Z",
        "merged_at": null,
        "body": "I fixed this earlier but indentation was messed up... Hopefully this is more suitable.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2012-12-21T02:45:23Z",
        "closed_at": "2013-12-09T16:04:46Z",
        "merged_at": null,
        "body": "Updated redis dependency to a working version of it. Also fixes missing ws dependency.\n",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2012-12-13T11:00:56Z",
        "closed_at": "2012-12-13T18:16:18Z",
        "merged_at": null,
        "body": "Listeners now returned as a clone rather than the array itself, so splice does not clear the listeners anymore. Use removeAllListeners(...) instead.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2012-12-13T08:53:34Z",
        "closed_at": "2012-12-13T11:19:23Z",
        "merged_at": null,
        "body": "The 'oldListeners' stored in Manager will be called duplicately by the server because the listeners are not removed from server. It causes the error of resetting http header.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2012-12-13T04:13:21Z",
        "closed_at": "2012-12-13T13:29:50Z",
        "merged_at": null,
        "body": "I'm not sure when this changed in node exactly but in the most current master branch (0.9.4) server.listeners returns a copy of the list and not the real thing, so calling splice on it does not remove the old listeners.  This causes the original 'default response' handler to run before any of the real ones, which of course breaks everything.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2012-12-10T00:16:28Z",
        "closed_at": "2013-12-09T16:05:36Z",
        "merged_at": "2013-12-09T16:05:36Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 98,
        "deletions": 31,
        "changed_files": 3,
        "created_at": "2012-12-03T18:29:18Z",
        "closed_at": "2013-12-09T16:06:07Z",
        "merged_at": null,
        "body": "simplify everything for simple single page facebook apps.\nalso fixed gzip pass the ci\n\n```\nvar app=express();\nvar  server = require('http').createServer(app);\nvar io = sio.listen(server);\nserver.listen(80); \n\nvar  serverssl = require('https').createServer(ssloptions,app);\n\nio.addServer(serverssl);  //also listen to events of serverssl\n\nserverssl.listen(443);\n```\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 98,
        "deletions": 31,
        "changed_files": 3,
        "created_at": "2012-12-03T10:40:37Z",
        "closed_at": "2012-12-03T18:26:41Z",
        "merged_at": null,
        "body": "simplify everything for simple single page facebook apps\n\n```\nvar app=express();\nvar  server = require('http').createServer(app);\nvar io = sio.listen(server);\nserver.listen(80); \n\nvar  serverssl = require('https').createServer(ssloptions,app);\n\nio.addServer(serverssl);  //also listen to events of serverssl\n\nserverssl.listen(443);\n```\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2012-11-30T14:20:14Z",
        "closed_at": "2014-09-03T20:07:33Z",
        "merged_at": null,
        "body": "https://github.com/LearnBoost/socket.io/issues/1093#issuecomment-10887604\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2012-11-30T12:35:00Z",
        "closed_at": "2014-09-03T20:07:33Z",
        "merged_at": null,
        "body": "delete called ack\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2012-11-28T15:16:36Z",
        "closed_at": "2012-12-28T16:12:42Z",
        "merged_at": null,
        "body": "This error (issue #438) appeared to come up while using some browsers (the operating system on which the socket.io server was running may also have been a factor).\n\nIt seems that emitting the handshake event on the store before ending the handshake request takes care of this issue... I tested it several times and I didn't encounter any handshake errors.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2012-11-12T13:29:30Z",
        "closed_at": "2012-11-28T04:45:46Z",
        "merged_at": "2012-11-28T04:45:46Z",
        "body": "When using RedisStore and clustering processes Redis leaks pubsub channels. This leads to high CPU especially over time as more and more channels leak. When using xhr-polling and clustering processes `message` and `disconnect` channels are not unsubscribed correctly. Websocket connections correctly unsubscribe from the message and disconnect channels. \n\nThis commit reverted passing the local flag through to `Manager.prototype.onClientDisconnect` and subsequently `Manager.prototype.onClientDisconnect`, but this is required to handled unsubscribing. \n\nhttps://github.com/Learnboost/socket.io/commit/94d513c85a960f2a041e9027cee09cc87b89edf6\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2012-11-10T22:50:26Z",
        "closed_at": "2014-09-03T20:07:33Z",
        "merged_at": null,
        "body": "This is because in Node 0.9.x, when there is only one `request`, `server._event.request` stores just that handler instead of an array, and so `.splice()` will not remove the handler.\n\nSince `.removeAllListeners()` is a documented API, it works across Node.js versions.\n\nThis bug manifests as \"Can't set headers after they are sent\" similar to: https://github.com/visionmedia/express/issues/1265\n\nTested on OSX with node 0.8.14 and node 0.9.3.\n\nMinimal test case (crashes on node 0.9.3 on first GET):\n\n``` js\nvar app = require('express')()\n  , http = require('http')\n  , server = http.createServer(app)\n  , io = require('socket.io').listen(server);\nserver.listen(3000);\n```\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2012-11-10T01:52:44Z",
        "closed_at": "2012-12-11T17:42:24Z",
        "merged_at": "2012-12-11T17:42:24Z",
        "body": "Debug log level always prints \"authorized\", because the original expression is parsed as\n\n``` javascript\n('client ' + authorized) ? 'authorized' : 'unauthorized';\n```\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2012-11-01T21:46:00Z",
        "closed_at": "2013-12-09T16:28:03Z",
        "merged_at": null,
        "body": "I needed to know if a socket is subscribed to a room, and i added the method to the Socket prototype\nIt can be used like this\n\n```\nsocket.inRoom(\"some room\"); // => false\nsocket.join(\"some room\");\nsocket.inRoom(\"some room\"); // => true\n```\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2012-11-01T17:38:45Z",
        "closed_at": "2014-09-03T20:07:33Z",
        "merged_at": null,
        "body": "Since `msgpack.unpack` expects buffers, this flag should be set for the\nuser in cases where MessagePack has been automatically selected for\nserialization.\n\nThe implementation is a bit verbose, but I think this is unavoidable. The API allows for options like `redisPub` to specify an instance of the `node-redis` client _or_ options with which to initialize a new client.\n\nThis should be added to [the wiki page on configuring socket.io](https://github.com/LearnBoost/Socket.IO/wiki/Configuring-Socket.IO) so that users who want to manually instantiate `node-redis` clients learn how to do so correctly. I'm happy to make this change as well.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2012-10-31T07:50:06Z",
        "closed_at": "2012-11-03T18:00:22Z",
        "merged_at": "2012-11-03T18:00:22Z",
        "body": "I hate it when someone loves his Mac\nand thinks people all have Macs. ;)\n\n``` css\nfont-family: Monaco;\n```\n\n![Your webpage on Windows](http://i.imgur.com/WVgsC.png)\n\nshould be changed to:\n\n``` css\nfont-family: Monaco, 'Ubuntu Mono', Inconsolata, Courier, monospace;\n```\n\nPD: Personally, I'd prefer to not discrimitate others and put a webfont _first_,\n(such as [`Ubuntu Mono`](http://code.google.com/webfonts/specimen/Ubuntu+Mono)) so that all platforms apply the **same** font (wether Mac or not).\n\n**Note:** the Travis CI build failing doesn't have anything to do with this pull request.\nOnly the `gh-pages` branch is being updated (1 line changed).\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 20,
        "deletions": 18,
        "changed_files": 1,
        "created_at": "2012-10-30T00:09:11Z",
        "closed_at": "2014-09-03T20:07:33Z",
        "merged_at": null,
        "body": "We've been trying to deploy Socket.IO in production, but have been having a hard time keeping it up for more than a couple hours due to ballooning memory usage. Looking at a heap dump showed that `manager.handshaken` was not getting cleared out. I put in some logging and found that other nodes were never getting notified of disconnects, and thus not clearing out their handshake data. I added another couple of publish calls in `onDisconnect` within the `if (local)` block to let other nodes know of the disconnects.\n\nI also found that while in manager.js, `onDisconnect` has an argument `local`, it is actually `onClientDisconnect` that gets called with the local flag in transport.js. Consequently handlers were also never getting removed from the store. I added the flag to `onClientDisconnect` and pass it on to `onDisconnect`.\n\nWith some more logging, I found that some keys still weren't getting cleared out of transport, closed, and open (usually left with an empty array). So I added an additional routine to garbageCollection to loop through those and clear out any keys that weren't in `handshaken`.\n\nThese changes have kept memory usage from climbing so quickly, though it still continues to climb slowly (not sure where else to look at this point). CPU usage using RedisStore is the larger problem for us right now.\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2012-10-28T00:20:42Z",
        "closed_at": "2012-10-28T01:24:33Z",
        "merged_at": "2012-10-28T01:24:33Z",
        "body": "Socket session is not removed from child processes (in cluster) when a client disconnects from one of the processes with memory increasing linearly.\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2012-10-18T19:17:05Z",
        "closed_at": "2014-09-03T20:07:33Z",
        "merged_at": null,
        "body": "This patch fixes a problem where the data may come through containing \\ufffd when it isn't used as a packet boundary. I saw this when using node-phantom with the epost.ca web site.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 50,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2012-09-24T14:43:19Z",
        "closed_at": "2014-09-03T20:07:33Z",
        "merged_at": null,
        "body": "This addresses #619, and is based on an earlier pull request by @coolbloke1324, https://github.com/LearnBoost/socket.io/pull/624.\n\nThe issue here is to do with what happens when a naive HTTP request comes in that looks like a socket.io URI, and uses the ID of an existing transport, but does not contain an upgrade header. Due to some ISP nastiness noted in the issue thread a few of us are seeing this happening and it's killing our sockets. You can replicate the problem by firing up a server/client and exchanging a few packets via WS, then from a different IP requesting the socket URI, e.g.:\n\n```\n$ curl -v example.org/socket.io/1/websocket/Ot1dfZBv669zk_3Iqgng\n```\n\nUsing the current master, you'll see:\n\n```\ndebug - setting request GET /socket.io/1/websocket/Ot1dfZBv669zk_3Iqgng\ndebug - set heartbeat interval for client Ot1dfZBv669zk_3Iqgng\nwarn  - websocket connection invalid\ninfo  - transport end (undefined)\n```\n\nWhich is pretty much right ([here's the line](https://github.com/LearnBoost/socket.io/blob/master/lib/transports/websocket/default.js#L86) responsible).\n\nStill, in practise it seems like in most cases we don't want requests coming from some random third party IP addresses to be able to close legitimate connections. This pull adds a setting to make socket.io 403 on requests like this and leave the transport untouched.\n",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 9,
        "changed_files": 5,
        "created_at": "2012-09-21T17:45:32Z",
        "closed_at": "2013-09-17T18:03:34Z",
        "merged_at": null,
        "body": "Added cache-control headers to each GET and POST request to instruct the browser to NOT cache these requests.\n\nSee for the related information:\nhttp://stackoverflow.com/questions/12506897/is-ios6-safari-caching-ajax-results\n\nIn addition to that I removed some pointless semicolons and added missing semicolons.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2012-09-15T01:50:42Z",
        "closed_at": "2012-09-15T20:46:04Z",
        "merged_at": "2012-09-15T20:46:04Z",
        "body": "This was causing mocha tests to fail in our express app\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2012-09-08T07:55:05Z",
        "closed_at": "2014-09-03T20:07:32Z",
        "merged_at": null,
        "body": "It will be nice to return error details when handshake failed, especially when using custom authorization mecanism.\nOtherwise, it's impossible for clients to understand why handshake failed: unknown account, wrong password, expired credentials...\n\nThank you !\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2012-09-07T13:44:38Z",
        "closed_at": "2012-09-07T20:38:36Z",
        "merged_at": "2012-09-07T20:38:36Z",
        "body": "I moved the redis module from the `package.json` to the `devDependencies` as it's not needed to run socket.io. There are people who have failed installations because they cannot get the redis module installed because it depends on the hiredis module.\n\nIf people still want to use the redis store that we ship inside of Socket.IO they can stil use it by adding redis to their own package.json.\n\nIf you feel that this move might be a bit overkill we could also consider lazy installing the module. For example using 3rd-Eden/canihaz so users don't have to manually install redis, but we can do it programmatically for them.\n\nSee #1003 #603  and it will so prevent issues like: #929  #752\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 25,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2012-09-05T04:09:48Z",
        "closed_at": "2014-09-03T20:07:32Z",
        "merged_at": null,
        "body": "Hey there,\n\nI've added a configurable option to the logger to allow for human-readable timestamps to be output to the socket.io log.\n\nIt's really helped us when debugging problems with our app so I thought it was something that others could use as well.\n\nI've defaulted timestamps to be off initially unless you set 'log timestamps' to be true.\n\nI was going to write a test for this but couldn't think of one that wasn't brittle, i.e. I wanted to look for indexOf the current Year in the data of the console output but even that _could_ break at the end of the year. Probably a stupid thing to worry about though so if you want me to add a test or have an idea on how I can test for it better please let me know.\n\nCheers,\nGanesh\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2012-08-31T06:38:16Z",
        "closed_at": "2014-09-03T20:07:32Z",
        "merged_at": null,
        "body": "removed a semicolon that is misspelled on.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 26,
        "changed_files": 2,
        "created_at": "2012-08-28T10:26:43Z",
        "closed_at": "2012-09-10T22:06:40Z",
        "merged_at": "2012-09-10T22:06:40Z",
        "body": "As mentioned in https://github.com/LearnBoost/socket.io/issues/934, generateId contains a sync call to crypto.randomBytes. To try to minimize the impact of this, I've added a new function called getRandomBytes that gets bytes in chunks using async calls and keeps them in a buffer to deliver when needed, graciously falling back to the sync call only when the buffer is temporarily empty. This result in a significant decrease in blocking calls compared to the current implementation.\n\nI tried making 100k calls to this.getRandomBytes(16) (one per process.nextTick()), and out of these only about 3k fell through to the sync crypto.randomBytes(), while the rest were delivered from the buffer.\n\nThe average return time of this.getRandomBytes(16) is roughly 0.00100, compared to a crypto.randomBytes(16) call which clocks in at an average of about 0.00600.\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2012-08-06T17:23:50Z",
        "closed_at": "2014-09-03T20:07:16Z",
        "merged_at": null,
        "body": "No one will actually view the socket.io.js in browser. \nSo it makes sense to send a minified version to the browser. Also, This will improves the response time.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 24,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2012-08-06T13:20:44Z",
        "closed_at": "2012-08-06T15:59:18Z",
        "merged_at": "2012-08-06T15:59:18Z",
        "body": "The \"flash policy server\" configuration directive was ignored. Added code to disable the flash policy server if requested, and also to shut down/start up the server if the directive changes.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2012-08-06T13:19:22Z",
        "closed_at": "2012-08-06T15:58:57Z",
        "merged_at": "2012-08-06T15:58:57Z",
        "body": "The this.response member in the HTTP transport class is only set if the request is a GET. This seems to be because it expects a POST to never return anything to the client. However, in case of error (e.g. JSON parse error), an error message is sent to the client. If the response member is not set, it causes a hard crash when the response body is written.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2012-08-06T01:43:49Z",
        "closed_at": "2012-08-22T01:23:41Z",
        "merged_at": null,
        "body": "In JSON, there are lots of unavoidable double-quotes: For strings, and for the\nobject keys. Looking at a htmlfile stream you'll find many double quote escapes.\n\nExample:\n\n`<script>_(\"5:::{\\\"name\\\":\\\"update\\\",\\\"args\\\":[{\\\"abcd\\\":{\\\"GBP8\\\":9445,\\\"GBV8\\\":904,\\\"s\\\":1}}]}\");</script>`\n\nIf we used a single quote at the outer level though, we wouldn't need to escape\nthe double quotes,\u00a0only the - much less used in JSON - single quotes.\n\nThe example above would thus turn into:\n\n`<script>_(\"5:::{\"name\":\"update\",\"args\":[{\"abcd\":{\"GBP8\":9445,\"GBV8\":904,\"s\":1}}]}\");</script>`\n\n**Nicer to look at**, and consumes **fewer bytes**. Encoding should also be\n**faster**, but haven't actually timed `replace` against `JSON.stringify`. IE - the\nbrowser htmlfile is targeted at - is fine with single-quotes, as it's legal\nJavaScript, and socket.io-spec does not specify that, so I think it would be OK\nto change\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2012-07-31T12:36:53Z",
        "closed_at": "2012-07-31T15:34:24Z",
        "merged_at": "2012-07-31T15:34:23Z",
        "body": "this fixes issue #961, I just figured I would open it as pull request so it doesn't drown in the comments there\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 171,
        "deletions": 1629,
        "changed_files": 7,
        "created_at": "2012-07-31T04:54:31Z",
        "closed_at": "2012-08-09T01:05:51Z",
        "merged_at": null,
        "body": "Lowercasing log messages is unnecessary. \u00a0It makes some messages difficult to\nread, and others difficult to search for.\n",
        "comments": 15
    },
    {
        "merged": true,
        "additions": 19,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2012-07-30T18:53:59Z",
        "closed_at": "2012-08-10T17:17:55Z",
        "merged_at": "2012-08-10T17:17:55Z",
        "body": "Since on Express 3.x `.createServer()` is deprecated and `express()` does not return an `http.Server` instance, people are likely to hit the `.listen()` warning when migrating. We should probably add the proper 3.x way to the readme.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 22,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2012-07-30T18:15:26Z",
        "closed_at": "2012-07-31T15:32:08Z",
        "merged_at": "2012-07-31T15:32:08Z",
        "body": "Putting license text in its own LICENSE file.\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2012-07-29T13:54:59Z",
        "closed_at": "2014-09-03T20:07:16Z",
        "merged_at": null,
        "body": "This enables Socket.io to accept connections on a specific hostname only.\n\nI realize that it's possible to have this functionality by passing an `http.Server` to `listen()`, but this provides a much obvious and seamless API. I've heard of a few people that run monkey-patched versions of Socket.io just for this functionality. \n\nThis fixes Issue #675.\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2012-07-27T02:23:32Z",
        "closed_at": "2012-07-27T17:06:04Z",
        "merged_at": "2012-07-27T17:06:04Z",
        "body": "If using xhr-polling and a browser closes a tab or window, the\ndisconnectSync in the socket.io-client method is called which sends an\nXHR request to the server indicating a disconnect. This line would cause\nthat to be ignored and so the server would have to wait for a timeout to\nmark them as disconnect. This was possibly because it was sent from a\ndifferent tcp socket than the current connection.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2012-07-26T08:08:38Z",
        "closed_at": "2013-01-25T01:29:57Z",
        "merged_at": null,
        "body": "self.log.debug('client ' + authorized ? 'authorized' : 'unauthorized');\n\nThis line of code always print 'client authorized'. The conditional operator should be wrapped by braces.\n\nWhen the 'authorized' is 'true' that statement becomes, \n- 'client true' ? 'authorized' : 'unauthorized'\n  And when it is 'false',\n- 'client false' ? 'authorized' : 'unauthorized'\n\nThanks.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 20,
        "deletions": 10,
        "changed_files": 1,
        "created_at": "2012-07-21T17:31:47Z",
        "closed_at": "2012-07-21T18:44:28Z",
        "merged_at": "2012-07-21T18:44:28Z",
        "body": "For more information on safe usage of for..in, please see:\n  http://yuiblog.com/blog/2006/09/26/for-in-intrigue/\n",
        "comments": 21
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2012-07-04T09:19:05Z",
        "closed_at": "2012-07-04T15:42:41Z",
        "merged_at": null,
        "body": "Express 3.x branch is now default so the express instructions are no longer accurate\n\n\"For this example, simply run `npm install socket.io express`\"\n\nShould close #843\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 24,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2012-07-02T21:11:19Z",
        "closed_at": "2012-08-06T13:11:29Z",
        "merged_at": null,
        "body": "At the moment the flashsocket transport ignores changes to the \"flash policy server\" configuration directive. Added code in the create() function that will refuse to create one no matter where it is called from. Also added a handler for if the user changes the configuration option at runtimes.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2012-06-26T02:30:40Z",
        "closed_at": "2012-06-26T13:29:09Z",
        "merged_at": "2012-06-26T13:29:09Z",
        "body": "Update redis to 0.7.2 to support Node 0.8.x\n",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2012-06-24T12:44:28Z",
        "closed_at": "2014-09-03T20:07:16Z",
        "merged_at": null,
        "body": "RedisClient is using the default database (= 0).\nI would like to use any database, has been changed to enable it.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2012-06-23T04:38:23Z",
        "closed_at": "2014-09-03T20:07:16Z",
        "merged_at": null,
        "body": "If a room is used to group clients together to receive a particular set of subscriptions from a publisher, knowing when to subscribe/unsubscribe is crucial since there's no point in relaying data to an empty room. This would allow for event handlers to subscribe dynamically in a pub-sub pattern. \n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 90,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2012-06-16T10:40:07Z",
        "closed_at": "2013-11-11T17:44:49Z",
        "merged_at": null,
        "body": "fixes #921\n\nIn the handleRequest method the data is of type Buffer (not string), and gets corrupted when the data is split in several parts.\n\nAdded test cases at the end of of xhr polling tests.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 15,
        "deletions": 9,
        "changed_files": 1,
        "created_at": "2012-05-19T14:09:49Z",
        "closed_at": "2012-11-05T14:35:14Z",
        "merged_at": null,
        "body": "update example code for storing data.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 279,
        "deletions": 14,
        "changed_files": 6,
        "created_at": "2012-05-16T20:10:22Z",
        "closed_at": "2014-09-03T20:07:16Z",
        "merged_at": null,
        "body": "Issue #886 describes the problem.  In short: socket.IO has a vulnerability whereby websocket clients can send an arbitrary amount of data that is buffered by the server until it runs out of memory.  This pull request adds the length constraints for the websockets transport based on the value of 'destroy buffer size'.\n",
        "comments": 20
    },
    {
        "merged": false,
        "additions": 50,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2012-05-16T14:30:08Z",
        "closed_at": "2014-09-03T20:07:16Z",
        "merged_at": null,
        "body": "Allow storing and retrieving various JSON'able types in Redis store (arrays, objects, booleans, null).\nUndefined will be returned as null, since JSON spec does not support this type.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2012-05-13T08:56:06Z",
        "closed_at": "2013-01-21T00:13:02Z",
        "merged_at": null,
        "body": "README update about where the socket.io.js client-side file comes from.  Not sure this is the best explanation, but it might help someone.\n",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 10,
        "changed_files": 1,
        "created_at": "2012-05-13T05:18:40Z",
        "closed_at": "2014-09-03T20:07:16Z",
        "merged_at": null,
        "body": "...ause of an error in transport at /transport.js:498:8\n\n12 May 23:49:43 - Uncaught exception: TypeError: Cannot call method 'writeHead' of undefined\ndata:   TypeError: Cannot call method 'writeHead' of undefined\ndata:       at JSONPPolling.doWrite (/home/node/node_modules/socket.io/lib/transports/jsonp-polling.js:89:17)\ndata:       at JSONPPolling.write (/home/node/node_modules/socket.io/lib/transports/http-polling.js:132:8)\ndata:       at JSONPPolling.packet (/home/node/node_modules/socket.io/lib/transport.js:515:15)\ndata:       at JSONPPolling.error (/home/node/node_modules/socket.io/lib/transport.js:498:8)\ndata:       at JSONPPolling.onData (/home/node/node_modules/socket.io/lib/transports/jsonp-polling.js:70:7)\ndata:       at IncomingMessage.<anonymous> (/home/node/node_modules/socket.io/lib/transports/http.js:65:12)\ndata:       at IncomingMessage.emit (events.js:64:17)\ndata:       at HTTPParser.parserOnMessageComplete [as onMessageComplete](http.js:127:21)\ndata:       at Socket.ondata (http.js:1468:22)\ndata:       at TCP.onread (net.js:374:27)\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2012-05-09T04:36:00Z",
        "closed_at": "2014-09-03T20:07:16Z",
        "merged_at": null,
        "body": "Simple enough of a fix :)\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 375,
        "deletions": 274,
        "changed_files": 9,
        "created_at": "2012-05-09T03:48:08Z",
        "closed_at": "2014-01-25T20:53:44Z",
        "merged_at": null,
        "body": "I have started using the same test client you use for your tests in some of mine - it is extremely worthwhile not having to rewrite all those abstractions.  I am, unfortunately, not using the should testing framework, so simply requiring common.js was somewhat troublesome.\n\nThis patch merely pulls out the base functionality without breaking the tests for socket.io.\n\nPlease tell me if you want me to do any refactoring.  Thanks!\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 16,
        "changed_files": 5,
        "created_at": "2012-05-09T03:22:14Z",
        "closed_at": "2012-09-09T18:55:02Z",
        "merged_at": null,
        "body": "Hey, I've been working on updating some of my code to work with the current unstable branch of node.  It looks like they have decided to change the sys library deprecation warning to an outright error.\n\nThe changes herein will work with at least node v0.7.4, but a couple additional tests break with v0.7.8, so I left it at this.\n\nI just figured I would forward this along in case it can help you get a head start with getting ready for the next node release.  Please drop me a line if you would like me to make any additional changes to this pull request.\n\nThanks!\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2012-05-06T02:10:20Z",
        "closed_at": "2014-09-03T20:07:16Z",
        "merged_at": null,
        "body": "In example of \"Storing data associated to a client\", the client side code is nothing about this function, and I wrote a client code for it.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2012-05-03T02:17:40Z",
        "closed_at": "2012-05-03T13:24:15Z",
        "merged_at": "2012-05-03T13:24:15Z",
        "body": "Changed to 'prompt' so they can insert their names. Otherwise just sets true on the server\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2012-05-01T00:33:00Z",
        "closed_at": "2014-09-03T20:07:16Z",
        "merged_at": null,
        "body": "I confirmed that blank nicknames are allowed. JSON.stringify(nicknames) gives {'':''}\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2012-04-28T09:55:49Z",
        "closed_at": "2014-09-03T20:07:15Z",
        "merged_at": null,
        "body": "Based on your spec Socket.io supports params on namespace connect. Example in spec: \n1::/test?my=param\n\nBased on your tests, this seems to be wrong. Instead it should be:\n1::/test:?my=param\n\nBoth versions are not supported right now. To support 1::/test:?my=param (version 2), server and client has to be updated. A (working) suggestion for the server-side fix shows this pull-request. After connect, handshakeData would look like:\n\n``` javascript\n{ headers: { host: '127.0.0.1' },\n  address: { address: '127.0.0.1', port: 63265 },\n  time: 'Sat Apr 28 2012 11:53:19 GMT+0200 (Mitteleurop\u00e4ische Sommerzeit)',\n  query: { handshakeParam: '1', '/private': { my: 'param' } },\n  url: '/socket.io/1?handshakeParam=1',\n  xdomain: false,\n  secure: undefined }\n```\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 137,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2012-04-26T23:29:27Z",
        "closed_at": "2014-09-03T20:07:15Z",
        "merged_at": null,
        "body": "I want control over session IDs (see #497), but I don't need to give that control to the client.  This enables both options.\n\nIn my example, I am embedding application state in the session ID so that I can forward messages to back end processing without maintaining additional mappings.\n\nI've also added the ability to get the handshake data through to the ID generator and for the authorize method to add to or override the handshake data.  This was obviously intended originally, but never quite connected up (repeated use of ``newData || handshakeData'').  This handshake data can be seen by the ID generator as well in order to advise in its processing.\n\nA few more tests added to cover these capabilities.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 43,
        "deletions": 3,
        "changed_files": 4,
        "created_at": "2012-04-26T17:40:09Z",
        "closed_at": "2014-09-03T20:07:15Z",
        "merged_at": null,
        "body": "Adding a small delay on connection close after client disconnect seems to fix Issue #854.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2012-04-24T14:17:45Z",
        "closed_at": "2014-09-03T20:07:15Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2012-04-24T07:07:50Z",
        "closed_at": "2014-09-03T20:07:15Z",
        "merged_at": null,
        "body": "Whether handshake is authorized or not, console always show \"debug -\nauthorized\"\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2012-04-21T22:57:59Z",
        "closed_at": "2014-09-03T20:07:15Z",
        "merged_at": null,
        "body": "When a client is refreshing their window while connected, and then leaving a room, it crashes the server since their session id is no longer in the roomClients array.\n\nI am sharing code between leaving rooms explicitly and implicitly. Refreshing the window, the disconnect event gets fired after the user is in the roomClients array.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2012-04-11T19:41:15Z",
        "closed_at": "2012-04-11T22:02:51Z",
        "merged_at": "2012-04-11T22:02:51Z",
        "body": "...instead of UNDEFINED (which would throw an error on the origin.match(/^https/) below\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2012-04-11T19:41:10Z",
        "closed_at": "2014-09-03T20:07:15Z",
        "merged_at": null,
        "body": "...instead of UNDEFINED (which would throw an error on the origin.match(/^https/) below\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2012-04-11T19:40:31Z",
        "closed_at": "2014-09-03T20:07:15Z",
        "merged_at": null,
        "body": "...instead of UNDEFINED (which would throw an error on the origin.match(/^https/) below\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 54,
        "deletions": 7,
        "changed_files": 2,
        "created_at": "2012-03-28T19:54:53Z",
        "closed_at": "2014-09-03T20:07:15Z",
        "merged_at": null,
        "body": "See issue #796 for additional information.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 22,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2012-03-14T18:36:04Z",
        "closed_at": "2014-09-03T20:07:15Z",
        "merged_at": null,
        "body": "Hello, my enterprise is making a single page application and we build a structure that need a event middleware to authorization, we can't use that authorization already developed because that functionality is called once on handshake.\nSo this implementation and pull request is to fix the issue #735 that is opened in the moment.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2012-03-13T10:07:13Z",
        "closed_at": "2012-03-13T13:50:12Z",
        "merged_at": null,
        "body": "issues #780 #777\nFrom some commint be changed 'heartbeat interval'\nNow 'heartbeat interval' equal 'close timeout' (eq 25) and this not correct, because if we not have some activity after 25 sec, socket-io-client close connection.\nWe can change 'heartbeat interval' to do 'ping pong' faster or change 'close timeout'\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2012-03-01T10:35:07Z",
        "closed_at": "2014-09-03T20:07:15Z",
        "merged_at": null,
        "body": "Little fix for example/chat\n- Don't send empty message\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2012-02-21T20:13:25Z",
        "closed_at": "2013-12-09T16:37:04Z",
        "merged_at": null,
        "body": "Replaced ugly:\n\n```\n  var regexp = /^\\/([^\\/]+)\\/?([^\\/]+)?\\/?([^\\/]+)?\\/?$/\n```\n\nwith a simple `split('/')`, this is easier to understand, and much faster. Also replaced the \"string\" case matching  of the '/socket.io' resource via `substr` with a simpler and faster call to `indexOf` ...\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2012-02-09T16:19:29Z",
        "closed_at": "2012-02-09T17:38:03Z",
        "merged_at": "2012-02-09T17:38:03Z",
        "body": "We need this because we have to prefix the socket.io URL with a variable\nID.\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 84,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2012-01-28T02:33:00Z",
        "closed_at": "2013-12-09T16:31:15Z",
        "merged_at": null,
        "body": "",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 168,
        "deletions": 1778,
        "changed_files": 10,
        "created_at": "2012-01-26T04:33:36Z",
        "closed_at": "2013-12-09T16:37:01Z",
        "merged_at": null,
        "body": "Now uses 'ws' instead.\n\nCommence testing.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 88,
        "deletions": 18,
        "changed_files": 2,
        "created_at": "2012-01-25T21:44:17Z",
        "closed_at": "2013-12-09T16:36:55Z",
        "merged_at": null,
        "body": "Properly detect 0xFF as end-of-message marker. This makes sure that partial UTF-8 characters (signle character is splitted in multiple data chunks) or code points outside BMP do not cause connection breakages.\n\nThis is partial fix for #699. Emojis don't cause disconnection, but characters outside Basic Multilingual Plane are not decoded properly.\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2012-01-22T03:35:42Z",
        "closed_at": "2014-09-03T20:07:15Z",
        "merged_at": null,
        "body": "An extra semicolon in Readme.md sample , nothing important, but because of this , that sample isn't working\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2012-01-19T18:11:18Z",
        "closed_at": "2012-02-05T20:46:14Z",
        "merged_at": null,
        "body": "If using 'match origin protocol' I've noticed occasionally that the origin will be null, in which case .match is called on something undefined and things break. This just makes sure origin is at least http and not null.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2012-01-11T09:39:22Z",
        "closed_at": "2012-01-11T15:44:12Z",
        "merged_at": null,
        "body": "There's an issue with Express 2.5.0 on Windows, which breaks the socket.io samples. Updating to >=2.5.5 should resolve this.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 15,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2012-01-03T14:14:08Z",
        "closed_at": "2013-12-09T16:36:13Z",
        "merged_at": null,
        "body": "In several places in manager.js loops like this are performed:\nfor(var key in obj) {\n  var val = obj[key];\n}\n\nThis isn't very safe as if anyone has modified the Object prototype with additional items, socket.io fails.\n\nIt's pretty standard practice to add a check:\nif(!obj.hasOwnProperty(key)) { continue; }\n\nYes, I know that people shouldn't be modifying the Object prototype, but it does happen and socket.io should be coded robust enough to work in these situations.\n\nI'm sure there are probably several other places in socket.io code other than manager.js where unsafe access is taking place.\n",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2012-01-02T19:03:29Z",
        "closed_at": "2013-11-25T17:02:36Z",
        "merged_at": null,
        "body": "Yup. That's about it. Easy as pie.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 12,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2011-12-16T05:36:06Z",
        "closed_at": "2013-12-09T16:35:38Z",
        "merged_at": null,
        "body": "If zlib module available, use it instead of child_process.spawn(\"gzip\")\n",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2011-12-12T16:11:35Z",
        "closed_at": "2011-12-12T19:02:25Z",
        "merged_at": "2011-12-12T19:02:25Z",
        "body": "Removes a semicolon in the Readme.md file that was misplaced\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2011-11-26T20:22:47Z",
        "closed_at": "2011-11-26T22:03:02Z",
        "merged_at": "2011-11-26T22:03:02Z",
        "body": "Dispatch client disconnect events correctly and fix leaking Redis subscriptions.\n",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2011-11-25T16:27:25Z",
        "closed_at": "2011-12-05T22:11:41Z",
        "merged_at": null,
        "body": "Fix for issue #663. I don't completely understand the dispatch/closed client buffering stuff, so please check me on this, but we definitely want to send a 'disconnect' mesage to the other processes so that they can close the 'dispatch:id' subscriptions that they opened while processing the 'close' message. \n\nAlso, it looks like the original intent was to call onDisconnect with local=true for the process that was actually connected, so that it closes its 'message:id'' and 'disconnect:id' subscriptions.\n\nSo with this change we leak 0 Redis channels (instead of 3), and clean up this.closed.\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2011-11-21T19:01:54Z",
        "closed_at": "2013-12-09T16:33:00Z",
        "merged_at": null,
        "body": "I am semi-new to Node.JS but this was a simple add-in for configuring socket.io to support hostname/network interface binding specifics, as I do not see a way to directly assign socket.io to a specific network interface.\n\nThe only draw back I can see is that host gets passed into https createServer as an option, but it does not seam to affect server creation.\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 72,
        "deletions": 2,
        "changed_files": 4,
        "created_at": "2011-11-15T18:54:51Z",
        "closed_at": "2013-12-09T16:32:55Z",
        "merged_at": null,
        "body": "``` javascript\nsocket.get('a','b','c', function (err, data) {\n  socket.broadcast.emit('user info', data.a)\n  socket.emit('profile', data)\n})\n```\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 48,
        "deletions": 20,
        "changed_files": 2,
        "created_at": "2011-11-14T10:16:17Z",
        "closed_at": "2013-12-09T16:32:50Z",
        "merged_at": null,
        "body": "RedisStore simplified redis host/port config and nodeId explicit assignment support.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2011-11-11T02:25:39Z",
        "closed_at": "2011-11-16T21:05:19Z",
        "merged_at": "2011-11-16T21:05:19Z",
        "body": "While doing some load tests at [MtGox](https://mtgox.com/) we ran in issue #432 resulting in the server crashing (cf. [screenshot](http://i.picpar.com/2b916df37b9a42f711834fc088a52b2019b7a331.png)).\n\n![socket.io crash](http://i.picpar.com/2b916df37b9a42f711834fc088a52b2019b7a331.png)\n\nThis is a quick fix for the issue.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 26,
        "deletions": 14,
        "changed_files": 3,
        "created_at": "2011-11-10T09:25:04Z",
        "closed_at": "2011-11-14T10:12:08Z",
        "merged_at": null,
        "body": "Ok... After lot of problems and research, I realized that in the concept of origins, http://localhost is not equal to http://localhost:80\n\nWhen used 'localhost' in origins, it would always give invalid origin as parts.port was always undefined. To solve this i added the below 3 lines of code\n\n```\n  if(!parts.port)\n    {\n        parts.port = 80;\n    }\n```\n\nin the files\nlib/manager.js\nlib/transports/websocket/hybi-07-12.js\nlib/transports/websocket/hybi-16.js\nlib/transports/websocket/hybi-17.js\n\nMake sure in configuration, origin parameter, one needs to enter \"localhost:80\"\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2011-11-09T03:05:21Z",
        "closed_at": "2011-11-22T22:38:30Z",
        "merged_at": "2011-11-22T22:38:30Z",
        "body": "set Access-Control-Allow-Origin header to origin to enable withCredentials. Bug #625 and client bug https://github.com/LearnBoost/socket.io-client/issues/333\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 18,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2011-11-04T15:07:15Z",
        "closed_at": "2013-12-09T16:32:46Z",
        "merged_at": null,
        "body": "Updated handleRequest method to provide protection from third-party client access attempt to same transport ID. See issue 619 https://github.com/LearnBoost/socket.io/issues/619 for more information about why this fix is required.\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 4,
        "changed_files": 4,
        "created_at": "2011-11-03T04:49:32Z",
        "closed_at": "2011-12-05T22:04:57Z",
        "merged_at": "2011-12-05T22:04:57Z",
        "body": "First of all, I've seen a bunch of random discussions around this issue, but I couldn't find any definitive reasons for why this is like this.\n\nSecond, I'm not a Websocket expert.\n\nWith that in mind, my patch is mostly geared towards making sure that the location response is of the same protocol as the request origin. This will be a mismatch when proxying through stunnel or nginx. The proxy terminates the original wss connection and proxies it back as a normal ws. Safari decides to complain when the location spit back is ws and it's expecting wss.\n\nThis patch just makes sure to match the ws(s) with the http(s) of the origin. If there's a reason why that shouldn't be done like this, I'm sorry. I'm tired. In my basic tests, this works when accessing over http and https in Firefox and Safari. I didn't test IE at all since I don't own a Windows machine.\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2011-11-01T21:39:40Z",
        "closed_at": "2011-11-02T18:25:19Z",
        "merged_at": "2011-11-02T18:25:19Z",
        "body": "The internal closedA object was leaking memory while being totally useless.\n\nIt had issues with its size, at random times socket.io stopped removing keys from it,\nI found that (Object.keys(closedA).length) was more than 350,000 after running for 10 hours.\n\nEdit: i made some more tests, this really fixes a large memory leak, atleast on node 0.4.8\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 14,
        "changed_files": 1,
        "created_at": "2011-10-27T07:15:04Z",
        "closed_at": "2011-10-27T09:44:50Z",
        "merged_at": "2011-10-27T09:44:50Z",
        "body": "Fixed the JSONP tests that @guille broke ;D\n\nTest suite runs again:    100% 250 tests\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2011-10-26T09:53:29Z",
        "closed_at": "2011-10-27T04:53:47Z",
        "merged_at": "2011-10-27T04:53:47Z",
        "body": "Added it to the HTMLFile\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 137,
        "deletions": 241,
        "changed_files": 20,
        "created_at": "2011-10-25T20:37:52Z",
        "closed_at": "2011-10-28T08:30:18Z",
        "merged_at": "2011-10-28T08:30:18Z",
        "body": "Lots and lots of changes. A few general purpose bugs have also been fixed, which among other things caused more prominent race conditions in v0.5, but were also present for previous versions.\n\nAll tests pass, acceptance tests pass through socket.io-client.\n\nAs noted on irc, I removed the 'undeliverable volatile' tests entirely from the websocket tests, as these had a lot of problems -- and didn't really seem to test anything in their present state for websockets.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 19,
        "changed_files": 6,
        "created_at": "2011-10-24T20:49:22Z",
        "closed_at": "2011-10-28T08:31:10Z",
        "merged_at": null,
        "body": "Removed require.paths from the examples, added socket.io with \"\" in to the package.json because I think it's save to assume that these will always work with the latest and greatest version of socket.io ;o\n\nalso added a error listener to the server as node 0.6 emits a lot more error events to the server. This will prevent the server from crashing as the HTTP server can also be created by doing a `require('socket.io').listen(80)`\n\nOne small note, the IRC demo still crashes under node 0.6 but that's because the IRC module it self is broken. So we would have to wait for a fix for that or migrate to a different IRC library (As I didn't really like spending to much time on this hacked up IRC :p)\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 30,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2011-10-22T11:39:57Z",
        "closed_at": "2011-10-27T04:51:52Z",
        "merged_at": "2011-10-27T04:51:52Z",
        "body": "A misfire kind of push added a few change sets that shouldn't have been included. This pullreq is fine and dandy.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 39,
        "deletions": 11,
        "changed_files": 6,
        "created_at": "2011-10-22T08:22:19Z",
        "closed_at": "2011-10-22T11:32:18Z",
        "merged_at": null,
        "body": "What he said.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2011-10-20T16:52:22Z",
        "closed_at": "2011-10-28T08:31:34Z",
        "merged_at": null,
        "body": "Just started using IE 10's WebSocket implementation and noticed the upgrade header they send does not match the case tested for in the `hybi-07-12.js` source.\n\nThis simple patch allows WebSockets to be used successfully in the latest IE 10 developer preview.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2011-10-16T12:02:01Z",
        "closed_at": "2011-10-16T17:00:20Z",
        "merged_at": "2011-10-16T17:00:20Z",
        "body": "Should be fixed on http://socket.io/#how-to-use as well.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 88,
        "deletions": 3,
        "changed_files": 4,
        "created_at": "2011-10-15T13:13:10Z",
        "closed_at": "2011-10-15T19:12:14Z",
        "merged_at": "2011-10-15T19:12:14Z",
        "body": "Made it easier to add benchmarks and profile them.\n\nThe `Make profile` will write out v8.log which you can parse to see where V8 spends most of it's time\nAnd the STDOUT output will allow you see where V8 might be bailing out for crankshaft optimizations.\n\n\\o/\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 75,
        "deletions": 61,
        "changed_files": 5,
        "created_at": "2011-10-13T19:03:02Z",
        "closed_at": "2011-10-13T20:42:19Z",
        "merged_at": "2011-10-13T20:42:19Z",
        "body": "Benchmark upgrade, makes it easier to performance test the latest node version \n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 104,
        "deletions": 100,
        "changed_files": 13,
        "created_at": "2011-10-13T07:59:05Z",
        "closed_at": "2013-12-09T16:32:38Z",
        "merged_at": null,
        "body": "Mostly because 3rd-Eden and/or gjslint told me to. Mostly semicolons and spaces.\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 50,
        "deletions": 52,
        "changed_files": 1,
        "created_at": "2011-10-12T19:49:43Z",
        "closed_at": "2011-10-12T22:10:20Z",
        "merged_at": "2011-10-12T22:10:19Z",
        "body": "http://cl.ly/402t2C133B2a1P0g1K0h <--- before http://cl.ly/363W080c2j261l3A1m3y <--- after ;o\n",
        "comments": 29
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2011-10-11T18:13:12Z",
        "closed_at": "2011-11-16T21:04:51Z",
        "merged_at": "2011-11-16T21:04:51Z",
        "body": "Incorporated tj's feedback in the logger. We should use tty to check if the output is redirected or not and set the default value of the `log colors` based on that. \n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 52,
        "deletions": 7,
        "changed_files": 3,
        "created_at": "2011-10-11T08:44:14Z",
        "closed_at": "2011-10-11T15:13:55Z",
        "merged_at": "2011-10-11T15:13:55Z",
        "body": "Blacklisten events that are send by client. This will disallow the `disconnect` event to be triggered from the client side.\n\nEvil do'ers can just hack in to the io.sockets and emit this ;o.\n\n![PULL ALL THE THINGS](http://images.memegenerator.net/instances/400x/10546806.jpg)\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 72,
        "deletions": 4,
        "changed_files": 4,
        "created_at": "2011-10-10T19:35:22Z",
        "closed_at": "2011-10-11T15:18:20Z",
        "merged_at": "2011-10-11T15:18:20Z",
        "body": "You can now disable logging again using `io.disable('log')`\nAlso added support for killing the color output using `io.disable('log colors')` <-- painful in production\n\nAdded tests against it and added another test against static because etags can kill far future headers.\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 48,
        "deletions": 44,
        "changed_files": 4,
        "created_at": "2011-10-08T10:06:55Z",
        "closed_at": "2011-10-09T08:33:13Z",
        "merged_at": "2011-10-09T08:33:13Z",
        "body": "Re-added the websocket identification test, and rewrote the close procedures for all previously hanging async tests. All should be well now.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 580,
        "deletions": 220,
        "changed_files": 6,
        "created_at": "2011-10-02T14:38:09Z",
        "closed_at": "2011-10-02T17:59:41Z",
        "merged_at": "2011-10-02T17:59:41Z",
        "body": "See issue #553 for discussion.\n\nAlso brings binary support to the hybi parsers, but this feature is still secondary / not connected to anything.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 15,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2011-10-01T21:15:17Z",
        "closed_at": "2013-12-09T16:32:28Z",
        "merged_at": null,
        "body": "Hi. I added auth to the redis store.\n\nthx.\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 1092,
        "deletions": 253,
        "changed_files": 8,
        "created_at": "2011-10-01T12:48:56Z",
        "closed_at": "2011-10-01T19:15:16Z",
        "merged_at": "2011-10-01T19:15:16Z",
        "body": "Also added tests for websocket draft routing, which was rather long over-due.\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2011-09-28T10:12:54Z",
        "closed_at": "2011-12-05T22:04:59Z",
        "merged_at": "2011-12-05T22:04:59Z",
        "body": "Fixes:\n1) I came across the issue with redis-store running on multiple node server, that session id doesn't get removed from the rooms when client gets disconnected\n2) When I start the new node server when some are already running it crashes with following error\n\nthrow arguments[1]; // Unhandled 'error' event\n\n^\nTypeError: Cannot convert null to object\nat DELETE (native)\nat Manager.onLeave (/usr/local/rails/node-api/node_modules/socket.io/lib/manager.js:393:28)\nat /usr/local/rails/node-api/node_modules/socket.io/lib/manager.js:270:10\nat RedisClient.message (/usr/local/rails/node-api/node_modules/socket.io/lib/stores/redis.js:155:26)\nat RedisClient.emit (events.js:81:20)\nat RedisClient.return_reply (/usr/local/rails/node-api/node_modules/socket.io/node_modules/redis/index.js:440:22)\nat RedisReplyParser. (/usr/local/rails/node-api/node_modules/socket.io/node_modules/redis/index.js:81:14)\nat RedisReplyParser.emit (events.js:64:17)\nat RedisReplyParser.add_multi_bulk_reply (/usr/local/rails/node-api/node_modules/socket.io/node_modules/redis/lib/parser/javascript.js:311:14)\nat RedisReplyParser.send_reply (/usr/local/rails/node-api/node_modules/socket.io/node_modules/redis/lib/parser/javascript.js:272:18)\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 27,
        "deletions": 7,
        "changed_files": 2,
        "created_at": "2011-09-19T07:49:02Z",
        "closed_at": "2011-09-19T17:06:52Z",
        "merged_at": "2011-09-19T17:06:52Z",
        "body": "Initialize Store on configuration.\nFix typo.\nFix RedisClients configuration.\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2011-09-11T23:41:47Z",
        "closed_at": "2013-12-09T16:32:21Z",
        "merged_at": null,
        "body": "And therefore run all the configurations for the 'development' environment\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2011-09-08T23:28:42Z",
        "closed_at": "2014-09-03T20:07:15Z",
        "merged_at": null,
        "body": "support disabling close and heartbeat timeouts.\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2011-08-31T17:57:55Z",
        "closed_at": "2011-09-01T19:12:32Z",
        "merged_at": "2011-09-01T19:12:32Z",
        "body": "Ref. https://github.com/LearnBoost/socket.io/pull/501\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 6,
        "changed_files": 3,
        "created_at": "2011-08-31T13:21:14Z",
        "closed_at": "2011-08-31T15:50:44Z",
        "merged_at": "2011-08-31T15:50:44Z",
        "body": "See the following issue comment: https://github.com/LearnBoost/socket.io/issues/377#issuecomment-1956808\n\nHandshakes weren't correctly passing a content-type header, making some browsers complain about errors parsing xml, although the data is really text/plain.\n\nThe pull req also contains two other minor style fixes as a bonus :P\n",
        "comments": 21
    },
    {
        "merged": false,
        "additions": 22,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2011-08-30T17:50:30Z",
        "closed_at": "2013-12-09T16:31:30Z",
        "merged_at": null,
        "body": "This is a proposal for new functionality.\n\nThe intended use case is to allow clients to reconnect using the same sessionid that they originally connected with. This, combined with the RedisStore would allow a socket server to fall out of a cluster, a client to reconnect to another server in the cluster, all while maintaining data associated with the socket.\n\nMy proposal would be to modify the Manager.handleHandshake method to pull a sessionid from the query if it exists.\n\nIn order to utilize this feature, clients would have to set the sessoinid in the socket.options.query (client).\n\nAny thoughts?\n",
        "comments": 22
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2011-08-28T21:22:09Z",
        "closed_at": "2013-12-09T16:05:15Z",
        "merged_at": null,
        "body": "Setting disconnected = true prior to firing disconnect event, to avoid scenario where socket disconnected is set to false inside disconnect event.\n\nShould fix #483, although not tested.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 97,
        "deletions": 7,
        "changed_files": 2,
        "created_at": "2011-08-27T16:55:25Z",
        "closed_at": "2011-08-28T22:42:23Z",
        "merged_at": "2011-08-28T22:42:23Z",
        "body": "Previously submitted, but got obscured due to additional hybi10 changes.\n\nPrevious comments:\nThe verifyOrigin call does, as far as I can tell, only handle http requests related to pre-transport handshaking. As such, the verifyOrigin call really should either be renamed in the future, or also be used for transport source verification -- granted the ability of all transports to provide this.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1158,
        "deletions": 330,
        "changed_files": 9,
        "created_at": "2011-08-16T05:50:40Z",
        "closed_at": "2011-08-27T16:50:53Z",
        "merged_at": null,
        "body": "The verifyOrigin call does, as far as I can tell, only handle http requests related to pre-transport handshaking. As such, the verifyOrigin call really should either be renamed in the future, or also be used for transport source verification -- granted the ability of all transports to provide this.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 36,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2011-08-10T20:55:52Z",
        "closed_at": "2011-09-20T22:04:59Z",
        "merged_at": "2011-09-20T22:04:59Z",
        "body": "Support for handshakes\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2011-08-09T17:34:47Z",
        "closed_at": "2011-08-31T16:32:17Z",
        "merged_at": "2011-08-31T16:32:17Z",
        "body": "Yups, no more root required See https://github.com/LearnBoost/socket.io-client/pull/273\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2011-08-04T20:17:46Z",
        "closed_at": "2011-08-08T19:07:07Z",
        "merged_at": "2011-08-08T19:07:07Z",
        "body": "We should only start our `gc` on when the server starts listening for events. Or we could prevent node from closing if a non listening server has been used.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2011-08-04T12:56:15Z",
        "closed_at": "2011-08-04T18:49:38Z",
        "merged_at": null,
        "body": "Under some circumstances there seem to be clients which only perform one handshake and are then never seen again. I don't know the exact source of the problem, but it shouldn't affect the server. However, this problem introduces a memory leak in manager.js. The clients are not correctly removed from the \"handshaken\" member in manager.js, leading to a memory leak and frequent crashes of the server because of constantly increasing load and cpu (most probably because of operations on this member taking longer and longer).\n\nHere is a graph to illustrate the problem:\nhttp://img684.imageshack.us/img684/9707/handshakememleak.png\n\n(The drop at around 18:00 was the result of a crash)\n\nThe fix introduces a timeout which fires after the \"client store expiration\" and checks if the client has connected within the given interval. If he hasn't, the client is deleted from the \"handshaken\" member. This fixes the problem of the evergrowing \"handshaken\" member.\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2011-08-01T17:45:17Z",
        "closed_at": "2011-11-16T21:05:31Z",
        "merged_at": "2011-11-16T21:05:31Z",
        "body": "I only updated the location the repo in package.json to reflect the new repo.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 12,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2011-07-30T15:11:50Z",
        "closed_at": "2011-08-01T20:09:54Z",
        "merged_at": null,
        "body": "I've made a few changes which fall back to the referrer header, if that's present. This has worked fine with http://draw.2x.io.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2011-07-27T18:40:11Z",
        "closed_at": "2011-07-27T20:55:30Z",
        "merged_at": null,
        "body": "correctly unescape the send values, as we are doing a manual escape on the client side\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 20,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2011-07-26T02:04:52Z",
        "closed_at": "2011-07-26T07:11:18Z",
        "merged_at": null,
        "body": "Manager.static.paths includes a key \"/socket.io.js.min\" and GET request for this PATH will serve \"socket.io.min.js\". but the PATH is \"socket.io.js.min\" that doesn't has mime type.\nI fixed Manager not to serve static content for \"socket.io.js.min\".\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 89,
        "deletions": 28,
        "changed_files": 3,
        "created_at": "2011-07-25T20:13:42Z",
        "closed_at": "2011-07-30T21:32:34Z",
        "merged_at": "2011-07-30T21:32:34Z",
        "body": "`io.disable('heartbeats')` was still sending and requiring heartbeats. \n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 36,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2011-07-24T11:22:31Z",
        "closed_at": "2011-07-30T21:32:51Z",
        "merged_at": "2011-07-30T21:32:51Z",
        "body": "As #374 was already fixed with the latest room memory leak fix.\nHere is a separate pull request with a test case against the issue.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2011-07-23T21:01:06Z",
        "closed_at": "2011-07-30T21:33:09Z",
        "merged_at": "2011-07-30T21:33:09Z",
        "body": "As the policyfile server didn't wrap `res.end` in a try catch block yet\nand a new redis driver is out\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 54,
        "deletions": 0,
        "changed_files": 4,
        "created_at": "2011-07-22T21:05:25Z",
        "closed_at": "2011-07-31T00:58:41Z",
        "merged_at": null,
        "body": "Hello,\nthis adds a test that checks whether a socket disappears from memory after it was closed.\n\nHow to use:\n\n```\ncd leaktest\n./leaktest.sh\n```\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 38,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2011-07-22T20:56:02Z",
        "closed_at": "2011-07-31T00:59:06Z",
        "merged_at": "2011-07-31T00:59:06Z",
        "body": "Remove sockets after they are disconnected\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 44,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2011-07-22T19:38:58Z",
        "closed_at": "2011-08-04T18:50:39Z",
        "merged_at": "2011-08-04T18:50:39Z",
        "body": "Garbage collection function to kill unused handshakes. \n",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2011-07-20T16:41:47Z",
        "closed_at": "2011-07-31T01:36:08Z",
        "merged_at": "2011-07-31T01:36:08Z",
        "body": "I noticed that the combination socket.io <-> nginx <-> firefox fails sometimes. When the browser sends a message via post, the server doesn't get the full post data. It only gets the first chunk and the end event is never fired. That happens randomly but I was able to stop this problem by sending the response once we've got all POST data, not immediately \n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2011-07-19T06:24:58Z",
        "closed_at": "2011-07-31T01:35:24Z",
        "merged_at": null,
        "body": "Quite a simple patch really; but necessary when working behind reverse proxies.\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2011-07-18T21:15:04Z",
        "closed_at": "2011-07-31T01:49:47Z",
        "merged_at": "2011-07-31T01:49:47Z",
        "body": "See http://blogs.msdn.com/b/ieinternals/archive/2011/01/31/controlling-the-internet-explorer-xss-filter-with-the-x-xss-protection-http-header.aspx\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 858,
        "deletions": 330,
        "changed_files": 5,
        "created_at": "2011-07-17T22:27:26Z",
        "closed_at": "2011-09-07T16:39:30Z",
        "merged_at": "2011-09-07T16:39:30Z",
        "body": "# New static internals for Socket.IO\n\nThis is a complete rewrite of the old static functions that where in the `manager` module. This rewrite now builds the `socket.io.js` file based on the enabled transport types on the server. So by default it will now also strip all the flash related javascript code from the file until you enable it manually.\n\nIn addition to this there is support to create your own bundle of socket.io transports based on URL parameters. This might be useful for mobile applications as they probably don't need HTMLFile or WebSockets. But your desktop version does. Using `/socket.io+websocket.js` will file that only contains all code for websocket support. You can add more transports by append `+<transportname>` to the path.\n\nAlso new in this build is support for GZIP. When we first build up our cache we spawn a gzip process and pipe the data to it, if it's successful we will store it in our cache.\n\nI also extracted the test cases from the `manager.test.js` to `static.test.js` which now features a total 19 tests for static content.\n\nFeedback & pulls are more than welcome ;)\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 40,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2011-07-14T23:12:46Z",
        "closed_at": "2011-07-22T14:51:54Z",
        "merged_at": "2011-07-22T14:51:54Z",
        "body": "Due to disconnect/reconnect logic it's possible to call onJoin more than once without realising in the lifetime of a client's connection. These changes prevent rooms from having multiple references to the same client connection.\n\nThe description for #379 is slightly different - but it's possible these changes address that problem too.\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2011-07-14T22:39:53Z",
        "closed_at": "2011-12-16T22:04:14Z",
        "merged_at": "2011-12-16T22:04:14Z",
        "body": "During fsRead you're trying to find 'path' inside of 'data', it's in the err variable.\n\nThe second commit is a simply allowing a custom session hook.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2011-07-14T19:33:20Z",
        "closed_at": "2011-07-31T03:27:30Z",
        "merged_at": "2011-07-31T03:27:30Z",
        "body": "To prevent further confusion about different method names in of a socket and a namespace. \n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 17,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2011-07-14T07:30:54Z",
        "closed_at": "2011-07-31T03:23:43Z",
        "merged_at": null,
        "body": "As I discussed in #369 I was getting annoying output on instantiation of socket.io with `listen` because there was no way to override the initial output to the logger. This patch fixes this issue by passing the `options` argument to `listen()` down to `Manager()`, and mixing that object with the default `this.settings`.\n\nUnfortunately the `options` argument is also passed to `https.createServer()` but none of the option names are shared so I'm guessing there won't be any conflicts.\n\nI had to reinstate the `merge()` function in `util.js` which appears in the 06 branch but there is not much to discuss about it since it's such a simple implementation.\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 40,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2011-07-12T20:39:14Z",
        "closed_at": "2011-07-24T10:13:53Z",
        "merged_at": null,
        "body": "Yup, it does. Deferring the call is all that was needed\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1013,
        "deletions": 19,
        "changed_files": 16,
        "created_at": "2011-07-11T12:16:43Z",
        "closed_at": "2011-07-31T03:54:50Z",
        "merged_at": null,
        "body": "",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2011-07-11T08:09:33Z",
        "closed_at": "2011-07-14T07:43:14Z",
        "merged_at": null,
        "body": "When instantiating socket.io with `listen()` and passing a server instance as the first argument, I immediately get colored output on the console from `Manager()`. This is mildly annoying because I'm using a different strategy for outputting messages from socket.io. If this initial output is delayed the shortest amount possible (with `process.nextTick`) I can provide my own logging settings. \n\nNormally I guess the `options` object from the second argument of `listen()` should reach `Manager()` to override/mixin with the default settings but I'm not sure if that ties in properly with the new, express-style of configuration.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2011-07-11T07:22:00Z",
        "closed_at": "2011-07-31T03:27:15Z",
        "merged_at": null,
        "body": "",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 199,
        "deletions": 15,
        "changed_files": 7,
        "created_at": "2011-07-10T19:38:00Z",
        "closed_at": "2011-07-11T12:04:43Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2011-07-10T19:25:21Z",
        "closed_at": "2011-07-31T03:32:39Z",
        "merged_at": "2011-07-31T03:32:39Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2011-07-08T21:17:18Z",
        "closed_at": "2011-07-31T03:35:14Z",
        "merged_at": null,
        "body": "Added the socket that the message is being received from to the emitted parameters so that a single listening method can identify the sender rather than defining individual listeners after a client connects. Have I mixed this up? Is there another way to get the sender of a message?\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 41,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2011-07-05T22:11:52Z",
        "closed_at": "2011-10-07T17:07:05Z",
        "merged_at": "2011-10-07T17:07:05Z",
        "body": "Expose the transport type to the users, just like we do with the with handshake data\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2011-07-05T21:23:07Z",
        "closed_at": "2011-07-26T08:48:22Z",
        "merged_at": "2011-07-26T08:48:22Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 169,
        "deletions": 5,
        "changed_files": 4,
        "created_at": "2011-07-05T13:00:01Z",
        "closed_at": "2011-07-31T01:53:54Z",
        "merged_at": null,
        "body": "",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2011-07-05T09:49:25Z",
        "closed_at": "2011-07-31T01:53:09Z",
        "merged_at": null,
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 109,
        "deletions": 5,
        "changed_files": 4,
        "created_at": "2011-07-04T22:14:17Z",
        "closed_at": "2011-07-12T07:55:49Z",
        "merged_at": "2011-07-12T07:55:49Z",
        "body": "Fixed #291\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2011-07-04T20:56:57Z",
        "closed_at": "2011-07-31T01:47:41Z",
        "merged_at": "2011-07-31T01:47:41Z",
        "body": "Fixes #333 by moving the redis require to the constructor of the store, if the store isn't used it will not be required.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2011-07-04T19:57:02Z",
        "closed_at": "2011-07-26T08:50:07Z",
        "merged_at": "2011-07-26T08:50:07Z",
        "body": "syntax error in the example code\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2011-07-04T17:28:51Z",
        "closed_at": "2011-07-31T01:47:12Z",
        "merged_at": "2011-07-31T01:47:12Z",
        "body": "Related issue: #334 if we expose query strings authentication can be based on that, as intended in socket.io protocol specification.\n\nRelated issue on the client: https://github.com/LearnBoost/socket.io-client/issues/225\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 15,
        "deletions": 8,
        "changed_files": 3,
        "created_at": "2011-07-02T15:51:09Z",
        "closed_at": "2011-07-03T12:43:49Z",
        "merged_at": "2011-07-03T12:43:49Z",
        "body": ".address() returned server ip >_<, solved with this patch and adjusted the test\nsuite\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2011-07-02T11:00:30Z",
        "closed_at": "2011-07-31T01:46:50Z",
        "merged_at": null,
        "body": "`Manager#handleHandshake` implementation supposes passing `newData` object to the callback. `newData` wil substitute the default handshake data if provided, but `Manager#authorize` ignores any `newData` passed from custom authorization function. Fixed in this commit.\n\n```\nio.set('authorization', function(data, cb) {\n    cb(null, true, { custom: 'data' });\n});\n\nio.sockets.on('connection', function(socket) {\n    console.log(socket.handshake.custom); // will print 'data'\n});\n```\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 12,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2011-07-01T16:51:17Z",
        "closed_at": "2011-07-10T19:25:53Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2011-06-30T10:13:28Z",
        "closed_at": "2011-06-30T13:22:27Z",
        "merged_at": "2011-06-30T13:22:27Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2011-06-29T09:18:21Z",
        "closed_at": "2011-06-29T11:12:18Z",
        "merged_at": "2011-06-29T11:12:18Z",
        "body": "As the title goes.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2011-06-29T02:41:35Z",
        "closed_at": "2011-06-29T03:51:04Z",
        "merged_at": null,
        "body": "fixes the syntax error on line 128 of lib/stores/redis.js\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 273,
        "deletions": 75,
        "changed_files": 4,
        "created_at": "2011-06-28T19:46:02Z",
        "closed_at": "2011-06-29T11:14:29Z",
        "merged_at": "2011-06-29T11:14:29Z",
        "body": "Like the title states, auth per namespace\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2011-06-28T19:45:00Z",
        "closed_at": "2011-06-29T11:16:58Z",
        "merged_at": null,
        "body": "close function.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 48,
        "deletions": 20,
        "changed_files": 1,
        "created_at": "2011-06-28T19:19:16Z",
        "closed_at": "2011-06-29T10:58:58Z",
        "merged_at": null,
        "body": "",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 48,
        "deletions": 20,
        "changed_files": 1,
        "created_at": "2011-06-28T06:15:11Z",
        "closed_at": "2011-06-28T18:43:59Z",
        "merged_at": null,
        "body": "having separate pub and sub connections helps to cope with redis queue overflow; added Client#has, #Client#del; accessors made async friendly\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2011-06-28T02:05:03Z",
        "closed_at": "2011-06-28T19:08:31Z",
        "merged_at": null,
        "body": "",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 147,
        "deletions": 301,
        "changed_files": 26,
        "created_at": "2011-06-25T07:46:44Z",
        "closed_at": "2011-06-25T20:48:52Z",
        "merged_at": null,
        "body": "I went through the code with JSLint and fixed any syntax errors I could find. I also fixed if-statements that contained a single line to make them nicer to look at.\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 408,
        "deletions": 88,
        "changed_files": 10,
        "created_at": "2011-06-23T19:59:14Z",
        "closed_at": "2011-06-28T11:20:51Z",
        "merged_at": null,
        "body": "This patch introduces a `socket.data` method which can be used to retrieve the data that was generated during the handshake process.\n#### Example code:\n\n``` js\nvar io = require('socket.io').listen(80);\nio.sockets.on('connection', function (socket) {\n  socket.data(function (err, data) {\n    console.log(data.ip, data.headers);\n  })\n})\n```\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2011-06-22T15:24:56Z",
        "closed_at": "2011-06-23T08:04:05Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 67,
        "deletions": 10,
        "changed_files": 8,
        "created_at": "2011-06-21T08:03:50Z",
        "closed_at": "2011-06-22T08:25:30Z",
        "merged_at": "2011-06-22T08:25:30Z",
        "body": "Now, with actual names of the transports :D!\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 13,
        "changed_files": 7,
        "created_at": "2011-06-18T20:56:50Z",
        "closed_at": "2011-06-20T08:26:46Z",
        "merged_at": "2011-06-20T08:26:46Z",
        "body": "Moar options, like error handling\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2011-06-18T09:22:08Z",
        "closed_at": "2011-06-18T13:06:32Z",
        "merged_at": "2011-06-18T13:06:32Z",
        "body": "Instead of calling the `flashsockets` init function each time.. \n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 334,
        "deletions": 6,
        "changed_files": 6,
        "created_at": "2011-06-17T23:16:28Z",
        "closed_at": "2011-06-18T01:49:45Z",
        "merged_at": "2011-06-18T01:49:45Z",
        "body": "Y U NO PULL\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2011-06-17T19:58:10Z",
        "closed_at": "2011-06-22T08:22:28Z",
        "merged_at": null,
        "body": "confirm() just says 'ok' or 'cancel'. we want prompt() to actually get their name.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2011-06-17T19:51:25Z",
        "closed_at": "2011-06-22T08:22:28Z",
        "merged_at": null,
        "body": "help people trying to install who are getting confused between 0.6 and 0.7 (until 0.7 is tagged on npm)\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 357,
        "deletions": 21,
        "changed_files": 15,
        "created_at": "2011-06-15T19:37:06Z",
        "closed_at": "2011-06-22T08:22:28Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2011-06-11T09:07:00Z",
        "closed_at": "2011-06-22T08:22:27Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2011-06-11T05:56:35Z",
        "closed_at": "2011-06-22T08:22:27Z",
        "merged_at": null,
        "body": "I needed the request in the 'connection' event (for the cookies) and ran into the problem that xhr-polling and jsonp-polling clear client.request before the 'connection' event hooks get run. Maybe you can do something like this to make the request available to all transports, if there isn't already a way.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 38,
        "deletions": 24,
        "changed_files": 7,
        "created_at": "2011-06-08T08:15:32Z",
        "closed_at": "2011-06-11T21:31:18Z",
        "merged_at": null,
        "body": "",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 12,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2011-06-03T22:49:03Z",
        "closed_at": "2011-06-22T08:22:27Z",
        "merged_at": null,
        "body": "I added a send method to Listener. It seems cleaner to do this than to have to access Listener.clients directly in order to send a message to clients based on their session IDs, and it also feels like a good compliment to the Listener.broadcast method.\n\nThe code's short and simple, and I don't see how it would break anything else, but someone who knows more about the project might want to make sure - I just saw a need for this and thought I'd suggest it.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2011-06-02T21:53:27Z",
        "closed_at": "2011-06-22T08:22:27Z",
        "merged_at": null,
        "body": "Use a Buffer to construct message frame instead of multiple writes. This sends the message in a single TCP segment in most cases instead of three segments.\n\nFor example, the Socket.IO protocol heartbeat send a TCP segment with a single \\x00, another with the ~m~~h..., and a final segment with \\xFF. This behavior causes poor TCP performance in many cases and is inefficient.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2011-06-02T14:25:54Z",
        "closed_at": "2011-06-22T08:20:43Z",
        "merged_at": null,
        "body": "To go with LearnBoost/Socket.IO#168\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 6,
        "changed_files": 4,
        "created_at": "2011-06-02T10:03:22Z",
        "closed_at": "2011-06-08T08:13:58Z",
        "merged_at": null,
        "body": "Please, consider applying\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 6,
        "changed_files": 5,
        "created_at": "2011-06-01T21:18:48Z",
        "closed_at": "2011-06-22T08:20:43Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 215,
        "deletions": 10,
        "changed_files": 8,
        "created_at": "2011-05-31T14:28:14Z",
        "closed_at": "2011-05-31T16:19:34Z",
        "merged_at": null,
        "body": "Why? iOS 4 supports it! So we won't need polling on iPhones anymore ;-) Also, Opera with WebSockets disabled. http://caniuse.com/#feat=eventsource\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2011-05-27T18:41:29Z",
        "closed_at": "2011-06-22T08:20:43Z",
        "merged_at": null,
        "body": "It is often desirable to not go beyond a certain point when exponentially scaling the reconnection delay especially when working with a high number of reconnection attempts. For most applications the reconnectionDelay becomes too large when it exeeds a day or so, quite a lot will want a lower delay.\nI added an option \"maxReconnectionDelay\" which caps the reconnection delay to the configured value. The default value is -1 which means no limit.\n\nI also added the possible value -1 to maxReconnectionAttempts meaning unlimited reconnection attempts which works nicely with capping the reconnection delay.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 30,
        "deletions": 16,
        "changed_files": 1,
        "created_at": "2011-05-23T15:11:09Z",
        "closed_at": "2011-06-17T01:54:57Z",
        "merged_at": null,
        "body": "XDomainRequest handles onload and not onreadystatechange event.\nAlso, due to some weird IE9 quirk, we need to handle all events (onerror, ontimeout, onprogress) apart from onload.\n\nSee: [XDomainRequest Object](http://msdn.microsoft.com/en-us/library/cc288060%28v=vs.85%29.aspx/)\n",
        "comments": 21
    },
    {
        "merged": false,
        "additions": 248,
        "deletions": 192,
        "changed_files": 23,
        "created_at": "2011-05-18T08:02:36Z",
        "closed_at": "2011-06-13T17:40:48Z",
        "merged_at": null,
        "body": "## COPY PASTE@\n### Flash\n\nI added `flash policy port` to the configuration object so that users who want to be able to change it, can change it. A typical use case for this would be running Node.js without root access and having IPTABLES redirect the flash policy request to the new / higher port number.\n### Semi colons\n\nI noticed a few missing here and there, so I added them. I also removed semicolons after function declarations.\n### Named functions\n\nWhile I was at it, I just named all functions so our would not start bleeding if we had to take a peek at the stacktrace\n### Submodules\n\nRestored the messed up submodule references, I guessed the references of `should.js` and add @visionmedia's version.. But I guess @guille's version was used instead, but that one seemed more out of date ;)\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2011-05-17T22:20:37Z",
        "closed_at": "2011-06-22T08:20:42Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2011-05-10T21:07:38Z",
        "closed_at": "2011-05-18T08:01:06Z",
        "merged_at": null,
        "body": "### Flash\n\nI added `flash policy port` to the configuration object so that users who want to be able to change it, can change it. A typical use case for this would be running Node.js without root access and having IPTABLES redirect the flash policy request to the new / higher port number.\n### Semi colons\n\nI noticed a few missing here and there, so I added them. I also removed semicolons after function declarations.\n### Named functions\n\nWhile I was at it, I just named all functions so our would not start bleeding if we had to take a peek at the stacktrace\n### Submodules\n\nRestored the messed up submodule references, I guessed the references of `should.js` and add @visionmedia's version.. But I guess @guille's version was used instead, but that one seemed more out of date ;)\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 154,
        "deletions": 122,
        "changed_files": 2,
        "created_at": "2011-05-07T12:02:55Z",
        "closed_at": "2011-05-09T22:19:47Z",
        "merged_at": "2011-05-09T22:19:47Z",
        "body": "### package.json\n\nAdded more keywords, repository and updated the engine so that it actually installs on future node versions\n### Readme\n\nChanged to fancy pansy `redcarpet` enabled syntax highlighting. Changed `require('socket.io')` to `socket.io-node as that is the name according to the package.json and fixed small spelling mistake.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2011-04-23T15:22:27Z",
        "closed_at": "2011-05-07T05:12:48Z",
        "merged_at": null,
        "body": "Firefox does a CORS request (OPTION method) before sending POST requests. This fix handles this correctly and returns some headers to tell the browser that POST requests are okay.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2011-04-11T10:40:53Z",
        "closed_at": "2011-06-22T08:18:07Z",
        "merged_at": null,
        "body": "This makes it possible to get rid of the client.sessionId when a announcement is displayed.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2011-04-04T01:41:52Z",
        "closed_at": "2011-06-22T08:08:36Z",
        "merged_at": null,
        "body": "Changed the call to _onClose() from in _write() so that request and response are preserved during 'connection' event\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2011-03-31T01:03:53Z",
        "closed_at": "2011-03-31T05:56:10Z",
        "merged_at": "2011-03-31T05:56:10Z",
        "body": "#169: fix returning 'ws' for location even when the client connects via 'wss'\n\nissue url here:\n\nhttps://github.com/LearnBoost/Socket.IO-node/issues/#issue/169\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2011-03-30T23:14:34Z",
        "closed_at": "2011-06-22T08:09:51Z",
        "merged_at": null,
        "body": "I've done this properly so there are only 3 commits instead of others from my master branch\n\nSince Socket.IO has the built-in functionality for encoding and delivering multiple messages, I thought it would be convenient to wrap that up in some public interface on the Client object.\n\n```\nclient.bufferSends(funciton(){\n  //all client.send() calls in here are added to the queue\n  //and then the whole queue is sent after we return\n});\n```\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2011-03-30T17:51:55Z",
        "closed_at": "2011-06-22T08:10:06Z",
        "merged_at": null,
        "body": "Added missing \"/\" in json.js path, which was causing the file to be served as text/html instead of text/javascript.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2011-03-27T14:01:24Z",
        "closed_at": "2011-06-22T08:16:28Z",
        "merged_at": null,
        "body": "Hello,\n\nSpecifying e.g. \n\n```\nvar socket = io.listen(app, {\n  origin: '192.168.1.110:3002'\n});        \n```\n\nthe second part of the client.js' `_verifyOrigin` fails to resolve the host name \n\n```\nvar parts = urlparse(origin);\nreturn origins.indexOf(parts.host + ':' + parts.port) !== -1 ||\n   origins.indexOf(parts.host + ':*') !== -1 ||\n   origins.indexOf('*:' + parts.port) !== -1;  \n```\n\nand will try matching `parts.host`, which is `192.168.1.110:3002`, with the port `:3002`, which ends up being `192.168.1.110:3002:3002`.\n\n```\n$ node\n> var p = require('url').parse; console.log(p('http://192.168.1.110:3002'));\n  { protocol: 'http:',\n  slashes: true,\n  host: '192.168.1.110:3002',\n  port: '3002',\n  hostname: '192.168.1.110',\n  pathname: '/',\n  href: 'http://192.168.1.110:3002/' }                                             \n```\n\nBest Regards,\nTorgeir\n\n(and thanks for a sweet library :)             \n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 35,
        "deletions": 35,
        "changed_files": 1,
        "created_at": "2011-03-23T21:34:33Z",
        "closed_at": "2011-06-22T08:16:49Z",
        "merged_at": null,
        "body": "This pull request really only concerns commit 68822317\n\nWhile running cloud9 with socket.io websocket transport enabled, we ran into the issue that Node would throw errors in net.js (internally). We patched this by putting most of the onConnect in the try...catch block.\n\nAppears to have little to no side-effects, we're looking to find the time to perform a more extensive analysis.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2011-03-15T23:49:32Z",
        "closed_at": "2011-06-22T08:14:17Z",
        "merged_at": null,
        "body": "The client-side javascript should be able to detect if it's on a secure connection and set options.secure and options.port appropriately.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 60,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2011-03-15T10:46:30Z",
        "closed_at": "2011-06-22T08:13:29Z",
        "merged_at": null,
        "body": "Added EventSource support to socket.io-node.\nIncludes some test cases. \n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2011-03-07T10:38:15Z",
        "closed_at": "2011-06-22T08:12:03Z",
        "merged_at": null,
        "body": "There are a couple of updates _serveClient functionality.\n1. When the `NODE_ENV` variable has been set to development the serve client will output the current and regular socket.io.js file. If this variable is not present or overwritten using the `options.development` property we will serve the socket.io.min.js by default. \n2. I added gzip support for all none .swf files. This is done by spawing a gzip process, feeding it the contents of the readFile and storing it inside the clientFiles object so it only happens once.\n\nNotes on edit 1): I have also updated the support/socket.io-client to the contents this ( https://github.com/LearnBoost/Socket.IO/pull/91 ) pull request in order to have a minified build of socket.io\n",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 27,
        "deletions": 16,
        "changed_files": 1,
        "created_at": "2011-03-03T16:10:26Z",
        "closed_at": "2011-03-30T18:43:38Z",
        "merged_at": "2011-03-30T18:43:37Z",
        "body": "Hi,\n\nThere are 2 fixes here:\n\n1) It solves the memory leak with the XHR transport by eliminating attaching event listeners to the same connection more than once. All other proposed patches did not seems to work with the latest Node stable ( v0.4.2)\n\n2) It fixes a uncaught exception when a timeout has occurred in one of the connections. See: https://gist.github.com/615009\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2011-03-01T21:14:17Z",
        "closed_at": "2011-06-22T08:11:08Z",
        "merged_at": null,
        "body": "Hi Guillermo,\n\nI have createded a node 2 node transport for Socket.io (see [node2node-socket.io](https://github.com/dotmaster/node2node-socket.io)).\nUnfortunately I had to patch Socket.io to be able to add a new transport. I have come up with a solution, which I think is less invasive as possible.\n## Modifications to Socket.io\n- a static function called addTransport is exposed to the outside world to add new transports to socket.io\n- the Client base class of every transport is exposed to the outside world\n\nI hope you like the architecture and would be happy if you include it in the next release.\n\nBest regards\n\nGregor\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 38,
        "deletions": 16,
        "changed_files": 2,
        "created_at": "2011-02-28T18:45:41Z",
        "closed_at": "2011-05-23T15:04:45Z",
        "merged_at": null,
        "body": "",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2011-02-25T21:43:16Z",
        "closed_at": "2011-06-22T08:10:46Z",
        "merged_at": null,
        "body": "I unzipped WebSocketMainInsecure.zip and included the mapping in the listener to make it available. Otherwise, it wasn't possible to use Socket.io va NPM OOTB unless you copied the WebSocketMainInsecure.swf and managed it and the serving of it yourself which doesn't seem right either.\n\nMy only hesitation is if it exposes more risk having WebSocketMainInsecure.swf available by default.\n\nMike\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2011-02-22T12:09:00Z",
        "closed_at": "2011-02-22T19:09:10Z",
        "merged_at": "2011-02-22T19:09:10Z",
        "body": "Scope issue. Changed `this.listener.options.log` to `self.listener.options.log`.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2011-02-18T17:02:44Z",
        "closed_at": "2011-03-04T17:03:55Z",
        "merged_at": "2011-03-04T17:03:55Z",
        "body": "(Sending this pull request for the 2nd time - I accidentally closed it manually the first time around)\n\nSafari/Chrome won't alllow the response header \"Access-Control-Allow-Origin: null\" after sending a cross-domain request with \"Origin: null\"\n\nChanged the header to \"Access-Control-Allow-Origin: *\" when the GET request's Origin header is \"null\"\n\nThis is really useful for folks running javascript from the iPhone's webview (probably applies to Android, AIR and any platform where the document domain is  the file system, e.g file:///Users/tifroz/index.html)\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 11,
        "changed_files": 1,
        "created_at": "2011-02-16T16:53:38Z",
        "closed_at": "2011-06-22T08:04:55Z",
        "merged_at": null,
        "body": "This is a reasonably simple fix.  In SSL mode especially, multiple requests can have the same connection object, and you are calling Client._onConnect for every request, which sets events on the connection as well as the request.  Thus for multiple requests per connection, you're leaking event handlers in _onConnect.  This quick patch solves that.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2011-02-16T08:22:48Z",
        "closed_at": "2011-02-16T18:12:09Z",
        "merged_at": null,
        "body": "Safari/Chrome don't play with \"Access-Control-Allow-Origin: null\" after sending a cross-domain request with \"Origin: null\"\n\nChanged the header to \"Access-Control-Allow-Origin: *\" when the GET request's Origin header is \"null\"\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2011-02-12T02:50:51Z",
        "closed_at": "2011-03-06T08:29:54Z",
        "merged_at": null,
        "body": "This is a small change to return the transport object as an argument to the socket.on('connect' , function(trans){..});  Currently nothing gets sent back down to the client, so the client can't get info like the sessionid.  This is a small change to return the transport object so that the client can find out what the session id is (as well as other information about the connection)\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2011-01-24T23:50:40Z",
        "closed_at": "2011-06-22T08:00:35Z",
        "merged_at": null,
        "body": "This is useful for throttling sends. I have rapidly-changing state\non the server, but I only need to send the most recent state to the\nclient - so if sendWillQueue() is true I wait for the 'readytosend'\nevent before sending the latest state.\n\n'readytosend' is emitted from _payload() after the connection state\nis set up, but before sending the content of the write queue; so\na readytosend callback can call send() and it will be sent immediately.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 39,
        "deletions": 17,
        "changed_files": 1,
        "created_at": "2011-01-24T07:01:55Z",
        "closed_at": "2011-03-30T23:14:56Z",
        "merged_at": null,
        "body": "Since Socket.IO has the built-in functionality for encoding and delivering multiple messages, I thought it would be convenient to wrap that up in some public interface on the Client object.\n\n```\nclient.bufferSends(funciton(){\n  //all client.send() calls in here are added to the queue\n  //and then the whole queue is sent after we return\n});\n```\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2011-01-22T09:02:00Z",
        "closed_at": "2011-03-06T16:32:32Z",
        "merged_at": null,
        "body": "For a multidomain webskypelike chat project, i need to fetch the host of connected clients. Should be great to put this too little modification in master branch if possible and if my modification is ok !\n\nNote 1: i'm noob using git AND node.js lol, thanks for your understanding !\nNote 2: freenode/franck34/#node.js if needed\n\nThanks\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2011-01-10T06:04:16Z",
        "closed_at": "2011-06-22T07:59:29Z",
        "merged_at": null,
        "body": "Hi!\n\nNode was crashing and dumping the following at stdout when the first connection attempt was made after all previous connections had been severed.\n\n```\n/home/thiago/Work/node/socket.io/Socket.IO-node/lib/socket.io/client.js:72\n    self.connection.destroy();\n                    ^\nTypeError: Cannot call method 'destroy' of null\n    at Stream.<anonymous> (/home/thiago/Work/node/socket.io/Socket.IO-node/lib/socket.io/client.js:72:21)\n    at Stream.emit (events:48:20)\n    at IOWatcher.callback (net:471:53)\n    at node.js:773:9\n```\n\nThis started happening after I ran \"npm update\" today. I tested it with your chat example code too, just to make sure my game's code had nothing to do with it.\n\nI figured it was because of line 73 in \"Socket.IO-node/lib/socket.io/client.js\" which read:\n\n```\nself.connection = null;\n```\n\nBefore I deleted that line I was able to reproduce that crash very easily, now it can't be triggered any longer.\n\nHope this helps!\n\n;)\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 9,
        "changed_files": 5,
        "created_at": "2011-01-09T17:05:38Z",
        "closed_at": "2011-01-09T23:44:32Z",
        "merged_at": null,
        "body": "I found out that there can be collisions with jQuery's way of fetching data through JSONP: jQuery appends the \"head\" tag OR appends document.documentElement. In case of appending the documentElement (e.g. <html>) socket.io tries to get the parentNode of <html> which is undefined, so .insertBefore() does not work anymore.\n\nI fixed that so socket.io uses the \"head\" tag to include JSONP scripts.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 47,
        "deletions": 47,
        "changed_files": 6,
        "created_at": "2011-01-06T09:57:41Z",
        "closed_at": "2011-03-06T08:27:54Z",
        "merged_at": null,
        "body": "I've converted all spaces to tabs in the client code to make it consistent.\n\nIMHO it would be better to stick to spaces just as the server code.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2011-01-05T12:27:14Z",
        "closed_at": "2011-01-06T03:18:22Z",
        "merged_at": "2011-01-05T19:18:22Z",
        "body": "This fixes https://github.com/LearnBoost/Socket.IO-node/issues/issue/119\n\nDon't destroy the connection in _onClose. Destroying\nit will prevent the buffers from being flushed and\nwill result in corrupted responses for the\nxhr-polling transport.\n\nAccording to the node documentation \"destroy\" is\nonly necessary in case of a errors.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2010-12-30T02:25:09Z",
        "closed_at": "2010-12-30T10:29:23Z",
        "merged_at": "2010-12-30T02:29:23Z",
        "body": "Socket.IO would not catch the JSON.parse exception if the payload was framed as JSON but contained an invalid JSON string. This would cause NodeJS to exit.\n\nThis patch wraps JSON.parse with a try/catch block which returns an empty object if parsing fails.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2010-12-24T08:48:22Z",
        "closed_at": "2010-12-24T21:02:07Z",
        "merged_at": null,
        "body": "Hi,\n\nAs I'm new to socket.io it took a bit to figure out I have to call <code>connect()</code> after creating a socket on the client. This patch adds the missing piece of code to the example.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1959,
        "deletions": 645,
        "changed_files": 38,
        "created_at": "2010-12-21T15:32:02Z",
        "closed_at": "2010-12-23T23:01:20Z",
        "merged_at": null,
        "body": "Make copy of events array before calling the listeners since it is possible that listeners are removed from within a listener.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1954,
        "deletions": 638,
        "changed_files": 38,
        "created_at": "2010-12-02T20:12:02Z",
        "closed_at": "2010-12-23T23:08:52Z",
        "merged_at": null,
        "body": "The sys module is deprecated in Node 0.3.X as it's renamed to util.js. This patch allows us to use the correct version of the sys / util library based on Node 0.3.X and Node 0.2.X. \n\nThis patch also removes the annoying: \n\n   The 'sys' module is now called 'util'. It should have a similar interface.\n\nMessage in node 0.3.X\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1948,
        "deletions": 632,
        "changed_files": 38,
        "created_at": "2010-12-02T17:45:13Z",
        "closed_at": "2010-12-23T23:10:38Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1947,
        "deletions": 631,
        "changed_files": 38,
        "created_at": "2010-11-26T07:13:00Z",
        "closed_at": "2010-12-23T23:25:04Z",
        "merged_at": null,
        "body": "The example code for the http server is out of date in the README file. I fixed it to be compatible with the latest stable release of Node (0.2.5).\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2010-11-22T17:38:28Z",
        "closed_at": "2010-12-23T23:35:01Z",
        "merged_at": null,
        "body": "When listening to the client 'connect' message, clients using the XHR and JSONP polling protocols have no request or response attribute so I can't get access to the cookies.  With both of these protocols, calling `_write()` calls `onClose()` and clears the requrst and response variables.  I've just made a change that keeps these around until the next request, so request.headers.cookies is still available.  Not sure if this is appropriate for the official repo, but it worked for me.\n\n```\nsocket.on('connection', function(client){\n  // client.request and client.response are both null\n});\n```\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1997,
        "deletions": 636,
        "changed_files": 38,
        "created_at": "2010-11-12T04:19:12Z",
        "closed_at": "2010-12-24T08:26:11Z",
        "merged_at": null,
        "body": "Here's a much cleaner pull request.  Sorry about all the noise in the previous one.  It was applied against an older version of Socket.IO\n\nThis might not be the best way to approach the problem, but it was good enough to get things working for my purposes.  The general approach is the one suggested by Willy Tarreau, the author of HAProxy.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 46,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2010-11-12T03:58:40Z",
        "closed_at": "2010-11-12T12:01:35Z",
        "merged_at": null,
        "body": "This is an old patch... re-sending a new one shortly.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 31,
        "deletions": 29,
        "changed_files": 1,
        "created_at": "2010-11-09T13:40:06Z",
        "closed_at": "2010-11-09T20:26:16Z",
        "merged_at": "2010-11-09T20:26:16Z",
        "body": "Hello all,\n\nThese are just a few grammar/consistency/pluralization fixes for the Socket.IO `README.md`. The content is unchanged, but the English is a bit more natural.\n\nJed\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 48,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2010-11-08T20:12:50Z",
        "closed_at": "2010-11-12T07:33:22Z",
        "merged_at": null,
        "body": "Added back the flashPolicyServer, but made it optional. Users can now disabled it through the options. If we can't start up a netServer because we need to listen on a restricted port socket.io will fallback to serving the files inline. \n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2010-11-06T21:51:29Z",
        "closed_at": "2010-12-24T00:47:43Z",
        "merged_at": null,
        "body": "This issue wasn't in the instructions, so I added a note for it.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 13,
        "changed_files": 2,
        "created_at": "2010-10-29T09:32:04Z",
        "closed_at": "2010-12-24T00:48:39Z",
        "merged_at": null,
        "body": "I made two updates to your great library: first I made the loading of transports depend on the transports that are defined in the options and made a small improvement to the list of available transports in the Readme.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 11,
        "changed_files": 1,
        "created_at": "2010-10-27T23:43:07Z",
        "closed_at": "2010-12-24T00:53:32Z",
        "merged_at": null,
        "body": "see http://github.com/LearnBoost/Socket.IO-node/issues#issue/57\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 41,
        "deletions": 20,
        "changed_files": 1,
        "created_at": "2010-10-24T23:06:57Z",
        "closed_at": "2010-10-29T11:21:26Z",
        "merged_at": "2010-10-29T11:21:26Z",
        "body": "Requiring that the server be run as root is generally considered a bad idea. This change listens on the target port for flash policy requests if the listener can't be started on port 843 (i.e. not root priveleged) and so it allows the flashsocket mode to work without root privelege.\n\nI also suggest reversing the warning so that running as root produces a warning instead. Or perhaps having a (different) warning for both.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2010-10-21T21:02:25Z",
        "closed_at": "2010-10-29T06:11:03Z",
        "merged_at": null,
        "body": "I'm sure it's obvious enough to most people, but took me a bit to figure out the missing `server.listen()` call in the example.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2129,
        "deletions": 801,
        "changed_files": 39,
        "created_at": "2010-10-17T10:27:56Z",
        "closed_at": "2010-12-08T22:52:27Z",
        "merged_at": null,
        "body": "Added benchmarking and some information on how to benchmark the Socket.io transport modules. \nWhat I noticed after running the benchmarks a couple of times on the server is that it doesn't release all memory. The benchmark currently only tests open and closing of the connections, not sending any messages yet, but this can be done with the wsbench by adding a \"session\" file.\n\nAnyways, theres a leak, and you can benchmark the server to expose it. \n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 34,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2010-10-11T22:54:30Z",
        "closed_at": "2010-12-24T01:12:21Z",
        "merged_at": null,
        "body": "Handling blacklists is unwieldy for any application that manages multiple groups that are all communicating. In my project, I'm using socket.io for basic chat, and also to pass other messages that relay people's status, or state, to other clients.\n\nIn all instances, a client should only be able to communicate with a small group of other clients, so a whitelist is preferable since enumerating all fo the clients they should not communicate with becomes increasingly difficult (and costly) as the number of users and groups grows.\n\nI thought briefly about overloading the broadcast method to accept either a whitelist, or a blacklist, but thought the code would be cleaner this way. I am open to suggestions.\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2010-10-11T09:41:50Z",
        "closed_at": "2010-12-24T00:55:29Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 19,
        "deletions": 19,
        "changed_files": 1,
        "created_at": "2010-10-06T08:59:00Z",
        "closed_at": "2010-10-06T12:21:25Z",
        "merged_at": "2010-10-06T12:21:25Z",
        "body": "Captures ECONNRESET issues so they don't bubble up to the uncaught exception handler in node.js \nAlso reduced the amount of .writes needed. \nAnd because we now close down the connection on error.. we also need to check the socket's readyState if we can write to it. \n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 38,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2010-10-04T19:36:32Z",
        "closed_at": "2010-10-05T02:43:39Z",
        "merged_at": "2010-10-04T19:43:39Z",
        "body": "Hi,\n\nhttp://speedo.no.de/ has been plagued with memory leaks for a while now. I have been debugging this issue since the end of NKO. I finally found the issues. After a ECONNECTRESET error occurred each request started taking about 1 MB per connection o_O ( still no clue why ) anyways I was able to backtrace all errors and capture them using the error event. By closing the connections in every possible way I was able to close several leaks. Yes, they all leaked...\n\nI have been running these patches for over a while now on 300 concurrent active streaming users and my memory usage has never been so low, normally I would been around 1 / 2 gig of memory, but now I run 250mb.\nAwsomenesss. \n\nWhile I was at it I also fixed a small bug that caught my attention. \n\nThe only issue that remains to be fixed is that some connected clients says queued up on the clientList as I'm still losing memory on that ( I know this because I log the length of the queue on each connection, and after a server reset the queue list is significantly smaller than the logged stats. ) Anyways that is another bug.\n\nGives us something to hunt after in future versions :)\n",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2010-10-02T10:29:45Z",
        "closed_at": "2010-12-24T01:11:16Z",
        "merged_at": null,
        "body": "There are some problems with current listener if custom resource is configured.\n\nSo you can als define resource: \"test/socket.io\"\nand send POST requests on http://domain/test/socket.io/...\n\nIt just cut more from the patch on check stage.\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 19,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2010-10-01T08:35:25Z",
        "closed_at": "2010-10-01T14:26:40Z",
        "merged_at": "2010-10-01T14:26:40Z",
        "body": "I've fixed the COR headers - so cross domain ajax works across different ports.\n\nI've also added npm support, but you might not want to include that yet.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2010-09-20T19:40:30Z",
        "closed_at": "2010-10-29T06:08:57Z",
        "merged_at": null,
        "body": "Typo :)\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2010-09-17T21:55:25Z",
        "closed_at": "2010-09-17T23:06:34Z",
        "merged_at": "2010-09-17T23:06:34Z",
        "body": "While I was the \"ECONNRESET, Connection reset by peer\" issues that are being caused by socket.io I stumbled on some weird code. \n\nThese patches should make the code more sense, improve overall performance and actually prevent a few bugs from happening. \n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 323,
        "deletions": 0,
        "changed_files": 4,
        "created_at": "2010-09-17T03:22:54Z",
        "closed_at": "2010-12-24T00:56:01Z",
        "merged_at": null,
        "body": "Not sure if you want this but it is just another simple example. Is based of the the [Issue 20](http://github.com/LearnBoost/Socket.IO-node/issues/20)\n",
        "comments": 1
    }
]