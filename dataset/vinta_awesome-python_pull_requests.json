[
    {
        "merged": false,
        "additions": 64,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-10-16T07:34:46Z",
        "closed_at": "2023-10-17T03:53:31Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-02T03:14:11Z",
        "closed_at": "2023-09-22T17:05:17Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-07-12T23:50:48Z",
        "closed_at": "2023-07-13T15:37:09Z",
        "merged_at": "2023-07-13T15:37:09Z",
        "body": "This open source project provides lighting fast capabilities for PyTorch training code.\r\nIt is explained in details in this post - https://magazine.sebastianraschka.com/p/accelerating-pytorch-model-training\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-07-09T03:43:02Z",
        "closed_at": "2023-09-26T19:52:06Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\nImageKit is a Django app that helps you to add variations of uploaded images to your models. These variations are called \u201cspecs\u201d and can include things like different sizes (e.g. thumbnails) and black and white versions.\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nIs faster and is integrated with Django models\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-05-17T07:55:22Z",
        "closed_at": "2023-05-17T10:47:48Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n[CustomTkinter](https://github.com/TomSchimansky/CustomTkinter) is a modern UI library based on tkinter\r\n\r\n## Features\r\n\r\n+ Can be used along side with tkinter\r\n+ Respects OS appearance(can be adjusted manually too)\r\n+ Has support for HighDPI scaling on windows and macos\r\n+ Consistent look across all OS\r\n+ Anyone with basic tkinter knowledge can easily use this\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\ntkinter is very easy to learn without the steep learning curve that comes with other GUI frameworks,being based on tkinter and without the ugly windows I think CustomTkinter is awesome and belongs here :cake:\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-04-11T10:17:45Z",
        "closed_at": "2023-04-12T15:40:58Z",
        "merged_at": null,
        "body": "minor spelling correction to readme.md document.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-04-05T04:09:21Z",
        "closed_at": "2023-04-22T16:40:32Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nA library that provides access to the full Project Gutenberg dataset.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere are no other maintained libraries I could find for accessing Project Gutenberg.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-03-24T23:08:39Z",
        "closed_at": "2023-03-27T14:18:30Z",
        "merged_at": "2023-03-27T14:18:30Z",
        "body": "Fixed issue #2398 by changing the name of the \"Files\" section so it doesn't link to the actual files of the project.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-03-24T20:40:33Z",
        "closed_at": "2023-03-27T14:17:32Z",
        "merged_at": "2023-03-27T14:17:32Z",
        "body": "Fixed Zappa github project link as it moved to a new repository under https://github.com/zappa/Zappa\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 957,
        "deletions": 956,
        "changed_files": 1,
        "created_at": "2023-02-25T02:08:48Z",
        "closed_at": "2023-02-25T12:17:37Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nGlobal custom management extensions for the Django Framework.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nSome of the items this library offers\r\n\r\n- Command extensions\r\n - generate graph models\r\n - shell plus\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-02-17T15:19:14Z",
        "closed_at": "2023-04-09T04:33:09Z",
        "merged_at": null,
        "body": "Hi @vinta,\r\n\r\nI came across your repository [awesome-python](https://github.com/vinta/awesome-python) and found it to be a valuable resource for Python enthusiasts.\r\n\r\nWhile browsing through the repository, I noticed that it was missing links to any structured guides such as the famous [\"Python Developer Roadmap\"](https://roadmap.sh/python). I took the initiative to submit a [\"Pull Request\"](https://github.com/vinta/awesome-python/pull/2355) adding it in others section.\r\n\r\nThank you for your time and effort in maintaining this valuable resource :)\r\n\r\nBest,\r\nMouaaz\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-02-13T06:16:22Z",
        "closed_at": "2023-03-30T03:40:02Z",
        "merged_at": "2023-03-30T03:40:01Z",
        "body": "Add audioFlux: A library for audio and music analysis, feature extraction.\r\n\r\n## What is this Python project?\r\n\r\nA library for audio and music analysis and feature extraction, which supports dozens of time-frequency analysis and transformation methods, as well as hundreds of corresponding time-domain and frequency-domain feature combinations, can be provided to the deep learning network for training, and can be used to study the classification, separation, music information retrieval (MIR), ASR and other tasks in the audio field.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Systematic and multi-dimensional feature extraction and combination can be flexibly used for various task research and analysis\r\n- The performance is efficient, the core is mostly implemented in C, and FFT hardware acceleration based on different platforms is convenient for large-scale data feature extraction.\r\n- It is applicable to the mobile end and supports real-time calculation of audio stream at the mobile end.\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 39,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-02-08T11:36:58Z",
        "closed_at": "2023-02-08T17:18:00Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-02-06T10:44:06Z",
        "closed_at": "2023-07-01T08:33:40Z",
        "merged_at": "2023-07-01T08:33:40Z",
        "body": "Old link was just the old pyston repository with a readme.\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-02-04T14:36:57Z",
        "closed_at": "2023-02-05T23:24:37Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n[roadmap.sh](https://roadmap.sh) is an opensource project with community curated roadmaps and visual guides for developers. Linked resource is the roadmap for learning Python.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere is any other similar roadmap in the list.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-01-12T10:21:35Z",
        "closed_at": "2023-05-22T19:27:20Z",
        "merged_at": null,
        "body": "added a new library sounddevice in the audio section ",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-01-03T18:11:35Z",
        "closed_at": "2023-01-05T12:29:52Z",
        "merged_at": "2023-01-05T12:29:52Z",
        "body": "## What is this (abandoned) Python project?\r\n\r\npyannotate has had its last update in 2019 and has [major/breaking bugs](https://github.com/dropbox/pyannotate/issues/92).\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-12-28T20:49:16Z",
        "closed_at": "2023-01-18T14:55:54Z",
        "merged_at": null,
        "body": "## Streamlit\r\n\r\n\"The fastest way to build data apps in Python\"\r\n\r\nThis is basically Python's version of RStudio/Posit's Shiny for creating data web applications.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-12-03T09:22:27Z",
        "closed_at": "2022-12-04T11:58:03Z",
        "merged_at": "2022-12-04T11:58:03Z",
        "body": null,
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-10-23T08:50:23Z",
        "closed_at": "2022-10-24T17:34:27Z",
        "merged_at": "2022-10-24T17:34:27Z",
        "body": "redirected pyqt to link to official docs, which is more useful for a beginner\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-10-01T23:49:03Z",
        "closed_at": "2022-10-02T15:59:07Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-10-01T13:55:47Z",
        "closed_at": "2022-10-24T17:35:07Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-09-16T14:57:40Z",
        "closed_at": "2023-01-13T20:27:51Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\nShiny makes it easy to build interactive web applications with the power of Python\u2019s data and scientific stack.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n-  Write your application in Python; no web development skills required.\r\n- Built from the ground up to support custom layouts, styles, and the modularity required for full-fledged applications, all from Python.\r\n- Uses reactivity to efficiently handle data processing and minimize expensive re-computations.\r\n\r\n\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-08-29T12:48:20Z",
        "closed_at": "2022-09-08T04:50:17Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nThis Project Tries To Bring Cool Things From Other Languages To Python. For Example:\r\n\r\n* One Line Conditions In C++\r\n* PHP Interfaces\r\n* C++ Switch-Case\r\n\r\nBut For Sure It Has Some Differences To That Languages Too. It Has Common Data Types With Some Cool Options Too. For Example `PyshaString` ( There Is Other DataTypes Like `PyshaDict` And `PyshaList` Too. ) That Has:\r\n*  `<<` Operator For Append To And String\r\n* `+=` Operator To Append To An String With Setting Changes\r\n* `>>` Operator To Prepend To An String\r\n*  `replace_dict` To Replace All Keys Of Dict With Values\r\n* Lots Of Other Cool Things :)\r\n\r\nPysha Has A New Ability To Get An Array With a Huge Dimontions From Input With `Loop` Class. It Has A `Crossplatformer` That Helps You Make Your Application Crossplatform Easier.It Has Cool Decorators Like `retry`,`ignore`,`once`,`timer` and `interface`. It Has a `PercentPrinter` That can make a Progressbar for you In Command Line. And Lots Of Other Cool Options :) You Can Check For More If You Want.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nI Personally Did'nt Saw Any Python Library Or Framework That Give You Option To Use `Switch Case`, `PHP Interface` Or `C++ One Line Conditions`. I Admit Its A Little Bit Different But I Think Still Its Cool :)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-08-20T15:42:17Z",
        "closed_at": "2022-12-24T04:01:18Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n`PyCryptodome` It is a library that can replace pycrypto.\r\n`SageMath` It has a lot of features in the field of mathematics.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt provides various features related to cryptography.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-08-01T15:34:54Z",
        "closed_at": "2022-08-13T04:00:33Z",
        "merged_at": null,
        "body": "Added https in the LICENSES sections and removed http for the creative standard reference web address! ",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-07-27T10:39:32Z",
        "closed_at": "2022-07-27T19:24:27Z",
        "merged_at": null,
        "body": "Add FastAPI in Asynchronous Web Frameworks",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-07-26T09:29:44Z",
        "closed_at": "2022-07-27T03:39:21Z",
        "merged_at": "2022-07-27T03:39:21Z",
        "body": "In line 226: dogpile.cache is next generation replacement for Beaker made by same authors ->  dogpile.cache is a next generation replacement for Beaker made by the same authors.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-07-12T18:40:37Z",
        "closed_at": "2022-11-06T18:14:56Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n This Library a Audio Validator For Django With d MIME type checking the magic numbers signature And Extension Use FileType Library \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nthis library is first audio validator for django\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-06-30T01:38:32Z",
        "closed_at": "2022-07-04T00:22:23Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nPycord is a discord API wrapper used for building discord bots and webhooks.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nPycord (in my opinion) has:\r\n* a better community\r\n* more support\r\n* faster updates and development\r\n* it's also more consistent since discord.py was stopped then restarted\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-06-25T12:31:51Z",
        "closed_at": "2022-10-07T05:04:53Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\nContains every basic python resource a beginner into python needs.\r\nContains YT creators, cheatsheets, podcasts, newsletters, blogs, yt playlists, twitter creators. official links, ebooks, documentation sites and many more.\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nCompiled. well structured info.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 876,
        "deletions": 875,
        "changed_files": 1,
        "created_at": "2022-05-04T02:13:58Z",
        "closed_at": "2022-05-17T02:30:51Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nIt spins up a testing environment on your local machine that provides the same functionality and APIs as the real AWS cloud environment.\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-04-29T14:18:30Z",
        "closed_at": "2023-01-12T13:59:44Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\naiomysql is a \"driver\" for accessing a MySQL database from the [asyncio](http://docs.python.org/3.5/library/asyncio.html) (PEP-3156/tulip) framework. It depends on and reuses most parts of [PyMySQL](https://github.com/PyMySQL/PyMySQL) .\r\n\r\naiopg is a library for accessing a [PostgreSQL](http://www.postgresql.org/) database from the [asyncio](https://docs.python.org/3/library/asyncio.html) (PEP-3156/tulip) framework.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThese db drivers operate asynchronously.\r\nMore details are as above.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-04-21T20:15:26Z",
        "closed_at": "2023-04-09T14:43:37Z",
        "merged_at": null,
        "body": "The project recently got several updates. The maintainer changed and the PyPI page links to all recent pages.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-04-15T23:19:06Z",
        "closed_at": "2022-07-23T03:49:58Z",
        "merged_at": null,
        "body": "An awesome, dead simple C gamedev library with Python bindings.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-04-10T20:01:54Z",
        "closed_at": "2022-07-29T04:33:42Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nStreamlit turns data scripts into shareable web apps in minutes.\r\nAll in pure Python. No front\u2011end experience required.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nUsing pure python, no additional libraries are needed. Ease of use is prioritized.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-04-05T16:32:47Z",
        "closed_at": "2022-04-06T11:42:20Z",
        "merged_at": null,
        "body": " Download anything from Instagram with this robot\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-01-21T14:28:13Z",
        "closed_at": "2022-01-22T20:09:35Z",
        "merged_at": null,
        "body": "The libraries in this category allow for much more than just geolocation, so rather than starting a different category we can just rename this one.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-01-21T14:22:57Z",
        "closed_at": "2022-01-22T20:09:58Z",
        "merged_at": null,
        "body": "Cartopy is more than just a visulization library: \"Python package designed for geospatial data processing in order to produce maps and other geospatial data analyses\".",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-01-21T14:21:06Z",
        "closed_at": "2022-01-22T20:10:39Z",
        "merged_at": null,
        "body": "Popular library for working with geographic data on top of Panads - 3k stars and 667 forks on Github.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-01-04T15:45:49Z",
        "closed_at": "2022-05-24T03:53:54Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nThis project is a fork of discord.py. Help discord.py alive.\r\n\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 982,
        "deletions": 982,
        "changed_files": 1,
        "created_at": "2021-11-15T13:11:21Z",
        "closed_at": "2021-11-15T16:33:25Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nA bidirectional UTM-WGS84 converter.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n-\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-11-01T18:27:38Z",
        "closed_at": "2022-07-13T17:32:49Z",
        "merged_at": null,
        "body": "minor change to link saleor to its github page instead of the website, being consistent with other projects\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-10-14T14:49:05Z",
        "closed_at": "2022-06-06T11:45:41Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\npython-nmap is a python library which helps in using nmap port scanner. It allows to easilly manipulate nmap scan results and will be a perfect tool for systems administrators who want to automatize scanning task and reports. It also supports nmap script outputs.([Source Text](https://pypi.org/project/python-nmap/))\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThe fsociety project also uses Nmap (binary) for information gathering. With python-nmap you can easily use nmap in your own script. \r\n\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-10-10T23:26:57Z",
        "closed_at": "2023-02-17T02:42:13Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\npyodbc is an open source Python module that makes accessing ODBC databases simple. It implements the DB API 2.0 specification but is packed with even more Pythonic convenience.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nFound no similar odbc projects.\r\n\r\nThis python module allows connecting to all kinds of persistent storage with support for odbc like Microsoft Access, Microsoft Excel, Google Big Query, Teradata, Vertica, Hive and more.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-08-27T01:07:30Z",
        "closed_at": "2022-06-06T00:23:59Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nThis python project is called Flask-SocketIO.\r\n\r\nThe Link : https://flask-socketio.readthedocs.io\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nWhat makes this python project different is that its geared toward flask applications to allow you to implement real time communication between client and server using socketIO.\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-07-25T07:03:59Z",
        "closed_at": "2021-07-25T12:53:55Z",
        "merged_at": "2021-07-25T12:53:55Z",
        "body": "fixed a typo on line 5.\r\n\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2021-07-25T06:57:26Z",
        "closed_at": "2021-07-25T12:54:29Z",
        "merged_at": "2021-07-25T12:54:29Z",
        "body": "\r\nfixed a few things in the readme :)\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-07-20T21:18:09Z",
        "closed_at": "2021-08-29T05:56:28Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nan easy to use wrapper for the Discord API. (https://github.com/Rapptz/discord.py)\r\n## What's the difference between this Python project and similar ones?\r\n\r\n1. async\r\n2. feature-rich\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-06-27T18:43:44Z",
        "closed_at": "2023-08-06T02:53:21Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nThis is an AutoML package as an alternative from popular methods inside scikit-learn, such as Grid Search and Randomized Grid Search.\r\n\r\nSklearn-genetic-opt uses evolutionary algorithms to choose the set of hyperparameters that optimizes the cross-validation scores, it can be used for both regression and classification problems with a scikit-learn alike API.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* It uses AI for the optimization process, instead of brute force approach like GridSearch.\r\n* It adds several features missing in similar packages, worth to mention:\r\n   - **Callbacks:** Allows to monitor, save the models and stop the training when some of several possible criteria is met, such as the model has run for a long time, a threshold metric was achieved, etc. It even allows the user to create a custom callback.\r\n   - **Plotting:** It was several build-in plotting functionalities to help the user understand the optimization process and take decisions over the models.\r\n   - **Tensorboard:** It can log with just a single line of code all the evaluation metrics to a tensorboard instance to monitor the training.\r\n   - **MLflow:** With one single config class, log all the metrics, models, hyperparameters of each run into a MLflow server.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-06-18T15:36:29Z",
        "closed_at": "2021-09-13T18:19:54Z",
        "merged_at": null,
        "body": "Quick Summary\r\n---------------------\r\n* add pikepdf and PyMuPDF, two powerful and well-supported PDF libraries for Python\r\n* include a note that PyPDF2 is pure-python and unmaintained",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-06-10T11:39:24Z",
        "closed_at": "2021-12-03T13:40:13Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nOpen-source Python wrapper for google speech to text API and also works with hugging face transformers\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n[Speech_recognition](https://github.com/Uberi/speech_recognition) is an alternative to easySpeech but sometimes people face issues while installing its dependencies but this doesn't occur with easySpeech\r\n\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-06-10T08:41:16Z",
        "closed_at": "2021-09-12T12:13:38Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\npyreports is a python library that allows you to create complex reports from various sources such as databases, text files, ldap, etc. and perform processing, filters, counters, etc. and then export or write them in various formats or in databases.\r\n\r\nYou can use this library for complex reports, or to simply filter data into datasets divided by topic. Furthermore, it is possible to export in various formats, such as csv, excel files or write directly to the database (mysql, mssql, postgresql and more).\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* Capture any type of data\r\n* Export data in many formats\r\n* Data analysis\r\n* Process data with filters and maps\r\n* Some functions will help you to process averages, percentages and much more\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-06-10T08:37:20Z",
        "closed_at": "2021-09-12T12:14:13Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nThis is a library that allows you to create preview images, make logos, create a font pages for marketing, make a font banner for web and font booklet from one or more selected fonts.\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* Based on Pillow library\r\n* It is a specific font library\r\n* Whit this library is possible to create a complex image with font: [FiraCode exmple with python](https://github.com/MatteoGuadrini/fontpreview#advanced-usage)\r\n* Make a logos with one or two letters, like [Typescript logo](https://fontpreview.readthedocs.io/en/latest/example.html#fontlogo-example)\r\n* Dynamically creation of text banner with code for the web framework, like Flask or Django\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an Approve review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-06-10T08:32:02Z",
        "closed_at": "2021-09-12T12:14:28Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\ndinosay is a humble, simple, nice and paleolithic alternative to cowsay command line tool.\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* It can be used directly in the command line\r\n* It can be used as a python library to beautify scripts\r\n* It can be used to build custom command lines\r\n* Use a custom files\r\n* Customize eye, tongue, comic and behavior of the dinosaur than has been printed\r\n* List all dinosaur, behavior and parts with only one command: dinolist\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-06-04T14:41:28Z",
        "closed_at": "2023-08-30T20:20:54Z",
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-05-25T11:00:28Z",
        "closed_at": "2022-06-23T20:25:33Z",
        "merged_at": null,
        "body": "## Disclaimer\r\n\r\nI am not involved with the publisher or the author in any way. I simply think this is a very valuable book.\r\n\r\n\r\n## What is this Python project?\r\n\r\n_Effective Python_ is one of the most in-depth and helpful books out there. It covers all kinds of topics and pitfalls and proposes several quasi-standards to deal with them.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Where other resources describe the how to achieve a thing in Python, this book explains the why and the reason of doing it this way. \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-05-18T09:31:18Z",
        "closed_at": "2022-09-02T04:09:41Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nA Neural Search framework to implement AI powered semantic search in your project\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* Based on Neural Networks\r\n* Works on pre-trained Neural Network models, saving time and efforts\r\n* Decentralized architecture\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-05-07T06:54:07Z",
        "closed_at": "2022-06-14T19:31:49Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nA suite of utilities for AWS Lambda functions to ease adopting best practices such as tracing, structured logging, custom metrics async, parameters and secrets management, idempotency, and more.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n**Tenets**\r\n\r\nThis project separates core utilities that will be available in other runtimes vs general utilities that might not be available across all runtimes.\r\n\r\n- **AWS Lambda only** We optimise for AWS Lambda function environments and supported runtimes only. Utilities might work with web frameworks and non-Lambda environments, though they are not officially supported.\r\n- **Eases the adoption of best practices**. The main priority of the utilities is to facilitate best practices adoption, as defined in the AWS Well-Architected Serverless Lens; all other functionality is optional.\r\n- **Keep it lean**. Additional dependencies are carefully considered for security and ease of maintenance, and prevent negatively impacting startup time.\r\n- **We strive for backwards compatibility**. New features and changes should keep backwards compatibility. If a breaking change cannot be avoided, the deprecation and migration process should be clearly defined.\r\n- **We work backwards from the community**. We aim to strike a balance of what would work best for 80% of customers. Emerging practices are considered and discussed via Requests for Comment (RFCs)\r\nIdiomatic. Utilities follow programming language idioms and language-specific best practices.\r\n\r\n**Highlighted Features**\r\n\r\n- **Tracing** - Decorators and utilities to trace Lambda function handlers, and both synchronous and asynchronous functions\r\n- **Logging** - Structured logging made easier, and decorator to enrich structured logging with key Lambda context details\r\n- **Metrics** - Custom Metrics created asynchronously via CloudWatch Embedded Metric Format (EMF)\r\nBring your own middleware - Decorator factory to create your own middleware to run logic before, and after each Lambda invocation\r\n- **Parameters utility** - Retrieve and cache parameter values from Parameter Store, Secrets Manager, or DynamoDB\r\n- **Batch processing** - Handle partial failures for AWS SQS batch processing\r\n- **Typing** - Static typing classes to speedup development in your IDE\r\n- **Validation** - JSON Schema validator for inbound events and responses\r\n- **Event source data classes** - Data classes describing the schema of common Lambda event triggers\r\n- **Parser** - Data parsing and deep validation using Pydantic\r\n- **Idempotency** - Convert your Lambda functions into idempotent operations which are safe to retry\r\n- **Event Handler** - Decorators to help simplify AppSync [GraphQL] and API Gateway events. Think Flask for AWS Lambda\r\n- **Feature Flags** - A simple rule engine to evaluate when one or multiple features should be enabled depending on the input\r\n\r\n**More info**\r\n\r\n- [AWS Lambda Powertools - GitHub](https://github.com/awslabs/aws-lambda-powertools-python)\r\n- [AWS Lambda Powertools - Docs](https://awslabs.github.io/aws-lambda-powertools-python/latest/)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-04-08T12:14:33Z",
        "closed_at": "2021-11-06T18:36:07Z",
        "merged_at": null,
        "body": "section newsletters - add freecodecamp python articles collection",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-04-01T08:41:08Z",
        "closed_at": "2021-04-23T03:28:04Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nThis is a link to a curated list of real-world python projects.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- link to multiple python projects with user-story & deliverables\r\n- community of python developers \r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-03-18T08:24:15Z",
        "closed_at": "2021-06-10T08:28:45Z",
        "merged_at": null,
        "body": "## fontpreview: What is this Python project?\r\n\r\nThis is a library that allows you to create preview images from one or more selected fonts.\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* Based on Pillow library\r\n* It is a specific font library\r\n\r\n\r\n## dinosay: What is this Python project?\r\n\r\ndinosay is a humble, simple, nice and paleolithic alternative to cowsay.\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* It can be used directly in the command line\r\n* It can be used as a python library to beautify scripts\r\n* It can be used to build custom command lines\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-03-06T16:47:50Z",
        "closed_at": "2023-04-12T21:06:55Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n`pdbr` is intended to make the PDB results more colorful. it uses Rich library to carry out that.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- New commands\r\n- IPython support\r\n- Celery support\r\n- Custom rich styles.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2021-02-13T16:36:09Z",
        "closed_at": "2021-03-27T14:21:46Z",
        "merged_at": null,
        "body": "Hi, i'm Danix, a Python developer/Pythonista, i sorry if my english is bad but i only speak spanish.  I viewed Awersome Python repository and i wanted to contribute to it! In my contribution, i added the new Pylance to the Plugins/IDE's category, and the Ursina Engine framework to the Game Development category, i updated the Panda3D description to add the 2, i added the \"awesome\" Python Land to Resources/Tutorial Websites category and i added Awesome Python in Education why it's creator, [quobit](https://github.com/quobit) gived me permission to do it,.\r\n\r\nQuestions:\r\nQ: Why Ursina Engine is \"awesome\".\r\nA: Ursina Engine is \"awesome\" why is based in the Panda3D game development framework but compared to Panda3D it's really easy to use and it's a good first shoot for beginners in 3D game development (i think).\r\nQ: Why Pylance is \"awesome\".\r\nA: Pylance is a Microsoft official extension for VSCode that adds some incredible functions to the programming with Python (i don't used it but look really good), that is why it's \"awesome\".\r\nQ: What you updated from the Panda3D description.\r\nA: I added the 2D support to the description.\r\nQ: Why Python Land is \"awesome\".\r\nA: It's \"awesome\" why it Python Tutorial is soo easy for beginners (and experienced developers), and it's really complete.\r\nQ: Why Awesome Python in Education is \"awesome\".\r\nA: It's \"Awesome\" why it have a lot's of Python learning resources, game engine and more! It haves more of 500 starts and 100 forks! So, it don't needs explication.\r\n\r\nWell, i hope you like my contribution and accept it.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-02-03T23:19:36Z",
        "closed_at": "2021-02-04T06:00:05Z",
        "merged_at": "2021-02-04T06:00:05Z",
        "body": "Fixes dramatiq spelling.\r\n`daramatiq` -> `dramatiq`",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-01-30T13:45:16Z",
        "closed_at": "2023-08-25T22:57:50Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n[PyG2Plot](https://github.com/hustcc/PyG2Plot) is a Python3 binding for [@AntV/G2Plot]( https://github.com/antvis/G2Plot) which an interactive and responsive charting library. Based on the grammar of graphics, you can easily make superior statistical charts through a few lines of code. \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n1. based on AntV G2, the grammar of graphic\r\n2. easy to create common plots\r\n3. jupyter supported\r\n\r\nAlso pr to [awesome-javascript](https://github.com/sorrycc/awesome-javascript/pull/760).\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-01-25T02:05:12Z",
        "closed_at": "2021-01-25T05:15:25Z",
        "merged_at": "2021-01-25T05:15:25Z",
        "body": "resolve #1713\r\n\r\n## What is this Python project?\r\n\r\nGunicorn 'Green Unicorn' is a Python WSGI HTTP Server for UNIX. It's a pre-fork worker model. The Gunicorn server is broadly compatible with various web frameworks, simply implemented, light on server resources, and fairly speedy.\r\n\r\nhttps://gunicorn.org/\r\nhttps://github.com/benoitc/gunicorn\r\nhttps://en.wikipedia.org/wiki/Gunicorn\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-01-21T16:28:33Z",
        "closed_at": "2021-01-22T10:24:03Z",
        "merged_at": "2021-01-22T10:24:03Z",
        "body": "## What is this Python project?\r\n\r\nIt is a SQlite interface in the Python standard library\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt is in the python standard library\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-01-16T20:41:38Z",
        "closed_at": "2021-01-21T13:21:21Z",
        "merged_at": "2021-01-21T13:21:21Z",
        "body": "## What is this Python project?\r\n\r\nClickHouse Python Driver with native (TCP) interface support.\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* It allows to have an excellent driver of Python for ClickHouse\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-01-08T10:42:36Z",
        "closed_at": "2021-01-22T10:23:17Z",
        "merged_at": "2021-01-22T10:23:17Z",
        "body": "Repo is no longer supported, is archived and read-only. Maintainer is recommending people use the Maxmind's GeoIP2 Python API.\r\nMaxmind's GeoIP2 Python API.: https://github.com/maxmind/GeoIP2-python\r\npygeoip: https://github.com/appliedsec/pygeoip\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-01-08T10:27:43Z",
        "closed_at": "2021-01-22T10:22:54Z",
        "merged_at": "2021-01-22T10:22:54Z",
        "body": "Remove the profiling repo as it has been archived and no longer maintained. The repo owner is highly recommending people switching to py-spy which provides better performance and usability.\r\nRepo: https://github.com/what-studio/profiling\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-12-26T23:35:17Z",
        "closed_at": "2021-01-26T17:43:25Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nThis project is a website blog-alike with plenty of articles that teach you a lot of different Python topics.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n1. The content ranges from beginner to advanced.\r\n2. Provides you with useful examples.\r\n3. The blog gets updated with new features.\r\n4. There's a newsletter you can subscribe to that sends you regular emails with tips and tricks about Python.\r\n5. Concise content. Explained in a way that is useful to understand.\r\n6. Easy to navigate through (links previous tutorials when needed.)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-12-04T14:10:04Z",
        "closed_at": "2020-12-04T16:13:05Z",
        "merged_at": "2020-12-04T16:13:05Z",
        "body": "Hey @vinta \r\n\r\njust improving the readability a bit..\r\n\r\nCheers!",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-12-03T14:46:01Z",
        "closed_at": "2022-04-07T01:45:28Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nPipenv is a well-known package and virtualenv manage tool under the PyPA namespace.\r\n\r\nPDM is a new developed package manager that supports [PEP 582](https://www.python.org/dev/peps/pep-0582/) and a bunch of fancy features\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-11-22T20:17:45Z",
        "closed_at": "2021-01-16T15:48:40Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nThis is one of the most popular books of all time focusing on Python.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis book is geared toward people newer to the language and uses a practical approach to solidify concepts.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-11-17T11:34:53Z",
        "closed_at": "2020-11-17T17:13:08Z",
        "merged_at": "2020-11-17T17:13:08Z",
        "body": "Just a quick correction to the table of contents - based on PR #1677. Thanks.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-11-13T16:47:31Z",
        "closed_at": "2020-11-17T04:54:53Z",
        "merged_at": "2020-11-17T04:54:53Z",
        "body": "## What is this Python project?\r\n\r\n[Zato](https://zato.io) is a full-featured open-source enterprise integration platform in Python - a scalable, high-performance service bus for SOA, APIs, publish/subscribe topics, guaranteed delivery message queues, file transfer and Single Sign-On.\r\n\r\nBuilt in features include high-availability clusters, servers, web-admin GUI, scheduler and dozens of protocols supported out of the box, such as REST, SOAP, IBM MQ, SAP, Odoo, AMQP, ZeroMQ, AWS, OpenStack, FTP, SFTP, ElasticSearch, Redis, MongoDB, SQL, e-mail, SMS and much, much more.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere is no other project like this in Python.\r\n\r\n## Voting\r\n\r\nAnyone who agrees with this pull request can vote for it by adding a :+1: to it and the maintainer will merge it when votes reach 20 or more.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-11-11T10:44:07Z",
        "closed_at": "2022-05-23T08:01:17Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nFlask-State is a lightweight chart plugin to show machine state.\r\n\r\n- Monitoring indicators: CPU, Memory, Disk usage, LoadAVG, Boot time.\r\n- Extensible: It has rich options for extended functions, including redis monitoring, user authentication, custom logging, i18n and etc.\r\n- Stable: Lightweight dependencies, meanwhile solving multi-progress concurrency problems (if you use gunicorn).\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nI don't know other similar Python projects.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-11-11T10:03:11Z",
        "closed_at": "2021-01-29T11:08:26Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nfile-system utilities for lazy devs.\r\n- Simple and intuitive.\r\n- Zero dependencies.\r\n- Compatibile with python 2 and 3.\r\n- Well tested.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nI don't know similar libraries.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-11-03T11:00:50Z",
        "closed_at": "2020-11-18T06:46:33Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n*Think Python: How to Think Like a Computer Scientist* is a book on python released under the GNU Free Documentation license. This book does not take the usual approach by other tutorials on teaching how to program with python but it teaches you to understand programs and solve problems efficiently.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Instead of just teaching programming with python, teaches you to solve problems too.\r\n- Comparing it to other books, this book also teaches you to understand how programs work while learning python.\r\n- Comparatively bigger than other resources but can be very useful for people who does not just want to learn scripting with python but to make programs for scientific research and production uses.\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-11-03T07:50:39Z",
        "closed_at": "2020-11-04T17:07:48Z",
        "merged_at": "2020-11-04T17:07:48Z",
        "body": "This looks like a typo @vinta...\r\n\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2020-10-25T17:46:34Z",
        "closed_at": "2020-10-25T22:12:25Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\nAdding some code\r\nAdding some code\r\nAdding some code\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-10-20T20:49:37Z",
        "closed_at": "2020-10-21T12:42:48Z",
        "merged_at": "2020-10-21T12:42:48Z",
        "body": "This can be seen by following the link at the top of https://github.com/mitsuhiko/python-modernize readme",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-10-16T08:12:00Z",
        "closed_at": "2020-10-17T13:51:40Z",
        "merged_at": "2020-10-17T13:51:40Z",
        "body": "Hey @vinta \r\n\r\njust fixing the celery link - website is down.\r\n\r\nCheers!",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 59,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-10-06T08:29:31Z",
        "closed_at": "2023-04-07T06:16:51Z",
        "merged_at": null,
        "body": "Added These Files Essential for Change log. It is automatic. I worked on this because this issue was open. \r\nIf you want this Automatic Change log generator. Simply Merge this PR\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 75,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-10-06T08:27:59Z",
        "closed_at": "2023-04-07T06:16:51Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-10-05T12:36:23Z",
        "closed_at": "2020-10-05T13:53:03Z",
        "merged_at": null,
        "body": "## Python Function which accepts the radius of a circle from the user and computes the area.\r\n\r\nThe function has an area of circle formula which implements when the user passes the radius value during the function call\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt can be differently created but by using function it can be reused\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 17,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-10-05T07:05:53Z",
        "closed_at": "2020-10-05T11:05:47Z",
        "merged_at": null,
        "body": "Python Program to Illustrate Different Set Operations\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-10-05T06:19:01Z",
        "closed_at": "2020-10-05T11:05:47Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 23,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-10-04T04:38:37Z",
        "closed_at": "2020-10-05T11:05:47Z",
        "merged_at": null,
        "body": "program to Check Leap Year using Python\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 31,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-10-04T04:23:15Z",
        "closed_at": "2020-10-05T11:05:46Z",
        "merged_at": null,
        "body": "\u2026odd numbers in descending  order.\r\n\r\nprogram to sort even numbers in  ascending order ,then odd numbers in descending  order\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-10-03T15:56:50Z",
        "closed_at": "2020-10-04T17:56:50Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-10-03T11:16:49Z",
        "closed_at": "2020-10-05T13:54:02Z",
        "merged_at": "2020-10-05T13:54:02Z",
        "body": "## What is this Python project?\r\n\r\nOpenAI Gym is a toolkit for developing and comparing reinforcement learning algorithms. This is the gym open-source library, which gives you access to a standardized set of environments.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n- Contains a variety of RL environments that are easy to set up and use\r\n- Assures standardization of environments used in publications\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-10-03T03:28:42Z",
        "closed_at": "2020-10-28T03:38:48Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nThe ProxyRequests Library first scrapes proxies from the web. Then it recursively attempts to make a request if the initial request with a proxy is unsuccessful..\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nProxyRequests library used Proxies for GET/POST requests.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-10-01T23:01:45Z",
        "closed_at": "2022-10-19T00:25:42Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nhttps://learnxinyminutes.com/docs/python/ is a comprehensive guide to python. It includes everything from simple operations to generators. \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nWhile other projects are book based, this project shows you how to use python inline using comments. It is much easier than other books in this way.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-10-01T17:18:40Z",
        "closed_at": "2020-10-06T07:31:36Z",
        "merged_at": null,
        "body": "docs name\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-10-01T11:23:25Z",
        "closed_at": "2020-10-06T07:31:56Z",
        "merged_at": null,
        "body": " Added #use MkDocs to generate a static website   so it get's easy for other people what you are trying to write the code for Hope it makes a lot of change\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-10-01T11:23:16Z",
        "closed_at": "2020-10-05T11:08:03Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2020-10-01T09:26:39Z",
        "closed_at": "2020-10-06T07:36:32Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-10-01T07:21:04Z",
        "closed_at": "2020-10-06T07:48:36Z",
        "merged_at": null,
        "body": "Nice SANS' python3 cheatsheet added\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-10-01T05:13:49Z",
        "closed_at": "2020-10-06T07:32:23Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-09-30T18:38:12Z",
        "closed_at": "2020-10-06T07:32:42Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-09-30T18:28:41Z",
        "closed_at": "2020-10-06T07:32:54Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2020-09-30T17:16:58Z",
        "closed_at": "2020-10-06T07:33:20Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 17,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-09-30T15:33:21Z",
        "closed_at": "2020-10-05T11:07:17Z",
        "merged_at": null,
        "body": "I used lru_cache a library from python used to make calculation faster in any program that uses high values and inputs. It is very beneficial and efficient for any programmer. I hope You like and everybody else. \r\nnow its up to you make it available for users to know about it.\r\nthank you\r\n\r\n## What is this Python project?\r\n\r\nThis just a showcase For Telling Use Of library That Python Have\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons:\r\nThis Project actually can Calculate infinite series of Fibonacci, i have set that limit to 10000 for now but you can Change It it \r\nInfinite. difference basically is that it is fast than normal program if you create without this library.\r\nthis library is efficient. \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1387,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2020-09-29T12:13:02Z",
        "closed_at": "2020-10-06T07:36:11Z",
        "merged_at": null,
        "body": "A change log is added in the comparison with the readme.md file.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-09-28T12:52:52Z",
        "closed_at": "2022-05-25T00:47:43Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n[Pandas_Alive](https://github.com/JackMcKew/pandas_alive) is intended to provide a plotting backend for animated matplotlib charts for Pandas DataFrames, similar to the already [existing Visualization feature of Pandas](https://pandas.pydata.org/pandas-docs/stable/user_guide/visualization.html).\r\n\r\nIt facilitates a wide range of animated plots including bar charts, line charts, pie charts, bubble charts, and geospatial charts.  It also has the ability to animate multiple, related charts at once, which is an extremely nice feature and can be used to create animated dashboards.\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* Built upon matplotlib (as opposed to libraries like Plotly)\r\n* Monkey patches functionality onto Pandas dataframe to mimic existing static charting functionality\r\n* A very shallow learning curve for people new to python\r\n* It doesn't feature interactive controls but this helps make it simple\r\n* Arbitrary subplots are possible, as opposed to Plotly where subplots are only possible by faceting a data dimension\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-09-26T00:48:43Z",
        "closed_at": "2020-09-26T07:36:24Z",
        "merged_at": "2020-09-26T07:36:24Z",
        "body": "## What is this Python project?\r\n\r\n* already present: [MonkeyType](https://github.com/Instagram/MonkeyType) - A system for Python that generates static type annotations by collecting runtime types\r\n* [x] [pytype](https://github.com/google/pytype) - Pytype checks and infers types for your Python code - without requiring type annotations\r\n* [x] [pyannotate](https://github.com/dropbox/pyannotate) - Insert annotations into your source code based on call arguments and return types observed at runtime\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- https://github.com/google/pytype#how-is-pytype-different-from-other-type-checkers\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-09-25T05:23:40Z",
        "closed_at": "2020-10-06T07:46:45Z",
        "merged_at": "2020-10-06T07:46:45Z",
        "body": "## What is this Python project?\r\n\r\nIt's an attempt to understand Python through the means of counter-intuitive snippets and some lesser-known features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nA lot of learning resources leave certain gaps in understanding. I think this project can complement other learning resources as a test of knowledge and help them fill in their Python gaps.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2020-09-25T03:21:24Z",
        "closed_at": "2020-10-06T07:33:33Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-09-24T11:35:18Z",
        "closed_at": "2020-10-27T17:33:21Z",
        "merged_at": "2020-10-27T17:33:21Z",
        "body": "## What is this Python project?\r\n\r\nxonsh is a Python-powered, cross-platform, Unix-gazing shell language and command prompt. The language is a superset of Python 3.5+ with additional shell primitives. It is time-tested and very well documented project.\r\n\r\n![Screenshot_20200924_144131](https://user-images.githubusercontent.com/1708680/94140537-0dd5d380-fe74-11ea-9f61-c1c8d3284d9a.png)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nXonsh is significantly different from most other shells or shell tools. The following table lists features and capabilities that various tools may or may not share.\r\n\r\n<table class=\"colwidths-given docutils align-default\">\r\n<colgroup>\r\n<col style=\"width: 33%\">\r\n<col style=\"width: 11%\">\r\n<col style=\"width: 11%\">\r\n<col style=\"width: 11%\">\r\n<col style=\"width: 11%\">\r\n<col style=\"width: 11%\">\r\n<col style=\"width: 11%\">\r\n</colgroup>\r\n<thead>\r\n<tr class=\"row-odd\"><th class=\"head stub\"></th>\r\n<th class=\"head\"><p>Bash</p></th>\r\n<th class=\"head\"><p>zsh</p></th>\r\n<th class=\"head\"><p>plumbum</p></th>\r\n<th class=\"head\"><p>fish</p></th>\r\n<th class=\"head\"><p>IPython</p></th>\r\n<th class=\"head\"><p>xonsh</p></th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"row-even\"><th class=\"stub\"><p>Sane language</p></th>\r\n<td></td>\r\n<td></td>\r\n<td><p>\u2713</p></td>\r\n<td><p>\u2713</p></td>\r\n<td><p>\u2713</p></td>\r\n<td><p>\u2713</p></td>\r\n</tr>\r\n<tr class=\"row-odd\"><th class=\"stub\"><p>Easily scriptable</p></th>\r\n<td><p>\u2713</p></td>\r\n<td><p>\u2713</p></td>\r\n<td><p>\u2713</p></td>\r\n<td><p>\u2713</p></td>\r\n<td></td>\r\n<td><p>\u2713</p></td>\r\n</tr>\r\n<tr class=\"row-even\"><th class=\"stub\"><p>Native cross-platform support</p></th>\r\n<td></td>\r\n<td></td>\r\n<td><p>\u2713</p></td>\r\n<td><p>\u2713</p></td>\r\n<td><p>\u2713</p></td>\r\n<td><p>\u2713</p></td>\r\n</tr>\r\n<tr class=\"row-odd\"><th class=\"stub\"><p>Meant as a shell</p></th>\r\n<td><p>\u2713</p></td>\r\n<td><p>\u2713</p></td>\r\n<td></td>\r\n<td><p>\u2713</p></td>\r\n<td></td>\r\n<td><p>\u2713</p></td>\r\n</tr>\r\n<tr class=\"row-even\"><th class=\"stub\"><p>Tab completion</p></th>\r\n<td><p>\u2713</p></td>\r\n<td><p>\u2713</p></td>\r\n<td></td>\r\n<td><p>\u2713</p></td>\r\n<td><p>\u2713</p></td>\r\n<td><p>\u2713</p></td>\r\n</tr>\r\n<tr class=\"row-odd\"><th class=\"stub\"><p>Completion from man-page parsing</p></th>\r\n<td></td>\r\n<td></td>\r\n<td></td>\r\n<td><p>\u2713</p></td>\r\n<td></td>\r\n<td><p>\u2713</p></td>\r\n</tr>\r\n<tr class=\"row-even\"><th class=\"stub\"><p>Large standard library</p></th>\r\n<td></td>\r\n<td><p>\u2713</p></td>\r\n<td></td>\r\n<td></td>\r\n<td><p>\u2713</p></td>\r\n<td><p>\u2713</p></td>\r\n</tr>\r\n<tr class=\"row-odd\"><th class=\"stub\"><p>Typed variables</p></th>\r\n<td></td>\r\n<td></td>\r\n<td><p>\u2713</p></td>\r\n<td><p>\u2713</p></td>\r\n<td><p>\u2713</p></td>\r\n<td><p>\u2713</p></td>\r\n</tr>\r\n<tr class=\"row-even\"><th class=\"stub\"><p>Syntax highlighting</p></th>\r\n<td></td>\r\n<td></td>\r\n<td></td>\r\n<td><p>\u2713</p></td>\r\n<td><p>in notebook</p></td>\r\n<td><p>w/ prompt-toolkit</p></td>\r\n</tr>\r\n<tr class=\"row-odd\"><th class=\"stub\"><p>Pun in name</p></th>\r\n<td><p>\u2713</p></td>\r\n<td></td>\r\n<td><p>\u2713</p></td>\r\n<td></td>\r\n<td></td>\r\n<td><p>\u2713</p></td>\r\n</tr>\r\n<tr class=\"row-even\"><th class=\"stub\"><p>Rich history</p></th>\r\n<td></td>\r\n<td></td>\r\n<td></td>\r\n<td></td>\r\n<td></td>\r\n<td><p>\u2713</p></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-09-23T21:04:25Z",
        "closed_at": "2020-09-24T08:20:18Z",
        "merged_at": "2020-09-24T08:20:18Z",
        "body": "Graphene is the official GraphQL framework for Python. \r\nIt is also an opinionated Python library for building GraphQL schemas/types fast and easily.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-09-04T14:20:25Z",
        "closed_at": "2021-07-20T18:45:18Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nUnified interface in Python for constructing and managing workflows on different workflow engines, such as Argo Workflows, Tekton Pipelines, and Apache Airflow.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nPlease see this section in README for details: https://github.com/couler-proj/couler#why-use-couler\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-09-03T15:47:50Z",
        "closed_at": "2020-09-04T07:15:53Z",
        "merged_at": "2020-09-04T07:15:53Z",
        "body": "## What is this Python project?\r\n\r\nMagenta is a research project exploring the role of machine learning in the process of creating art and music. Primarily this involves developing new deep learning and reinforcement learning algorithms for generating songs, images, drawings, and other materials. But it's also an exploration in building smart tools and interfaces that allow artists and musicians to extend (not replace!) their processes using these models. Magenta was started by some researchers and engineers from the Google Brain team\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n- actively updated and maintained\r\n- has a JavaScript version that runs in the browser\r\n- powered by tensorflow\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-09-03T12:17:40Z",
        "closed_at": "2020-09-04T07:16:09Z",
        "merged_at": "2020-09-04T07:16:09Z",
        "body": "Include MindsDB to the ML section\r\n\r\n## What is this Python project?\r\nMindsDB is an open-source AI layer for existing databases and provides an Explainable AutoML framework. It enables you to build, train and test state of the art ML models in as simple as one line of code, or one SQL query.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* Auto ML\r\n* Explainable AI\r\n* AI Layer for databases\r\n* Self-hosted\r\n* Simplicity (One line of code or one SQL query)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-09-02T18:38:41Z",
        "closed_at": "2020-09-03T10:01:37Z",
        "merged_at": "2020-09-03T10:01:37Z",
        "body": "## What is this Python project?\r\n\r\nRecognize and manipulate faces from Python or from the command line with the world's simplest face recognition library.\r\n\r\nThis also provides a simple face_recognition command line tool that lets you do face recognition on a folder of images from the command line!\r\n\r\nFeatures:\r\n- find and manipulate facial features in pictures\r\n- identify faces in pictures\r\n- you can even use this library with other Python libraries to do real-time face recognition\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n- simple to use\r\n- can be used in terminal or in the command line\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-08-31T18:16:38Z",
        "closed_at": "2020-09-01T15:47:16Z",
        "merged_at": "2020-09-01T15:47:16Z",
        "body": "## What is this Python project?\r\n\r\npybarcode has been dead for many years, and python-barcode is a drop-in\r\nreplacement/fork of it which has been actively maintained all this time.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-08-26T17:38:23Z",
        "closed_at": "2020-08-27T16:45:48Z",
        "merged_at": "2020-08-27T16:45:48Z",
        "body": "The previous link was returning 404. Updated with current working URL\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-08-23T10:58:52Z",
        "closed_at": "2020-08-23T14:14:07Z",
        "merged_at": "2020-08-23T14:14:07Z",
        "body": "added makesite to static site generators\r\n\r\n## What is this Python project?\r\n\r\nSimple, lightweight, and magic-free static site/blog generator.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nVery lightweight. Only 130 lines (excluding comments and empty lines).\r\n\r\nEnumerate comparisons.\r\n\r\n1. No setup required whatsoever. Run the script `makesite`. That's it. \r\n2. Deploys to `github-pages` very easily using Github Workflow\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-08-23T01:35:46Z",
        "closed_at": "2020-09-12T07:33:14Z",
        "merged_at": "2020-09-12T07:33:14Z",
        "body": "## What is this Python project?\r\n\r\n[Ultimate Python study guide](https://github.com/huangsam/ultimate-python/) - Ultimate Python study guide for newcomers and professionals alike.\r\n\r\nI created a GitHub repo to share what I've learned about core Python over the past 5+ years of using it as a college graduate, an employee at large-scale companies and as an open-source contributor of repositories like [Celery](https://github.com/celery/celery) and [Full Stack Python](https://github.com/mattmakai/fullstackpython.com). I look forward to seeing more people learn Python and pursue their passions through it.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n**Serve as a resource** for Python newcomers who prefer to learn hands-on. This repository has a collection of standalone modules which can be run in an IDE or a terminal. Most lines have carefully crafted comments which guide a reader through what the programs are doing step-by-step.\r\n\r\n**Serve as a pure guide** for those who want to revisit core Python concepts. Only builtin libraries are leveraged so that these concepts can be conveyed without the overhead of domain-specific concepts. As such, popular open-source libraries and frameworks (i.e. `sqlalchemy`, `requests`, `pandas`) are not installed.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-08-21T09:31:41Z",
        "closed_at": "2020-08-21T13:22:20Z",
        "merged_at": "2020-08-21T13:22:20Z",
        "body": "## What is this Python project?\r\n\r\nThe Social-Engineer Toolkit (SET) was created and written by Dave Kennedy, the founder of TrustedSec. It is an open-source Python-driven tool aimed at penetration testing around Social-Engineering.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- It has a number of custom attack vectors that allow you to make a believable attack quickly\r\n- It has over 2 million downloads\r\n- It has been featured in a number of books including the number one best seller in security books for 12 months since its release, \u201cMetasploit: The Penetrations Tester\u2019s Guide\u201d written by TrustedSec\u2019s founder as well as Devon Kearns, Jim O\u2019Gorman, and Mati Aharoni.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-08-21T09:22:07Z",
        "closed_at": "2020-08-21T15:42:16Z",
        "merged_at": "2020-08-21T15:42:16Z",
        "body": "## What is this Python project?\r\n\r\nsqlmap is an open source penetration testing tool that automates the process of detecting and exploiting SQL injection flaws and taking over of database servers. It comes with a powerful detection engine, many niche features for the ultimate penetration tester, and a broad range of switches including database fingerprinting, over data fetching from the database, accessing the underlying file system, and executing commands on the operating system via out-of-band connections.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n- sqlmap is able to detect and exploit five different SQL injection types : Boolean-based blind, Time-base blind, Error-based, UNION query-based, Stacked queries\r\n- supports many types of databases\r\n- works with other IT security open source projects, Metasploit and w3af ...\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-08-20T10:44:54Z",
        "closed_at": "2020-08-21T06:42:36Z",
        "merged_at": "2020-08-21T06:42:36Z",
        "body": "## What is this Python project?\r\n\r\nfsociety is a penetration testing system that includes several tools for different uses, among which we find:\r\n- Information gathering\r\n- Password attacks\r\n- Wireless testing\r\n- Exploitation tools\r\n- Sniffing and Spoofing\r\n- Web Hacking\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Runs on Linux, macOS, and Windows\r\n- Can be used with Docker\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-08-19T21:33:22Z",
        "closed_at": "2020-08-20T07:19:01Z",
        "merged_at": "2020-08-20T07:19:01Z",
        "body": "## What is this Python project?\r\n\r\nPywal is a tool that generates a color palette from the dominant colors in an image. It then applies the colors system-wide and on-the-fly in all of your favourite programs. It also supports predefined themes and has over 250 themes built-in. You can also create your own theme files to share with others.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Fast\r\n- Can be used as a module or a CLI\r\n- Supports 5 color generation backends\r\n- Can be extended to support a wide range of programs and applications\r\n- Requires minimal configuration\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-08-15T15:58:01Z",
        "closed_at": "2020-08-19T07:34:16Z",
        "merged_at": "2020-08-19T07:34:16Z",
        "body": "## What is this Python project?\r\n\r\nisort is a Python utility / library to sort imports alphabetically, and automatically separated into sections and by type. It provides a command line utility, Python library and plugins for various editors to quickly sort all your imports.\r\n(from https://github.com/timothycrosley/isort)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nI don't know other similar Python projects, but isort is really useful tool.\r\nWe don't have to take care of imports order anymore by using isort.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-08-11T01:04:35Z",
        "closed_at": "2020-09-22T08:08:54Z",
        "merged_at": "2020-09-22T08:08:53Z",
        "body": "## What is this Python project?\r\n\r\nPrefect is a workflow orchestration framework that takes care of a lot of the \"negative engineering\" aspects of building and scheduling workflows:\r\n- intuitive scheduling interface\r\n- first-class caching\r\n- state management of tasks\r\n- parametrization of workflows\r\n- ability to scale on most platforms\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Pythonic interface\r\n- can actually handle scaling (first-class Dask integrations too!)\r\n- dynamic pipelines (parameters, mapping, looping, etc.)\r\n- lightweight, easy-to-use and flexible\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-08-10T20:30:54Z",
        "closed_at": "2020-08-20T07:19:25Z",
        "merged_at": "2020-08-20T07:19:25Z",
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\nA GPU accelerated Python GUI framework. Extremely easy to use.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n* GPU accelerated\r\n* Functional (Not OOP)\r\n* Mostly for developer tools.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 61,
        "deletions": 55,
        "changed_files": 4,
        "created_at": "2020-08-02T06:54:34Z",
        "closed_at": "2020-08-02T11:15:33Z",
        "merged_at": "2020-08-02T11:15:33Z",
        "body": "This is not a new link of the list.\r\nNoticed the list is not sorted so fixed it and added to CI to be sorted on the docs website.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-07-26T17:12:11Z",
        "closed_at": "2020-07-27T08:37:02Z",
        "merged_at": "2020-07-27T08:37:01Z",
        "body": "**note:** This is a repost of https://github.com/vinta/awesome-python/pull/1101 -- that PR had 21 +1s, but was autoclosed for being stale.\r\n\r\n[pyvips](https://github.com/libvips/pyvips) is a binding for the [libvips image processing library](https://libvips.github.io/libvips/). It's fast and only needs a little memory. \r\n\r\nFor example, on this benchmark:\r\n\r\nhttps://github.com/libvips/libvips/wiki/Speed-and-memory-use\r\n\r\nIt's 5x faster than ImageMagick and needs 10x less memory.\r\n\r\npyvips works on all python versions on all platforms, is LGPL, can be [simply installed with pip](https://pypi.org/project/pyvips/), has [complete documentation](https://libvips.github.io/pyvips), has a large test suite, and has no known memory leaks.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-07-15T15:51:05Z",
        "closed_at": "2020-07-15T17:04:08Z",
        "merged_at": "2020-07-15T17:04:08Z",
        "body": "## What is this Python project?\r\n\r\nOriginally proposed back in 2015 with #321, the project is much more mature now.\r\n\r\nI will crib some from the [why](https://www.structlog.org/en/stable/why.html) page for `structlog` which summarizes (a) why structured logging is good and (b) why `structlog` is good at structured logging.\r\n\r\n> Structured logging means that you don\u2019t write hard-to-parse and hard-to-keep-consistent prose in your logs but that you log events that happen in a context instead...\r\n\r\n`structlog` provides a handy interface for defining a structure for logging and then emitting log messages. It can also act as a handler for the built in `logging` module. It can handle encoding, capture user-defined elements of a call stack to log a context, pretty-print (including colorized) log messages for local development, format timestamps, filter log messages by level, and many more....\r\n\r\nTesting mechanisms are provided that hook neatly into `pytest`.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nStructured logging! [Here](https://www.youtube.com/watch?v=Y5eyEgyHLLo) is a video about why structured logging is good, and why `structlog` is good at it.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-07-12T09:47:58Z",
        "closed_at": "2020-07-12T16:51:01Z",
        "merged_at": "2020-07-12T16:51:01Z",
        "body": "## What is Arcade?\r\n\r\nThe arcade library is a modern Python framework for crafting games with compelling graphics and sound. Object-oriented and built for Python 3.6 and up, arcade provides the programmer with a modern set of tools for crafting great Python game experiences.\r\n\r\n## What's the difference between Arcade and Pygame?\r\n\r\nRuns on top of OpenGL 3+ and Pyglet, rather than the old SDL1 library. (Currently PyGame is in the process of moving to SDL2.)\r\nHas built-in physics engine for platformers.\r\nSupports animated sprites.\r\nEncourages separation of logic and display code. Pygame tends to put both into the same game loop.\r\nWith the use of sprite lists, uses the acceleration of the graphics card to improve performance.\r\nSound support: Pygame uses the old, unsupported Avbin library. Arcade uses SoLoud. Supports panning and volume.\r\n\r\n\r\nHome Page of Arcade - https://arcade.academy/index.html\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-07-10T05:52:27Z",
        "closed_at": "2020-07-10T16:23:48Z",
        "merged_at": "2020-07-10T16:23:48Z",
        "body": "## What is this Python project?\r\n\r\nCartopy - a cartographic python library with matplotlib support\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nCartopy is a Python package designed for geospatial data processing in order to produce maps and other geospatial data analyses.\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-07-08T09:03:57Z",
        "closed_at": "2020-07-09T05:19:31Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\na Python library for pulling data out of HTML and XML files. It works with your favorite parser to provide idiomatic ways of navigating, searching, and modifying the parse tree.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-07-06T09:48:43Z",
        "closed_at": "2020-07-07T04:05:36Z",
        "merged_at": "2020-07-07T04:05:36Z",
        "body": "## What is this Python project?\r\nlibrosa is Python library for audio and music analysis\r\n\r\n## What's the difference between this Python project and similar ones?\r\n- It provides the building blocks necessary to create music information retrieval systems.\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-07-06T08:46:53Z",
        "closed_at": "2023-01-15T17:25:00Z",
        "merged_at": null,
        "body": "ucache is a lightweight and efficient caching library for python.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-07-06T08:41:31Z",
        "closed_at": "2023-01-15T17:25:00Z",
        "merged_at": null,
        "body": "In-memory caching library.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-06-26T10:36:10Z",
        "closed_at": "2020-09-06T18:35:20Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nIt's a simple, yet highly customizable python package to generate professional keys.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nNo similar project currently exists in the list.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-06-24T10:24:16Z",
        "closed_at": "2020-06-25T01:28:20Z",
        "merged_at": "2020-06-25T01:28:20Z",
        "body": "## What is this Python project?\r\n\r\nAlpha matting describes the problem of separating the objects in the foreground from the background of an image given only a rough sketch. We introduce the [PyMatting](https://github.com/pymatting/pymatting) library for Python which implements various approaches to solve the alpha matting problem and to perform foreground extraction.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nPyMatting is easy to use and implemented very efficiently with minimal dependencies. It provides an easy way to compare multiple alpha matting and foreground estimation methods.\r\n\r\nEdit: Add link to repository.\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-06-23T10:46:12Z",
        "closed_at": "2020-06-29T06:01:36Z",
        "merged_at": "2020-06-29T06:01:36Z",
        "body": "## What is this Python project?\r\n\r\nA CLI tool and a python library to develop infrastructure automation code. `Pyinfra` usage range from running ad-hoc commands on a bunch of servers to maintaining a massive cloud service deploys. \r\n\r\nOfficial docs: https://docs.pyinfra.com/en/latest/\r\n\r\n## What's the difference between this Python project and similar ones?\r\n* Support Linux and Windows Hosts.\r\n* Provide fact gathering about target hosts.\r\n* Allow using different types of connectors (ssh, vagrant, docker, chroot, ...)\r\n* Designed with performance in mind\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-06-16T14:54:14Z",
        "closed_at": "2020-06-16T18:02:58Z",
        "merged_at": "2020-06-16T18:02:58Z",
        "body": "Project home site moved to github.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-06-12T20:57:58Z",
        "closed_at": "2022-08-23T15:10:30Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\nAn extension for Flask that adds support for quickly building REST APIs. Its a fork of Flask-RESTPlus that is actively maintained by the community. It offers fast, easy and documented API development with Flask\r\n\r\n## What's the difference between this Python project and similar ones?\r\n - It provides a coherent collection of decorators and tools to describe your API and expose its documentation properly (using Swagger).\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-06-11T14:51:35Z",
        "closed_at": "2020-06-25T18:00:56Z",
        "merged_at": "2020-06-25T18:00:55Z",
        "body": "## What is this Python project?\r\n\r\nSchemathesis is a tool for testing web applications built with Open API / Swagger specifications.\r\n\r\nIt reads the application schema, generates, and runs test cases which will ensure that your application is compliant with its schema.\r\n\r\nThe application under test could be written in any language, the only thing you need is a valid API schema in a supported format.\r\n\r\nBased on [Hypothesis](https://github.com/HypothesisWorks/hypothesis)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThe project was inspired by [swagger-conformance](https://github.com/olipratt/swagger-conformance), which didn't receive any updates since June 2018. Notable differences:\r\n\r\n- Support for Open API 3.0 (including Open API links);\r\n- More feature complete support for Open API 2.0 / 3.0 specs due to usage of [hypothesis-jsonschema](https://github.com/Zac-HD/hypothesis-jsonschema) under the hood;\r\n- Interactive, pytest-style command-line interface with built-in support for authorization, Hypothesis configuration, endpoints selection, parallel execution, and many other things;\r\n- flexible control over checks to be executed;\r\n- automatic testing of explicit examples defined in the tested schema;\r\n- ability to register custom strategies for string formats;\r\n- Customization via hooks;\r\n- Storing network logs in VCR-compatible format;\r\n- lazy schemas loading support for simpler testing of apps built with tools like [apispec](https://github.com/marshmallow-code/apispec)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-06-09T07:53:34Z",
        "closed_at": "2020-06-25T01:27:36Z",
        "merged_at": null,
        "body": "#499   What is this Python project?\r\n\r\nThe powerful python cms wrote by django and python\r\nsample site: boshra.org or faral.tech\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nForm creator\r\nnew context processor \r\nnew stream fields \r\n\r\n\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-06-06T00:35:52Z",
        "closed_at": "2020-06-06T19:51:48Z",
        "merged_at": "2020-06-06T19:51:48Z",
        "body": "## What is this Python project?\r\n\r\nIt's a new kind of progress bar, with real-time throughput, eta and very cool animations!\r\n\r\nIt has now more than 600\u2b50\ufe0f, take a look: https://github.com/rsalmei/alive-progress\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis project has the following features:\r\n\r\n- a cool live spinner, which makes it clear the process did not hang and your terminal/connection is healthy;\r\n- a visual feedback of the current speed/throughput, as the spinner runs faster or slower according to the actual processing speed;\r\n- an efficient multi-threaded bar, which updates itself at a fraction of the actual speed (1,000,000 iterations per second equates to roughly 60fps refresh rate) to keep CPU usage low and avoid terminal spamming; (\ud83d\udccc new: you can now calibrate this!)\r\n- an expected time of arrival (ETA), that shows the remaining processing time in a friendly way, not anything like eta: 1584s, it will nicely show eta: 0:26:24 as you would expect (but anything less than a minute is indeed eta: 42s);\r\n- a print() hook, which allows print statements in the midst of an alive-bar context without any hassle, automatically cleaning the screen, and even enriching with the current position when it occurred;\r\n- after your processing has finished, a nice receipt is printed with the statistics of that run, including the elapsed time and observed throughput;\r\n- it tracks the actual count to detect under and overflows, so it will look different if you send in less or more than expected;\r\n- it automatically detects if there's an allocated tty, and if there isn't, only the final receipt is printed, so you can safely include the alive-bar in any code, and rest assure your log file won't get 60fps progress lines;\r\n- you can pause the alive-bar! I think that's an unprecedented feature for a progress bar! It's incredible to be able to manually operate on some items while inside a running progress bar context, and get the bar back like it had never stopped whenever you want;\r\n- it is customizable, with a growing smorgasbord of different bar and spinner styles, as well as several factories to easily generate yours!\r\n\r\n![alive-progress](https://raw.githubusercontent.com/rsalmei/alive-progress/master/img/alive-demo.gif)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-05-31T15:14:37Z",
        "closed_at": "2020-06-06T19:53:12Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nMiguel Grinberg is the author of book Flask Web Development by O'REILLY. His blog is very informative for both beginners as well as working professionals.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nVery descriptive blog and it covers much complicated but useful parts of various libraries.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-05-25T15:35:06Z",
        "closed_at": "2020-06-06T19:52:28Z",
        "merged_at": "2020-06-06T19:52:28Z",
        "body": "## What is this Python project?\r\n\r\n[Hydra](https://hydra.cc) is the configuration management framework for Python. \r\n\r\n> The main feature is the ability to dynamically create a hierarchical configuration by composition and override it through config files and the command line.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* flexible configuration abilities;\r\n* improved syntax;\r\n* built-in command-line overriding;\r\n* hierarchical configuration;\r\n* more in [repo](https://github.com/facebookresearch/hydra) or [docs](https://hydra.cc).\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-05-22T13:00:28Z",
        "closed_at": "2022-07-10T03:53:12Z",
        "merged_at": null,
        "body": "This adds the lkpy library.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-05-16T16:30:35Z",
        "closed_at": "2022-02-20T15:31:53Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nA set of utilities which makes it easier to debug Python code. Pydebug respects Django's config. It checks if the decorator is running within a Django project and DEBUG is set to True. If it's set to False, it simply returns the function.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Allows the debug decorators to be deployed in a Django application\r\n- No need to import pdb on every function, as the decorator takes care of it\r\n- Support for `pdb` and `ipdb` if installed.\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-05-06T08:54:17Z",
        "closed_at": "2020-10-22T12:51:38Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n* python-environment\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* There was no environment such as pipenv in this repo.\r\n* There was no extensions info of python-environment in this repo.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-04-15T16:08:20Z",
        "closed_at": "2020-04-17T16:27:01Z",
        "merged_at": "2020-04-17T16:27:01Z",
        "body": "## What is this Python project?\r\n\r\nAn open-source Python package that extends the power of Pandas library to AWS connecting DataFrames and AWS data related services (Amazon Redshift, AWS Glue, Amazon Athena, Amazon EMR, etc).\r\n\r\nBuilt on top of other open-source projects like Pandas, Apache Arrow, Boto3, s3fs, SQLAlchemy, Psycopg2 and PyMySQL, it offers abstracted functions to execute usual ETL tasks like load/unload data from Data Lakes, Data Warehouses and Databases.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThe first one.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-04-13T02:58:38Z",
        "closed_at": "2020-04-17T16:26:13Z",
        "merged_at": "2020-04-17T16:26:13Z",
        "body": "## What is this Python project?\r\n\r\nA simple database interface to Microsoft SQL Server.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nJust updating the link since the old link is broken.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2020-04-07T13:44:07Z",
        "closed_at": "2020-04-07T15:13:35Z",
        "merged_at": "2020-04-07T15:13:35Z",
        "body": "Hi @vinta I appreciate you merged iredis, but it seems the link with litecli is switched. Merge this PR will resolve this.\r\n\r\nfixup https://github.com/vinta/awesome-python/commit/30ddeab24d5009217b6092ddf0d798828062808e",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-04-02T02:20:05Z",
        "closed_at": "2020-04-07T12:05:39Z",
        "merged_at": "2020-04-07T12:05:39Z",
        "body": "## What is this Python project?\r\n\r\n[PyArmor](https://github.com/dashingsoft/pyarmor) is a command line tool used to obfuscate python scripts, bind obfuscated scripts to fixed machine or expire obfuscated scripts.\r\n\r\nThe goal of PyArmor is to make Python applied to commercial application easily.\r\n\r\nPyArmor is well [Documentation](https://pyarmor.readthedocs.io/en/latest/)\r\n\r\nThere is also a web-ui package [pyarmor-webui](https://github.com/dashingsoft/pyarmor-webui)\r\n\r\nPyArmor is trusted by many corporations in different countries, for examples, IBM, GE, NEC, Panasonic, Fujitsu, Tencent...   \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* Seamless Replacement\r\n  The obfuscated script is a normal python script. With an extra runtime package `pytransform`, the plain Python scripts can be replaced with obfuscated ones seamlessly\r\n\r\n* Runtime Obfuscation\r\n  The byte code of each code object will be obfuscated as soon as code object completed execution, and f_locals of frame is cleared at the same time\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-03-30T19:54:36Z",
        "closed_at": "2020-04-07T12:06:36Z",
        "merged_at": "2020-04-07T12:06:36Z",
        "body": "## What is this Python project?\r\n\r\n[Real Python](https://realpython.com/) is a repository of free and in-depth Python tutorials created by a team of professional Python developers around the world. \r\n\r\nWe recently launched a new [Python podcast](https://realpython.com/podcasts/rpp/) with community interviews.\r\n\r\nThis PR adds a link to the podcast in the resources section.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2020-03-27T23:29:50Z",
        "closed_at": "2020-04-07T12:07:00Z",
        "merged_at": "2020-04-07T12:07:00Z",
        "body": "Update deprecated repo to the new one.\r\n\r\n\"[Deprecated] This library has been renamed to \"Stanza\". Latest development at: https://github.com/stanfordnlp/stanza\"\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-03-04T02:14:17Z",
        "closed_at": "2020-04-07T12:13:04Z",
        "merged_at": "2020-04-07T12:13:04Z",
        "body": "Current url goest to \"This page does  not exist yet.\" PR with fix. ",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-03-01T14:17:22Z",
        "closed_at": "2020-04-07T12:20:05Z",
        "merged_at": "2020-04-07T12:20:05Z",
        "body": "## What is this Python project?\r\n\r\n[AkShare](https://github.com/jindaxiang/akshare) is an **elegant and simple financial data** interface library for Python, built for human beings! It can help people get financial data more easily and just one line code to get the data.\r\n\r\n1. [AkShare](https://github.com/jindaxiang/akshare) has been downloaded for 190,000 times from now and get 1000 + stars, now it is on the GitHub Treading Python Item for 4 days.\r\n\r\n2. [AkShare](https://github.com/jindaxiang/akshare) hava a very detailed docs: https://akshare.readthedocs.io\r\n\r\n3. [AkShare](https://github.com/jindaxiang/akshare) has following features:\r\n- Easy: Just one line to fetch the data;\r\n- Fast: Just copy and paste;\r\n- Extensible: Easy to customize your own code;\r\n- Powerful: Python ecosystem;\r\n\r\n4. Read more: https://github.com/jindaxiang/akshare\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere are no similar ones in awesome-python.\r\nthere are some package like: yfinance, wbdata, but those packages are just for single data-source, AkShare provide more generally interface for financial data, for example: stock, futures, option, fx, bond and so on.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-02-28T07:25:04Z",
        "closed_at": "2020-04-07T12:14:01Z",
        "merged_at": "2020-04-07T12:14:01Z",
        "body": "## What is this Python project?\r\n\r\nCLI for SQLite Databases with auto-completion and syntax highlighting.\r\n\r\n![Completion](https://raw.githubusercontent.com/dbcli/litecli/master/screenshots/litecli.png)\r\n\r\n## Features\r\n\r\n* SQLite client similar to [mycli](https://github.com/dbcli/mycli) and [pgcli](https://github.com/dbcli/pgcli)\r\n* support for SQLite\r\n* autocompletion\r\n* syntax highlighting\r\n* shortcuts\r\n* color themes\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere is no other SQLite CLI with autocomplete alternative currently.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-02-28T04:13:35Z",
        "closed_at": "2020-04-07T13:04:47Z",
        "merged_at": null,
        "body": "https://github.com/laixintao/iredis\r\n\r\nInteractive Redis: A Terminal Client for Redis with AutoCompletion and Syntax Highlighting.\r\n\r\n<img width=\"806\" alt=\"image\" src=\"https://user-images.githubusercontent.com/9675939/75509878-0c4e4500-5a24-11ea-84cd-44062b65ba82.png\">\r\n\r\n\r\n## Features\r\n\r\n- Advanced code completion. If you run command `KEYS` then run `DEL`, IRedis will auto-complete your command based on `KEYS` result.\r\n- Command validation. E.g. try `CLUSTER MEET IP PORT`, iredis will validate IP and PORT for you.\r\n- Command highlighting, fully based on redis grammar. Any valid command in IRedis shell is a valid redis command.\r\n- Human-friendly result display.\r\n- `peek` command to check the key's type then automatically call `get`/`lrange`/`sscan`, etc, depending on types. You don't need to call the `type` command then type another command to get the value. `peek` will also display the key's length and memory usage.\r\n- <kbd>Ctrl</kbd> + <kbd>C</kbd> to cancel the current typed command, this won't exit iredis, exactly like bash behaviour. Use <kbd>Ctrl</kbd> + <kbd>D</kbd> to send a EOF to exit iredis.\r\n- Says \"Goodbye!\" to you when you exit!\r\n- <kbd>Ctrl</kbd> + <kbd>R</kbd> to open **reverse-i-search** to search through your command history.\r\n- Auto suggestions. (Like [fish shell](http://fishshell.com/).)\r\n- Support `--encode=utf-8`, to decode Redis' bytes responses.\r\n- Command hint on bottom, include command syntax, supported redis version, and time complexity.\r\n- Offcial docs with built-in `HELP` command, try `HELP SET`!\r\n- Written in pure Python, but IRedis was packaged into a single binary with\r\n[PyOxidizer](https://github.com/indygreg/PyOxidizer), you can use cURL to\r\ndownload and run, it just works, even you don't have a Python interpreter.\r\n- For full features, please see: [iredis.io/show](https://www.iredis.io/show/)\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere is no other redis-cli alternative currently.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-02-18T13:11:18Z",
        "closed_at": "2020-04-07T12:59:28Z",
        "merged_at": "2020-04-07T12:59:28Z",
        "body": "PyPy has moved development to https://foss.heptapod.net/pypy/pypy",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-02-17T11:10:30Z",
        "closed_at": "2020-04-07T12:59:06Z",
        "merged_at": null,
        "body": "The current link for Profig returns a 404",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-02-14T10:50:12Z",
        "closed_at": "2020-04-08T12:40:41Z",
        "merged_at": "2020-04-08T12:40:41Z",
        "body": "## What is this Python project?\r\n\r\n**[Matchering 2.0]** is a novel **Containerized Web Application** and **[Python Library][PyPI]** for audio matching and [mastering].\r\n\r\nIt follows a *simple idea* - you take TWO audio files and feed them into **Matchering**: \r\n- **TARGET** (the track you want to master, you want it to sound like the reference)\r\n- **REFERENCE** (another track, like some kind of \"wet\" popular song, you want your target to sound like it)\r\n\r\nOur algorithm matches both of these tracks and provides you the mastered **TARGET** track with the same [RMS], [FR], [peak amplitude] and [stereo width] as the **REFERENCE** track has.\r\n\r\nRead more: https://github.com/sergree/matchering/blob/master/README.md\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere are no similar ones.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n\r\n\r\n[Matchering 2.0]: https://github.com/sergree/matchering\r\n[PyPI]: https://pypi.org/project/matchering\r\n[mastering]: https://en.wikipedia.org/wiki/Audio_mastering\r\n[RMS]: https://en.wikipedia.org/wiki/Root_mean_square\r\n[FR]: https://en.wikipedia.org/wiki/Frequency_response\r\n[peak amplitude]: https://en.wikipedia.org/wiki/Amplitude\r\n[stereo width]: https://en.wikipedia.org/wiki/Stereo_imaging",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-02-12T18:31:11Z",
        "closed_at": "2020-04-07T13:06:30Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nCreate executable zipapps (PYZ archives) without writing *any* extra configuration.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nSimpler than PEX, less overhead than common binary-producing tools like pyinstaller.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-02-12T18:17:03Z",
        "closed_at": "2020-04-07T12:07:52Z",
        "merged_at": "2020-04-07T12:07:52Z",
        "body": "## What is this Python project?\r\n\r\nTask / project automation, including the ability to add standard workflows to many projects just via a task library package.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nBest feature is that function signatures are \"magically\" converted into a full CLI. Makes for very fast task development without spending any thoughts or time on CLI integration.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-02-11T06:57:12Z",
        "closed_at": "2020-04-08T12:38:54Z",
        "merged_at": null,
        "body": "\r\n\r\n## What is this Python project?\r\n\r\nA lightweight, object-oriented finite state machine implementation in Python.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n_State machine_ is a powerful template for event-based systems. And currently, there are no mentions of any other state machines in **awesome-python** list.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-02-09T06:55:58Z",
        "closed_at": "2020-04-08T12:34:13Z",
        "merged_at": "2020-04-08T12:34:13Z",
        "body": "## What is this Python project?\r\n\r\nA transparent and symmetric RPC library for python\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThe only comparison would be zeroRPC which takes a different approach and has a different vision. The core difference is how RPyC allows objects to proxy to another address space and zeroRPC has zero support for such things.\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-02-08T22:19:33Z",
        "closed_at": "2020-04-08T12:28:24Z",
        "merged_at": "2020-04-08T12:28:24Z",
        "body": "## What is this Python project?\r\n\r\nRich is a Python library for rich text and beautiful formatting in the terminal.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Easy to use APIs.\r\n- Custom styling with bbcode-like markup.\r\n- Emoji!\r\n- Rich text logger, also a `RichHandler` that [supports](https://github.com/willmcgugan/rich/blob/7b00f0ecb15a4698931d49922a665a6f02782e29/rich/logging.py#L18) HTTP keywords. See [demo](https://www.willmcgugan.com/blog/tech/post/prettier-logging-with-rich/)\r\n-  markdown and code highlighting\r\n- [more](https://rich.readthedocs.io/en/latest/) in documentation.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-02-08T22:05:43Z",
        "closed_at": "2020-08-12T15:05:06Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nExhaustive, simple, beautiful and concise. A truly pythonic cheat sheet about Python programming language.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* Extremely concise and to the point.\r\n* Everything is on one page.\r\n* Available PDF.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-02-07T22:26:02Z",
        "closed_at": "2020-04-07T15:13:02Z",
        "merged_at": "2020-04-07T15:13:02Z",
        "body": "## What is this Python project?\r\n\r\nFrom the README of the project:\r\n> Python's `itertools` library is a gem - you can compose elegant solutions for a variety of problems with the functions it provides. In [`more-itertools`](https://github.com/erikrose/more-itertools) we collect additional building blocks, recipes, and routines for working with Python iterables.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n`more-itertools` provides most re-usable functions one would want when working with iterables. By relying on this lightweight package, similarly to what `itertools` provide, one can write more readable and maintainable code, while avoiding having to re-invent the wheel (and introducing bugs by doing so).\r\n\r\nAs simple examples, instead of using raw iterators, one should use `itertools` when appropriate:\r\n```Python\r\n>>> from itertools import repeat\r\n\r\n>>> (10 for _ in range(3))  # Instead of this ...\r\n>>> repeat(10, 3)           # ... use that!\r\n```\r\nand `more-itertools` is based on the same idea and provides many more building blocks:\r\n```Python\r\n>>> from more_itertools import ilen\r\n\r\n>>> sum(1 for _ in iter)  # Instead of this ...\r\n>>> ilen(iter)            # ... use that!\r\n```\r\n\r\nOf course, the project also provides more advanced expressions, hard to express as one-liners. Some of my favourites (notice their high-quality documentation):\r\n- [`all_equal(iterable)`](https://more-itertools.readthedocs.io/en/stable/api.html#more_itertools.all_equal)\r\n- [`last(iterable[, default])`](https://more-itertools.readthedocs.io/en/stable/api.html#more_itertools.last)\r\n- [`nth(iterable, n, default=None)`](https://more-itertools.readthedocs.io/en/stable/api.html#more_itertools.nth)\r\n- [`consume(iterator, n=None)`](https://more-itertools.readthedocs.io/en/stable/api.html#more_itertools.consume)\r\n- [`distribute(n, iterable)`](https://more-itertools.readthedocs.io/en/stable/api.html#more_itertools.distribute)\r\n- [`roundrobin(*iterables)`](https://more-itertools.readthedocs.io/en/stable/api.html#more_itertools.roundrobin)\r\n- [`windowed(seq, n, fillvalue=None, step=1)`](https://more-itertools.readthedocs.io/en/stable/api.html#more_itertools.windowed)\r\n- [`substrings(iterable)`](https://more-itertools.readthedocs.io/en/stable/api.html#more_itertools.substrings)\r\n- [`powerset(iterable)`](https://more-itertools.readthedocs.io/en/stable/api.html#more_itertools.powerset)\r\n- [`random_permutation(iterable, r=None)`](https://more-itertools.readthedocs.io/en/stable/api.html#more_itertools.random_permutation)\r\n- [`with_iter(context_manager)`](https://more-itertools.readthedocs.io/en/stable/api.html#more_itertools.with_iter)\r\n\r\nIn many cases where I wondered \"Why didn't they implement this in `itertools`?!\", `most-itertools` had a single-call solution: there's a reason why the project already has 1.2k :star: on GitHub!\r\n\r\nPlease give `most-itertools` a try and give this PR a :+1: if you find the package useful.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-02-07T01:40:06Z",
        "closed_at": "2020-04-08T12:18:33Z",
        "merged_at": "2020-04-08T12:18:33Z",
        "body": "## What is this Python project?\r\n\r\nA simple, Pillow-friendly, wrapper around the tesseract-ocr API for Optical Character Recognition (OCR).\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nTLDR: Speed gains, readability, in memory OCR, no need for sub shell process using file system access.\r\n\r\n**tesserocr** integrates directly with Tesseract's C++ API using Cython which allows for a simple Pythonic and easy-to-read source code. It enables real concurrent execution when used with Python's threading module by releasing the GIL while processing an image in tesseract.\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-02-06T16:59:03Z",
        "closed_at": "2020-04-08T12:33:51Z",
        "merged_at": "2020-04-08T12:33:51Z",
        "body": "## What is this Python project?\r\n\r\n* Diagram as Code\r\n* Diagrams lets you draw the cloud system architecture in Python code.\r\n* It  also allows you to tracking the architecture diagram changes on any version control system.\r\n\r\nDetails on https://github.com/mingrammer/diagrams\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nNo similar ones :)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-02-03T17:23:33Z",
        "closed_at": "2020-04-08T12:33:25Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-02-02T12:01:36Z",
        "closed_at": "2020-04-08T12:31:54Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nThis regex tester allows to test and debug regex for Python.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- A regex visualizer is integrated.\r\n- It allows to generate a string from RegEx.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-01-29T08:55:41Z",
        "closed_at": "2020-04-08T12:18:07Z",
        "merged_at": "2020-04-08T12:18:07Z",
        "body": "## What is this Python project?\r\n\r\nThis repository contains data structures and algorithms concepts and questions useful for interviews in Python, implemented in a clean and simple method. Covers almost every single data structure and algorithms that are asked in coding interviews\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis project has the cleanest implementation of data structure and algorithms. It becomes really simple to create mind maps of questions. Also this repository has links to many useful articles and notes that are generally asked in coding interviews\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-01-28T13:17:36Z",
        "closed_at": "2022-01-25T11:19:03Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\npythonprogramming.net for awesome tutorials\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- The coolest programming tutorials with real-world examples. \r\n- One platform for almost everything! \r\n- Great walkthrough of code for better understanding. \r\n- Well classified/organized series of tutorials.  \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-01-27T07:19:05Z",
        "closed_at": "2020-04-08T12:32:29Z",
        "merged_at": "2020-04-08T12:32:28Z",
        "body": "My personal favorite datetime module\r\n\r\n## What is this Python project? Another date time library.\r\n\r\nDescribe features. It's dead simple to manipulate dates\r\n\r\n## What's the difference between this Python project and similar ones? I think it's the easiest I've used.\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-01-25T21:27:25Z",
        "closed_at": "2020-04-07T13:12:08Z",
        "merged_at": "2020-04-07T13:12:08Z",
        "body": "Karate Club is an unsupervised machine learning extension library for NetworkX.\r\n\r\nKarate Club consists of state-of-the-art methods to do unsupervised learning on graph structured data. To put it simply it is a Swiss Army knife for small-scale graph mining research. First, it provides network embedding techniques at the node and graph level. Second, it includes a variety of overlapping and non-overlapping community detection methods. Implemented methods cover a wide range of network science (NetSci, Complenet), data mining (ICDM, CIKM, KDD), artificial intelligence (AAAI, IJCAI) and machine learning (NeurIPS, ICML, ICLR) conferences, workshops, and pieces from prominent journals.\r\n\r\n## What is this Python project?\r\n\r\nUnsupervised learning for graph structured data:\r\n  - Node embedding\r\n  - Community detection\r\n  - Graph embedding\r\n\r\nBuilt on NetworkX and has a Scikit-Learn like API.\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere is no similar project.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-01-21T16:43:14Z",
        "closed_at": "2022-03-29T16:03:15Z",
        "merged_at": null,
        "body": "Python configuration\r\n\r\n## What is this Python project?\r\n\r\n- Reading from remote(consul)\r\n- Reading from YAML or JSON file\r\n- Unmarshal config\r\n\r\nThe next, I want to support multiple config files in different formats.\r\n\r\nSee also the [project](https://github.com/shaneing/python-viper).\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-01-17T19:54:43Z",
        "closed_at": "2020-01-18T10:05:36Z",
        "merged_at": "2020-01-18T10:05:36Z",
        "body": "Async friendly http client from the same authors of starlette and uvicorn.\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nAsync friendly (though sync supporting) http client for use with Starlette based projects with a requests inspired syntax.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-01-14T07:17:28Z",
        "closed_at": "2020-07-09T05:21:41Z",
        "merged_at": "2020-07-09T05:21:41Z",
        "body": "Add docxtpl\r\nAdd loguru\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-12-26T07:00:16Z",
        "closed_at": "2022-05-17T02:35:52Z",
        "merged_at": null,
        "body": "Repo: https://github.com/PydPiper/pylightxl\r\nDocs: https://pylightxl.readthedocs.io\r\n\r\n## What is this Python project?\r\n\r\npylightxl is a light weight, zero dependency (only standard libs used), to the point (no bells and whistles) Microsoft Excel reader/writer python 2.7-3+ library.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nZero non-standard library dependencies No compatibility/version control issues.\r\n\r\nLight-weight single source code file that supports both Python3 and Python2.7.18. Single source file that can easily be copied directly into a project for true zero-dependency. Great for those that have installation/download restrictions. In addition the library's size and zero dependency makes this library pyinstaller compilation small and easy!\r\n\r\n100% test-driven development for highest reliability/maintainability with 100% coverage on all supported versions\r\n\r\nAPI aimed to be user friendly and intuitive. Structure: database > worksheet > indexing example: db.ws('Sheet1').index(row=1,col=2) or db.ws('Sheet1').address(address='B1')\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-12-16T22:24:37Z",
        "closed_at": "2019-12-21T02:14:37Z",
        "merged_at": "2019-12-21T02:14:37Z",
        "body": "## What is this Python project?\r\n\r\nAnalyses codebase and finds dead code.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Gives probability, in the case that potentially dead code might be used in unexplicit calls.\r\n- Sorts unused classes and functions by size so large classes that are unused can be removed\r\n- Supports python 2 and 3. \r\n- Many other features\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-11-29T12:46:32Z",
        "closed_at": "2023-08-07T12:43:47Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nIt's a framework for scraping HTML sites, and aggregating data from multiple sites from a same category (e.g. banking sites, news sites, video sites, etc.).\r\nThere are ready-made modules for popular websites and ready-apps to interact with them.\r\nThink youtube-dl applied to other domains than video!\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* It's possible to scrape new websites with declarative-style extraction rules\r\n* It provides a standardized API for categories of sites for dedicated tasks (e.g. banking, web forums, video sites, news sites, music lyrics sites, etc.)\r\n  * Scraped websites are grouped in those categories\r\n* Scraped websites are grouped in categories for a dedicated task: \r\n* The project comes with many existing backends for real-life websites\r\n* It has an internal upgrade system\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-11-22T19:44:38Z",
        "closed_at": "2020-04-07T12:09:29Z",
        "merged_at": "2020-04-07T12:09:29Z",
        "body": "## What is this Python project?\r\n\r\nMake your functions return something meaningful, typed, and safe!\r\n\r\n### Features\r\n\r\n- Provides a bunch of primitives to write declarative business logic\r\n- Enforces better architecture\r\n- Fully typed with annotations and checked with `mypy`, [PEP561 compatible](https://www.python.org/dev/peps/pep-0561/)\r\n- Has a bunch of helpers for better composition\r\n- Pythonic and pleasant to write and to read (!)\r\n- Support functions and coroutines, framework agnostic\r\n- Easy to start: has lots of docs, tests, and tutorials\r\n\r\nLink: https://github.com/dry-python/returns\r\n\r\nRelated:\r\n- https://returns.readthedocs.io/en/latest/\r\n- https://github.com/dry-python/classes\r\n- https://sobolevn.me/2019/02/python-exceptions-considered-an-antipattern\r\n- https://sobolevn.me/2019/03/enforcing-srp\r\n- https://github.com/typeddjango/awesome-python-typing\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nCurrently it is the only typed monads implementation I know. Other packages are not typed and not checked with `mypy`\r\n\r\nOther similar projects are listed here: https://returns.readthedocs.io/en/latest/#inspirations\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-11-21T15:24:35Z",
        "closed_at": "2019-12-15T15:57:47Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nBearer.sh provides an API client in Python, to easily call any APIs.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* There none universal API clients listed on `awesome-python`.\r\n* It's an easy to use API client\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-11-20T17:05:39Z",
        "closed_at": "2019-12-15T16:00:47Z",
        "merged_at": "2019-12-15T16:00:47Z",
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-11-14T11:30:54Z",
        "closed_at": "2019-12-14T12:44:58Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\ndramatic is added to Task Queues\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-11-13T15:28:12Z",
        "closed_at": "2019-12-13T16:45:04Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nSchemathesis is a tool for testing web applications built with Open API / Swagger specifications.\r\n\r\nIt reads the application schema, generates and runs test cases which will ensure that your application is compliant with its schema.\r\n\r\nThe application under test could be written in any language, the only thing you need is a valid API schema in a supported format.\r\n\r\nBased on [Hypothesis](https://github.com/HypothesisWorks/hypothesis)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThe project was inspired by [swagger-conformance](https://github.com/olipratt/swagger-conformance), which didn't receive any updates since June 2018. Notable differences:\r\n\r\n- Support for Open API 3.0;\r\n- More feature complete support for Open API 2.0 / 3.0 specs due to usage of [hypothesis-jsonschema](https://github.com/Zac-HD/hypothesis-jsonschema) under the hood;\r\n- Interactive, pytest-style command-line interface with built-in support for authorization, Hypothesis configuration, endpoints selection, and many other things;\r\n- flexible control over checks to be executed;\r\n- automatic testing of explicit examples defined in the tested schema;\r\n- ability to register custom strategies for string formats;\r\n- lazy schemas loading support for simpler testing of apps built with tools like [apispec](https://github.com/marshmallow-code/apispec)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-11-12T01:21:58Z",
        "closed_at": "2019-12-12T02:40:49Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nProxyCrawl library allows to bypass captchas and blocks without using proxies which is perfect for crawling and scraping web content.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nProxyCrawl uses a big network of proxies combined with artificial intelligence and machine learning to bypass captchas and IP blocks. With a couple of lines of code you can integrate it into your python project and avoid the usage of proxies when crawling and scraping.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-11-10T14:01:11Z",
        "closed_at": "2019-12-10T15:26:02Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n- cachetools is a chaching library.\r\n- pyre, pytype and pyright are type checkers\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- cachetools is a library for cached collections which is different from the current items under caching.\r\n- the new typechekers each have different pros and cons compare to mypy so it's valuable to have them all listed so users can decide which one's the best for them\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-11-09T19:42:16Z",
        "closed_at": "2019-12-09T21:08:05Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\nTest Junkie is a testing framework, similar to pytest but more intuitive and with more powerful features.\r\n\r\nSome of its features:\r\n- Parallel test execution\r\n- Multi-layer parametrization\r\n- Conditional retries\r\n- Event listeners\r\n- Tagging\r\n- Test metadata\r\n- Prioritization\r\n- Conditional skips\r\n- Group rules\r\n- Auditing\r\n- Reporting\r\n- Code coverage\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Ease of use &  great [documentation](https://www.test-junkie.com/documentation/): JUnit like decorator syntax to define tests. Decorators have properties which allow to configure all possible aspects of a test. This is consistent for all Test Junkie decorators thus low learning curve.\r\n\r\n- Powerful parametrization engine which allow to quickly create tests that cover whole spectrum of permutations.\r\n\r\n- Event listeners allow to easily hook on-to test events such as:\r\non_in_progress\r\non_success\r\non_failure\r\non_error\r\non_ignore\r\non_cancel\r\non_skip\r\non_complete\r\n\r\n- Does not require any modules, things just work out of the box.\r\n- Exposes both programmatic API and full-featured CLI to run tests.\r\n- Modern, beautiful & interactive HTML reports out of the box. JSON/XML also available.\r\n- Group rules allow to define rules such as running something before or after a pre-defined collection of suites.\r\n- Conditional retries allow to retry tests on a specific exceptions\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-11-07T09:27:28Z",
        "closed_at": "2019-12-07T11:01:18Z",
        "merged_at": null,
        "body": "## What is this Python project?\n\n\nAn advanced task flow management on top of famous Celery project (a distributed task queue). It allows one to create advanced task flows by creating YAML configuration files which state dependencies between tasks, fallback tasks (run on task failures) or run whole flows (transitively or even recursively). Dependencies between tasks or flows are graphs (without any limitation to DAG). It also enables one to use different storage or database adapters or running only certain tasks in a flow definition - system will automatically compute dependencies between tasks (which tasks needs to be run in order to run desired tasks). Selinon comes with a set of prepared storage/database adapters and support for tracing system actions (easy to integrate with Sentry or other monitoring systems) or logging ELK (Elasticsearch, logstash, Kibana) stack to provide ready-to-be-used system in clusters (using Kubernetes, OpenShift or others). A built in simutor can run your flows by executing CLI.\n\n\n## What's the difference between this Python project and similar ones?\n\nCelery is limited when it comes to modelling more advanced task flows (dependencies between tasks). Selinon offers fine-granted control on how your task flow will work, how it will perform and how it will be traced in distributed environment.\n\n--\n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-11-06T18:27:37Z",
        "closed_at": "2019-12-06T20:06:29Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nImport Linter is a command line tool to check that you are following a self-imposed architecture within your Python project. It does this by analysing the imports between all the modules in one or more Python packages, and compares this against a set of rules that you provide in a configuration file.\r\n\r\nThe configuration file contains one or more 'contracts'. Each contract has a specific type, which determines the sort of rules it will apply. For example, the forbidden contract type allows you to check that certain modules or packages are not imported by parts of your project.\r\n\r\nImport Linter is particularly useful if you are working on a complex codebase within a team, when you want to enforce a particular architectural style. In this case you can add Import Linter to your deployment pipeline, so that any code that does not follow the architecture will fail tests.\r\n\r\nIf there isn't a built in contract type that fits your desired architecture, you can define a custom one.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nI'm not aware of anything similar.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-11-01T18:07:04Z",
        "closed_at": "2019-12-01T19:57:55Z",
        "merged_at": null,
        "body": "Add Kite and a bullet for Cross-Editor Plugins.\r\n\r\n## What is this Python project?\r\n\r\n[Kite](http://kite.com) is a free plugin for Atom, VS Code, PyCharm, Sublime, and Vim that uses machine learning to provide advanced autocompletions \u2014 up to a full line of code. \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThe [Kite app](http://kite.com/copilot) shows documentation as you move your cursor, so you don\u2019t have to google search every time you have a question about syntax. Kite removed their cloud processing component earlier this year, and now all code analysis runs on user\u2019s local machines.\r\n\r\n<img width=\"455\" alt=\"Kite\" src=\"https://user-images.githubusercontent.com/37838136/68047940-80aeec80-fcad-11e9-82d8-c3b47a67cc34.png\">\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-11-01T05:09:34Z",
        "closed_at": "2019-12-01T06:57:55Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n[Git me the URL](https://github.com/amykyta3/git-me-the-url/blob/master/README.md) is a simple command line application that converts the path to a file in your Git repository into a public URL for popular Git hosting sites.\r\n\r\nI also provide an API so that users can embed the translator into a larger project, as well as extend the command line tool to add custom path translations.\r\n\r\n![gitmetheurl](https://raw.githubusercontent.com/amykyta3/git-me-the-url/master/docs/cmd-example.gif)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nI have not been able to find anything else like it.\r\nThis is a very useful tool if you often share links to your source with co-workers/friends while collaborating on a project.\r\n* Supports URL generation for popular Git hosting sites such as GitHub, GitLab, and Bitbucket.\r\n* Easy to extend for other Git hosting services (public ones or private ones).\r\n* Accurately points to the file under the correct branch or exact commit.\r\n* Reference a line number, or range of lines.\r\n* Copy URL directly to your clipboard.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-10-31T21:32:18Z",
        "closed_at": "2019-12-02T11:33:43Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nBeautiful Soup is a Python library for pulling data out of HTML and XML files. It works with your favorite parser to provide idiomatic ways of navigating, searching, and modifying the parse tree. It commonly saves programmers hours or days of work. (https://www.crummy.com/software/BeautifulSoup/bs4/doc/)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nBeautifulSoup is one of the most prolific Python libraries in existence, in some part having shaped the web as we know it. BeautifulSoup is a lightweight, easy-to-learn, and highly effective way to programmatically isolate information on a single webpage at a time. BeautifulSoup is typically paired with the requests library, where requests will fetch a page and BeautifulSoup will extract the resulting data. (https://hackersandslackers.com/scraping-urls-with-beautifulsoup/)\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-10-31T12:31:44Z",
        "closed_at": "2019-11-30T14:56:00Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nA cross-platform CLI downloader tool written in python\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nYou can download directly from terminal/cmd (in windows) and store to your defined path. You can configure to open the folder or file when the download is completed.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 377,
        "deletions": 320,
        "changed_files": 1,
        "created_at": "2019-10-31T00:47:12Z",
        "closed_at": "2019-11-30T01:56:00Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nFrom Phoneinfoga github page: PhoneInfoga is one of the most advanced tools to scan phone numbers using only free resources. The goal is to first gather standard information such as country, area, carrier and line type on any international phone numbers with a very good accuracy. Then search for footprints on search engines to try to find the VoIP provider or identify the owner.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Check if phone number exists and is possible\r\n- Gather standard informations such as country, line type and carrier\r\n- OSINT footprinting using external APIs, Google Hacking, phone books & search engines\r\n- Check for reputation reports, social media, disposable numbers and more\r\n- Scan several numbers at once\r\n- Use custom formatting for more effective OSINT reconnaissance\r\n- Automatic footprinting on several custom formats\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-10-30T19:54:54Z",
        "closed_at": "2019-11-29T20:24:50Z",
        "merged_at": null,
        "body": "Add to robotics: ev3dev, used for LEGO EV3 robots\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-10-30T16:57:33Z",
        "closed_at": "2019-12-03T00:36:11Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nArcade is an easy-to-learn Python library for creating 2D video games. It is ideal for people learning to program, or developers that want to code a 2D game without learning a complex framework. This PR fixes #1329 \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThe Python Arcade Library has the same target audience as the well-known Pygame library. So how do they differ? You can see the detailed comparison at http://arcade.academy/pygame_comparison.html\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-10-30T16:44:37Z",
        "closed_at": "2019-11-29T18:24:49Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nIt's a growingly popular podcast for teaching Python.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt's dedicated to any educator (primary-middle-high school) who uses Python to teach programming.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-10-29T20:15:24Z",
        "closed_at": "2019-11-28T20:51:55Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nMlxtend (machine learning extensions) is a Python library of useful tools for the day-to-day data science tasks.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n- Highly active project which receives constant releases\r\n- Well maintained documentation as compared to some other similar projects\r\n- Easy to understand and use\r\n- Relatively easier as compared to other libraries for contributing.\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 14,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-10-29T04:24:32Z",
        "closed_at": "2019-11-28T07:51:55Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-10-29T02:08:51Z",
        "closed_at": "2019-11-28T02:14:15Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nStarlette is a lightweight ASGI framework/toolkit, which is ideal for building high performance asyncio services.\r\n\r\nhttps://github.com/encode/starlette\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- It is a well know ASGI server.\r\n- Seriously impressive performance.\r\n- WebSocket support.\r\n- GraphQL support.\r\n- In-process background tasks.\r\n- Test client built on requests.\r\n- Session and Cookie support.\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-10-29T02:06:23Z",
        "closed_at": "2019-11-28T02:14:14Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nUvicorn is a lightning-fast ASGI server implementation, using uvloop and httptools.\r\n\r\nUntil recently Python has lacked a minimal low-level server/application interface for asyncio frameworks. The ASGI specification fills this gap, and means we're now able to start building a common set of tooling usable across all asyncio frameworks.\r\n\r\nhttps://github.com/encode/uvicorn\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Has great documentation.\r\n- Has a great community support.\r\n- It is fast.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-10-29T02:02:37Z",
        "closed_at": "2019-11-28T02:14:16Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\nDaphne is a HTTP, HTTP2 and WebSocket protocol server for ASGI and ASGI-HTTP, developed to power Django Channels.\r\n\r\nIt supports automatic negotiation of protocols; there's no need for URL prefixing to determine WebSocket endpoints versus HTTP endpoints.\r\n\r\nhttps://github.com/django/daphne\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Support HTTP/2.\r\n- It is easy to use.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-10-29T01:55:17Z",
        "closed_at": "2019-11-28T02:14:13Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nPytype checks and infers types for your Python code - without requiring type annotations.\r\nThousands of projects at Google rely on pytype to keep their Python code well-typed and error-free.\r\n\r\nhttps://github.com/google/pytype\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Supported by Google.\r\n- Lint plain Python code, flagging common mistakes such as misspelled attribute names, incorrect function calls, and much more, even across file boundaries.\r\n- Enforce user-provided type annotations. While annotations are optional for pytype, it will check and apply them where present.\r\n- Generate type annotations in standalone files (\"pyi files\"), which can be merged back into the Python source with a provided merge-pyi tool.\r\n- Pytype is a static analyzer; it does not execute the code it runs on.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-10-29T01:51:28Z",
        "closed_at": "2019-11-28T02:14:17Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nPrefect is a new workflow management system, designed for modern infrastructure and powered by the open-source Prefect Core workflow engine. Users organize Tasks into Flows, and Prefect takes care of the rest.\r\n\r\nhttps://github.com/PrefectHQ/prefect\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Has a great documentation.\r\n- Support for plugins.\r\n- Has a simple API.\r\n- Has a great log.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-10-29T01:45:12Z",
        "closed_at": "2019-11-28T02:14:18Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nStreamlit lets you create apps for your machine learning projects with deceptively simple Python scripts. It supports hot-reloading, so your app updates live as you edit and save your file. No need to mess with HTTP requests, HTML, JavaScript, etc. All you need is your favorite editor and a browser.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- It has a better interface.\r\n- It is simlpe to use.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-10-29T01:39:36Z",
        "closed_at": "2019-11-28T02:14:19Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nGive your Sanic API a UI and OpenAPI documentation, all for the price of free.\r\n\r\nhttps://github.com/huge-success/sanic-openapi\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt provides an easy way to create API documentation for Sanic with Swagger.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-10-29T01:34:30Z",
        "closed_at": "2019-11-28T03:14:05Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\npypette (to be read as pipette) is a module that makes building pipelines ridiculously simple, allowing users to control the flow with minimal instructions.\r\n\r\nhttps://github.com/csurfer/pypette\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Ridiculously simple interface.\r\n- Ability to view pipeline structure within the comfort of a terminal.\r\n- Run pipeline in exception resilient way if needed.\r\n- Create dependencies on pipelines easily.\r\n- Generate an easy to view/understand report within the comfort of a terminal.\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-10-29T01:21:08Z",
        "closed_at": "2019-12-07T19:01:18Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nPyright is a fast type checker meant for large Python source bases. It can run in a \u201cwatch\u201d mode and performs fast incremental updates when files are modified.\r\n\r\nhttps://github.com/microsoft/pyright\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Pyright does not require a Python environment or imported third-party packages to be installed.\r\n- Pyright supports configuration files that provide granular control over settings.\r\n- Different \u201cexecution environments\u201d can be associated with subdirectories within a source base.\r\n- Each environment can specify different module search paths, python language versions, and platform targets.\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 75,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-10-28T13:37:56Z",
        "closed_at": "2019-11-27T15:14:05Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-10-27T10:58:54Z",
        "closed_at": "2019-11-26T12:24:52Z",
        "merged_at": null,
        "body": "## GUI Development\r\n* [appJar](http://appjar.info/) - The easiest way to create GUIs in Python.\r\n\r\n## Distribution\r\n* [auto-py-to-exe](https://nitratine.net/blog/post/auto-py-to-exe/) - Convert python scripts to executables with a simple interface.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-10-26T20:17:10Z",
        "closed_at": "2019-11-26T08:24:52Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nA very fast async http client https://github.com/sonic182/aiosonic\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt is very fast, was made to be used in a load test tool\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-10-26T13:50:56Z",
        "closed_at": "2019-11-25T14:20:14Z",
        "merged_at": null,
        "body": "Adds knackpy to Third Party APIs for interacting with Knack apps.\r\n\r\n## What is this Python project?\r\n\r\nA client that interacts with Knack apps. Knack is an online database and business process/workflow automation tool. \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nCurrently no other entries that work with Knack.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-10-26T09:25:18Z",
        "closed_at": "2019-11-25T11:20:13Z",
        "merged_at": null,
        "body": "#499  What is this Python project?\r\n\r\nHeuristic Algorithms (Genetic Algorithm, Particle Swarm Optimization, Simulated Annealing, Ant Colony Algorithm, Immune Algorithm, Artificial Fish Swarm Algorithm) in Python for optimization.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n1. Collect all mainly used heuristic algorithms\r\n2. The algorithm is well wrapped\r\n3. Easy to use. Fast to run.\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2019-10-25T09:55:27Z",
        "closed_at": "2019-10-25T16:23:02Z",
        "merged_at": "2019-10-25T16:23:02Z",
        "body": "\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-10-25T07:08:13Z",
        "closed_at": "2019-10-25T16:24:17Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nBeautifulSoup/bs4 library:\r\nbs4 \u2014 BeautifulSoup 4. Beautiful Soup is a Python library for pulling data out of HTML and XML files. It works with your favorite parser to provide idiomatic ways of navigating, searching, and modifying the parse tree.\r\n\r\n##  What's the difference between this Python project and similar ones?\r\n     *  Best for beginner's\r\n     *  Good scraping functions & features\r\n     *  Provide good parser link: html-parser & lxml\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-10-24T19:41:19Z",
        "closed_at": "2019-10-26T16:22:34Z",
        "merged_at": null,
        "body": "adding a https://news.python.sc/ to news feed section . it is a hacker news clone / look alike website dedicated to python news .\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-10-22T20:57:41Z",
        "closed_at": "2019-11-22T04:17:31Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-10-22T20:31:27Z",
        "closed_at": "2019-12-15T15:44:23Z",
        "merged_at": "2019-12-15T15:44:23Z",
        "body": "##  What is this Python project?\r\n\r\nKornia is a differentiable computer vision library for PyTorch.\r\n\r\nIt consists of a set of routines and differentiable modules to solve generic computer vision problems. At its core, the package uses PyTorch as its main backend both for efficiency and to take advantage of the reverse-mode auto-differentiation to define and compute the gradient of complex functions.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nInspired by OpenCV, this library is composed by a subset of packages containing operators that can be inserted within neural networks to train models to perform image transformations, epipolar geometry, depth estimation, and low-level image processing such as filtering and edge detection that operate directly on tensors.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-10-21T07:27:00Z",
        "closed_at": "2019-11-20T09:03:40Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\nPympler is a development tool to measure, monitor and analyze the memory behavior of Python objects in a running Python application.\r\nPympler a toolset, that contains: \r\n\r\n**asizeof** - Package, that used to analyze and get information about real object size (include nested objects)\r\n**muppy** - used for on-line monitoring of a Python application\r\n**Class Tracker** - provides off-line analysis of the lifetime of selected Python objects.\r\n\r\nAlso included:  HeapMonitor, summery, obtain detailed insight in the size and the lifetime of Python objects, undesirable or unexpected runtime behavior like memory bloat and etc.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nI'm not sure, that in list exist any lib that can be compared with Pympler. \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-10-21T06:02:02Z",
        "closed_at": "2019-11-20T07:03:39Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nModern pure python CouchDB Client. \r\n\r\n - Use requests for HTTP requests (much faster than the standard library)\r\n - Python2 and Python3 compatible with same codebase (with one exception, python view server that uses 2to3)\r\n - Also compatible with pypy.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nCurrently, there are several libraries in python to connect to CouchDB. Why one more? It's very simple.\r\n\r\nAll seems not to be maintained, all libraries used standard Python libraries for HTTP requests, and are not compatible with python3.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-10-20T14:34:05Z",
        "closed_at": "2019-11-20T10:03:40Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nAdded Chainer under Deep learning section. \r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-10-19T04:56:16Z",
        "closed_at": "2019-10-24T18:34:21Z",
        "merged_at": null,
        "body": "Added a repo name is \"Whatsapp Chat Analyzer\"\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\nThis is whatsapp chat analyzer\r\n* Count total messages\r\n* Count total message per head.\r\n* Showing as a graph\r\n* And many more\r\n\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-10-18T15:54:53Z",
        "closed_at": "2019-11-17T17:03:03Z",
        "merged_at": null,
        "body": "Ultrafast JSON Serialization - based on this [article](https://medium.com/@shmulikamar/python-serialization-benchmarks-8e5bb700530b) optimistically 3 times faster, I'm working on jupyter notebook about serialization, but so far unfinnished.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-10-18T12:53:05Z",
        "closed_at": "2019-11-17T19:09:20Z",
        "merged_at": null,
        "body": "Name:-\r\nSignale.py\r\n\r\nDescription:-\r\nElegant Console Logger For Python Command-Line Apps\r\n\r\nInstallation:-\r\nAvailable on PyPi can be installed using the command:-\r\n\r\n    `[sudo] pip install signalepy`\r\nGitHub Repository:-\r\n[Repo](https://github.com/ShardulNalegave/signale.py)\r\n\r\nCreator:-\r\n[Shardul Nalegave](https://shardul.netlify.com/)\r\n[Github Profile Page](https://github.com/ShardulNalegave)",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-10-16T12:56:54Z",
        "closed_at": "2019-11-15T13:21:38Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nAdded Security category to the repo and added Z3 to scientific category\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-10-14T08:23:24Z",
        "closed_at": "2019-11-13T09:05:09Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-10-13T14:03:56Z",
        "closed_at": "2020-04-07T12:10:58Z",
        "merged_at": "2020-04-07T12:10:58Z",
        "body": "## What is this Python project?\r\n\r\nA news aggregator for the Python community\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nCompares to r/Python and other link sharing sites. \r\nOpen Source Django implementation is available: https://github.com/sebst/pythonic-news\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-10-11T22:32:36Z",
        "closed_at": "2019-11-14T21:21:37Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nThe Plotly Python library (plotly.py) is an interactive, open-source plotting library that supports over 40 unique chart types covering a wide range of statistical, financial, geographic, scientific, and 3-dimensional use-cases.\r\n\r\nBuilt on top of the Plotly JavaScript library (plotly.js), plotly.py enables Python users to create beautiful interactive web-based visualizations that can be displayed in Jupyter notebooks, saved to standalone HTML files, or served as part of pure Python-built web applications using Dash.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nWhen thinking about plotting libraries, there are a few things we want:\r\n1. One-line charts for rapid exploration\r\n2. Interactive elements for subsetting/investigating data\r\n3. Option to dig into details as needed\r\n4. Easy customization for the final presentation.\r\n\r\nAs of right now, the best option for doing all of these in Python is Plotly. Plotly allows us to make visualizations quickly and helps us get a better insight into our data through interactivity. With other libraries, plotting turned into a tedious task, but with Plotly, there is joy in making a great figure!\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-10-10T23:23:28Z",
        "closed_at": "2020-04-07T12:12:09Z",
        "merged_at": "2020-04-07T12:12:09Z",
        "body": "## What is this Python project?\r\n\r\n[**Indico**](https://github.com/indico/indico) is:\r\n * \ud83d\uddd3 a general-purpose **event management** tool;\r\n * \ud83c\udf0d fully **web-based**;\r\n * \ud83e\udde9 **feature-rich** but also **extensible** through the use of [plugins](https://docs.getindico.io/en/stable/plugins/);\r\n * \u2696\ufe0f **Open-Source** Software under the MIT License;\r\n * <img src=\"https://raw.githubusercontent.com/indico/assets/master/cern_badge.png\" width=\"20\"> **made at CERN**, [the place where the web was born](https://home.cern/science/computing/birth-web)!\r\n\r\n![A sneak peek of Indico](https://raw.githubusercontent.com/pferreir/indico/new-readme/sneakpeek.gif)\r\n\r\n## What does it do?\r\nIndico's **main features** are:\r\n * a powerful and flexible **hierarchical content management** system for events;\r\n * a full-blown **conference organization workflow** with:\r\n   - \ud83d\udce2 **Call for Abstracts** and **abstract reviewing** modules;\r\n   - \ud83d\udcdd flexible **registration form** creation and configuration;\r\n   - \ud83d\udcb0 integration with existing **payment systems**;\r\n   - \u2705 a **paper reviewing** workflow;\r\n   - \ud83d\uddd3 a **drag and drop timetable management interface**;\r\n   - \ud83c\udfab a simple **badge editor** with the possibility to print badges and tickets for participants;\r\n * tools for **meeting management** and archival of presentation materials;\r\n * a powerful **room booking** interface;\r\n * integration with existing **video conferencing solutions**;\r\n\r\nA more detailed list [can be found here](https://getindico.io/features/). There is also a [video](https://www.youtube.com/watch?v=yo8rgg9dOcc)!\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nI'm not sure if there are some alternatives written in Python.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-10-10T20:55:43Z",
        "closed_at": "2019-10-17T14:51:26Z",
        "merged_at": "2019-10-17T14:51:26Z",
        "body": "I'm suggesting that that you remove a dead resource.  The URL no longer exists.  ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-10-09T15:28:20Z",
        "closed_at": "2019-10-17T14:50:50Z",
        "merged_at": "2019-10-17T14:50:50Z",
        "body": "\r\n\r\n## What is this Python project?\r\n\r\nJet Admin is a SaaS service that automatically generates extendable back office for your application. Jet Bridge is a standalone app which generates REST API thought which your SQL database is connected to Jet Admin. All you need is to install Jet Bridge adapter and connect it to your database.\r\nMore here https://github.com/jet-admin/jet-bridge\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Powerful dashboard out-of-the-box\r\n- Nice and responsive UI\r\n- With WYSIWYG interface customization your can change almost every part of interface\r\n- Flex Features allows you to create your custom Actions, Views, Fields and other\r\n- Works with any technology: the interface is generated automatically based on an analysis of the data and data structure of your database\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-10-09T13:01:13Z",
        "closed_at": "2019-11-08T14:22:46Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nChatterBot is a machine learning, conversational dialog engine for creating chat bots.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nChatterBot uses Machine Learning features, which increase up your time advantage and quality accuracy\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-10-08T06:01:18Z",
        "closed_at": "2019-11-07T10:59:28Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nPython function cache toolkit.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-10-08T04:10:14Z",
        "closed_at": "2019-10-08T06:00:42Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nPython function cache toolkit.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-10-07T12:16:30Z",
        "closed_at": "2019-11-07T10:59:27Z",
        "merged_at": null,
        "body": "[httpx](https://github.com/encode/httpx) is an HTTP client library that provides a mostly requests-compatible API. Some of its notable features can be seen [here](https://github.com/encode/httpx#features). These include supporting both synchronous and asynchronous code.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a \ud83d\udc4d to it.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-10-06T19:43:23Z",
        "closed_at": "2019-11-07T10:59:30Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-10-06T19:27:29Z",
        "closed_at": "2019-11-07T10:59:31Z",
        "merged_at": null,
        "body": "\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-10-06T12:56:33Z",
        "closed_at": "2019-11-07T10:59:32Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n[MLflow](https://github.com/mlflow/mlflow) is an open source platform to streamline machine learning development, including tracking experiments, packaging code into reproducible runs, and sharing and deploying models. \r\n\r\nMLflow is the most comprehensive, platform agnostic project with the aims of encompassing, on a single platform, three main components of the ML lifecycle:  \r\n\r\n* MLflow Tracking: An API to log parameters, code, and results in machine learning experiments and compare them using an interactive UI.\r\n\r\n* MLflow Projects: A code packaging format for reproducible runs using Conda and Docker, so you can share your ML code with others.\r\n\r\n* MLflow Models: A model packaging format and tools that let you easily deploy the same model (from any ML library) to batch and real-time scoring on platforms such as Docker, Apache Spark, Azure ML and AWS SageMaker.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* MLOps is still a domain in its early stages but some tools already exist based on the Kubernetes containerised ecosystem:\r\n  * [Kubeflow](https://github.com/kubeflow/) \r\n  * [Pachyderm](https://github.com/pachyderm/pachyderm) \r\n  * [Polyaxon](https://github.com/polyaxon/polyaxon)  \r\n\r\nThe fact that they're based on Kubernetes appears to be somewhat of a barrier for small scale Data Science teams, whilst with MLflow an individual contributor can easily setup a single tracking server for their own experiments. They also tend to be more Deep Learning oriented. An advantage of Pachyderm is that it provides data reproducibility (apart from the code + model reproducibility provided by MLflow).\r\n\r\n* [Sacred](https://github.com/IDSIA/sacred) provides experimentation logging, but doesn't provide model packaging and sharing or the possibility of creating reproducible projects with your ML code for other people to use. Also you'd need a frontend (see next entry) to visualise and track your experiments, which is already provided by MLflow tracking server.\r\n\r\n* [Ombniboard](https://github.com/vivekratnavel/omniboard) would only provide the frontend.\r\n\r\nSome other nice tools exist but they're library specific, e.g. to track specific frameworks' simulations: [TensorBoard](https://www.tensorflow.org/tensorboard) and in the domain of model deployment [TFX](https://www.tensorflow.org/tfx) for TensorFlow. \r\n\r\n\r\n---- \r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-10-06T11:31:23Z",
        "closed_at": "2019-11-07T10:59:33Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nAn agile/flexibel project management platform.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere are not many similar project. [Trac](https://trac.edgewall.org/) might be close but Taiga is much more flexible and general.\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-10-06T08:55:17Z",
        "closed_at": "2019-11-07T10:59:34Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n[Inspector Tiger](https://github.com/thg-consulting/inspectortiger) is a modern python code review tool / framework. (thg-consulting/inspectortiger#12)\r\n## What's the difference between this Python project and similar ones?\r\nIt is not a linter that warns you about whitespace nor finds that contains errors. It is a linter that helps you to find out which parts can be improvable and not pythonic. \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-10-05T22:28:17Z",
        "closed_at": "2019-11-07T10:59:35Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nThis project provides higher order functions like map, filter, foldl, sort_by and take_while as simple command-line tools. Following the UNIX philosophy, these commands are designed to be composed via pipes. A large collection of functions such as basename, replace, contains or is_dir are provided as arguments to these commands.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis project extends your command line with new higher order functions to easily manipulate text streams.\r\n\r\n## Demo\r\n\r\n<a href=\"https://asciinema.org/a/6zsp3hEPpM7tmWHrjThl7idqh\" target=\"_blank\"><img src=\"https://asciinema.org/a/6zsp3hEPpM7tmWHrjThl7idqh.png\" width=\"600\" /></a>\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-10-05T21:58:27Z",
        "closed_at": "2019-11-07T10:59:36Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nCreate simple repeatable tasks in a Bakefile similar to a Makefile with new features and improvements.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* A Bakefile, which looks and feels like the good parts of a Makefile.\r\n* Except, you can write real bash code!      Any and all syntax is accepted \u2014 no magic going on here. ;)\r\n* Unlike Makefile, you may utilize      [ 4 \u00d7 U+0020 a.k.a. \u201cspaces\u201d] for indentation.\r\n* Environment variables are explicitly passed or whitelisted (--allow), not inherited from the parent shell.\r\n* Tasks can be run safely and reliably. Rest assured that scripts are executed from the project root directory.\r\n* There are many other benefits to this design, that have yet to be expressed in this document.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-10-05T14:37:35Z",
        "closed_at": "2019-11-22T05:17:29Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nPySnooper is a debug/logging Library that logs function execution line by line along with Variable value changes.\r\n[PySnooper on GitHub](https://github.com/cool-RR/PySnooper)\r\n#1285 \r\n## What's the difference between this Python project and similar ones?\r\n\r\nPySnooper Requires almost no setup.\r\nfor example, to log the execution of a function all that would be required is:\r\n\r\n```\r\nimport pysnooper\r\n\r\n@pysnooper.snoop()\r\ndef is_prime(number):\r\n    # function definition ...\r\n```\r\nevery call of the function will get automatically logged.\r\n\r\nit also includes many other features which make life a lot simpler such as:\r\n\r\n- Redirecting output to a file\r\n\r\n- Tracking Variables which aren't local to a function\r\n\r\n- Prefix for lines to make them easily searchable\r\n\r\n- Thread info for multi threadded applications\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-10-04T19:38:20Z",
        "closed_at": "2019-11-07T10:59:37Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nThe webbrowser module includes functions to open URLs in interactive browser applications. The module includes a registry of available browsers, in case multiple options are available on the system. It can also be controlled with the BROWSER environment variable.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThe URL is opened in a browser window, and that window is raised to the top of the window stack. An existing window will be reused, if possible, but the actual behavior may depend on your browser\u2019s settings.\r\nIf for some reason your application needs to use a specific browser, you can access the set of registered browser controllers using the get() function. The browser controller has methods to open(), open_new(), and open_new_tab().\r\nUsers can control the module from outside your application by setting the environment variable BROWSER to the browser names or commands to try.\r\nAll of the features of the webbrowser module are available via the command line as well as from within your Python program.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-10-04T12:31:19Z",
        "closed_at": "2019-11-07T10:59:38Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-10-04T02:44:57Z",
        "closed_at": "2019-11-07T10:59:39Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nBinds PortAudio to Python\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-10-02T15:52:53Z",
        "closed_at": "2019-11-07T10:59:40Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nVaex is a python library for lazy Out-of-Core DataFrames (similar to Pandas), to visualize and explore big tabular datasets.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nVaex uses memory mapping, a zero memory copy policy, and lazy computations for best performance.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-10-02T12:35:46Z",
        "closed_at": "2019-11-07T10:59:41Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDontpady is an simple CLI application to use [dontpad](https://dontpad.com)\r\nIt's possible to save text files and text input using a password to encrypt\r\n\r\nFreatures:\r\n\r\n*Write* from stdin input\r\n*Write* from text file\r\n*Write and read* using a crypt key\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n1. On dontpady (mine) you can write on repo directly from a file\r\n2. On dontpady you can crypt you repo using a key, the hash is simple but usefull\r\n3. On dontpady you can read or save an repo text easily\r\n\r\nComparisons:\r\n\r\nhttps://github.com/GuilhermeFreire/dontpad (not updated since 10 months)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-10-02T03:12:30Z",
        "closed_at": "2019-11-07T10:59:42Z",
        "merged_at": null,
        "body": "I found this library useful, so hopefully, others can too. :)\r\n\r\n## What is this Python project?\r\n\r\nJust a new library that I found useful.\r\n\r\nDescribe features.\r\n\r\nIt can convert numbers to words and help with grammar and text processing.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nDeals with plurals, and all different types of words.\r\n\r\nEnumerate comparisons.\r\n\r\nQuoting its PyPi page, \r\n\r\n- plural plural_noun plural_verb plural_adj singular_noun no num\r\n- compare compare_nouns compare_nouns compare_adjs\r\n- a an\r\n- present_participle\r\n- ordinal number_to_words\r\n- join\r\n- inflect classical gender\r\n- defnoun defverb defadj defa defan\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-10-01T20:34:28Z",
        "closed_at": "2019-11-07T10:59:43Z",
        "merged_at": null,
        "body": "added Django-Kaio - Class based settings for Django projects that can be read from multiple sources.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-10-01T20:29:20Z",
        "closed_at": "2019-11-07T10:59:44Z",
        "merged_at": null,
        "body": "added Django cachalot - Caches your Django ORM queries and automatically invalidates them.\r\n\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-10-01T20:23:12Z",
        "closed_at": "2019-11-07T10:59:45Z",
        "merged_at": null,
        "body": "added Puput, Puput is a powerful and simple Django app to manage a blog. It uses the awesome Wagtail CMS as content management system.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-10-01T07:56:37Z",
        "closed_at": "2019-11-08T01:39:27Z",
        "merged_at": "2019-11-08T01:39:27Z",
        "body": "This addresses issue #1324 \r\n\r\nFrom PyWin32's [SourceForge page](https://sourceforge.net/projects/pywin32/):\r\n\r\n> This project has been migrated to github - please visit https://github.com/mhammond/pywin32",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-10-01T07:44:09Z",
        "closed_at": "2019-11-07T10:59:46Z",
        "merged_at": null,
        "body": "This addresses issue #1205 \r\n\r\nThe new podcast location ([Test and Code](https://testandcode.com/)) was already on the list.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-10-01T05:18:46Z",
        "closed_at": "2019-11-07T10:59:47Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDynaconf is a friendlier configuration system write in python support by Red Hat members and a good community.\r\n\r\n**dynaconf** a layered configuration system for Python applications -\r\nwith strong support for [12-factor applications](https://12factor.net/config)\r\nand extensions for **Flask** and **Django**.\r\n\r\n# Features\r\n\r\n- Strict separation of settings from code (following [12-factor applications](https://12factor.net/config) Guide).\r\n- Define comprehensive default values.\r\n- Store parameters in multiple file formats (**.toml**, .json, .yaml, .ini and .py).\r\n- Sensitive **secrets** like tokens and passwords can be stored in safe places like `.secrets` file or `vault server`.\r\n- Parameters can optionally be stored in external services like Redis server.\r\n- Simple **feature flag** system.\r\n- Layered **[environment]** system.\r\n- Environment variables can be used to override parameters.\r\n- Support for `.env` files to automate the export of environment variables.\r\n- Correct data types (even for environment variables).\r\n- Have **only one** canonical settings module to rule all your instances.\r\n- Drop in extension for **Flask** `app.config` object.\r\n- Drop in extension for **Django** `conf.settings` object.\r\n- Powerful **$ dynaconf** CLI to help you manage your settings via console.\r\n- Customizable **Validation** System to ensure correct config parameters.\r\n- Allow the change of **dyna**mic parameters on the fly without the need to redeploy your application.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Customization configurations\r\n- Configs Overloading \r\n- Integration with external systems like aws secrets, vault.\r\n- Feature Flags/Toggles\r\n\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-09-28T20:10:58Z",
        "closed_at": "2019-11-07T10:59:48Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDramatiq is a distributed task processing library for Python with a focus on simplicity, reliability and performance.\r\n\r\n\r\nDramatiq\u2019s driving principles are as follows:\r\n\r\n    high reliability and performance\r\n    simple and easy to understand core\r\n    convention over configuration\r\n\r\nIf you\u2019ve ever had to use Celery in anger, Dramatiq could be the tool for you.\r\n\r\nBy: @Bogdanp\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nHere are some of the main differences between Dramatiq, Celery and RQ:\r\n\r\n\\# | Dramatiq | Celery | Huey  | RQ  \r\n--|----------|--------|-------|---\r\nPython 2 support  | No  | Yes  | Yes | Yes \r\nSimple implementation | Yes | No  | Yes | Yes \r\nAutomatic retries | Yes | No | Yes | No  \r\nReliable delivery | Yes | No  | No  | No  \r\nLocks and rate limiting | Yes | No | Yes | No  \r\nTask prioritization | Yes | No | No  | No  \r\nDelayed tasks | Yes | Yes  | Yes | No  \r\nCronlike scheduling | No  | Yes  | Yes | No  \r\nChaining / Pipelining | Yes | Yes  | Yes | No  \r\nResult storage  | Yes | Yes  | Yes | Yes \r\nCode auto-reload  | Yes | No | No  | No  \r\nRabbitMQ support  | Yes | Yes  | Yes | No  \r\nRedis support | Yes | Yes  | Yes | Yes \r\nIn-memory broker support  | Yes | No | Yes | No  \r\nGreenlet support  | Yes | Yes  | Yes | No  \r\n\r\nFor more: https://dramatiq.io/motivation.html\r\n\r\n## Realted\r\n\r\n- You can integrate with Django: https://github.com/Bogdanp/django_dramatiq\r\n- It has a dashboard: https://github.com/Bogdanp/dramatiq_dashboard\r\n- Schedule tasks with APScheduler: https://defn.io/2018/01/11/dramatiq-cron/\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-09-24T12:45:12Z",
        "closed_at": "2019-11-07T10:59:49Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n[python-benedict](https://github.com/fabiocaccamo/python-benedict/) is a `dict` subclass with **keypath** support, **I/O methods** *(read/write json, toml, xml, yaml)* and **many utilities**.\r\n\r\n### Features\r\n-   Full **keypath** support *(using the dot syntax by default)*\r\n-   Easy **I/O operations** with most common formats: `json`, `toml`, `xml`, `yaml`\r\n-   Many **utility** and **parse methods** to retrieve data as needed *(all methods listed below)*\r\n-   100% **backward-compatible** *(you can replace existing dicts without pain)*\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nI don't know similar projects. This is an all in one solution to perform complex operation with one line of code.\r\n\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-09-17T06:42:28Z",
        "closed_at": "2019-11-07T10:59:50Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n* [cornac](https://cornac.preferred.ai/) - A comparative framework for multimodal recommender systems. It focuses on making it convenient to work with models leveraging auxiliary data (e.g., item descriptive text and image, social network, etc).\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-09-11T20:22:35Z",
        "closed_at": "2020-09-08T08:25:20Z",
        "merged_at": "2020-09-08T08:25:20Z",
        "body": "## What is this Python project?\r\n\r\nA library and command-line utility for rendering projects templates. \r\nhttps://github.com/pykong/copier\r\n\r\n* Works with **local** paths and **git URLs** (GitHub, GitLab, etc.)\r\n* Your project can include any kind of file and the text-based files can have placeholders values to be replaced with user's data.\r\n* It can be used as a library and called from your own projects (instant superpower! \ud83d\ude80).\r\n* It generates a beautiful output and take care of not overwrite existing files, unless instructed to do so:\r\n<img src=\"https://github.com/jpscaletti/copier/raw/master/copier-output.png\" alt=\"Sample output\" width=600>\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n1. It can partially update an already rendered project.\r\n1. It shows you what fields are being created or updated instead of just overwriting everything.\r\n1. Can be used as a library.\r\n1. Can be customized with any default data, not only what you ask the user.\r\n\r\n---\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 14
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-09-11T13:44:33Z",
        "closed_at": "2019-09-16T03:31:51Z",
        "merged_at": "2019-09-16T03:31:51Z",
        "body": "## What is this Python project?\r\n\r\n[awesome-python-typing](https://github.com/typeddjango/awesome-python-typing) is a collection of awesome Python types, stubs, plugins, and tools to work with them.\r\n\r\n<img width=\"614\" alt=\"\u0421\u043d\u0438\u043c\u043e\u043a \u044d\u043a\u0440\u0430\u043d\u0430 2019-09-11 \u0432 16 44 10\" src=\"https://user-images.githubusercontent.com/4660275/64702540-675ea080-d4b3-11e9-9c42-cf8d38325036.png\">\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons: \r\n\r\n- None\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-09-09T11:50:46Z",
        "closed_at": "2019-10-03T16:11:47Z",
        "merged_at": "2019-10-03T16:11:47Z",
        "body": "## What is this Python project?\r\n\r\nThe strictest and most opinionated python linter ever!\r\nRepo: https://github.com/wemake-services/wemake-python-styleguide\r\nDocs: https://wemake-python-stylegui.de/en/latest/\r\nPyPI: https://pypi.org/project/wemake-python-styleguide\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n<img width=\"866\" alt=\"\u0421\u043d\u0438\u043c\u043e\u043a \u044d\u043a\u0440\u0430\u043d\u0430 2019-09-09 \u0432 14 50 12\" src=\"https://user-images.githubusercontent.com/4660275/64528428-29297b80-d311-11e9-932a-007d89204ab7.png\">\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a \ud83d\udc4d to it, and usually, the maintainer will merge it when votes reach 20.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-09-06T09:28:49Z",
        "closed_at": "2019-12-05T12:16:45Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nPyinstrument is a Python profiler. A profiler is a tool to help you 'optimize' your code - make it faster. It sounds obvious, but to get the biggest speed increase you should [focus on the slowest part of your program](https://en.wikipedia.org/wiki/Amdahl%27s_law). Pyinstrument helps you find it!\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nProfiler with very good performance and low overhead, several output formats (text, json, html) and ability to profile a specific chunk of code.\r\n\r\n![imagen](https://user-images.githubusercontent.com/1483414/64417137-d3e33500-d098-11e9-901d-09625ed4e4de.png)\r\n\r\nPyinstrument is a statistical profiler - it doesn't track every function call that your program makes. Instead, it's recording the call stack every 1ms.\r\n\r\nThat gives some advantages over other profilers. Firstly, statistical profilers are much lower-overhead than tracing profilers.\r\n\r\n|              | Django template render \u00d7 4000                      | Overhead\r\n| -------------|:---------------------------------------------------|---------:\r\n| Base         | `\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                       `  0.33s   | \r\n|              |                                                    |\r\n| pyinstrument | `\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                   `  0.43s   |      30%\r\n| cProfile     | `\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588          `  0.61s   |      84%\r\n| profile      | `\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588...\u2588\u2588`  6.79s   |    2057%\r\n\r\nBut low overhead is also important because it can distort the results. When using a tracing profiler, code that makes a lot of Python function calls invokes the profiler a lot, making it slower. This distorts the results, and might lead you to optimise the wrong part of your program!\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-09-05T11:50:37Z",
        "closed_at": "2019-11-07T12:59:27Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nThe ML workspace is an all-in-one web-based IDE specialized for machine learning and data science with Python. It is simple to deploy and gets you started within minutes to productively built ML solutions on your own machines. This workspace is the ultimate tool for developers preloaded with a variety of popular data science libraries (e.g., Tensorflow, PyTorch, Keras, Sklearn) and dev tools (e.g., Jupyter, VS Code, Tensorboard) perfectly configured, optimized, and integrated.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Combines various common (open-source) development tools (Jupyter, JupyterLab, VS Code, ...) into one integrated Docker container. \r\n- Completely web-based with a high extensibility and lots of features.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-09-05T11:17:35Z",
        "closed_at": "2019-11-07T11:59:27Z",
        "merged_at": null,
        "body": "Add a _Dynamic Analysis_ section and include [`parameters-validation`](https://github.com/allrod5/parameters-validation) lib to it.\r\n\r\n## What is this Python project?\r\n\r\nparameters-validation lib eases function parameters validation regarding type, content and/or any other custom validations one may wish to perform.\r\n\r\nIt leverages type-hint annotations to provide a clean and unobstructive way to adopt the [*Look Before You Leap* principle](https://docs.python.org/3/glossary.html#term-lbyl) when you need to.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere are no similar projects currently. Usually, the developer will write their own validation helper functions and manually call'em. While this is fine, the end result pollutes function bodies with validation actions that are not the core responsibility of a function. Nevertheless, there are simple validations (such as checking if a string is not blank or that a number is not negative) that will be kinda frequent and repeated all over different projects while performing exactly the same functionality.\r\n\r\n`parameters-validation` lib enables removing the validation logic from the function body, explicitly stating validations upfront in the function signature and provides ready-to-use common validations.\r\n\r\nHere a simple comparison between runtime validations with and without using `parameters-validation`:\r\n\r\n```python\r\n\"\"\"\r\nUsing parameters-validation lib: clean and explicit way of declaring\r\nand performing runtime validations\r\n\"\"\"\r\n@validate_parameters\r\ndef register(\r\n    token: strongly_typed(AuthToken),\r\n    name: non_blank(str),\r\n    age: non_negative(int),\r\n    nickname: no_whitespaces(non_empty(str)),\r\n    bio: str,\r\n):\r\n    # do register\r\n```\r\n\r\n```python\r\n\"\"\"\r\nAdding validation code directly at the function body: explicit on the\r\nvalidations but pollutes the function body\r\n\"\"\"\r\n@validate_parameters\r\ndef register(\r\n    token: AuthToken,\r\n    name: str,\r\n    age: int,\r\n    nickname: str,\r\n    bio: str,\r\n):\r\n    if not isinstance(token, AuthToken):\r\n        raise TypeError(\"Parameter 'token' must be of type 'AuthToken'\")\r\n    if not bool(name and name.strip()):\r\n        raise ValueError(\"Parameter 'name' cannot be blank nor empty\")\r\n    if age < 0:\r\n        raise ValueError(\"Parameter 'age' cannot be negative\")\r\n    if not nickname:\r\n        raise ValueError(\"Paramater 'nickname' cannot be empty\")\r\n    if \" \" in nickname:\r\n        raise ValueError(\"Parameter 'nickname' cannot contain whitespaces\")\r\n    # do register\r\n```\r\n\r\n```python\r\n\"\"\"\r\nAdding validation code in a helper function: implicit on the\r\nvalidations pollutes outer scope of the function with the companion\r\nhelper function. The companion helper is harder to keep in sync\r\nwith the register function and duplicates parameters declarations\r\n\"\"\"\r\n_validate_register_parameters(\r\n    token: AuthToken,\r\n    name: str,\r\n    age: int,\r\n    nickname: str,\r\n    bio: str,\r\n):\r\n    if not isinstance(token, AuthToken):\r\n        raise TypeError(\"Parameter 'token' must be of type 'AuthToken'\")\r\n    if not bool(name and name.strip()):\r\n        raise ValueError(\"Parameter 'name' cannot be blank nor empty\")\r\n    if age < 0:\r\n        raise ValueError(\"Parameter 'age' cannot be negative\")\r\n    if not nickname:\r\n        raise ValueError(\"Paramater 'nickname' cannot be empty\")\r\n    if \" \" in nickname:\r\n        raise ValueError(\"Parameter 'nickname' cannot contain whitespaces\")\r\n\r\n@validate_parameters\r\ndef register(\r\n    token: AuthToken,\r\n    name: str,\r\n    age: int,\r\n    nickname: str,\r\n    bio: str,\r\n):\r\n    _validate_register_parameters(token, name, age, nickname, bio)\r\n    # do register\r\n```\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-09-04T06:24:06Z",
        "closed_at": "2019-11-07T10:59:29Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nIt's a new kind of progress bar, with real-time throughput, eta and very cool animations!\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt got more than 250\u2b50\ufe0f in less than a month!\r\nTake a look: https://github.com/rsalmei/alive-progress\r\n\r\n![alive-progress](https://raw.githubusercontent.com/rsalmei/alive-progress/master/img/main.gif)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-08-31T13:46:41Z",
        "closed_at": "2019-11-06T14:36:57Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-08-30T06:25:51Z",
        "closed_at": "2019-11-07T10:59:55Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nPySnooper lets you print values except instead of carefully crafting the right print lines, you just add one decorator line to the function you're interested in. You'll get a play-by-play log of your function, including which lines ran and when, and exactly when local variables were changed.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nJust slap the decorator on, as shown below, and redirect the output to a dedicated log file by specifying its path as the first argument.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2019-08-29T13:38:12Z",
        "closed_at": "2019-09-03T06:10:53Z",
        "merged_at": "2019-09-03T06:10:53Z",
        "body": "## What is this Python project?\r\nA quick grammar fix.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n--\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-08-28T06:04:19Z",
        "closed_at": "2019-11-06T06:36:53Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-08-26T08:52:34Z",
        "closed_at": "2019-09-03T06:11:36Z",
        "merged_at": "2019-09-03T06:11:36Z",
        "body": "## What is this Python project?\r\n\r\nThis project provide list of flake8 extensions, which could be used with [flake-8](http://flake8.pycqa.org/en/latest/)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-08-26T03:18:29Z",
        "closed_at": "2019-11-29T07:24:51Z",
        "merged_at": null,
        "body": "# What is this Python project?\r\n\r\nNeuraxle is a Machine Learning (ML) library for building neat pipelines, providing the right abstractions to both ease research, development, and deployment of your ML applications. Features: \r\n- Better hyperparameter space handling\r\n- Composite design pattern for steps in a pipeline\r\n- Streaming pipelines where all data can flow (not just like a block all at once)\r\n- AutoML algorithms to launch hyperparameter search\r\n- Meta pipeline steps as meta-optimizers for AutoML\r\n- (soon) Vizualisation of hyperparameter correlation\r\n- (soon) Automatic REST API serving of models\r\n\r\n# What's the difference between this Python project and similar ones?\r\n\r\n## Production-ready\r\n\r\nMost research projects don't ever get to production. However, you want\r\nyour project to be production-ready and already adaptable (clean) by the\r\ntime you finish it. You also want things to be simple so that you can\r\nget started quickly.\r\n\r\nMost existing machine learning pipeline frameworks are either too simple\r\nor too complicated for medium-scale projects. Neuraxle is balanced for\r\nmedium-scale projects, providing simple, yet powerful abstractions that\r\nare ready to be used.\r\n\r\n## Compatibility\r\n\r\n> Neuraxle is built as a framework that enables you to define your own pipeline steps.\r\n\r\nThis means that you can use [scikit-learn](https://scikit-learn.org/stable/), [Keras](https://keras.io/), [TensorFlow](https://www.tensorflow.org/), [PyTorch](https://pytorch.org/) and/or **any other machine learning library** you like within and throughout your Neuraxle pipelines.\r\n\r\n## Parallel Computing\r\n\r\nNeuraxle offer multiple parallel processing features using [joblib](https://joblib.readthedocs.io/en/latest/parallel.html). Most parallel processing in Neuraxle happens in the [pipeline](https://www.neuraxle.neuraxio.com/stable/api/neuraxle.pipeline.html) and [union](https://www.neuraxle.neuraxio.com/stable/api/neuraxle.union.html) modules, and as such, neuraxle can be easily parallelized on a cluster of computers using [distributed](https://ml.dask.org/joblib.html) as its [joblib backend](https://ml.dask.org/joblib.html).\r\n\r\n## Automatic Machine Learning\r\n\r\nOne of the core goal of this framework is to enable easy automatic\r\nmachine learning, and also meta-learning. It should be easy to train a\r\nmeta-optimizer on many different tasks: the optimizer is a model itself\r\nthat maps features of datasets and features of the hyperparameter space\r\nto a guessed performance score to predict the best hyperparameters.\r\nHyperparameter spaces are easily defined with a range, and are only\r\ncoupled to their respective pipeline steps, rather than being coupled to\r\nthe whole pipeline, which enable class reuse and more modularity.\r\n\r\n## Comparison to Other Machine Learning Pipeline Frameworks\r\n\r\n### scikit-learn\r\n\r\nEverything that works in sklearn is also useable in Neuraxle. Neuraxle\r\nis built in a way that does not replace what already exists. Therefore,\r\nNeuraxle adds more power to scikit-lean by providing neat abstractions,\r\nand neuraxle is even retrocompatible with sklean if it ever needed to be\r\nincluded in an already-existing sklearn pipeline (you can do that by\r\nusing ``.tosklearn()`` on your Neuraxle pipeline). We believe that\r\nNeuraxle helps scikit-learn, and also scikit-learn will help Neuraxle.\r\nNeuraxle is best used with scikit-learn.\r\n\r\nAlso, the top core developers of scikit-learn, Andreas C. M\u00fcller, [gave a talk](https://www.youtube.com/embed/Wy6EKjJT79M) in which \r\nhe lists the elements that are yet to be done in scikit-learn. He refers to\r\nbuilding bigger pipelines with automatic machine learning, meta\r\nlearning, improving the abstractions of the search spaces, and he also\r\npoints out that it would be possible do achieve that in another library\r\nwhich could reuse scikit-learn. Neuraxle is here to solve those problems\r\nthat are actually shared by the open-source community in general. Let's\r\nmove forward with Neuraxle: join Neuraxle's [community](https://www.neuraxle.neuraxio.com/stable/Neuraxle/README.html#community).\r\n\r\n[![](http://i3.ytimg.com/vi/Wy6EKjJT79M/maxresdefault.jpg)](https://www.youtube.com/embed/Wy6EKjJT79M?start=1361&amp;end=1528)\r\n[https://www.youtube.com/embed/Wy6EKjJT79M?start=1361&amp;end=1528](https://www.youtube.com/embed/Wy6EKjJT79M?start=1361&amp;end=1528)\r\n\r\n\r\n### Apache Beam\r\n\r\nApache Beam is a big, multi-language project and hence is complicated.\r\nNeuraxle is pythonic and user-friendly: it's easy to get started.\r\n\r\nAlso, it seems that Apache Beam has GPL and MPL dependencies, which\r\nmeans Apache Beam might itself be copyleft (?). Neuraxle doesn't have\r\nsuch copyleft dependencies.\r\n\r\n### spaCy\r\n\r\nspaCy has copyleft dependencies or may download copyleft content, and it\r\nis built only for Natural Language Processing (NLP) projects. Neuraxle\r\nis open to any kind of machine learning projects and isn't an NLP-first\r\nproject.\r\n\r\n### Kubeflow\r\n\r\nKubeflow is cloud-first, using Kubernetes and is more oriented towards\r\ndevops. Neuraxle isn't built as a cloud-first solution and isn't tied to\r\nKubernetes. Neuraxle instead offers many parallel processing features,\r\nsuch as the ability to be scaled on many cores of a computer, and even\r\non a computer cluster (e.g.: in the cloud using any cloud provider) with\r\njoblib, using dask's distributed library as a joblib backend. A Neuraxle\r\nproject is best deployed as a microservice within your software\r\nenvironment, and you can fully control and customize how you deploy your\r\nproject (e.g.: coding yourself a pipeline step that does json conversion\r\nto accept http requests).\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach 20.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-08-16T15:21:41Z",
        "closed_at": "2019-11-29T17:24:51Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n```\r\npip install ab\r\n```\r\n\r\n* Split-bucket testing (control, variant1, variant2, ...)\r\n* Multi-arm bandit testing (explore vs. exploit)\r\n* Test analysis tools (determine winning variants with statistical\r\nsignificance)\r\n\r\nFuture improvements:\r\n* Simple Reinforcement-Learning interface (similar to MAB)\r\n* Visualization tools for on-going and final test analysis\r\n\r\nThanks for considering this addition!\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere have been no popular split-bucket or multi-arm bandit testing\r\nframeworks for Python, so I started `ab` and wanted to get more\r\ncontributors! Hoping awesome-python can help add more features!\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-08-13T10:58:14Z",
        "closed_at": "2019-11-06T06:36:51Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2019-08-08T05:31:07Z",
        "closed_at": "2019-08-08T10:11:27Z",
        "merged_at": "2019-08-08T10:11:27Z",
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-08-07T10:12:01Z",
        "closed_at": "2019-08-07T15:37:51Z",
        "merged_at": "2019-08-07T15:37:51Z",
        "body": "ggpy is unmaintained since 2016 while plotnine is being actively\r\ndeveloped and more feature complete.\r\n\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-07-25T14:58:14Z",
        "closed_at": "2019-11-06T06:36:50Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nAn ultra fast cross-platform multiple screenshots module in pure Python using ctypes.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- No dependencies, at all.\r\n- Ultra fast (fastest on the market ^^).\r\n- Multiplatform (GNU/Linux, macOS and Windows).\r\n- Clean implementation and API.\r\n\r\nFor example, PIL has no GNU/Linux support for screencapture, and it uses an OS tool on macOS.\r\nIt is way smaller than any alternative as it uses only the ctypes module.\r\n\r\nThe module is already used by several project (computer vision, deep learning), see https://python-mss.readthedocs.io/where.html.\r\n\r\nNote: I do not know if I put the module in the good category, let me know if I need to move it elsewhere.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-07-25T12:36:03Z",
        "closed_at": "2019-11-06T06:36:49Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n[python-codicefiscale](https://github.com/fabiocaccamo/python-codicefiscale/) is a tiny library for encode/decode Italian fiscal code - codifica/decodifica del Codice Fiscale.\r\n\r\nFeatures:\r\n-  **Transliteration** for name/surname\r\n-  **Multiple** birthdate formats (datetime/string) *(you can see all the supported string formats in* `tests/tests.py` *)*\r\n-  **Automatic** birthplace city/foreign-country code detection from name\r\n-  **Omocodia** support\r\n\r\n## What's the difference between this Python project and similar ones?\r\n- Datetimes auto-detected from strings\r\n- City/country code autodetected from city/country name\r\n- Well tested and updated\r\n\r\nEnumerate comparisons.\r\n- [pycodicefiscale](https://github.com/ema/pycodicefiscale) (not updated since 3 years)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-07-23T09:48:19Z",
        "closed_at": "2019-11-06T06:36:47Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n[django-maintenance-mode](https://github.com/fabiocaccamo/django-maintenance-mode) shows a 503 error page when maintenance mode is on.\r\n\r\n## Features:\r\n-  Customizable 503 page\r\n-  Can exclude staff\r\n-  Can redirect to another url\r\n-  Can use a custom 503 template\r\n-  Can exclude IP addresses\r\n-  Can exclude superuser\r\n-  Can ignore urls\r\n-  Works at application level\r\n-  Can be activated/deactivated using commands\r\n-  Can be activated/deactivated using urls\r\n-  Works at view level\r\n-  Can work at view level\r\n-  Pluggable backends support\r\n\r\n## What's the difference between this Python project and similar ones?\r\n-  Check comparisons on [django-packages](https://djangopackages.org/grids/g/maintenance-mode/)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-07-23T09:32:54Z",
        "closed_at": "2019-11-06T06:36:48Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n[django-admin-interface](https://github.com/fabiocaccamo/django-admin-interface) is a customizable responsive admin interface, based on a modern flat theme, it lets you customize the admin title, logo and colors by the admin itself. Popup windows replaced by modals.\r\n\r\n## Features\r\n- Beautiful default **django-theme**\r\n- Themes management and customization *(you can **customize admin title, logo and colors**)*\r\n- Responsive\r\n- List filter dropdown *(optional)*\r\n- `NEW` **Related modal** *(instead of the old popup window, optional)*\r\n- `NEW` **Environment name/marker**\r\n- Compatibility / Style optimizations for:\r\n  - `django-ckeditor`\r\n  - `django-dynamic-raw-id`\r\n  - `django-modeltranslation`\r\n  - `django-tabbed-admin`\r\n  - `sorl-thumbnail`\r\n\r\n## What's the difference between this Python project and similar ones?\r\n- It is based on the default django admin, templates are not overridden\r\n- Any admin theme can be customized to fit client needs\r\n- Multiple themes support\r\n- Well tested and keep updated\r\n\r\n### Enumerate comparisons\r\n- Check comparisons on [django-packages](https://djangopackages.org/grids/g/admin-interface/)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-07-20T14:35:22Z",
        "closed_at": "2019-10-30T08:08:48Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n```pdoc (pdoc3)```\r\n\r\n## What's the difference between this Python project and similar ones?\r\nAn improved version of ```pdoc``` documentation generator.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-07-19T08:31:03Z",
        "closed_at": "2019-11-06T06:36:46Z",
        "merged_at": null,
        "body": "update pyglet address\r\n\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 31,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-07-17T01:49:34Z",
        "closed_at": "2019-11-06T06:36:45Z",
        "merged_at": null,
        "body": "Hi, I'm making updates for Open Collective. Either you or another core contributor signed this repository up for Open Collective. This pull request adds financial contributors from your Open Collective https://opencollective.com/awesome-python \u2764\ufe0f\n\n  What it does:\n  - adds a badge to show the latest number of financial contributors\n  - adds a banner displaying contributors to the project on GitHub\n  - adds a banner displaying all individuals contributing financially on Open Collective\n  - adds a section displaying all organizations contributing financially on Open Collective, with their logo and a link to their website\n\nP.S: As with any pull request, feel free to comment or suggest changes.\n\n  Thank you for your great contribution to the Open Source community. You are awesome! \ud83d\ude4c\n  And welcome to the Open Collective community! \ud83d\ude0a\n\n  Come chat with us in the #opensource channel on https://slack.opencollective.com - great place to ask questions and share best practices with other Open Source sustainers!\n  ",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-07-09T05:18:12Z",
        "closed_at": "2019-11-06T06:36:43Z",
        "merged_at": null,
        "body": "Begins makes command interface with help, logging, and subcommands dead simple.\r\n\r\n## What is this Python project?\r\n\r\nCommand line programs for *lazy* humans.\r\n\r\n* Decorate a function to be your programs starting point.\r\n* Generate command line parser based on function signature.\r\n* Search system environment for option default values.\r\n\r\nWhy begins?\r\n\r\nI write a lot of small programs in `Python`_. These programs often accept a small number of simple command line arguments. Having to write command line parsing code in each of these small programs both breaks my train of thought and greatly increases the volume of code I am writing.\r\n\r\nBegins was implemented to remove the boilerplate code from these Python programs. It's not intended to replace the rich command line processing needed for larger applications.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nSimple and powerful.   Give it a try.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-07-08T09:49:04Z",
        "closed_at": "2019-07-25T12:33:01Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n[python-codicefiscale](https://github.com/fabiocaccamo/python-codicefiscale/) is a tiny library for encode/decode Italian fiscal code - codifica/decodifica del Codice Fiscale.\r\n\r\nFeatures:\r\n-  **Transliteration** for name/surname\r\n-  **Multiple** birthdate formats (datetime/string) *(you can see all the supported string formats in* `tests/tests.py` *)*\r\n-  **Automatic** birthplace city/foreign-country code detection from name\r\n-  **Omocodia** support\r\n\r\n## What's the difference between this Python project and similar ones?\r\n- Datetimes auto-detected from strings\r\n- City/country code autodetected from city/country name\r\n- Well tested and updated\r\n\r\nEnumerate comparisons.\r\n- [pycodicefiscale](https://github.com/ema/pycodicefiscale) (not updated since 3 years)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-07-05T11:37:08Z",
        "closed_at": "2019-11-06T06:36:42Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nLoad test utility -> https://github.com/sonic182/aioload\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis tool is similar to apache bench, with a plus of drawing charts with matplotlib and pandas.\r\n\r\nThe python similar proyect is locust. The main difference is that locust is a suite for load testing and aioload is very minimal script.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-07-02T16:21:24Z",
        "closed_at": "2019-11-06T06:36:41Z",
        "merged_at": null,
        "body": "Prophet is a time series prediction package in python developed by Facebook. It is very useful in time series analysis and predictions providing a lot of customization options.\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-06-29T20:52:59Z",
        "closed_at": "2019-11-29T14:24:51Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n[cmd2](https://github.com/python-cmd2/cmd2) library for interactive command-line application development\r\n* The goal of this project is to make it quick and easy for developers to create feature-rich interactive shell applications\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* Applications created are full-featured shells in their own right with ability to call shell commands, redirect command output, pipe command output to shell commands, etc.\r\n* Superior tab-completion capabilities, especially when using included `argparse` decorators\r\n* Both Python and ASCII text application scripting is built-in\r\n* Ability to run non-interactively for automation purposes\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-06-28T10:34:51Z",
        "closed_at": "2019-11-06T06:36:40Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\nIt points to useful Python resources curated by humans, which are easy searchable. You can follow the `python` tag to see the latest additions. \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-06-19T12:10:22Z",
        "closed_at": "2019-12-05T15:16:42Z",
        "merged_at": null,
        "body": "",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-06-13T17:55:39Z",
        "closed_at": "2021-10-05T08:13:27Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nFrappe is a full-stack, meta driven web framework for building scalable apps very quickly. Frappe is a \"batteries included\" framework which comes with inbuilt support for emails, a Calendar, ToDo list, Newsletters, Notes, File Manager, Website, Permission Control System and more.\r\n\r\nThe tech-stack is made up of:\r\n\r\n- Programming Languages: Python + Javascript\r\n- Databases Supported: MariaDB, Postgres\r\n- Webserver: Werkzeug\r\n- Templating: Jinja\r\n- Job Queues: Python RQ\r\n - CSS Framework: Bootstrap 3\r\n - Caching: Redis\r\n - Realtime: NodeJS + Socketio.js\r\n - Javascript Packaging: Rollup\r\n - Webserver (Production): gunicorn + NGINX\r\n - Process Manager (Production): supervisord\r\n - Process Manager (Develop): Honcho\r\n - Command Line: [Bench](https://github.com/frappe/bench)\r\n\r\nFrappe is the framework on top of which ERPNext, a 100% open source ERP system is built and maintained.\r\n\r\nFor more details about the framework, you can have a look at this [video](https://www.youtube.com/watch?v=Jg3nZYw8FU4)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThe closest framework to Frappe would be Django/Django Admin panel.\r\n\r\nA full comparison can be viewed [here](https://www.youtube.com/watch?v=1D2EwdpV7AA).\r\n\r\nSome basic differences are:\r\n\r\n- Frappe has a CLI 'bench' to manage the server and application. Also gives the ability to switch between development and production modes.\r\n- Full-fledged UI is ready as you start the server.\r\n- Inbuilt integration for support, newsletters, email groups, ToDo list, File Manager, Blog, and calendar in ready to ship condition.\r\n- Default website/portal view ready.\r\n- Frappe implements models as Doctypes which can be built via UI instead of being coded.\r\n- Can be used easily for building list-drive business applications and rapidly deploying them. Eg: [ERPNext](https://github.com/frappe/erpnext)\r\n- Updated documentation & website: https://frappeframework.com\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-06-13T13:16:21Z",
        "closed_at": "2019-11-06T06:36:38Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nPolyaxon is a platform for building, training, and monitoring deep learning and machine learning models.\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n * Scheduling and orchestrating machine learning jobs\r\n * Tracking of hyperparams, metrics, artifacts, logs, data, ...\r\n * AutoML for doing hyperparameters optimization.\r\n * Dashboard for comparing and reproducing machine learning experiments\r\n * A pipeline engine for authoring DAGs.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 94,
        "deletions": 92,
        "changed_files": 1,
        "created_at": "2019-06-12T07:53:52Z",
        "closed_at": "2019-10-09T20:05:44Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nOpen Source book on Python and Algorithms and data structure,  including solutions for every exercise from \"Cracking the Code Interview\".\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nNot aware of a similar project.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-06-12T00:56:37Z",
        "closed_at": "2019-11-06T06:36:37Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nA build system for data science pipelines. It can build model artifacts from version controlled data and code, keep track of dependencies and rerun the necessary parts of the pipeline upon changes.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* You can version both code and data simultaneously.\r\n* Intermediate data, model files, test results are all build targets.\r\n* Build target version hashcodes are precomputed from the dependencies and all results are cached, so Prodmodel only executes what's strictly necessary.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-06-04T22:11:48Z",
        "closed_at": "2019-11-10T01:06:26Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n> \u201cThe centre of your data pipeline.\u201d\r\n\r\nKedro is a workflow development tool that helps you build data pipelines that are robust, scalable, deployable, reproducible and versioned. We provide a standard approach so that you can:\r\n\r\n\u2022 spend more time building your data pipeline,\r\n\u2022 worry less about how to write production-ready code,\r\n\u2022 standardise the way that your team collaborates across your project,\r\n\u2022 work more efficiently.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nWe explain how Kedro differs from other workflow schedulers and ETL frameworks in [ReadTheDocs](https://kedro.readthedocs.io/en/latest/06_resources/01_faq.html#how-does-kedro-compare-to-other-projects).\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-05-28T15:40:04Z",
        "closed_at": "2019-11-06T06:36:36Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n[FastAPI](https://github.com/tiangolo/fastapi) is a modern, fast (high-performance), web framework for building APIs with Python 3.6+ based on standard Python type hints.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThe key features are:\r\n\r\n* Fast: Very high performance, on par with NodeJS and Go (thanks to Starlette and Pydantic). One of the fastest Python frameworks available.\r\n* Fast to code: Increase the speed to develop features by about 200% to 300%.\r\n* Fewer bugs: Reduce about 40% of human (developer) induced errors.\r\n* Intuitive: Great editor support. Completion everywhere. Less time debugging.\r\n* Easy: Designed to be easy to use and learn. Less time reading docs.\r\n* Short: Minimize code duplication. Multiple features from each parameter declaration. Fewer bugs.\r\n* Robust: Get production-ready code. With automatic interactive documentation.\r\n* Standards-based: Based on (and fully compatible with) the open standards for APIs: OpenAPI (previously known as Swagger) and JSON Schema.\r\n\r\nIndependent TechEmpower benchmarks show FastAPI applications running under Uvicorn [as one of the fastest Python frameworks available](https://www.techempower.com/benchmarks/#section=test&runid=7464e520-0dc2-473d-bd34-dbdfd7e85911&hw=ph&test=query&l=zijzen-7), only below [Starlette](https://www.starlette.io/) and [Uvicorn](http://www.uvicorn.org/) themselves (used internally by FastAPI). To understand more about it, see the FastAPI section [Benchmarks](https://fastapi.tiangolo.com/benchmarks/).\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-05-28T14:35:42Z",
        "closed_at": "2019-11-06T06:36:34Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nThis is an article discussing the state of Python and how to build an e-commerce store using the Python framework, Django. \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis is e-commerce based (which is growing in popularity for devs looking to create their own e-comm sites rather than using traditional CMSs like Shopify or WordPress, but is really more of a resource than a project. As such, I classified it under \"Articles\"\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-05-28T01:17:52Z",
        "closed_at": "2019-11-06T07:36:55Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nERPNext is a full-featured business management solution that helps SMEs to record all their business transactions in a single system. With ERPNext, SMEs can make informed, fact-based, timely decisions to remain ahead of the competition. It serves as the backbone of a business adding strength, transparency, and control to your growing enterprise.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-05-27T09:18:34Z",
        "closed_at": "2019-05-27T11:56:41Z",
        "merged_at": "2019-05-27T11:56:40Z",
        "body": "This is a grammar fix.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-05-26T12:50:03Z",
        "closed_at": "2019-11-06T06:36:33Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nPySnooper is a replacement for debugging prints. Its function decorator automatically shows local variables and lines being executed.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nI don't know similar projects.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-05-25T12:38:15Z",
        "closed_at": "2019-11-06T06:36:35Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nMaildown is a super simple CLI/Python API for sending emails using Amazon SES. It is the easiest way of implementing transactional emails in any project \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n- Far simpler to use than boto3\r\n- Supports markdown and Jinja syntax out of the box\r\n- Supports Css styling\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-05-22T14:07:26Z",
        "closed_at": "2019-11-06T07:36:52Z",
        "merged_at": null,
        "body": "A Python package to create and modify DXF drawings, independent from the DXF version. You can open/save every DXF file without losing any content (except comments), Unknown tags in the DXF file will be ignored but preserved for saving. With this behavior it is possible to open also DXF drawings that contains data from 3rd party applications.\r\n\r\n[Quick-Info](https://github.com/mozman/ezdxf) \r\n----------\r\n\r\n- ezdxf is a Python package to create new DXF files and read/modify/write existing DXF files\r\n- the intended audience are developers\r\n- requires at least CPython 3.5, for Python 2 support use ezdxf < 0.9\r\n- OS independent\r\n- additional required packages: [pyparsing](https://pypi.org/project/pyparsing/)\r\n- MIT-License\r\n- read/write/new support for DXF versions: R12, R2000, R2004, R2007, R2010, R2013 and R2018\r\n- additional read support for DXF versions R13/R14 (upgraded to R2000)\r\n- additional read support for older DXF versions than R12 (upgraded to R12)\r\n- preserves third-party DXF content\r\n- additional fast DXF R12 writer, that creates just an ENTITIES section with support for the basic DXF entities",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-05-20T16:49:25Z",
        "closed_at": "2019-05-27T12:31:18Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nEasily add progress bars to python and console scripts.\r\n\r\n## What's the difference between this project and similar ones?\r\n\r\n- negligible overhead\r\n- easily extensible/customisable\r\n- displays intelligent estimated time remaining\r\n- works in notebooks as well as raw terminal/console in Linux/Mac/Win\r\n- [#1 trending on GitHub (Dec 2015)](https://github.com/nihey/trending-history/blob/master/histories/Python.md)\r\n- [#1 rated `tag:progressbar` on GitHub](https://github.com/topics/progressbar)\r\n- [![>10k stars](https://img.shields.io/github/stars/tqdm/tqdm.svg?logo=github&logoColor=white)](https://github.com/tqdm/tqdm/stargazers) (more than `scipy`)\r\n- [![sourcerank 22](https://img.shields.io/librariesio/sourcerank/pypi/tqdm.svg?logo=koding&logoColor=white)](https://libraries.io/pypi/tqdm) (similar to `matplotlib`)\r\n\r\n---\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n\r\n- closes #662 (over 50 :+1: but `tqdm` maintainer @casperdcl had requested it not to be merged)\r\n- closes #648",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-05-12T15:46:08Z",
        "closed_at": "2019-11-06T07:36:54Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n[Pycro][pycro-link] is a python integrated macro preprocessor. It will interpret input texts\r\nand generates a corresponding python code that will generate the intended\r\nresult, if we compile and execute that.\r\n\r\n## usage example\r\n\r\nimagine we have this `main.c` file:\r\n\r\n```c\r\n\r\n#include <stdio.h>\r\n\r\n//# names = ['Oliver', 'Jack', 'Harry', 'James', 'John']\r\n\r\nint main()\r\n{\r\n\t//@ for name in names:\r\n\tprintf(\"Hello ${name}!\\n\");\r\n\t//@ end for\r\n\treturn 0;\r\n}\r\n\r\n```\r\n\r\nwe open this file and pass it to `generate_code` function:\r\n\r\n```python\r\n#!/usr/bin/python3\r\n\r\nimport pycro\r\n\r\nenv = pycro.CompilerEnvironment(language = 'c')\r\n\r\nwith open('main.c') as infile:\r\n    with open('main.c.py', 'w') as outfile:\r\n        pycro.generate_code(infile, outfile, env)\r\n\r\n```\r\n\r\nanother file will be created named `main.c.py`:\r\n\r\n```python\r\n__outfile__.write('\\n');\r\n__outfile__.write('#include <stdio.h>\\n');\r\n__outfile__.write('\\n');\r\nnames = ['Oliver', 'Jack', 'Harry', 'James', 'John']\r\n__outfile__.write('\\n');\r\n__outfile__.write('int main()\\n');\r\n__outfile__.write('{\\n');\r\nfor name in names:\r\n\t__outfile__.write('\\tprintf(\"Hello ');__outfile__.write(str(name));__outfile__.write('!\\\\n\");\\n');\r\n__outfile__.write('\\treturn 0;\\n');\r\n__outfile__.write('}\\n');\r\n__outfile__.write('\\n');\r\n```\r\n\r\nnow we can compile and execute `main.c.py` using the following code:\r\n\r\n```python\r\n#!/usr/bin/python3\r\n\r\nimport pycro\r\n\r\nenv = pycro.ExecutorEnvironment()\r\n\r\nwith open('main.c.py') as infile:\r\n    with open('_main.c', 'w') as outfile:\r\n\r\n        code_object = pycro.compile_generated_code(infile.read(), infile.name)\r\n\r\n        pycro.execute_code_object(code_object, outfile, env)\r\n\r\n```\r\n\r\nthe generated result saved as `_main.c`:\r\n\r\n```c\r\n\r\n#include <stdio.h>\r\n\r\n\r\nint main()\r\n{\r\n\tprintf(\"Hello Oliver!\\n\");\r\n\tprintf(\"Hello Jack!\\n\");\r\n\tprintf(\"Hello Harry!\\n\");\r\n\tprintf(\"Hello James!\\n\");\r\n\tprintf(\"Hello John!\\n\");\r\n\treturn 0;\r\n}\r\n\r\n```\r\n\r\nit's time to compile `_main.c`:\r\n\r\n```\r\n$ gcc _main.c -o main\r\n```\r\n\r\nand run `./main`:\r\n\r\n`$ ./main`:\r\n\r\n```\r\nHello Oliver!\r\nHello Jack!\r\nHello Harry!\r\nHello James!\r\nHello John!\r\n```\r\n## What's the difference between this Python project and similar ones?\r\n\r\nI'm tired to compare them [here][compare-link], but it's not complete.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n\r\n[pycro-link]: https://github.com/mak12776/pycro\r\n[compare-link]: https://github.com/mak12776/tests/tree/master/python/template-engines",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-05-12T01:48:04Z",
        "closed_at": "2019-05-25T09:23:59Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nmicropython\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nAllows easier development of python on hardware.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-05-08T14:09:47Z",
        "closed_at": "2019-11-29T10:24:52Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\npyramid_openapi3 is a Pyramid addon that allows you to validate Pyramid views against an OpenAPI 3.0 document. It also serves the Swagger UI for the OpenAPI document you provide. \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nCompared to cornice, the main differentiator is that it is based on the fantastic OpenAPI 3.0 specification. \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-05-07T08:09:01Z",
        "closed_at": "2019-11-06T07:36:53Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\nfolium is amazing, it allows data visualization on maps!\r\n\r\n\"folium builds on the data wrangling strengths of the Python ecosystem and the mapping strengths of the Leaflet.js library. Manipulate your data in Python, then visualize it in a Leaflet map via folium.\"\r\n\r\nExamples of what can be done using folium:\r\nhttps://nbviewer.jupyter.org/github/python-visualization/folium/tree/master/examples/\r\nhttps://nbviewer.jupyter.org/github/python-visualization/folium_contrib/tree/master/notebooks/\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nI couldn't find others.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-05-05T18:59:46Z",
        "closed_at": "2019-11-06T07:36:51Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nI wrote TemplateMail as a simple solution to sending transactional emails in new projects. Since emails themselves are written in Jinja2, it brings separation between programming and copy editing concerns. It sends email using SMTP or Mailgun, but other backends are possible. Let me know if you have any questions and thanks for the consideration!\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThe most important distinction is that TemplateMail fully encloses all email content, including mail subjects, inside Jinja2 templates. This means that if you want to change the content or design of an email, you need to only edit the template, not the Python code.\r\n\r\nBy using Jinja2 templates and including Mailgun out of the box, TemplateMail covers the use cases for most new projects. I think it's pretty seful.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-04-27T08:52:16Z",
        "closed_at": "2023-05-24T17:14:55Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nHi! This PR adds a link to [Cloudsmith](https://cloudsmith.io), which is a package management service SaaS. It's commercial, but it is completely free for open-source and it has generous free tiers otherwise. It has first-class support for Python (and many other package formats, such as Npm), plus org/teams management, granular access controls, private repositories, repository-specific entitlements, a worldwide content distribution network, webhooks, access logs, etc. Thank you. :-)\r\n\r\nFull disclosure: I work at Cloudsmith. \\o/\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis is the first hosted repository to be listed, but obvious alternatives are PyPi itself. Cloudsmith provides private hosting and is usually used for internal development, distribution of vendored software, or when a secondary proxy to PyPi is required. It can also house many other types of assets.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-04-26T13:57:12Z",
        "closed_at": "2019-11-06T07:36:50Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nparse_it is a python library for parsing multiple types of config files, envvars & command line arguments that takes the headache out of setting app configurations. \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n-- supports TOML, YAML, JSON, INI, ENVVAR, CLI ARGS to allow enduser to pick how he prefers to configure the app without adding work to the dev.\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-04-23T11:16:19Z",
        "closed_at": "2019-11-30T16:56:01Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDepHell is a Python project management tool. Manage packages: convert between formats, lock, install, resolve, isolate, test, build graph, show outdated, audit. Manage venvs, build package, bump version.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n+ format agnostic\r\n+ smart dependency resolution\r\n+ security audit\r\n+ all-in-one solution with licenses overview, checking updates, packages isolation, venv management etc.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-04-19T20:53:47Z",
        "closed_at": "2019-04-22T03:19:48Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDask provides advanced parallelism for analytics, enabling performance at scale for python libraries NumPy, pandas, scikit-learn\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\nI have not seen any similar ones.\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-04-16T20:05:05Z",
        "closed_at": "2019-11-06T07:36:48Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nBuilt on top of plotly.js, plotly.py is a high-level, declarative charting library. plotly.js ships with over 30 chart types, including scientific charts, 3D graphs, statistical charts, SVG maps, financial charts, and more.\r\n\r\nPlotly graphs can be viewed in Jupyter notebooks, standalone HTML files, or hosted online on plot.ly.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n - Seamlessly bring visualizations from your existing code to the browser with few lines of code.\r\n - Compactibility with matplotlib, seaborn and other libraries\r\n - Creates interative plots with tooltip on the go\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-04-13T20:31:41Z",
        "closed_at": "2019-11-06T07:36:47Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nIt an awesome book by **Harry Percival** on Test Driven Development for the web using Django, Selenium, and Javascript. The book has greatly described the whole process of software development in a very interesting way. This book makes learning about TDD a lot easier. You get to know about development from writing simple tests to deploying the whole project to the internet.   \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nI feel this is an effective book that covers all the steps you follow in a software development cycle and will give the reader an awesome experience. It makes test driven development so interesting and fun.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-04-10T21:04:08Z",
        "closed_at": "2019-11-06T07:36:49Z",
        "merged_at": null,
        "body": "added dfply, A library to do R's dplyr-style data manipulation with pipes in python on pandas DataFrames\r\n\r\n## What is this Python project?\r\n\r\ndfply, is a library to do R's dplyr-style data manipulation with pipes in python on pandas DataFrames. \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Alternatives are pandas-ply and dplython, both with no recent commits\r\n- Comprehensive  implementation of data science functions \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-04-08T17:45:52Z",
        "closed_at": "2019-11-06T07:36:46Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nThe [*Atlas* toolkit](http://q37.info/s/c7hfkzvs) is a fast and easy way to add a GUI (a web one) to a Python program. It only requires basic knowledge of HTML. It's **not** a web framework. The point is really to have a way as easy and fast as possible to add a GUI to programs, but, instead of the usual desktop interface, it will be a web interface.\r\n\r\nOnce launched, the program will automatically open a web browser displaying its interface. The program will also display the QR code corresponding to the URL opened by the web browser, so you can easily open this URL on your smartphone. No need to reconfigure the smartphone, or the router on which the computer running the program is connected, to use the program on it.\r\n\r\nBy simply sending the URL to someone, they can immediately use the program on their own smartphone or other device with a modern web browser connected to internet.\r\n\r\nFor electronic/robotic lovers, the *Atlas* toolkit can, without problem, be used on device such a [*Raspberry Pi Zero W*](https://q37.info/s/uthai3us), so you can write your own programs to pilot its *GPIO* from a smartphone.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThe *Atlas* toolkit bears some similarities with web frameworks, but the *Atlas* toolkit :\r\n\r\n* does not require the use of JavaScript,\r\n* is very lightweight (less then 10 KB),\r\n* does not require the development of a separate front-end (front-end and back-end are the same Python written program),\r\n* have no dependencies on other packages,\r\n* allows programs to be accessible from all over the internet without having to deploy them on a remote server.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-04-04T18:33:48Z",
        "closed_at": "2019-11-29T22:56:03Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\ndynaconf a layered configuration system for Python applications - with strong support for 12-factor applications and extensions for Flask and Django.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Strict separation of settings from code (following [12-factor applications](https://12factor.net/config) Guide).\r\n- Define comprehensive default values.\r\n- Store parameters in multiple file formats (**.toml**, .json, .yaml, .ini and .py).\r\n- Sensitive **secrets** like tokens and passwords can be stored in safe places like `.secrets` file or `vault server`.\r\n- Parameters can optionally be stored in external services like Redis server.\r\n- Simple **feature flag** system.\r\n- Layered **[environment]** system.\r\n- Environment variables can be used to override parameters.\r\n- Support for `.env` files to automate the export of environment variables.\r\n- Correct data types (even for environment variables).\r\n- Have **only one** canonical settings module to rule all your instances.\r\n- Drop in extension for **Flask** `app.config` object.\r\n- Drop in extension for **Django** `conf.settings` object.\r\n- Powerful **$ dynaconf** CLI to help you manage your settings via console.\r\n- Customizable **Validation** System to ensure correct config parameters.\r\n- Allow the change of **dyna**mic parameters on the fly without the need to redeploy your application.\r\n\r\nSee more in https://dynaconf.readthedocs.io\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-04-03T13:49:30Z",
        "closed_at": "2019-04-04T10:32:01Z",
        "merged_at": "2019-04-04T10:32:01Z",
        "body": "## What is this Python project?\r\n\r\ndjango-bootstrap4 library : \r\n- The goal of this project is to seamlessly blend Django and Bootstrap 4.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Support of bootstrap 4.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-04-02T08:12:19Z",
        "closed_at": "2019-04-03T05:37:21Z",
        "merged_at": "2019-04-03T05:37:21Z",
        "body": " please accept the new link\r\n\r\n## What is this Python project?\r\n\r\nOld awesome-django link was down because the maintainer deleted the repo. This is the new link for django-awesome it has a great list of packages which works with Django.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nOld repo is no longer available.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-04-01T13:56:13Z",
        "closed_at": "2019-12-03T14:36:11Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\ntinyrpc is a RPC library containing the usual elements:\r\n- client and server classes\r\n- dispatcher class\r\n- protocol implementation class\r\n- client and server side transport classes\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThe distinctive feature is that these components are *loosely coupled*; making it easy to replace them.\r\nTherefore it is easy to:\r\n- implement multiple transports: HTTP, 0MQ, AMQP, even a callback transport.\r\n- implement multiple protocols: JSON-RPC, msgpack-rpc , XMLRPC, ...\r\n- alternate dispatchers etc.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-03-23T14:38:38Z",
        "closed_at": "2019-11-06T07:36:45Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n[ScrapydWeb](https://github.com/my8100/scrapydweb) is a full-featured web UI for Scrapyd cluster management, which supports Scrapy Log Analysis & Visualization, Auto Packaging, Timer Tasks, Email Notice and so on.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n### ScrapydWeb vs SpiderKeeper vs Gerapy:\r\n**ScrapydWeb**\r\n- Scrapy Log Analysis & Visualization (+)\r\n- Auto Packaging (+)\r\n- Timer Tasks (=)\r\n- Email Notice (+)\r\n- **Test coverage > 90%  (+)**\r\n- Active development (+)\r\n- Active handling of issues (+)\r\n\r\n**SpiderKeeper**\r\n- Scrapy Log Analysis & Visualization (-)\r\n- Auto Packaging (-)\r\n- Timer Tasks (=)\r\n- Email Notice (-)\r\n- **Test codes not found  (-)**\r\n- Less active development (-)\r\n- Less active handling of issues (-)\r\n\r\n**Gerapy**\r\n- Scrapy Log Analysis & Visualization (-)\r\n- Auto Packaging (=)\r\n- Timer Tasks (=)\r\n- Email Notice (-)\r\n- **Test codes not found  (-)**\r\n- Less active development (-)\r\n- Less active handling of issues (-)\r\n\r\n--\r\n \r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-03-20T16:21:09Z",
        "closed_at": "2019-05-18T11:39:01Z",
        "merged_at": "2019-05-18T11:39:01Z",
        "body": "## What is this Python website?\r\n\r\nThis is one of the most popular sites about Python in Russia.\r\n\r\n## What's the difference between this Python website and similar ones?\r\n\r\nYou have no russian sites listed. The site has interesting articles and lessons for learning the Python programming language.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-03-19T21:33:25Z",
        "closed_at": "2019-03-23T18:29:08Z",
        "merged_at": "2019-03-23T18:29:08Z",
        "body": "## What is this Python project?\r\n\r\nFixes syntax for existing project entry\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nNo addition - only syntax fix\r\n\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-03-19T15:19:21Z",
        "closed_at": "2019-11-02T19:48:50Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nAsyncSender provides a simple interface to set up a SMTP connection and send email messages asynchronously.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Same interface [Flask-Mail](https://pythonhosted.org/Flask-Mail/)\r\n- AsyncIO support\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-03-18T04:59:00Z",
        "closed_at": "2019-11-06T07:36:42Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\nThis project deals with simple arithmetic operations on date and time based on Gregorian calendar. \r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nThere are two date arithmetic traps in the Gregorian calendar:\r\n (1)   Leap years. Problems arise when adding years to a February 29th gives a result in a non-leap year.\r\n (2)Variable number of days in months. Problems arise when adding months to a 29th, 30th or 31st gives a result in a month where that day doesn't exist.\r\nIn both cases, the result must be changed to the first day of the next month.\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-03-17T04:23:08Z",
        "closed_at": "2019-11-06T07:36:43Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\nA recommendation application using either item-based or user-based approaches.\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere is no similar project\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-03-15T14:10:16Z",
        "closed_at": "2019-11-06T07:36:44Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nA web-scraping application to find the minimum number of links between 2 given wiki pages\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere is no similar project\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-03-14T16:13:28Z",
        "closed_at": "2019-05-25T09:24:53Z",
        "merged_at": "2019-05-25T09:24:53Z",
        "body": "## What is this Python project?\r\n\r\nPEP 8 Speaks is a GitHub app to automatically review Python code style over Pull Requests.\r\n\r\nGitHub - https://github.com/OrkoHunter/pep8speaks\r\nWebsite - https://pep8speaks.com\r\nGitHub Marketplace - https://github.com/marketplace/pep-8-speaks\r\n\r\n### Features\r\n - The app makes a single comment on the Pull Request and keeps updating it on new commits. This reduces noise in the email.\r\n - Easy installation via GitHub app distribution. It starts work instantaneously without the need for any configuration.\r\n - The app can be configured for all of the pycodestyle/flake8 settings like max-line-length, ignoring specific errors, etc. There are additional options available for configuration like choosing the linter and scanning only the diff of the Pull Request.\r\n - The bot can be asked to suggest a diff of the changes to fix code quality issues.\r\n - The bot can be asked to create a Pull Request on the author's branch, so that they can fix all the issues at once just by merging the Pull Request.\r\n\r\nMore miscellaneous features are over [here](https://github.com/OrkoHunter/pep8speaks#main-features).\r\n\r\nThe app is used by organizations like Pandas, Scikit Image, Spyder IDE, Scikit Learn Contrib, Astropy, Sunpy, etc. Check out [the complete list](https://github.com/OrkoHunter/pep8speaks/wiki/List-of-users-and-orgs) of organizations and individual users.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- In other services, style issues get lost in the long build logs and the authors of the Pull Requests are not notified about them. A GitHub comment separates code style issue with the CI build.\r\n- Pleasant experience for the contributors as well as maintainers. It does not cause failed checks to obstruct merging. Nor does it make comment after comment for additional commits. It keeps on editing the first comment for update.\r\n- By default the bot does not make any comment if no Python files are involved. This means, users can install it on an organization with numerous projects, and the app will function only on the ones which involve Python.\r\n- The comment made by the bot is very descriptive with the errors. The line and column numbers are hyperlinked to the files involved in the PR. See [an example](https://github.com/pandas-dev/pandas/pull/24158).\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-03-14T14:21:13Z",
        "closed_at": "2019-05-25T09:28:23Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nThis is a helpful resource for developers working with Django for e-commerce. A Wagtail tutorial is included. \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nAgain, this isn't so much a project as it is a tool to help developers who work with Django in building e-commerce sites. \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-03-13T12:40:22Z",
        "closed_at": "2019-03-16T09:55:28Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n[RESTEasyCLI](https://resteasycli.readthedocs.io) is a handy command-line tool for anyone who prefers a command-line tool over GUI apps, but when it comes to API testing or doing repetitive queries to an API server, has to give up on their favorite shell.\r\n\r\nThe domain of REST clients doesn't have to be dominated by GUI apps anymore.\r\n\r\nThis tool gives you the power to use advanced features offered by popular REST clients at the convenience of your terminal.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nMost similar projects I could find are httpie, curl etc. Unlike these general purpose HTTP clients, this library dedicates itself to REST API and aims to bring the most useful features of popular GUI based REST clients on your terminal.\r\n\r\nTo try an interactive demo, just copy and paste following commands on your terminal or [download this script from here](https://raw.githubusercontent.com/rapidstack/RESTEasyCLI/master/tools/demo.sh) and execute it.\r\n\r\n```bash\r\ncurl -L https://raw.githubusercontent.com/rapidstack/RESTEasyCLI/master/tools/demo.sh -o demo.sh\r\nchmod +x demo.sh\r\n./demo.sh\r\n```\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 93,
        "deletions": 92,
        "changed_files": 1,
        "created_at": "2019-03-08T19:34:50Z",
        "closed_at": "2019-05-25T09:33:12Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nAnyone can forget how to make character classes for a regex, slice a list or do a for loop. This cheat sheet tries to provide a basic reference for beginner and advanced developers, lower the entry barrier for newcomers and help veterans refresh the old tricks.\r\n\r\nWebsite: [pythoncheatsheet.org/](https://www.pythoncheatsheet.org/)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- It has a nice modern frontend.\r\n- Easy to navigate.\r\n- Javascript powered search.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-03-08T18:13:03Z",
        "closed_at": "2019-12-15T15:59:35Z",
        "merged_at": "2019-12-15T15:59:35Z",
        "body": "## What is this Python project?\r\n\r\n* **Tartiflette** is a Python implementation of GraphQL, **SDL First**.\r\n* 100% **Open Source** from day one.\r\n* Compatible only for Python 3.6+ / asyncio.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* This is not a port of GraphQL JS but a brand new implementation built with the Zen of Python in mind.\r\n* Create GraphQL schema **only** with the SDL _(Schema Definition Language)_.\r\n* Build only for python 3.6+ and asyncio.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-03-05T18:38:01Z",
        "closed_at": "2019-11-06T07:36:39Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n* About Jet Admin: https://jetadmin.io\r\n* **Live Demo**: https://app.jetadmin.io/demo\r\n* Documentation: https://docs.jetadmin.io/\r\n* Support: support@jetadmin.io\r\n\r\n**Jet Admin** is a SaaS service that automatically generates extendable back office for your application. <br />\r\n**Jet Bridge** is a standalone app which generates REST API thought which your SQL database is connected to **Jet Admin**. <br />\r\nThis project has been designed to fit requirements of small startups and mature companies.\r\n\r\n- **Data Privacy**. Jet does not access your data: its transferred directly from browser to your application.\r\n- **Customizable Interface**. With WYSIWYG interface customization your can change almost every part of interface.\r\n- **Extendable**. Flex Features allows you to create your custom Actions, Views, Fields and other.\r\n- **Works with any technology**. The interface is generated automatically based on an analysis of the data and data structure of your database.\r\n- **Quick installation**. All you need is to install Jet Bridge and connect it to your database.\r\n\r\nThis is a complete remake of our popular [Django Jet](https://github.com/geex-arts/django-jet) admin interface.\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Responsive\r\n- Any language support\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 38,
        "changed_files": 2,
        "created_at": "2019-03-03T08:36:20Z",
        "closed_at": "2019-03-03T10:48:32Z",
        "merged_at": "2019-03-03T10:48:32Z",
        "body": "Small travis change, removed dead css -> Demo [here](https://c0derlint.github.io/awesome-python)",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-03-02T18:55:59Z",
        "closed_at": "2019-11-06T07:36:41Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nJsons (Json Serialization) is an easy to use Python library for converting Plain Old Python Objects to JSON and back.\r\n\r\n* Just Python, no compromising your models\r\n* Human readable JSON without meta pollution\r\n* Easily extendable and customizable\r\n* Easy to use\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* Jsons does not enforce inheritance for your models, like Marshmellow does\r\n* Jsons can serialize and deserialize objects to JSON in much fewer lines of code than the standard `json`\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-02-27T23:20:10Z",
        "closed_at": "2019-11-29T21:24:48Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nThis is the official SDK for Square APIs.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt lets you take payments online with Square, which a lot of business want because there are millions of Square in-person sellers.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 19,
        "deletions": 10,
        "changed_files": 2,
        "created_at": "2019-02-27T09:03:28Z",
        "closed_at": "2019-03-02T15:09:07Z",
        "merged_at": "2019-03-02T15:09:07Z",
        "body": "I realized that the website was out of date, so configured travis to deploy to gh-pages.\r\n\r\nConfig also had to be slightly changed as I switched to Mkdocs v1 from 0.16\r\n\r\n[Demo](https://c0derlint.github.io/awesome-python/)",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-02-26T19:36:07Z",
        "closed_at": "2019-11-06T17:36:47Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n**pycro** is a python integrated macro preprocessor & code generator, such as [m4](https://www.gnu.org/software/m4/) or [filepp](http://www-users.york.ac.uk/~dm26/filepp/) but with more advanced features:\r\n\r\n- You can use any possible value type that can be used in python programming language. (e.g list, tuple, dict, set, ...)\r\n- Fully customizable substitutions prefixes & suffixes.\r\n- There is only one file that can be placed in any individual project. (Python 3 also required.)\r\n\r\n**in the [example](https://github.com/mak12776/pycro/tree/master/examples) folder you can see what can be done with pycro.**\r\n\r\n> It is not stable but will be soon. \ud83d\ude03\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n> I'm lacking some areas of the english language.\r\n\r\nThere are so many preprocessors such as [pcpp](https://github.com/ned14/pcpp) that implemented syntax of other languages preprocessor, but pycro has it's own syntax and is integrated into python. it uses python [eval](https://docs.python.org/3/library/functions.html#eval) function to evaluates expressions.\r\n\r\nbecause it integrated into python, you can do whatever that you can do in python programming language. for example import other python modules. (will be implemented...)\r\n\r\nI tried to implement a well-designed API, so it's easy to extend features.\r\n\r\npycro macros can be extended like filepp.\r\n\r\n--\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-02-26T16:07:29Z",
        "closed_at": "2019-11-06T07:36:38Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nAllows adding dividers to the Python console easily (e.g. `---------`)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis seems to be the only one of its kind\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-02-25T10:45:48Z",
        "closed_at": "2019-11-06T07:36:40Z",
        "merged_at": null,
        "body": "## Ludwig\r\n\r\nLudwig is a TensorFlow-based toolbox that allows to train and test deep learning models without the need to write code.\r\n\r\n## Why : \r\n_No coding required_: no coding skills are required to train a model and use it for obtaining predictions.\r\n_Generality_: a new data type-based approach to deep learning model design that makes the tool usable across many different use cases.\r\n_Flexibility_: experienced users have extensive control over model building and training, while newcomers will find it easy to use.\r\n_Extensibility_: easy to add new model architecture and new feature data types.\r\n_Understandability_: deep learning model internals are often considered black boxes, but we provide standard visualizations to understand their performance and compare their predictions.\r\n_Open Source_: Apache License 2.0\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-02-22T07:24:56Z",
        "closed_at": "2019-11-06T07:36:35Z",
        "merged_at": null,
        "body": "RESTPie3 is a REST API starter kit that helps you quickly build a robust REST server. The kit contains all the essential features that are usually needed in a server. Clean, readable codebase.\r\n\r\nI have used this foundation in several production projects over the years so it is quite mature code.\r\n\r\nFeatures from the doc:\r\n\r\n* Simple and flexible server with minimum dependencies\r\n* Process-based request workers, not thread-based nor async\r\n* Secure server-side sessions with Redis storage\r\n* Robust worker management: restarts, timecapping, max life\r\n* Background tasks\r\n* Built-in cron\r\n* Automatic directory page listing the API methods and their docstrings\r\n* Redis as a generic storage with expiring keys, lightweight queues\r\n* Email & password authentication with secure algorithms\r\n* User role model and authorization of API methods via simple decorator\r\n* Logging system with practical data for troubleshooting, detects slow\r\n  requests, warnings&errors colorized\r\n* Server reload on code change\r\n* Database migrations\r\n* Docker image for the \"big cloud\"\r\n* Fast rsync deployment of updates to servers\r\n* Tests for the API\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-02-20T18:33:49Z",
        "closed_at": "2019-11-06T07:36:37Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nArrow is a mature drop-in replacement for `datetime` that brings sanity to the timezone madness that comes by default.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nArrow and Maya are somewhat similar, with Maya being more oriented towards natural language parsing and generation, and Arrow more geared to be a fast and feature complete drop-in replacement. Says [Kenneth](https://www.kennethreitz.org/essays/introducing-maya-datetimes-for-humans#yui_3_17_2_1_1550687348228_225):\r\n\r\n> Arrow, for example, is a fantastic library, but isn't what I wanted in a datetime library. In many ways, it's better than Maya for certian [sic] things. In some ways, in my opinion, it's not.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-02-20T16:48:26Z",
        "closed_at": "2019-11-06T17:36:46Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-02-19T08:28:46Z",
        "closed_at": "2019-11-06T07:36:34Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nSubclass of built-in dict adding attribute access in addition to items getting.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nSimple complete implementation in just over a hundred lines ready for further subclassing.\r\n\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-02-19T07:59:55Z",
        "closed_at": "2019-11-06T07:36:36Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n* Serialization nested `attrs` objects to and from `dict` or `tuple`.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* Automatically detects best class to deserialize to among `Union[...]` of types from a type annotation.\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-02-18T13:07:44Z",
        "closed_at": "2019-11-06T08:36:59Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-02-18T09:58:54Z",
        "closed_at": "2019-11-06T07:36:33Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nViewflow is the library that offers an additional layer of Django web framework, allows explicitly specify people's workflow and extracts collaboration logic from Django views. \r\n\r\nViewflow layer is based on the BPMN - business process management and notation standard. It is the graphical notation readily understandable by all business stakeholders and software developers. Viewflow bridges the gap between a picture as the software specification and the working solution.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nDjango FSM can be used for simple workflow, but Viewflow simplifies in case of complex business logic.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-02-18T01:46:06Z",
        "closed_at": "2019-11-06T08:37:00Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nPeter Norvig's [pytudes](https://github.com/norvig/pytudes):\r\n\r\n>\"An \u00e9tude (a French word meaning study) is an instrumental musical composition, usually short, of considerable difficulty, and designed to provide practice material for perfecting a particular musical skill.\" \u2014 Wikipedia\r\n\r\n>This project contains pytudes\u2014Python programs for perfecting programming skills.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n1. Honestly, I haven't seen any similar projects out there of the same caliber attempting to teach how to think pythonically. \r\n\r\n2. Peter Norvig is the director of research at Google and has lots of experience in programming, evidenced by his writings in the form of books and blog posts.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-02-17T23:16:03Z",
        "closed_at": "2019-04-12T11:51:48Z",
        "merged_at": null,
        "body": "https://github.com/r0f1/datascience\r\n\r\nAdded my own awesome list. Think it would be a good fit :)",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-02-17T21:34:33Z",
        "closed_at": "2019-11-07T10:59:52Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nFree Asset Management System / Inventory for hardware, written completely in Python 3. \r\nhttp://ralph.allegro.tech\r\n\r\nComplete database for: server hardware, IP addresses, DHCP mac's, server visualization, back office assets (printers, etc), as well as licenses, supports dates and costs etc. \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nComplete and lightweight. Only 10 MB installation size. Easy to customize (Django based). Good API.\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-02-16T11:38:23Z",
        "closed_at": "2019-11-06T08:36:56Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nThis project allows Python developers to use Django's ORM and declarative models in any synchronous Python web framework. I've published it to PyPI [here](https://pypi.org/project/DJModels/).\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nI'm not aware of another effort to excise Django's Models from the entire framework so that it can be used in a pluggable manner (similar to how Active Record can easily be used with Sinatra). \r\n\r\nThat said, DJ-Models definitely competes with SQLAlchemy. Anywhere you would begrudgingly choose Flask/Pyramid + SQLAlchemy, you can now choose Flask/Pyramid + DJ-Models.\r\n\r\n\r\nHere's a [demo app](https://github.com/iMerica/dj-models-demo) using Flask + Dj-Models. \r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-02-13T11:18:08Z",
        "closed_at": "2019-11-06T08:36:58Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-02-11T06:36:08Z",
        "closed_at": "2019-12-02T07:33:42Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n[cupy](https://github.com/cupy/cupy) - NumPy-like API accelerated with CUDA.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nIt's accelerated by CUDA gpu, which makes it faster than original numpy when using gpu programming.\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-02-06T15:11:39Z",
        "closed_at": "2019-11-06T08:36:57Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDjango CRM is opensourse CRM developed on django framework. It has all the basic features of CRM to start with. Django-CRM provides a dashboard where you can manage customers at sales of the organization. It Provides to manage leads information and its activity, track issues from leads, contacts to send emails.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis is a salesforce compatable CRM application, aimed to easily migrate to salesforce.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 95,
        "deletions": 93,
        "changed_files": 1,
        "created_at": "2019-02-04T19:33:40Z",
        "closed_at": "2019-11-06T08:36:53Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nFunctionShield enables developers to control the security of serverless runtimes environments by enabling or disabling outbound network connectivity, blocking child process execution, disabling read/read operations on /tmp/, and preventing handler source code leakage. It also provides granular function-level logging, which helps to gain visibility on actions inside the function.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis is library is first of its kind - there are no alternatives.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-02-02T20:23:36Z",
        "closed_at": "2019-02-03T06:59:58Z",
        "merged_at": "2019-02-03T06:59:58Z",
        "body": "## What is this Python project?\r\n\r\nThe Stanford NLP Group's official Python library, which supports more than 50 languages. \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nStanfordNLP is based on a neural network model, and is frequently updated with the latest advancements in natural language processing technology.\r\n\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-01-29T04:32:23Z",
        "closed_at": "2019-11-29T09:24:50Z",
        "merged_at": null,
        "body": "Added a repository under cryptography.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-01-29T01:56:02Z",
        "closed_at": "2019-11-06T08:36:54Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nPRAW is the \"Python Reddit API Wrapper\". It's used for simple API access to the Reddit API.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nPRAW is a Python library used specifically to access the Reddit API and should fit perfectly with the other \"Third Party API's\" in this repo.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-01-28T11:22:16Z",
        "closed_at": "2019-11-06T08:36:55Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\nIt's an independently maintained library that facilitates work with PostFinance Payment Service Providing. It exposes a convenient interface that allows creating payment forms and validate incoming transaction update statuses.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nThere are currently no Python libraries that support integration with PostFinance PSP. There is only one, unmaintained [django-shop module](https://github.com/chrisglass/django-shop-postfinance).\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-01-26T18:27:16Z",
        "closed_at": "2019-02-11T17:53:16Z",
        "merged_at": "2019-02-11T17:53:16Z",
        "body": "## What is this Python project?\r\n\r\nThis Pull request is an UPDATE to a request that was previously merged successfully:\r\nhttps://github.com/vinta/awesome-python/pull/1100\r\n\r\nSummary of changes:\r\n* The location of the repository has changed.\r\n* The GUI frameworks supported grew. Previously was only tkinter, now it's tkinter, Qt, WxPython and Web (Remi)\r\n\r\nIt was a single line change to the Readme file.\r\n\r\nDo I need to get votes again in order to merge this change? \r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-01-22T10:35:44Z",
        "closed_at": "2019-05-25T05:59:07Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-01-21T17:24:26Z",
        "closed_at": "2019-09-18T07:10:16Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nYou can create reports and dashboard that update dynamically in the browser, using a straightforward consistent pythonic API.\r\n\r\nYou've got charts, you've got tables, you have markdown, and more. What else can you ask for?\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThe project may be compared mostly to Dash and bowtie.\r\n\r\n- The API choices made in `awe` are different than those in the projects mentioned above. \r\n- The API is more focused on quickly adding and changing content and is not focused around interactivity at all (which bowtie and Dash focus on greatly). It is supported in `awe` though, but not as convenient or rich.\r\n- Installation and usage are a `pip install` away.\r\n- Export to static html at anytime (directly from the dashboard)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-01-21T15:43:20Z",
        "closed_at": "2019-11-06T08:36:51Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nxarray (formerly xray) is an open source project and Python package that makes working with labelled multi-dimensional arrays simple, efficient, and fun!\r\n\r\nMulti-dimensional (a.k.a. N-dimensional, ND) arrays (sometimes called \u201ctensors\u201d) are an essential part of computational science. They are encountered in a wide range of fields, including physics, astronomy, geoscience, bioinformatics, engineering, finance, and deep learning. In Python, NumPy provides the fundamental data structure and API for working with raw ND arrays. However, real-world datasets are usually more than just raw numbers; they have labels which encode information about how the array values map to locations in space, time, etc.\r\n\r\nBy introducing dimensions, coordinates, and attributes on top of raw NumPy-like arrays, xarray is able to understand these labels and use them to provide a more intuitive, more concise, and less error-prone experience. Xarray also provides a large and growing library of functions for advanced analytics and visualization with these data structures. Xarray was inspired by and borrows heavily from pandas, the popular data analysis package focused on labelled tabular data. Xarray can read and write data from most common labeled ND-array storage formats and is particularly tailored to working with netCDF files, which were the source of xarray\u2019s data model.\r\n\r\nCan also auto-parallelize operations using dask.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nSimilar to Pandas, but for truly N-dimensional data. Part of the pydata project.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-01-21T15:31:28Z",
        "closed_at": "2019-05-25T09:38:06Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nA list of python libraries which are especially useful for scientists.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere are no similar lists specifically for scientific Python users as far as I'm aware.\r\n\r\n(will close #1215)",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-01-13T23:25:17Z",
        "closed_at": "2019-11-06T08:36:52Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-01-08T20:09:28Z",
        "closed_at": "2019-01-11T11:27:58Z",
        "merged_at": null,
        "body": "If you like it, feel free to merge it :)",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-01-01T18:41:58Z",
        "closed_at": "2019-11-06T06:36:52Z",
        "merged_at": null,
        "body": "Added line for PySide2 (now that it has been fully released).\r\n\r\n## What is this Python project?\r\n\r\nThis is the new version of PySide which has been ported to Qt 5. It is awesome because 4 < 5, and it uses LGPL license unlike PyQt.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt is very similar to PySide but uses Qt 5 instead of the older Qt4\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-01-01T17:11:47Z",
        "closed_at": "2019-11-06T17:36:45Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nMutation testing for Python.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nSeems to be the most active project.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-12-30T09:23:16Z",
        "closed_at": "2019-01-22T03:24:39Z",
        "merged_at": "2019-01-22T03:24:39Z",
        "body": "Small fix.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-12-22T16:28:53Z",
        "closed_at": "2019-11-06T08:36:49Z",
        "merged_at": null,
        "body": "# What is this project?\r\n\r\n**FastAPI** is a modern, fast (high-performance), web framework for building APIs with Python 3.6+.\r\n\r\n**Documentation**: <a href=\"https://fastapi.tiangolo.com\" target=\"_blank\">https://fastapi.tiangolo.com</a>\r\n\r\n**Source Code**: <a href=\"https://github.com/tiangolo/fastapi\" target=\"_blank\">https://github.com/tiangolo/fastapi</a>\r\n\r\nThe key features are:\r\n\r\n* **Fast**: Very high performance, on par with **NodeJS** and **Go** (thanks to Starlette and Pydantic).\r\n\r\n* **Fast to code**: Increase the speed to develop features by about 200% to 300% *.\r\n* **Less bugs**: Reduce about 40% of human (developer) induced errors. *\r\n* **Intuitive**: Great editor support. <abbr title=\"also known as auto-complete, autocompletion, IntelliSense\">Completion</abbr> everywhere. Less time debugging.\r\n* **Easy**: Designed to be easy to use and learn. Less time reading docs.\r\n* **Short**: Minimize code duplication. Multiple features from each parameter declaration. Less bugs.\r\n* **Robust**: Get production-ready code. With automatic interactive documentation.\r\n* **Standards-based**: Based on (and fully compatible with) the open standards for APIs: <a href=\"https://github.com/OAI/OpenAPI-Specification\" target=\"_blank\">OpenAPI</a> and <a href=\"http://json-schema.org/\" target=\"_blank\">JSON Schema</a>.\r\n\r\n<small>* estimation based on tests on an internal development team, building production applications.</small>\r\n\r\n# Why is it awesome?\r\n\r\nApart from the features above, the fact that with simple, standard Python 3.6+ type declarations, you get:\r\n\r\n* Great editor support (completion everywhere and type checks).\r\n* Data conversion (serialization, parsing).\r\n* Data validation.\r\n* Automatic annotations and documentation using OpenAPI and JSON Schema.\r\n* 2 automatic interactive API documentation user interfaces.\r\n\r\nA block of code is worth a thousand words:\r\n\r\n```Python\r\nfrom fastapi import FastAPI\r\n\r\napp = FastAPI()\r\n\r\n\r\n@app.get(\"/\")\r\ndef read_root():\r\n    return {\"Hello\": \"World\"}\r\n\r\n\r\n@app.get(\"/items/{item_id}\")\r\ndef read_item(item_id: int, q: str = None):\r\n    return {\"item_id\": item_id, \"q\": q}\r\n```\r\n\r\nAnd you get this, \"for free\":\r\n\r\n![Swagger UI](https://fastapi.tiangolo.com/img/index/index-01-swagger-ui-simple.png)\r\n\r\nAnd the coding experience is great, with completion and type checks everywhere:\r\n\r\n![editor support](https://fastapi.tiangolo.com/img/vscode-completion.png)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-12-20T12:52:04Z",
        "closed_at": "2019-11-06T08:36:50Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n[pdfrw](https://github.com/pmaupin/pdfrw) is a Python library and utility that reads and writes PDF files.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nThe fastest pure Python PDF parser available\r\nHas been used for years by a printer in pre-press production\r\nCan be used with rst2pdf to faithfully reproduce vector images\r\nCan be used either standalone, or in conjunction with reportlab to reuse existing PDFs in new ones\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-12-13T08:29:31Z",
        "closed_at": "2019-11-07T10:59:51Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nVery nice and dead simple logging library.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nCompared to [Structlog](http://www.structlog.org/en/stable/), [Logbook](https://logbook.readthedocs.io/en/stable/), [Eliot](https://pypi.org/project/eliot/) and most of the other available third-party logging library in the Python ecosystem, Loguru is extremely simple to use and understand, while still offering a wide range of option and capabilities.\r\n\r\nIt is also two-way compatible with the standard library logging package.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-12-08T23:53:50Z",
        "closed_at": "2019-11-06T17:36:51Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nSimple library that can read csv and arff files (for now) and convert to one another.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt was hard for me to find something that works with arff and csv interchangeably (that why it is created and will be evolving with different file formats)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-11-29T13:49:19Z",
        "closed_at": "2019-11-06T08:36:46Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nKeep huge data in files with round robin algorithm.\r\nAlso creating graphs from these data is possible.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-11-27T09:26:22Z",
        "closed_at": "2019-11-06T08:36:45Z",
        "merged_at": null,
        "body": "Add bottle framework",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-11-21T18:39:22Z",
        "closed_at": "2019-11-06T08:36:48Z",
        "merged_at": null,
        "body": "[dev.to/t/python](https://dev.to/t/python) is growing as one of the best resources for Python news/help/community. Definitely belongs here.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-11-17T18:05:19Z",
        "closed_at": "2019-11-06T08:36:44Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n[Chartify](https://github.com/spotify/chartify?fbclid=IwAR085ORv3CbFshJ_lRqdQiiD43wZuTVUfmU9RipPkze0yXzXec-LfogA3wo) - A Python library that makes it easy for data scientists to create charts.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2018-11-12T05:35:09Z",
        "closed_at": "2019-11-06T08:36:47Z",
        "merged_at": null,
        "body": "git@github.com:beemerbox/awesome-python.git\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-11-06T19:23:08Z",
        "closed_at": "2019-05-25T09:55:17Z",
        "merged_at": null,
        "body": "Fixed broken url for talkbox.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-11-06T17:04:23Z",
        "closed_at": "2019-11-06T08:36:40Z",
        "merged_at": null,
        "body": "Adding interface to the Firebase's REST API\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-11-02T16:44:18Z",
        "closed_at": "2019-11-06T08:36:41Z",
        "merged_at": null,
        "body": "\r\n\r\n\r\n\r\n## What is this Python project?\r\n\r\nFeaturetools is a library for automated feature engineering. \r\n\r\nIt's awesome because it can save data scientists immense amount of time while preparing their data for automated feature engineering.  More details why in this post on medium: https://medium.com/@williamkoehrsen/5c15bf188b96\r\n\r\nWebsite - [www.featuretools.com](www.featuretools.com)\r\nGithub project - [github.com/featuretools/featuretools/](https://github.com/featuretools/featuretools/)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nFeaturetools can be used to prepare data for existing machine learning libraries. Here is how it fits into the ecosystem\r\n\r\n![what-is 1](https://user-images.githubusercontent.com/371792/47944148-3c3d1500-ded0-11e8-9358-95816e43c9cc.png)\r\n\r\nThere are many demos for users to get started on our website: https://www.featuretools.com/demos\r\n\r\nIt's currently used by data scientists around the world to power their machine learning systems: https://www.featurelabs.com/blog/predicting-credit-card-fraud/\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-11-02T00:15:49Z",
        "closed_at": "2018-11-02T02:58:37Z",
        "merged_at": "2018-11-02T02:58:37Z",
        "body": "New URL is to Python 3 compatible port of the original library, blessed by original creator",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-10-31T19:44:13Z",
        "closed_at": "2019-11-06T08:36:42Z",
        "merged_at": null,
        "body": "Add pydantic\r\n\r\nA library for data validation using type hinting\r\n\r\n## What is this Python project?\r\n\r\nDefine how data should be in pure, canonical python; validate it with pydantic.\r\n\r\nPEP 484 introduced type hinting into python 3.5, PEP 526 extended that with syntax for variable annotation in python 3.6.\r\n\r\npydantic uses those annotations to validate that untrusted data takes the form you want.\r\n\r\nThere\u2019s also support for an extension to dataclasses where the input data is validated.\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-10-31T16:15:18Z",
        "closed_at": "2019-05-25T09:38:23Z",
        "merged_at": null,
        "body": "added else to the if else statement to return failure\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-10-31T04:10:44Z",
        "closed_at": "2019-11-06T08:36:43Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nAwesome project for enterprise resource planning.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nseem like SAP,  Kingdee\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-10-30T20:11:14Z",
        "closed_at": "2019-11-06T08:36:39Z",
        "merged_at": null,
        "body": "Made use of yattag for a personal project where BeautifulSoup just didn't cut it to put simply.\r\n\r\nAllows you full control of the HTML language with python commands. I made use of this in my project to take the output from a range of commands and combined this with Bootstrap for an aesthetically pleasing output. For this reason, I feel it should be added to this list\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-10-30T19:53:11Z",
        "closed_at": "2019-11-06T08:36:36Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n[Asyncpg](https://github.com/MagicStack/asyncpg) is a fast async client library for PostgreSQL.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n - built for asyncio and Python 3.5+ async / await\r\n - plays well with the asyncio ecosystem e.g. with [Sanic](https://github.com/huge-success/sanic) or [Gino ORM](https://github.com/fantix/gino)\r\n - implements PostgreSQL server protocol natively and exposes its features directly\r\n - written almost entirely in Cython\r\n - [based on creators' benchmarks](https://github.com/magicstack/pgbench)\r\n   - faster than alternatives \r\n   - can be approximately 3x faster than alternative Python libraries such as psycopg2 or aiopg\r\n   - achieved query throughput [1M rows/s](https://magic.io/blog/asyncpg-1m-rows-from-postgres-to-python/)\r\n   - significantly lower latency\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-10-30T03:01:19Z",
        "closed_at": "2019-11-06T17:36:52Z",
        "merged_at": null,
        "body": "Added pyodbc library link and description to the database driver section.\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-10-27T20:07:04Z",
        "closed_at": "2018-10-28T06:22:55Z",
        "merged_at": "2018-10-28T06:22:55Z",
        "body": "\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-10-27T17:26:20Z",
        "closed_at": "2019-11-06T08:36:37Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nMedPy is an image processing library and collection of scripts targeted towards medical (i.e. high dimensional) image processing. \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis library supports a wide range of medical image formats like \".mha\", \".dicom\". Its simple functions make it very easy to read medical images and work with them. And even convert them to the numpy array. It also retains Image metadata. Standard Image processing libraries such as Pillow or OpenCV either doesn't support some of the formats or they are not built to work with the high dimensional images. Although there are libraries for specific formats such as pydicom, MedPy brings them all together which makes it very convenient.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-10-27T15:39:14Z",
        "closed_at": "2019-11-06T08:36:35Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nPython ROS Bridge library allows to use Python and IronPython to interact with ROS, the open-source robotic middleware. It uses WebSockets to connect to [rosbridge 2.0 ](http://wiki.ros.org/rosbridge_suite)and provides publishing, subscribing, service calls, actionlib, TF, and other essential ROS functionality.\r\n\r\nUnlike the **rospy** library, this does not require a local ROS environment, allowing usage from platforms other than Linux.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- This is the only Python client for ROS that is cross platforms\r\n- Supports IronPython as well (which means it runs inside Rhino/Grasshopper for 3D/architecture applications)\r\n- The closest package to this would be *rospy*, but it only runs in Linux, and only within a ROS environment\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-10-26T18:07:54Z",
        "closed_at": "2019-11-06T08:36:38Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\nThe MDP toolbox provides classes and functions for the resolution of descrete-time Markov Decision Processes. The list of algorithms that have been implemented includes backwards induction, linear programming, policy iteration, q-learning and value iteration along with several variations.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Eight MDP algorithms implemented.\r\n- Fast array manipulation using NumPy.\r\n- Full sparse matrix support using SciPy's sparse package.\r\n- Optional linear programming support using cvxopt.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-10-26T18:03:57Z",
        "closed_at": "2019-11-06T08:36:33Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nPyStan provides a Python interface to Stan, a package for Bayesian inference using the No-U-Turn sampler, a variant of Hamiltonian Monte Carlo.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nStan\u00ae is a state-of-the-art platform for statistical modeling and high-performance statistical computation. Thousands of users rely on Stan for statistical modeling, data analysis, and prediction in the social, biological, and physical sciences, engineering, and business.\r\n\r\nUsers specify log density functions in Stan\u2019s probabilistic programming language and get:\r\n- full Bayesian statistical inference with MCMC sampling (NUTS, HMC)\r\n- approximate Bayesian inference with variational inference (ADVI)\r\n- penalized maximum likelihood estimation with optimization (L-BFGS)\r\n\r\nStan\u2019s math library provides differentiable probability functions & linear algebra (C++ autodiff). Additional R packages provide expression-based linear modeling, posterior visualization, and leave-one-out cross-validation.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-10-26T17:56:45Z",
        "closed_at": "2019-11-06T09:36:57Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n`mechanize` enables automated interaction with HTTP web servers.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n- Easy HTML form filling.\r\n- Convenient link parsing and following.\r\n- Browser history (`.back()` and `.reload()` methods).\r\n- Referer HTTP header added properly (optional).\r\n- Automatic observance of `robots.txt`.\r\n- Automatic handling of `HTTP-Equiv` and `Refresh`.\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-10-26T17:46:17Z",
        "closed_at": "2019-05-25T09:39:10Z",
        "merged_at": "2019-05-25T09:39:10Z",
        "body": "## What is this Python project?\r\n\r\n\"Test and Code\" podcast.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt is a podcast which focuses on testing - authored by Brian, a self-proclaimed \"Lean TDD advocate, Agile heckler. Python & pytest flag waver.\"\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-10-24T11:05:27Z",
        "closed_at": "2019-04-27T08:52:53Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nThis PR adds a link to [Cloudsmith](https://cloudsmith.io), which is a package management service SaaS. It's commercial, but it is completely free for open-source and it has generous free tiers otherwise. It has first-class support for Python package repositories (and many other package formats, such as Python/Npm), plus org/teams management, granular access controls, private repositories, repository-specific entitlements, a worldwide content distribution network, webhooks, access logs, etc.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt's similar to [PyPi Warehouse](https://pypi.org), but is a universal packagement service that supports many different technologies beyond just Python package hosting (so would be useful for polygot setups, such as combining with Npm). Cloudsmith has a focus on simplicity and an ethos for being as secure as possible by default, which is seen in the breadth of features offered (e.g. automatic GPG signing, entitlements control, geo/IP control, etc.)\r\n\r\n*Full disclosure:* I work at Cloudsmith.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2018-10-23T00:30:57Z",
        "closed_at": "2019-11-06T09:36:56Z",
        "merged_at": null,
        "body": "fixing links for talkbox, shuup, pysdl2, joblib, and openpyxl",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-10-22T22:55:11Z",
        "closed_at": "2018-10-23T04:06:15Z",
        "merged_at": "2018-10-23T04:06:15Z",
        "body": "fixing the broken link of openPyXL",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-10-22T20:34:57Z",
        "closed_at": "2019-11-06T08:36:34Z",
        "merged_at": null,
        "body": "Boto3 could be used to send Emails using AWS SES\r\n\r\n## What is this Python project?\r\nBoto3 is complete library which could be used to consume AWS APIs in Python. This could be used to consume AWS SES API as well which can be used to send transnational or promotional emails.\r\n\r\nDescribe features.\r\nThis is the only most widely used library for consuming AWS features in Python.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nNo other project is there.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-10-22T20:32:27Z",
        "closed_at": "2019-02-18T04:21:43Z",
        "merged_at": "2019-02-18T04:21:43Z",
        "body": "## What is this Python project?\r\n\r\nRay is a flexible, high-performance distributed execution framework.\r\n\r\n - Achieves parallelism in Python with simple and consistent API.\r\n - Particularly suited for machine learning (agnostic to the machine learning library of choice)\r\n - Forms the base of Ray's own distributed libraries for deep and reinforcement learning, processing of Pandas dataframes, and hyper parameter search.\r\n - Uses Plasma as its object store which allows to efficiently share large numpy arrays (or objects serializable with Apache Arrow) between the processes, avoiding unnecessary data copies and with only minimal deserialization\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n - Less overhead and lower latency with bottom up scheduling than similar projects\r\n - Actors - allow sharing mutable state between tasks\r\n - Similar to Dask, for more details see a comparison here:  https://github.com/ray-project/ray/issues/642\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-10-21T13:17:16Z",
        "closed_at": "2018-10-22T03:49:43Z",
        "merged_at": "2018-10-22T03:49:42Z",
        "body": "## Overview\r\n\r\n- http://pyparsing.wikispaces.com/ is closed.\r\n- Fix link to https://github.com/pyparsing/pyparsing",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-10-19T21:11:23Z",
        "closed_at": "2019-11-06T09:36:55Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nModeling and simulation of proton-exchange membrane fuel cells (PEMFC) may work as a powerful tool in the Research & development of renewable energy sources. The Open-Source PEMFC Simulation Tool (OPEM) is a modeling tool for evaluating the performance of proton exchange membrane fuel cells. This package is a combination of models (static/dynamic) that predict the optimum operating parameters of PEMFC. OPEM contained generic models that will accept as input, not only values of the operating variables such as anode and cathode feed gas, pressure and compositions, cell temperature and current density, but also cell parameters including the active area and membrane thickness. In addition, some of the different models of PEMFC that have been proposed in the OPEM, just focus on one particular FC stack, and some others take into account a part or all auxiliaries such as reformers. OPEM is a platform for collaborative development of PEMFC models.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* First PEM fuel cells simulation tool in python\r\n* Support most of static and dynamic models\r\n* Rich documentation.\r\n* Awesome outputs\r\n* User-friendly\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-10-19T13:11:27Z",
        "closed_at": "2019-05-25T05:59:53Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-10-19T12:38:59Z",
        "closed_at": "2019-05-25T06:00:01Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2018-10-19T10:47:42Z",
        "closed_at": "2019-05-25T06:01:57Z",
        "merged_at": null,
        "body": "No new Project. \r\nJust fixing some broken links.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-10-18T19:11:32Z",
        "closed_at": "2019-05-25T09:55:53Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-10-17T06:58:34Z",
        "closed_at": "2019-05-25T09:56:13Z",
        "merged_at": null,
        "body": "Added New Python Tutorial Link\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-10-16T06:31:03Z",
        "closed_at": "2019-11-06T09:36:54Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\ndiscord.py is a wrapper for the full Discord API with some extra support for easier bot making.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Active support.\r\n- Recognized by the Discord API official server.\r\n- Extension to the API for easier bot making.\r\n- Supports voice interfacing.\r\n- Rich documentation.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-10-14T19:50:11Z",
        "closed_at": "2019-10-31T22:08:04Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\ngoatools\r\n\r\nIt is a package for performing enrichment analysis of gene-ontology (GO) terms based on Fisher's exact test. It can detect both over-representation and under-representation of GO terms.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\ngoatools implements several statistical models and procedures for correction of multiple testing.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-10-14T16:15:46Z",
        "closed_at": "2019-11-29T15:24:55Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nLibrary for functional programming with collections in a data pipeline style.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n* Chained operations with an API inspired from Scala collections, Apache Spark RDDs, and Microsoft LINQ.\r\n* Very easy to parallelize operations like `map`\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-10-13T13:39:03Z",
        "closed_at": "2019-11-06T09:36:53Z",
        "merged_at": null,
        "body": "By making a contribution to this project, I certify that:\r\n\r\n(a) The contribution was created in whole or in part by me and I\r\nhave the right to submit it under the open source license\r\nindicated in the file;\r\n\r\n(b) I understand and agree that this project and the contribution\r\nare public and that a record of the contribution (including all\r\npersonal information I submit with it, including my sign-off) is\r\nmaintained indefinitely and may be redistributed consistent with\r\nthis project or the open source license(s) involved.\r\n\r\nSigned-off-by: William Moreno Reyes williamjmorenor@gmail.com\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-10-13T06:46:56Z",
        "closed_at": "2019-11-06T09:36:52Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\nRequestium is a Python library that merges the power of Requests, Selenium, and Parsel into a single integrated tool for automatizing web actions.\r\n\r\nThe library was created for writing web automation scripts that are written using mostly Requests but that are able to seamlessly switch to Selenium for the JavaScript heavy parts of the website, while maintaining the session.\r\n\r\nRequestium adds independent improvements to both Requests and Selenium, and every new feature is lazily evaluated, so its useful even if writing scripts that use only Requests or Selenium.\r\n\r\n**Features:**\r\n * Enables switching between a Requests' Session and a Selenium webdriver while maintaining the current web session.\r\n * Integrates Parsel's parser into the library, making xpath, css, and regex much cleaner to write.\r\n * Improves Selenium's handling of dynamically loading elements.\r\n * Makes cookie handling more flexible in Selenium.\r\n * Makes clicking elements in Selenium more reliable.\r\n * Supports Chrome and PhantomJS.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nCombines two great modules: requests and selenium\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-10-12T20:47:18Z",
        "closed_at": "2019-11-06T09:36:51Z",
        "merged_at": null,
        "body": "added Chaquopy, an SDK for android and BeeWare ,a toolkit \r\n\r\n\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-10-11T21:04:19Z",
        "closed_at": "2019-11-29T10:24:53Z",
        "merged_at": null,
        "body": "added kurbenetes to DevOps\r\n\r\n## What is this Python project?\r\n\r\nAdded kurbentes python module to devops\r\n\r\n## What's the difference between this Python project and similar ones?\r\nDifferent opensource project\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-10-10T06:57:59Z",
        "closed_at": "2019-11-06T09:36:48Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nThe module num2words will convert the integer to words with 29 languages.\r\n\r\nUsage:-- \r\n>>> from num2words import num2words\r\n>>> num2words(42)\r\nforty-two\r\n>>> num2words(42, to='ordinal')\r\nforty-second\r\n>>> num2words(42, lang='fr')\r\nquarante-deux\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt is available in 29 languages, and counting.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-10-09T10:15:34Z",
        "closed_at": "2019-11-06T09:36:47Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nProgramiz is the most beginner-friendly tutorials website for learning Python. Our tutorials and library documentation are used as a trustworthy reference by more than 1 million users every month.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* All tutorials on Programiz are written with beginners in mind, the logic is explained using simple examples.\r\n* We have a clean uninstrusive layout.\r\n* We have integrated an online Python interpreter that allows users to execute the commands that we are teaching and see for themselves the output without leaving the website.\r\n* Our goal is to become the most beginner-friendly tutorials website on the planet. Simple is hard, but we are ready for the challenge.\r\n* We are a small team of 3 programming enthusiasts from Nepal, trying to create a global resource we and our users love.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-10-08T01:08:47Z",
        "closed_at": "2019-11-06T09:36:49Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nThis python library allows access to the Radare2 reverse-engineering, binary analysis and debugging framework. It can return results in json format and is very useful for automating analysis of binaries.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere aren't really many good options for binary analysis through python, atleast not with the feature-set that Radare2 offers. For this reason I think this library is a great addition to the list.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-10-07T15:47:41Z",
        "closed_at": "2019-11-06T09:36:50Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nMolten is a Web Framework for building APIs using Dependency Injection which enables clean decoupled code structure.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Has Dependency Injection \r\n- Has built-in schema validation for incoming request data\r\n- Use type hints\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n                 ",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-10-06T13:53:47Z",
        "closed_at": "2019-10-31T08:46:00Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nplotnine is an implementation of a grammar of graphics in Python, it is based on ggplot2. \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt is similar to `ggplot` but `ggplot` is no longer maintained. The last commit on that repo was 2 years ago. https://github.com/yhat/ggpy/issues/654.\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-10-06T09:18:56Z",
        "closed_at": "2019-11-06T09:36:45Z",
        "merged_at": null,
        "body": "Added invoice2data (A modular Python library to extract data from PDF invoices)\r\n\r\n## What is this Python project?\r\nA modular Python library to support your accounting process.\r\n - extracts text from PDF files using different techniques, like pdftotext, pdfminer or tesseract OCR.\r\n - searches for regex in the result using a YAML-based template system\r\n - saves results as CSV, JSON or XML or renames PDF files to match the content.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nI haven't come across any such project in python\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-10-04T11:32:37Z",
        "closed_at": "2019-11-29T11:24:54Z",
        "merged_at": null,
        "body": "Awesome Python is a wonderful taxonomy of Python software and PythonLinks.info is doing almost the same thing for Python videos.\r\n\r\n## What is this Python project?\r\nPythonLinks.info organizes Python Videos from the best Python conferences into a tree of categories and ranks them by up votes versus total votes. Browse the tree, and you will find the top level categories of Machine Learning, Data Science, Parallelism, Python in the Organization and in the Community, Python Skills and Python Software. Each category has further sub-categories. It is a taxonomy of Python Videos. \r\n\r\n## Features\r\nYou can search the tree, and the results are displayed as a tree. \r\n\r\nThere are usually no more than about 7 items in any category.   This is very good from a human factors point of view. \r\n\r\nPythonLinks.info works well on cell phones.  Swipe left, right up or down to navigate the tree. \r\n On the desktop,  to navigate the tree, use the arrow keys or the mouse scroll wheel.  \r\n\r\nCurrently 720 videos are indexed, I add about a conference of 50 videos every week.\r\n\r\nNot everyone watches videos, but those who do really like having videos on the same \r\ntopic located in the same category, and ranked by upvotes versus total votes.\r\n\r\nAnd of course, at the root of the tree, PythonLinks.info, you will find the 10 best overall videos.\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThe three alternatives are youtube search, web search and PyVideo.org\r\n\r\n### YouTube Search\r\nA YouTube search only shows you results from YouTube.  PythonLinks.info is happy to index videos hosted anywhere.  Do a search on Python, and in the top 10 videos you get one video on Monty Python and two videos from 5 years ago. \r\n\r\n### Web Search\r\nWhen you do a web video search on \"Python \", usually 5 of the top 10 are paid courses.   \r\nI prefer the free videos.  With a web search, you often get videos which are out of date.   \r\nThis is particularly a problem  when the technology is changing rapidly.   \r\nPythonLinks has all recent videos.  Worse yet, a web search gives what is effectively an infinite \r\nlist of videos, but a basic principal in human factors is that there should be no more \r\nthan about 7 items in any category.\r\n\r\n### PyVideo.org\r\nPyVideo.org is the well known alternative. They were founded in 2008.  By 2016 they \r\nwere indexing 192 annual conferences, but that has been reducing and in 2018, so far this year they have only indexed 9 conferences, and generally not the major ones.  Do a search on say \"Pandas\", they limit you to 100 results, and all but 2 of them were from last year or before.  They seem to have lost their drive. \r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-10-03T20:24:20Z",
        "closed_at": "2019-11-06T09:36:46Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nThe ultimate Python library in building OAuth and OpenID Connect servers. JWS, JWK, JWA, JWT are included.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nhttps://lepture.com/en/2018/announcement-of-authlib\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-10-03T07:40:22Z",
        "closed_at": "2019-11-06T09:36:40Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n[Pyfield](https://github.com/Ublimjo/pyfield) is a collection of field for your form\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nPyfield is focused more on console form\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-10-03T01:35:10Z",
        "closed_at": "2019-05-25T06:02:43Z",
        "merged_at": "2019-05-25T06:02:43Z",
        "body": "Fix README index.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-10-03T01:33:10Z",
        "closed_at": "2019-11-06T09:36:41Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nAlembic is a lightweight database migration tool for usage with the SQLAlchemy Database Toolkit for Python.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- It works perfectly with SQLAlchemy.\r\n- It is easy to install and easy to use.\r\n- I don't know other tools like this.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-10-03T01:22:45Z",
        "closed_at": "2019-05-25T13:20:16Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nBlack is the uncompromising Python code formatter. Black gives you speed, determinism, and freedom from `pycodestyle` nagging about formatting. You can save time and mental energy for more important matters.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Black makes code review faster by producing the smallest diffs possible. \ud83d\udda4 \r\n- It is easy to install and easy to use.\r\n- It is open source (MIT license).\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-10-03T01:13:31Z",
        "closed_at": "2019-11-06T09:36:44Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nBetamax is a VCR imitation for requests. This will make mocking out requests much easier.\r\n\r\nBetamax intercepts every request you make and attempts to find a matching request that has already been intercepted and recorded.\r\n\r\n> Betamax records your HTTP interactions so the NSA does not have to.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- It is super easy to use.\r\n- It works very well with [requests](http://docs.python-requests.org/en/master/).\r\n- It stores cassettes in JSON format. \ud83d\udcaa \r\n- It is open source. \u2764\ufe0f \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-10-03T01:01:36Z",
        "closed_at": "2019-11-06T09:36:42Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nOfficial Python client library for the kubernetes API.\r\nIt provides an easy way to manage (create, delete, update) kubernetes deploys.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nI haven't found a similar library for Python yet.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-10-03T00:53:32Z",
        "closed_at": "2019-11-06T09:36:43Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nThis is a Python plugin to measure and generate reports of code coverage.\r\nIt is very simple to use, is MIT licensed and is compatible with coverage package.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nCompared to coverage the `pytest-cov` plugin does some extras:\r\n\r\n- Subprocess support: you can fork or run stuff in a subprocess and will get covered without any fuss.\r\n- Xdist support: you can use all of pytest-xdist's features and still get coverage.\r\n- Consistent pytest behavior. If you run coverage run -m pytest you will have slightly different sys.path (CWD will be in it, unlike when running pytest).\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-10-02T09:10:33Z",
        "closed_at": "2019-05-25T09:56:35Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-10-02T08:12:31Z",
        "closed_at": "2019-05-25T09:56:53Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-10-02T07:06:29Z",
        "closed_at": "2019-05-25T09:40:10Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-10-02T05:34:04Z",
        "closed_at": "2019-05-25T09:40:40Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-10-01T18:40:20Z",
        "closed_at": "2019-11-06T09:36:37Z",
        "merged_at": null,
        "body": "it can be added under HTTP or Web Framework section too.\r\n\r\n## What is this Python project?\r\nHTTP and Websocket client server implementation for asyncio\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nThis one works with asyncio\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-10-01T17:21:15Z",
        "closed_at": "2019-11-06T09:36:38Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n[dynaconf](https://github.com/rochacbruno/dynaconf) is a layered configuration system for Python applications - with strong support for 12-factor applications and extensions for Flask and Django.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- allows to store parameters in multiple file formats (`.toml`, `.json`, `.yaml`, `.ini` and `.py`)\r\n- sensitive secrets like **tokens** and **passwords** can be stored in safe places like` .secrets` file or _vault server_\r\n- has **drop in extensions** for **Flask** and **Django**\r\n- **powerful CLI** to help you manage your settings via console.\r\n- **customizable Validation System** to ensure correct config parameters.\r\n- allows to **access settings** from anywhere within a **single** `dynaconf.settings` module\r\n\r\nIt works like a **magic** and makes managing settings a lot easier.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-10-01T12:27:59Z",
        "closed_at": "2019-11-06T09:36:36Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nRemi is a GUI library for Python applications which transpiles an application's interface into HTML to be rendered in a web browser. This removes platform-specific dependencies and lets you easily develop cross-platform applications in Python!\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nCompared to the other GUIs, this one ca be executed in a remote server and acceded in any device with just a web browser.\r\n\r\n--\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-09-27T15:55:32Z",
        "closed_at": "2019-11-06T09:36:39Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nIt's a modern parser, easy for beginners and useful for experts. \r\n\r\nIt's competitive with PLY but also adds many more features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nvs PLY:\r\n- EBNF grammar which is easier to read & write\r\n- Earley algorithm support, which is much stronger algorithmically\r\n- Automatic line numbering\r\n- Automatic AST construction\r\n\r\nPlenty more. A longer comparison can be found on Lark's README\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-09-27T09:32:43Z",
        "closed_at": "2019-11-06T09:36:35Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nPyYAML-Tags: [GitHub](https://github.com/meiblorn/pyyaml-tags), [PyPI](https://pypi.org/project/pyyaml-tags/)\r\n\r\n- Custom tags support for the mature PyYAML library\r\n- Simple API\r\n- Extensible \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- There is no alternatives with such functionality for the Python YAML processing.\r\n- Good documentation\r\n- MIT Licence\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-09-22T04:23:10Z",
        "closed_at": "2019-11-06T09:36:34Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\nBottle is a microframework that was originally meant for building APIs. Its default features include routing, templating, utilities, and a basic abstraction over the WGSI, also known as the Web Server Gateway Interface, standard. WGSI is a specification that describes how a web server communicates with web applications, and how web applications can be chained together to process one request.\r\n\r\nBottle is best used for building simple personal apps and for prototyping.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nSome nice aspects of Bottle include: \r\n1. It is distributed as a single file module; everything is implemented in a single source file\r\n2. It has no dependencies other than the Python Standard library\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-09-18T18:11:10Z",
        "closed_at": "2019-11-06T09:36:33Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nStream processing framework for Python.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nWallaroo is a  extensible framework that makes it easy to get stateful stream processing and event-driven applications. Wallaroo is was  purpose-built for use cases that require state management, complex workflows, bursty capacity demands, or the need to run anywhere \u2013 on-prem, at the edge, or on any cloud.\r\n\r\nWallaroo was built with several high-level goals in mind:\r\n\r\n- Create a dependable and resilient distributed computing framework\r\n- Take care of the complexities of distributed computing \"plumbing,\" allowing developers to focus on their business logic\r\n- Provide high-performance & low-latency data processing\r\n- Be portable and deploy easily (i.e., run on-prem or any cloud)\r\n- Manage in-memory state for the application\r\n- Allow applications to scale as needed, even when they are live and up-and-running\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-09-17T10:48:07Z",
        "closed_at": "2019-11-06T10:36:57Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nAdds functionality to the python debugger, including support for remote debugging\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt's easy to configure remote debugging.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-09-16T21:08:19Z",
        "closed_at": "2018-10-16T17:23:57Z",
        "merged_at": "2018-10-16T17:23:57Z",
        "body": "## What is this Python project?\r\n\r\nPythonRobotics is a collection of robotics algorithms with Matplotlib visualizations. The majority of the algorithms are focused on autonomous navigation for mobile robots, and the code is intended to be easily readable to help users understand how the algorithm works. \r\n\r\nSince I created a new section for this, I also added a link to rospy, which is the Python library for ROS (Robot Operating System). ROS is a robotics middleware used by many companies and universities to facilitate the development of robotic systems.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere was not a robotics section prior to this PR, and robotics is awesome. It deserves a place in awesome-python.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-09-14T19:30:52Z",
        "closed_at": "2019-11-06T10:36:58Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n[Uplink](https://github.com/prkumar/uplink) turns your HTTP API into a Python class.\r\n```python\r\nfrom uplink import Consumer, get, headers, Path, Query\r\n\r\nclass GitHub(Consumer):\r\n    \"\"\"A Python Client for the GitHub API.\"\"\"\r\n\r\n    @get(\"users/{user}/repos\")\r\n    def get_repos(self, user: Path, sort_by: Query(\"sort\")):\r\n        \"\"\"Retrieves the user's public repositories.\"\"\"\r\n```\r\n\r\nUplink is a **Declarative** HTTP Client for Python:\r\n\r\n- Builds Reusable Objects for Consuming Web APIs.\r\n- Works with **Requests**, **asyncio**, and **Twisted**.\r\n- Inspired by [Retrofit](http://square.github.io/retrofit/)\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Quickly Define Structured API Clients\r\n- Bring Your Own HTTP Library\r\n- Easy and Transparent Deserialization/Serialization\r\n- Extendable\r\n- Authentication\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-09-14T07:26:06Z",
        "closed_at": "2019-11-06T10:36:54Z",
        "merged_at": null,
        "body": "Repo : https://github.com/Scille/umongo\r\nDocs : https://umongo.readthedocs.io\r\n\r\n## What is this Python project?\r\n\r\nA synchronous/asynchronous ODM for MongoDB.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Work with multiple drivers (PyMongo, TxMongo, motor_asyncio and mongomock for the moment)\r\n- Stay close to the standards MongoDB driver to keep the same API when possible: use find({\"field\": \"value\"}) like usual but retrieve your data nicely OO wrapped !\r\n- Tight integration with Marshmallow serialization library to easily dump and load your data with the outside world\r\n- i18n integration to localize validation error messages\r\n- Python3 only\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-09-13T09:17:54Z",
        "closed_at": "2019-11-06T10:36:55Z",
        "merged_at": null,
        "body": "Repo: https://github.com/Nobatek/flask-rest-api/\r\nDocs: https://flask-rest-api.readthedocs.io\r\n\r\n## What is this Python project?\r\n\r\nDB agnostic framework to build auto-documented REST APIs with Flask and marshmallow\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis is a glue layer on top of great libraries from the marshmallow ecosystem:\r\n\r\n- marshmallow itself for serialization, deserialization and validation\r\n- webargs to parse request arguments\r\n- apispec to generate OpenAPI documentation\r\n\r\nflask-rest-api does not develop its own serialization/deserialization logic, which means less potential errors. It relies on marshmallow, which is a reference library for those tasks. It reduces the boilerplate even more if the application uses an ORM or ODM that can generate marshmallow schemas from the database model (marshmallow-sqlalchemy, umongo or marshmallow-mongoengine,...).\r\n\r\nThe OpenAPI (Swagger) specification is automatically generated, yet customizable, and exposed with ReDoc or Swagger UI.\r\n\r\nIt includes features not found in other similar frameworks:\r\n\r\n- Pagination\r\n- ETag\r\n\r\nflask-rest-api is Python3 only. It supports marshmallow 2 and 3.\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-09-12T14:16:51Z",
        "closed_at": "2019-11-06T10:36:53Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n[aiochan](https://github.com/zh217/aiochan) is a concurrency library that is used on top of the built-in library [asyncio](https://docs.python.org/3/library/asyncio.html). It provides channels together with `put`, `get` and `select` operations on them as its concurrency primitives, thus enabling CSP-style concurrency programs to be written (like in Go or in Clojure's core.async). In additions to lots of convenient methods and functions which enable easy-to-read and easy-to-write concurrent dataflow, there are also methods provided that can overcome python's GIL restriction in order to fully utilise all CPU cores on a single machine.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nNone of the libraries already listed is similar to this one. Compared to those that are not listed (such as [python-csp](https://github.com/futurecore/python-csp), [aiochannel](https://github.com/tbug/aiochannel) and [aiostream](https://github.com/vxgmichel/aiostream)), they do not enable the full CSP-style programming (usually they do not provide `select`, which must be implemented inside the channel), or they are not actively maintained at all and do not work well with the newest python versions.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-09-11T10:24:51Z",
        "closed_at": "2019-11-06T10:36:56Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n[Yaspin](https://github.com/pavdmyt/yaspin) provides a full-featured terminal spinner to show the progress during long-hanging operations.\r\n\r\n### Features:\r\n\r\n- Lightweight. No external dependencies\r\n- Runs at all major **CPython** versions (*2.7*, *3.4*, *3.5*, *3.6*, *3.7*), **PyPy** and **PyPy3**\r\n- Supports all (60+) spinners from [cli-spinners](https://github.com/sindresorhus/cli-spinners)\r\n- Supports all *colors*, *highlights*, *attributes* and their mixes from [termcolor](https://pypi.org/project/termcolor/) library\r\n- Easy to combine with other command-line libraries, e.g. [prompt-toolkit](https://github.com/jonathanslenders/python-prompt-toolkit/)\r\n- Flexible API, easy to integrate with existing code\r\n- User-friendly API for handling POSIX [signals](https://www.computerhope.com/unix/signals.htm)\r\n- Safe **pipes** and **redirects**:\r\n\r\n```\r\n$ python script_that_uses_yaspin.py > script.log\r\n$ python script_that_uses_yaspin.py | grep ERROR\r\n```\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIntuitive and powerful API:\r\n\r\n```python\r\nimport time\r\nfrom yaspin import yaspin\r\n\r\nwith yaspin().white.bold.shark.on_blue as sp:\r\n    sp.text = \"White bold shark in a blue sea\"\r\n    time.sleep(5)  # time consuming code\r\n```\r\n\r\n![yaspin](https://raw.githubusercontent.com/pavdmyt/yaspin/master/gifs/shark.gif)\r\n\r\nLightweight; Constantly evolving; Flexible and feature-rich API for handling POSIX signals.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-09-06T23:32:41Z",
        "closed_at": "2019-11-06T10:36:52Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nLightweight framework for building command-line applications with Python.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Interactive mode (see [GIF](https://github.com/facebookincubator/python-nubia/raw/master/docs/interactive.gif?raw=true))\r\n- Simple\r\n- Python 3 (with type support for validation :heart:)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-08-25T21:17:36Z",
        "closed_at": "2019-11-06T10:36:50Z",
        "merged_at": null,
        "body": "CCtbx is a comprehensive tool eligible for the most crystallography related projects\r\n\r\nI do not know any other similar project\r\n\r\n--\r\n\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-08-24T12:30:07Z",
        "closed_at": "2019-11-06T10:36:51Z",
        "merged_at": null,
        "body": "[safrs](https://github.com/thomaxxl/safrs/) - Quickly deploy JSON:API services based on SQLAlchemy models with an OpenApi (fka Swagger) UI\r\n\r\n## What is this Python project?\r\n\r\n The purpose of this framework is to help python developers create a self-documenting JSON API for sqlalchemy models\r\n![demo](https://github.com/thomaxxl/safrs/raw/master/docs/images/safrs.gif)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Automatically generate OpenApi-Spec (swagger) documentation\r\n- JSON:API compliant\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-08-21T21:48:18Z",
        "closed_at": "2019-11-06T10:36:49Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nManages the remote machines via SSH including a rich set of file operations such as sync and mkdtemp. Built on top of paramiko and spur.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nPlease see the github page for details on differences to Spur; the most important ones are:\r\n* type annotations\r\n* pathlib.Path support\r\n* many helper functions to abstract away the tedious work with SFTP client\r\n* sync function to sync a local to a remote directory (similar to rsync)\r\n* computation of MD5 checksums\r\n*  a wrapper around paramiko's SFTP client to automatically reconnect on failures\r\n\r\n--\r\nAnyone who agrees with this pull request could vote for it by adding a :+1:  to it, and usually, the maintainer will merge it when votes reach 20.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-08-21T21:40:02Z",
        "closed_at": "2019-11-06T10:36:46Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nRun commands and manipulate files locally or over SSH using the same interface\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt is built on top of paramiko, but has a much simpler and more straight-forward interface.\r\n\r\n--\r\nAnyone who agrees with this pull request could vote for it by adding a :+1:  to it, and usually, the maintainer will merge it when votes reach 20.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2018-08-18T11:44:48Z",
        "closed_at": "2019-11-29T11:24:53Z",
        "merged_at": null,
        "body": "Added PyXLL to Office section.\r\n\r\n## What is this Python project?\r\nPyXLL.\r\n\r\nA tool for creating Excel add-ins for Excel in Python.\r\n\r\nFeatures include:\r\n- Write Excel user defined functions and macros in Python\r\n- Extend the Excel UI with menu functions and custom ribbons\r\n- Stream real time data to Excel from Python\r\n- Asynchronous and thread safe functions\r\n- Customizable type system for handling Excel <-> Python type conversion\r\n- Reload Python code without restarting Excel\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nNo other projects embed the Python interpreter into Excel to enable writing full Excel add-ins in Python with the same level of performance that's possible with PyXLL.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-08-17T16:44:42Z",
        "closed_at": "2019-11-06T10:36:47Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nSnips NLU is a natural language understanding library dedicated to *Intent Parsing* and *Entity Extraction*. It is based on machine learning and makes use of [Logistic Regression](https://en.wikipedia.org/wiki/Logistic_regression) and [Conditional Random Fields](https://en.wikipedia.org/wiki/Conditional_random_field).\r\n\r\nConsider the following sentence:\r\n```\r\n    \"What will be the weather in paris at 9pm?\"\r\n```\r\n\r\nAfter proper training, the Snips NLU library allows to extract structured data such as:\r\n\r\n```\r\n    {\r\n       \"intent\": {\r\n          \"intentName\": \"searchWeatherForecast\",\r\n          \"probability\": 0.95\r\n       },\r\n       \"slots\": [\r\n          {\r\n             \"value\": \"paris\",\r\n             \"entity\": \"locality\",\r\n             \"slotName\": \"forecast_locality\"\r\n          },\r\n          {\r\n             \"value\": {\r\n                \"kind\": \"InstantTime\",\r\n                \"value\": \"2018-02-08 20:00:00 +00:00\"\r\n             },\r\n             \"entity\": \"snips/datetime\",\r\n             \"slotName\": \"forecast_start_datetime\"\r\n          }\r\n       ]\r\n    }\r\n```\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- The purpose of Snips NLU is more high-level than libraries such as spaCy or NLTK and can be directly used to build chatbots for instance.\r\n- Snips NLU has been designed to run very fast, with a very low memory footprint, while achieving very good prediction accuracy (cf [this blogpost](https://medium.com/snips-ai/an-introduction-to-snips-nlu-the-open-source-library-behind-snips-embedded-voice-platform-b12b1a60a41a)).\r\n- This library offers an interface with [`snips-nlu-rs`](https://github.com/snipsco/snips-nlu-rs), its Rust equivalent for inference only. It allows to persist the NLU pipeline trained with the python code, and load it with the rust code to perform inference. This offers a great portability.\r\n\r\n----------\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-08-17T14:54:58Z",
        "closed_at": "2019-11-06T10:36:48Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nCxFreeze allows you to build python executable for every desktop platform (such as Linux, Windows or Mac).\r\nThis project is like pyinstaller or nuitka but it updates faster than first and builds in python (other than second).\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n ",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-08-15T18:58:13Z",
        "closed_at": "2019-11-06T10:36:45Z",
        "merged_at": null,
        "body": "Adding a couple of plugins for python in vim.\r\n\r\n## What is this Python project?\r\n\r\nVim plugin for python.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nOptions for those that don't like pymode's opinionated all-in-one package\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-08-15T18:42:24Z",
        "closed_at": "2019-11-07T10:59:54Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nPyecharts is a python interface to [Echarts.js](https://github.com/apache/incubator-echarts) visualization library. It supports [28+ charts ranging from 2D, 3D and geo mapping](http://nbviewer.jupyter.org/github/pyecharts/pyecharts-users-cases/blob/master/notebook-users-cases/notebook-user-cases.ipynb). It supports data scientists using Jupyter, [nteract](http://pyecharts.org/#/zh-cn/jupyter_notebook?id=nteract) and supports web developers with [django ](http://pyecharts.org/#/zh-cn/django)and [flask](http://pyecharts.org/#/zh-cn/flask) integration. \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt is similar to plotly.py and bokeh. \r\n\r\nComparing with plotly.py, pyecharts offers free exports of svg, pdf and html format whereas plotly.py offer them under a premium version. And pyecharts does not really care about the number of exports to other file formats whereas ploly.py allows up to[100 exports per 24h](https://plot.ly/products/cloud/).\r\n\r\nComparing with bokeh, user group are different. Bokeh serves primarily scientific community whereas pyecharts serves both web developers and data analysts. Bokeh's api emulates matplotlib whereas pyecharts api emulates pygal. \r\n\r\nWhen it comes to geomapping, pyecharts has strong support for [Chinese regions](https://github.com/echarts-maps). \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-08-15T17:19:43Z",
        "closed_at": "2018-09-03T16:58:34Z",
        "merged_at": "2018-09-03T16:58:34Z",
        "body": "This is a nit, not a new project.\r\n\r\n## What is this Python project?\r\n\r\nN/A\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nN/A\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-08-15T06:03:09Z",
        "closed_at": "2019-11-29T07:24:50Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nhttps://guillotina.io\r\nGuillotina. The fullstack DataFramwork. \r\nGuillotina is the only full-featured Python AsyncIO REST Resource Application Server designed for high-performance, horizontally scaling solutions.\r\n\r\n### Why Guillotina\r\n\r\n- **Performance**: Traditional python web servers limit the number of simultaneous requests to the number of threads running the server. With AsyncIO, you are able to server many simultaneous requests at the same time.\r\n\r\n- **Front-end friendly**: Guillotina is designed to make your JavaScript engineers happy. With things like automatic swagger documentation for endpoints, OOTB CORS and websockets, your front-end team will be happy to work with Guillotina. We speak JSON but can adapt with any Content-Type payload request/response bodies.\r\n \r\n- **AsyncIO**: With AsyncIO, websockets are simple. More interestingly, AsyncIO is an ideal match with micro-service architectures.\r\n    \r\n- **Object model**: Guillotina uses a hierarchial object model. This hierarchy of objects then maps to URLs. The hierarchy model is perfect for managing a large number of objects.\r\n    \r\n- **Security**: Guillotina has a granular, hierarchial, multi-demensional security system that allows you to manage the security of your content at a level not available to other frameworks.\r\n    \r\n- **Scale**: With integrations like Redis, ElasticSearch and Cockroach, you have the tools to scale.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Fast and scalable: Built on AsyncIO, Guillotina scales out of the box by design.\r\n- Simplicity with batteries included: With features like CORS, Websockets and TUS, Guillotina provides just the right amount of \"batteries.\"\r\n- Securely organized data: Guillotina has a granular, hierarchial, multi-demensional security system that allows you to manage the security of your content at a level not available to other frameworks.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-08-09T07:28:31Z",
        "closed_at": "2019-11-06T10:36:44Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nAs said in its own README\r\n\r\n> Pyxel is a retro game development environment in Python.\r\nThanks to its simple specifications inspired by retro gaming consoles, such as only 16 colors can be displayed and only 4 sounds can be played back at the same time, you can feel free to enjoy making pixel art style games.\r\n\r\nIt's similar to fantasy consoles like PICO-8 or TIC-80.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nPyxel differ from the other projects by focusing on developing retro games imposing limitations, like the small sized color palette.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-08-07T18:43:26Z",
        "closed_at": "2019-11-06T10:36:43Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n[appkernel](https://github.com/accelero-cloud/appkernel) - A beautiful, well tested python framework helping you to deliver REST APIs from zero to production within minutes (no kidding: literally within minutes).\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* Flask - it provides a lot more functionality out of the box, including security and ORM/ODM;\r\n* Eve - the resource definition is in code, making it very natural for developers to extend it;\r\n* Flask-Restful - more extended feature set, including serialization, validation, security and data encryption;\r\n* Flask-Restless - focuses on MongoDB (instead of SQLAlchemy), provides value generators, fine-grained security features, HATEOAS, REST client with circuit breaker and many other planned features making the development of micro-services much easier;\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-08-04T11:48:38Z",
        "closed_at": "2019-11-07T10:59:53Z",
        "merged_at": null,
        "body": "[pyvips](https://github.com/libvips/pyvips) is a binding for the [libvips image processing library](https://libvips.github.io/libvips/). It's fast and only needs a little memory. \r\n\r\nFor example, on this benchmark:\r\n\r\nhttps://github.com/libvips/libvips/wiki/Speed-and-memory-use\r\n\r\nIt's 5x faster than ImageMagick and needs 10x less memory.\r\n\r\npyvips works on all python versions on all platforms, is LGPL, can be [simply installed with pip](https://pypi.org/project/pyvips/), has [complete documentation](https://libvips.github.io/pyvips), has a large test suite, and has no known memory leaks.\r\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-08-03T19:41:05Z",
        "closed_at": "2018-10-21T03:25:01Z",
        "merged_at": "2018-10-21T03:25:01Z",
        "body": "Added PySimpleGUI to the list of GUI frameworks.\r\n\r\nIt's a new package that enables creation of custom GUIs in very few lines of clear, easy to read Python code.\r\n\r\nNone of the other simplified GUI frameworks come close to this kind of design and ease of use.\r\n\r\n## What is this Python project?\r\n\r\nPySimpleGUI provides a way for beginners to build GUIs with little effort.  Customized GUIs can be built using Python lists in a few short minutes.  Results are returned via a list as well.  All typical GUI Widgets are available (checkboxes, radio buttons, buttons, text, etc)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- More Python-like than any other GUI package. Period.\r\n- Same widgets as tkinter but presented in an easy to understand way\r\n- No dependencies on other packages\r\n- Single source file.... copy source PySimpleGUI.py should pip install not be feasable\r\n- Easily understood by beginners (all of the others suck for beginning programmers or are too limited)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-08-02T06:54:09Z",
        "closed_at": "2018-08-02T16:31:36Z",
        "merged_at": "2018-08-02T16:31:36Z",
        "body": "\r\n## What is the Vibora project?\r\nVibora is a Web framework and was designed from scratch to be efficient.\r\n\r\n### Just like Flask\r\nVibora APIs were heavily inspired by the awesome Flask.\r\nBuiltin features were also based on many famous libraries as jinja2, marshmallow, websockets by aaugustin, werkzeug and many others.\r\n\r\nSchemas validation, template engine, sessions and many more features were written from scratch to provide great performance along with an elegant async interface.\r\n\r\n### Asynchronous\r\nVibora is fully asynchronous because web APIs are often IO based and that's exactly where an async architecture shines. \r\n\r\nVibora also take advantage of multiple CPU cores by default thanks to the multi-processed architecture. Uvloop and other C speed-ups are used when available.\r\n\r\n[Source](https://vibora.io/)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2018-07-28T19:44:13Z",
        "closed_at": "2019-11-06T10:36:42Z",
        "merged_at": null,
        "body": "I was bummed to find two awesome-looking projects that are unmaintained:\r\n\r\n- code2flow - no code changes in 4 years (last on 30Oct2014) and announcement in README: https://github.com/scottrogowski/code2flow\r\n- pycallgraph - announcement that project was abandoned in README: https://github.com/gak/pycallgraph#project-abandoned\r\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-07-23T14:27:05Z",
        "closed_at": "2019-11-29T15:24:54Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n[Acra](https://github.com/cossacklabs/acra) is a network encryption proxy to protect databases and database-based applications from data leaks, allowing greater security for distributed applications via cryptography and intrusion detection.\r\n\r\n[AcraWriter](https://github.com/cossacklabs/acra/wiki/Using-Acra-to-Protect-Your-Django-App) is a part of Acra suite, a client-side library, which integrates into the app flow either through ORM or directly, and provides the means to encrypt the sensitive data.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nAcra doesn't have similar projects, however you might think about Vault's Encryption as a Service engine, but deployed in your own infrastructure, without leaking keys anywhere.\r\n\r\n- Acra allows to selectively encrypt sensitive records with strong multi-layer cryptography in client-side application. Client-side app doesn't have _decryption_ key, thus compromising app won't lead to stealing key and decrypting data in the database.\r\n- Sensitive data is encrypted before being transmitted to the database, and decryption key is not stored on client side.\r\n- Data is decrypted in trusted environment (on AcraServer).\r\n- Acra allows to detect potential intrusions and SQL injections (using SQL firewall and poison records).\r\n- Has SIEM integrations.\r\n- Suits for distributed, microservice-rich environments.\r\n- Has numerous examples and tutorials for Python client applications.\r\n- Allows your application to cover GDPR articles 25, 32, 33, 34. \r\n- Tested, supported, audited.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-07-20T19:33:17Z",
        "closed_at": "2019-11-06T10:36:41Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nArrow is a Python library that offers a sensible, human-friendly approach to creating, manipulating, formatting and converting dates, times, and timestamps. It implements and updates the datetime type, plugging gaps in functionality, and provides an intelligent module API that supports many common creation scenarios. Simply put, it helps you work with dates and times with fewer imports and a lot less code. \r\n\r\nIt is widely used and has over 5K stars in github. \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nFully implemented, drop-in replacement for datetime\r\nSupports Python 2.6, 2.7, 3.3, 3.4 and 3.5\r\nTime zone-aware & UTC by default\r\nProvides super-simple creation options for many common input scenarios\r\nUpdated .replace method with support for relative offsets, including weeks\r\nFormats and parses strings automatically\r\nPartial support for ISO-8601\r\nTimezone conversion\r\nTimestamp available as a property\r\nGenerates time spans, ranges, floors and ceilings in timeframes from year to microsecond\r\nHumanizes and supports a growing list of contributed locales\r\nExtensible for your own Arrow-derived types\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-07-20T13:40:31Z",
        "closed_at": "2019-11-06T10:36:40Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nOOP HTML templating system. Build HTML pages without the need to learn a new templating syntax and using all the power of Python's syntax.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- no need to write html in any way to have html\r\n- generation of html dynamically using all the power of python language (not a templating language)\r\n- Inheritance of templates in OOP fashion not \"includes\"\r\n- full reusability of templates\r\n- overall speed (for complex html structures)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-07-19T09:05:45Z",
        "closed_at": "2019-11-29T15:24:52Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n[Themis](https://github.com/cossacklabs/themis) framework is cryptography library for making typical encryption schemes easy to use in the real-world use cases like data at rest, authenticated data exchange, transport protection, authentication, and so on.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Most libraries require understanding of how cryptographic algorithms work: what is padding, what is IV, minimum key length. Themis is made by cryptographers from Cossack Labs for applied developers: providing strong security, yet hiding complicated crypto-choices from developers.\r\n- [Strong cryptography inside](https://github.com/cossacklabs/themis/wiki/Cryptosystems), secure default settings.\r\n- \"Pre-baked\" use-cases: special encryption schemes for storing data and for sending data (f.e. no need to rotate transport keys manually, built in forward secrecy).\r\n- High level functions, cryptography details hidden under the hood (developers don't need to know the difference between AES CBC mode and AES GCM mode to encrypt data).\r\n- [Documentation and examples](https://github.com/cossacklabs/themis/wiki/Python-Howto) created for developers, not security experts.\r\n- Based on known vendors of crypto-primitives like OpenSSL, BoringSSL, and LibreSSL, has a C-core with high-level language wrappers available for many popular languages.\r\n- Fits complex client-server architectures; has unified APIs across platforms. One encryption library across all stack. \r\n- Useful for making backends for mobile applications.\r\n- Tested, supported, audited.\r\n- GDPR-friendly.\r\n- Widely used in real-world apps.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-07-18T09:14:19Z",
        "closed_at": "2019-11-06T10:36:39Z",
        "merged_at": null,
        "body": "Arguably the best package manager around:\r\n\r\n## What is this Python project?\r\n\r\nPackage Management for the entire operating system.\r\nExtremely feature-rich, handles both Python and non-Python dependencies, library linking, build system options, live software distribution, dependency conditionality (and/or/older/newer/explicit version), version slotting (multiple versions in parallel), and much more.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIn contrast to pip it can manage the entire dependency graph of an operating system.\r\nIn contrast to other package managers it is fully implemented in Python and designed for rolling-release, source-based installs, and full freedom of choice for the user. \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-06-29T02:33:23Z",
        "closed_at": "2019-11-07T10:59:56Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n[Pottery](https://github.com/brainix/pottery) is a Pythonic way to access Redis.  If you know how to use Python dicts, then you already know how to use Pottery.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nOther Redis clients stay close to the [Redis command set](https://redis.io/commands), but Pottery provides container classes to access Redis that implement the various Python container APIs.  Under the hood, Pottery uses [redis-py](https://github.com/andymccurdy/redis-py), but Pottery provides:\r\n\r\n- a [dict API](https://github.com/brainix/pottery#dicts) to access [Redis Hashes](https://redis.io/commands#hash)\r\n- a [set API](https://github.com/brainix/pottery#sets) to access [Redis Sets](https://redis.io/commands#set)\r\n- a [list API](https://github.com/brainix/pottery#lists) to access [Redis Lists](https://redis.io/commands#list)\r\n- a [distributed ID generator](https://github.com/brainix/pottery#nextid)\r\n- a [distributed lock](https://github.com/brainix/pottery#redlock) that implements the [`threading.Lock`](https://docs.python.org/3/library/threading.html#lock-objects) API\r\n- a [timer](https://github.com/brainix/pottery#contexttimer) to accurately measure code execution time\r\n- a [Bloom filter](https://github.com/brainix/pottery#bloom-filters) that implements the set API, backed by Redis\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-06-25T05:31:26Z",
        "closed_at": "2018-12-02T09:06:45Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDramatiq is a distributed task processing library with a focus on simplicity, reliability and performance.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nYou can find my motivation for building it [here](http://dramatiq.io/motivation.html).\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-06-25T03:52:00Z",
        "closed_at": "2018-08-04T10:49:41Z",
        "merged_at": "2018-08-04T10:49:41Z",
        "body": "Update outdated Passlib hyperlink.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-06-21T12:32:52Z",
        "closed_at": "2019-11-06T10:36:38Z",
        "merged_at": null,
        "body": "Telegram Bot API is one of most useful apis for builnding chatbots It's easy to start develope bots on Telegram with this library.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-06-19T17:11:01Z",
        "closed_at": "2019-11-29T08:24:49Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nWhen evaluating a function numerically we would like to sample it more densely in the interesting regions instead of evaluating it on a manually-defined homogeneous grid. \r\nI am going to demonstrate an open-source software package Python Adaptive that evaluates the function at the optimal points by analysing existing data and planning ahead on the fly.\r\nWith a few lines of code you define your goal, evaluate functions on a computing cluster, and live-plot the data.\r\nIt performs averaging of stochastic functions, interpolation of vector-valued one and two-dimensional functions, and one-dimensional integration.\r\nIn my [work](https://quantumtinkerer.tudelft.nl/), using adaptive resulted in a **ten-fold speed increase** over using a homogeneous grid.\r\n\r\n## [Repo link](https://github.com/python-adaptive/adaptive)\r\nhttps://github.com/python-adaptive/adaptive\r\n\r\n## What's the difference between this Python project and similar ones?\r\nThere are no other Python packages that do the same as `adaptive`. There are some samplers that do high dimensional sampling, but adaptive is aimed at 0D, 1D and 2D. Besides it does:\r\n* sampling in parallel (trivial to switch between your computer and a computing cluster)\r\n* live plotting\r\n* interpolation\r\n\r\n## Examples\r\n<img src=\"https://user-images.githubusercontent.com/6897215/38739170-6ac7c014-3f34-11e8-9e8f-93b3a3a3d61b.gif\" width='20%'> </img>\r\n<img src=\"https://user-images.githubusercontent.com/6897215/35219611-ac8b2122-ff73-11e7-9332-adffab64a8ce.gif\" width='40%'> </img>\r\n\r\nCheck out the `adaptive` [example notebook `learner.ipynb`](learner.ipynb) (or run it [live on Binder](https://mybinder.org/v2/gh/python-adaptive/adaptive/master?filepath=learner.ipynb)) to see examples of how to use `adaptive`.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-06-18T12:28:47Z",
        "closed_at": "2019-04-29T18:52:43Z",
        "merged_at": null,
        "body": "Add easylogging lib in logging\r\nhttps://github.com/AI35/easylogging\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-06-16T19:38:11Z",
        "closed_at": "2019-11-06T10:36:37Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\nThe  [Everbug](https://github.com/everhide/everbug) is a debug middleware with browser extensions.\r\nDisplays: Queries with explains, context variables and cProfile\r\n\r\n## What's the difference between this Python project and similar ones?\r\n* Awesome user interface\r\n* Ajax support\r\n* Has no third-party dependencies \r\n* Only needed and useful tools\r\n* Only this app shows context\r\n* The output page remain unchanged\r\n* The Extensions for Chrome & Firefox\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-06-16T17:18:56Z",
        "closed_at": "2019-11-06T10:36:36Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nA very simple scripts that animates long screenshots for README. Make it easier to present projects on GitHub.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nHaven't seen direct competition.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-06-12T01:40:01Z",
        "closed_at": "2019-11-04T11:15:19Z",
        "merged_at": null,
        "body": "An interactive, browser-based graphing library for Python \u2728\r\n\r\n[plotly.py](https://github.com/plotly/plotly.py)\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-06-08T16:37:59Z",
        "closed_at": "2019-11-06T10:36:35Z",
        "merged_at": null,
        "body": "It a tool to download documentation right from the command line.\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\nIt a tool to download documentation right from the command line.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-06-06T12:02:26Z",
        "closed_at": "2018-06-06T15:49:10Z",
        "merged_at": "2018-06-06T15:49:10Z",
        "body": "Previous `nryoung/algorithms` project is now deprecated and `keon/algorithms` is the new successor project.\r\n\r\nhttps://github.com/keon/algorithms",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-06-03T04:26:55Z",
        "closed_at": "2018-06-05T16:44:49Z",
        "merged_at": "2018-06-05T16:44:49Z",
        "body": "## What is this Python project?\r\n\r\n[Real Python](https://realpython.com/tutorials/) is a repository of free and in-depth Python tutorials created by a diverse team of professional Python developers.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nReal Python's unique angle is releasing several in-depth and peer reviewed tutorials every week. Recent examples:\r\n\r\n* https://realpython.com/python-itertools/\r\n* https://realpython.com/python-data-classes/\r\n* https://realpython.com/pipenv-guide/\r\n* https://realpython.com/python-thinking-recursively/\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-05-25T08:20:29Z",
        "closed_at": "2018-05-26T08:01:52Z",
        "merged_at": "2018-05-26T08:01:52Z",
        "body": "## What is this Python project?\r\n\r\nStatic type checker.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Faster\r\n- Actively maintained\r\n- Momentum behind it by a big player in the industry\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-05-21T07:14:10Z",
        "closed_at": "2019-05-25T06:06:13Z",
        "merged_at": null,
        "body": "Changing  the link for Stackless Python to the new official home at https://github.com/stackless-dev/stackless.\r\n\r\n## What is this Python project?\r\nNot a new project. Just fixing link to the correct one.\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nNA.\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-05-16T13:34:03Z",
        "closed_at": "2019-11-06T10:36:34Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nLomond is a WebSocket client designed for ease of use.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nLomond exposes WebSocket interactions with an iterator of events, which is often easier to reason about than the callback approach taken by most WebSocket libraries.\r\n\r\nThis library is well tested with 100% coverage, and commercially sponsored. \r\n\r\nHere's an example that streams Bitcoin prices.\r\n\r\n```python\r\nfrom lomond import WebSocket\r\nwebsocket = WebSocket('wss://ws-feed.gdax.com')\r\n\r\nfor event in websocket:\r\n    if event.name == \"ready\":\r\n        websocket.send_json(\r\n            type='subscribe',\r\n            product_ids=['BTC-USD'],\r\n            channels=['ticker']\r\n        )\r\n    elif event.name == \"text\":\r\n        print(event.json)\r\n```\r\n\r\nMore information [here](https://www.willmcgugan.com/blog/tech/post/announcing-lomond/)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-05-14T20:44:00Z",
        "closed_at": "2019-11-06T17:36:44Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n`Rebound` is a command-line tool that instantly fetches Stack Overflow results when you get a compiler error.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThe only similar ones are `how2` and `socli`, which are command-line clients for browsing Stack Overflow. `Rebound` is different because it automatically pulls an error message and keywords from the stack trace, creates a search query, and displays the most relevant SO results in the terminal. It also has the same functionality as `how2` and `socli`, if the user chooses.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-05-04T13:37:51Z",
        "closed_at": "2018-05-04T15:47:36Z",
        "merged_at": "2018-05-04T15:47:36Z",
        "body": "## What is this Python project?\r\n\r\n[Awesome Python for Social Good](https://github.com/metakermit/awesome-python-for-social-good) is another awesome list with a focus on listing examples and ideas of using Python for Social Good.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nUnlike the other more technical-focused awesome lists, this one focuses more on gathering ideas for how people could use Python to contribute to the community, tackle some pressing issues in the world (climate change, DDoS attacks on the Internet infrastructure, fake news, bots, trolls\u2026). It's a combination of technical examples & datasets and relevant news & knowledge sources that could be used as motivation. I haven't seen another list that tackles these topics here.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-05-01T16:03:40Z",
        "closed_at": "2019-11-06T10:36:33Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nThis is a list of python libraries, implementing schemas, ORMs/ODMs, models, active record patters.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis is the only such a list I'm aware of :) \r\nBesides, it is complete, neat and with avatars :)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-04-30T05:39:04Z",
        "closed_at": "2019-11-06T17:36:42Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nA visualization lib using leaflet.js\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt is really useful to view interactive maps using Python.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-04-27T12:36:55Z",
        "closed_at": "2019-11-06T11:36:59Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nA high level library which can turn command line scripts from most interpreted languages into a graphical application.\r\nIt requires a single \"usage\" line to be present on the client script. This line is parsed to generate a \"automatic\" gui, while also allowing for more advanced features. Its a new paradigm which is better explained in the project page.\r\nAlso includes a custom window batch file to enable running the script from a shortcut on systems where python is not installed but is available as a \"portable\" distro or embedded on a 3rd party application.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nWhile the spirit is somewhat similar to Gooey, it can be used with languages other than python.\r\nIts fully data driven, and can be mantained by end users with limited programming skills.\r\nOn a recent market analysis i could not find any other projects that offer this kind of high level funcionally, in python or any other languages.\r\nMost interpreted languages could be supported. The current supported languages are windows batch (.bat/.cmd), windows WSH (.js/.vbs), C-Shell (.csh), Windows powershell and Perl (.pl/.lava).\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-04-24T15:37:14Z",
        "closed_at": "2018-04-24T17:02:12Z",
        "merged_at": "2018-04-24T17:02:12Z",
        "body": "## What is this Python project?\r\n\r\nRecommendation System library in pytorch. \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n1. Only implementation in pytorch\r\n2. Actively managed by top recsys developers\r\n3. Highly configurable\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-04-24T07:21:41Z",
        "closed_at": "2018-04-24T17:02:56Z",
        "merged_at": "2018-04-24T17:02:56Z",
        "body": "## What is this Python project?\r\n\r\n[TextDistance](https://github.com/orsinium/textdistance) -- Compute distance between sequences.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n30+ algorithms, pure python implementation, common interface, optional external libs usage.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2018-04-22T21:25:21Z",
        "closed_at": "2018-04-23T03:48:40Z",
        "merged_at": "2018-04-23T03:48:40Z",
        "body": "## What is this Python project?\r\n\r\nNone library were modified.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nChange web crawler section to web crawler & web scraping since the two are used for the same thing however they are different.\r\n\r\nThat's why slightly change how the section was written.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-04-19T10:41:28Z",
        "closed_at": "2019-11-06T11:36:58Z",
        "merged_at": null,
        "body": "(Added two links because of the necessity of creating a new subsection; hope it's ok)\r\n\r\n## What is this Python project?\r\n\r\nVirgil Security SDK - an SDK which allows developers to add full end-to-end security to their existing digital solutions to become HIPAA and GDPR compliant and more using Virgil API.\r\nVirgil Crypto Library - a high-level cryptographic library that allows to perform all necessary operations for securely storing and transferring data.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- easy to use\r\n- suitable for many tasks related to securely transferring and storing data\r\n- updating regularly\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-04-18T23:09:05Z",
        "closed_at": "2019-05-25T09:41:45Z",
        "merged_at": null,
        "body": "I just added a good package that I use for environment management.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-04-14T15:00:11Z",
        "closed_at": "2019-11-06T06:36:44Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nPipenv \u2014 the officially recommended Python packaging tool from Python.org, free (as in freedom).\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nPipenv is a tool that aims to bring the best of all packaging worlds (bundler, composer, npm, cargo, yarn, etc.) to the Python world. Windows is a first-class citizen, in our world.\r\n\r\nIt automatically creates and manages a virtualenv for your projects, as well as adds/removes packages from your Pipfile as you install/uninstall packages. It also generates the ever-important Pipfile.lock, which is used to produce deterministic builds.\r\n",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-04-11T16:29:38Z",
        "closed_at": "2019-11-29T13:24:53Z",
        "merged_at": null,
        "body": "https://hackr.io/tutorials/learn-python\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-04-10T12:45:14Z",
        "closed_at": "2019-11-06T17:36:41Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-04-09T22:43:04Z",
        "closed_at": "2018-04-10T03:59:14Z",
        "merged_at": "2018-04-10T03:59:14Z",
        "body": "## What is this Python project?\r\n\r\nCleansing, pre-processing, feature engineering, exploratory data analysis and easy ML with PySpark backend. \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt implements several handy tools for data wrangling and munging that will make your life much easier. The first obvious advantage over any other public data cleaning library or framework is that it will work on your laptop or your big cluster, and second, it is amazingly easy to install, use and understand.\r\n\r\n## Webpage\r\n\r\nhttps://hioptimus.com\r\n\r\n## Docs\r\n\r\nhttps://docs.hioptimus.com\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-04-09T12:58:04Z",
        "closed_at": "2018-04-10T03:59:52Z",
        "merged_at": "2018-04-10T03:59:52Z",
        "body": "## What is this Python project?\r\n\r\nPyTorch-NLP is a toolkit for NLP research built on PyTorch, an up and coming deep learning library. It is also trending on https://github.com/trending/python! \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n### [torchtext](https://github.com/pytorch/text)\r\n\r\ntorchtext and PyTorch-NLP differ in the architecture and feature set; otherwise, they are similar. torchtext and PyTorch-NLP provide pre-trained word vectors, datasets, iterators and text encoders. PyTorch-NLP also provides neural network modules and metrics. From an architecture standpoint, torchtext is object orientated with external coupling while PyTorch-NLP is object orientated with low coupling.\r\n\r\n### [AllenNLP](https://github.com/pytorch/text)\r\n\r\nAllenNLP is designed to be a platform for research. PyTorch-NLP is designed to be a lightweight toolkit.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-04-09T12:24:49Z",
        "closed_at": "2019-01-09T06:42:37Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n[opencollect](https://github.com/JamesKBowler/opencollect), a fast, robust framework for collecting data from multiple sources and saving it locally to a MySQL database. Just write your client code and send the data over with an SQL statement.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIs there one? If so, please let me know!\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-04-08T00:59:11Z",
        "closed_at": "2019-11-06T11:36:57Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nIt's a command-line tool to lock, upgrade and verify requirements files. It's built on top of pip-tools and enhances it.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt's similar to pip-tools, but automates multiple common tasks, like running for multiple files, using compatible releases and such.\r\nPipEnv is another similar tool that is built on top of pip-tools, but that one introduces new format and doesn't support Python < 3.6 and more than two environments.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-04-07T17:01:15Z",
        "closed_at": "2019-11-29T11:24:52Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nPoetry helps you declare, manage and install dependencies of Python projects, ensuring you have the right stack everywhere.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\npoetry is a tool to handle dependencies installation, building and packaging of Python packages. It only needs one file to do all of that: the new, standardized `pyproject.toml`.\r\n\r\nHere are some of the features that make it stand out:\r\n\r\n* Exhaustive dependency resolver\r\n* Intuitive CLI (See https://poetry.eustace.io/docs/cli/)\r\n* Emphasis on semantic versioning and constraint specification so that wildcard dependencies (`*`) will be considered bad practice\r\n* Support for dependencies caret, tilde, wildcard, inequality and multiple requirements.\r\n* Only one file: the standardised pyproject.toml which aims at being readable and clear.\r\n* Mandatory compatible python versions specification.\r\n\r\nFor more information: https://github.com/sdispater/poetry or http://poetry.eustace.io\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-04-07T12:58:19Z",
        "closed_at": "2019-11-06T11:36:54Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n[lupin](https://github.com/holinnn/lupin) helps in serializing python objects (user classes) to native Python types (dict, list, etc.) and loading data to python complex objects.\r\n\r\nIt can also be used to validate incoming data.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nYou can use your existing models (and don't need to modify them) in order to make them work with lupin.\r\nYou just have to define a schema and bind it to your class in order to make it work.\r\n\r\nIt handles polymorphic lists and associations.\r\nFor example if in one list there are a `User` and an `Admin` object, then it will be able to load and dump those objects to native python datatypes or load the list with one instance of the `User` class and the other one with the `Admin` class.\r\n\r\nComplex validators combinations can be made in order to make the data validation process easier \r\nFor example if a field is defined with this validators combination : `Equal(\"Lupin\") | Equal(\"Andr\u00e9sy\")` then the validation stage will only pass if the data is `Andr\u00e9sy` or `Lupin`.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-04-05T14:36:31Z",
        "closed_at": "2018-04-05T17:49:57Z",
        "merged_at": "2018-04-05T17:49:57Z",
        "body": "## What is this Python project?\r\n\r\n[awesome-jupyter](https://github.com/markusschanta/awesome-jupyter) is a curated list of awesome Jupyter projects, libraries and resources. It currently has 55 stars, 43 commits and 73 items on the list. I added it to the category description for \"Interactive Interpreter\" as is the case for other awesome lists that are dedicated to a particular category.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis is the most comprehensive one in terms of stars/commits and arguably most complete/highest quality (caveat: I'm the author, I'm naturally biased).\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-04-02T00:05:59Z",
        "closed_at": "2019-11-06T11:36:55Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n[Patchify](https://github.com/Kytyzoff/Patchify) converts your image into a patch collage\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere is no project like this\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-04-01T12:09:41Z",
        "closed_at": "2019-11-06T17:36:40Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n[ToPy](https://github.com/williamhunter/topy) is a tool for topology optimization\r\n[vkapi](https://github.com/isosnovik/vkapi) is an ultimate sdk for [vk.com](https://vk.com) API\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere is no projects like this listed in *awesome python*\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 14,
        "changed_files": 1,
        "created_at": "2018-03-26T13:21:32Z",
        "closed_at": "2018-03-26T16:42:56Z",
        "merged_at": "2018-03-26T16:42:56Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-03-22T16:57:33Z",
        "closed_at": "2019-11-06T11:36:56Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-03-19T23:41:53Z",
        "closed_at": "2019-11-06T11:36:50Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n[packerlicious](https://github.com/mayn/packerlicious) is a python library to create [packer](https://github.com/hashicorp/packer) templates in python.\r\n\r\nexample usage:\r\n```\r\nfrom packerlicious import builder, provisioner, Template\r\n\r\ntemplate = Template()\r\ntemplate.add_builder(\r\n    builder.AmazonEbs(\r\n        access_key=\"...\",\r\n        secret_key=\"...\",\r\n        region=\"us-east-1\",\r\n        source_ami=\"ami-fce3c696\",\r\n        instance_type=\"t2.micro\",\r\n        ssh_username=\"ubuntu\",\r\n        ami_name=\"packer {{timestamp}}\"\r\n    )\r\n)\r\n\r\ntemplate.add_provisioner(\r\n    provisioner.Shell(\r\n        script=\"setup_things.sh\"\r\n    )\r\n)\r\n\r\nprint(template.to_json())\r\n```\r\n\r\nresulting packer template:\r\n```\r\n    {\r\n      \"builders\": [\r\n        {\r\n          \"access_key\": \"...\",\r\n          \"ami_name\": \"packer {{timestamp}}\",\r\n          \"instance_type\": \"t2.micro\",\r\n          \"region\": \"us-east-1\",\r\n          \"secret_key\": \"...\",\r\n          \"source_ami\": \"ami-fce3c696\",\r\n          \"ssh_username\": \"ubuntu\",\r\n          \"type\": \"amazon-ebs\"\r\n        }\r\n      ],\r\n      \"provisioners\": [\r\n        {\r\n          \"script\": \"setup_things.sh\",\r\n          \"type\": \"shell\"\r\n        }\r\n      ]\r\n    }\r\n```\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- only one that supports expressing packer templates in python\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-03-18T17:14:56Z",
        "closed_at": "2018-03-19T03:29:50Z",
        "merged_at": "2018-03-19T03:29:50Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-03-16T19:03:22Z",
        "closed_at": "2018-03-17T08:51:50Z",
        "merged_at": "2018-03-17T08:51:50Z",
        "body": "Added Scoop to algorithms section\r\n\r\n## What is this Python project?\r\n\r\nSCOOP features and advantages over futures, multiprocessing and similar modules are as follows:\r\n\r\nHarness the power of multiple computers over network;\r\nAbility to spawn multiple tasks inside a task;\r\nAPI compatible with PEP-3148;\r\nParallelizing serial code with only minor modifications;\r\nEfficient load-balancing.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\nThe common applications of SCOOP consist but is not limited to:\r\n\r\nEvolutionary Algorithms\r\nMonte Carlo simulations\r\nData mining\r\nData processing\r\nGraph traversal\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-03-09T17:20:18Z",
        "closed_at": "2019-11-06T17:36:39Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n[django-admin-interface](https://github.com/fabiocaccamo/django-admin-interface) is a customizable responsive admin interface, based on a modern flat theme, it lets you customize the admin title, logo and colors by the admin itself. Popup windows replaced by modals.\r\n\r\n![django-admin-interface-preview](https://user-images.githubusercontent.com/1035294/35631521-64b0cab8-06a4-11e8-8f57-c04fdfbb7e8b.gif)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt improves the default admin interface without replacing it.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-03-08T04:18:46Z",
        "closed_at": "2018-07-05T06:39:49Z",
        "merged_at": "2018-07-05T06:39:49Z",
        "body": "## What is this Python project?\r\n\r\nIceCream is a small Python library that makes it easy to debug variables,\r\nexpressions, and code execution with a single, simple function: `ic()`. (short\r\nfor IceCream)\r\n\r\nWith arguments, `ic()` inspects itself and prints both its own arguments and\r\nthose argument's values.\r\n\r\n```python\r\nfrom icecream import ic\r\n\r\ndef foo(i):\r\n    return i + 333\r\n\r\nic(foo(123))\r\n```\r\n\r\nPrints\r\n\r\n```\r\nic| foo(123): 456\r\n```\r\n\r\nWithout arguments, `ic()` inspects itself and prints the calling filename and\r\nline number.\r\n\r\n```python\r\nfrom icecream import ic\r\n\r\ndef foo():\r\n    ic()\r\n    return 'bar'\r\n\r\nfoo()\r\n```\r\n\r\nPrints\r\n\r\n```\r\nic| example.py:4 in foo()\r\n```\r\n\r\nSee more IceCream magic and examples in IceCream's docs, [here](https://github.com/gruns/icecream).\r\n\r\nIceCream is well tested, permissively licensed, and supports Python 2, Python 3,\r\nPyPy2, and PyPy3.\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIceCream's closest cousin is q (https://github.com/zestyping/q), but IceCream is\r\nsimpler, customizable, and actively maintained.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to\r\nit, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-03-07T23:03:55Z",
        "closed_at": "2019-11-06T11:36:52Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-03-02T17:39:48Z",
        "closed_at": "2018-03-02T18:54:26Z",
        "merged_at": "2018-03-02T18:54:26Z",
        "body": "## What is this Python project?\r\n\r\nPyflame allows you to profile an existing Python process. The output is an interactive \"flame graph\":\r\n\r\n![image](https://user-images.githubusercontent.com/167319/36851828-241b7884-1d62-11e8-990a-7e85e304ce4d.png)\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nYou don't need to make any changes to your code. And you don't need to run the command under investigation yourself. So services which are managed by init.d or systemd are able to be profiled. This includes processes with embedded Python interpreters, like your uWSGI and mod_wsgi. And because the overhead is low enough that you can use it to profile live processes in production\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-02-26T02:31:06Z",
        "closed_at": "2018-07-11T21:45:53Z",
        "merged_at": null,
        "body": "Added [Using Python](http://usingpython.com) to list under Websites section. Using Python is a website with plentiful resources and examples of code including cool projects to do in GitHub, among others.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-02-24T03:27:22Z",
        "closed_at": "2019-05-25T09:42:43Z",
        "merged_at": "2019-05-25T09:42:43Z",
        "body": "## What is this Python project?\r\n\r\nMasonite is a web framework that is extremely simple and changes what it means for a batteries included Python framework. Intuitive and elegant from installation to deployment.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n1. Uses design patterns to make the framework extremely extendable and easy to maintain\r\n2. Extremely powerful built in IOC container with auto resolving dependency injection\r\n3. Lots of out of the box support and features that other Python frameworks don't have.\r\n4. Intuitive API and elegant code makes your application actually readable months or years later.\r\n5. Very extensive documentation\r\n6. A very powerful command line tool called craft commands\r\n7. Active Record style ORM instead of the clunky Data Mapper that other Python frameworks use\r\n8. Complete separation between models and migrations removing a lot of the magic and finger crossing of migrations\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-02-22T19:51:12Z",
        "closed_at": "2019-11-06T11:36:53Z",
        "merged_at": null,
        "body": "https://hackr.io/tutorials/learn-python\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-02-15T03:11:22Z",
        "closed_at": "2018-02-15T05:03:02Z",
        "merged_at": "2018-02-15T05:03:02Z",
        "body": "## What is this Python project?\r\n\r\npython-pptx is a Python library for creating and updating PowerPoint (.pptx) files.\r\n\r\nA typical use would be generating a customized PowerPoint presentation from database content, downloadable by clicking a link in a web application. Several developers have used it to automate production of presentation-ready engineering status reports based on information held in their work management system.\r\n\r\nDocumentation: https://python-pptx.readthedocs.org/en/latest/\r\n\r\n> Note: Found this when making my downloads folder organizer\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nNone of the others are for Powerpoint files (.pptx) Haven't seen anything similar and this was quite hard to find the first time around.\r\n\r\n--\r\n\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-02-14T10:48:28Z",
        "closed_at": "2019-11-06T11:36:51Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nTrafaret is a validation + conversion library. The main distinct feature of Trafaret is composability.\r\nFrom base Trafaret transformers and simple functions you can construct transformer of any complexity. And dict validation is not corner stone of this library.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere is no actually similar projects or I don't know about. Trafaret is simple and yet powerful, because of monads inside, sorry. It does not count dict as a only thing that is need care about, offer strong API first and some sugar on top of strong foundation.\r\n\r\nTo combine two trafarets you just do `trafaret1 & trafaret2`, or even `trafaret1 | trafaret2`. And any single argument function can be treated as trafaret if it raises trafaret.DataError or return value.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-02-12T09:51:12Z",
        "closed_at": "2019-11-29T22:56:04Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nParris is an automated infrastructure setup utility for training machine learning algorithms. With minimal boilerplate, an ML engineer/data scientist can launch a neural network training session on an AWS server stack via CloudFormation, with a single script invocation.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis utility is unique against other libraries in that the list does not include any open source tools specifically tailored toward machine learning practitioners for automating the server setup process and the execution of training jobs. The closest project in the list is SaltStack, which is an infrastructure automation and management system rather than an ML training job automation utility.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-02-10T09:06:55Z",
        "closed_at": "2018-07-11T12:41:54Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nauthenticatorpy is a Python library that provide unique keys for 2FA with given secret. It works with Python versions from 2.7+ and Python 3.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nNo dependency and this is standalone library which developers can use to generate tokens.\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-02-07T00:18:42Z",
        "closed_at": "2019-11-06T11:36:48Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nAnti-spam tools for django apps. Includes honey pot, reCAPTCHA and Akismet.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n * includes several methods of spam protection\r\n * highly customizable\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-02-06T21:22:22Z",
        "closed_at": "2019-11-06T11:36:47Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\ndjango-carrot: The lightweight task queue for Django\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n- Minimal configuration required\r\n- Task scheduling\r\n- Task prioritization\r\n- Detailed task level monitoring/logging via django-carrot monitor\r\n- Built in daemon\r\n- Supports Django 2.0\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-02-05T18:36:24Z",
        "closed_at": "2018-02-06T15:48:18Z",
        "merged_at": "2018-02-06T15:48:18Z",
        "body": "Fixed typo complier -> compiler",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-01-30T04:29:28Z",
        "closed_at": "2019-04-18T17:19:36Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nhttps://github.com/laike9m/pdir2\r\n\r\nPython library to make builtin function `dir()` more pretty and informative.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nDifference between builtins `dir()`:\r\n\r\n1. pretty\r\n2. informative\r\n3. structured \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-01-23T10:09:32Z",
        "closed_at": "2018-01-23T16:15:04Z",
        "merged_at": "2018-01-23T16:15:04Z",
        "body": "add toapi project like web content extracting tool\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-01-22T17:45:07Z",
        "closed_at": "2019-11-06T11:36:49Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nThree different projects: URL manipulation (2) and metadata extraction (1).\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- htmldate: better overall recall by extraction, metadata extraction and optional text scraping features\r\n- netaddr: specific handling of network addresses (IPv4 and IPv6)\r\n- tldextract: very good coverage of top-level domains, reference can be updated separately\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-01-20T09:49:01Z",
        "closed_at": "2019-11-06T11:36:46Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 23,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-01-19T10:06:10Z",
        "closed_at": "2019-11-06T11:36:44Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nIt is so awesome.\r\n+ Intelligent Algorithm\r\n+ Logic Programming\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nShow some unwell-known but excellent packages, esp. deap and PyKE.\r\nWhat a pity for the lack of a framework of GA.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-01-19T09:37:35Z",
        "closed_at": "2018-01-19T17:14:01Z",
        "merged_at": "2018-01-19T17:14:01Z",
        "body": "## What is this Python project?\r\n\r\nIt generates static type annotations by collecting runtime types. After collection is done it can insert generated stubs into your code.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- compared to [pyannotate](https://github.com/dropbox/pyannotate) it has Python3 support;\r\n- compared to [pyannotate](https://github.com/dropbox/pyannotate) it does not need [special pytest plugin](https://github.com/kensho-technologies/pytest-annotate): ```monkeytype run `which pytest` ``` is enough;\r\n- pyannotate is the Dropbox project, MonkeyType is the Instagram project;\r\n- it stores analysis results in sqlite format.\r\n\r\nPS. Neither `pyannotate` nor `pytest-annotate` is in this list, but I follow the contribution rule `1pr == 1 link`.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-01-10T23:29:05Z",
        "closed_at": "2019-11-06T11:36:43Z",
        "merged_at": null,
        "body": "<img src=\"https://cosmic-cortex.github.io/modAL/img/modAL_b.png\" alt=\"modAL\" style=\"width: 400px;\">\r\nModular Active Learning framework for Python3  \r\n\r\n[![travis-ci-master](https://travis-ci.org/cosmic-cortex/modAL.svg?branch=master)](https://travis-ci.org/cosmic-cortex/modAL) [![codecov-master](https://codecov.io/gh/cosmic-cortex/modAL/branch/master/graph/badge.svg)](https://codecov.io/gh/cosmic-cortex/modAL)\r\n\r\n# Overview\r\n- [Introduction](#introduction)  \r\n- [Active learning from bird's-eye view](#active-learning)  \r\n- [modAL in action](#modAL-in-action)\r\n  - [From zero to one in a few lines of code](#initialization)  \r\n  - [Replacing parts quickly](#replacing-parts)  \r\n  - [Replacing parts with your own solutions](#replacing-parts-with-your-own-solutions)  \r\n  - [An example with active regression](#active-regression)\r\n  - [Additional examples](#working-examples)  \r\n- [Installation](#installation)  \r\n- [About the developer](#about-the-developer)\r\n\r\n# Introduction<a name=\"introduction\"></a>\r\n\r\n> modal: adjective, relating to structure as opposed to substance  \r\n>  \r\n> (Merriam-Webster Dictionary)\r\n\r\nmodAL is an active learning framework for Python3, designed with *modularity, flexibility* and *extensibility* in mind. Built on top of scikit-learn, it allows you to rapidly create active learning workflows with nearly complete freedom. What is more, you can easily replace parts with your custom built solutions, allowing you to design novel algorithms with ease. modAL is aimed for practicioners and researchers as well, to make the assembly and testing of active learning pipelines quick and easy.\r\n\r\n## Active learning from bird's-eye view<a name=\"active-learning\"></a>\r\nWith the recent explosion of available data, you have can have millions of unlabelled examples with a high cost to obtain labels. For instance, when trying to predict the sentiment of tweets, obtaining a training set can require immense manual labour. But worry not, active learning comes to the rescue! In general, AL is a framework allowing you to increase classification performance by intelligently querying you to label the most informative instances. In general, an active learning workflow looks like the following.\r\n\r\n![active-learning](https://cosmic-cortex.github.io/modAL/img/active_learning.png)\r\n\r\nThe key components of any workflow are the **model** you choose, the **uncertainty** measure you use and the **query** strategy you apply to request labels. With modAL, instead of choosing from a small set of built-in components, you have the freedom to seamlessly integrate scikit-learn or Keras models into your algorithm and easily tailor your custom query strategies and uncertainty measures.\r\n\r\n# modAL in action<a name=\"modAL-in-action\"></a>\r\nLet's see what modAL can do for you!\r\n\r\n## From zero to one in a few lines of code<a name=\"initialization\"></a>\r\nActive learning with a scikit-learn classifier, for instance RandomForestClassifier, can be as simple as the following.\r\n```python\r\nfrom modAL.models import ActiveLearner\r\nfrom sklearn.ensemble import RandomForestClassifier\r\n\r\n# initializing the learner\r\nlearner = ActiveLearner(\r\n    predictor=RandomForestClassifier(),\r\n    X_initial=X_train, y_initial=y_train\r\n)\r\n\r\n# query for labels\r\nquery_idx, query_inst = learner.query(X_pool)\r\n\r\n# ...obtaining new labels from the Oracle...\r\n\r\n# supply label for queried instance\r\nlearner.teach(X_pool[query_idx], y_new)\r\n```\r\n\r\n## Replacing parts quickly<a name=\"replacing-parts\"></a>\r\nIf you would like to use different uncertainty measures and query strategies than the default uncertainty sampling, you can either replace them with several built-in strategies or you can design your own by following a few very simple design principles. For instance, replacing the default uncertainty measure to classification entropy looks the following.\r\n```python\r\nfrom modAL.models import ActiveLearner\r\nfrom modAL.uncertainty import entropy_sampling\r\nfrom sklearn.ensemble import RandomForestClassifier\r\n\r\nlearner = ActiveLearner(\r\n    predictor=RandomForestClassifier(),\r\n    query_strategy=entropy_sampling,\r\n    X_initial=X_train, y_initial=y_train\r\n)\r\n```\r\n\r\n## Replacing parts with your own solutions<a name=\"replacing-parts-with-your-own-solutions\"></a>\r\nmodAL was designed to make it easy for you to implement your own query strategy. For example, implementing and using a simple random sampling strategy is as easy as the following.\r\n```python\r\nimport numpy as np\r\n\r\ndef random_sampling(classifier, X_pool):\r\n    n_samples = len(X_pool)\r\n    query_idx = np.random.choice(range(n_samples))\r\n    return query_idx, X_pool[query_idx]\r\n\r\nlearner = ActiveLearner(\r\n    predictor=RandomForestClassifier(),\r\n    query_strategy=random_sampling,\r\n    X_initial=X_train, y_initial=y_train\r\n)\r\n```\r\n\r\n## An example with active regression<a name=\"active-regression\"></a>\r\nTo see modAL in *real* action, let's consider an active regression problem with Gaussian Processes! In this example, we shall try to learn the *noisy sine* function:\r\n```python\r\nimport numpy as np\r\n\r\nX = np.random.choice(np.linspace(0, 20, 10000), size=200, replace=False).reshape(-1, 1)\r\ny = np.sin(X) + np.random.normal(scale=0.3, size=X.shape)\r\n```\r\nFor active learning, we shall define a custom query strategy tailored to Gaussian processes. In a nutshell, a *query stategy* in modAL is a function taking (at least) two arguments (an estimator object and a pool of examples), outputting the index of the queried instance and the instance itself. In our case, the arguments are ```regressor``` and ```X```.\r\n```python\r\ndef GP_regression_std(regressor, X):\r\n    _, std = regressor.predict(X, return_std=True)\r\n    query_idx = np.argmax(std)\r\n    return query_idx, X[query_idx]\r\n```\r\nAfter setting up the query strategy and the data, the active learner can be initialized.\r\n```python\r\nfrom modAL.models import ActiveLearner\r\nfrom sklearn.gaussian_process import GaussianProcessRegressor\r\nfrom sklearn.gaussian_process.kernels import WhiteKernel, RBF\r\n\r\nn_initial = 5\r\ninitial_idx = np.random.choice(range(len(X)), size=n_initial, replace=False)\r\nX_initial, y_initial = X[initial_idx], y[initial_idx]\r\n\r\nkernel = RBF(length_scale=1.0, length_scale_bounds=(1e-2, 1e3)) \\\r\n         + WhiteKernel(noise_level=1, noise_level_bounds=(1e-10, 1e+1))\r\n\r\nregressor = ActiveLearner(\r\n    predictor=GaussianProcessRegressor(kernel=kernel),\r\n    query_strategy=GP_regression_std,\r\n    X_initial=X_initial.reshape(-1, 1), y_initial=y_initial.reshape(-1, 1)\r\n)\r\n```\r\nThe initial regressor is not very accurate.\r\n\r\n![gp-initial](https://cosmic-cortex.github.io/modAL/img/gp-initial.png)\r\n\r\nThe blue band enveloping the regressor represents the standard deviation of the Gaussian process at the given point. Now we are ready to do active learning!\r\n```python\r\n# active learning\r\nn_queries = 10\r\nfor idx in range(n_queries):\r\n    query_idx, query_instance = regressor.query(X)\r\n    regressor.teach(X[query_idx].reshape(1, -1), y[query_idx].reshape(1, -1))\r\n```\r\nAfter a few queries, we can see that the prediction is much improved.\r\n\r\n![gp-final](https://cosmic-cortex.github.io/modAL/img/gp-final.png)\r\n\r\n## Additional examples<a name=\"additional-examples\"></a>\r\nIncluding this, many examples are available:    \r\n- [Pool-based sampling](https://cosmic-cortex.github.io/modAL/Pool-based-sampling)  \r\n- [Stream-based sampling](https://cosmic-cortex.github.io/modAL/Stream-based-sampling)  \r\n- [Active regression](https://cosmic-cortex.github.io/modAL/Active-regression)  \r\n- [Ensemble regression](https://cosmic-cortex.github.io/modAL/Ensemble-regression)  \r\n- [Query by committee](https://cosmic-cortex.github.io/modAL/Query-by-committee)  \r\n- [Bootstrapping and bagging](https://cosmic-cortex.github.io/modAL/Bootstrapping-and-bagging)  \r\n- [Keras integration](https://cosmic-cortex.github.io/modAL/Keras-integration)\r\n\r\n# Installation<a name=\"installation\"></a>\r\nmodAL requires\r\n- Python >= 3.5\r\n- NumPy >= 1.13\r\n- SciPy >= 0.18\r\n- scikit-learn >= 0.18\r\n\r\nYou can install modAL directly with pip:  \r\n```\r\npip install modAL\r\n```\r\nAlternatively, you can install modAL directly from source:  \r\n```\r\npip install git+https://github.com/cosmic-cortex/modAL.git\r\n```\r\nFor running the examples, Matplotlib >= 2.0 is recommended.\r\n\r\n\r\n# About the developer<a name=\"about-the-developer\">\r\nmodAL is developed by me, [Tivadar Danka](https://www.tivadardanka.com) (aka [cosmic-cortex](https://github.com/cosmic-cortex) in GitHub). I have a PhD in pure mathematics, but I fell in love with biology and machine learning right after I finished my PhD. I have changed fields and now I work in the [Bioimage Analysis and Machine Learning Group of Peter Horvath](http://group.szbk.u-szeged.hu/sysbiol/horvath-peter-lab-index.html), where I am working to develop active learning strategies for intelligent sample analysis in biology. During my work I realized that in Python, creating and prototyping active learning workflows can be made really easy and fast with scikit-learn, so I ended up developing a general framework for this. The result is modAL :) If you have any questions, requests or suggestions, you can contact me at <a href=\"mailto:85a5187a@opayq.com\">85a5187a@opayq.com</a>! I hope you'll find modAL useful!\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-01-10T17:03:42Z",
        "closed_at": "2018-01-17T11:48:31Z",
        "merged_at": "2018-01-17T11:48:31Z",
        "body": "Added [awesomo](https://github.com/lk-geimfari/awesomo) to the section of the list of lists.\r\n\r\n<p align=\"center\"><img src=\"https://raw.githubusercontent.com/lk-geimfari/awesomeo/master/artwork/a.w.e.s.o.m.e_o.png\"></p>\r\n\r\n<p align=\"center\">\r\n  <b>A.W.E.S.O.M. O</b> is an extensive list of interesting open source projects written in various languages (including the great list of active and most popular Python projects.).\r\n</p>\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach 20.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-01-10T11:12:44Z",
        "closed_at": "2018-01-17T11:49:52Z",
        "merged_at": "2018-01-17T11:49:52Z",
        "body": "## What is this Python project?\r\n\r\nEel is small lightweight library, which wraps your web-based application to run as desktop application.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThe closest Python equivalent to Electron is [cefpython](https://github.com/cztomczak/cefpython#install). It is a bit heavy weight, and not simple to install.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-01-09T21:08:21Z",
        "closed_at": "2019-11-06T11:36:45Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nRobot-blocks is a module that allows for rapid creation of code for Raspberry Pi based robots\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- allows rapid development with minimal writing of code\r\n- provides hooks/callbacks to quickly expand functionality\r\n- comprehensive library of classes for handing interactions with common robot components (motors, servos, ultrasounds, etc.)\r\n- provides built-in support for multiple control methods (e.g. autonomous obstacle avoidance, remote control, etc.)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-01-07T14:23:24Z",
        "closed_at": "2018-01-07T15:44:45Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nA new python web framework project, designed for Python 3.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* API documentation - Interactive API documentation, that's guaranteed to always be in sync with your codebase.\r\n* Client libraries - JavaScript and Python client libraries, driven by the typesystems that API Star generates.\r\n* Schema generation - Support for generating Swagger or RAML API typesystems.\r\n* Expressive - Type annotated views, that make for expressive, testable code.\r\n* Performance - Dynamic behaviour for determining how to run each view makes API Star incredibly efficient.\r\n* Throughput - Support for asyncio to allow for building high-throughput non-blocking applications.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-01-07T05:04:12Z",
        "closed_at": "2019-11-06T11:36:40Z",
        "merged_at": null,
        "body": "Historio is a simple versioning service based on gRPC and MongoDB\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-01-04T15:32:01Z",
        "closed_at": "2019-11-06T17:36:37Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nOSMNames is geocoding tool with rank based on related Wikipedia article popularity\r\n\r\nOpenMapTiles are set of tools for self-hosting OSM maps\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nOSMNames - can be self-hosted and run off-line, rank is based on related Wikipedia article popularity\r\n\r\nOpenMapTiles - provides raster as well as vector tiles, map service (WMTS, WMS), can be self-hosted and run off-line\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-01-03T21:07:01Z",
        "closed_at": "2019-11-06T11:36:42Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nPython library to interact with 28K public DNS servers around the world\r\n\r\npubdns is a library for python to have more than 28K public dns servers from 190+ countries at your python script. it works based on the public-dns.info collected data and there is a wrapper based on the dnspython to resolve all type of dns records through these public dns server smoothly.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nI haven't seen similar one in python language if exist!\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-01-03T17:49:34Z",
        "closed_at": "2019-11-06T11:36:41Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nA client library for the IMAP protocol.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Has been around for about 10 years and is still maintained and being modernized\r\n- More Pythonic than `imaplib` provided in the standard library\r\n- Seems to support more extension RFCs than `imbox`\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-01-02T08:24:25Z",
        "closed_at": "2018-01-02T14:19:01Z",
        "merged_at": "2018-01-02T14:19:01Z",
        "body": "Remove trailing whitespace from one of the list entries.\r\n\r\nThis was one of the points in contribution guidelines, so I am adding this change.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-01-02T08:14:02Z",
        "closed_at": "2019-11-06T11:36:39Z",
        "merged_at": null,
        "body": "* This plugin allows users to write vim plugins in Python,\r\n  by giving us a wrapper around Vim's `vim` Python module.\r\n\r\n## What is this Python project?\r\nSnake is a Python module for Vim that let's you use Python to its fullest extent to enhance Vim.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nThere are no similar libraries available.\r\n\r\n--\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-01-02T07:23:57Z",
        "closed_at": "2019-11-06T17:36:36Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nThis quickstart project, built with Python makes use of Metabase library to visualize the datasets from Quandl.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nQuandl offers a set of tools to visualize their datasets (https://www.quandl.com/tools/full-list). [Metabase](https://github.com/metabase/metabase) is open-source, fast, and makes it so easy to share data and analytics. This Hasura quickstart project [hasura/quandl-metabase](https://github.com/anirudhmurali/Quandl-Metabase) makes use of Metabase to visualize quandl's datasets.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-01-01T14:23:31Z",
        "closed_at": "2019-11-06T11:36:37Z",
        "merged_at": null,
        "body": "* 'deco' library makes parallelizing easy by giving us decorators\r\n  which encapsulates multiprocessing standard library.\r\n\r\n## What is this Python project?\r\nA simplified parallel computing model for Python. DECO automatically parallelizes Python programs, and requires minimal modifications to existing serial programs.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nIt is similar to Tomorrow, but has the following differences.\r\n\r\n1. `Deco` supports Python3, whereas `Tomorrow` supports only up till Python 2.7\r\n2. `Deco` by default uses the Python's **multiprocessing** library, whereas `Tomorrow` uses **threads**\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-12-31T02:20:58Z",
        "closed_at": "2018-01-01T10:14:37Z",
        "merged_at": "2018-01-01T10:14:37Z",
        "body": "Maya: Datetimes for Humans\u2122\r\nhttps://travis-ci.org/kennethreitz/maya.svg?branch=master \r\nDatetimes are very frustrating to work with in Python, especially when dealing with different locales on different systems. This library exists to make the simple things much easier, while admitting that time is an illusion (timezones doubly so).\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-12-29T11:30:19Z",
        "closed_at": "2019-11-06T11:36:38Z",
        "merged_at": null,
        "body": "Replace with link to video showing why many patterns are unnecessary.\r\n\r\nIn my opinion, the linked repos (python-patterns and PyPatterns) are really unhelpful ways of thinking about patterns in Python - they are anti-patterns in Python, and not something that should be promoted.\r\n\r\nBasically, most of the patterns popular in Java world are \"invisible or simpler\" in dynamic languages like Python (according to Peter Norvig - http://www.norvig.com/design-patterns/ ). This is due to:\r\n\r\n* the pattern being built in (e.g. iterator)\r\n* various language features, especially:\r\n  * first class functions (command, strategy,\r\ntemplate-method, visitor)\r\n  * first class types (factory, abstract factory, flyweight, factory method, state, proxy, chain-of-responsibility)\r\n\r\nOf the two links, PyPatterns is the worst, and actually encourages importing a library to get functionality that only increases the amount of code you have to write. I see that it was added because someone wanted something they could actually `import`. However, this comes from people thinking in Java - but [Python is not Java without the compile](https://bitworking.org/news/2006/08/Python_isnt_Java_without_the_compile). There is negative value in using this kind of repo - Python makes the pattern invisible or simpler, by adding an import and base classes you have only made life hard for yourself. \r\n\r\nFor example, Factory and Abstract Factory pattern:\r\n\r\nhttps://github.com/tylerlaberge/PyPattyrn#factory-pattern\r\nhttps://github.com/faif/python-patterns/blob/master/creational/abstract_factory.py\r\n\r\nOnce you understand that Python has first class types, these become totally pointless.\r\n\r\nHere is a class in Python:\r\n\r\n    class A:\r\n        pass\r\n\r\nAnd here is a factory for it:\r\n\r\n    A\r\n\r\n(`A` is it's own factory - when you call it, it produces an object of type A. There is no `new` keyword in Python.)\r\n\r\nAnd here is a factory that you can assign to a variable, or pass as an argument to a function/method:\r\n\r\n    A\r\n\r\n(First class types.)\r\n\r\nAnd here is a factory if you wanted to create `A` in a non-default way:\r\n\r\n    lambda:  A(some_parameter=123)\r\n\r\nOr, in a builtin-standard-but-non-default way\r\n\r\n    class A:\r\n        def __init__(self, enabled=True)\r\n            self.enabled = enabled\r\n\r\n        @classmethod\r\n        def create_disabled(cls):\r\n            return cls(enabled=False)\r\n\r\n    # Factory callable you can pass around:\r\n    A.create_disabled\r\n\r\nThese are the idiomatic ways to do these things. If you are writing anything more than that, you are doing it wrong.\r\n\r\nEven when the pattern is bigger than invisible, its implementation is often massively simpler in Python. The linked repositories often use classes with no state and a single method. This is pointless - we should be deleting such classes and replacing them a single callable - see [Stop Writing Classes](http://pyvideo.org/pycon-us-2012/stop-writing-classes.html)\r\n\r\nPyPatterns even includes an implementation of iterator and iterable - when these are built in to Python!\r\n\r\nI was going to submit PRs to the linked repositories, but most of the PRs would involve deleting 90% of the code, which is unlikely to be accepted, I thought it better to submit this PR first.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-12-27T18:07:47Z",
        "closed_at": "2019-11-29T10:24:51Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nIt's a parser combinator library for creating text parsers and/or lexers.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt is similar to pyparsing in terms of approach (i.e. parser combinator), but benefits from:\r\n\r\n* Borrowing from the best of parser combinator libraries from other languages (like Parsec from Haskell) etc.\r\n* Much nicer, smaller and cleaner implementation.\r\n* A focus on generating nicely structured results i.e. your own custom data types, rather list-of-lists that then need further (often fragile) handling.\r\n* Excellent, up to date [documentation](http://parsy.readthedocs.io/en/latest/), including all the different types you want - tutorial, reference and examples - all in once place.\r\n* Modern best practices with everything you'd expect from a modern project on GitHub rather than SourceForge - 100% test coverage, Travis/Codecov/Read The Docs integration etc.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-12-27T14:04:48Z",
        "closed_at": "2019-11-06T17:36:35Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nThe libROSA library performs audio and music analysis such as feature extraction, beat detection, spectrogram analysis and so on.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- standardized interfaces\r\n- good backward compatibility\r\n- caching\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-12-25T17:30:11Z",
        "closed_at": "2019-11-06T11:36:36Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n- Fully compatible with the JS, Swift, C++ and Java official Socket.IO clients.\r\n- Both py2.7 and py3.3+\r\n- And [more...](https://github.com/miguelgrinberg/python-socketio#features)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt is focused on [socket.io](https://github.com/socketio/socket.io) approach.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-12-24T02:51:56Z",
        "closed_at": "2019-12-05T12:16:44Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n![](https://raw.githubusercontent.com/RDCH106/pycoinmon/master/logo.png)\r\nCheck cryptocurrencies' prices, changes on your console.\r\nBest CLI tool for those who are both **Crypto investors** and **Engineers**.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThe project aims to reproduce the behaviour of the original [COINMON](https://github.com/bichenkk/coinmon) project and improve it with more functionalities, all of them powered by Python program language. At this moment [pyCOINMON](https://github.com/RDCH106/pycoinmon) has 100% of the functionality of COINMON and it is ready to the upcoming new features.\r\n\r\n![pycoinmon screenshot](https://raw.githubusercontent.com/RDCH106/pycoinmon/master/pycoinmon.png)\r\n\r\nPyCOINMON is not only a port to Python, it tries to implement good architecture following software engineering and pythonic trends, including also **C**ontinuous **I**ntegration.\r\n\r\n[![PyPI](https://img.shields.io/pypi/v/pycoinmon.svg)](https://pypi.python.org/pypi/pycoinmon)\r\n[![PyPI](https://img.shields.io/pypi/pyversions/pycoinmon.svg)](https://pypi.python.org/pypi/pycoinmon)\r\n[![PyPI](https://img.shields.io/pypi/l/pycoinmon.svg)](https://github.com/RDCH106/pycoinmon/blob/master/LICENSE)\r\n[![Build Status](https://travis-ci.org/RDCH106/pycoinmon.svg?branch=master)](https://travis-ci.org/RDCH106/pycoinmon)\r\n[![Codacy Badge](https://api.codacy.com/project/badge/Grade/30fca0e3463649f88584cd89c118eac2)](https://www.codacy.com/app/RDCH106/pycoinmon?utm_source=github.com&utm_medium=referral&utm_content=RDCH106/pycoinmon&utm_campaign=badger)\r\n\r\nAnother interesting feature is the possibility to generate binaries using tools like pyInstaller to produce standalone tool.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-12-23T11:26:58Z",
        "closed_at": "2019-11-06T11:36:34Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nTweepy is a python wrapper for Twitter API.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nTweepy seems to be more popular than twython, as measured by both number of stars in GitHub and number of questions in Stackoverflow.\r\n\r\n---\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-12-18T03:59:43Z",
        "closed_at": "2017-12-18T06:34:56Z",
        "merged_at": "2017-12-18T06:34:56Z",
        "body": "Not adding anything - just fixing an existing entry @vinta \r\n\r\nIt makes more sense to include the Python client to Sentry, `raven`, than include the server software itself. I've made the appropriate change to the link and also updated the description as per https://github.com/getsentry/sentry and https://sentry.io/welcome.\r\n\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-12-13T22:51:19Z",
        "closed_at": "2019-11-06T11:36:33Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nA library that makes it easy to crawl for and scrape articles. \r\n\r\n## What's the difference between this Python project and similar ones?\r\n- It's extremely easy to use.\r\n- Multi-threaded article download framework\r\n- News url identification\r\n- Text extraction from html\r\n- Top image extraction from html\r\n- All image extraction from html\r\n- Keyword extraction from text\r\n- Summary extraction from text\r\n- Author extraction from text\r\n- Google trending terms extraction\r\n- Works in 10+ languages (English, Chinese, German, Arabic, ...)\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-12-13T22:43:55Z",
        "closed_at": "2019-11-06T11:36:35Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\nIt's a command-line tool, providing scaffolding, workflow automation and best practices for developing and deploying serverless architecture. It's also completely extensible via plugins.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Manages the lifecycle of your serverless architecture (build, deploy, update, delete).\r\n- Safely deploy functions, events and their required resources together via provider resource managers (e.g., AWS CloudFormation).\r\n- Functions can be grouped (\"serverless services\") for easy management of code, resources & processes, across large projects & teams.\r\n- Minimal configuration and scaffolding.\r\n- Built-in support for multiple stages.\r\n- Optimized for CI/CD workflows.\r\n- Loaded with automation, optimization and best practices.\r\n- 100% Extensible: Extend or modify the Framework and its operations via Plugins.\r\n- An ecosystem of serverless services and plugins.\r\n- A passionate and welcoming community!\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-12-11T16:10:10Z",
        "closed_at": "2017-12-11T17:17:19Z",
        "merged_at": "2017-12-11T17:17:19Z",
        "body": "Fixed link for pyparser\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-12-04T14:03:51Z",
        "closed_at": "2019-11-06T17:36:34Z",
        "merged_at": null,
        "body": "In Science section\r\n\r\n## What is this Python project?\r\n\r\nIt's a unified backtest and live trading platform\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n1. Write once and easy switch between backtest and live trading\r\n2. Share the same structure and performance measures across languages, making it easier to compare and communicate with traders speaking other languages such as R and Matlab.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-12-02T10:36:00Z",
        "closed_at": "2018-02-15T07:04:32Z",
        "merged_at": "2018-02-15T07:04:32Z",
        "body": "## What is this Python project?\r\n\r\n![Colour Logo](https://raw.githubusercontent.com/colour-science/colour-branding/master/images/Colour_Logo_Medium_001.png)\r\n\r\n[Colour](http://colour-science.org/) is a Python colour science package implementing a comprehensive number of colour theory transformations and algorithms.\r\n\r\nIt is used by Google, Merck Group and studios of the VFX and Games industries to perform colorimetric computations. It leverages [Numpy](http://www.numpy.org/) and [Scipy](https://www.scipy.org/) to offer vectorised computations.\r\n\r\n``` python\r\n>>> import colour\r\n>>> colour.uv_to_CCT_Ohno2013([0.1978, 0.3122])\r\narray([  6.50751282e+03,   3.22335875e-03])\r\n```\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n[Colour](http://colour-science.org/) is one of the most complete colour science package available across programming languages with a broad set of high quality figures.\r\n\r\n![image](https://user-images.githubusercontent.com/99779/33514445-f9c57178-d7b8-11e7-852b-7ab6dc249f6f.png)\r\n\r\n![image](https://user-images.githubusercontent.com/99779/33514448-047e1084-d7b9-11e7-92bd-e9aa5956ee73.png)\r\n\r\n![image](https://user-images.githubusercontent.com/99779/33514459-31b3993e-d7b9-11e7-8641-97757d7a04f1.png)\r\n\r\n![image](https://user-images.githubusercontent.com/99779/33514475-66df1868-d7b9-11e7-8ff3-4182d72fba84.png)\r\n\r\n### Features\r\n\r\n#### Algebra\r\n\r\n##### Kernel Interpolation\r\n\r\n##### Sprague Interpolation\r\n\r\n#### Biochemistry\r\n\r\n-   Michaelis\u2013Menten kinetics\r\n\r\n#### Colorimetry\r\n\r\n##### Spectral Computation\r\n\r\n-   Wavelength to XYZ\r\n-   Spectral to Tristimulus Values - ASTM E308\u201315\r\n-   Tristimulus Weighting Factors - ASTM E2022\u201311\r\n-   Interpolation - Linear, Cubic Spline, Pchip, Sprague (1880)\r\n-   Extrapolation\r\n\r\n##### Spectral Bandpass Correction\r\n\r\n-   Stearns and Stearns (1988)\r\n\r\n##### RGB and XYZ Colour Matching Functions Spectral Dataset\r\n\r\n-   CIE 1931 2\u00b0 Standard Observer XYZ colour matching functions\r\n-   CIE 1964 10\u00b0 Standard Observer XYZ colour matching functions\r\n-   CIE 2012 10\u00b0 Standard Observer XYZ colour matching functions\r\n-   CIE 2012 2\u00b0 Standard Observer XYZ colour matching functions\r\n-   Stiles & Burch 1955 2\u00b0 RGB CMFs RGB colour matching functions\r\n-   Stiles & Burch 1959 10\u00b0 RGB CMFs RGB colour matching functions\r\n-   Wright & Guild 1931 2\u00b0 RGB CMFs RGB colour matching functions\r\n\r\n##### Cone Fundamentals Spectral Dataset\r\n\r\n-   Stockman & Sharpe 2\u00b0 Cone Fundamentals\r\n-   Stockman & Sharpe 10\u00b0 Cone Fundamentals\r\n\r\n##### Photopic & Scotopic Luminous Efficiency Functions Spectral Dataset\r\n\r\n-   CIE 1924 Photopic Standard Observer\r\n-   Judd Modified CIE 1951 Photopic Standard Observer\r\n-   Judd-Vos Modified CIE 1978 Photopic Standard Observer\r\n-   CIE 1964 Photopic 10\u00b0 Standard Observer\r\n-   CIE 2008 2\u00b0 Physiologically Relevant LEF\r\n-   CIE 2008 10\u00b0 Physiologically Relevant LEF\r\n-   CIE 1951 Scotopic Standard Observer\r\n\r\n##### Colour Matching Functions Conversions for Educational Purpose\r\n\r\n-   Wright & Guild 1931 2\u00b0 RGB CMFs to CIE 1931 2\u00b0 Standard Observer\r\n-   Stiles & Burch 1959 10\u00b0 RGB CMFs to CIE 1964 10\u00b0 Standard Observer\r\n-   Stiles & Burch 1959 10\u00b0 RGB CMFs to Stockman & Sharpe 10\u00b0 Cone Fundamentals\r\n-   Stockman & Sharpe 2\u00b0 Cone Fundamentals to CIE 2012 2\u00b0 Standard Observer\r\n-   Stockman & Sharpe 10\u00b0 Cone Fundamentals to CIE 2012 10\u00b0 Standard Observer\r\n\r\n##### Blackbody Spectral Radiance Computation\r\n\r\n##### Dominant, Complementary Wavelength & Colour Purity Computation\r\n\r\n##### Illuminant Spectral Power Distribution Computation\r\n\r\n- CIE Standard Illuminant A\r\n- CIE Standard Illuminant D Series\r\n\r\n##### Illuminant Spectral Dataset\r\n\r\n-   A\r\n-   B\r\n-   C\r\n-   D50\r\n-   D55\r\n-   [...] 36 more!\r\n\r\n##### Illuminant Chromaticity Coordinates\r\n\r\n##### Hunter Lab Chromaticity Coordinates\r\n\r\n##### Light Source Dataset\r\n\r\n-   3-LED-1 (457/540/605)\r\n-   3-LED-2 (473/545/616)\r\n-   3-LED-2 Yellow\r\n-   3-LED-3 (465/546/614)\r\n-   3-LED-4 (455/547/623)\r\n-   [...] 51 more!\r\n\r\n##### Light Source Chromaticity Coordinates\r\n\r\n##### Lightness Computation\r\n\r\n-   CIE 1976\r\n-   Fairchild and Wyble (2010)\r\n-   Glasser, McKinney, Reilly and Schnelle (1958)\r\n-   Wyszecki (1963)\r\n\r\n##### Luminance Computation\r\n\r\n-   ASTM D1535-08\r\n-   CIE 1976\r\n-   Fairchild and Wyble (2010)\r\n-   Newhall, Nickerson and Judd (1943)\r\n\r\n##### Whiteness Computation\r\n\r\n-   ASTM E313\r\n-   Berger (1959)\r\n-   CIE 2004\r\n-   Ganz and Griesser (1979)\r\n-   Stensby (1968)\r\n-   Taube (1960)\r\n\r\n##### Yellowness Computation\r\n\r\n-   ASTM D1925\r\n-   ASTM E313\r\n\r\n##### Corresponding Chromaticities Computation\r\n\r\n##### Luminous Flux, Efficiency & Efficacy Computation\r\n\r\n#### Colour Temperature & Correlated Colour Temperature\r\n\r\n##### Correlated Colour Temperature Computation Methods\r\n\r\n-   CIE Illuminant D Series\r\n-   Hern\u00e1ndez-Andr\u00e9s, Lee and Romero (1999)\r\n-   Kang et al. (2002)\r\n-   Krystek (1985)\r\n-   McCamy (1992)\r\n-   Ohno (2013)\r\n-   Roberston (1968)\r\n\r\n#### Colour Models\r\n\r\n##### Colourspaces Transformations\r\n\r\n-   CAM02LCD to JMh CIECAM02\r\n-   CAM02SCD to JMh CIECAM02\r\n-   CAM02UCS to JMh CIECAM02\r\n-   CIE LCHab to CIE Lab\r\n-   CIE LCHuv to CIE Luv\r\n-   CIE Lab to CIE LCHab\r\n-   CIE Lab to CIE XYZ\r\n-   CIE Luv to CIE LCHuv\r\n-   CIE Luv to CIE Luv uv\r\n-   CIE Luv to CIE XYZ\r\n-   CIE Luv uv to CIE xy\r\n-   CIE UCS to CIE UCS uv\r\n-   CIE UCS to CIE XYZ\r\n-   CIE UCS uv to CIE xy\r\n-   CIE XYZ to CIE Lab\r\n-   CIE XYZ to CIE Luv\r\n-   CIE XYZ to CIE UCS\r\n-   CIE XYZ to CIE UVW\r\n-   CIE XYZ to CIE xy\r\n-   CIE XYZ to CIE xyY\r\n-   CIE XYZ to Hunter Lab\r\n-   CIE XYZ to Hunter Rdab\r\n-   CIE XYZ to IPT\r\n-   CIE XYZ to RGB\r\n-   CIE XYZ to hdr-CIELab\r\n-   CIE XYZ to hdr-IPT\r\n-   CIE XYZ to sRGB\r\n-   CIE xy to CIE XYZ\r\n-   CIE xyY to CIE XYZ\r\n-   Hunter Lab to CIE XYZ\r\n-   ICTCP to RGB\r\n-   IPT to CIE XYZ\r\n-   JMh CIECAM02 to CAM02LCD\r\n-   JMh CIECAM02 to CAM02SCD\r\n-   JMh CIECAM02 to CAM02UCS\r\n-   Prismatic to RGB\r\n-   RGB to CIE XYZ\r\n-   RGB to ICTCP\r\n-   RGB to Prismatic\r\n-   RGB to RGB\r\n-   RGB to YCbCr\r\n-   RGB to YcCbcCrc\r\n-   YCbCr to RGB\r\n-   YcCbcCrc to RGB\r\n-   hdr-CIELab to CIE XYZ\r\n-   hdr-IPT to CIE XYZ\r\n-   sRGB to CIE XYZ\r\n\r\n##### OETFs\r\n\r\n-   ARIB STD-B67\r\n-   DCI-P3\r\n-   DICOM GSDF\r\n-   ITU-R BT.2020\r\n-   ITU-R BT.2100 HLG\r\n-   ITU-R BT.2100 PQ\r\n-   ITU-R BT.601\r\n-   ITU-R BT.709\r\n-   ProPhoto RGB\r\n-   RIMM RGB\r\n-   ROMM RGB\r\n-   SMPTE 240M\r\n-   ST 2084\r\n-   sRGB\r\n\r\n##### EOTFs\r\n\r\n-   DCI-P3\r\n-   DICOM GSDF\r\n-   ITU-R BT.1886\r\n-   ITU-R BT.2020\r\n-   ITU-R BT.2100 HLG\r\n-   ITU-R BT.2100 PQ\r\n-   ProPhoto RGB\r\n-   RIMM RGB\r\n-   ROMM RGB\r\n-   SMPTE 240M\r\n-   ST 2084\r\n\r\n##### OOTFs\r\n-   ITU-R BT.2100 HLG\r\n-   ITU-R BT.2100 PQ\r\n\r\n##### Log Encoding / Decoding Curves\r\n\r\n-   ACEScc\r\n-   ACEScct\r\n-   ACESproxy\r\n-   ALEXA Log C\r\n-   Canon Log\r\n-   Canon Log 2\r\n-   Canon Log 3\r\n-   Cineon\r\n-   ERIMM RGB\r\n-   Log3G10\r\n-   Log3G12\r\n-   PLog\r\n-   Panalog\r\n-   Protune\r\n-   REDLog\r\n-   REDLogFilm\r\n-   S-Log\r\n-   S-Log2\r\n-   S-Log3\r\n-   V-Log\r\n-   ViperLog\r\n\r\n##### RGB Colourspaces Derivation\r\n\r\n##### RGB Colourspaces Chromatically Adapted Primaries Computation\r\n\r\n##### RGB Colourspaces Primaries Computation\r\n\r\n##### RGB Colourspaces\r\n\r\n-   ACES2065-1\r\n-   ACEScc\r\n-   ACEScct\r\n-   ACEScg\r\n-   ACESproxy\r\n-   ALEXA Wide Gamut\r\n-   Adobe RGB (1998)\r\n-   Adobe Wide Gamut RGB\r\n-   Apple RGB\r\n-   Best RGB\r\n-   Beta RGB\r\n-   CIE RGB\r\n-   Cinema Gamut\r\n-   ColorMatch RGB\r\n-   DCI-P3\r\n-   DCI-P3+\r\n-   DRAGONcolor\r\n-   DRAGONcolor2\r\n-   Don RGB 4\r\n-   ECI RGB v2\r\n-   ERIMM RGB\r\n-   Ekta Space PS 5\r\n-   ITU-R BT.2020\r\n-   ITU-R BT.470 - 525\r\n-   ITU-R BT.470 - 625\r\n-   ITU-R BT.709\r\n-   Max RGB\r\n-   NTSC\r\n-   Pal/Secam\r\n-   ProPhoto RGB\r\n-   Protune Native\r\n-   REDWideGamutRGB\r\n-   REDcolor\r\n-   REDcolor2\r\n-   REDcolor3\r\n-   REDcolor4\r\n-   RIMM RGB\r\n-   ROMM RGB\r\n-   Russell RGB\r\n-   S-Gamut\r\n-   S-Gamut3\r\n-   S-Gamut3.Cine\r\n-   SMPTE 240M\r\n-   V-Gamut\r\n-   Xtreme RGB\r\n-   sRGB\r\n\r\n##### Convenience Deprecated Colourspaces Transformations\r\n\r\n-   RGB to HSV\r\n-   HSV to RGB\r\n-   RGB to HSL\r\n-   HSL to RGB\r\n-   RGB to CMY\r\n-   CMY to RGB\r\n-   CMY to CMYK\r\n-   CMYK to CMY\r\n\r\n#### Chromatic Adaptation\r\n\r\n##### Chromatic Adaptation Models\r\n\r\n-   CIE 1994\r\n-   CMCCAT2000\r\n-   Fairchild (1990)\r\n-   Von Kries\r\n\r\n##### Chromatic Adaptation Transforms\r\n\r\n-   Bianco and Schettini (2010)\r\n-   Bianco and Schettini (2010) PC\r\n-   Bradford\r\n-   Brill and S\u00fcsstrunk (2008) corrected CAT02\r\n-   CAT02\r\n-   CMCCAT2000\r\n-   CMCCAT97\r\n-   Fairchild\r\n-   Sharp\r\n-   Von Kries\r\n-   XYZ Scaling\r\n\r\n\r\n#### Colour Appearance Models\r\n\r\n-   ATD95\r\n-   CIECAM02\r\n-   Hunt\r\n-   LLAB\r\n-   Nayatani95\r\n-   RLAB\r\n\r\n#### Colour Difference\r\n\r\n##### Delta E Computation\r\n\r\n-   CIE 1976\r\n-   CIE 1994\r\n-   CIE 2000\r\n-   CMC\r\n-   CAM02LCD\r\n-   CAM02SCD\r\n-   CAM02UCS\r\n\r\n#### Colour Notation Systems\r\n\r\n##### Munsell Value Computation\r\n\r\n-   Priest (1920)\r\n-   Munsell (1933)\r\n-   Moon (1943)\r\n-   Saunderson (1944)\r\n-   Ladd (1955)\r\n-   McCamy (1987)\r\n-   ASTM D1535-08\r\n\r\n##### Munsell Colour Transformations\r\n\r\n-   xyY to Munsell Colour\r\n-   Munsell Colour to xyY\r\n\r\n##### Munsell Colours Dataset\r\n\r\n-   Munsell Colours All\r\n-   Munsell Colours Real\r\n-   Munsell Colours 1929\r\n\r\n##### Hexadecimal\r\n\r\n-   RGB to HEX\r\n-   HEX to RGB\r\n\r\n#### Characterisation\r\n\r\n##### Colour Rendition Charts Spectral Dataset\r\n\r\n-   BabelColor Average\r\n-   ColorChecker N. Ohta\r\n\r\n##### Colour Rendition Charts Chromaticity Coordinates\r\n\r\n-   BabelColor Average\r\n-   ColorChecker 1976\r\n-   ColorChecker 2005\r\n\r\n##### First Order Colour Fit\r\n\r\n#### Light Quality\r\n\r\n-   Colour Rendering Index computation\r\n-   Colour Quality Scale computation\r\n\r\n#### Optical Phenomena\r\n\r\n-   Rayleigh Optical Depth\r\n\r\n#### Reflectance Recovery\r\n\r\n-   Smits (1999)\r\n-   Meng, Simon and Hanika (2015)\r\n\r\n#### Volume\r\n\r\n-   MacAdam Limits - Optimal Colour Stimuli\r\n-   Monte Carlo RGB Colourspace Volume Computation\r\n-   Monte Carlo Pointer's Gamut Colourspace Coverage Computation\r\n-   Monte Carlo Visible Spectrum Colourspace Coverage Computation\r\n\r\n#### Comprehensive Plotting Capabilities\r\n\r\n#### Input & Output\r\n\r\n-   CSV tabular data files\r\n-   IES TM-27-14 spectral data XML files\r\n-   X-Rite spectral data files\r\n-   Image I/O using [OpenImageIO](http://openimageio.org)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-11-28T19:54:35Z",
        "closed_at": "2019-11-06T17:36:33Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nSmores leverages pyparsing, jinja and marshmallow to provide a system in which you are able to easily define a hierarchical data structure for your user-created templates.  Marshmallow provides data serialization and jinja provides the templating engine itself.  Pyparsing is used to expose a simpler tag syntax for end users.  Smores comes equipped with a 'tab to complete' style autocomplete method that also provides validation for the passed tag fragment.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nSmores isn't a template engine.  It's a library to create hierarchical data structures to expose to an end user in a wysiwyg editor such as tinymce.  Simply pass it the data and the template string and let it go.  It also comes with an autocomplete method for providing users with tag-to-complete options when authoring templates.  Marshmallow provides structure as well as data serialization.  You can define templates for marshmallow schemas right in your class definitions or reference template files. \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-11-28T18:34:52Z",
        "closed_at": "2019-10-30T12:56:49Z",
        "merged_at": null,
        "body": "Why?\r\n\r\nSimply put it's open-source, easy to use & deploy and first fully functional URL shortener in pure Python 3 which supports MySQL, PostgreSQL and SQLite.\r\n\r\n## What is this Python project?\r\n\r\nIt's an open-source, extensible & easy-to-use URL shortener. It's very also easy to host and run. It's created keeping in mind that it should be easy to have your custom URL shortener up and running without much effort. It's like bit.ly but open source. The code architecture is inspired by GNU Mailman project. It has 3 parts the core program, REST API on top of it and a Django based app to access the web UI. \r\n\r\nThis web app provides custom links, secret links, and auto expiry links.\r\n\r\nOn signing up in the app user can keep track of the shortened links in the dashboard. URL click stats like country, referrer, the timestamp can be accessed by adding + to the short URL.\r\n\r\nIts created entirely in Python and a live version runs at https://pygy.co\r\n\r\nMore design info in Pygmy short link of repo: https://pygy.co/Z and actual link https://github.com/amitt001/pygmy README file\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis is the first Python based fully functional URL shortener web app that targets to be as good as bit.ly while maintaining the privacy of users. Its components can be used separately like URL shortener python library or a REST API.\r\n\r\nIt supports MySQL and Postgresql DB's. SQLite can be used for development.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-11-24T10:33:53Z",
        "closed_at": "2018-02-01T16:10:05Z",
        "merged_at": "2018-02-01T16:10:05Z",
        "body": "## What is this Python project?\r\n\r\nDash is a productive Python framework for building web applications. Written on top of Flask, Plotly.js, and React.js, Dash is ideal for building data visualization apps with highly custom user interfaces in pure Python. It's particularly suited for anyone who works with data in Python. \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis web framework is built on top of React.js, Plotly.js and Dash. It's aiming to be the equivalent for Python of what the [Shiny Web Framework](https://shiny.rstudio.com/) is for R. It enables full stack web application development in a declarative paradigm. \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-11-22T12:58:13Z",
        "closed_at": "2017-11-22T17:53:39Z",
        "merged_at": "2017-11-22T17:53:39Z",
        "body": "Improved Podcasts section and added list of podcasts.\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-11-20T10:31:42Z",
        "closed_at": "2017-11-20T16:51:19Z",
        "merged_at": "2017-11-20T16:51:19Z",
        "body": "## What is this Python project?\r\n\r\nSaleor is one of the [most popular](https://www.ecommwar.com/) Python e-commerce platforms.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nSaleor is designed to be a forkable project template rather than a library that you add to an existing project.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-11-15T07:34:27Z",
        "closed_at": "2019-11-06T12:36:56Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nWebOOB is a framework for scraping websites and aggregating data from multiple websites.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* Routing model of URL patterns to multiple class of Page with all the parsing associated to each of those Pages, for cleaner code\r\n* Scraping is made easy thanks to \"declarative parsing\": each Page can have a few XPaths, configure a few \"filters\" to apply on those XPaths (like parsing int, apply regex, etc.), and you're set!\r\n* Like every high-level feature in WebOOB, this declarative parsing can be disabled locally, when it doesn't fit for a particular site, and it's always possible to fallback to plain-old procedural parsing code\r\n* Pagination handling, supports infinite iterators\r\n* Typed data models to ensure clean scraped data\r\n* Can handle HTML/XML, JSON, and even XLS or PDF\r\n* (Optional) Can aggregate data from multiple websites by grouping them in categories (for example \"video sites\", \"banking sites\", \"public transport sites\", \"event sites\", etc.)\r\n* Comes builtin with a ~250 pre-existing website crawling backends\r\n* Has a few graphical and command-line apps to explore and search the scraped data",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-11-13T12:42:27Z",
        "closed_at": "2017-11-16T11:23:41Z",
        "merged_at": "2017-11-16T11:23:41Z",
        "body": "## What is this Python project?\r\n\r\nThe project is meant to allow Django to support HTTP/2, WebSockets or other protocols with ease.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nChannels is an official Django Project. Now actively supported, probably should be in next Django releases.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-11-11T15:35:51Z",
        "closed_at": "2017-11-14T15:46:20Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\nA library to **declare** app's command line interface. Automatically generates help and validates parameters. Has subcommands.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nThere are similar libs, but I have not tried them yet.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-11-11T15:34:01Z",
        "closed_at": "2019-10-30T19:31:32Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nIt's a framework to pake processing pipelines in python.\r\nA pipeline is made of stages, the stages do the same things but in a different way.\r\nIn a pipeline object you create a method where you specify in high level what you want to do. The automagics im metaclass transforms that method to be called for ecery stage in a loop.\r\n\r\nThis framework is suitable only to sequential pipelines, not to graphs with multiple dependencies.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nthere are tons of such frameworks, so I haven't researched that much.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-11-11T15:26:30Z",
        "closed_at": "2019-10-30T19:30:32Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\nYou construct styled strings as DAG of `RichStr` objects, then the object can be transformed into a sequence of ECMA control codes giving the needed visual effect.\r\n\r\n## What's the difference between this Python project and similar ones\r\n1 I'm not aware of any Python lib doing exactly this, so had to implement.\r\n2 The nearest similar is curses, but curses is drawing-GUI-oriented, not text output.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-11-04T14:37:31Z",
        "closed_at": "2019-11-06T12:36:55Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n`Halo` is a beautiful terminal spinner library that allows user to show loaders for async tasks. It provides an API to customize the text and colors, show status of task and over 60+ spinners to choose from. (If there is any feature request, please open an issue. Also, PRs welcome!)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nOnly library to compare here would be with `tqdm` which is an amazing library in itself.\r\nIf one has to draw differences, `Halo` provides spinners, whereas `tqdm` provides progress bars which are two different things tackling the similar problem. One can use `Halo` for building a task list like interface which I believe is not possible with `tqdm`. Also,  `Halo` focuses more on asynchronous tasks whereas `tqdm` focuses on synchronous tasks. Finally, `Halo` provides customizations for spinners and `tqdm` does the same for progress bars.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-11-03T18:46:29Z",
        "closed_at": "2019-11-29T14:24:50Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n[Dependency Injector](https://github.com/ets-labs/python-dependency-injector) - Dependency injection microframework for Python.\r\n\r\nDependency Injector key features are:\r\n\r\n+ Easy, smart, pythonic style.\r\n+ Obvious, clear structure.\r\n+ Extensibility and flexibility.\r\n+ High performance.\r\n+ Memory efficiency.\r\n+ Thread safety.\r\n+ Documentation.\r\n+ Semantic versioning.\r\n\r\nOther resources:\r\n\r\n- Documentation - http://python-dependency-injector.ets-labs.org/\r\n- PyPi - https://pypi.python.org/pypi/dependency_injector\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n1. No decorators like ``@inject`` that enforce polluting of application code.\r\n2. No monkey-patching, just clean overriding.\r\n3. Implemented using Cython.\r\n4. Extensive documentation with diagrams and ready-to-copy-paste examples.\r\n5. Well-tested and supported.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-10-30T20:12:02Z",
        "closed_at": "2017-10-31T04:50:00Z",
        "merged_at": "2017-10-31T04:50:00Z",
        "body": "## What is this Python project?\r\n\r\nTensorRec is a Python recommendation system that allows you to quickly develop recommendation algorithms and customize them using TensorFlow. TensorRec lets you to customize your recommendation system's embedding functions and loss functions while TensorRec handles the data manipulation, scoring, and ranking to generate recommendations.\r\n\r\nYou can read a blog post I wrote about the project here: https://medium.com/@jameskirk1/tensorrec-a-recommendation-engine-framework-in-tensorflow-d85e4f0874e8\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nTensorRec gives you a level of customization that other recommendation systems do not. TensorRec allows you to build your own representation functions, which can be anything from simple linear transforms to deep neural networks, and use them to generate recommendations simply within the framework.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-10-27T17:40:19Z",
        "closed_at": "2017-10-27T19:51:56Z",
        "merged_at": "2017-10-27T19:51:56Z",
        "body": "## What is this Python project?\r\n\r\nEasy REST API generation, automatic documentation, framework agnostic.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt's framework agnostic and uses asyncio to optimize for throughput\r\nFixes #941 \r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-10-27T14:14:07Z",
        "closed_at": "2018-03-21T13:55:50Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nA source for deoplete autocompletion engine for vim\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-10-26T12:16:29Z",
        "closed_at": "2019-11-06T12:36:53Z",
        "merged_at": null,
        "body": "Plumbum allows you to run shell commands (and pipe them) in a very intuitive and powerful way.\r\n\r\nIt has almost three times more stars on github than delegator.py, so I think it deserves metioning.\r\n\r\nAn example:\r\n\r\n```\r\n>>> chain = ls[\"-a\"] | grep[\"-v\", \"\\\\.py\"] | wc[\"-l\"]\r\n>>> print chain\r\n/bin/ls -a | /bin/grep -v '\\.py' | /usr/bin/wc -l\r\n>>> chain()\r\nu'13\\n'\r\n```\r\n\r\n## What is this Python project?\r\n\r\nPlumbum has very flexible and intuitive way of running shell commands. You can transform them to functions, pipe them etc.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Much more clear syntax than popen and subprocess.\r\n- More pythonic way of piping commands than delegator.py and sarge\r\n- More shell style syntax than `sh`.\r\n- It seems to be developed a bit more actively than `sh`.\r\n- Seamless remote program execution (i.e. ssh)\r\n- Less non-obvious magic than in `sh`.\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-10-22T11:21:24Z",
        "closed_at": "2018-06-25T05:31:18Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDramatiq is a distributed task processing library with a focus on simplicity, reliability and performance.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nYou can find my motivation for building it [here](http://dramatiq.io/motivation.html).\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-10-22T05:16:49Z",
        "closed_at": "2019-11-06T12:36:54Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nAn easy-to-use Python library for displaying Windows 10 Toast Notifications which is useful for windows GUI development.\r\n\r\n\r\n![o7ja4 1](https://cloud.githubusercontent.com/assets/7101452/19763806/75f71ba4-9c5d-11e6-9f16-d0d4bf43e63e.png)\r\n\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-10-21T02:40:48Z",
        "closed_at": "2019-11-06T12:36:51Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\nMake motion interpolated and fluid slow motion videos from the command line\r\n### Features\r\n* Makes **motion interpolated videos** (increase a video's frame rate by rendering intermediate frames based on motion, uses a combination of pixel-warping and blending).\r\n* Makes **smooth motion videos** (simple blending between frames).\r\n* Leverages interpolated frames to make **fluid slow motion videos**.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nThis project produces a specific effect.   \r\nMoviepy can be used for a wide variety of video editing.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-10-20T12:50:25Z",
        "closed_at": "2019-11-06T17:36:38Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nThe simplest way to get logger setup.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nLogzero can be as simple as:\r\n``` python\r\nfrom logzero import logger\r\nlogger.info(\"we're good to go\")\r\n```\r\n\r\nWriting to a file is also very simple\r\n``` python\r\nimport logzero\r\nfrom logzero import logger\r\n\r\n# Setup rotating logfile with 3 rotations, each with a maximum filesize of 1MB:\r\nlogzero.logfile(\"/tmp/rotating-logfile.log\", maxBytes=1e6, backupCount=3)\r\n\r\n# Log messages\r\nlogger.info(\"This log message goes to the console and the logfile\")\r\n```\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-10-20T04:14:33Z",
        "closed_at": "2019-11-06T12:36:52Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n`natsort` provides functionality to naturally sort a collection of data. In the simplest case this can be done with a drop-in replacement for the built-in `sorted`, but customization is flexible and straightforward.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n - Full built-in support over localization and of the definition of a number\r\n - Flexible user-customization\r\n - Built-in support for sorting file paths\r\n - Handling of corner-cases (such as `NaN` and mixed data types)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-10-19T11:43:10Z",
        "closed_at": "2019-11-06T12:36:50Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nSatchmo is an e-commerce framework created in Django which allows you to develop unique and robust online stores. The project has an end to end integration from inventory management, multiple payment modules, and shipping providers.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nUnlike most other e-commerce platforms in Django, it supports inbuild support for digital products which can be downloaded and subscription-based products.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-10-18T08:03:07Z",
        "closed_at": "2019-11-29T13:24:52Z",
        "merged_at": null,
        "body": "Disclaimer: I'm the author of the list.\r\n\r\n## What is this Python project?\r\n\r\nThis is a compilation of resources about Python in Education. Useful for teachers and students alike. Although it needs some more curation (better classification and reorganization) I think it is worth as a reference.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nI don't know of any other list like it.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-10-18T01:40:07Z",
        "closed_at": "2019-11-06T18:36:58Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\npypandoc provides a thin wrapper for [pandoc](https://pandoc.org/index.html), a universal document converter, which provide various kind of markup format\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIf you need to convert files from one markup format into another, pandoc is your swiss-army knife. Pandoc can convert documents in markdown, reStructuredText, textile, HTML, DocBook, LaTeX, MediaWiki markup, TWiki markup, OPML, Emacs Org-Mode, Txt2Tags, Microsoft Word docx, LibreOffice ODT, EPUB, or Haddock markup to\r\n* HTML formats: XHTML, HTML5, and HTML slide shows using Slidy, reveal.js, Slideous, S5, or DZSlides.\r\n* Word processor formats: Microsoft Word docx, OpenOffice/LibreOffice ODT, OpenDocument XML\r\n* Ebooks: EPUB version 2 or 3, FictionBook2\r\n* Documentation formats: DocBook, TEI Simple, GNU TexInfo, Groff man pages, Haddock markup\r\nPage layout formats: InDesign ICML\r\n* Outline formats: OPML\r\n* TeX formats: LaTeX, ConTeXt, LaTeX Beamer slides\r\n* PDF via LaTeX\r\n* Lightweight markup formats: Markdown (including CommonMark), reStructuredText, AsciiDoc,\u3000MediaWiki markup, DokuWiki markup, Emacs Org-Mode, Textile\r\n*\u3000Custom formats: custom writers can be written in lua.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-10-17T16:46:12Z",
        "closed_at": "2017-12-29T03:14:34Z",
        "merged_at": "2017-12-29T03:14:34Z",
        "body": "## What is this Python project?\r\n\r\n[Serpent.AI](https://github.com/SerpentAI/SerpentAI) is a simple yet powerful, novel framework to assist developers in the creation of game agents. Turn ANY video game you own into a sandbox environment ripe for experimentation, all with familiar Python code. The framework's raison d'\u00eatre is first and foremost to provide a valuable tool for Machine Learning, Deep Learning & AI research. It also turns out to be ridiculously fun to use as a hobbyist (and dangerously addictive; a fair warning)!\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nNothing truly compares but a parallel could be drawn with OpenAI [Universe](https://github.com/openai/universe). Just like it, it allows you to run and evaluate deep learning experiments against video games. Some differences with Serpent.AI: \r\n\r\n* Allows you to wrap ANY game you own. It doesn't have a limited catalog.\r\n* Works natively on all 3 major OSes. No VNC or Docker contortions.\r\n* Allows different machine/deep learning approaches. Not only focused on general intelligence.\r\n* Can be used as a core for video game interaction with Python.\r\n* Is plugin-based for portability, reproducibility  and collaboration.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-10-17T09:10:42Z",
        "closed_at": "2018-01-30T17:50:33Z",
        "merged_at": "2018-01-30T17:50:33Z",
        "body": "## What is this Python project?\r\n\r\nIt\u2019s a framework, actually a socket mock framework, and the proof of its reliability as framework is that both the HTTP mocking module (\u00e0 la HTTPretty) and the basic Redis mock have been implemented using Mocket, and nothing more than that.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- It has SSL support, and of course HTTPS if we talk about its HTTP mock.\r\n- It works well with others (e.g. pytest fixtures is one example, pook is another).\r\n- It supports PyPy, gevent and asyncio/aiohttp.\r\n- It dumps (as JSON files) everything that calls the sendall function on a true socket (recording functionality \u00e0 la vcrpy).\r\n- It strongly supports Python 3, since the very beginning. And yes, it\u2019s definitely a big feature (ask HTTPretty users to better understand what does \u201csupporting Py3\u201d mean).\r\n- Its APIs never changed. Frameworks should care about backward compatibility, and Mocket take it seriously.\r\n- ~100% test coverage. Yes, that\u2019s another important feature.\r\n- HTTPretty compatibility layer (regex urls and body as function missing)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-10-16T16:52:59Z",
        "closed_at": "2019-11-06T12:36:46Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nThis project is called [opsdroid](https://opsdroid.github.io/). An open source chat bot framework written in python. It is designed to be extendable, scalable and simple.\r\n\r\nThis application is designed to take messages from chat services and execute python functions (skills) based on their contents. Those functions can be anything you like, from simple conversational responses to running complex tasks. The true power of this project is to act as a glue library to bring the multitude of natural language APIs, chat services and third party APIs together.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Simple to modify and extend\r\n- Add your own skills in under 10 lines of python\r\n- Easy to install\r\n- Designed with Docker in mind for simple deployment\r\n- Configurable with a single YAML file\r\n- Can connect to multiple chat services simultaneously\r\n- No coding necessary if using the official modules\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-10-16T13:59:02Z",
        "closed_at": "2019-11-06T12:36:47Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nHodor is a configuration driven wrapper on top of lxml and cssselect. It helps extracts information based on the rules it gets. A rule can either be based on xpath, or css.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt is a simple to use wrapper that leverages lxml and cssselect to write simple scrapers based on configuration and has inbuilt support for pagination, robots.txt, grouping results, and proxy. This helps writing web scapers with minimal lines of code.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-10-16T10:31:04Z",
        "closed_at": "2019-11-06T12:36:48Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nTBone is a RESTful API library for asyncio-based web applications.\r\nIt provides a MongoDB ODM and serializer and tools to easily build real-time RESTful APIs on top of asyncio web frameworks such as Sanic and AioHttp\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nTBone is the first library to provide full-duplex RESTful APIs for nonblocking web applications. Both Sanic and AioHttp only provide the basic http and web socket handlers. TBone builds on top of that and makes it easy to build APIs which are RESTful. In addition, if the app is using MongoDB as a datastore TBone provides an easy-to-use ODM and serializer , which is nonblocking, and integrates well with the API components.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-10-14T16:15:34Z",
        "closed_at": "2017-10-15T07:40:48Z",
        "merged_at": "2017-10-15T07:40:48Z",
        "body": "## What is this Python project?\r\n\r\nmypy uses type hints in code to warn about possible type errors before running the code.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- This tool is unique in its ability to detect error that could be only caught during run-time. \r\n- Package is maintained by Dropbox team with Guido van Rossum\r\n- Type hints are introduced in Python 3.5 as official part of the language, making this package stand out. \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-10-12T18:45:59Z",
        "closed_at": "2019-11-06T12:36:49Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nThis module converts between binary data and Python datatypes on a per bit level.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis module is intended to have a similar interface as the Python struct module, but working on bits instead of primitive data types (char, int, ...). This makes it much more versatile and flexible than the struct module from the standard library. It is a superset of the struct module.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-10-10T08:06:10Z",
        "closed_at": "2019-05-25T09:44:05Z",
        "merged_at": "2019-05-25T09:44:05Z",
        "body": "Added django-jetand djadmin into Admin Panels section\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-10-08T19:08:06Z",
        "closed_at": "2019-11-06T12:36:44Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nSpidy is a web crawler - not a data scraper.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nWhile most projects are frameworks for creating and deploying web crawlers/spiders, spidy is a ready-to-go web crawler. Simply install via a Python package manager (pip, npm), or clone the project, and it's ready to go without any setup.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-10-06T14:00:28Z",
        "closed_at": "2017-12-12T09:48:45Z",
        "merged_at": null,
        "body": "**Note**: I'm not sure where I should place it and I'm happy to make any edits!\r\n\r\n## What is this Python project?\r\n\r\nDopyter is a tool to quickly spin up jupyter notebooks that only requires Docker. \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nI don't know of similar ones,\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-10-06T00:32:22Z",
        "closed_at": "2019-11-06T18:36:57Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\nStandard library for atomic message queues.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nBuilt-in library -- No need to install additional packages in order to use atomic message queues for inter-thread communication.\r\n\r\n- - -\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-10-04T19:03:38Z",
        "closed_at": "2017-11-30T17:41:45Z",
        "merged_at": "2017-11-30T17:41:45Z",
        "body": "## What is this Python project?\r\n\r\nbqplot is one of the leading libraries in using the Jupyter widgets infrastructure to enable seamless interactive plotting!\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nbqplot is the first library to provide seamless bi-directional communication between the JavaScript and Python. Any plot that is generated is a full web application, which can be controlled by Python interactively.\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-10-04T14:49:02Z",
        "closed_at": "2019-11-06T18:36:56Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n_django-geojson_ is a set of tools to manipulate GeoJSON with Django\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nKey features of _django-geojson_:\r\n\r\n- (De)Serializer for (Geo)Django objects, querysets and lists\r\n- Base views to serve GeoJSON map layers from models\r\n- GeoJSON model and form fields to avoid spatial database backends (compatible with django-leaflet for map widgets)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-10-01T07:54:19Z",
        "closed_at": "2018-10-13T06:43:05Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nPP is a python module which provides mechanism for parallel execution of python code on SMP (systems with multiple processors or cores) and clusters (computers connected via network).\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nSo easy to create a cluster, add nodes and execute a python function in parallel using multiple physical machines.  \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-09-30T19:57:16Z",
        "closed_at": "2019-11-06T12:36:45Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nAn advanced task flow management on top of famous Celery project (a distributed task queue). It allows one to create advanced task flows by creating YAML configuration files which state dependencies between tasks, fallback tasks (run on task failures) or run whole flows (transitively or even recursively). Dependencies between tasks or flows are graphs (without any limitation to DAG). It also enables one to use different storage or database adapters or running only certain tasks in a flow definition - system will automatically compute dependencies between tasks (which tasks needs to be run in order to run desired tasks). Selinon comes with a set of prepared storage/database adapters and support for tracing system actions (easy to integrate with Sentry or other monitoring systems) or logging ELK (Elasticsearch, logstash, Kibana) stack to provide ready-to-be-used system in clusters (using Kubernetes, OpenShift or others). A built in simutor can run your flows by executing CLI.\r\n\r\nMore info can be found in [docs](http://selinon.readthedocs.io/en/latest/) and [repo](https://github.com/selinon/selinon).\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nCelery is limited when it comes to modelling more advanced task flows (dependencies between tasks). Selinon offers fine-granted control on how your task flow will work, how it will perform and how it will be traced in distributed environment.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-09-22T05:10:25Z",
        "closed_at": "2019-11-06T18:36:55Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nI'm developing Habu to teach (and learn) some concepts about Python and Network Hacking.\r\n\r\nThese are basic functions that help with some tasks for Ethical Hacking and Penetration Testing.\r\n\r\nMost of them are related with networking, and the implementations are intended to be understandable for who wants to read the source code and learn from that.\r\n\r\nSome techniques implemented in the current version are:\r\n\r\n    ARP Poisoning\r\n    ARP Sniffing\r\n    DHCP Discover\r\n    DHCP Starvation\r\n    LAND Attack\r\n    SNMP Cracking\r\n    SYN Flooding\r\n    TCP Flags Analysis\r\n    TCP ISN Analysis\r\n    TCP Port Scan\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-09-22T00:10:16Z",
        "closed_at": "2019-11-29T15:24:51Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nPython 2/3 library for doing async http requests with python futures. It's strives to be completely API-compatible with requests, just returning futures objects wrapping the response rather than the response itself.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nSuper easy to use, no event loops or anything like that to manage. Uses the new [`concurrent.futures`](https://docs.python.org/3/library/concurrent.futures.html) functionality in Python 3 and it's backport in Python 2.\r\n\r\n```python\r\nfrom requests_futures.sessions import FuturesSession\r\n\r\nsession = FuturesSession()\r\n# first request is started in background\r\nfuture_one = session.get('http://httpbin.org/get')\r\n# second request is started immediately\r\nfuture_two = session.get('http://httpbin.org/get?foo=bar')\r\n# wait for the first request to complete, if it hasn't already\r\nresponse_one = future_one.result()\r\nprint('response one status: {0}'.format(response_one.status_code))\r\nprint(response_one.content)\r\n# wait for the second request to complete, if it hasn't already\r\nresponse_two = future_two.result()\r\nprint('response two status: {0}'.format(response_two.status_code))\r\nprint(response_two.content)\r\n```\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-09-20T06:22:57Z",
        "closed_at": "2017-09-20T08:45:55Z",
        "merged_at": "2017-09-20T08:45:55Z",
        "body": "## What is this Python project?\r\n\r\n### [github.com/boppreh/keyboard](https://github.com/boppreh/keyboard):\r\n> Take full control of your keyboard with this small Python library. Hook global events, register hotkeys, simulate key presses, and much more.\r\n\r\n### [github.com/boppreh/mouse](https://github.com/boppreh/mouse):\r\n> Take full control of your mouse with this small Python library. Hook global events, simulate mouse movement & clicks, and much more.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis set of libraries offers much more functionality than those currently listed on awesome-python. They allow for complete management of all global key & mouse events.\r\n\r\nSome features:\r\n\r\n- **global hooks**\r\n \\- push all Key/Mouse events to provided callbacks\r\n \\- keyboard[KeyboardEvent], mouse[ButtonEvent, MoveEvent, WheelEvent]\r\n\r\n- **global hotkey registration**\r\n \\- push only defined Key events to provided callbacks\r\n \\- left & right modifier keys are recognized separately\r\n\r\n- **input simulation**\r\n \\- key chords, keypress sequences, mouse click/drag/scroll\r\n \\- allows custom delay\r\n\r\n- **macro recording & playback**\r\n \\- capture keystrokes in realtime, play them back @ custom speed\r\n\r\n- **`wait` event**\r\n \\- blocks thread until defined Key/Mouse events are received\r\n\r\nWhile not fully cross-platform (_OSX is currently listed as experimental_), these are the best choices I've come across for anyone looking for full access to keyboard & mouse functionality on the Windows & Linux platforms.\r\n\r\nBoth libraries are also very well documented.\r\n\r\n&nbsp;  \r\n\r\n-----\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-09-15T12:17:54Z",
        "closed_at": "2019-11-06T18:36:54Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n[Monique Dashboards](https://github.com/monique-dashboards/monique) - a library for creating custom dashboards, coming with full web and API applications.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThe library drops the traditional concept of a metric and replaces it with a table. Multiple input types are automatically converted to a table (JSON, ASCII tables, text files) and their data can be instantly visualized on a dashboard.\r\n\r\nOther unique features:\r\n- auto-creation of tiles, for example a tile can be created for each source IP address\r\n- auto-creation of data series (including data from new rows that appeared in a table)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-09-15T07:10:21Z",
        "closed_at": "2017-09-15T14:15:59Z",
        "merged_at": "2017-09-15T14:15:59Z",
        "body": "## What is this Python project?\r\n\r\nA Pythonic Distributed Data Science Framework\r\nhttps://www.youtube.com/watch?v=RA_2qdipVng\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-09-14T20:06:28Z",
        "closed_at": "2019-11-06T12:36:41Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n[Zeep](https://github.com/mvantellingen/python-zeep) is a painless client for SOAP, that supports Python 3 and is actually maintained.\r\nI know that SOAP is bad, old, etc., but you still need it for some \"enterprise\" APIs that you may find in the wild.\r\n\r\nAlso, I created a category broader than just SOAP for things like Thrift and other protocols that maybe aren't as popular as HTTP.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* Has a very nice API that allows you to read and pass SOAP objects without the need of instantiating many Java-like objects. You can simply used (possibly nested) dictionaries.\r\n* I think that only [Rinse](https://github.com/tysonclugg/rinse) supports Python 3, but it hasn't seen commits in some time.\r\n* The rest only supports Python 2.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach 20.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-09-14T08:54:35Z",
        "closed_at": "2019-11-06T12:36:43Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n[`atq`](https://github.com/nvdv/atq) is a pure-Python asynchronous task queue built to work with `asyncio`. It is designed to run costly functions outside main event loop using distributed workers.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\natq is designed to work with `asyncio` library and does not require additional infrastructure.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-09-13T01:26:16Z",
        "closed_at": "2017-09-13T05:05:39Z",
        "merged_at": "2017-09-13T05:05:39Z",
        "body": "[PySonar2](http://www.yinwang.org/blog-cn/2017/04/18/close-source) is no longer open source.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-09-11T11:49:11Z",
        "closed_at": "2019-11-06T12:36:42Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\ndoubledouble.py is a library for computing with unevaluated sums of two double\r\nprecision floating-point numbers.\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-09-11T11:46:39Z",
        "closed_at": "2019-11-06T12:36:40Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nFlat is a library for creating and manipulating digital forms of fine arts.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-09-11T01:55:31Z",
        "closed_at": "2019-11-06T12:36:39Z",
        "merged_at": null,
        "body": "This is [`awesome-finder`](https://github.com/mingrammer/awesome-finder)\r\n\r\n## What is this Python project?\r\n\r\nA TUI based finder for searching the awesome libraries, resources from awesome series such as awesome-python, awesome-go and so on.\r\n\r\nWith it, you can browse the awesome libraries, resources on your terminal without browser.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nNo similar one.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-09-10T01:53:49Z",
        "closed_at": "2019-11-06T12:36:37Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nAn enhanced hot reload library based on pydevd_reload.py from https://github.com/fabioz/PyDev.Debugger. The original library is used in PyDev & PyCharm.\r\n\r\nHot reload is quite useful when developing features in complex system; it saves lots of time from restarting target system.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nNo similar one.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-09-09T14:31:35Z",
        "closed_at": "2017-09-09T15:58:30Z",
        "merged_at": "2017-09-09T15:58:30Z",
        "body": "Commit 192305d, which merged the \"Implementations\" and \"High Performance\" sections, erroneously merged the CPython and Cython entries into one.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-09-08T13:49:40Z",
        "closed_at": "2019-05-09T00:10:00Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nThere is an impressive list of Python packages providing useful features for Qt under Python, which is why I created the [awesome-python-qt](https://github.com/JulienGrv/awesome-python-qt) list. The list also lists which bindings for Qt are available.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-09-07T16:47:36Z",
        "closed_at": "2019-11-06T12:36:36Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-09-06T20:33:33Z",
        "closed_at": "2019-11-06T12:36:38Z",
        "merged_at": null,
        "body": "A tool that logs errors. Has a free tier / is free for open source.\r\n\r\n## What is this Python project?\r\n\r\nIt is an exception reporter for Python with a UI to view and diagnose logged exceptions.\r\nThe python notifier is open source here: https://github.com/bugsnag/bugsnag-python\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere aren't any similar error trackers listed in this repo.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-09-01T19:36:36Z",
        "closed_at": "2019-11-06T18:36:52Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nmistletoe is a fast and extensible Markdown parser implementation.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* Compared to [Python-Markdown](https://github.com/waylan/Python-Markdown), it is over 4 times faster. With CPython its speed is on par with mistune.\r\n* Compared to [Mistune](https://github.com/lepture/mistune), it is:\r\n    - more flexible, in that adding parsing rules are formalized, easier and less brittle (see the GitHub Wiki [example](https://github.com/miyuchina/mistletoe#developers-guide) as compared to Mistune);\r\n    - more extensible, in that writing new renderers are trivial (supports transpiling to LaTeX out of the box; also see [this example](https://github.com/miyuchina/mistletoe/blob/master/plugins/mathjax.py) where mathjax support is added to mistletoe);\r\n    - about 2x faster when PyPy is used (see the [performance](https://github.com/miyuchina/mistletoe#performance) section);\r\n\r\nSee also: [why mistletoe?](https://github.com/miyuchina/mistletoe#why-mistletoe)\r\n\r\n---\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-09-01T15:39:58Z",
        "closed_at": "2019-11-06T12:36:35Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-08-30T14:19:29Z",
        "closed_at": "2017-08-30T17:11:40Z",
        "merged_at": "2017-08-30T17:11:40Z",
        "body": "URL for Authomatic has changed, as old one is redirecting to a personal web page",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-08-29T12:12:51Z",
        "closed_at": "2019-11-06T12:36:34Z",
        "merged_at": null,
        "body": "Add link to [`asynccli`](https://github.com/ahopkins/asynccli).\r\n\r\n## What is this Python project?\r\n\r\nA CLI framework based on asyncio. It helps developer create CLI applications that run on Python's `asyncio` library. It is setup to allow for simple single command applications by passing in a single method, a large multi-level nested CLI, and everything in between.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nRuns on `asyncio` event loop, no other existing framework does. It is designed to be able to run along side, for example, an application using an async library like Sanic. Because it runs an `asyncio` loop, you can easily integrate it with another existing code base that already leverages the `asyncio` library.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-08-25T10:27:47Z",
        "closed_at": "2019-11-29T19:24:50Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nWSGI server, factored out of CherryPy.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nPure-python, fast, production ready.\r\n\r\nP.S. I'm submitting this pull-request to let people know that there's no need to depend on CherryPy if only WSGI is needed.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-08-24T20:55:11Z",
        "closed_at": "2019-11-06T12:36:33Z",
        "merged_at": null,
        "body": "@vinta\r\n\r\n## What is this Python project?\r\n\r\nA pure Python CLI to view projects' download statistics. The supported fields are: project, version, pyversion, percent3, percent2, impl, impl-version, openssl, date, month, year, country, installer, installer-version, setuptools-version, system, system-release, distro, distro-version, and cpu. You can specify how many days in the past to consider or supply a custom date range. Custom ordering and where clauses are also supported.\r\n\r\nExamples: https://github.com/ofek/pypinfo#usage\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nhttps://pypi.python.org/pypi/vanity\r\n\r\nThis uses an outdated (and not guaranteed to work) method of collecting statistics (by scraping PyPI). Also, it can only get the download counts.\r\n\r\nhttps://pypi.python.org/pypi/pypi-download-stats\r\n\r\nThis requires users to write their own queries. It depends on a deprecated library to interface with BigQuery https://github.com/google/google-api-python-client/#library-maintenance. Also, the package depends on https://github.com/bokeh/bokeh which requires a complicated installation of NumPy and its scientific libs, and Tornado and its web server.\r\n\r\nBoth are GPL'd unfortunately while PyPInfo is licensed under MIT.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-08-23T15:58:44Z",
        "closed_at": "2019-11-06T13:36:58Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nIs a usefull mocker to mongodb. Simple and fast.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nYou can use like a MongoClient pymongo object.\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-08-16T21:23:47Z",
        "closed_at": "2019-12-06T05:06:29Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDockerface is an easy to install and use deep learning face detection for images and video in a docker container. It is meant for research and open for industry and personal use. It deploys a trained Faster R-CNN network on Caffe through an easy to use docker image. Bring your videos and images, run dockerface and obtain videos and images with bounding boxes of face detections and an easy to use face detection annotation text file.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n[Dlib](https://github.com/davisking/dlib) has a non deep learning face detector with python bindings and a deep learning face detector with no python bindings. Our project has python scripts from a deep learning face detector and a pre-trained face detector. It is also easy to install, just download the docker container and follow the instructions.\r\n[opencv](http://opencv.org/) has python bindings for a non-deep learning face detector.\r\n[face-py-faster-rcnn](https://github.com/playerkk/face-py-faster-rcnn) is the inspiration for this project. We implement their training regime and we deploy it in an easy to use docker container.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-08-15T12:29:07Z",
        "closed_at": "2019-11-29T18:24:48Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nPyPika is a programmatic interface that uses a natural, pythonic syntax for creating SQL queries without assumptions. It is intended for querying analytical data and supports analytic queries but is designed as a light-weight wrapper that is extensible to any SQL syntax.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Light-weight wrapper using pythonic syntax\r\n- Uses the builder pattern with immutability for dynamic construction of queries and re-use of query parts\r\n- Supports complex queries with arithmetic, functions, and nested expressions\r\n- Supports analytic queries\r\n- No assumptions made, extensible to any SQL syntax and database\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-08-12T06:14:49Z",
        "closed_at": "2019-11-06T18:36:51Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-08-10T21:04:33Z",
        "closed_at": "2018-10-20T08:45:12Z",
        "merged_at": null,
        "body": "Pyoko, A Django-esque NoSQL ORM for Riak KV >= 2.2 added.\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-08-05T15:39:10Z",
        "closed_at": "2017-08-07T08:13:16Z",
        "merged_at": "2017-08-07T08:13:16Z",
        "body": "## What is this Python project?\r\n\r\nConvert Chinese hanzi to pinyin.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nMore powerful, more active, more developer-friendly(tests, docs).\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-08-05T14:27:36Z",
        "closed_at": "2019-11-06T13:36:55Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n_taken from their README.md:_\r\n\r\nPySynth is a simple music synthesizer written in Python 3. The goal is not to produce many different sounds, but to have scripts that can turn ABC notation or MIDI files into a WAV file without too much tinkering.\r\n\r\nThis project was created by @mdoege\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThe project make great sounds and it's pretty easy to use\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-07-28T16:11:16Z",
        "closed_at": "2019-11-06T13:36:57Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n*from their docs:*\r\n\r\n> Tapioca helps you generating Python clients for APIs. APIs wrapped by Tapioca are explorable and follow a simple interaction pattern that works uniformly so developers don't need to learn how to use a new coding interface/style for each service API.\r\n\r\nIn the end, it helps you out writing wrappers for apis and made then easy and available to be used by other people.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n - Well, it wraps any api in a concise, object oriented way.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-07-28T16:01:46Z",
        "closed_at": "2019-11-06T13:36:56Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n*taken from their docs:*\r\n\r\n**pyenchant** provides a set of Python language bindings for the **Enchant** spellchecking library.\r\n\r\n> Enchant aims to provide a simple but comprehensive abstraction for dealing with different spell checking libraries in a consistent way. A client, such as a text editor or word processor, need not know anything about a specific spell-checker, and since all back-ends are plugins, new spell-checkers can\r\nbe added without needing any change to the program using Enchant.\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n - Based on a clib\r\n - Works with different spell-checkers\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-07-22T19:46:32Z",
        "closed_at": "2017-07-24T06:05:19Z",
        "merged_at": "2017-07-24T06:05:19Z",
        "body": "Relatively small, simple changes. See commit messages for reasoning. Thanks for this wonderful resource, @vinta!",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-07-21T13:44:27Z",
        "closed_at": "2019-11-06T18:36:53Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nThis Python project provides a high-level interface for parsing, transforming, displaying, and satisfying Boolean expressions, as well as representing them through truth tables. \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis library strives to encompass many features of similar libraries such as PyEDA and Pycosat and encapsulate these features in a simpler programming interface using Pythonic features such as iterators, kwargs, and namedtuples. tt also has a greater emphasis on producing REPL-friendly output and has extensive documentation on its project site (http://tt.brianwel.ch), making it an easier tool to use for beginners to learn more about Boolean algebra and manipulation. tt also strives for ease of distribution, with support for Python 2.7 - 3.6 and pre-built wheels for 32-bit and 64-bit Windows Python on all supported interpreter versions (https://pypi.python.org/pypi/ttable/0.6.2). \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 70,
        "deletions": 70,
        "changed_files": 1,
        "created_at": "2017-07-18T16:34:50Z",
        "closed_at": "2017-07-19T08:37:36Z",
        "merged_at": "2017-07-19T08:37:36Z",
        "body": "### GitHub Corrected URLs \r\nWas | Now \r\n--- | --- \r\nhttps://github.com/ClusterHQ/eliot | https://github.com/ScatterHQ/eliot \r\nhttps://github.com/Widdershin/butterdb | https://github.com/terrible-ideas/butterdb \r\nhttps://github.com/catholabs/esengine | https://github.com/seek-ai/esengine \r\nhttps://github.com/django-debug-toolbar/django-debug-toolbar | https://github.com/jazzband/django-debug-toolbar \r\nhttps://github.com/jflesch/pyocr | https://github.com/openpaperwork/pyocr \r\nhttps://github.com/jkbrzt/httpie | https://github.com/jakubroztocil/httpie \r\nhttps://github.com/jlafon/PynamoDB | https://github.com/pynamodb/PynamoDB \r\nhttps://github.com/klen/python-mode | https://github.com/python-mode/python-mode \r\nhttps://github.com/koenbok/Cactus/ | https://github.com/eudicots/Cactus \r\nhttps://github.com/lk-geimfari/church | https://github.com/lk-geimfari/mimesis \r\nhttps://github.com/maraujop/django-crispy-forms | https://github.com/django-crispy-forms/django-crispy-forms \r\nhttps://github.com/mathcamp/flywheel | https://github.com/stevearc/flywheel \r\nhttps://github.com/mozilla-services/cornice | https://github.com/Cornices/cornice \r\nhttps://github.com/mvantellingen/localshop | https://github.com/jazzband/localshop \r\nhttps://github.com/nicolaiarocci/cerberus/ | https://github.com/pyeve/cerberus \r\nhttps://github.com/nicolaiarocci/eve | https://github.com/pyeve/eve \r\nhttps://github.com/nvie/pip-tools | https://github.com/jazzband/pip-tools \r\nhttps://github.com/platformio/platformio | https://github.com/platformio/platformio-core \r\nhttps://github.com/rbarrois/factory_boy | https://github.com/FactoryBoy/factory_boy \r\nhttps://github.com/ronnix/fabtools | https://github.com/fabtools/fabtools \r\nhttps://github.com/stochastic-technologies/shortuuid | https://github.com/skorokithakis/shortuuid \r\nhttps://github.com/sunlightlabs/django-wordpress/ | https://github.com/istrategylabs/django-wordpress \r\nhttps://github.com/tonioo/modoboa | https://github.com/modoboa/modoboa \r\nhttps://github.com/yhat/ggplot | https://github.com/yhat/ggpy \r\nhttps://github.com/yyuu/pyenv | https://github.com/pyenv/pyenv \r\n\r\n\r\n### HTTPS Corrected URLs \r\nWas | Now \r\n--- | --- \r\nhttp://aws.amazon.com/elastictranscoder/ | https://aws.amazon.com/elastictranscoder/ \r\nhttp://blog.getpelican.com/ | https://blog.getpelican.com/ \r\nhttp://docs.openstack.org/developer/cliff/ | https://docs.openstack.org/developer/cliff/ \r\nhttp://docs.openstack.org/developer/taskflow/ | https://docs.openstack.org/developer/taskflow/ \r\nhttp://docs.pylonsproject.org/projects/colander/en/latest/ | https://docs.pylonsproject.org/projects/colander/en/latest/ \r\nhttp://nedbatchelder.com/code/modules/id3reader.py | https://nedbatchelder.com/code/modules/id3reader.py \r\nhttp://orange.biolab.si/ | https://orange.biolab.si/ \r\nhttp://podcastinit.com/ | https://podcastinit.com/ \r\nhttp://scrapy.org/ | https://scrapy.org/ \r\nhttp://weekly.codetengu.com/ | https://weekly.codetengu.com/ \r\nhttp://www.django-cms.org/en/ | https://www.django-cms.org/en/ \r\nhttp://www.openstack.org/ | https://www.openstack.org/ \r\nhttp://www.qt.io/ | https://www.qt.io/ \r\nhttp://www.scipy.org/ | https://www.scipy.org/ \r\nhttp://wxpython.org/ | https://wxpython.org/ \r\n\r\n\r\n### Other Corrected URLs \r\nWas | Now \r\n--- | --- \r\nhttp://apscheduler.readthedocs.io/ | http://apscheduler.readthedocs.io/en/latest/ \r\nhttp://cloudinit.readthedocs.io/ | http://cloudinit.readthedocs.io/en/latest/ \r\nhttp://coala-analyzer.org/ | http://coala.io/ \r\nhttp://dogpilecache.readthedocs.io/ | http://dogpilecache.readthedocs.io/en/latest/ \r\nhttp://errbot.io/ | http://errbot.io/en/latest/ \r\nhttp://fileconveyor.org/ | http://wimleers.com/fileconveyor \r\nhttp://obspy.org | https://github.com/obspy/obspy/wiki/ \r\nhttp://pynsist.readthedocs.io/ | http://pynsist.readthedocs.io/en/latest/ \r\nhttp://pyparsing.wikispaces.com/ | https://session.wikispaces.com/1/auth/auth?authToken=04a694af95b643a06fcf5716ded01a5f3 \r\nhttp://pysdl2.readthedocs.io/ | http://pysdl2.readthedocs.io/en/rel_0_9_5/ \r\nhttp://pytest.org/latest/ | https://docs.pytest.org/latest/ \r\nhttp://python.ctolib.com | https://www.ctolib.com/python/ \r\nhttp://python.libhunt.com | https://python.libhunt.com/ \r\nhttp://pythonhackers.com/open-source/ | http://www.oss.io/open-source/ \r\nhttp://pythonpaste.org/ | https://web.archive.org/web/http%3A//pythonpaste.org/ \r\nhttp://sarge.readthedocs.io/ | http://sarge.readthedocs.io/en/latest/ \r\nhttp://wercker.com/ | http://www.wercker.com/ \r\nhttp://whoosh.readthedocs.io/ | http://whoosh.readthedocs.io/en/latest/ \r\nhttp://www.cherrypy.org/ | http://cherrypy.org/ \r\nhttp://www.pylonsproject.org/ | https://pylonsproject.org/ \r\nhttp://xlwings.org/ | https://www.xlwings.org \r\nhttps://docs.mongodb.org/ecosystem/drivers/python/ | https://docs.mongodb.com/ecosystem/drivers/python/ \r\nhttps://openpyxl.readthedocs.io/ | https://openpyxl.readthedocs.io/en/default/ \r\nhttps://tox.readthedocs.io/ | https://tox.readthedocs.io/en/latest/ \r\nhttps://uwsgi-docs.readthedocs.io/ | https://uwsgi-docs.readthedocs.io/en/latest/ \r\nhttps://waitress.readthedocs.io/ | https://waitress.readthedocs.io/en/latest/ \r\nhttps://www.djangopackages.com/ | https://djangopackages.org/ \r\nhttps://www.shoop.io/en/ | https://www.shuup.com/en/ \r\nhttps://www.soimort.org/you-get/ | http://you-get.org/ \r\nhttps://xmldataset.readthedocs.io | https://xmldataset.readthedocs.io/en/latest/ \r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-07-14T12:17:38Z",
        "closed_at": "2019-11-06T13:36:54Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\nIts awesome because it gives you power to manipulate gui using python and we can also control mouse and keyboard Using this.\r\n\r\nDescribe features.\r\n1.Can Automate gui based task(Like Tasker for Android).\r\n2.Can control mouse and keyboard using python also ale to send keystrokes.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nThere are no similler one's.\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-07-13T08:52:54Z",
        "closed_at": "2019-11-06T18:36:49Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n(Mostly quoting from the docs)\r\n\r\n* Easy logging to console and/or (rotating) file, created by @metachris.\r\n* Provides a fully configured standard [Python logger object](https://docs.python.org/2/library/logging.html#module-level-functions).\r\n* Pretty formatting, including level-specific colors in the console.\r\n* Robust against str/bytes encoding problems, works with all kinds of character encodings and special characters.\r\n* Multiple loggers can write to the same logfile (also works across multiple Python files).\r\n* Compatible with Python 2 and 3.\r\n* All contained in a [single file](https://github.com/metachris/logzero/blob/master/logzero/__init__.py)\r\n* No further Python dependencies.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nFocusses on simplicity (less than 400 sloc), has no dependencies, and ... it's pretty!\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-07-11T15:46:49Z",
        "closed_at": "2019-11-01T18:27:01Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\ndjango-auditlog (Auditlog) is a reusable app for Django that makes logging object changes a breeze.\r\nAuditlog tries to use as much as Python and Django\u2019s built in functionality to keep the list of dependencies as short as\r\n possible. Also, Auditlog aims to be fast and simple to use.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nUnlike other apps Auditlog is very simplified and precise.\r\n\r\n[Django-Auditlog](https://github.com/gr1d99/django-auditlog) - I think everyone should try this app.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-07-08T21:03:02Z",
        "closed_at": "2019-11-06T18:36:48Z",
        "merged_at": null,
        "body": "Add Turtle module to Game Development section.\r\n\r\n## What is this Python project?\r\n\r\nTurtle graphics is a popular way for introducing programming to kids. It was part of the original Logo programming language developed by Wally Feurzig and Seymour Papert in 1966.\r\n\r\nImagine a robotic turtle starting at (0, 0) in the x-y plane. After an import turtle, give it the command turtle.forward(15), and it moves (on-screen!) 15 pixels in the direction it is facing, drawing a line as it moves. Give it the command turtle.right(25), and it rotates in-place 25 degrees clockwise.\r\n\r\nBy combining together these and similar commands, intricate shapes and pictures can easily be drawn.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* Simple to use.\r\n* Part of the standard library.\r\n* One of the oldest APIs (dating back to 1966)\r\n* Popular library in many different languages.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-07-04T10:11:10Z",
        "closed_at": "2019-11-06T13:36:53Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nRexy is a hybrid recommendation system. It's written entirely in python-3.5 with highly optimized and Pythonic codes. It also has a comprehensive and powerful architecture based on the state-of-the-art design patterns in this realm. You can read the a detailed doc [here](https://github.com/kasramvd/Rexy) \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n - The architecture is very comprehensive and specifically focused on 3 major User-Product-Tag entities.\r\n - The modules and provided functionality have unique and in some cases innovative ideas like using [Wipazuka]() as a calendar-based WordNet for event-related recommendations.\r\n - It's written in python-3.5 in a Pythonic manner\r\n - Since it doesn't use complicated machine learning tools, it's easy for any python developer to cooperate in project\r\n - We will involve machine learning and deep learning algorithms and methods in a near feature by using most popular libraries and frameworks such as Numpy, Pandas, Scikit-learn and TensorFlow.\r\n - It's a movie star ;-)\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-07-03T18:04:26Z",
        "closed_at": "2019-11-06T13:36:52Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nCompressedCrack is a simple tool to help you crack password zip and rar files.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-06-27T09:03:24Z",
        "closed_at": "2019-11-29T13:24:51Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nSlash is a testing framework intended to test complex project, with emphasis on extensibility.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* Slash puts a lot more emphasis on extending the framework -- developers can add plugins, custom configuration, command-line options and more through a simple, documented interface\r\n* Slash has a powerful fixture mechanism (inspired by `pytest`) with many advanced features and more yet to come\r\n* Slash supports an easy-to-use plugin and hook mechanism (powered by the `gossip` library)\r\n* Slash has a built-in exception handling mechanism allowing tests and infrastructure to catch errors early, preserving the test subject state or taking actions when it is needed the most. This is also supported in conjunction with expected exceptions or possible ones\r\n* Slash has a flexible, multi-scoped cleanup mechanism, supporting retroactive test failures and session-scoped cleanups\r\n* Slash supports multiple parametrization schemes, with more features being added each release\r\n* Slash supports customizable logging setups and schemes, allowing finer control over log files and verbosity\r\n* Slash supports test artifacts, details and metadata to be controlled by both tests and plugins\r\n* Slash integrates with the [Backslash test reporting service](http://getslash.github.io/backslash/), allowing test results to be examined an analyzed with ease\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-06-18T09:43:08Z",
        "closed_at": "2019-11-06T13:36:50Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nextract and modify IPTC (metadata) information on images - port of IPTCInfo.pm by Josh Carter\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nDidn't find a competitor at the same field\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-06-08T16:27:05Z",
        "closed_at": "2019-11-06T13:36:49Z",
        "merged_at": null,
        "body": "[auto_ml](https://github.com/ClimbsRocks/auto_ml) democratizes access to machine learning to any engineer or analyst who can write Python. Many standard classification and regression problems follow largely the same set of best practices. Rewriting several hundred lines of largely duplicative code each time is a pain to maintain, and slows down iteration speeds. \r\n\r\nauto_ml is tuned for production, both in prediction speeds, flexibility of inputs, and serializing the trained model to disk. It is the automated machine learning platform that we use for our engineers at a large tech startup, and we're just starting to publicize it a bit and make it more widely available to the community. \r\n\r\nLet me know if you have any questions!\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-06-04T12:17:14Z",
        "closed_at": "2019-11-06T17:36:48Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n[ModernGL](https://github.com/cprogrammer1994/ModernGL) is a python3 module that encapsulates **OpenGL** in a **pythonic** way\r\n\r\n- [ModernGL on PyPI](https://pypi.python.org/pypi/ModernGL/)\r\n- [Documentation](https://moderngl.readthedocs.io/)\r\n- [Examples](https://github.com/cprogrammer1994/ModernGL/tree/master/examples)\r\n- [Changelog](https://github.com/cprogrammer1994/ModernGL/blob/master/CHANGELOG.md)\r\n\r\nFeatures:\r\n\r\n- Full linting support - (using [vscode](https://code.visualstudio.com/) and [pylint](https://www.pylint.org/))\r\n- Create GLSL shaders with only a few lines of code\r\n- Create framebuffers and validate them with a single call\r\n- Access cool OpenGL features by writing clean and self-explaining code\r\n- [vscode snippets](https://github.com/cprogrammer1994/ModernGL/blob/master/extras/vscode/python.json) for fast prototyping\r\n- Render to pillow image - (no window required)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n### ModernGL - PyOpenGL\r\n\r\n#### Pros\r\n\r\n- Same quality and performance with less code written\r\n- Readable code and no `ctypes` required\r\n- Rendering without a window\r\n- Fully linted\r\n\r\n#### Cons\r\n\r\n- One can mix ModernGL and PyOpenGL so there are no drawbacks.\r\n\r\n## Example\r\n\r\n### Using PyOpenGL\r\n\r\n```py\r\nvbo1 = glGenBuffers(1)\r\nGL.glBindBuffer(GL_ARRAY_BUFFER, vbo1)\r\nGL.glBufferData(GL_ARRAY_BUFFER, b'Hello World!', GL_STATIC_DRAW)\r\n\r\nvbo2 = glGenBuffers(1)\r\nGL.glBindBuffer(GL_ARRAY_BUFFER, vbo2)\r\nGL.glBufferData(GL_ARRAY_BUFFER, b'\\x00' * 1024, GL_DYNAMIC_DRAW)\r\n```\r\n\r\n### Using ModernGL\r\n\r\n```py\r\nvbo1 = ctx.buffer(b'Hello World!')\r\nvbo2 = ctx.buffer(reserve=1024, dynamic=True)\r\n```\r\n\r\n### Some cool features\r\n\r\n```py\r\n# Read the content\r\n>>> vbo1.read()\r\nb'Hello World!'\r\n\r\n# Copy between buffers\r\n>>> ctx.copy_buffer(vbo2, vbo1)\r\n\r\n>>> vbo2.read(5)\r\nb'Hello'\r\n\r\n# Buffer re-specification\r\n>>> vbo2.orphan()\r\n>>> vbo2.write(b'Some other data')\r\n```\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-05-31T06:36:16Z",
        "closed_at": "2019-11-06T13:36:51Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n[Storyblok](https://www.storyblok.com) is an API-based CMS focusing on content through components. It provides an easy to use interface for content creators and integrates easily in any programming language. \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* First API-based CMS in the list\r\n* All functionalities are free to use\r\n* Django Boilerplate to even start faster\r\n* Full tutorial on how to integrate\r\n* No installation required\r\n* Integratable in existing projects\r\n\r\n> \u201cTalk is cheap. Show me the code.\u201d - Linus Torvalds\r\n\r\n(The whole [Django boilerplate is open sourced](https://github.com/storyblok/django-boilerplate) and already comes with a gulp job for JS & SASS)\r\n\r\n(Not sure if we should link to the tutorial or only to the boilerplate? - what do you think?)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-05-24T16:56:27Z",
        "closed_at": "2019-11-06T13:36:48Z",
        "merged_at": null,
        "body": "The link to pysonar2 404'd, here is a link to a repository that I think hosts the same code.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-05-24T08:58:36Z",
        "closed_at": "2019-11-06T13:36:46Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\ngREST (Graph-based REST API Framework) is a RESTful API development framework on top of Python, Flask, Neo4j and Neomodel. Its primary purpose is to ease development of RESTful APIs with little effort and miminum amount of code. It has built-in user input validation, relationship handling and multiple serialization options (JSON, XML & YAML).\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere are no similar projects built for this specific problem area.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-05-16T12:14:13Z",
        "closed_at": "2019-11-06T13:36:47Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\nPika is an implementation of the AMQP0-9-1 including RabbitMQ's extensions.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-05-16T06:04:40Z",
        "closed_at": "2019-11-06T13:36:45Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\ncx_Freeze is a set of scripts and modules for freezing Python scripts into executables in much the same way that py2exe and py2app do. Unlike these two tools, cx_Freeze is cross platform and should work on any platform that Python itself works on. It requires Python 2.7 or higher and does work with Python 3.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nI have tried all the similar libraries, but personally This is the one that has worked the best for me. Other libraries are outdated and complicated to work with. This one is a little more simpler. It works with Python 3 pretty easily. That is why I like it. \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-05-15T21:15:42Z",
        "closed_at": "2019-05-25T09:46:39Z",
        "merged_at": null,
        "body": "![screen shot 2017-05-16 at 21 37 12](https://cloud.githubusercontent.com/assets/470325/26133750/ef5af022-3a7f-11e7-9f9d-1bb70a2e7f7a.png)\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-05-12T08:16:38Z",
        "closed_at": "2019-11-06T13:36:44Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nAlternative to celery with far less features but simplified\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nCelery, or any other task queue library\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-05-08T20:04:37Z",
        "closed_at": "2019-11-06T18:36:50Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nTorsimany is a JSON to Markdown converter. Scheme-independent. Translate any JSON file to stylish, human-readable Markdown. Completely written in python \ud83d\udc9a \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nComparing to other \"format X to Markdown\" converters, Torsimany is absolutely independent of the input scheme or structure as long as it's a JSON file. This is because it uses a recursive algorithm to navigate through the JSON tree.\r\nIf it's in JSON, Torsimany will output a nice and human-readable markdown. \r\n\r\n\ud83d\udca1\u270f\ufe0f\ufe0f \u2b07\ufe0f\r\n\r\n* name cames from the ancient medieval copyists in the Catalan language, cool enough.\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-05-07T03:53:06Z",
        "closed_at": "2019-11-06T18:36:47Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nNLP pipeline, like SpaCy, or NLTK. \r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-05-03T12:10:13Z",
        "closed_at": "2019-11-06T18:36:46Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n[pip-upgrader](https://github.com/simion/pip-upgrader) is an interactive pip requirements upgrader, which also updates the version in your `requirements.txt` file(s).\r\nIn other words, here's a small demonstration:\r\n![pip-upgrade demo](https://raw.githubusercontent.com/simion/pip-upgrader/master/demo.gif)\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nYou can use pip-tools to upgrade all your packages. But in real life, people don't upgrade ALL packages at one.  You'll probbaly need to upgrade packages one by one, run tests, check compatibility. That's why **pip-upgrader** exists.\r\n\r\n\r\n--\r\n\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-05-02T09:14:02Z",
        "closed_at": "2017-05-03T13:46:07Z",
        "merged_at": "2017-05-03T13:46:07Z",
        "body": "## What is this Python project?\r\n\r\n[pysolr](https://github.com/django-haystack/pysolr/) is a lightweight Python wrapper for Apache Solr. It provides an interface that queries the server and returns results based on the query.\r\n\r\nLatest release on Python package index: https://pypi.python.org/pypi/pysolr/3.6.0\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* Active project (see https://wiki.apache.org/solr/SolPython for other Python solr libs)\r\n* Python 3.x support\r\n* \"More Like This\" support\r\n* Support for Spelling correction \r\n* SolrCloud awareness\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-04-25T00:46:49Z",
        "closed_at": "2017-04-25T06:21:11Z",
        "merged_at": "2017-04-25T06:21:11Z",
        "body": "\r\n## What is this Python project?\r\n\r\nSimPy is a process-based discrete-event simulation framework. Processes in SimPy are defined by Python generator functions and can, for example, be used to model active components like customers, vehicles or agents. SimPy also provides various types of shared resources to model limited capacity congestion points (like servers, checkout counters and tunnels).\r\n\r\nSimulations can be performed \u201cas fast as possible\u201d, in real time (wall clock time) or by manually stepping through the events.\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nI haven't found other python libraries which offer functionality similar to SimPy for Python so I'm not able to offer a comparison. \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-04-23T21:33:31Z",
        "closed_at": "2017-10-19T21:34:37Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDependency Injector is a dependency injection microframework for Python. It was designed to be unified, developer-friendly tool that helps to implement dependency injection design pattern in formal, pretty, Pythonic way.\r\n\r\nDependency Injector framework key features are:\r\n\r\n* Easy, smart, pythonic style.\r\n* Obvious, clear structure.\r\n* Extensibility and flexibility.\r\n* High performance.\r\n* Memory efficiency.\r\n* Thread safety.\r\n* Documentation.\r\n* Semantic versioning.\r\n\r\nDependency Injector containers and providers are implemented as C extension types using Cython.\r\n\r\nExample code:\r\n\r\n```python\r\n\"\"\"Example of dependency injection in Python.\"\"\"\r\n\r\nimport logging\r\nimport sqlite3\r\n\r\nimport boto3\r\n\r\nimport example.main\r\nimport example.services\r\n\r\nimport dependency_injector.containers as containers\r\nimport dependency_injector.providers as providers\r\n\r\n\r\nclass Core(containers.DeclarativeContainer):\r\n    \"\"\"IoC container of core component providers.\"\"\"\r\n\r\n    config = providers.Configuration('config')\r\n\r\n    logger = providers.Singleton(logging.Logger, name='example')\r\n\r\n\r\nclass Gateways(containers.DeclarativeContainer):\r\n    \"\"\"IoC container of gateway (API clients to remote services) providers.\"\"\"\r\n\r\n    database = providers.Singleton(sqlite3.connect, Core.config.database.dsn)\r\n\r\n    s3 = providers.Singleton(\r\n        boto3.client, 's3',\r\n        aws_access_key_id=Core.config.aws.access_key_id,\r\n        aws_secret_access_key=Core.config.aws.secret_access_key)\r\n\r\n\r\nclass Services(containers.DeclarativeContainer):\r\n    \"\"\"IoC container of business service providers.\"\"\"\r\n\r\n    users = providers.Factory(example.services.UsersService,\r\n                              db=Gateways.database,\r\n                              logger=Core.logger)\r\n\r\n    auth = providers.Factory(example.services.AuthService,\r\n                             db=Gateways.database,\r\n                             logger=Core.logger,\r\n                             token_ttl=Core.config.auth.token_ttl)\r\n\r\n    photos = providers.Factory(example.services.PhotosService,\r\n                               db=Gateways.database,\r\n                               s3=Gateways.s3,\r\n                               logger=Core.logger)\r\n\r\n\r\nclass Application(containers.DeclarativeContainer):\r\n    \"\"\"IoC container of application component providers.\"\"\"\r\n\r\n    main = providers.Callable(example.main.main,\r\n                              users_service=Services.users,\r\n                              auth_service=Services.auth,\r\n                              photos_service=Services.photos)\r\n```\r\n\r\nFor more examples, please, follow https://github.com/ets-labs/python-dependency-injector\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n1. Provides clear and simple structure: Containers -> Providers.\r\n2. Use Python language features, deeply follow Pythonic style and Zen of Python.\r\n3. Does NOT provide ``@inject`` decorator (or any other way of monkey-patching) that pollutes the code. Instead of this, provides feature of clean overriding of providers.\r\n4. Very fast, implemented using Cython.\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-04-20T22:36:53Z",
        "closed_at": "2019-11-06T13:36:43Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nhttps://github.com/rsvp/fecon235  - ***Stars:*** 142 (as of 2017-04-20)\r\n\r\nPython tools for financial economics. Code is demonstrated using Jupyter\r\nnotebooks for statistical computations and collection of raw data in\r\nreal-time.  Extensive use of numpy, scipy, pandas, matplotlib especially\r\nfor time-series analysis and econometrics, yet the user interface is\r\nvery friendly.\r\n\r\nAPI to access data include sources such as: U.S. Federal Reserve Bank,\r\nQuandl, Yahoo and Google Finance.\r\n\r\n### Verify theoretical ideas and practical methods interactively\r\n\r\nHere is a rendering of a Jupyter notebook for Housing economy, home prices and affordibility https://git.io/housing If you had executed that notebook locally, it would have also retrieved the latest available data and recomputed the results.\r\n\r\nHow is worker's wage correlated with GDP output? See https://git.io/gdpwage To score the Federal Reserve's performance under its dual mandate for inflation and unemployment, see https://git.io/fed (where tangentially the Phillips curve is discredited by constructing heat map scatter plots). Please see https://git.io/fedfunds to forecast the Fed Funds rate using futures contracts on LIBOR.\r\n\r\nIn https://git.io/gold we make a conjecture that real gold prices is a stationary time-series bound by real interest rates. In https://git.io/xbt we statistically analyze Bitcoin as a financial asset.\r\n\r\nIn https://git.io/equities we examine the separable components of total return for equities, especially due to enterprise earnings and market speculation, using S&P data assembled by Robert Shiller which goes back to the year 1871. In https://git.io/gdpspx we examine the close relationship between the real economy and the equities market, while demonstrating the Holt-Winters time-series model for predictions.\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nWe would recommend the Quantitative Economics site by Thomas [Sargent](https://lectures.quantecon.org/py/index.html) for economists interested in theory, whereas [fecon235](https://github.com/rsvp/fecon235) has a more data science emphasis with applications to finance.  Thus the two projects are complementary.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n\r\nQuestions? Chat at https://gitter.im/rsvp/fecon235 *Thank you for your consideration.*",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-04-15T23:59:11Z",
        "closed_at": "2017-09-15T05:50:11Z",
        "merged_at": "2017-09-15T05:50:11Z",
        "body": "## What is this Python project?\r\n\r\n`attrs` allows you to declare your class's instance attributes once, and it then takes care of generating the boilerplate `__init__`, `__eq__`, `__repr__`, etc. methods for you, turning this:\r\n\r\n```\r\nfrom functools import total_ordering\r\n@total_ordering\r\nclass Point3D(object):\r\n    def __init__(self, x, y, z):\r\n        self.x = x\r\n        self.y = y\r\n        self.z = z\r\n\r\n    def __repr__(self):\r\n        return (self.__class__.__name__ +\r\n                (\"(x={}, y={}, z={})\".format(self.x, self.y, self.z)))\r\n\r\n    def __eq__(self, other):\r\n        if not isinstance(other, self.__class__):\r\n            return NotImplemented\r\n        return (self.x, self.y, self.z) == (other.x, other.y, other.z)\r\n\r\n    def __lt__(self, other):\r\n        if not isinstance(other, self.__class__):\r\n            return NotImplemented\r\n        return (self.x, self.y, self.z) < (other.x, other.y, other.z)\r\n```\r\n\r\ninto this:\r\n\r\n```\r\nimport attr\r\n@attr.s\r\nclass Point3D(object):\r\n    x = attr.ib()\r\n    y = attr.ib()\r\n    z = attr.ib()\r\n```\r\n\r\nExample taken from [this blog post extolling the virtues of `attrs`](https://glyph.twistedmatrix.com/2016/08/attrs.html) written by the author of [Twisted](https://twistedmatrix.com/trac/).\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThe only other project like this that I'm aware of is [`characteristic`](https://github.com/hynek/characteristic), which the author abandoned to create `attrs` instead.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-04-15T14:58:10Z",
        "closed_at": "2019-11-29T20:24:51Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n [AppImage](http://appimage.org/) - Bundles applications into stand-alone executables including the Python runtime, modules, libraries, and resources (Linux)\r\n\r\n## What's the difference between this Python project and similar ones\r\n\r\nProviding an [AppImage](http://appimage.org/) has, among others, these advantages:\r\n- Works for most Linux distributions (including Ubuntu, Fedora, openSUSE, CentOS, elementaryOS, Linux Mint, and others)\r\n- One app = one file = super simple for users: just download one AppImage file, [make it executable](http://discourse.appimage.org/t/how-to-make-an-appimage-executable/80), and run\r\n- No unpacking or installation necessary\r\n- No root needed\r\n- No system libraries changed\r\n- Works out of the box, no installation of runtimes needed\r\n- Optional desktop integration with `appimaged`\r\n- Optional binary delta updates, e.g., for continuous builds (only download the binary diff) using AppImageUpdate\r\n- Can optionally GPG2-sign your AppImages (inside the file)\r\n- Works on Live ISOs\r\n- Can use the same AppImages when dual-booting multiple distributions\r\n\r\n[Here is an overview](https://github.com/probonopd/AppImageKit/wiki/AppImages) of projects that are already distributing upstream-provided, official AppImages. For example, [Ultimaker Cura](https://ultimaker.com/en/products/cura-software) is a PyQt application distributed in AppImage format for Linux.\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-04-14T22:40:24Z",
        "closed_at": "2017-04-15T06:51:42Z",
        "merged_at": "2017-04-15T06:51:41Z",
        "body": "The readme of https://github.com/jcgregorio/httplib2 says that repo is deprecated, and we should be using https://github.com/httplib2/httplib2.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-04-13T22:40:40Z",
        "closed_at": "2019-11-06T13:36:39Z",
        "merged_at": null,
        "body": "Added djsw-wrapper\r\n\r\n## What is this Python project?\r\n\r\nIt allows to create RESTful APIs using Django Rest Framework directly from Swagger schema\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere are Swagger bindings for Flask and Pyramid (http://swagger.io/open-source-integrations/#python-18), but none for Django. This tool allows to use Django (DRF) to create RESTful APIs.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-04-12T17:06:47Z",
        "closed_at": "2019-11-06T13:36:42Z",
        "merged_at": null,
        "body": "Cx_Oracle is awesome because it provides easy access to Oracle 10g, 11g\r\nand 12c databases. Cx_Oracle has been around a long time and lots of\r\npeople use it. It's a great way to start your rdbms day. :fireworks:",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-04-12T12:30:21Z",
        "closed_at": "2017-04-12T16:33:39Z",
        "merged_at": "2017-04-12T16:33:39Z",
        "body": "## What is this Python project?\r\n\r\nObsPy is an open-source project dedicated to provide a Python framework for processing seismological data. It provides parsers for common file formats, clients to access data centers and seismological signal processing routines which allow the manipulation of seismological time series.\r\n\r\nThe goal of the ObsPy project is to facilitate rapid application development for seismology.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere is no project with the same scope and the size of its user base. It aims to be the standard package to seismological research and data center operations in seismology. In some sense it is similar to the astropy project but for seismology.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-04-08T03:40:35Z",
        "closed_at": "2019-11-06T13:36:40Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nThis tool is used to clear merged pull requests ref (branch) on GitHub. Since GitHub have no feature to auto deletion branch on pull request, we usually has been forgotten to delete the branch manually. Useful when we are working on `monorepo` or very large team which a lot of undeleted branches exist within single repository.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt's unique and very specific use case\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-04-05T00:12:42Z",
        "closed_at": "2019-11-06T13:36:41Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n[Module Linker](http://fiatjaf.alhur.es/module-linker/#/python) is a Chrome Extension that turns `import` declarations into actual `<a href=\"...\">` links to the source code (or standard library documentation) of the package being imported. If what is being imported is a module from the same package, Module Linker links to that file.\r\n\r\n![](https://raw.githubusercontent.com/fiatjaf/module-linker/gh-pages/screenshot/python-screencast.gif)\r\n\r\nIf for some reason you spend some time reading code and browsing source code on GitHub, this extension will make your do your job faster and more pleasantly.\r\n\r\n---\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-04-04T07:12:00Z",
        "closed_at": "2019-11-06T13:36:38Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nMist.io is a web application that helps you manage and monitor virtual machines across different clouds and infrastructures. Public clouds included are AWS, GCE, Azure, DigitalOcean, SoftLayer, Rackspace, Vultr. OpenStack is also supported, Docker, plus vSphere and KVM\r\n\r\nThe same functionality is offered across all infrastructures (list VMs, create new ones, tag, start/stop/reboot/destroy, associate ssh keys, access web shell, run scripts, schedule scripts). \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nBeing a web application it provides graphical management of infrastructure. Also contains an API and cmd to perform same tasks over the console\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-03-31T19:03:09Z",
        "closed_at": "2017-04-01T03:10:23Z",
        "merged_at": "2017-04-01T03:10:23Z",
        "body": "CPython source officially moved to GitHub, so this URL should probably be updated.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a \ud83d\udc4d to it, and usually, the maintainer will merge it when votes reach 20.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-03-31T00:15:31Z",
        "closed_at": "2017-03-31T05:38:26Z",
        "merged_at": "2017-03-31T05:38:26Z",
        "body": "Title says it all: update [furl](https://github.com/gruns/furl)'s description.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-03-27T15:29:48Z",
        "closed_at": "2019-11-06T13:36:37Z",
        "merged_at": null,
        "body": "Add Snapcraft, a universal linux build and update packaging system.\r\n\r\nThe snap format is a single compressed filesystem that is mounted dynamically by the host operating system, together with declarative metadata that is interpreted by the snap system to set up an appropriately shaped secure sandbox or container for that application. File format extension is .snap .\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-03-18T22:36:38Z",
        "closed_at": "2019-11-06T13:36:36Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nA pure Python line-by-line profiler with both statistical and deterministic modes that supports threading. Does not require modification of source code.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* pure-python so easy to install and does not need a C compiler.\r\n* Does not require source code modification to select what should be profiled.\r\n* Meaningful output for recursive functions\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-03-16T19:03:19Z",
        "closed_at": "2019-11-06T17:36:43Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nNanobox is aimed at improving Python development workflow. It created consistent, isolated development environments that can be deployed anywhere.\r\n\r\nThis helps maintain environment consistency across development teams and applications stages (dev, staging, production, etc.)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt's different than other projects in its class because it tackles the problem of infrastructure configuration and management as a whole, rather than just pieces of it (development environments, configuration, etc.)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-03-16T15:40:26Z",
        "closed_at": "2019-11-06T13:36:35Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nIt's a very simple to use caching layer for the requests library.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt's similar in scope to the betamax and VCR libraries, but those focus on (gathering data for) testing while CacheControl focuses on working like a real cache.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-03-16T13:11:25Z",
        "closed_at": "2017-03-16T14:15:25Z",
        "merged_at": "2017-03-16T14:15:25Z",
        "body": "solves issue #820 on vinta:awesome-python\r\n\r\n## What is this Python project?\r\n\r\nI'm suggesting removal of pylearn2 as per issue #820 \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nI'm advocating for removal:\r\n1. Because the project is depreciated, this warning appears on the projects page:\r\n```\r\nWarning\r\nThis project does not have any current developer. We will continue to review pull requests and merge them when appropriate, but do not expect new development unless someone decides to work on it.\r\nThere are other machine learning frameworks built on top of Theano that could interest you, such as: Blocks, Keras and Lasagne.\r\n```\r\n2. As a full time DS practitioner it's my personal professional opinion that this library should not be recommended and the functionality has been completely replaced by more recent and active projects like Keras, pytorch, and many others. \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-03-15T20:37:27Z",
        "closed_at": "2017-07-03T15:34:52Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nA modern, browser-based frontend to gdb (gnu debugger). Add breakpoints, view stack traces, and more in C, C++, Go, and Rust. Simply run gdbgui from the terminal and a new tab will open in your browser.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere are no similar Python projects, but this project is unique in that it is the most feature-complete gdb frontend in a browser at the time of this PR.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-03-14T14:45:44Z",
        "closed_at": "2019-11-06T18:36:45Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n[https://github.com/gaojiuli/xweb](https://github.com/gaojiuli/xweb)\r\nWeb framework for the zen of python.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Xweb has very simple api.\r\n- Xweb did not use any third-party dependency.\r\n- Xweb does not have any redundant code for python2.\r\n- Source code is easy to understand.\r\n- It is easy to write xweb's middleware.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-03-14T08:44:36Z",
        "closed_at": "2019-11-06T13:36:34Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nThe main idea is to simplify managemet of binary drivers for different browsers.\r\n\r\nFor now support:\r\n\r\nChromeDriver\r\n\r\nGeckoDriver\r\n\r\nEdgeDriver\r\n\r\nIEDriver\r\n\r\nPhantomJS\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere is no similar projects. \r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-03-12T18:23:43Z",
        "closed_at": "2018-04-26T15:01:25Z",
        "merged_at": null,
        "body": "This project has been moved to an org account.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-03-12T18:06:27Z",
        "closed_at": "2017-03-15T03:03:24Z",
        "merged_at": "2017-03-15T03:03:24Z",
        "body": "## What is this Python project?\r\n\r\nhttps://github.com/google/python-fire\r\n\r\n- Python Fire is a simple way to create a CLI in Python.\r\n- Python Fire is a helpful tool for developing and debugging Python code.\r\n- Python Fire helps with exploring existing code or turning other people's code\r\ninto a CLI.\r\n- Python Fire makes transitioning between Bash and Python easier.\r\n- Python Fire makes using a Python REPL easier by setting up the REPL with the\r\nmodules and variables you'll need already imported and created.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nFire is not as flexible as [click](https://github.com/pallets/click), yet it provides an easier way to start a simple CLI program. \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a \ud83d\udc4d to it, and usually, the maintainer will merge it when votes reach 20.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-03-09T11:14:41Z",
        "closed_at": "2019-10-31T01:50:17Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nSideCI is an automated code reviewing tool with GitHub. Codes are analyzed by Flake8.\r\nIt enables developers to speed up their code review and development cycle to improve productivity without requiring their to spend valuable time.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nDevelopers can execute Flake8 without setting files and receive feedback from their pull requests.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-03-09T06:27:48Z",
        "closed_at": "2019-11-06T13:36:33Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\nA python library for url minification.\r\n[Documentation](http://microurl.readthedocs.io/en/latest/)\r\n\r\n## What's the difference between this Python project and similar ones?\r\nFeatures\r\n--------\r\n- Google\r\n    - URL Minifier\r\n    - QR Generator\r\n- Bitly\r\n    - URL Minifier\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-03-08T19:15:31Z",
        "closed_at": "2019-11-06T14:36:58Z",
        "merged_at": null,
        "body": "\u2026e interfaces` section\r\n\r\n## What is this Python project?\r\n\r\nDjango-Smart-AutoRegister (DSA) is a Django tool that automatically configure the ModelAdmin classes of your application using some good patterns:\r\n\r\n- The default behavior is to protect your application against reading without intention the entire data table because some foreign key relationship.\r\n- It search by all pertinent fields.\r\n- It create filter for all pertinent fields.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n-- Configure your django admin interface with 2 lines of code\r\n-- There is no other tool like this\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-03-08T19:14:40Z",
        "closed_at": "2019-11-06T14:36:56Z",
        "merged_at": null,
        "body": "Added django-dynamic-fixture in Object Factories section\r\n\r\n## What is this Python project?\r\n\r\nDjango Dynamic Fixture (DDF) is a complete and simple library to create dynamic model instances for testing purposes.\r\n\r\nIt lets you focus on your tests, instead of focusing on generating some dummy data which is boring and polutes the test source code.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n-- simple and clean\r\n-- full of features (including exclusive features like nose plugin, filesystem helpers etc)\r\n-- support all Django versions\r\n-- great support of the community\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-03-06T16:59:12Z",
        "closed_at": "2019-01-27T17:04:08Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nJasper is an asynchronous behavior-driven development framework.  \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nJasper's main points that separate it from other BDD frameworks are:\r\n\r\n- Tests are run asynchronously, making it very easy and intuitive to write tests for asynchronous code.\r\n- Features are described within .py files, exactly how you would write normal python code. No need to learn the syntax of a domain-specific language in order to define your features like other frameworks require.\r\n- Small and simple built-in optional assertion library allows for easy to write and easy to read assertions.\r\n- The structure of your features, scenarios, and steps is very nonrestrictive. No requirements for any specific directory structures in order for Jasper to run you tests.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-03-06T02:53:27Z",
        "closed_at": "2019-11-06T14:36:55Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nThe Language Technology Platform (LTP), is an open-sourced Chinese natural language processing system developed in the Research Center for Social Computing and Information Retrieval, HIT. LTP has developed an XML-based natural language processing results expression, and on this basis provides a rich set of bottom-up, efficient, high-precision Chinese natural language processing modules including lexical, syntactic, semantic analysis and other five Chinese processing core technology.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nLTP has obtained excellent results in serveral Chinese and international bake-offs. Especially it won the first place in the CoNLL 2009 international joint evaluation of syntactic and semantic analysis. LTP also provides well-documented web service, programming interface and visualization tools.\r\n\r\n\r\n---\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-03-05T13:13:37Z",
        "closed_at": "2017-06-04T17:22:56Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nSacred Marriage of Pipfile, Pip, & Virtualenv. from kennethreitz\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\neasy to use  \r\n\r\nPipfile is useful ",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-03-03T12:38:53Z",
        "closed_at": "2019-11-06T14:36:54Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nThis library allows you to interact between multiple distributed services using AMQP. They can call each other's methods via RPC, broadcast cluster-wide messages and perform periodic tasks.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis library is similar to [Nameko](https://github.com/onefinestay/nameko) but is built using `gevent` and offers a more narrow set of functions. It's aimed to be used alone or together with Django and be as lightweight as possible.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-03-03T05:37:25Z",
        "closed_at": "2019-11-06T18:36:44Z",
        "merged_at": null,
        "body": "I've added links for the **Splinter** framework (web scraping) and **coursera-dl** which is much like youtube-dl but for coursera courses.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-02-28T02:05:08Z",
        "closed_at": "2017-11-17T14:31:22Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n`elasticpypi` provides a private PyPI \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Uses completely managed services (serverless)\r\n- Costs less than one dollar a month (of course it depends on your usage but from what I've seen on a small team)\r\n- Able to have separate PyPIs for production, testing, etc.\r\n- Add new eggs/wheels by adding file to S3 bucket\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-02-28T00:26:22Z",
        "closed_at": "2019-10-30T17:14:36Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\nPythonBuddy is an online Python Syntax Editor with live syntax checking. It is also open source. \r\n\r\nI made this so that MOOCs like edX or codecademy could easily embed and use this on their courses. Also, PythonBuddy could help alleviate the frustrations with setting up a programming environment.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nThere has never been a live syntax checker for python online. Similar projects that are not \"live\" are http://pep8online.com/ and http://antares.sip.ucm.es/cesar/pylint/\r\n\r\nMore info here: https://github.com/ethanchewy/OnlinePythonLinterSyntaxChecker\r\n\r\nEnumerate comparisons.\r\nCurrent Features:\r\n\r\n- Search ability (Ctrl+F)\r\n- Syntax Highlighting\r\n- Live Syntax Checking with Pylint\r\n- Easy to Host on any Server \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-02-26T17:53:07Z",
        "closed_at": "2019-11-06T14:36:53Z",
        "merged_at": null,
        "body": "## Automate Translation of one Natural Language to another w/o paying money\r\n\r\nGoogle Translation APIs are paid. Businesses usually pay for **i18n** of their Apps and Websites.\r\nWhile one could write a Scrapper (probably using Selenium because of AJAX) to translate each String to targeted language. But that would tiresome. It uses a specific Google Translate API to translate, as described in Project.\r\n\r\nDisclaimer:\r\nI have written this.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-02-24T00:47:43Z",
        "closed_at": "2017-02-24T06:39:30Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nIt can make format() in Python more fexiable and convenient to use.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* The syntax looks more human readable.\r\n* The format specifier ( such as `%s`, `%d` ... ) can be omited, and will be repalced with `{}` .\r\n* Padding and aligning strings.\r\n* Support named placeholders, mean it can format the string with dict data structure as parameter of format().\r\n\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-02-22T13:04:13Z",
        "closed_at": "2017-03-07T01:27:55Z",
        "merged_at": "2017-03-07T01:27:55Z",
        "body": "fix lint to Ajenti",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-02-22T09:49:00Z",
        "closed_at": "2017-03-07T01:28:38Z",
        "merged_at": "2017-03-07T01:28:38Z",
        "body": "Forex Python is a real time Free Foreign exchange rates, currency conversion and Bit Coin to currency conversion. check [Docs](http://forex-python.readthedocs.io/en/latest/usage.html)\r\n\r\n## What is this Python project?\r\n### forex-python Features\r\n* List all currency rates.\r\n* BitCoin price for all curuncies.\r\n* Converting amount to BitCoins.\r\n* Get historical rates for any day since 1999.\r\n* Conversion rate for one currency(ex; USD to INR).\r\n* Convert amount from one currency to other.(\u2018USD 10$\u2019 to INR)\r\n* Currency Symbols\r\n* Currency names\r\n\r\n## What's the difference between this Python project and similar ones?\r\nThis package provides free real-time currency conversion rates. Uses http://fixer.io and http://www.coindesk.com/api/ to fetch conversion rates.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-02-21T14:08:01Z",
        "closed_at": "2019-11-29T11:24:51Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nIt's a framework for scraping HTML sites, and aggregating data from multiple sites from a same category (e.g. banking sites, news sites, video sites, etc.).\r\nThere are ready-made modules for popular websites and ready-apps to interact with them.\r\nThink youtube-dl applied to other domains than video!\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* It's possible to scrape new websites with declarative-style extraction rules\r\n* It provides a standardized API for categories of sites for dedicated tasks (e.g. banking, web forums, video sites, news sites, music lyrics sites, etc.)\r\n  * Scraped websites are grouped in those categories\r\n* Scraped websites are grouped in categories for a dedicated task: \r\n* The project comes with many existing backends for real-life websites\r\n* It has an internal upgrade system\r\n",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-02-20T12:13:52Z",
        "closed_at": "2019-11-06T18:36:43Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nAdded Buildbot: The Continuous Integration Framework\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nAdd individual entry.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-02-18T06:11:29Z",
        "closed_at": "2019-11-06T14:36:52Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-02-10T15:03:57Z",
        "closed_at": "2019-11-06T14:36:50Z",
        "merged_at": null,
        "body": "I added https://github.com/muatik/flask-profiler\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-02-07T07:33:56Z",
        "closed_at": "2019-02-11T17:51:50Z",
        "merged_at": "2019-02-11T17:51:50Z",
        "body": "HARFANG 3D is a 3D framework, created to deliver applications that needs a (GPU accelerated) 3D display.\r\n\r\nIt takes charge of : \r\n* 3D scenegraph (objects, geometries, lights, cameras, ...)\r\n* Multimedia resources (geometries, textures, images, video, audio)\r\n* Access to OpenGL and SteamVR (support the HTC Vive, Oculus Rift and Lenovo Explorer VR headsets)\r\n* Fully multithreaded (content processing is automatically distributed)\r\n* Realtime rigid bodies physics simulation (using the Bullet library with a seamless integration)\r\n* Pathfinding on any 3D geometry (using the Recast library)\r\n* 2D debug GUI (using Dear Im Gui)\r\n* Builds & runs on Windows 32 & 64, Linux 64 and (Yocto) Poky Linux 64\r\n* Ships with a 3D conversion pipeline (interoperability with any 3D package)\r\n* Embeds Lua for extended multi-core VM\r\n* Integrated debugger (to explore & modify the current state of your scenegraph)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* Fully Multicore\r\n* SteamVR compatible (as of 2017). A VR application can be built in less than a 100 lines of code\r\n* Built & actively maintained by a core team of game developpers with a track record on Wii, PC, PS2, PS3, Android and iOS games.\r\n* Seamless API & assets format among the various subsystems. For ex, the very same geometry can be sent to the 3D display, to the navigation system and to the physics system.\r\n* Written in modern C++ \r\n\r\nA demo of the framework can be seen here : \r\nhttps://www.youtube.com/watch?v=LN6Mnc4-Uzg\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-02-03T00:06:27Z",
        "closed_at": "2018-08-09T06:49:05Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nFramework for Neutral Network\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nCompared to \"Caffe\" you can write code very concisely\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-02-02T04:55:35Z",
        "closed_at": "2017-02-02T06:39:04Z",
        "merged_at": "2017-02-02T06:39:04Z",
        "body": "## What is this Python project?\r\nXGBoost is a gradient boosting library. It's one of the most popular GB libraries used among Kaggle users because it's yielded some of the highest scores. And its also a favorite with some of the champions. \r\nHere's an example of its use with an Otto dataset: https://www.kaggle.com/tqchen/otto-group-product-classification-challenge/understanding-xgboost-model-on-otto-data\r\nHere is a Kaggle first place team winner, showing their love for it: http://blog.kaggle.com/2015/12/03/dato-winners-interview-1st-place-mad-professors/\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nThis library is solely for gradient boosting.\r\nThis resolves issue #821.\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-02-01T17:36:06Z",
        "closed_at": "2019-11-06T14:36:51Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nJapronto (from Portuguese \"j\u00e1 pronto\" /\u02c8\u0292a p\u027e\u00f5tu/ meaning \"already done\") is a screaming-fast, scalable, asynchronous Python 3.5+ web micro-framework integrated with pipelining HTTP server based on uvloop and picohttpparser.\r\n\r\nFeatures:\r\n\r\n- HTTP 1.x implementation with support for chunked uploads.\r\n\r\n- Full support for HTTP pipelining.\r\n\r\n- Keep-alive connections with configurable reaper.\r\n\r\n- Support for synchronous and asynchronous views.\r\n\r\n- Master-multiworker model based on forking.\r\n\r\n- Support for code reloading on changes.\r\n\r\n- Simple routing.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n\r\n- Performance (1214440 Req/Sec).\r\n\r\n![alt Performance](https://github.com/squeaky-pl/japronto/raw/master/benchmarks/results.png \"Japronto 0.1\")\r\n\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-01-31T08:03:13Z",
        "closed_at": "2018-09-10T04:50:20Z",
        "merged_at": "2018-09-10T04:50:20Z",
        "body": "## What is this Python project?\r\n\r\nCoconut is a functional programming language that compiles to Python. Coconut is strictly an enhancement to Python, as all valid Python is valid Coconut. Learn more at <http://coconut-lang.org/>. Coconut is already rather popular, with over 800 stars on [GitHub](https://github.com/evhub/coconut).\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nOther functional programming tools linked are libraries or utilities. Coconut is an entire programming language, with support for much more advanced features such as algebraic data types and pattern-matching, as well as features that rely on new syntax, such as better lambdas and partial application.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-01-30T17:42:28Z",
        "closed_at": "2017-01-31T17:56:52Z",
        "merged_at": "2017-01-31T17:56:52Z",
        "body": "## What is this Python project?\r\n\r\nPyTorch is a deep learning framework that puts Python first with two level features:\r\n\r\n- Tensor computation (like numpy) with strong GPU acceleration.\r\n\r\n- Deep Neural Networks built on a tape-based autograd system.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n1. It uses dynamic graph creation, which enables more flexibility in computation.\r\n\r\n2. Extensions without pain: you can reuse your favorite python packages such as numpy, scipy and Cython to extend PyTorch when needed.\r\n\r\n3. Fast and Lean.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-01-30T10:15:35Z",
        "closed_at": "2017-01-31T09:02:17Z",
        "merged_at": "2017-01-31T09:02:17Z",
        "body": "Disclaimer: I'm the author of surprise ;)\r\n\r\n## What is this Python project?                                                \r\n                                                                                  \r\n                                                                                  \r\n[Surprise](http://surpriselib.com) is a Python [scikit](https://www.scipy.org/scikits.html) building and analysing recommender systems.\r\n                                                                                  \r\n**Main features**:\r\n                                                                                  \r\n- Give the user perfect control over his experiments. To this end, a strong  emphasis is laid on   [documentation](http://surprise.readthedocs.io/en/latest/index.html), which we  have tried to make as clear and precise as possible by pointing out every  details of the algorithms.\r\n- Alleviate the pain of [Dataset  handling](http://surprise.readthedocs.io/en/latest/getting_started.html#load-a-custom-dataset).   Users can use both *built-in* datasets\r\n  ([Movielens](http://grouplens.org/datasets/movielens/),  [Jester](http://eigentaste.berkeley.edu/dataset/)), and their own *custom*  datasets.\r\n- Provide various ready-to-use [prediction  algorithms](http://surprise.readthedocs.io/en/latest/prediction_algorithms_package.html)  such as [baseline  algorithms](http://surprise.readthedocs.io/en/latest/basic_algorithms.html),  [neighborhood  methods](http://surprise.readthedocs.io/en/latest/knn_inspired.html), matrix  factorization-based (  [SVD](http://surprise.readthedocs.io/en/latest/matrix_factorization.html#surprise.prediction_algorithms.matrix_factorization.SVD),  [PMF](http://surprise.readthedocs.io/en/latest/matrix_factorization.html#unbiased-note),  [SVD++](http://surprise.readthedocs.io/en/latest/matrix_factorization.html#surprise.prediction_algorithms.matrix_factorization.SVDpp),  [NMF](http://surprise.readthedocs.io/en/latest/matrix_factorization.html#surprise.prediction_algorithms.matrix_factorization.NMF)),  and [many  others](http://surprise.readthedocs.io/en/latest/prediction_algorithms_package.html).  Also, various [similarity \r\n  measures](http://surprise.readthedocs.io/en/latest/similarities.html)  (cosine, MSD, pearson...) are built-in.\r\n- Make it easy to implement [new algorithm  ideas](http://surprise.readthedocs.io/en/latest/building_custom_algo.html).\r\n- Provide tools to [evaluate](http://surprise.readthedocs.io/en/latest/evaluate.html),  [analyse](http://nbviewer.jupyter.org/github/NicolasHug/Surprise/tree/master/examples/notebooks/KNNBasic_analysis.ipynb/)  and  [compare](http://nbviewer.jupyter.org/github/NicolasHug/Surprise/blob/master/examples/notebooks/Compare.ipynb)  the algorithms performance. Cross-validation procedures can be run very  easily, as well as [exhaustive search over a set of  parameters](http://surprise.readthedocs.io/en/latest/getting_started.html#tune-algorithm-parameters-with-gridsearch).\r\n                                                                                  \r\n## What's the difference between this Python project and similar ones?            \r\n                                                                                  \r\n- According to any google search, [crab](https://muricoca.github.io/crab/) is the go-to package for RS. But it actually only has one prediction algorithm (k-NN), no evaluation tools, no doc, and has been dead for three years.\r\n- The second most popular package I think is [Recsys](https://github.com/ocelma/python-recsys). Provides with two prediction algorithms (k-NN and SVD) but is also unmaintained. Evaluation tools are very minimal.\r\n- There's [GraphLab](https://turi.com/), which is not free and needs license registration. I've heard good feedback about it, but never used it.\r\n- [LightFM](http://lyst.github.io/lightfm/docs/index.html). This package is focused on a specific set of algorithms (all Boolean-valued) and does not provide with other classical approaches.\r\n\r\nI think what makes [Surprise](http://surpriselib.com) is it's doc, the variety of prediction algorithms and the ability to evaluate the performances of algorithms easily (cross-validation, GridSearch, etc.). This makes it a useful tool to get your hands dirty quickly with recommender systems.                                 \r\n                                                                                  \r\n--                                                                                \r\n                                                                                  \r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-01-30T09:42:29Z",
        "closed_at": "2019-11-06T14:36:46Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nCode with circular imports in python often raises an obscure Exception (ImportError: Cannot import name X) which tells nothing about the cycle.\r\n\r\nI have come across this problem several times, and depending on the project size it becomes problematic to identify where the problem is. This tool shows you the chain of the imports that are causing the problem, after that is up to developer to fix it e.g. move the imports to the bottom, or move the imports inside some function.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere are none.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-01-19T00:36:12Z",
        "closed_at": "2017-07-29T03:38:39Z",
        "merged_at": null,
        "body": "This amends #815 per https://circleci.com/integrations/bitbucket/ and other links on the site.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-01-14T01:50:42Z",
        "closed_at": "2017-01-14T08:24:47Z",
        "merged_at": "2017-01-14T08:24:47Z",
        "body": "mutagen moved from Bitbucket (https://bitbucket.org/lazka/mutagen) to Github (https://github.com/quodlibet/mutagen)",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-01-11T15:30:58Z",
        "closed_at": "2019-11-06T18:36:42Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-01-09T14:37:07Z",
        "closed_at": "2017-04-06T14:40:37Z",
        "merged_at": "2017-04-06T14:40:37Z",
        "body": "## What is this Python project?\r\n\r\nhttps://github.com/r0x0r/pywebview\r\n\r\npywebview is a lightweight cross-platform wrapper around a webview component that allows to display HTML content in its own native GUI window. It gives you power of web technologies in your desktop application, eliminating the need of launching a web browser. Combined with a lightweight web framework like Flask, Bottle or web.py, you can create beautiful cross-platform HTML5 user interfaces targeting WebKit, while hiding implementation details from the end user.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nUnlike other GUI solutions for Python, pywebview is lightweight and has a very low learning curve. Furthermore, pywebview uses a native GUI toolkit for each platform eliminating the need of bundling a heavy GUI library with your program. \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-01-07T08:18:37Z",
        "closed_at": "2019-11-06T18:36:41Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nuncompyle6 translates Python bytecode back into equivalent Python source code. It accepts bytecodes from Python version 2.1 to 3.6 or so, including PyPy bytecode and Dropbox\u2019s Python 2.5 bytecode.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere were a number of decompyle, uncompile, uncompyle2, uncompyle3 forks around. All of them came basically from the same code base, and almost all of them no were no longer actively maintained. Only one handled Python 3, and even there, only 3.2 or 3.3 depending on which code is used. This code pulls these together and moves forward. It also addresses a number of open issues in the previous forks.\r\n\r\nWhat makes this different from other CPython bytecode decompilers?: its ability to deparse just fragments and give source-code information around a given bytecode offset.\r\n\r\nI use this to deparse fragments of code inside my trepan debuggers. For that, I need to record text fragments for all bytecode offsets (of interest). This purpose although largely compatible with the original intention is yet a little bit different. \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-01-04T01:28:52Z",
        "closed_at": "2019-11-06T14:36:48Z",
        "merged_at": null,
        "body": "A Python library for creating fast, repeatable and self-documenting data analysis pipelines.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-12-31T04:26:47Z",
        "closed_at": "2019-11-06T14:36:47Z",
        "merged_at": null,
        "body": "Adding moto library as it's a great way to mock AWS boto requests.\r\n\r\n## What is this Python project?\r\n\r\nMock framework for AWS boto.\r\nXonsh shell - linux bash like shell with python mixed in.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nThere aren't similar libraries on this list.\r\nThe other mocking tools that are on the list aren't focused on AWS.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-12-28T00:00:25Z",
        "closed_at": "2019-11-06T14:36:49Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\nFlask-Ask \r\nFlask-Ask makes it easier and much more fun to rapidly build high-quality Alexa skills for Amazon Echo Devices.\r\n\r\nDescribe features.\r\nFlask-Ask:\r\nHas decorators to map Alexa requests and intent slots to view functions\r\nHelps construct ask and tell responses, reprompts and cards\r\nMakes session management easy\r\nAllows for the separation of code and speech through Jinja templates\r\nVerifies Alexa request signatures\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-12-21T23:34:35Z",
        "closed_at": "2019-11-06T14:36:45Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nThemis provides high-level cryptosystems for socket protection, general asymmetric protection, symmetric container for various use-cases (length preserving encryption, auth-tagged encryption, encryption with additional context), zero-knowledge proof system for secure authentication.\r\n\r\nThemis works on ~10 platforms, originally a C library, with Python being one of first and most frequently used high-level interfaces to it.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere are no directly similar ones, yet Themis provides high-level security services similar to LibSodium (apart from ZKP, which LibSodium does not aim to provide, focusing on novel takes on traditional auth schemes). However, Themis bases it on more classic cryptography and aims it's cryptosystems to be easilty integrateable into any workflows (various call models for interactive protocols, key-based ciphersuite choice, etc.). \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-12-19T10:10:33Z",
        "closed_at": "2019-10-30T19:18:22Z",
        "merged_at": null,
        "body": "Ajenti has changed its repo to https://github.com/ajenti/ajenti",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-12-17T10:26:35Z",
        "closed_at": "2017-02-02T06:42:35Z",
        "merged_at": "2017-02-02T06:42:35Z",
        "body": "## What is this Python project?\r\n\r\nvprof is a Python package providing rich and interactive visualizations for various Python program characteristics such as running time and memory usage. \r\n\r\n## What's the difference between this Python project and similar ones?\r\nvprof allows tracking various program characteristics in one easy-to-use package.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-12-16T13:04:40Z",
        "closed_at": "2019-11-06T14:36:44Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nAIEngine is a next generation interactive/programmable Python/Ruby/Java/Lua packet inspection engine with capabilities of learning without any human intervention, NIDS(Network Intrusion Detection System) functionality, DNS domain classification, network collector, network forensics and many others.\r\nAIEngine also helps network/security professionals to identify traffic and develop signatures for use them on NIDS, Firewalls, Traffic classifiers and so on\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nSupports the following features:\r\n\r\n- Support for interacting/programing with the user while the engine is running (Embeded interpreter)\r\n- Support for PCRE JIT for regex matching.\r\n- Support for regex graphs (complex detection patterns).\r\n- Support five types of NetworkStacks (lan,mobile,lan6,virtual(VXLan) and oflow(OpenFlow)).\r\n- Support Sets and Bloom filters for IP searches.\r\n- Supports x86_64, ARM and MIPS architecture over operating systems such as Linux, FreeBSD and MacOS.\r\n- Support for HTTP,DNS and SSL Domains matching.\r\n- Support for banned domains and hosts for HTTP, DNS, SMTP and SSL.\r\n- Frequency analysis for unknown traffic and auto-regex generation.\r\n- Generation of Yara signatures.\r\n- Easy integration with databases (MySQL, Redis, Cassandra, Hadoop, etc...) for data correlation.\r\n- Easy integration with other packet engines (Netfilter).\r\n- Support memory clean caches for refresh stored memory information.\r\n- Support for detect DDoS at network/application layer.\r\n- Support for rejecting TCP/UDP connections.\r\n- Support for network forensics on real time.\r\n- Supports protocols such as Bitcoin,CoAP,DHCP,DNS,GPRS,GRE,HTTP,ICMPv4/ICMPv6,IMAP,IPv4/v6,Modbus, MPLS,MQTT,Netbios,NTP,OpenFlow,POP,Quic,RTP,SIP,SMTP,SSDP,SSL,TCP,UDP,VLAN,VXLAN.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-12-16T00:31:31Z",
        "closed_at": "2019-11-06T14:36:42Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nKivEnt is a framework for building performant, dynamic real-time scenes in Kivy. While not as powerful as something like the Unreal engine or Unity3d, KivEnt is capable of creating games that handle several thousands to tens of thousands of entities, depending on what type of processing we are doing on them.\r\nKivEnt is built with a modular architecture and designed to have both a python api and a c-level cython api that allows more performant access to your game data.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-12-16T00:10:35Z",
        "closed_at": "2019-11-04T20:46:59Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n[`ntfy`](https://github.com/dschep/ntfy) brings desktop & push notifications to your shell. It can send notifications immediately or wrap a command and send you a notification when it's done. It can even do so automatically!\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nI don't know of any similar Python projects.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-12-16T00:07:30Z",
        "closed_at": "2016-12-16T05:17:07Z",
        "merged_at": "2016-12-16T05:17:07Z",
        "body": "Template doesn't really make sense for this change...\r\n\r\nBoto3 is the current up to date version of boto. Despite what the name implies, it is also python 2.6 and 2.7 compatible.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-12-14T12:53:41Z",
        "closed_at": "2019-11-30T11:56:00Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nGoogle Material Design for Django Forms and Admin\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n1. Forms \r\n   - New way to render django forms\r\n   - Strong Python/HTML code separation\r\n   - Easy redefinition of particular fields rendering\r\n   - Complex form layout support\r\n2. Frontend\r\n  - Django Admin replacement build with django class-bases-views \r\n3. Admin\r\n   - Material-designed django admin\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-12-14T00:32:44Z",
        "closed_at": "2017-01-11T18:34:43Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nThe most popular 3D creation package - and it comes with Python3 as Scripting language.\r\n\r\nIt supports the entirety of the 3D pipeline\u2014modeling, rigging, animation, simulation, rendering, compositing and motion tracking, even video editing and game creation.\r\n\r\n* [blender docs](https://www.blender.org/manual/)\r\n* [python docs](https://www.blender.org/api/blender_python_api_2_78a_release/) \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nBlender covers all aspects of image/video/game creation and \r\nis the most complete open source package available in this area.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-12-14T00:20:40Z",
        "closed_at": "2019-11-06T14:36:43Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nMicroPython is a lean and efficient implementation of the Python 3 programming language that includes a small subset of the Python standard library and is optimised to run on microcontrollers and in constrained environments.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nno need for an OS, just use python\r\nnow also runs on the \r\n* [ESP8266 WiFi chip](https://www.kickstarter.com/projects/214379695/micropython-on-the-esp8266-beautifully-easy-iot)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-12-13T20:52:51Z",
        "closed_at": "2019-11-06T18:36:40Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nIt is the official Neo4j NoSQL GraphDB Driver which utilizes the binary Bolt Protocol instead of the Restful API\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nOfficially supported by Neo Technologies, uses binary protocol (dubbed: Bolt) instead of REST API\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-12-09T20:28:41Z",
        "closed_at": "2019-11-06T14:36:41Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-12-05T21:23:08Z",
        "closed_at": "2017-02-02T07:47:23Z",
        "merged_at": "2017-02-02T07:47:23Z",
        "body": "## What is this Python project?\r\n\r\nWeb2py: Free open source full-stack framework for rapid development of fast, scalable, secure and portable database-driven web-based applications. \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nhttp://www.web2py.com/examples/static/web2py_vs_others.pdf\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-12-04T17:05:51Z",
        "closed_at": "2016-12-05T13:41:20Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nConfigure is a thin wrapper around PyYAML which extends already readable and powerful YAML with inheritance, composition and (so called) \u201cobject-graph configuration\u201d features.\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n1. This package works with any of YAML, JSON or a mix of both formats\r\n2. It has inheritance, composition and object-graph refrences features\r\n3. Flexible configuration loading. Can be load from file, dictionary or string\r\n4. A separate method for logging configuration\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n\r\nThis package works with any of YAML, JSON or a mix of both formats",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-11-30T06:17:09Z",
        "closed_at": "2019-11-06T18:36:39Z",
        "merged_at": null,
        "body": "Anyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-11-20T17:03:33Z",
        "closed_at": "2019-11-06T14:36:40Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nLibrary for performing concurrent I/O and common system programming tasks\r\n\r\nHome page: [https://github.com/dabeaz/curio](https://github.com/dabeaz/curio)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Python 3.5 or newer only\r\n- OS-like architecture\r\n- Simple and fast\r\n- Pure ```async/await```, no futures or callbacks\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n\r\nAdd link to curio",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-11-18T16:24:41Z",
        "closed_at": "2019-05-02T16:46:41Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nThe goal of this project is to be independent from any other solution like IFTTT, CloudWork or others.\r\n\r\nThus you could host your own solution and manage your own triggers without depending on any non-free solution.\r\n\r\nWith this project you can host triggers for you.\r\n\r\nAll you need is to have a hosting provider (or simply your own server ;) ) who permits to use a manager of tasks like \"cron\" and, of course Python.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nI couldn't spot a similar project.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-11-18T16:15:45Z",
        "closed_at": "2019-03-30T14:18:41Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nAirflow is a platform to programmatically author, schedule and monitor workflows.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt could be considered similar to Luigi, but it allows distributed tasks and it is not linked to specific technologies.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 17,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-11-18T15:57:33Z",
        "closed_at": "2019-11-06T18:36:38Z",
        "merged_at": null,
        "body": "MOOCs are resources for methodology and domain specific python packages.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-11-18T13:12:04Z",
        "closed_at": "2019-11-06T14:36:39Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nRows is a package to work with tabular data\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nRows works in a way that automatically recognize the file type without orientation, making very easy to work with the data\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-11-14T06:47:53Z",
        "closed_at": "2017-01-18T06:52:33Z",
        "merged_at": "2017-01-18T06:52:33Z",
        "body": "## What is this Python project?\r\n\r\nI added more details about Talk Python To Me.\r\nAdded Python Bytes podcast, a new weekly podcast for Python devs.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nOne is existing, the other is another podcast but the only weekly headlines one.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-11-13T08:27:43Z",
        "closed_at": "2016-12-22T06:42:54Z",
        "merged_at": "2016-12-22T06:42:54Z",
        "body": "## What is this Python project?\r\n\r\nSupports VS Code, Sublime, and Atom. **MagicPython has been included into the github/linguist, a library used by GitHub.com to process languages.**\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis project supports all major IDEs, and is **used by GitHub** for Python syntax highlighting.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-11-12T16:56:21Z",
        "closed_at": "2016-11-13T08:01:38Z",
        "merged_at": "2016-11-13T08:01:38Z",
        "body": "## What is this Python project?\r\n\r\nAdds Python support to VSCode\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nOnly available for VS Code and includes major features like debugging, unit tests, jupyter, and linting.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 30,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-11-11T13:50:00Z",
        "closed_at": "2016-11-12T14:05:31Z",
        "merged_at": "2016-11-12T14:05:31Z",
        "body": "Hi there,\r\nThis PR is related to PR https://github.com/vinta/awesome-python/pull/768.\r\nThis is a simple script to do the sorting stuff.\r\nThanks.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-11-11T12:55:15Z",
        "closed_at": "2019-11-06T18:36:37Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n\r\n\r\nAdd hybrid recommender system repo.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-11-11T04:58:02Z",
        "closed_at": "2019-11-06T14:36:35Z",
        "merged_at": null,
        "body": "Append two graph database",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 848,
        "deletions": 845,
        "changed_files": 1,
        "created_at": "2016-11-10T06:29:29Z",
        "closed_at": "2016-11-12T14:35:17Z",
        "merged_at": null,
        "body": "Hi guys,\r\nI noticed that blocks are not sorted alphabetically, and that's not user-friendly.\r\nso, I wrote a script to sort the list alphabetically and updated the README file directly, so please tell me if you want the sorting script to be merged to the existing sort.py file in a different PR or submit it this PR.\r\nthanks",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-11-06T11:23:08Z",
        "closed_at": "2019-11-06T14:36:36Z",
        "merged_at": null,
        "body": "Autosub - Command-line utility for auto-generating subtitles for any video file.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-11-04T00:17:10Z",
        "closed_at": "2019-11-06T14:36:38Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nSmall utility library for coroutine-driven, asynchronous-based concurrent generic programming in Python +3.4.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nI wasn't able to found other similar projects.\r\nThere are not too much asynchronous Python libraries out there.\r\n\r\npaco was selected by Python Weekly and PyCoders for the weekly email list on 10/27 and I've received positive feedback from multiple users in the past week.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-11-03T02:18:33Z",
        "closed_at": "2019-11-06T14:36:37Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nHprose is a very newbility RPC Library for Python 2 and 3, and it support 25+ languages now.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* lightweight\r\n* cross-language\r\n* cross-platform\r\n* high performance\r\n* no dependence\r\n* standard WSGI app\r\n* no IDL\r\n* no code generation\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2016-11-01T17:36:12Z",
        "closed_at": "2018-01-17T11:52:22Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nPDB++ is a drop-in replacement for [pdb](https://docs.python.org/2/library/pdb.html).\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n  * colorful TAB completion of Python expressions (through fancycompleter).\r\n  * optional syntax highlighting of code listings (through pygments).\r\n  * sticky mode.\r\n  * several new commands to be used from the interactive (Pdb++) prompt.\r\n  * smart command parsing (hint: have you ever typed r or c at the prompt to print the value of some variable?)\r\n  * additional convenience functions in the pdb module, to be used from your program.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-10-31T07:24:34Z",
        "closed_at": "2019-05-25T09:49:17Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2016-10-30T21:59:57Z",
        "closed_at": "2016-10-31T07:50:28Z",
        "merged_at": "2016-10-31T07:50:28Z",
        "body": "There were a few projects using en dashes for their descriptions instead of hyphens like everywhere else.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-10-28T01:35:18Z",
        "closed_at": "2019-10-30T19:18:14Z",
        "merged_at": null,
        "body": "## What is this Python project?\n\nFrom pyflakes readme.md:\n\"A simple program which checks Python source files for errors.\n\nPyflakes analyzes programs and detects various errors. It works by parsing the source file, not importing it, so it is safe to use on modules with side effects. It's also much faster.\"\n## What's the difference between this Python project and similar ones?\n\nPyflakes is much faster than other linters since it doesn't complain about style. Rather, it focuses on only important issues.\n\nAs said in pyflakes documentation, \"Pyflakes only examines the syntax tree of each file individually. As a consequence, Pyflakes is more limited in the types of things it can check.\"\n## \n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\n\nPyflakes is much faster than other linters since it doesn't complain about style. Rather, it focuses on only important issues.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-10-27T10:29:15Z",
        "closed_at": "2019-11-06T15:36:59Z",
        "merged_at": null,
        "body": "# What is this Python project?\n\nAn easy-to-use Python library for displaying Windows 10 Toast Notifications which is useful for windows GUI development.\n\n![o7ja4 1](https://cloud.githubusercontent.com/assets/7101452/19763806/75f71ba4-9c5d-11e6-9f16-d0d4bf43e63e.png)\n## \n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 21,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-10-26T19:48:42Z",
        "closed_at": "2019-11-06T14:36:33Z",
        "merged_at": null,
        "body": "## What is this Python project?\n\nDescribe features.\n## What's the difference between this Python project and similar ones?\n\nEnumerate comparisons.\n## \n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-10-24T10:18:30Z",
        "closed_at": "2019-11-06T15:37:00Z",
        "merged_at": null,
        "body": "## What is this Python project?\n- CFFI/native-C bindings for ultra-fast OpenLDAP's LMDB.\n- memory mapped B-tree\n- Works on pretty much all versions of python\n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-10-24T02:42:42Z",
        "closed_at": "2019-11-06T14:36:34Z",
        "merged_at": null,
        "body": "# What is this Python project?\n\nOdoo (formerly known as OpenERP and before that, TinyERP) is a suite of enterprise management applications. Targeting companies of all sizes, the application suite includes billing, accounting, manufacturing, purchasing, warehouse management, and project management.\nOdoo uses Python scripting and Postgres database. A development repo is on [GitHub](https://github.com/odoo/odoo)\n# What makes Odoo different?\n\nA smooth and friendly user's experience that has been built to ensure the user seamless adoption.\n\nFluidity and full integration cover the needs of even the most complex companies. The flexibility of Odoo is such that apps can be added according to the growth of your company, adding one app at a time as your needs evolve and your customer base grows.\n\nThanks to the open source community, Odoo is actively maintained by a large base of developers to meet evolving customer needs and provide new, innovative applications. \n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach 20.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-10-21T21:16:31Z",
        "closed_at": "2016-11-21T00:50:50Z",
        "merged_at": null,
        "body": "**expynent** is a tinny library that provides RegEx patterns. This can be useful if you don't want to write regular expression manually.\r\n#### Usage\r\n\r\nJust import the pattern that you want:\r\n\r\n``` python\r\nimport re\r\nimport expynent.patterns as expas\r\n\r\nif re.match(expas.ZIP_CODE['RU'], '43134'):\r\n    print('match')\r\nelse:\r\n    print('not match')\r\n\r\n# Output: 'not match'\r\n\r\n```\r\n\r\nalso you can use compiled patterns:\r\n\r\n``` python\r\nfrom expynent.compiled import username\r\n\r\nu = input('Enter username: ')\r\n\r\nif username.match(u):\r\n    print('valid')\r\nelse:\r\n    print('invalid')\r\n```\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 19,
        "deletions": 13,
        "changed_files": 1,
        "created_at": "2016-10-21T15:18:58Z",
        "closed_at": "2017-01-12T06:44:36Z",
        "merged_at": "2017-01-12T06:44:36Z",
        "body": "\"Psyco\" and \"Unladen Swallow\" not added, because seemed deprecated\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-10-21T09:04:20Z",
        "closed_at": "2016-11-08T09:30:58Z",
        "merged_at": "2016-11-08T09:30:58Z",
        "body": "## What is this Python project?\n\nDescribe features.\n## What's the difference between this Python project and similar ones?\n\nEnumerate comparisons.\n## \n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-10-19T13:46:50Z",
        "closed_at": "2016-10-20T03:54:25Z",
        "merged_at": "2016-10-20T03:54:25Z",
        "body": "Proposing to update the pagan description, the previous version had grammar issues. Focusing on the functionality rather than the name now.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-10-18T20:35:37Z",
        "closed_at": "2019-11-06T18:36:36Z",
        "merged_at": null,
        "body": "## What is this Python project?\n\nThis package provides geo data from [GeoNames](http://www.geonames.org/) loaded from local files. The [package is on pypi](https://pypi.python.org/pypi/geonamescache) and can be installed using pip.\n## What's the difference between this Python project and similar ones?\n\nNo external HTTP requests, only file io for quick access to data such as country information including iso codes, city data for cities with a population greater than 15000, as well as US states and counties including FIPS codes.\n## \n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\n\nHope you appreciate this suggestion. In any case thanks for this awesome list.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-10-18T05:48:28Z",
        "closed_at": "2019-11-06T15:36:57Z",
        "merged_at": null,
        "body": "## What is this Python project?\n\nAutomatron is an open source framework designed to detect and remediate IT systems issues. Meaning, it can be used to monitor systems and when it detects issues; correct them.\n\nFeatures:\n- Automatically detect and add new systems to monitor\n- Monitoring is executed over SSH and completely agent-less\n- Policy based Runbooks allow for monitoring policies rather than server specific configurations\n- Supports Nagios compliant health check scripts\n- Allows arbitrary shell commands for both checks and actions\n- Runbook flexibility with Jinja2 templating support\n- Pluggable Architecture that simplifies customization\n## What's the difference between this Python project and similar ones?\n\nThere are a few other projects that are focused on Automated Remediation but as far as I know none of those support using existing Nagios checks. Another important thing with Automatron is the ability to use Jinja and Runbooks to configure monitoring in a similar way you would use Salt or Ansible. A policy based approach that is very customizable.\n\nThe biggest difference in Automatron is that it's not designed to show you errors from a GUI, it's designed to give you the tools to correct the error. Hands free without notifying someone first.\n## \n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-10-18T00:54:19Z",
        "closed_at": "2017-06-08T15:09:03Z",
        "merged_at": null,
        "body": "## What is this Python project?\n\nNinja-IDE is a cross-platform integrated development environment (IDE) that allows developers to create applications for any purpose making the task of writing software easier and more enjoyable. It's also a secret ninja agency but this doesn't matter right now.\n## What's the difference between this Python project and similar ones?\n\nBasically we want to explore and find new features that would improve the performance of any Python Developer, always maintaining Ninja-IDE fast and lightweight for anyone to use it, and compete with the current commercial IDEs out there, and when we say \"compete\" we mean: to demonstrate that you can have a beautiful application with the most popular features, plus the ones that the ninja-team researches and implements, without the need to pay for any license or use a product where you can't play with the source code.\n## \n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-10-17T05:59:22Z",
        "closed_at": "2016-10-17T07:51:28Z",
        "merged_at": "2016-10-17T07:51:28Z",
        "body": "This only fixes a minor typo, as \"poweres\" is not a word.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-10-16T20:50:52Z",
        "closed_at": "2017-04-04T14:36:08Z",
        "merged_at": "2017-04-04T14:36:08Z",
        "body": "## What is this Python project?\n\nSanic is a Flask-like Python 3.5+ web server that's written to go fast. It's based off the work done by the amazing folks at magicstack, and was inspired by this article: https://magic.io/blog/uvloop-blazing-fast-python-networking/.\n## What's the difference between this Python project and similar ones?\n\nBenchmarks. It looks like it runs blazingly faster than competition.  :zap:\n## \n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-10-16T17:41:59Z",
        "closed_at": "2019-11-06T15:36:58Z",
        "merged_at": null,
        "body": "## What is this Python project?\n\nAn easy-to-use Python library for accessing the Twitter API\n## What's the difference between this Python project and similar ones?\n\nSupports oauth, streaming, cursors, as good as Twython.\n## \n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-10-12T18:09:45Z",
        "closed_at": "2016-10-13T05:42:18Z",
        "merged_at": "2016-10-13T05:42:18Z",
        "body": "## What is this Python project?\n\nKeras is a neural networks library which acts like a wrapper, enabling developers to write code which can run on top of either Tensorflow or Theano (using them as backend)\n## What's the difference between this Python project and similar ones?\n\nTheano makes the construction of a neural network much easier and portable. A piece of code written another library requires setting-up the same library on another machine. Howeevr, the same piece of code which ultimately uses Tensorflow on one machine, can run on another machine while using Theano.\n## \n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-10-11T19:39:29Z",
        "closed_at": "2016-10-12T03:34:42Z",
        "merged_at": "2016-10-12T03:34:42Z",
        "body": "Just a fix for warehouse url. Now it is on own domain name: https://pypi.org\n## \n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-10-08T00:12:18Z",
        "closed_at": "2019-05-01T22:44:43Z",
        "merged_at": null,
        "body": "## What is this Python project?\n\nsched is a module in the standard lib that implements a general purpose event scheduler.\n## What's the difference between this Python project and similar ones?\n\nI think that it would be great to let people know about an already baked in module for event or job scheduling in python before recommending 3rd party libraries. At least especially when starting out.\n## \n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\n\nThe sched module is a part of the standard library and not many people\nmay know about it.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-10-03T21:30:00Z",
        "closed_at": "2019-11-06T15:36:56Z",
        "merged_at": null,
        "body": "## What is this Python project?\n\nCryptography library for Python\n## What's the difference between this Python project and similar ones?\n\nPython SWIG bindings of OpenSSL.\nStandard crypto algorithms. \n## \n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-10-03T14:43:52Z",
        "closed_at": "2019-11-04T17:46:11Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-10-02T08:47:10Z",
        "closed_at": "2019-11-06T15:36:55Z",
        "merged_at": null,
        "body": "## What is this Python project?\n\nA simple,fast,extensible python library for data validation.\n- Simple and readable schema\n- 20%~40% speed compare with json.loads\n- Can serialize any object\n- Easy to create custom validators\n- Accurate error messages, include reason and position\n## What's the difference between this Python project and similar ones?\n- More simple and readable schema than jsonschema and schema\n- Can serialize any object, like schematics\n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-09-30T13:46:23Z",
        "closed_at": "2019-10-30T19:29:28Z",
        "merged_at": null,
        "body": "First off thank you for maintaining this list! It's one of the best references around for all things Python.\n\nHere is a small PR to add the [awesome-wagtail](https://github.com/springload/awesome-wagtail) list underneath the \"Wagtail\" entry. The list is quite new (2 months old), but already helpful to the Wagtail community.\n\nCheers,\n\nThibaud\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-09-29T13:11:04Z",
        "closed_at": "2016-09-29T14:57:31Z",
        "merged_at": "2016-09-29T14:57:31Z",
        "body": "## What is this Python project?\n## What's the difference between this Python project and similar ones?\n\nRemember those good old days when your own imagination was a big part of the computer gaming experience? All the limitations of the hardware forced you to fill the void left by poorly pixelated images by yourself. Well, pagan tries to give back some of those nostalgic feelings by providing identicons in an oldschool look that are inspired from retro roleplaying adventure games.\n\nEach string input will be hashed and generates a unique avatar image. The purpose of pagan is to use it for generating a user image in any web application. It is is meant to replace default user images when creating new accounts or to enhance comment sections, e.g. visualizing the authors ip address or username.\n\n![](https://raw.githubusercontent.com/daboth/pagan/master/images/pagan.png)\n![](https://raw.githubusercontent.com/daboth/pagan/master/images/python.png)\n![](https://raw.githubusercontent.com/daboth/pagan/master/images/retro.png)\n## \n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-09-22T02:39:29Z",
        "closed_at": "2019-11-06T15:36:52Z",
        "merged_at": null,
        "body": "## What is this Python project?\n\nSimPy is a pure Python and mature framework for building models of discrete-event dynamical systems. The list of useful examples could be found [here](https://simpy.readthedocs.io/en/latest/examples/index.html). \n## What's the difference between this Python project and similar ones?\n\nIt seems to be the best (mature, easy-to-use and well-documented) tool for discrete dynamical system modelling... I cann't imagine why it isn't listed here?!\n## \n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 70,
        "deletions": 70,
        "changed_files": 1,
        "created_at": "2016-09-21T14:24:43Z",
        "closed_at": "2019-05-25T09:49:45Z",
        "merged_at": null,
        "body": "`Anyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.`\n\nI reordered the contents menu to alphabetical order because I think this will make it easier for people to look for things they want (also easier just to eyeball)\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-09-19T23:25:03Z",
        "closed_at": "2019-11-06T18:36:34Z",
        "merged_at": null,
        "body": "## What is this Python project?\n\nThe Minio Python Client SDK provides simple APIs to access any Amazon S3 compatible object storage server.\n## What's the difference between this Python project and similar ones?\n\nIt is simple, lightweight and does one thing perfectly.\n## \n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\n\nStorage.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-09-19T07:54:01Z",
        "closed_at": "2019-11-06T15:36:54Z",
        "merged_at": null,
        "body": "Added several interesting projects related to data analysis and machine learning, which I used or tested lately and which were missing from the list (remove them if them exist in late contributions, or move to other sections, if necessary):\n\nSeaborn - data visualization library;\nKeras - deep learning library for ANN;\nRapydTk - Tk GUI builder tool. Haven't used it, but there aren't many similar tools, so I included it\nbcolz - a young project but interesting for big data in-memory storage and analysis\nparatext - a library for reading text files over multiple cores\ncaravel - AirBnB's data exploration platform written in Python\nbrew - ensemble learning methods in Python\nFukuML-  simple machine learning library, with focus on kernel methods\njubakit - Python bindings for a Jubatus distributed online machine learning framework\nXGBoost - implementation of scalable, portable and distributed gradient boosting algorithm; considering its relevance, just ask any Kaggler :)\nPyGMO - evolutionary computing for Python (might be moved to scientific computing section as well)\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-09-17T17:42:46Z",
        "closed_at": "2019-11-06T15:36:53Z",
        "merged_at": null,
        "body": "## What is this Python project?\n\nA more advanced regular expression engine. \n## What's the difference between this Python project and similar ones?\n\nBesides fully compatible with re in standard library, the new regular expression engine adds many more regular expression features previously only supported by implementations of other languages.\n## \n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-09-16T22:47:10Z",
        "closed_at": "2016-09-17T07:33:03Z",
        "merged_at": "2016-09-17T07:33:03Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-09-16T11:33:44Z",
        "closed_at": "2016-11-18T06:36:50Z",
        "merged_at": "2016-11-18T06:36:50Z",
        "body": "## What is this Python project?\n\nPyPattyrn is a python package aiming to make it easier and faster to implement design patterns into your own projects. Containing over 15 of the most common design patterns, you no longer have to write the same boilerplate code between all your projects when you wish to use a design pattern. This package captures that boilerplate code and makes it easy to use.\n\nExample:\n\n``` python\nfrom pypattyrn.creational.singleton import Singleton\n\nclass DummyClass(object, metaclass=Singleton):\n    ... \n```\n\nDummyClass is now a Singleton. \n## What's the difference between this Python project and similar ones?\n\nEvery other design pattern repo I've found simply provides examples for how to implement design patterns in python. PyPattyrn is something you would actually import into your project to speed up development process because the boilerplate code necessary for the design pattern is already written and provided for you by the package. I have not found another package that does the same thing.\n## \n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-09-13T17:07:06Z",
        "closed_at": "2016-09-28T20:20:22Z",
        "merged_at": "2016-09-28T20:20:22Z",
        "body": "## What is this Python project?\n\n[Church](https://github.com/lk-geimfari/church) is a Python library that help you generate fake data. It's very useful if you need bootstrap your database.\n## What's the difference between this Python project and similar ones?\n\nNo requirements, no dependencies. Big database with fake data.\n## \n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\n",
        "comments": 12
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-09-11T09:25:04Z",
        "closed_at": "2016-09-11T15:29:41Z",
        "merged_at": "2016-09-11T15:29:41Z",
        "body": "## What is this Python project?\n\nWeasyPrint is a visual rendering engine for HTML and CSS that can export to PDF. It aims to support web standards for printing.\n## What's the difference between this Python project and similar ones?\n\n`xhtml2pdf` is now deprecated. I made this PR to keep things up-to-date.\nThis PR is a result of conversation appeared in #680.\n## \n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-09-10T22:48:43Z",
        "closed_at": "2019-11-06T15:36:50Z",
        "merged_at": null,
        "body": "## What is this Python project?\n\n[Clastic](https://github.com/mahmoud/clastic) is a wonderful WSGI web server which embodies the principle \"explicit is better than implicit\" by eliminating the global state which complicates most web servers.\n\nYou can read more about how larger companies like PayPal use this tool [here](https://www.paypal-engineering.com/2015/03/17/introducing-support/).\n## What's the difference between this Python project and similar ones?\n- Better URL route checking.\n- Better control of how the app initializes, e.g. ability to force middleware to load so even the first request is fast.\n- No global state. Explicit is better than implicit.\n- Lightweight. Lots of web servers try to solve every possible problem. This one keeps it simple.\n## \n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-09-10T04:10:18Z",
        "closed_at": "2019-12-04T00:25:13Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nA library that adds auto-update functionality to a PyInstaller compiled app.\r\n## What's the difference between this Python project and similar ones?\r\n\r\nSo far PyUpdater is the only library that supports PyInstaller\r\n## \r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n\r\nEnables a PyInstaller compiled app to auto update itself with very minimal work from the developer.\r\n\r\n[PyUpdater Docs](https://www.pyupdater.org)",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-09-08T05:02:55Z",
        "closed_at": "2016-11-03T16:25:56Z",
        "merged_at": "2016-11-03T16:25:56Z",
        "body": "Append a database for lazy people.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-09-08T04:10:51Z",
        "closed_at": "2019-11-06T15:36:51Z",
        "merged_at": null,
        "body": "## What is this Python project?\n\nFlast-restplus \n## What's the difference between this Python project and similar ones?\n\nIts like flask-restful but it provides swagger docs and isn't tied to an ORM\n## \n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-09-08T00:26:28Z",
        "closed_at": "2019-10-31T20:04:50Z",
        "merged_at": null,
        "body": "## What is this Python project?\n\nnetaddr\n\n```\nThis is a really handy module that I have used several times over the past few years. It simplifies\nipv4/ipv6 address manipulation in addition to other things like subnet calculations etc.\n```\n\npyodbc\n\n```\nThis is a very handy module that simplifies a variety of database connections/interactions\n over ODBC.  It implements the PEP 249 Python Database API Specification.\n```\n## What's the difference between this Python project and similar ones?\n\nEnumerate comparisons.\n\nnetaddr\n\n```\nRight now there isn't any library listed that simplify IP address manipulation.  I've used this library\nto determine if the http requests have come from Gmail proxy servers when adding linked images\nin email messages (HTML).\n```\n\npyodbc\n\n```\nMany of the database modules are specific to a certain technology.  Pyodbc works with a variety\nof database technologies via different ODBC drivers.  I have used it for SQL Server, and MySQL in\nthe past.\n```\n## \n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-09-06T10:22:43Z",
        "closed_at": "2017-08-22T06:30:39Z",
        "merged_at": null,
        "body": "## What is this Python project?\n\nA tiny tool to create standard python project, especially Falcon and Flask\n## What's the difference between this Python project and similar ones?\n\nActually I didn't see any kind of tool to do the same thing, so I create this project. Inspired by `Pastescript`, I use the feature of template to create a standard WSGI project and add some DevOp features to easily deploy your project.\n## \n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-08-28T12:26:03Z",
        "closed_at": "2016-09-13T06:36:56Z",
        "merged_at": "2016-09-13T06:36:56Z",
        "body": "## What is this Python project?\n\nSeaborn is a Python visualization library based on matplotlib. It provides a high-level interface for drawing attractive statistical graphics.\n## What's the difference between this Python project and similar ones?\n- Several built-in themes that improve on the default matplotlib aesthetics\n- Tools for choosing color palettes to make beautiful plots that reveal patterns in your data\n- Functions for visualizing univariate and bivariate distributions or for comparing them between subsets of data\n- Tools that fit and visualize linear regression models for different kinds of independent and dependent variables\n- Functions that visualize matrices of data and use clustering algorithms to discover structure in those matrices\n- A function to plot statistical timeseries data with flexible estimation and representation of uncertainty around the estimate\n- High-level abstractions for structuring grids of plots that let you easily build complex visualizations\n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-08-28T05:08:51Z",
        "closed_at": "2019-11-06T15:36:45Z",
        "merged_at": null,
        "body": "Mention that it is pure Python.\n\n---\n\n README.md | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-08-28T05:06:04Z",
        "closed_at": "2019-11-06T15:36:46Z",
        "merged_at": null,
        "body": "---\n\n README.md | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2016-08-28T05:00:58Z",
        "closed_at": "2019-11-06T15:36:48Z",
        "merged_at": null,
        "body": "---\n\n README.md | 4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-08-28T04:59:37Z",
        "closed_at": "2019-11-06T15:36:49Z",
        "merged_at": null,
        "body": "Envelopes deals with outgoing mails.\n\n---\n\n README.md | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-08-28T04:53:59Z",
        "closed_at": "2019-11-06T15:36:49Z",
        "merged_at": null,
        "body": "Beaker supports session caching, while dogpile.cache not.\n\n---\n\n README.md | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-08-26T13:43:57Z",
        "closed_at": "2019-11-06T15:36:43Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-08-25T10:38:50Z",
        "closed_at": "2019-11-06T15:36:44Z",
        "merged_at": null,
        "body": "## What is this Python project?\n\nInjector is a dependency injection framework for Python. \n## What's the difference between this Python project and similar ones?\n- Injector is maintained unlike most of the other DI framework for Python\n- Provides scopes (e.g. `@singleton`) which restrict the lifetime of your dependencies. You can also implement your own scopes, suitable for your problem.\n- Easy to configure, and has several ways of providing dependencies, so you can choose the most suitable one for your problem\n- Exploits Python 3 type annotations which makes injection syntax natural and removes a lot of boilerplate, you just have to annotate the constructor\n## \n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-08-24T13:52:04Z",
        "closed_at": "2019-11-06T15:36:42Z",
        "merged_at": null,
        "body": "## What is this Python project?\n\nRepository management and code collaboration platform for Git, SVN, and Mercurial.\n## What's the difference between this Python project and similar ones?\n\nRhodeCode uses [Pyramid Web Framework](https://trypyramid.com/) and has no performance issues handling large code repositories. RhodeCode allows for _unified_ user management since it supports multiple version control systems.\n## \n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-08-19T18:03:12Z",
        "closed_at": "2016-08-20T17:06:42Z",
        "merged_at": "2016-08-20T17:06:42Z",
        "body": "Fixed link for the Faker library\n\nCloses https://github.com/vinta/awesome-python/issues/700\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-08-19T11:50:48Z",
        "closed_at": "2018-10-12T10:48:24Z",
        "merged_at": null,
        "body": "Added three schema migration tools to a \"database migration\" section.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-08-18T20:11:40Z",
        "closed_at": "2019-11-06T15:36:41Z",
        "merged_at": null,
        "body": "## What is this Python project?\n- A very easy library to automate Windows GUI.\n- Comes with a tool called [SWAPY](https://github.com/pywinauto/SWAPY) to find GUI objects to automate (and generate some pywinauto code).\n## Why this framework/library/software/resource is awesome?\n\nVery easy to automate with, therefore coding the automation process is made quicker.\nSWAPY makes it even easier.\n## \n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-08-18T10:23:29Z",
        "closed_at": "2019-11-06T15:36:40Z",
        "merged_at": null,
        "body": "[Fakeredis](https://github.com/jamesls/fakeredis) makes it easy to unit test any project using the Redis client [redis-py](https://github.com/andymccurdy/redis-py), it simulates interacting with a Redis server so you don't have to manually mock calls and return values.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-08-17T16:12:16Z",
        "closed_at": "2019-11-06T18:36:33Z",
        "merged_at": null,
        "body": "## What is this Python project?\n\nTop layer to make authentication, resource ownership and permission management fast, simple and easy. In summary, Ziggurat Foundations is a set of framework agnostic set of sqlalchemy classes that help working with users,groups, permissions and resources together.\n\nZF has been used for very large implementations (millions of real users) and has been extended for custom applications such as geo-location applications that rely on pin-point accuracy for a users location. Zigg has been designed to work for high end environments, where the user(s) are at the main focus of the application (for example ZF could become the backbone for a social media style application).\n## What's the difference between this Python project and similar ones?\n\nThere are no maintained cross-framework solutions based on sqlalchemy that solve this problem with mixins.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-08-16T15:04:25Z",
        "closed_at": "2016-10-21T04:31:52Z",
        "merged_at": "2016-10-21T04:31:52Z",
        "body": "## Why this framework/library/software/resource is awesome?\n\nPendulum aims at making Python datetimes easy. It fixes the flaw of the existing libraries (especially Arrow) while providing a more explicit API. Here are some examples:\n\n``` python\nimport pendulum\n\nnow = pendulum.now('Europe/Paris')\n\n# Changing timezone\nnow.in_timezone('America/Toronto')\n\n# Default support for common datetime formats\nnow.to_iso8601_string()\n\n# Shifting time\nnow.add(days=2)\n```\n\nIt improves the native `timedelta` type:\n\n```\nit = pendulum.interval(days=15)\n\n# More properties\nit.weeks\nit.hours\n\n# Handy methods\nit.in_hours()\n360\nit.in_words(locale='en_us')\n'2 weeks 1 day'\n```\n\nIt brings its own `Period` class, which is a datetime-ware `timedelta`:\n\n``` python\ndt1 = pendulum.now()\ndt2 = dt1.add(days=3)\n\n# A period is the difference between 2 instances\nperiod = dt2 - dt1\n\nperiod.in_weekdays()\nperiod.in_weekend_days()\n\n# A period is iterable\nfor dt in period:\n    print(dt)\n```\n\nAnd finally, it improves timezones manipulation by handling normalization properly and shifting time around DST transition time:\n\n``` python\nimport pendulum\n\npendulum.create(2013, 3, 31, 2, 30, 0, 0, 'Europe/Paris')\n#2:30 for the 31th of March 2013 does not exist\n# so pendulum will return the actual time which is 3:30+02:00\n'2013-03-31T03:30:00+02:00'\n\nin_utc = pendulum.create(2013, 3, 31, 0, 59, 59, 999999)\ntz = pendulum.timezone('Europe/Paris')\nin_paris = tz.convert(in_utc)\n'2013-03-31T01:59:59.999999+01:00'\n\n# Shifting time\nin_paris = in_paris.add(microseconds=1)\n'2013-03-31T03:00:00+02:00'\nin_paris.subtract(microseconds=1)\n'2013-03-31T01:59:59.999999+01:00'\n```\n\nFor the rest you can check out the official documentation: https://pendulum.eustace.io/docs/\n## \n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-08-15T17:38:08Z",
        "closed_at": "2017-03-15T15:46:27Z",
        "merged_at": null,
        "body": "## Why this framework/library/software/resource is awesome?\n\nMakes spinning up a microservice in aws lambda practically feel native. Handles the creation of aws api gateways better than any of the serverless frameworks I've used previously. Feels just like Flask.\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-08-15T09:51:18Z",
        "closed_at": "2017-10-01T16:22:05Z",
        "merged_at": "2017-10-01T16:22:05Z",
        "body": "## Why this framework/library/software/resource is awesome?\n\nNAPALM (Network Automation and Programmability Abstraction Layer with Multivendor support) is a Python library that implements a set of functions to interact with different router vendor devices using a unified API. \n\nMore at: https://github.com/napalm-automation/napalm\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-08-15T01:02:08Z",
        "closed_at": "2019-11-29T23:56:00Z",
        "merged_at": null,
        "body": "## Why this framework/library/software/resource is awesome?\n\nObjectPath is an advanced query language for JSON and Python's nested structures based on Lists and Dicts. It's used by thousands of Python programmers and helps scientists in understanding and transforming complex data.\n\nMore at http://objectpath.org/\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-08-07T20:04:59Z",
        "closed_at": "2019-11-06T15:36:38Z",
        "merged_at": null,
        "body": "## Why this framework/library/software/resource is awesome?\n\nDjango module to easily send emails/push/sms/tts using django templates stored on database.\nFrom box you can use it with django-celery for send background messages.\nAlso you have opportunity to create reports from logs by mail categories and slug.\nGroups with Recipients and send by model signal also available by default.\nCan be used without any depends from programming language as a external service.\nThat app very simple to install and use on your projects.\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-08-07T19:51:12Z",
        "closed_at": "2019-11-06T15:36:39Z",
        "merged_at": null,
        "body": "## Why this framework/library/software/resource is awesome?\n\nMatterBot - A chat bot for MatterMost (http://www.mattermost.org). \n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-08-02T23:35:59Z",
        "closed_at": "2019-11-06T15:36:35Z",
        "merged_at": null,
        "body": "Added a reference to Pluralsight's Python courses.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-07-25T13:48:57Z",
        "closed_at": "2017-06-03T17:30:22Z",
        "merged_at": null,
        "body": "## Why this framework/library/software/resource is awesome?\n\nReally handy tool to run your scripts in virtual envs or to try a new library\n## Vote for this pull request\n\n@facundobatista\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-07-23T05:04:25Z",
        "closed_at": "2019-11-06T15:36:34Z",
        "merged_at": null,
        "body": "## Why this framework/library/software/resource is awesome?\n\nRethinkDB is the first open-source, scalable JSON database built from the ground up for the realtime web. It inverts the traditional database architecture by exposing an exciting new access model \u2013 instead of polling for changes, the developer can tell RethinkDB to continuously push updated query results to applications in realtime. RethinkDB\u2019s realtime push architecture dramatically reduces the time and effort necessary to build scalable realtime apps.\n\nI don't see any reason why this shouldn't be on the list.\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-07-22T15:42:30Z",
        "closed_at": "2019-11-06T15:36:36Z",
        "merged_at": null,
        "body": "## Why this framework/library/software/resource is awesome?\n\nA few sentences describing the reason.\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n\nAdded PythonVSCode to \"Plugins for editors and IDEs\"\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-07-20T02:57:26Z",
        "closed_at": "2016-07-20T07:04:18Z",
        "merged_at": "2016-07-20T07:04:18Z",
        "body": "fix 404 \n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-07-19T14:23:15Z",
        "closed_at": "2019-11-06T15:36:37Z",
        "merged_at": null,
        "body": "## Why this framework/library/software/resource is awesome?\n\n[Awesome] imbalanced-learn is part of [scikit-learn-contrib](https://github.com/scikit-learn-contrib), fully compatible with scikit-learn, and provides several techniques for handling imbalanced data, including under sampling, over sampling, and ensembling.\n\nOn the (github page)[https://github.com/scikit-learn-contrib/imbalanced-learn] it has (to this date):\n- 359 Stargazers\n- 125 Forks\n- 30 Watchers\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-07-18T16:19:52Z",
        "closed_at": "2019-11-06T19:36:50Z",
        "merged_at": null,
        "body": "## Why this framework/library/software/resource is awesome?\n\nConnexion is awesome because it's a free and open-source framework on top of Flask that automagically handles HTTP requests based on OpenAPI 2.0 Specification (formerly known as Swagger Spec) of your API described in YAML format. Connexion allows you to write a Swagger specification, then maps the endpoints to your Python functions; this makes it unique, as many tools generate the specification based on your Python code. It has 262 stars and 28 contributors as of this writing, and the creator of the Swagger spec has talked about it at at least one conference. \nA few sentences describing the reason.\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-07-18T15:43:45Z",
        "closed_at": "2019-11-06T19:36:48Z",
        "merged_at": null,
        "body": "## Why this framework/library/software/resource is awesome?\n\nA few sentences describing the reason.\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n\nExpAn is awesome because it's a free and open-source A/B testing tool used in production by data scientists. It can be useful to data scientists working in companies or academia.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2016-07-11T21:53:26Z",
        "closed_at": "2019-11-06T16:36:59Z",
        "merged_at": null,
        "body": "## Why this framework/library/software/resource is awesome?\n\nA few sentences describing the reason.\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-07-08T09:38:39Z",
        "closed_at": "2019-11-06T16:37:00Z",
        "merged_at": null,
        "body": "## Why this framework/library/software/resource is awesome?\n\n[pymorphy2](https://github.com/kmike/pymorphy2) is a morphological analyzer and generator for\nRussian and Ukrainian languages. It uses large efficiently encoded lexicons\nbuilt from OpenCorpora and LanguageTool data. A set of linguistically\nmotivated rules is developed to enable morphological analysis and\ngeneration of out-of-vocabulary words observed in real-world documents.\nFor Russian pymorphy2 provides state-of-the-arts morphological analysis\nquality. The analyzer is implemented in Python programming language\nwith optional C++ extensions. Emphasis is put on ease of use, documentation\nand extensibility. The package is distributed under a permissive\nopen-source license, encouraging its use in both academic and commercial\nsetting.\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n\nMorphological analyzer / inflection engine for Russian and Ukrainian languages\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-07-07T23:47:16Z",
        "closed_at": "2016-08-20T17:08:01Z",
        "merged_at": "2016-08-20T17:08:01Z",
        "body": "## Why this framework/library/software/resource is awesome?\n\nUltra is fast implementation of asyncio event loop on top of libuv.\n\nhttp://magic.io/blog/uvloop-blazing-fast-python-networking/\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n\nUltra fast implementation of asyncio event loop on top of libuv.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-07-05T19:18:26Z",
        "closed_at": "2019-11-06T03:32:08Z",
        "merged_at": null,
        "body": "## Why this framework/library/software/resource is awesome?\n\nMahotas is a library of fast computer vision algorithms (all implemented in C++) operates over numpy arrays for convenience. Since, it operates over numpy array, it is very useful in implementing in Machine Learning framework like SciKit Learn.\n## Vote for this pull request\n\n+1\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-07-05T07:15:59Z",
        "closed_at": "2019-11-06T16:36:58Z",
        "merged_at": null,
        "body": "## Why this framework/library/software/resource is awesome?\n### Pyan:\n\nThis library is one of the first call-graph tools and is still maintained. More information:\nhttp://stackoverflow.com/a/34905687\n\nA few sentences describing the reason.\n\nDescriptions by author:\n1) https://ejrh.wordpress.com/2011/12/23/call-graphs-in-python/\n2) https://ejrh.wordpress.com/2012/01/31/call-graphs-in-python-part-2/\n3) https://ejrh.wordpress.com/2012/08/18/coloured-call-graphs/\nImprovements:\n1) https://yousource.it.jyu.fi/jjrandom2/miniprojects/trees/master/refactoring\n\n<!-- Reviewable:start -->\n\n---\n\nThis change is [<img src=\"https://reviewable.io/review_button.svg\" height=\"34\" align=\"absmiddle\" alt=\"Reviewable\"/>](https://reviewable.io/reviews/vinta/awesome-python/676)\n\n<!-- Reviewable:end -->\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-07-01T21:51:03Z",
        "closed_at": "2018-09-17T15:23:09Z",
        "merged_at": null,
        "body": "## Why this framework/library/software/resource is awesome?\n- This is programmable zipcode database support very advanced filter, sort: http://pythonhosted.org/uszipcode/index.html#advance-search\n- It provides fuzzy city, state name search: http://pythonhosted.org/uszipcode/index.html#search-by-city-and-state\n- Up-to-date dataset, merged from google geocoding, census, federal government, rich properties are available. http://pythonhosted.org/uszipcode/index.html#welcome-to-uszipcode-documentation\n- Other zipcode library in Python `zipcode`, `pyzipcode` is either hard to use and low quality data.\n## Vote for this pull request\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-07-01T15:45:29Z",
        "closed_at": "2019-11-06T16:37:01Z",
        "merged_at": null,
        "body": "## Why this framework/library/software/resource is awesome?\n\nAn OpenStack project that injects some useful and sensible default behaviors into your setuptools run.\n\nThe name (_Python Build Reasonableness_) describes it well. It makes your setuptools config declarative, manages versioning via git tags, generates AUTHORS and CHANGELOG files from git log, picks up requirements.txt as dependencies, [etc](http://docs.openstack.org/developer/pbr/#what-it-does).\nVery useful as a one-stop solution to packaging-related things; an alternative to combining multiple other projects (such as `setuptools_scm` + sh scripts interfacing with git + ...).\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-06-28T19:17:19Z",
        "closed_at": "2019-11-06T19:36:47Z",
        "merged_at": null,
        "body": "Ultimate Python snippet solution for Vim\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-06-28T08:41:51Z",
        "closed_at": "2016-06-29T08:54:06Z",
        "merged_at": "2016-06-29T08:54:06Z",
        "body": "## Why this framework/library/software/resource is awesome?\n\nA library that simplifies the extraction of datasets from XML content.\n\nXML is a simple markup format. Whilst simple, extracting data of interest is often more complicated than it needs to be.\n\nxmldataset addresses this through an easy to use plaintext declaration that follows the structure of the XML document. The declaration is indented, matching the XML structure, the data we are interested in is tagged against a dataset.\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n\nTo 'Libraries for working with HTML and XML'\n\nhttps://xmldataset.readthedocs.io\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-06-27T14:55:39Z",
        "closed_at": "2016-10-03T14:35:07Z",
        "merged_at": null,
        "body": "## Why this framework/library/software/resource is awesome?\n\nIt is another Python podcast but this time about testing.\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-06-23T21:43:23Z",
        "closed_at": "2016-06-24T14:29:37Z",
        "merged_at": "2016-06-24T14:29:37Z",
        "body": "## Why this framework/library/software/resource is awesome?\n\nThese two podcasts are an awesome source of weekly information.\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-06-20T05:19:05Z",
        "closed_at": "2018-07-05T03:04:08Z",
        "merged_at": null,
        "body": "## Why this framework/library/software/resource is awesome?\n\nA few sentences describing the reason.\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-06-19T18:20:03Z",
        "closed_at": "2019-07-17T22:05:17Z",
        "merged_at": null,
        "body": "## Why this framework/library/software/resource is awesome?\n\npyuv is a Python interface to libuv, a high-performance, portable library for asynchronous network communications and more. libuv is the platform layer for the well known [NodeJS](https://nodejs.org/).\n\npyuv implements the following features:\n- Asynchronous TCP\n- UDP\n- Named pipes\n- Asynchronous DNS resolver\n- Timers\n- Running operations in a ThreadPool\n- Async handle\n- Prepare, idle and check handles\n- Signal handle\n- System memory information\n- System load information\n- Getting executable path\n- Asynchronous filesystem operations (stat, lstat)\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-06-19T07:44:16Z",
        "closed_at": "2016-06-20T12:17:06Z",
        "merged_at": "2016-06-20T12:17:05Z",
        "body": "Fix a link\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-06-17T19:16:47Z",
        "closed_at": "2017-08-10T00:31:15Z",
        "merged_at": null,
        "body": "## Why this framework/library/software/resource is awesome?\n\nThis PR proposes a new section called VUI for Voice User Interface technologies related to Amazon Echo, Apple Siri, Google Home, and the like.\n\nThis PR also proposes adding Flask-Ask to that section. Flask-Ask is a framework for developing Alexa Skills on the Amazon Echo. \n- Flask-Ask made front page on HackerNews Jun 10, 2016. Well received in comments. https://news.ycombinator.com/item?id=11871554\n- Flask-Ask made front page on Reddit's /r/Python. Not many comments. May 10, 2016. https://www.reddit.com/comments/4k972p\n- Full Sphinx documentation for Flask-Ask is available at https://johnwheeler.org/flask-ask\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-06-17T09:36:41Z",
        "closed_at": "2017-09-06T06:43:28Z",
        "merged_at": null,
        "body": "## Why this framework/library/software/resource is awesome?\n\nHTTPie and python-prompt-toolkit alone are already awesome. HTTP Prompt combines the two. Double awesomeness!\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-06-17T03:36:50Z",
        "closed_at": "2019-05-27T12:31:18Z",
        "merged_at": null,
        "body": "## Why this framework/library/software/resource is awesome?\n\nAdd a progress meter to your loops in a second\n\nClosing issue #648 Add tqdm \n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n\nNew library added \n",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-06-16T03:45:36Z",
        "closed_at": "2019-11-06T16:36:57Z",
        "merged_at": null,
        "body": "## Why this framework/library/software/resource is awesome?\n\nAgent-based modeling is very useful for researchers to create and simulate models of all types, this can helps to do experience based on agents theory, and Mesa is the first framework in python that allows agent-based modeling.\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n\nA new category was added for agent-based modeling in Python3 which is new.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-06-15T11:36:22Z",
        "closed_at": "2016-11-24T08:45:31Z",
        "merged_at": null,
        "body": "## Why this framework/library/software/resource is awesome?\n\nMicroPython is a very small (ten times smaller) implementation of a large subset of Python3 language, which works everywhere from modest microcontroller systems (16K RAM, 128K ROM) to normal desktop systems (where it still offers benefits of a smaller size, faster startup time, better self-containment).\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n\nTODO: There actually should be a separate section \"Alternative\nImplementations\" for things like PyPy, Stackless Python, MicroPython,\netc.\n",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-06-07T16:33:34Z",
        "closed_at": "2016-06-07T18:03:30Z",
        "merged_at": null,
        "body": "## Why this framework/library/software/resource is awesome?\n\nA few sentences describing the reason.\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-06-07T16:30:27Z",
        "closed_at": "2016-06-07T18:03:30Z",
        "merged_at": null,
        "body": "Chris, I added the code you asked me to. \nPC\n## Why this framework/library/software/resource is awesome?\n\nA few sentences describing the reason.\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-06-07T10:30:59Z",
        "closed_at": "2016-09-13T06:37:39Z",
        "merged_at": null,
        "body": "## Why this framework/library/software/resource is awesome?\n\nMost Python Visualization tools are not good-looking. However, Seaborn is the most beautiful data visualization library I ever seen in Python, almost as good as d3.js. The APIs are well designed for developers to create informative and attractive statistical graphs.\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-06-04T11:27:20Z",
        "closed_at": "2019-11-30T03:56:00Z",
        "merged_at": null,
        "body": "## Why this framework/library/software/resource is awesome?\n\nI think it is a best web framework with most reusability, configurability, and replaceability.\n## Vote for this pull request\n\n@vinta \ncc @limodou\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-06-03T20:35:44Z",
        "closed_at": "2019-11-06T16:36:56Z",
        "merged_at": null,
        "body": "## Why this framework/library/software/resource is awesome?\n\nSpecifically intended for handling large text collections, using efficient online, incremental algorithms.\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-05-29T21:40:30Z",
        "closed_at": "2019-11-06T16:36:55Z",
        "merged_at": null,
        "body": "An open source financial library to backtest trading strategies,\nplot charts, seamlessly download market data, analyse market patterns\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-05-28T22:52:43Z",
        "closed_at": "2019-11-06T16:36:54Z",
        "merged_at": null,
        "body": "",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-05-24T21:30:45Z",
        "closed_at": "2017-02-15T07:40:52Z",
        "merged_at": null,
        "body": "## Why this framework/library/software/resource is awesome?\n\nWith this library you can make an cli-application with interactive command line user interfaces like in [Yeoman](http://yeoman.io/)\nFor example:\n![alt text](https://raw.githubusercontent.com/lk-geimfari/kolkrabba/master/screenshots/initer-interactive.png)\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-05-24T15:15:14Z",
        "closed_at": "2019-11-06T16:36:52Z",
        "merged_at": null,
        "body": "## Why this framework/library/software/resource is awesome?\n\nPla helps you automate workflows in a very simple way. You only have to define your commands in a yaml-file.\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-05-21T07:15:39Z",
        "closed_at": "2016-05-21T11:58:50Z",
        "merged_at": "2016-05-21T11:58:50Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-05-19T14:38:14Z",
        "closed_at": "2019-11-06T19:36:49Z",
        "merged_at": null,
        "body": "## Why this framework/library/software/resource is awesome?\n\nAdded NSenter under DevOps tools. It's awesome because it is free/open-source, makes entering Linux kernel namespaces simple and is open to contributions.\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-05-18T03:10:29Z",
        "closed_at": "2017-12-11T01:58:24Z",
        "merged_at": null,
        "body": "## captcha\n\nA captcha library that generates audio and image CAPTCHAs.\n## python-ldap\n\nProvides an object-oriented API to access LDAP directory servers from Python programs\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-05-17T10:54:11Z",
        "closed_at": "2019-11-06T16:36:53Z",
        "merged_at": null,
        "body": "## Why this framework/library/software/resource is awesome?\n\n[Dryscrape](https://github.com/niklasb/dryscrape) is a lightweight Python library that uses Webkit to enable easy scraping of dynamic, Javascript-heavy web pages.\nIt supports browsing JavaScript web pages! That's why it's awesome!\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-05-16T16:52:57Z",
        "closed_at": "2016-05-17T05:57:34Z",
        "merged_at": "2016-05-17T05:57:34Z",
        "body": "## Why this framework/library/software/resource is awesome?\n\nThe easiest and most popular chatbot to implement ChatOps in Python.\nVery gentle learning curve but very powerful once you start to master\nthe tool (conversation flows, security, markdown formatting and\ntemplate, ...). It comes with developer friendly text and graphical\nconsoles to debug your plugins easily.\n\nIt is compatible out of the box with Slack, Hipchat, XMPP, IRC and lot\nmore. But you can also extend it easily to support a custom chat system.\n\nAlready 300+ public plugins are available !\nCheck out the list here: https://github.com/errbotio/errbot/wiki\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-05-16T08:50:08Z",
        "closed_at": "2016-06-07T18:04:37Z",
        "merged_at": null,
        "body": "Updated README.md file\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-05-15T20:44:19Z",
        "closed_at": "2019-11-06T16:36:49Z",
        "merged_at": null,
        "body": "## Why this framework/library/software/resource is awesome?\n\n`aeries` allows you to view your grades directly from your desktop with this application without having to log onto the Aeries website and navigate the confusing portal. Note: This only works for students whose schools use the Aeries Student Information System by Eagle Software.\n\n<img src=\"http://i.imgur.com/crRFbSQ.png\">\n<img src=\"http://i.imgur.com/FXQIZJ9.png\">\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-05-15T14:34:25Z",
        "closed_at": "2019-11-06T19:36:46Z",
        "merged_at": null,
        "body": "## Why this framework/library/software/resource is awesome?\n\nBecause you can search, start, pause, go next/prev and play songs from your terminal.  \n\nIn action:\n![Image of terminal](http://i.imgur.com/1n4UP60.gif)\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-05-15T01:56:26Z",
        "closed_at": "2019-11-06T19:36:45Z",
        "merged_at": null,
        "body": "## Why this framework/library/software/resource is awesome?\n\n![](http://i.imgur.com/0SXZ90y.gif)\n### Git and GitHub Autocompleter with Interactive Help\n\n`gitsome` provides direct integration with GitHub.  It also autocompletes:\n- Git commands\n- Git options\n- Git branches, tags, etc\n- [Git-Extras commands](https://github.com/tj/git-extras/blob/master/Commands.md)\n- [GitHub integration commands](https://github.com/donnemartin/gitsome/blob/master/COMMANDS.md)\n- Shell commands\n- Files and directories\n- Environment variables\n- Man pages\n- Python (REPL included)\n\n![Imgur](http://i.imgur.com/sG09AJH.png)\n\n![Imgur](http://i.imgur.com/08OMNjz.png)\n\n![Imgur](http://i.imgur.com/fHjMwlh.png)\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-05-13T09:27:05Z",
        "closed_at": "2019-11-06T16:36:51Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-05-04T11:17:27Z",
        "closed_at": "2016-06-12T11:58:32Z",
        "merged_at": null,
        "body": "## Why this framework/library/software/resource is awesome?\n\nDependency Injector is a Python dependency injection framework. It was designed to be unified, developer-friendly tool for managing any kind of Python objects and their dependencies in formal, pretty way.\n\nDependency Injector framework key features are:\n- Easy, smart, pythonic style.\n- Obvious, clear structure.\n- Extensibility and flexibility.\n- Memory efficiency.\n- Thread safety.\n- Documentation.\n- Semantic versioning.\n\nFew links:\n- PyPi - https://pypi.python.org/pypi/dependency_injector\n- Documentation - http://python-dependency-injector.ets-labs.org/en/stable/\n- One of the most extensive examples - https://github.com/ets-labs/python-dependency-injector/tree/master/examples/miniapps/movie_lister\n- And its description in docs - http://python-dependency-injector.ets-labs.org/en/stable/examples/movie_lister.html\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-05-03T01:47:49Z",
        "closed_at": "2019-11-06T16:36:50Z",
        "merged_at": null,
        "body": "## Why this framework/library/software/resource is awesome?\n\npybluez is awesome python library to access system bluetooth resources. Supports Windows / linux and all versions of python 2.3 + including python 3.x.\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-04-30T11:18:57Z",
        "closed_at": "2019-11-06T16:36:44Z",
        "merged_at": null,
        "body": "## Why this framework/library/software/resource is awesome?\n\n![68747470733a2f2f7261772e6769746875622e636f6d2f746f6e792f76637370756c6c2f6d61737465722f646f632f5f7374617469632f76637370756c6c2d64656d6f2e676966](https://cloud.githubusercontent.com/assets/26336/14935567/c33bd274-0e9b-11e6-8565-b3f8aabb5c84.gif)\n- Supports synchronizing git, svn and mercurial repositories\n- Makes it easy to restore project layouts on newly formatted systems\n- Makes it easy to see updates to your favorite open source projects. Type `vcspull` in the morning to grab all the latest code\n- Supports adding git remotes (upstream repo + your fork)\n- Declaratively set your projects via JSON or YAML configuration ([Example configurations](https://vcspull.readthedocs.io/en/latest/examples.html))\n- Supports Python 2.7, 3.3+\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-04-30T11:11:42Z",
        "closed_at": "2019-11-06T16:36:46Z",
        "merged_at": null,
        "body": "## Why this software + library is awesome?\n\n![68747470733a2f2f7261772e6769746875622e636f6d2f746f6e792f746d7578702f6d61737465722f646f632f5f7374617469632f746d7578702d64656d6f2e676966](https://cloud.githubusercontent.com/assets/26336/14935573/d52b86aa-0e9b-11e6-9682-276a11592842.gif)\n- load and [tmux](https://tmux.github.io/) sessions via JSON/YAML configuration (like [teamocil](https://github.com/remiprev/teamocil) and [tmuxinator](https://github.com/tmuxinator/tmuxinator))\n- manage tmux servers, sessions, windows and panes live via [Python API](https://tmuxp.readthedocs.io/en/latest/api.html) (see [quickstart](https://tmuxp.readthedocs.io/en/latest/quickstart_python.html))\n- lots of [examples](https://tmuxp.readthedocs.io/en/latest/examples.html)\n- Extensive [documentation](https://tmuxp.readthedocs.io/en/latest/index.html)\n- Compatible with Python 2.6+, 3.3+\n- Supports tmux 1.8, 1.9a, 2.0, 2.1\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-04-30T10:57:38Z",
        "closed_at": "2019-11-06T16:36:47Z",
        "merged_at": null,
        "body": "## Why this library is awesome?\n- Works with JSON, YAML, INI, python dicts and python objects\n- Permissively licensed (BSD)\n- Its relatively mature (turning 3 years old in May 2016)\n- Packaged on [FreeBSD](http://portsmon.freebsd.org/portoverview.py?category=devel&portname=py-kaptan) and [ArchLinux](https://aur.archlinux.org/packages/python-kaptan/)\n- Well-documented [with many examples](https://github.com/emre/kaptan/blob/master/README.rst)\n- Used as a dependency in production software [tmuxp](https://github.com/tony/tmuxp)\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-04-29T15:26:52Z",
        "closed_at": "2019-11-06T18:36:35Z",
        "merged_at": null,
        "body": "## Why this framework/library/software/resource is awesome?\n\nQuick.py is a property-based testing library based on type annotations. The library shows an interesting approach how to use type annotation for writing random value generators and ensure in properties and behaviors of your code. It's fully compatible with unit-tests library and nose/pytest test runners. \n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-04-26T20:14:41Z",
        "closed_at": "2019-11-06T19:36:44Z",
        "merged_at": null,
        "body": "## Why this framework/library/software/resource is awesome?\n\nBiggest plus that this format is language-independent, more details: https://blog.rstudio.org/2016/03/29/feather/\n\nA few sentences describing the reason.\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-04-26T08:13:37Z",
        "closed_at": "2017-02-28T20:54:14Z",
        "merged_at": null,
        "body": "- [pywinauto](https://github.com/pywinauto/pywinauto) is a very pythonic Windows GUI automation library having native windows/controls manipulation functionality (that PyAutoGUI doesn't have for now). UI Automation API support is on the way.\n- [pyatom](https://github.com/pyatom/pyatom) is a quite popular GUI automation library for OS X.\n- [AppVeyor](https://ci.appveyor.com) is the most popular Windows CI service, well-supported and free for open source projects.\n- [Landscape.io](https://landscape.io) is one more very popular Code Health check tool that is missed in the list somehow.\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-04-26T06:00:21Z",
        "closed_at": "2019-11-06T16:36:48Z",
        "merged_at": null,
        "body": "add Oracle driver\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-04-25T11:36:31Z",
        "closed_at": "2016-11-11T06:03:02Z",
        "merged_at": null,
        "body": "Added links to 2 graph databases. \n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-04-24T06:39:44Z",
        "closed_at": "2019-11-06T19:36:43Z",
        "merged_at": null,
        "body": "## Why this framework/library/software/resource is awesome?\n- Great way to acquire open source thermodynamical data.\n- Pure and pseudo-pure fluid equations of state and transport properties for 118 components (and mixtures).\n- Highest accuracy psychrometric routines.\n- Optional: Call NIST REFPROP proprietary database (If available)\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2016-04-21T22:01:11Z",
        "closed_at": "2019-11-06T16:36:45Z",
        "merged_at": null,
        "body": "## Why this framework/library/software/resource is awesome?\n\nRxPY is pretty sweet. You get all the benefits of reactive programming in Python, namely:\n- Asynchronous data streams with observables\n- LINQ-style query operators\n- Schedulers for modular streams\n\nIn short, it gives you the ability to program in a declarative style utilizing composition, as opposed to an imperative style utilizing inheritance. \n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2016-04-21T04:55:40Z",
        "closed_at": "2016-04-21T06:35:05Z",
        "merged_at": "2016-04-21T06:35:05Z",
        "body": "## Why this framework/library/software/resource is awesome?\n- Provides built-in language independent checking routines (named bears in coala).\n- You can easily write your own checks.\n- Provides user-friendly interfaces like json, formatted and interactive output in the CLI. Plugins for various editors are available as well.\n- Manages parallelizing the checking-routines without you having to worry.\n- Unifies interfaces for various checking routines.\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-04-19T17:38:16Z",
        "closed_at": "2019-11-06T16:36:43Z",
        "merged_at": null,
        "body": "## Why this framework/library/software/resource is awesome?\n\nThis IDE is awesome because it is an powerful open source IDE. This IDE is easy to use. Available for all the platforms.\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2016-04-19T08:26:08Z",
        "closed_at": "2017-12-05T21:38:11Z",
        "merged_at": null,
        "body": "## Why is PyPrinter is awesome?\n\nPyPrinter provides a very easy and quick way to print with colors, which is great for any command-line or interpreter based Python app (or script). It also supports unicode letters printing, recursive indentation support, and automatic wrapping based on the window size.\nIt is written in pure-python, so installing it is easy as well!\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1336,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-04-19T00:39:30Z",
        "closed_at": "2019-11-06T16:36:42Z",
        "merged_at": null,
        "body": "Added a separate file that is a complete clone of the original README.md file, adding the number of stars as well as last pushed date for each GitHub repositories included in the curated list. The date was collected through GitHub API (just now). And I can update the file regularly or as needed.\n\nLet me know if you find it interesting. Thanks!\n\nView the file directly at:\nhttps://github.com/chaconnewu/awesome-python/blob/master/awesome_python_with_repo_info.md \n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2016-04-18T18:20:10Z",
        "closed_at": "2016-04-29T15:24:17Z",
        "merged_at": null,
        "body": "## Why this framework/library/software/resource is awesome?\n\nQuick.py is a property-based testing library based on type annotations. The library shows an interesting approach how to use type annotation for writing random value generators and ensure in properties and behaviors of your code. It's fully compatible with unit-tests library and nose/pytest test runners. \n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-04-17T15:21:09Z",
        "closed_at": "2019-11-06T16:36:37Z",
        "merged_at": null,
        "body": "## Why this framework/library/software/resource is awesome?\n\nDeep Learning library for Python. ConvNets, recurrent neural networks, and more. Runs on Theano and TensorFlow. http://keras.io/\n\nKeras is a minimalist, highly modular neural networks library, written in Python and capable of running on top of either TensorFlow or Theano. It was developed with a focus on enabling fast experimentation. Being able to go from idea to result with the least possible delay is key to doing good research.\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-04-17T15:07:10Z",
        "closed_at": "2019-11-06T16:36:40Z",
        "merged_at": null,
        "body": "## Why this framework/library/software/resource is awesome?\n\nDeep learning library featuring a higher-level API for TensorFlow. http://tflearn.org.\nI think **tflearn** was on the homepage of HackerNews, recently.\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-04-17T14:49:01Z",
        "closed_at": "2019-11-06T16:36:41Z",
        "merged_at": null,
        "body": "## Why this framework/library/software/resource is awesome?\n\nSimple and rapid application development framework, built on top of Flask. includes detailed security, auto CRUD generation for your models, google charts and much more.\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-04-17T14:26:36Z",
        "closed_at": "2019-11-06T16:36:39Z",
        "merged_at": null,
        "body": "## Why this framework/library/software/resource is awesome?\n\nJavascript for refined palates: a Python 3 to ES6 Javascript translator. \n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-04-16T17:39:03Z",
        "closed_at": "2019-11-06T16:36:38Z",
        "merged_at": null,
        "body": "## Why this framework/library/software/resource is awesome?\n\nEasy to use Python library for creating 2D arcade games.\nThis one was suggested to me on Reddit, when I presented to the community there python.libhunt.com. \n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-04-14T14:26:43Z",
        "closed_at": "2019-11-06T19:36:42Z",
        "merged_at": null,
        "body": "This also fixes the Travis CI build \n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-04-14T11:42:26Z",
        "closed_at": "2017-09-14T05:58:41Z",
        "merged_at": null,
        "body": "## Why this framework/library/software/resource is awesome?\n\nPolyglot is a pretty standard NLP pipeline, but its awesomeness is due to the fact that it supports hundreds of different languages. It also does morphology, and has a pretty darn good probabilistic language detection algorithm.\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-04-14T09:09:52Z",
        "closed_at": "2019-11-06T16:36:35Z",
        "merged_at": null,
        "body": "### Why this framework/library/software/resource is awesome?\n\nThis script makes it easier to batch download lecture resources (e.g., videos, ppt, etc) for Coursera classes.\n### Who agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-04-13T18:27:25Z",
        "closed_at": "2016-04-18T06:38:17Z",
        "merged_at": "2016-04-18T06:38:17Z",
        "body": "## Why this framework/library/software/resource is awesome?\n\nhug is the fastest growing framework for microservices on Python3 and as such clearly deserves placement on this list.\n## Vote for this pull request\n\n+1\n\nAdds hug, the fastest growing micro-service framework for Python\n",
        "comments": 16
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-04-13T11:40:42Z",
        "closed_at": "2019-11-06T16:36:34Z",
        "merged_at": null,
        "body": "## Why this framework/library/software/resource is awesome?\n\nYou don't need to request web site headers manually or look into the page sources to see what framework or library was used to create the website.\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-04-13T09:17:55Z",
        "closed_at": "2016-04-14T11:37:16Z",
        "merged_at": null,
        "body": "Added an entry in NLP for polyglot, which have support for hundreds of language for most of its features, and boasts a particularly good language detection module.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-04-13T06:32:39Z",
        "closed_at": "2017-06-27T09:01:12Z",
        "merged_at": null,
        "body": "## Why this framework/library/software/resource is awesome?\n\nSlash is a complex testing framework enabling developers to customize it into their own in-house infrastructure. \n\nIt leverages several concepts found in other frameworks (e.g. fixtures and assertion rewriting from py.test) and adds a robust plugin mechanism, configuration and logging management, consistent session states and error handling, as well as reporting to a centralized result collection service (Backslash)\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-04-12T22:47:28Z",
        "closed_at": "2019-11-06T16:36:36Z",
        "merged_at": null,
        "body": "## Why this framework/library/software/resource is awesome?\n\nIt provides a way to write CLIs that can also be interactive (and thus have great tab completion).  There is a fairly nice layout library too for doing dynamically sized tables in a terminal with good unicode and vt100 support.\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n\nAdd my library to the list.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-04-12T22:20:43Z",
        "closed_at": "2017-09-17T00:47:24Z",
        "merged_at": null,
        "body": "## Why this framework/library/software/resource is awesome?\n\nMNE-python is pretty comprehensive library for data analysis and visualization for electrophysiology data in neuroscience. Electroencephalograpy (EEG), Magnetoencephalography (MEG), and Electrocorticography (ECoG) are a large part of the field of cognitive neuroscience. This package is the most comprehensive collection of tools in python to analyze these types of data. Check out their website [here](http://martinos.org/mne/stable/index.html).\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-04-12T11:48:09Z",
        "closed_at": "2017-05-15T10:28:17Z",
        "merged_at": null,
        "body": "## Why this framework/library/software/resource is awesome?\n\nCaravel's main goal is to make it easy to slice, dice and visualize data. It empowers users to perform analytics at the speed of thought.\n\n![caravel](https://camo.githubusercontent.com/47e9ca019ba596a4255f2ff7b6b81ee7689b67e9/687474703a2f2f692e696d6775722e636f6d2f4a5262546e54782e706e67)\n\nIt supports many-many data sources and really easy to use.\n\n![caravel](https://camo.githubusercontent.com/c5ff4a221adfd6331d0f20582dfc8ed4933e1bb2/687474703a2f2f692e696d6775722e636f6d2f4d41465a5474552e706e67)\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-04-12T11:32:50Z",
        "closed_at": "2019-10-31T14:41:08Z",
        "merged_at": null,
        "body": "## Why this framework/library/software/resource is awesome?\n\nPython for everyone.\n\n\"Everyone should learn to code, but not everyone needs to become a software engineer or computer scientist. Automate the Boring Stuff with Python is written for office workers, students, administrators, and anyone who uses a computer to learn how to code small, practical programs to automate tasks on their computer.\" -- from this website\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-04-10T17:43:56Z",
        "closed_at": "2019-11-06T17:36:50Z",
        "merged_at": null,
        "body": "## Why this framework/library/software/resource is awesome?\n\n[Directree](https://github.com/shreydesai/directree) is a lightweight application that recursively identifies the files and folders in your path. You can view your folder structures on the console or export them to a `txt` file for inclusion in a GitHub project. It's **super** easy to use and always open for contributions.\n\n<img src=\"http://i.imgur.com/EcDqnZx.png\">\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-04-04T19:39:23Z",
        "closed_at": "2018-04-02T14:58:47Z",
        "merged_at": null,
        "body": "## Why this framework/library/software/resource is awesome?\n\nIt enables patching Django's user model Manager or QuerySet with a fast in-memory equivalent, to make testing easier and unit tests more concise/maintainable.\n\nFeatures:\n- QuerySet style support for method chaining\n- Filtering with Q objects\n- Aggregates generation\n- CRUD functions\n- Field lookups\n- django-rest-framework serializer asserts\n\n[Info & examples](https://github.com/stphivos/django-mock-queries)\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-04-02T17:28:10Z",
        "closed_at": "2016-04-02T18:47:11Z",
        "merged_at": "2016-04-02T18:47:11Z",
        "body": "Yesterday Armin Ronacher aka mitsuhiko announced the creation of Pallets project: \"a Github organization which will be the home of Flask and all the associated projects\". \n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-04-02T16:03:17Z",
        "closed_at": "2019-11-06T19:36:41Z",
        "merged_at": null,
        "body": "## Why this framework/library/software/resource is awesome?\n\nThis specific REPL is available for all major platforms (Linux, OS X, Windows) and provides nice features, such as:\n- Features automatic completion of attributes and file names.\n- Automatically displays function arguments and documentation.\n- Keeps your recent results in the result history, for later use.\n- Can automatically fold long outputs, so you can concentrate on what's important.\n- Lets you save the history of the session as an HTML file, for future reference. You can then load the history file into DreamPie, and quickly redo previous commands.\n- Automatically adds parentheses and optionally quotes when you press space after functions and methods. For example, type execfile fn and get execfile(\"fn\").\n- Supports interactive plotting with matplotlib.\n- Supports virtually all Python implementations: 2.5+, 3.1+, Jython, IronPython and PyPy.\n- Extremely fast and responsive.\n\n(Taken from the official DreamPie website http://www.dreampie.org/)\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-03-29T17:22:22Z",
        "closed_at": "2016-06-23T21:36:09Z",
        "merged_at": null,
        "body": "## Why this framework/library/software/resource is awesome?\n\nThey comply with the Resources section aim: _where to discover new Python libraries_. The two podcasts have a high quality and have a complete year of sustained weekly episodes.\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-03-29T16:22:23Z",
        "closed_at": "2019-11-06T17:36:49Z",
        "merged_at": null,
        "body": "Simply put, diff-so-fancy makes your git diffs beautiful and easy on eyes.  \n\n![](https://cloud.githubusercontent.com/assets/39191/13622719/7cc7c54c-e555-11e5-86c4-7045d91af041.png)\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-03-27T10:09:10Z",
        "closed_at": "2019-11-06T19:36:39Z",
        "merged_at": null,
        "body": "## Why this library is awesome?\n\n[Sciter](http://sciter.com) is an embeddable multiplatform HTML/CSS/script engine with GPU accelerated rendering designed to render modern desktop application UI. It's a compact, single dll/dylib/so file (4-8 mb), engine without any additional dependencies.\n\nSciter has bindings for C++, Delphi, D, Go, .NET, Python and Rust languages.\n\nThis one allows you easily create the multiplatform desktop GUI with HTML/CSS and writing application logic at Python.\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-03-26T23:16:20Z",
        "closed_at": "2016-04-07T09:12:44Z",
        "merged_at": "2016-04-07T09:12:44Z",
        "body": "## Why this framework/library/software/resource is awesome?\n\n[`try`](https://github.com/timofurrer/try) makes it very easy to try out python packages.\nIt will automatically create a virtual environment and launch a python interpreter with the already imported package. It supports PyPI and GitHub including pulling different versions of the package into different python version environments.\nIn addition to that there is the option to fire up an editor instead of an interpreter.\n\n... It's never been easier to try out python packages!\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-03-25T17:28:19Z",
        "closed_at": "2016-03-25T18:29:32Z",
        "merged_at": "2016-03-25T18:29:32Z",
        "body": "## Why this framework/library/software/resource is awesome?\n\nDiskCache is awesome for many reasons:\n- Django-compatible cache backend replaces the essentially broken filebased cache backend that ships in Django core. Read more [details and benchmarks](http://www.grantjenks.com/docs/diskcache/djangocache-benchmarks.html).\n- [Cache benchmark comparison](http://www.grantjenks.com/docs/diskcache/cache-benchmarks.html) shows key lookups are faster than memcached and redis.\n- Built atop SQLite and the file system, it's thread-safe and multiprocess-safe.\n- Supports multiple eviction policies including least-recently-used, least-frequently-used, and least-recently-stored.\n- Supports \"tag\" metadata and eviction by \"tag\".\n- 100% test coverage and hours of heavy stress in production.\n- Fully documented with benchmark comparisons.\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n\nAdded DiskCache reference under Caching.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-03-22T12:57:48Z",
        "closed_at": "2019-11-06T19:36:38Z",
        "merged_at": null,
        "body": "## Why this library is awesome?\n\nProviding several communication patterns, it aims to make the networking layer fast, scalable, and easy to use. Implemented in C, it works on a wide range of operating systems with no further dependencies.\n\nIt supports following communication modes:\n- PAIR - simple one-to-one communication\n- BUS - simple many-to-many communication\n- REQREP - allows to build clusters of stateless services to process user requests\n- PUBSUB - distributes messages to large sets of interested subscribers\n- PIPELINE - aggregates messages from multiple sources and load balances them among many destinations\n- SURVEY - allows to query state of multiple applications in a single go\n\nAlso it works for:\n- in-process\n- IPC\n- over tcp\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-03-20T09:21:43Z",
        "closed_at": "2016-03-20T12:57:32Z",
        "merged_at": "2016-03-20T12:57:32Z",
        "body": "It is awesome and you know. It is used by most projects.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-03-19T12:25:16Z",
        "closed_at": "2016-03-20T16:56:34Z",
        "merged_at": "2016-03-20T16:56:34Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-03-19T11:38:46Z",
        "closed_at": "2019-11-06T16:36:33Z",
        "merged_at": null,
        "body": "Add [Pomp](https://github.com/estin/pomp) to web-crawling section\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-03-16T13:13:29Z",
        "closed_at": "2016-03-16T15:44:58Z",
        "merged_at": "2016-03-16T15:44:58Z",
        "body": "Also fix Travis build :white_check_mark: \n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-03-16T02:40:53Z",
        "closed_at": "2019-10-31T04:48:21Z",
        "merged_at": null,
        "body": "Fast, simple packet creation / parsing, with definitions for the basic\nTCP/IP protocols.\n\nSigned-off-by: Peng Xiao xiaoquwl@gmail.com\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-03-13T19:18:10Z",
        "closed_at": "2016-03-14T01:09:12Z",
        "merged_at": null,
        "body": "Updated Readme.md. Added a section for challenge sites. Added Kaggle in that section.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-03-07T06:10:14Z",
        "closed_at": "2019-11-06T17:37:01Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-03-07T06:04:54Z",
        "closed_at": "2019-11-06T17:37:00Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-03-07T05:46:51Z",
        "closed_at": "2019-11-06T17:36:58Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-03-06T19:42:01Z",
        "closed_at": "2016-06-11T07:22:24Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-02-29T19:40:31Z",
        "closed_at": "2019-11-06T17:36:57Z",
        "merged_at": null,
        "body": "Was lost in a86340dd1a8e8cf86866cb44d3c10cded4d63f7f\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-02-21T00:42:11Z",
        "closed_at": "2019-11-06T19:36:37Z",
        "merged_at": null,
        "body": "lightweight, language-independent software stack with an associated code generation mechanism for RPC\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-02-18T14:14:59Z",
        "closed_at": "2019-11-06T17:36:59Z",
        "merged_at": null,
        "body": "I'd like to suggest the addition of my `little_pger` library, as a very simple way to build Postgres queries using plain data structures:\n\nhttps://github.com/cjauvin/little_pger\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-02-16T18:55:38Z",
        "closed_at": "2016-02-16T21:11:02Z",
        "merged_at": "2016-02-16T21:11:02Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-02-13T22:52:21Z",
        "closed_at": "2019-11-06T19:36:40Z",
        "merged_at": null,
        "body": "Records is awesome because it provides a simple API for running raw SQL and integrates with Tablib ... and it has a bonus CLI! And it's from @kennethreitz so you know it's good!\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-02-13T22:49:42Z",
        "closed_at": "2019-11-06T19:36:36Z",
        "merged_at": null,
        "body": "The `sql` library is awesome because it makes the basic Postgres.py API available for any DB-API 2.0-compliant database driver!\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-02-13T22:44:56Z",
        "closed_at": "2019-11-06T19:36:35Z",
        "merged_at": null,
        "body": "Postgres.py is awesome because it's well-designed, well-tested, well-documented, portable between Python 2 and 3, and proven in production on Gratipay. Write SQL and map the return types to Python objects!\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-02-11T22:21:35Z",
        "closed_at": "2019-11-06T17:36:56Z",
        "merged_at": null,
        "body": "",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2016-02-11T21:16:09Z",
        "closed_at": "2016-02-12T19:14:17Z",
        "merged_at": "2016-02-12T19:14:17Z",
        "body": "Caught from Travis.\n\nhttps://travis-ci.org/vinta/awesome-python/builds/108621195#L842\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-02-11T21:07:49Z",
        "closed_at": "2016-03-20T13:17:42Z",
        "merged_at": "2016-03-20T13:17:42Z",
        "body": "NIPY is a set of libraries for working with neuroimaging data, including standard algorithms and data structures for fMRI, DTI, EEG, MEG, and other modalities.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-02-09T12:56:03Z",
        "closed_at": "2019-11-06T19:36:33Z",
        "merged_at": null,
        "body": "Placed at the end of the list to respect any sorting method that might be in place. Probably better placed near the `pip` entry.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-02-08T17:27:15Z",
        "closed_at": "2018-12-21T08:16:36Z",
        "merged_at": null,
        "body": "Watson is a CLI to track your time. Pretty neat :)\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-02-07T19:42:53Z",
        "closed_at": "2019-11-06T19:36:34Z",
        "merged_at": null,
        "body": "Really nice package which allows very simple creation of Python packages in the wheel format, which then upload directly to PyPi.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-02-07T07:41:29Z",
        "closed_at": "2019-11-06T17:36:54Z",
        "merged_at": null,
        "body": "subj\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-02-01T11:39:08Z",
        "closed_at": "2019-05-25T09:53:22Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-01-31T12:57:06Z",
        "closed_at": "2019-01-21T21:18:10Z",
        "merged_at": null,
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-01-27T16:40:28Z",
        "closed_at": "2016-01-28T03:55:05Z",
        "merged_at": "2016-01-28T03:55:05Z",
        "body": "This is a postgres client that does auto-completion and syntax highlighting.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-01-26T12:04:34Z",
        "closed_at": "2016-01-26T13:33:27Z",
        "merged_at": "2016-01-26T13:33:27Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-01-22T22:07:34Z",
        "closed_at": "2017-01-19T06:29:21Z",
        "merged_at": "2017-01-19T06:29:21Z",
        "body": "Orator is a brand new ORM for Python following the ActiveRecord pattern with a pinch of magic in it.\n\nIts main goal is simplicity and to be really easy to read and write with useful features out of the box (relationships decorators, timestampable models, soft deletes, protection against mass assigment, model events, caching).\n\nAn example of a simple model:\n\n``` python\nfrom orator import Model\n\n\nclass User(Model):\n\n    __fillable__ = ['name', 'email']\n\n    @has_many\n    def posts(self):\n        return Post\n```\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-01-16T04:36:49Z",
        "closed_at": "2019-11-06T17:36:55Z",
        "merged_at": null,
        "body": "`sqlite3` is a small lightweight database that is used on local storage devices during development phase. it doesn't handle many requests at a time so it is not fit for deployment, but awesome for testing for developers. Why isn't it mentioned here!\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-01-15T23:40:26Z",
        "closed_at": "2017-04-12T16:48:04Z",
        "merged_at": null,
        "body": "",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-01-13T20:47:08Z",
        "closed_at": "2017-07-27T07:02:29Z",
        "merged_at": null,
        "body": "> loxun is a Python module to write large output in XML using unicode and\n> namespaces.\n> For more information, visit http://pypi.python.org/pypi/loxun/\n\nAwesome library to write large XML files, I test it with file larger than 1Gb and works like a charm\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-01-11T15:27:44Z",
        "closed_at": "2017-03-22T15:32:22Z",
        "merged_at": null,
        "body": "[hustcc/wrapcache](https://github.com/hustcc/wrapcache) is a simple and easy-usage cache system based on python decorator, supported lru, redis and memcached.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-01-07T18:34:14Z",
        "closed_at": "2019-11-06T17:36:53Z",
        "merged_at": null,
        "body": "I use petl every day for ETL.  I have no affiliation with the project other than being a very happy user.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-12-29T19:27:53Z",
        "closed_at": "2017-01-07T06:18:52Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-12-24T15:05:59Z",
        "closed_at": "2017-01-07T06:18:52Z",
        "merged_at": null,
        "body": "ispy is a python tool for monitoring the output of terminals and\nprocesses.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-12-22T02:53:55Z",
        "closed_at": "2017-01-07T06:18:52Z",
        "merged_at": null,
        "body": "",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-12-21T21:16:28Z",
        "closed_at": "2017-01-07T06:18:52Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-12-19T22:45:04Z",
        "closed_at": "2017-01-07T06:18:52Z",
        "merged_at": null,
        "body": "I have used Yowsup a couple of times, it is well written and useful.  \nAlso Sample project, guides and docs helped me get started in half an hour, I think it has a place on the awesome python list.  \n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 80,
        "deletions": 73,
        "changed_files": 2,
        "created_at": "2015-12-19T14:30:32Z",
        "closed_at": "2015-12-20T01:49:52Z",
        "merged_at": "2015-12-20T01:49:52Z",
        "body": "Fixes #532\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-12-18T09:58:20Z",
        "closed_at": "2016-03-13T11:38:52Z",
        "merged_at": null,
        "body": "@vinta Added korean nlp\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-12-17T16:16:44Z",
        "closed_at": "2017-01-07T06:18:52Z",
        "merged_at": null,
        "body": "The Weboob project is a mature scraping project with capabilities for banking sites, video viewing sites, public transport info, etc. It comes with a number of plugins for actual sites and usable client apps for the aforementioned capabilities.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-12-17T10:22:01Z",
        "closed_at": "2015-12-18T09:50:51Z",
        "merged_at": "2015-12-18T09:50:51Z",
        "body": "@vinta Added one library as you said\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-12-17T07:35:50Z",
        "closed_at": "2015-12-20T01:19:28Z",
        "merged_at": null,
        "body": "- mycli is a very handy MySQL terminal client with autocompletion and syntax highlighting.\n- ultramysql is yet another mysql driver.\n",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-12-17T07:35:47Z",
        "closed_at": "2017-01-07T06:18:52Z",
        "merged_at": null,
        "body": "Pygrok is a python library to parse strings and extract information from structured/unstructured data.It's a implementation of jordansissel's grok regular expression library.\n\nWith pygrok, you can easily:\n-    parsing and matching patterns in a string(log, message etc.)\n-    relieving from complex regular expressions.\n-    extracting information from structured/unstructured data\n## Getting Started\n\n``` Python\n>>> import pygrok\n>>> text = 'gary is male, 25 years old and weighs 68.5 kilograms'\n>>> pattern = '%{WORD:name} is %{WORD:gender}, %{NUMBER:age} years old and weighs %{NUMBER:weight} kilograms'\n>>> print pygrok.grok_match(text, pattern)\n{'gender': 'male', 'age': '25', 'name': 'gary', 'weight': '68.5'}\n```\n\nPretty Cool !\nSome of the pattern you can use are listed here:\n\n```\n`WORD` means \\b\\w+\\b in regular expression.\n`NUMBER` means (?:%{BASE10NUM})\n`BASE10NUM` means (?<![0-9.+-])(?>[+-]?(?:(?:[0-9]+(?:\\.[0-9]+)?)|(?:\\.[0-9]+)))\n\nother patterns such as `IP`, `HOSTNAME`, `URIPATH`, `DATE`, `TIMESTAMP_ISO8601`, `COMMONAPACHELOG`..\n```\n\nSee All patterns [here](https://github.com/garyelephant/pygrok/blob/master/pygrok/patterns/grok-patterns).\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 15,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-12-15T16:58:44Z",
        "closed_at": "2015-12-17T10:18:05Z",
        "merged_at": null,
        "body": "@vinta Added few libraries in Machine learning,Data analysis and Visualization and Natural Language processing\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-12-13T15:04:34Z",
        "closed_at": "2015-12-13T19:09:43Z",
        "merged_at": null,
        "body": "I have been using this since a few months now. This is super easy to use and gives amazing recommendations. Free for open source projects and one free private repository. It has an autofix option as well! It you choose to autofix, it will create a new pull request. Isn't this amazing.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-12-11T09:12:27Z",
        "closed_at": "2017-01-07T06:18:52Z",
        "merged_at": null,
        "body": "I think it's the best ORM for neo4j database\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-12-10T01:48:26Z",
        "closed_at": "2015-12-13T07:24:49Z",
        "merged_at": "2015-12-13T07:24:49Z",
        "body": "Add [howdoi](https://github.com/gleitz/howdoi) - Instant coding answers via the command line.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-12-03T21:29:22Z",
        "closed_at": "2017-01-07T06:18:52Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-11-30T22:39:29Z",
        "closed_at": "2017-01-07T06:18:52Z",
        "merged_at": null,
        "body": "radish is awesome because it provides additionally to all `gherkin` syntax feature and some other features like:\n- Scenario Preconditions\n- Scenario Loops\n- Constants\n- Expressions\n\nThese features are usually not implemented in other BDD tools which makes radish awesome and unique!\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-11-30T22:33:22Z",
        "closed_at": "2017-01-07T06:18:52Z",
        "merged_at": null,
        "body": "`sure` is an awesome testing library which provides powerful and flexible assertions.\n\nThis library is awesome because it monkey-patches all python objects with methods like `should` or `when` or `to`:\n\n``` python\nimport sure\n\n(2 + 2).should.be.equal(4)\n(3.4 + 4).should.eql(7.5)\n\n{'foo': 'bar'}.should.equal({'foo': 'bar'})\n{'foo': 'bar'}.should.have.key('foo').which.should.equal('bar')\n\nstep.run.when.called_with(some_id=1).should.return_value(Step.PASSED)\n```\n\nIt makes it really easy to use and the the test cases are super readable and maintainable.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2015-11-30T12:10:03Z",
        "closed_at": "2015-12-08T15:53:36Z",
        "merged_at": null,
        "body": "update from original\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-11-30T09:44:09Z",
        "closed_at": "2015-11-30T10:58:10Z",
        "merged_at": "2015-11-30T10:58:10Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-11-27T22:42:29Z",
        "closed_at": "2017-01-07T06:18:52Z",
        "merged_at": null,
        "body": "Imapy is an awesome library for dealing with Imap because it has:\n- simple and powerful syntax\n- features not present in any other lib\n- py2/3 support\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-11-26T17:16:09Z",
        "closed_at": "2015-11-29T15:32:53Z",
        "merged_at": "2015-11-29T15:32:53Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-11-20T13:48:03Z",
        "closed_at": "2015-11-20T18:31:40Z",
        "merged_at": "2015-11-20T18:31:40Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-11-18T09:39:58Z",
        "closed_at": "2017-01-07T06:18:52Z",
        "merged_at": null,
        "body": "One library that implements cache system for redis in Python.  It is for use\nwith web applications and Python scripts.  It comes with really handy apis\nfor easy drop-in use with common tasks, including caching decorators.  It\ncan be used to build a cache cluster which has a routing system that allows\nyou to automatically set cache on different servers, sharding can be really\neasy now.  You can use it to batch fetch multiple cache results back, for\na cluster, it even does the job in parallel, we fetch results from all servers\nconcurrently, which means much higher performance.\n\nIt uses the redis server, which is a in-memory key-value data structure\nserver.  It does not implement any other backends like filesystem and does not\nintend to do so.  Mostly we want to use a key-value server like redis, if you\nhave special needs, it is easy to write one cache decorator that stores\neverything in memory using a dict or you can check out other libraries.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-11-18T09:16:30Z",
        "closed_at": "2017-01-07T06:18:26Z",
        "merged_at": null,
        "body": " Ralph - Data center infrastructure management tool.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-11-17T21:39:51Z",
        "closed_at": "2015-11-18T05:15:08Z",
        "merged_at": "2015-11-18T05:15:08Z",
        "body": "solrpy was moved to GitHub by one of the owners of the project on Google Code\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-11-16T13:59:43Z",
        "closed_at": "2017-01-07T06:18:26Z",
        "merged_at": null,
        "body": "pgmpy is the only library in python for probabilistic graphical models  and has participated in gsoc for past 2 years . So I think we can add it.\n[pgmpy](http://pgmpy.org/)\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 46,
        "deletions": 46,
        "changed_files": 1,
        "created_at": "2015-11-13T20:39:45Z",
        "closed_at": "2015-11-16T06:35:01Z",
        "merged_at": "2015-11-16T06:35:01Z",
        "body": "Created with https://github.com/dkhamsing/frankenstein\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-11-12T17:03:20Z",
        "closed_at": "2017-01-07T06:18:26Z",
        "merged_at": null,
        "body": "Extension of the pdb, fully compatible with its predecessor, introduces a number of new features for nice debugging.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-11-08T15:46:41Z",
        "closed_at": "2016-03-20T15:40:24Z",
        "merged_at": "2016-03-20T15:40:24Z",
        "body": "I believe that [asciimatics](https://github.com/peterbrittain/asciimatics) is the terminal API that Python should have always had.  It is a more human way to program curses and also provides a drop-in replacement API for non-curses environments - all of which can be `pip` installed.\n\nIn more details, it provides a single, cross-platform API for all terminals/consoles with the following features: \n- Coloured/styled text - including 256 colours (terminal support permitting)\n- Cursor positioning\n- Keyboard input (without blocking or echoing)\n- Mouse input (terminal support permitting)\n- Detecting and handling when the console resizes\n- Screen scraping\n- Anti-aliased ASCII line-drawing\n- Image to ASCII conversion - including JPEG and GIF formats\n- Many animation effects - e.g. sprites, particle systems, banners, etc.\n\nIt has been proven to work on Windows, Linux and OSX and supports Python versions 2 and 3.  \n\nFor an idea of the sorts of things it can do, see the [gallery](https://github.com/peterbrittain/asciimatics/wiki).\n\nIt wasn't obvious to me whether this should be in the command-line tools or GUI section given that it straddles both.  I'd happily be guided by your views if you feel it is worth taking.\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-10-30T18:55:47Z",
        "closed_at": "2017-01-07T06:18:26Z",
        "merged_at": null,
        "body": "Awesome because it saves you lots of time when playing Capture The Flag (CTF) games.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-10-30T17:23:56Z",
        "closed_at": "2017-01-07T06:18:26Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-10-30T00:46:43Z",
        "closed_at": "2015-10-30T09:20:22Z",
        "merged_at": "2015-10-30T09:20:22Z",
        "body": "Tornado is mainly a web framework, not a networking library.\nChanged from old pull request where it was in both sections.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 124,
        "deletions": 122,
        "changed_files": 1,
        "created_at": "2015-10-29T21:45:04Z",
        "closed_at": "2017-01-07T06:18:26Z",
        "merged_at": null,
        "body": "Closes #382 \n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-10-29T21:11:40Z",
        "closed_at": "2017-01-07T06:18:26Z",
        "merged_at": null,
        "body": "Can turn a function into a command-line interface, saving code and effort\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-10-29T02:54:29Z",
        "closed_at": "2015-10-30T00:44:28Z",
        "merged_at": null,
        "body": "Tornado is more than a networking framework: it is a web framework and should be in the web framework section.\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-10-29T02:54:07Z",
        "closed_at": "2015-10-29T05:16:21Z",
        "merged_at": "2015-10-29T05:16:21Z",
        "body": "Tweaked the description of Pylint\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-10-24T13:50:38Z",
        "closed_at": "2017-01-07T06:18:26Z",
        "merged_at": null,
        "body": "Frog is an integration of memory-based natural language processing (NLP) modules developed for Dutch. All NLP modules are based on Timbl. Tokenisation is performed by ucto. Frog does PoS-tagging, lemmatisation, morphological analysis, dependency parsing, named-entity recognition, and shallow parsing, all for the Dutch language. This is the Python binding to Frog, enabling direct use of all functionality from Python.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-10-24T13:44:24Z",
        "closed_at": "2017-01-07T06:18:26Z",
        "merged_at": null,
        "body": "Colibri Core is software for the efficient modelling of n-grams and skipgram on large text corpora. It is  written in C++ but comes with a Python interface (through Cython). Python tutorials and documentation are available as well: http://proycon.github.io/colibri-core/ \n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-10-24T13:39:04Z",
        "closed_at": "2017-01-07T06:18:26Z",
        "merged_at": null,
        "body": "FoLiA-tools are CLI tools and Python libraries to work with documents in the FoLiA (Format for Linguistic Annotation) format. FoLiA is an XML-based file format capable of storing a wide variety of linguistic annotation types, see https://proycon.github.io/folia . FoLiA is used in the academic Natural Language Processing community by various large corpora, mainly in The Netherlands and Flanders.\n\nThe FoLiA-tools are part of the folia github repo, the actual FoLiA library is part of PyNLPl (https://github.com/proycon/pynlpl), which is a mandatory dependency. I therefore combined the two in this single pull request, I hope you don't mind. However, PyNLPl contains more than just a FoLiA library. It contains various specialised modules, such as for parsing other specialized formats (Moses, GIZA++), clients for interfacing with certain NLP servers, a module for handling Corpus Query Language, and generic functionality for text processing and basic corpus statistics.\n\nMy work on FoLiA & CLAM was awarded the CLARIN Young Scientist Award 2015 (last week).\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-10-24T13:24:20Z",
        "closed_at": "2017-01-07T06:18:26Z",
        "merged_at": null,
        "body": "CLAM (https://proycon.github.io/clam) is a high-level tool to quickly build RESTful webservices and web applications for command-line tools. The tools themselves can be considered black boxes. The webservice is RESTful, the interface for human end-users is entirely produced client-side (through XSLT). Various CLAM-based services by our university are available here: http://webservices-lst.science.ru.nl/\n\nThe webservices are suited for batch processing and large data, and are typically employed in Natural Language Processing settings. CLAM is build upon flask. A tutorial video is available here: https://www.youtube.com/watch?v=GyRvaO6omEo\n\nMy work on CLAM & FoLiA was awarded the CLARIN Young Scientist Award 2015 (last week).\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-10-24T13:16:37Z",
        "closed_at": "2017-01-07T06:18:26Z",
        "merged_at": null,
        "body": "Ucto is an advanced regular-expression based tokeniser and sentence splitter, with configurations for various languages, support for FoLiA XML. Ucto itself is written in C++, this is the Python binding to ucto.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-10-24T13:02:50Z",
        "closed_at": "2017-01-07T06:18:26Z",
        "merged_at": null,
        "body": "Added python-timbl, Python binding for Timbl (http://ilk.uvt.nl/timbl), a memory-based machine learning toolkit (kNN,IB1,IGTree) often used in Natural Language Processing and well-known in the academic community.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-10-21T03:16:17Z",
        "closed_at": "2017-01-07T06:18:25Z",
        "merged_at": null,
        "body": "I think it's the most advanced one now. And, of course, it is awesome ;)\n\nhttps://github.com/MagicStack/MagicPython\n\n<img width=\"761\" alt=\"68747470733a2f2f6d61676963737461636b2e6769746875622e696f2f4d61676963507974686f6e2f6578616d706c652e706e67\" src=\"https://cloud.githubusercontent.com/assets/239003/10626932/d6773eac-7781-11e5-82c6-fb3bc9093dbc.png\">\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2015-10-19T16:18:03Z",
        "closed_at": "2016-07-19T13:52:25Z",
        "merged_at": null,
        "body": "spaCy is an awesome NLP API. It is much faster than NLTK and, at least for my tests, was able to identify named entities with a better accuracy.\n\nbrew is an Multiple Classifier Systems API. At this time, there is no Dynamic Classifier Ensemble Selection API available in Python (except for brew), developed by me and some fellow researchers at UFPE. I believe it is worth mentioning specially for scientific/research purposes\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-10-19T15:49:18Z",
        "closed_at": "2016-02-01T15:34:10Z",
        "merged_at": null,
        "body": "Prettyconf allow developers split configurations from code as described in \"[The Twelve-Factor App](http://www.12factor.net)\" methodology . It's API compatible and highly inspired in the project python-decouple but it implementation is more extensible and flexible than the later.\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-10-19T14:29:41Z",
        "closed_at": "2017-01-07T06:18:25Z",
        "merged_at": null,
        "body": "In contrast to the Mock package, it provides a clear, expressive syntax and better safety guarantees to prevent API drift and to improve confidence in tests using doubles. It comes with drop-in support for test suites run by Pytest, Nose, or standard unittest.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-10-18T03:21:23Z",
        "closed_at": "2017-01-07T06:18:25Z",
        "merged_at": null,
        "body": "Continually updated Data Science Python Notebooks: Spark, Hadoop MapReduce, HDFS, AWS, Kaggle, scikit-learn, matplotlib, pandas, NumPy, SciPy, and various command lines.\n\n<br/>\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/data-science-ipython-notebooks/master/images/README_1200x800.gif\">\n</p>\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-10-18T03:02:56Z",
        "closed_at": "2017-01-07T06:18:25Z",
        "merged_at": null,
        "body": "<br/>\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/interactive-coding-challenges/master/images/cover_challenge.gif\">\n</p>\n\n# interactive-coding-challenges\n\n**Continually updated, interactive and test-driven coding challenges**.\n\nChallenges focus on **algorithms** and **data structures** that are typically found in **coding interviews** or **coding competitions**.\n\nEach challenge has one or more reference solutions that are:\n- Fully functional\n- Unit tested\n- Easy-to-understand\n\nChallenges will soon provide on-demand [incremental hints](https://github.com/donnemartin/interactive-coding-challenges/issues/22) to help you arrive at the optimal solution.\n\nNotebooks also detail:\n- Constraints\n- Test cases\n- Algorithms\n- Big-O time and space complexities\n## Challenge Solutions\n\n<br/>\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/interactive-coding-challenges/master/images/cover_solution.gif\">\n</p>\n\n<br/>\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-10-18T02:55:56Z",
        "closed_at": "2015-10-19T07:10:03Z",
        "merged_at": "2015-10-19T07:10:03Z",
        "body": "![](http://i.imgur.com/vzC5zmA.gif)\n\n`SAWS` aims to **supercharge** the AWS CLI with features focusing on:\n- **Improving ease-of-use**\n- **Increasing productivity**\n\nUnder the hood, `SAWS` is **powered by the AWS CLI** and supports the **same commands** and **command structure**.\n\n`SAWS` and `AWS CLI` Usage:\n\n```\naws <command> <subcommand> [parameters] [options]\n```\n\n`SAWS` features:\n- Auto-completion of:\n  - Commands\n  - Subcommands\n  - Options\n- Auto-completion of resources:\n  - Bucket names\n  - Instance ids\n  - Instance tags\n  - [More coming soon!](%28#todo-add-more-resources%29)\n- Customizable shortcuts\n- Fuzzy completion of resources and shortcuts\n- Syntax and output highlighting\n- Execution of shell commands\n- Command history\n- Contextual help\n- Toolbar options\n\n`SAWS` is available for Mac, Linux, Unix, and [Windows](#windows-support).\n\n![](http://i.imgur.com/Eo12q9T.png)\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-10-16T17:54:40Z",
        "closed_at": "2017-01-07T06:18:25Z",
        "merged_at": null,
        "body": "",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-10-16T17:51:58Z",
        "closed_at": "2017-01-07T06:18:25Z",
        "merged_at": null,
        "body": "Becoming more popular, shares similarities with RoR's orm.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-10-16T17:30:14Z",
        "closed_at": "2017-01-07T06:18:25Z",
        "merged_at": null,
        "body": "Gearman is popular Job server for distributed application development. http://gearman.org/\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-10-16T08:00:04Z",
        "closed_at": "2015-12-03T05:44:36Z",
        "merged_at": null,
        "body": "Podcasts are also a valuable resource! :)\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-10-15T22:19:30Z",
        "closed_at": "2015-10-16T06:51:13Z",
        "merged_at": "2015-10-16T06:51:13Z",
        "body": "Awesome because it comes with useful tools such as methods for making hinton diagrams\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-10-13T18:28:56Z",
        "closed_at": "2015-10-16T06:51:55Z",
        "merged_at": "2015-10-16T06:51:55Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-10-10T20:41:13Z",
        "closed_at": "2017-01-07T06:18:25Z",
        "merged_at": null,
        "body": "Added [ramses](https://ramses.readthedocs.org/en/stable/) to the restful apis section, because it is a really useful project that allows one to create a restful api just by specifying a yaml file in the RAML format.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-10-10T18:54:50Z",
        "closed_at": "2015-11-21T19:53:25Z",
        "merged_at": null,
        "body": "Many of the \"Selenium official\" users writes own helpers in order to hiding low-level details of using Selenium API. SST provides many of such [helpers/actions](http://testutils.org/sst/actions.html) ensuring clean, simple and uniform API across all projects.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2015-10-09T13:32:13Z",
        "closed_at": "2016-01-27T16:37:58Z",
        "merged_at": null,
        "body": "https://github.com/rubik/radon\n\nI found this package in this [reddit discussion](https://www.reddit.com/r/Python/comments/3nctlm/what_python_tools_should_i_be_using_on_every/cvn6tdv).\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-10-08T13:11:28Z",
        "closed_at": "2016-03-07T07:51:04Z",
        "merged_at": "2016-03-07T07:51:04Z",
        "body": "",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 53,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-10-08T08:11:28Z",
        "closed_at": "2017-01-07T06:18:25Z",
        "merged_at": null,
        "body": "",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-10-07T21:03:30Z",
        "closed_at": "2015-10-08T02:18:54Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-10-06T12:48:32Z",
        "closed_at": "2017-01-07T06:18:25Z",
        "merged_at": null,
        "body": "Adding joe, the .gitignore magician,  to the Command-line Productivity\nTools section.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-10-05T09:41:02Z",
        "closed_at": "2017-01-07T06:18:24Z",
        "merged_at": null,
        "body": "This kind of library is not presented in the list. I didn't find it here when I need it, so I thought it would be helpful for other developers. Many people are not aware of all capabilities of standard library, including me.\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-09-28T13:34:54Z",
        "closed_at": "2015-09-29T18:53:53Z",
        "merged_at": "2015-09-29T18:53:53Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-09-28T13:20:10Z",
        "closed_at": "2015-10-03T08:45:52Z",
        "merged_at": "2015-10-03T08:45:52Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-09-27T14:59:24Z",
        "closed_at": "2015-10-19T16:14:12Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-09-26T17:55:35Z",
        "closed_at": "2017-01-07T06:18:24Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-09-26T16:01:26Z",
        "closed_at": "2016-05-06T12:48:59Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-09-23T02:52:30Z",
        "closed_at": "2015-09-23T03:56:32Z",
        "merged_at": "2015-09-23T03:56:32Z",
        "body": "mingus is an advanced, cross-platform music theory and notation package for Python with MIDI file and playback support. It can be used to play around with music theory, to build editors, educational tools and other applications that need to process and/or play music. It can also be used to create sheet music with LilyPond.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-09-18T18:12:40Z",
        "closed_at": "2015-09-19T10:56:00Z",
        "merged_at": "2015-09-19T10:56:00Z",
        "body": "[SortedContainers](http://www.grantjenks.com/docs/sortedcontainers/) is a fast, pure-Python implementation of SortedList, SortedDict and SortedSet types. The package includes complete documentation, 100% code coverage with days of stress testing, and [extensive benchmarks](http://www.grantjenks.com/docs/sortedcontainers/performance.html).\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-09-18T08:42:37Z",
        "closed_at": "2015-09-18T09:47:14Z",
        "merged_at": "2015-09-18T09:47:14Z",
        "body": "Hi,\n\nThank you for this awesome and useful list!\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-09-15T17:48:27Z",
        "closed_at": "2017-01-07T06:17:47Z",
        "merged_at": null,
        "body": "This library is not much known but I have used it in my work and is quite useful.\n\n> DEAP is a novel evolutionary computation framework for rapid prototyping and testing of ideas. It seeks to make algorithms explicit and data structures transparent.\n\nAlso PythonXY has moved to GitHub and I added seaborn.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-09-11T16:00:02Z",
        "closed_at": "2015-09-26T14:01:07Z",
        "merged_at": "2015-09-26T14:01:07Z",
        "body": "Tryton and its related project are useful for people that want to do business related python development.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-09-11T15:32:08Z",
        "closed_at": "2016-02-11T19:40:13Z",
        "merged_at": null,
        "body": "Two widely used tools in functional neuroimaging.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-09-10T13:15:44Z",
        "closed_at": "2015-10-03T08:49:19Z",
        "merged_at": "2015-10-03T08:49:19Z",
        "body": "https://github.com/nvie/pip-tools\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 18,
        "deletions": 11,
        "changed_files": 1,
        "created_at": "2015-09-09T18:10:30Z",
        "closed_at": "2017-01-07T06:17:47Z",
        "merged_at": null,
        "body": "- CSV: add unicodecsv and csvstudio\n- Tabular data: add rows, messytables and pdftables\n- NLP: add pypln\n- Fix missing dots\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-09-07T08:37:31Z",
        "closed_at": "2017-01-07T06:17:47Z",
        "merged_at": null,
        "body": "I used this library in a project recently.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-09-05T08:10:19Z",
        "closed_at": "2017-01-07T06:17:47Z",
        "merged_at": null,
        "body": "New library (spaCy) added under Natural Language Processing section.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2015-09-03T08:33:15Z",
        "closed_at": "2017-01-07T06:17:47Z",
        "merged_at": null,
        "body": "Suggestion to add link to [Python Packaging User Guide](https://python-packaging-user-guide.readthedocs.org/en/latest/).\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-09-01T19:35:32Z",
        "closed_at": "2017-01-07T06:17:47Z",
        "merged_at": null,
        "body": "A custom lightweight logging library with email notifications.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-08-31T11:00:35Z",
        "closed_at": "2017-01-07T06:17:47Z",
        "merged_at": null,
        "body": "\u20262 projects\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-08-28T01:26:39Z",
        "closed_at": "2015-08-31T16:14:34Z",
        "merged_at": "2015-08-31T16:14:34Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-08-27T01:45:41Z",
        "closed_at": "2015-09-03T12:18:02Z",
        "merged_at": "2015-09-03T12:18:02Z",
        "body": "Add this section, because it's very important part of modern development.\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-08-22T05:50:47Z",
        "closed_at": "2015-08-31T17:43:26Z",
        "merged_at": "2015-08-31T17:43:26Z",
        "body": "Thanks for the great list!\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-08-17T04:37:42Z",
        "closed_at": "2017-01-07T06:17:47Z",
        "merged_at": null,
        "body": "In response to #405\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-08-14T12:47:00Z",
        "closed_at": "2015-08-14T14:47:02Z",
        "merged_at": "2015-08-14T14:47:02Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-08-13T15:55:22Z",
        "closed_at": "2017-01-07T06:17:47Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-08-12T07:27:26Z",
        "closed_at": "2017-01-07T06:17:47Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-08-11T02:41:19Z",
        "closed_at": "2015-08-31T17:45:06Z",
        "merged_at": "2015-08-31T17:45:06Z",
        "body": "[PyAutoGUI](https://github.com/asweigart/pyautogui) - \nA cross-platform GUI automation Python module for human beings. Used to programmatically control the mouse & keyboard. Eventually it would be great to offer the same type of features that [Sikuli](http://www.sikuli.org) offers.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-08-07T08:24:49Z",
        "closed_at": "2015-08-31T17:44:19Z",
        "merged_at": "2015-08-31T17:44:19Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 12,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-08-03T14:22:09Z",
        "closed_at": "2016-10-06T17:25:14Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-08-01T12:31:50Z",
        "closed_at": "2017-01-07T06:17:47Z",
        "merged_at": null,
        "body": "**yagmail** -- Easy mail sending by doing all the magic for you (attachments, html, passwordless scripts).\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-08-01T05:26:36Z",
        "closed_at": "2017-01-07T06:17:47Z",
        "merged_at": null,
        "body": "",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-07-28T05:55:04Z",
        "closed_at": "2017-01-07T06:17:47Z",
        "merged_at": null,
        "body": "[iso4217](https://github.com/spoqa/iso4217) is a currency data package for Python.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2015-07-26T20:46:48Z",
        "closed_at": "2015-07-27T02:57:24Z",
        "merged_at": "2015-07-27T02:57:24Z",
        "body": "d3py links to vincent\nKartography.py links to mapshaper (node.js)\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-07-24T00:40:26Z",
        "closed_at": "2017-01-07T06:17:47Z",
        "merged_at": null,
        "body": "Never too late! :P\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-07-23T13:09:55Z",
        "closed_at": "2017-01-07T06:17:46Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-07-20T08:23:28Z",
        "closed_at": "2015-07-21T15:45:09Z",
        "merged_at": "2015-07-21T15:45:09Z",
        "body": "Hello, I would like to suggest adding `line_profiler` project to Debugging Tools.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-07-15T12:32:09Z",
        "closed_at": "2015-07-18T15:44:58Z",
        "merged_at": "2015-07-18T15:44:58Z",
        "body": "Updatig list of Buildtools.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-07-15T10:32:40Z",
        "closed_at": "2017-01-07T06:17:46Z",
        "merged_at": null,
        "body": "Project url for reference: https://github.com/swistakm/graceful\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-07-12T15:32:02Z",
        "closed_at": "2015-10-15T22:06:07Z",
        "merged_at": null,
        "body": "Added SQLObject and Storm to ORM list.\nAdded Muffin and Falcon to Web Framework list.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-07-06T19:56:13Z",
        "closed_at": "2015-07-07T14:58:44Z",
        "merged_at": null,
        "body": "Added link to useful package for graphing stuff like histograms\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-07-05T08:24:52Z",
        "closed_at": "2017-01-07T06:17:46Z",
        "merged_at": null,
        "body": "Updated list of PDF based tools to include the excellent Pdfkit for generating PDF files from HTML. \n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-07-03T15:20:58Z",
        "closed_at": "2015-07-06T08:03:00Z",
        "merged_at": "2015-07-06T08:03:00Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-07-02T17:26:07Z",
        "closed_at": "2017-01-07T06:17:46Z",
        "merged_at": null,
        "body": "hre is an API to make it easier to use regex\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-07-02T01:18:18Z",
        "closed_at": "2017-01-07T06:17:46Z",
        "merged_at": null,
        "body": "I think this is very useful\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-07-01T23:00:47Z",
        "closed_at": "2015-07-02T03:43:57Z",
        "merged_at": "2015-07-02T03:43:57Z",
        "body": "The development version of PyMC (version 3) has been moved to its own repository called pymc3.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-07-01T15:29:28Z",
        "closed_at": "2015-07-06T08:02:30Z",
        "merged_at": "2015-07-06T08:02:30Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-06-28T14:12:29Z",
        "closed_at": "2017-01-07T06:17:46Z",
        "merged_at": null,
        "body": "Added some more ~~propaganda~~ features and used a https link to the website.\n\n_disclaimer: co-maintainer of Nikola_\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-06-20T15:28:08Z",
        "closed_at": "2017-01-07T12:04:29Z",
        "merged_at": "2017-01-07T12:04:29Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-06-17T15:44:13Z",
        "closed_at": "2017-01-07T06:17:46Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-06-12T16:18:00Z",
        "closed_at": "2017-01-07T06:17:46Z",
        "merged_at": null,
        "body": "Add Visual Studio Community 2013 in the IDEs section.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2015-06-12T11:54:52Z",
        "closed_at": "2017-01-07T06:17:46Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-06-12T08:22:22Z",
        "closed_at": "2015-06-13T12:40:34Z",
        "merged_at": "2015-06-13T12:40:34Z",
        "body": "A logging library for distributed systems: https://github.com/ClusterHQ/eliot\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-06-09T16:24:53Z",
        "closed_at": "2015-06-09T17:57:35Z",
        "merged_at": "2015-06-09T17:57:35Z",
        "body": "Closes #375.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-06-09T10:56:06Z",
        "closed_at": "2015-06-12T05:54:43Z",
        "merged_at": "2015-06-12T05:54:43Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-06-08T22:30:05Z",
        "closed_at": "2015-06-09T04:23:59Z",
        "merged_at": "2015-06-09T04:23:59Z",
        "body": "This is in reference to issue #385. Feedback is welcome.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-06-04T21:03:20Z",
        "closed_at": "2015-08-05T07:14:51Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 13,
        "changed_files": 1,
        "created_at": "2015-06-04T20:29:38Z",
        "closed_at": "2015-06-05T05:43:41Z",
        "merged_at": "2015-06-05T05:43:41Z",
        "body": "Hi all.\n\nI did run README.md through aspell and noticed couple of typos to be amended - these are now fixed.\n\nThank you for a great list! :)\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-06-03T08:07:47Z",
        "closed_at": "2017-01-07T06:17:46Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-06-03T02:18:38Z",
        "closed_at": "2017-01-07T06:17:05Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-06-03T02:14:00Z",
        "closed_at": "2017-01-07T06:17:05Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-06-02T00:37:41Z",
        "closed_at": "2017-01-07T06:17:05Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-05-30T11:05:00Z",
        "closed_at": "2017-01-07T06:17:05Z",
        "merged_at": null,
        "body": "The core of Tryton (also called Tryton kernel) provides all the necessary\nfunctionalities for a complete application framework: data persistence,\nextensive modularity, users management (authentication, fine grained control for\ndata access, handling of concurrent access of resources), workflow and report\nengines, web services and internationalisation. Thus constituting a complete\napplication platform which can be used for any relevant purpose.\n\nhttp://www.tryton.org/\nhttps://github.com/tryton/tryton\nhttps://code.google.com/p/tryton/wiki/TableOfContents?tm=6\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-05-29T12:44:57Z",
        "closed_at": "2017-01-07T06:17:05Z",
        "merged_at": null,
        "body": "add new project to Queue section\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-05-28T20:57:56Z",
        "closed_at": "2015-05-29T04:11:55Z",
        "merged_at": "2015-05-29T04:11:55Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-05-27T14:54:39Z",
        "closed_at": "2017-01-07T06:17:05Z",
        "merged_at": null,
        "body": "Eve support natively MongoDB but it can also be used with SQLAlchemy thanks to eve-sqlalchemy.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-05-27T12:42:12Z",
        "closed_at": "2016-06-15T02:39:33Z",
        "merged_at": null,
        "body": "SublimeAutoPEP8 helps a lot when I first use python to do something.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-05-24T13:40:00Z",
        "closed_at": "2015-05-29T04:11:14Z",
        "merged_at": "2015-05-29T04:11:14Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-05-23T05:18:04Z",
        "closed_at": "2015-05-23T08:14:59Z",
        "merged_at": null,
        "body": "see: https://github.com/realpython/list-of-python-api-wrappers\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-05-20T00:20:35Z",
        "closed_at": "2015-05-25T14:12:40Z",
        "merged_at": "2015-05-25T14:12:40Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-05-18T08:56:17Z",
        "closed_at": "2016-02-21T21:37:59Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-05-17T15:12:54Z",
        "closed_at": "2017-01-07T06:17:05Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-05-11T02:41:20Z",
        "closed_at": "2017-01-07T06:17:05Z",
        "merged_at": null,
        "body": "This pull request contains the following changes:\n- Added a `boilerplates` section. \n- Added Django Hackathon Starter to `boilerplates` section. \n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-05-07T11:54:01Z",
        "closed_at": "2017-01-07T06:17:05Z",
        "merged_at": null,
        "body": "<!-- Reviewable:start -->\n\n[<img src=\"https://reviewable.io/review_button.png\" height=40 alt=\"Review on Reviewable\"/>](https://reviewable.io/reviews/vinta/awesome-python/372)\n\n<!-- Reviewable:end -->\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-05-05T09:32:03Z",
        "closed_at": "2015-05-05T17:53:37Z",
        "merged_at": "2015-05-05T17:53:37Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2015-05-04T14:44:04Z",
        "closed_at": "2017-01-07T06:17:05Z",
        "merged_at": null,
        "body": "Added Seaborn data viz library to data viz section. Organized section in alphabetical order.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2015-05-03T23:45:53Z",
        "closed_at": "2017-01-07T06:17:05Z",
        "merged_at": null,
        "body": "Also update section title Database -> Databases to clarify what goes in each section.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-05-03T20:22:21Z",
        "closed_at": "2017-01-07T06:17:05Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-05-03T20:16:43Z",
        "closed_at": "2015-05-14T18:12:43Z",
        "merged_at": "2015-05-14T18:12:43Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-05-02T18:04:08Z",
        "closed_at": "2017-01-07T06:17:05Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-04-28T02:17:50Z",
        "closed_at": "2017-01-07T06:17:05Z",
        "merged_at": null,
        "body": "It's not limited to data validation, but is similar to other libraries in this section.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-04-27T03:00:54Z",
        "closed_at": "2017-01-07T06:17:05Z",
        "merged_at": null,
        "body": "added two projects to \"extracting web contents\" section\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 316,
        "deletions": 315,
        "changed_files": 1,
        "created_at": "2015-04-23T09:53:57Z",
        "closed_at": "2015-04-25T06:27:02Z",
        "merged_at": null,
        "body": "[Openpyxl](https://openpyxl.readthedocs.org/en/latest/) is a wonderful library for parsing excel 2007+. \n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-04-20T18:12:44Z",
        "closed_at": "2017-01-07T06:17:05Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-04-19T13:28:45Z",
        "closed_at": "2016-06-11T22:26:26Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-04-16T07:16:12Z",
        "closed_at": "2015-04-16T14:43:12Z",
        "merged_at": "2015-04-16T14:43:12Z",
        "body": "An Unofficial Alipay API for Python\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-04-15T13:29:31Z",
        "closed_at": "2017-01-07T06:17:04Z",
        "merged_at": null,
        "body": "Pingo is Generic API for controlling boards with programmable IO pins - Pingo provides a uniform API to program devices like the Raspberry Pi, pcDuino, Intel Galileo etc. just like the Python DBAPI provides an uniform API for database programming in Python. http://pingo.io\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-04-15T13:09:29Z",
        "closed_at": "2015-04-25T05:44:53Z",
        "merged_at": "2015-04-25T05:44:53Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-04-15T07:28:32Z",
        "closed_at": "2017-01-07T06:17:04Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-04-13T18:08:59Z",
        "closed_at": "2015-11-27T05:43:13Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-04-13T16:22:27Z",
        "closed_at": "2017-01-07T06:17:04Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 66,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2015-04-12T21:42:08Z",
        "closed_at": "2017-01-07T06:17:04Z",
        "merged_at": null,
        "body": "A lot of test automation libs added\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-04-12T20:18:31Z",
        "closed_at": "2015-06-15T09:26:26Z",
        "merged_at": null,
        "body": "Added Soupy\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-04-11T15:21:53Z",
        "closed_at": "2017-01-07T06:17:04Z",
        "merged_at": null,
        "body": "- lettuce\n  Lettuce is a BDD tool for python, 100% inspired on cucumber.\n- paver\n  A Python-based software project scripting tool along the lines of Make or Rake.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-04-11T15:00:27Z",
        "closed_at": "2015-08-05T21:20:47Z",
        "merged_at": "2015-08-05T21:20:47Z",
        "body": "Add RobotFramework, a very extensive test framework.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-04-10T21:16:56Z",
        "closed_at": "2015-04-11T10:52:54Z",
        "merged_at": "2015-04-11T10:52:54Z",
        "body": "This is a pure Python library for high-performance scientific visualization. Based on OpenGL, it is GPU-accelerated.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-04-10T00:54:03Z",
        "closed_at": "2017-01-07T06:17:04Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-04-09T06:59:48Z",
        "closed_at": "2017-01-07T06:17:04Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-04-07T13:53:41Z",
        "closed_at": "2017-01-07T06:17:04Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-04-06T09:23:24Z",
        "closed_at": "2017-01-07T06:17:04Z",
        "merged_at": null,
        "body": "Add FuckingAwesomeDeploy\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-04-06T08:06:44Z",
        "closed_at": "2017-01-07T06:16:04Z",
        "merged_at": null,
        "body": "another redis monitor by using flask, angular, socket.io\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-04-05T05:39:04Z",
        "closed_at": "2017-01-07T06:16:04Z",
        "merged_at": null,
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-04-01T19:26:13Z",
        "closed_at": "2015-04-02T01:13:11Z",
        "merged_at": "2015-04-02T01:13:11Z",
        "body": "Pointing to nowhere http://tags.brace.io\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-03-28T16:07:19Z",
        "closed_at": "2017-01-07T06:16:04Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-03-27T18:47:46Z",
        "closed_at": "2015-11-04T02:50:17Z",
        "merged_at": "2015-11-04T02:50:17Z",
        "body": "Green is a great alternative to nose, pytest, or trial for unit testing.\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-03-24T21:32:13Z",
        "closed_at": "2015-03-25T05:54:11Z",
        "merged_at": "2015-03-25T05:54:11Z",
        "body": "The project was removed from GitHub.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-03-22T16:56:08Z",
        "closed_at": "2015-04-01T12:23:51Z",
        "merged_at": "2015-04-01T12:23:51Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-03-22T11:59:18Z",
        "closed_at": "2017-01-07T06:16:04Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-03-21T15:36:18Z",
        "closed_at": "2017-01-07T06:16:03Z",
        "merged_at": null,
        "body": "[HoloViews](https://ioam.github.io/holoviews/) is a newly released library that is rapidly generating interest:\n-  Winner in its category at this years UK Open Source Awards (2015)\n-  Already available as part of [SageMathCloud](https://cloud.sagemath.com/projects).\n-  Supports multiple backends including matplotlib and mpld3 (not on this list but should be!)\n-  [Currently trending](https://github.com/trending?l=python)\n\nAs one of the main authors, I know it is _awesome_ so please check it out! :-)\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-03-21T15:36:10Z",
        "closed_at": "2017-01-07T06:16:03Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-03-21T06:01:53Z",
        "closed_at": "2017-01-07T06:16:03Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2015-03-18T10:16:43Z",
        "closed_at": "2015-09-17T18:02:47Z",
        "merged_at": null,
        "body": "PynamoDB is a Pythonic interface to Amazon\u2019s DynamoDB. By using simple, yet powerful abstractions over the DynamoDB API, PynamoDB allows you to start developing immediately.\n\nFeatures:\n- Python 3 support\n- Python 2 support\n- Support for Unicode, Binary, JSON, Number, Set, and UTC Datetime attributes\n- Support for DynamoDB Local\n- Support for all of the DynamoDB API\n- Support for Global and Local Secondary Indexes\n- Batch operations with automatic pagination\n- Iterators for working with Query and Scan operations\n- Fully tested\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-03-17T18:18:51Z",
        "closed_at": "2017-01-07T06:16:03Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-03-17T11:20:14Z",
        "closed_at": "2017-01-07T06:16:03Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-03-17T08:41:31Z",
        "closed_at": "2017-01-07T06:16:03Z",
        "merged_at": null,
        "body": "Hello, I would like to add **Buildbot** project to the list. Not sure about category, but I think **DevOps Tools** section would be quite right for it.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-03-17T04:10:28Z",
        "closed_at": "2017-01-07T06:16:03Z",
        "merged_at": null,
        "body": "There are many projects to run PyPI server but this one is really minimal and easy to install and manage.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-03-14T13:59:36Z",
        "closed_at": "2017-01-07T06:16:03Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-03-13T13:04:28Z",
        "closed_at": "2017-01-07T06:16:03Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-03-13T09:58:33Z",
        "closed_at": "2017-01-07T06:16:03Z",
        "merged_at": null,
        "body": "One is for downloading, and another is for language processing.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-03-08T21:12:28Z",
        "closed_at": "2015-03-09T06:05:18Z",
        "merged_at": "2015-03-09T06:05:18Z",
        "body": "https://github.com/ITCase/awesome-pyramid\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-03-08T01:28:37Z",
        "closed_at": "2017-01-07T06:16:03Z",
        "merged_at": null,
        "body": "add yolk3k - https://github.com/myint/yolk\nCommand-line tool for querying PyPI and Python packages installed on your system (with Python 3 support).\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-03-06T03:50:19Z",
        "closed_at": "2017-01-07T06:16:03Z",
        "merged_at": null,
        "body": "Add Pypsi, the Python Pluggable Shell Interface library. Develop extensible and powerful command line interface shells with minimal code and maximum reuse.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-03-03T04:04:19Z",
        "closed_at": "2015-03-04T05:26:15Z",
        "merged_at": "2015-03-04T05:26:15Z",
        "body": "It's a bit strange that Supervisor was not added previously to this awesome list. I saw `honcho` in DevOps section, so I added Supervisor here.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-03-02T13:17:19Z",
        "closed_at": "2015-03-03T11:06:39Z",
        "merged_at": "2015-03-03T11:06:39Z",
        "body": "added ptpython - advanced Python REPL built on top of the prompt_toolkit library\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-03-02T11:42:33Z",
        "closed_at": "2015-03-17T04:03:33Z",
        "merged_at": null,
        "body": "There are many projects to run PyPI server but this one is really minimal and easy to install and manage.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2015-02-14T02:06:25Z",
        "closed_at": "2017-01-07T06:16:03Z",
        "merged_at": null,
        "body": "In my biased opinion, trepan has features that I am not aware of in other debuggers. Namely: \n- extensive documentation in RestructuredText so it looks nice on pypy  as well as inside the debugger using terminal highlighting\n- context-sensitive command completion\n-  debugger macros that can be written in python\n-  source-code syntax highlighting\n-  stepping and filtering by event (call, return, c_call, c_return, line, exception ...)\n-  a smart \"eval\" command\n\nand more... See https://pypi.python.org/pypi/trepan/0.4.1\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2015-02-13T23:07:23Z",
        "closed_at": "2017-01-07T06:16:03Z",
        "merged_at": null,
        "body": "and remove some trailing whitespace.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-02-05T14:44:47Z",
        "closed_at": "2016-03-25T15:12:18Z",
        "merged_at": null,
        "body": "As mentioned in #283, tox is a good tool to run tests on multiple python versions. Lets include it in the list.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-02-04T11:33:33Z",
        "closed_at": "2017-01-07T06:16:03Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-01-30T08:28:14Z",
        "closed_at": "2017-01-07T06:16:03Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-01-30T05:15:50Z",
        "closed_at": "2017-01-07T06:16:03Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-01-30T04:41:01Z",
        "closed_at": "2017-01-07T06:16:02Z",
        "merged_at": null,
        "body": "Add secretary (https://github.com/christopher-ramirez/secretary) into the Template Engine section.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-01-27T12:09:19Z",
        "closed_at": "2016-05-04T08:43:48Z",
        "merged_at": null,
        "body": "fMBT framework added to the testing section\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-01-26T13:45:31Z",
        "closed_at": "2017-01-07T06:16:02Z",
        "merged_at": null,
        "body": "add a very excellent item in static web generator\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-01-15T19:12:43Z",
        "closed_at": "2017-01-07T06:16:02Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-01-14T10:10:23Z",
        "closed_at": "2017-01-07T06:16:02Z",
        "merged_at": null,
        "body": "Adding [viper](https://github.com/nestorsalceda/viper) as PyPI server\n\n/cc @nestorsalceda\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-01-11T19:58:29Z",
        "closed_at": "2015-01-20T18:31:31Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-01-06T02:04:31Z",
        "closed_at": "2017-01-07T06:14:22Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-01-05T15:06:10Z",
        "closed_at": "2015-01-06T03:22:31Z",
        "merged_at": "2015-01-06T03:22:31Z",
        "body": "I _think_ devops is the correct section, devops scripting is where they've been used and developed at least...\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-01-05T01:30:59Z",
        "closed_at": "2015-01-22T16:11:27Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-01-03T20:42:33Z",
        "closed_at": "2015-01-05T06:29:05Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-01-02T23:17:15Z",
        "closed_at": "2015-01-22T16:04:19Z",
        "merged_at": "2015-01-22T16:04:19Z",
        "body": "More details on PyPi https://pypi.python.org/pypi/caniusepython3\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-01-02T01:59:55Z",
        "closed_at": "2015-01-02T09:08:12Z",
        "merged_at": "2015-01-02T09:08:12Z",
        "body": "Automated corrections from https://github.com/dawsonbotsford/spellingBee . If the correction is correct, star the repo, if it is wrong, report an issue!\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-12-29T23:32:58Z",
        "closed_at": "2014-12-30T05:42:03Z",
        "merged_at": "2014-12-30T05:42:03Z",
        "body": "The cement Tool is found at builtoncement.com, not builtoncement.org. :-)\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-12-26T11:30:54Z",
        "closed_at": "2014-12-26T15:50:19Z",
        "merged_at": "2014-12-26T15:50:19Z",
        "body": "webargs library for parsing HTTP request arguments\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-12-21T14:41:35Z",
        "closed_at": "2014-12-26T15:58:45Z",
        "merged_at": "2014-12-26T15:58:45Z",
        "body": "From [here](http://nuitka.net/pages/overview.html)\n\n> Right now Nuitka is a good replacement for the Python interpreter and compiles every construct that CPython 2.6, 2.7, 3.2 and 3.3 offer. It translates the Python into a C++ program that then uses \"libpython\" to execute in the same way as CPython does, in a very compatible way.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2014-12-09T06:30:24Z",
        "closed_at": "2016-12-13T17:31:25Z",
        "merged_at": null,
        "body": "Since the default system encoding of my Win7 x64(simplified Chinese) is not utf-8, but GBK; sort.py doesn't work in Python 3.4.2. \n\nThe traceback message is:\n\n> Traceback (most recent call last):\n>  File \"E:\\GitHub\\sort.py\", line 52, in <module>\n>    main()\n>  File \"E:\\GitHub\\sort.py\", line 22, in main\n>    read_me = read_me_file.readlines()\n> UnicodeDecodeError: 'gbk' codec can't decode byte 0x93 in position 6947: illegal multibyte sequence\n\nSo I just specify the encoding explicitly by passing the keyword argument  'encoding'. (Otherwise, Python 3.x will use the system's default encoding.)\n\nThe builtin 'open' function in Python 2.7.8 doesn't provide such a parameter, however. So I use codecs.open instead.\n\nThe modified version has already been tested on Win7 x64 with both Python 2.7.8 and Python 3.4.2.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-12-09T04:55:48Z",
        "closed_at": "2015-05-15T18:49:45Z",
        "merged_at": null,
        "body": "",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2014-12-08T16:50:08Z",
        "closed_at": "2016-12-13T17:31:25Z",
        "merged_at": null,
        "body": "Zwei Eintr\u00e4ge ge\u00e4ndert\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-12-08T09:26:08Z",
        "closed_at": "2015-01-20T10:11:43Z",
        "merged_at": null,
        "body": "",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-12-05T05:49:27Z",
        "closed_at": "2016-12-13T17:31:25Z",
        "merged_at": null,
        "body": "Pex is used to create executable zip files which contain all distributions needed to run a program or bootstrap an environment.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-12-04T16:14:21Z",
        "closed_at": "2016-03-29T19:36:00Z",
        "merged_at": null,
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-12-04T11:03:33Z",
        "closed_at": "2014-12-07T19:02:05Z",
        "merged_at": "2014-12-07T19:02:05Z",
        "body": "Please remove `oauth2`package from Authentication section. It's abandoned project https://github.com/simplegeo/python-oauth2 with no activity since 2011. \n\nIt can't be an recommended awesome package as it is now. \n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-12-01T12:29:27Z",
        "closed_at": "2016-12-13T17:31:25Z",
        "merged_at": null,
        "body": "[virtualenv-mgr](https://github.com/arteria/virtualenv-mgr) is a CLI to manage multiple virtualenvs at once. The tool give you the ability to upgrade packages in all your projects and much more. \n\nI am not sure where to add it, Environment Management or Package Management. I have to put it under Environment Management because of the name of the tool.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-11-30T18:09:29Z",
        "closed_at": "2014-12-02T08:36:42Z",
        "merged_at": "2014-12-02T08:36:42Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-11-29T03:21:19Z",
        "closed_at": "2016-12-13T17:31:25Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-11-28T12:36:53Z",
        "closed_at": "2015-01-22T16:53:34Z",
        "merged_at": "2015-01-22T16:53:34Z",
        "body": "Includes a subsection on Imagery section with wrapper OCR in Python\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-11-23T05:12:03Z",
        "closed_at": "2014-11-24T08:40:13Z",
        "merged_at": "2014-11-24T08:40:13Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-11-19T12:47:16Z",
        "closed_at": "2015-01-22T16:33:15Z",
        "merged_at": "2015-01-22T16:33:15Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2014-11-19T10:25:12Z",
        "closed_at": "2014-11-19T20:49:02Z",
        "merged_at": "2014-11-19T20:49:02Z",
        "body": "`pdb` from standard library is not awesome (especially with all these alternatives)\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-11-18T09:34:33Z",
        "closed_at": "2014-11-19T20:47:56Z",
        "merged_at": "2014-11-19T20:47:56Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-11-16T15:13:05Z",
        "closed_at": "2014-11-16T21:38:13Z",
        "merged_at": "2014-11-16T21:38:12Z",
        "body": "Mutagen has moved to bitbucket\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-11-15T12:41:32Z",
        "closed_at": "2014-12-08T16:07:26Z",
        "merged_at": "2014-12-08T16:07:26Z",
        "body": "Closes #257\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-11-14T20:02:27Z",
        "closed_at": "2016-12-13T17:31:25Z",
        "merged_at": null,
        "body": "Added pefile to files section in README.md. \nIt is a module to read and work with PE executable files.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-11-14T15:54:24Z",
        "closed_at": "2016-12-13T17:31:25Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-11-14T10:02:02Z",
        "closed_at": "2014-11-24T11:48:52Z",
        "merged_at": "2014-11-24T11:48:52Z",
        "body": "Extensible validation for Python dictionaries used inside EVE Python REST API Framework\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-11-14T06:46:21Z",
        "closed_at": "2014-11-14T07:54:32Z",
        "merged_at": "2014-11-14T07:54:32Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-11-11T03:35:53Z",
        "closed_at": "2014-11-11T06:19:47Z",
        "merged_at": "2014-11-11T06:19:47Z",
        "body": "added pyelftools to debugging section\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-11-03T10:50:38Z",
        "closed_at": "2014-11-03T13:59:54Z",
        "merged_at": null,
        "body": "Add [pythonpy](https://github.com/Russell91/pythonpy) - python -c, with tab completion and shorthand.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-10-27T22:24:36Z",
        "closed_at": "2016-01-15T23:12:52Z",
        "merged_at": null,
        "body": "Access and manipulate Oracle databases in 10g, 11g and 12c.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-10-27T02:16:32Z",
        "closed_at": "2015-06-17T17:13:30Z",
        "merged_at": null,
        "body": "Requesting a pull to vinta:master from kbknapp:clapp\n\nI added kbknapp/clapp-py to the Command-line Tools section of the list\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-10-23T13:44:10Z",
        "closed_at": "2016-12-13T17:31:25Z",
        "merged_at": null,
        "body": "Added a nice validation and (de)serialization library. I have switched to it from schematics in one of my projects and it seems more pretty to me.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-10-23T01:32:03Z",
        "closed_at": "2016-12-13T17:31:25Z",
        "merged_at": null,
        "body": "Py2Docx is another options for someone who wants more features when creating a .docx file using Python.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-10-22T07:45:06Z",
        "closed_at": "2014-10-25T05:33:38Z",
        "merged_at": "2014-10-25T05:33:38Z",
        "body": "[Flask-Restless](https://flask-restless.readthedocs.org/en/latest/) provides simple generation of ReSTful APIs for database models defined using SQLAlchemy (or Flask-SQLAlchemy). The generated APIs send and receive messages in JSON format.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 202,
        "deletions": 201,
        "changed_files": 1,
        "created_at": "2014-10-21T20:38:21Z",
        "closed_at": "2016-12-13T17:31:25Z",
        "merged_at": null,
        "body": "Addressing #153.\nVersion only added for packages/libraries which state their version on their PyPI page. \nFor instance, the PyPI page for [virtualenv](https://pypi.python.org/pypi/virtualenv) has this text:\n\n```\nProgramming Language :: Python :: 2\nProgramming Language :: Python :: 2.6\nProgramming Language :: Python :: 2.7\nProgramming Language :: Python :: 3\nProgramming Language :: Python :: 3.1\nProgramming Language :: Python :: 3.2\n```\n\nOnly added versions to libraries/packages that list support for both 2 & 3.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-10-18T15:25:16Z",
        "closed_at": "2015-05-15T18:52:12Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-10-17T21:09:12Z",
        "closed_at": "2016-12-13T17:31:24Z",
        "merged_at": null,
        "body": "Python codec for converting between a string of ASCII and non-ASCII\nchars maintaining readability. It reduces the friction for developers\nto test with non-ASCII strings.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-10-17T21:00:28Z",
        "closed_at": "2016-12-13T17:31:03Z",
        "merged_at": null,
        "body": "Genty, pronounced \"gen-tee\", stands for \"generate tests\". It promotes generative testing, where a single test can execute over a variety of input.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-10-17T20:30:30Z",
        "closed_at": "2016-12-13T17:31:03Z",
        "merged_at": null,
        "body": "....\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-10-17T17:18:59Z",
        "closed_at": "2014-10-17T20:30:44Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-10-15T15:26:40Z",
        "closed_at": "2014-10-16T01:17:50Z",
        "merged_at": "2014-10-16T01:17:50Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-10-14T08:12:24Z",
        "closed_at": "2016-12-13T17:31:03Z",
        "merged_at": null,
        "body": "Added [Sider](https://sider.readthedocs.org).\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-10-13T22:11:33Z",
        "closed_at": "2016-12-13T17:31:03Z",
        "merged_at": null,
        "body": "Added pycurl to the list of HTTP libraries\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-10-13T07:59:25Z",
        "closed_at": "2014-10-16T01:18:29Z",
        "merged_at": "2014-10-16T01:18:29Z",
        "body": "This related [repository](https://github.com/yoloseem/awesome-sphinxdoc).\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-10-09T15:09:48Z",
        "closed_at": "2014-10-10T08:39:31Z",
        "merged_at": "2014-10-10T08:39:31Z",
        "body": "JWT is an authentication standard that Google has been pushing lately. They support a few of these libraries in their developer documentation. \n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-10-09T12:24:25Z",
        "closed_at": "2014-10-10T08:19:16Z",
        "merged_at": "2014-10-10T08:19:16Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-10-09T11:34:50Z",
        "closed_at": "2014-10-10T08:35:32Z",
        "merged_at": "2014-10-10T08:35:32Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-09-30T19:16:54Z",
        "closed_at": "2014-10-09T05:13:12Z",
        "merged_at": "2014-10-09T05:13:12Z",
        "body": "prompt_toolkit is a Library for building powerful interactive command lines in Python. It ships with a nice interactive Python shell (called ptpython) built on top of the library.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-09-27T13:37:16Z",
        "closed_at": "2014-10-04T02:22:21Z",
        "merged_at": "2014-10-04T02:22:21Z",
        "body": "Add following awesome python packages:\n- python-stop-words: Get list of common stop words in various languages in Python.\n- python-currencies: Display money format and its filthy currencies, for all money lovers out there.\n- django-markwhat: A collection of template filters that implement common markup languages.\n- short_url: Python implementation for generating Tiny URL- and bit.ly-like URLs.\n- sanitize: Bringing sanity to world of messed-up data.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-09-26T14:41:01Z",
        "closed_at": "2014-09-26T22:07:14Z",
        "merged_at": "2014-09-26T22:07:14Z",
        "body": "Added xlwings in Specific Formats Processing section.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-09-24T17:33:34Z",
        "closed_at": "2014-10-10T08:34:43Z",
        "merged_at": "2014-10-10T08:34:43Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-09-23T09:54:23Z",
        "closed_at": "2016-12-13T17:31:03Z",
        "merged_at": null,
        "body": "not sure if I put `pex` to the right section.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-09-22T21:46:39Z",
        "closed_at": "2014-09-24T18:31:08Z",
        "merged_at": "2014-09-24T18:31:08Z",
        "body": "Add PLY project\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-09-21T01:49:16Z",
        "closed_at": "2016-08-15T00:50:54Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-09-15T23:04:36Z",
        "closed_at": "2014-09-17T16:32:42Z",
        "merged_at": "2014-09-17T16:32:42Z",
        "body": "key-value store\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-09-13T18:43:06Z",
        "closed_at": "2016-12-13T17:31:03Z",
        "merged_at": null,
        "body": "I just thought this list would benefit from links to some educational resources, Python Koans being the best one out there. Thanks for creating this list and considering my request!\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-09-12T22:02:04Z",
        "closed_at": "2016-12-13T17:31:03Z",
        "merged_at": null,
        "body": "NoseOfYeti is a nose plugin I made that provides an RSpec inspired dsl for python.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-09-11T23:53:43Z",
        "closed_at": "2016-12-13T17:31:02Z",
        "merged_at": null,
        "body": "Wasn't any sections for programming languages written in Python. So added that along with Hylang!\nhttps://github.com/hylang/hy\n\n:shipit:\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-09-10T16:31:30Z",
        "closed_at": "2014-09-11T05:10:08Z",
        "merged_at": "2014-09-11T05:10:08Z",
        "body": "Added link to Gunnery in DevOps section.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-09-06T12:29:20Z",
        "closed_at": "2014-09-10T07:54:51Z",
        "merged_at": null,
        "body": "SimpleCV added\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-09-06T03:14:34Z",
        "closed_at": "2014-09-10T07:49:05Z",
        "merged_at": "2014-09-10T07:49:05Z",
        "body": "scrapping microframework\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-09-05T18:14:05Z",
        "closed_at": "2016-12-13T17:31:02Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-08-28T19:31:19Z",
        "closed_at": "2014-09-01T09:49:52Z",
        "merged_at": "2014-09-01T09:49:52Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-08-28T18:28:01Z",
        "closed_at": "2014-09-01T09:49:16Z",
        "merged_at": "2014-09-01T09:49:16Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-08-27T07:00:34Z",
        "closed_at": "2014-09-01T09:48:23Z",
        "merged_at": "2014-09-01T09:48:23Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-08-26T13:55:13Z",
        "closed_at": "2014-08-27T05:44:39Z",
        "merged_at": "2014-08-27T05:44:39Z",
        "body": "Old repository has moved.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-08-25T15:34:59Z",
        "closed_at": "2014-08-27T05:45:56Z",
        "merged_at": "2014-08-27T05:45:56Z",
        "body": "Due to Github Atom editor's rising popularity, I decided to add the basic packages that you'll need for your everyday Python coding.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-08-25T14:58:50Z",
        "closed_at": "2014-09-01T09:47:09Z",
        "merged_at": "2014-09-01T09:47:09Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-08-25T09:29:52Z",
        "closed_at": "2014-09-01T09:45:25Z",
        "merged_at": "2014-09-01T09:45:25Z",
        "body": "Added: orange, RDKit, Open Babel, cclib and Biopython\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-08-25T01:54:50Z",
        "closed_at": "2016-12-13T17:31:02Z",
        "merged_at": null,
        "body": "WeChat is one of the most popular IM app, this helps people to build a Service Account on the WeChat's Media Platform quickly\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-08-24T17:02:28Z",
        "closed_at": "2014-08-26T15:08:46Z",
        "merged_at": "2014-08-26T15:08:46Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-08-22T19:56:21Z",
        "closed_at": "2014-08-23T10:25:05Z",
        "merged_at": "2014-08-23T10:25:05Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-08-22T07:12:44Z",
        "closed_at": "2016-12-13T17:31:02Z",
        "merged_at": null,
        "body": "Hey, I added two of my projects to the list as well :smiley: \n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-08-21T10:52:09Z",
        "closed_at": "2014-08-23T10:07:37Z",
        "merged_at": null,
        "body": "What do you think about this?\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-08-20T15:51:29Z",
        "closed_at": "2014-08-23T10:33:38Z",
        "merged_at": "2014-08-23T10:33:38Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-08-19T07:29:15Z",
        "closed_at": "2016-12-13T17:31:02Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-08-19T07:26:30Z",
        "closed_at": "2016-12-13T17:31:02Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-08-19T01:54:40Z",
        "closed_at": "2014-08-23T09:59:12Z",
        "merged_at": "2014-08-23T09:59:12Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-08-18T16:38:13Z",
        "closed_at": "2014-08-23T10:36:40Z",
        "merged_at": "2014-08-23T10:36:40Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-08-18T10:32:55Z",
        "closed_at": "2014-08-23T10:44:32Z",
        "merged_at": "2014-08-23T10:44:32Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-08-18T08:30:50Z",
        "closed_at": "2014-08-18T09:44:05Z",
        "merged_at": "2014-08-18T09:44:05Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 276,
        "deletions": 275,
        "changed_files": 1,
        "created_at": "2014-08-14T23:08:58Z",
        "closed_at": "2015-07-15T10:13:01Z",
        "merged_at": null,
        "body": "First commit has added Sage software and its description.\n\nSecond commit has the results of sort.py executed which includes the addition of Sage software and its description.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-08-13T07:30:12Z",
        "closed_at": "2014-08-13T14:15:03Z",
        "merged_at": "2014-08-13T14:15:03Z",
        "body": "Added \"pyzmail\" for \"Email\" category\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-08-13T06:28:34Z",
        "closed_at": "2014-08-13T14:25:19Z",
        "merged_at": "2014-08-13T14:25:19Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-08-10T04:52:03Z",
        "closed_at": "2014-08-13T14:25:19Z",
        "merged_at": "2014-08-13T14:25:19Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-08-09T13:54:23Z",
        "closed_at": "2014-08-13T14:30:45Z",
        "merged_at": "2014-08-13T14:30:45Z",
        "body": "Another command-line library and a fake-data generator library.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-08-09T12:02:36Z",
        "closed_at": "2014-08-13T14:09:33Z",
        "merged_at": "2014-08-13T14:09:33Z",
        "body": "A nice library that merges gevent and requests to enable asynchronous HTTP requests, at the same time.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-08-09T03:31:29Z",
        "closed_at": "2014-08-09T07:19:39Z",
        "merged_at": "2014-08-09T07:19:39Z",
        "body": "Add m3u8 to the Audio Section\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-08-08T08:46:20Z",
        "closed_at": "2016-12-13T17:31:02Z",
        "merged_at": null,
        "body": "Its under Third-party APIs where I found another facebook api tool.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-08-08T03:18:36Z",
        "closed_at": "2014-08-08T16:58:47Z",
        "merged_at": "2014-08-08T16:58:47Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-08-08T00:12:55Z",
        "closed_at": "2014-08-08T01:48:43Z",
        "merged_at": "2014-08-08T01:48:43Z",
        "body": "pdoc is a library and a command line program to discover the public interface of a Python module or package. The pdoc script can be used to generate plain text or HTML of a module's public interface, or it can be used to run an HTTP server that serves generated HTML for installed modules. It is intended that pdoc will be a replacement for the unmaintained epydoc. \n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-08-07T23:03:29Z",
        "closed_at": "2014-08-08T01:47:18Z",
        "merged_at": "2014-08-08T01:47:18Z",
        "body": "Savory Pie is an API building library, we give you the pieces to build the API you need. Currently Django is the main target, but the only dependencies on Django are a single view and Resources and Fields that understand Django's ORM.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-08-07T20:44:49Z",
        "closed_at": "2014-08-08T16:59:35Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-08-06T00:38:59Z",
        "closed_at": "2014-08-07T01:41:46Z",
        "merged_at": "2014-08-07T01:41:46Z",
        "body": "Mailgun library to extract message quotations and signatures.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-08-05T20:02:07Z",
        "closed_at": "2014-08-07T01:47:37Z",
        "merged_at": "2014-08-07T01:47:37Z",
        "body": "A mocking library for requests for Python 2.6, 2.7 and 3.2, 3.3. added\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2014-08-03T09:24:44Z",
        "closed_at": "2014-08-04T12:17:40Z",
        "merged_at": "2014-08-04T12:17:40Z",
        "body": "- Add valideer\n- Move schema \n- Remove dictshield\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-08-02T04:11:16Z",
        "closed_at": "2014-08-02T11:56:22Z",
        "merged_at": "2014-08-02T11:56:22Z",
        "body": "A python port of the JavaScript hashids implementation. It generates YouTube-like hashes from one or many numbers. Use hashids when you do not want to expose your database ids to the user. Website: http://www.hashids.org/\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-07-31T18:58:59Z",
        "closed_at": "2014-07-31T20:15:21Z",
        "merged_at": "2014-07-31T20:15:21Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-31T07:16:36Z",
        "closed_at": "2014-07-31T20:16:17Z",
        "merged_at": "2014-07-31T20:16:17Z",
        "body": "https://github.com/ambitioninc/kmatch - A language for matching/validating/filtering Python dictionaries.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-30T04:52:09Z",
        "closed_at": "2014-07-31T01:48:37Z",
        "merged_at": "2014-07-31T01:48:37Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-30T04:44:44Z",
        "closed_at": "2014-07-31T01:47:52Z",
        "merged_at": "2014-07-31T01:47:52Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-30T04:11:02Z",
        "closed_at": "2016-12-13T17:31:02Z",
        "merged_at": null,
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-30T04:02:17Z",
        "closed_at": "2014-07-31T01:43:55Z",
        "merged_at": "2014-07-31T01:43:55Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 103,
        "deletions": 544,
        "changed_files": 1,
        "created_at": "2014-07-29T21:28:39Z",
        "closed_at": "2014-08-13T14:32:06Z",
        "merged_at": null,
        "body": "Insert CherryPy to web development, CMS are Plone and Opps CMS and resources to books open source \n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-26T11:00:32Z",
        "closed_at": "2014-07-28T09:22:12Z",
        "merged_at": "2014-07-28T09:22:12Z",
        "body": "Hello. I think Widgy CMS and Fein CMS you can add to great CMS list :)\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-26T05:37:01Z",
        "closed_at": "2014-07-26T10:39:07Z",
        "merged_at": "2014-07-26T10:39:07Z",
        "body": "Paramiko is a Python (2.6+, 3.3+) implementation of the SSHv2 protocol, providing both client and server functionality.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-25T16:58:54Z",
        "closed_at": "2016-12-13T17:31:02Z",
        "merged_at": null,
        "body": "Add zipa, a magic pythonic REST client \n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-24T22:28:10Z",
        "closed_at": "2014-07-25T03:52:43Z",
        "merged_at": "2014-07-25T03:52:43Z",
        "body": "Schematics\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-24T19:10:41Z",
        "closed_at": "2014-07-25T05:37:47Z",
        "merged_at": "2014-07-25T05:37:47Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-24T17:18:25Z",
        "closed_at": "2014-07-26T10:40:01Z",
        "merged_at": "2014-07-26T10:40:01Z",
        "body": "I've directed alot of people to this page for python libraries, some of them asked me for the simplest meta-data reader for mp3, I just added the one I use to try to get my 2-cents in. Thanks\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-24T09:11:47Z",
        "closed_at": "2014-07-25T04:00:51Z",
        "merged_at": "2014-07-25T04:00:51Z",
        "body": "features more readable tests like\n\n1 | should.be_a_number\nstatement | should.be_truthy\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-22T19:10:47Z",
        "closed_at": "2014-07-22T23:12:36Z",
        "merged_at": "2014-07-22T23:12:36Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-07-22T17:21:08Z",
        "closed_at": "2014-07-22T23:00:17Z",
        "merged_at": "2014-07-22T23:00:17Z",
        "body": "Change Crossbar from websocket to networking category according to the author.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-22T11:22:10Z",
        "closed_at": "2014-07-22T23:11:42Z",
        "merged_at": "2014-07-22T23:11:42Z",
        "body": "from dev page: \"Unofficial Windows Binaries for Python Extension Packages. This page provides 32- and 64-bit Windows binaries of many scientific open-source extension packages for the official CPython distribution of the Python programming language. The files are unofficial (meaning: informal, unrecognized, personal, unsupported, no warranty, no liability, provided \"as is\") and made available for testing and evaluation purposes.\"\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-22T11:12:23Z",
        "closed_at": "2014-07-25T05:37:47Z",
        "merged_at": "2014-07-25T05:37:47Z",
        "body": "from home page: \"Python(x,y) is a scientific-oriented Python Distribution based on Qt and Spyder - see the Plugins page. Its purpose is to help scientific programmers used to interpreted languages (such as MATLAB or IDL) or compiled languages (C/C++ or Fortran) to switch to Python. C/C++ or Fortran programmers should appreciate to reuse their code \"as is\" by wrapping it so it can be called directly from Python scripts.\"\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-22T09:07:41Z",
        "closed_at": "2014-07-25T06:26:42Z",
        "merged_at": "2014-07-25T06:26:42Z",
        "body": "Added scapy(packet manipulation) and pycuda (for high performance computing)\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-22T06:26:47Z",
        "closed_at": "2014-07-25T06:34:03Z",
        "merged_at": "2014-07-25T06:34:03Z",
        "body": "Add APScheduler to the job scheduler section.\n\nhttp://apscheduler.readthedocs.org/\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-21T13:40:18Z",
        "closed_at": "2014-07-21T22:04:22Z",
        "merged_at": "2014-07-21T22:04:22Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-19T10:06:55Z",
        "closed_at": "2014-07-19T15:41:38Z",
        "merged_at": "2014-07-19T15:41:38Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-18T08:31:02Z",
        "closed_at": "2014-07-18T11:25:28Z",
        "merged_at": "2014-07-18T11:25:28Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-17T20:26:52Z",
        "closed_at": "2014-07-17T21:32:17Z",
        "merged_at": "2014-07-17T21:32:17Z",
        "body": "http://builtoncement.org/\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-17T19:21:49Z",
        "closed_at": "2014-07-17T21:31:41Z",
        "merged_at": "2014-07-17T21:31:41Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-17T19:19:08Z",
        "closed_at": "2014-07-17T21:31:22Z",
        "merged_at": "2014-07-17T21:31:22Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-17T16:24:00Z",
        "closed_at": "2014-07-17T21:30:55Z",
        "merged_at": "2014-07-17T21:30:55Z",
        "body": "add crossbar.io\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-17T05:39:27Z",
        "closed_at": "2014-07-17T21:30:42Z",
        "merged_at": "2014-07-17T21:30:42Z",
        "body": "Top Open-Source Python Static Site Generators like Pelican, Cactus, Hyde, Nikola, Tags, Tinkerer.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-16T21:51:54Z",
        "closed_at": "2014-07-17T21:29:18Z",
        "merged_at": "2014-07-17T21:29:18Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-16T20:24:28Z",
        "closed_at": "2014-08-03T06:32:04Z",
        "merged_at": "2014-08-03T06:32:04Z",
        "body": "Added some research and development tools / libraries for Virtual Networking and SDN (Software Defined Networking).\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-15T08:01:03Z",
        "closed_at": "2014-07-15T14:14:09Z",
        "merged_at": "2014-07-15T14:14:09Z",
        "body": "Added 'Flask-Assets' to Asset Management\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-14T17:51:44Z",
        "closed_at": "2014-07-15T14:18:40Z",
        "merged_at": null,
        "body": "admin-plus for web2py\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-14T15:31:49Z",
        "closed_at": "2014-07-28T09:20:09Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-14T08:12:28Z",
        "closed_at": "2014-07-14T14:11:39Z",
        "merged_at": "2014-07-14T14:11:39Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-14T06:35:08Z",
        "closed_at": "2014-07-14T14:12:14Z",
        "merged_at": "2014-07-14T14:12:14Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-13T06:35:01Z",
        "closed_at": "2016-12-13T17:31:01Z",
        "merged_at": null,
        "body": "add Capstone disassembly framework\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-12T16:10:35Z",
        "closed_at": "2014-07-13T15:52:32Z",
        "merged_at": "2014-07-13T15:52:32Z",
        "body": "- [dh-virtualenv](http://dh-virtualenv.readthedocs.org/en/latest/) - Build and distribute a virtualenv as a Debian package.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-12T10:38:58Z",
        "closed_at": "2014-07-12T13:07:20Z",
        "merged_at": "2014-07-12T13:07:20Z",
        "body": "Added a new package manager - Curdling,  which can be found at [Curdling](http://clarete.li/curdling/).\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-12T08:52:19Z",
        "closed_at": "2014-07-28T09:20:24Z",
        "merged_at": null,
        "body": "https://github.com/sindresorhus/awesome\n\nMight be a good way for people to discover other lists.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-12T06:58:57Z",
        "closed_at": "2014-07-12T13:10:38Z",
        "merged_at": "2014-07-12T13:10:38Z",
        "body": "Added conda to the environment management section as conda does _both_ package management and environment management.  \n\nAdded nucleic / enaml to the GUI section.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2014-07-10T16:55:58Z",
        "closed_at": "2014-07-12T13:00:28Z",
        "merged_at": "2014-07-12T13:00:28Z",
        "body": "- awesome-slugify is unique in that it can preserve unicode during slugification.\n- python-slugify turns unicode into ASCII\n- unicode-slugify requires Django as a dependency.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-10T13:55:24Z",
        "closed_at": "2014-07-12T13:06:42Z",
        "merged_at": "2014-07-12T13:06:42Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-10T13:43:30Z",
        "closed_at": "2014-07-12T12:59:24Z",
        "merged_at": "2014-07-12T12:59:24Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-10T12:44:34Z",
        "closed_at": "2014-07-12T12:58:34Z",
        "merged_at": "2014-07-12T12:58:34Z",
        "body": "Adding the restless library to the API packages list and Full Stack Python to the website resources list.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-10T10:52:42Z",
        "closed_at": "2014-08-13T14:41:53Z",
        "merged_at": "2014-08-13T14:41:53Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-10T10:49:12Z",
        "closed_at": "2014-07-12T12:53:13Z",
        "merged_at": "2014-07-12T12:53:13Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-10T09:25:15Z",
        "closed_at": "2014-07-12T12:53:04Z",
        "merged_at": "2014-07-12T12:53:04Z",
        "body": "It's a stable non blocking async server in pure python. Works with both python 2 and 3.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-10T08:17:18Z",
        "closed_at": "2014-07-12T12:52:35Z",
        "merged_at": "2014-07-12T12:52:35Z",
        "body": "Added link to the [Authomatic](http://peterhudec.github.io/authomatic/) authentication/authotrization package.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-10T05:38:41Z",
        "closed_at": "2014-07-12T13:19:03Z",
        "merged_at": "2014-07-12T13:19:03Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-09T19:44:16Z",
        "closed_at": "2014-07-10T05:23:23Z",
        "merged_at": "2014-07-10T05:23:23Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-07-09T19:36:37Z",
        "closed_at": "2014-07-10T05:49:17Z",
        "merged_at": "2014-07-10T05:49:17Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-09T19:15:19Z",
        "closed_at": "2014-07-10T05:22:14Z",
        "merged_at": "2014-07-10T05:22:14Z",
        "body": "http://pygal.org/\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-09T17:11:36Z",
        "closed_at": "2014-07-10T05:21:16Z",
        "merged_at": "2014-07-10T05:21:16Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-09T11:32:15Z",
        "closed_at": "2014-07-10T05:20:09Z",
        "merged_at": "2014-07-10T05:20:09Z",
        "body": "Add django-formapi to the RESTful API section. Create JSON API:s with HMAC authentication and Django form-validation.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-09T11:25:22Z",
        "closed_at": "2014-07-10T05:19:08Z",
        "merged_at": "2014-07-10T05:19:08Z",
        "body": "Add django-viewlet to the Caching section\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-09T11:24:42Z",
        "closed_at": "2014-07-16T20:46:36Z",
        "merged_at": "2014-07-16T20:46:36Z",
        "body": "Add djedi-cms to the CMS section, a lightweight content management system for Django\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-09T08:10:46Z",
        "closed_at": "2014-07-09T11:25:18Z",
        "merged_at": "2014-07-09T11:25:18Z",
        "body": "Added a pretty popular library called Toolz (a collection of functional utilities).\nAnd CyToolz (Cython implementation of Toolz).\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-09T07:59:17Z",
        "closed_at": "2014-07-10T05:16:59Z",
        "merged_at": "2014-07-10T05:16:59Z",
        "body": "A smart and nice Twitter Client on terminal.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-09T07:43:02Z",
        "closed_at": "2014-07-10T05:16:43Z",
        "merged_at": "2014-07-10T05:16:43Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-09T01:30:06Z",
        "closed_at": "2014-07-10T05:16:14Z",
        "merged_at": "2014-07-10T05:16:14Z",
        "body": "Add libsass-python binding library.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-08T21:26:08Z",
        "closed_at": "2014-07-10T05:49:17Z",
        "merged_at": "2014-07-10T05:49:17Z",
        "body": "Just add the module HTTPretty for mock http\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-08T21:21:11Z",
        "closed_at": "2014-07-09T04:48:53Z",
        "merged_at": "2014-07-09T04:48:53Z",
        "body": "Just add the module freezegun for mock datetime\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-08T21:02:16Z",
        "closed_at": "2014-07-09T04:47:32Z",
        "merged_at": "2014-07-09T04:47:32Z",
        "body": "Added PEW to README.md, a python environment tool.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-07-08T16:25:16Z",
        "closed_at": "2014-08-13T14:32:46Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-07T19:28:37Z",
        "closed_at": "2014-07-08T01:31:10Z",
        "merged_at": "2014-07-08T01:31:10Z",
        "body": "Add glue command line utility\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-07T18:30:12Z",
        "closed_at": "2014-07-08T01:34:22Z",
        "merged_at": "2014-07-08T01:34:22Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-07T14:57:48Z",
        "closed_at": "2014-07-08T01:30:11Z",
        "merged_at": "2014-07-08T01:30:11Z",
        "body": "awesome doc generator\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-07T13:31:45Z",
        "closed_at": "2014-07-08T01:32:02Z",
        "merged_at": "2014-07-08T01:32:02Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-07T09:17:39Z",
        "closed_at": "2014-07-08T01:35:35Z",
        "merged_at": "2014-07-08T01:35:35Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-07T08:18:09Z",
        "closed_at": "2014-07-08T02:05:05Z",
        "merged_at": "2014-07-08T02:05:05Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-07T04:34:45Z",
        "closed_at": "2014-07-07T06:51:20Z",
        "merged_at": "2014-07-07T06:51:20Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-07T04:34:35Z",
        "closed_at": "2014-07-07T06:49:40Z",
        "merged_at": "2014-07-07T06:49:40Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-06T20:15:26Z",
        "closed_at": "2014-07-07T01:03:13Z",
        "merged_at": "2014-07-07T01:03:13Z",
        "body": "develop by @heynemann @diogobaeder @rafaelcaricio ...\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-06T19:23:18Z",
        "closed_at": "2014-07-07T01:15:52Z",
        "merged_at": "2014-07-07T01:15:52Z",
        "body": "- [mixer](https://mixer.readthedocs.org)\n- [pylama](https://pylama.readthedocs.org/)\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-06T19:12:21Z",
        "closed_at": "2014-07-07T01:41:55Z",
        "merged_at": "2014-07-07T01:41:55Z",
        "body": "Adding scikits.talkbox (speech/voice proc.) in the Audio Section.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-06T17:40:13Z",
        "closed_at": "2014-07-07T01:14:02Z",
        "merged_at": "2014-07-07T01:14:02Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-06T14:51:51Z",
        "closed_at": "2014-07-07T01:02:29Z",
        "merged_at": "2014-07-07T01:02:29Z",
        "body": "add mysql-connector-python - pure-python MySQL driver from Oracle (in case you don't want or can't install system MySQL library)\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-06T13:34:21Z",
        "closed_at": "2014-07-07T01:13:33Z",
        "merged_at": "2014-07-07T01:13:33Z",
        "body": "develop by @danilobellini\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-06T10:16:47Z",
        "closed_at": "2014-07-07T01:13:12Z",
        "merged_at": "2014-07-07T01:13:12Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-06T06:46:32Z",
        "closed_at": "2014-07-07T01:42:36Z",
        "merged_at": "2014-07-07T01:42:36Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-06T02:29:10Z",
        "closed_at": "2014-07-07T01:11:41Z",
        "merged_at": "2014-07-07T01:11:41Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-05T23:52:46Z",
        "closed_at": "2014-07-07T01:11:23Z",
        "merged_at": "2014-07-07T01:11:23Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-05T21:09:34Z",
        "closed_at": "2014-07-07T01:11:07Z",
        "merged_at": "2014-07-07T01:11:07Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-07-05T19:19:49Z",
        "closed_at": "2014-07-07T01:42:57Z",
        "merged_at": null,
        "body": "Adding some very useful python libraries that I use. My 2 cents to awesome-python\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-05T17:48:24Z",
        "closed_at": "2014-07-07T01:09:33Z",
        "merged_at": "2014-07-07T01:09:33Z",
        "body": "Really nice and powerful replacement for default admin interface.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-05T06:14:40Z",
        "closed_at": "2014-07-07T01:50:33Z",
        "merged_at": "2014-07-07T01:50:33Z",
        "body": "Reliable, performant and robust workflow execution is\na key part of many python applications, as such this\nadds a list of libraries that can help make this possible.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-05T05:36:20Z",
        "closed_at": "2014-07-05T14:31:19Z",
        "merged_at": "2014-07-05T14:31:19Z",
        "body": "An implementation of figlet written in python.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-05T01:01:40Z",
        "closed_at": "2014-07-05T14:52:08Z",
        "merged_at": "2014-07-05T14:52:07Z",
        "body": ":)\n\nThanks for this list btw, it's great.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-07-04T23:03:56Z",
        "closed_at": "2014-07-05T14:21:47Z",
        "merged_at": "2014-07-05T14:21:47Z",
        "body": "Small fix in pypy line.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-04T22:28:18Z",
        "closed_at": "2014-07-05T14:22:15Z",
        "merged_at": "2014-07-05T14:22:15Z",
        "body": "I'm not sure what your criteria for awesome is, but added pycallgraph as it is pretty cool.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-07-04T22:25:15Z",
        "closed_at": "2014-07-05T14:23:07Z",
        "merged_at": "2014-07-05T14:23:07Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-04T09:28:20Z",
        "closed_at": "2014-07-04T17:43:19Z",
        "merged_at": "2014-07-04T17:43:19Z",
        "body": "Hi!\nVery useful library, consider adding it to list.\nRegards\nRadek\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-03T22:33:40Z",
        "closed_at": "2014-07-08T02:45:26Z",
        "merged_at": "2014-07-08T02:45:26Z",
        "body": "Just added carteblanche to the new permissions category!\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-03T20:07:20Z",
        "closed_at": "2014-07-04T06:01:01Z",
        "merged_at": "2014-07-04T06:01:00Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2014-07-03T18:44:36Z",
        "closed_at": "2014-07-28T09:20:35Z",
        "merged_at": null,
        "body": "to make wording more consistent with \"Natural Language Processing\", \"Text Processing\" etc.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-03T18:29:42Z",
        "closed_at": "2014-07-04T06:08:10Z",
        "merged_at": "2014-07-04T06:08:10Z",
        "body": "adding \"cliff\" for crafting multi-level command for command-line applications\ndoc_home: https://cliff.readthedocs.org/en/latest/introduction.html\n\nfrom dev:\n\n> The cliff framework is meant to be used to create multi-level commands such as subversion and git, where the main program handles some basic argument parsing and then invokes a sub-command to do the work.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-03T17:28:03Z",
        "closed_at": "2015-05-29T04:15:26Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-03T13:25:49Z",
        "closed_at": "2014-07-07T01:45:26Z",
        "merged_at": "2014-07-07T01:45:26Z",
        "body": "Adding link to WikiTeam project, which has scripts for downloading wikis, mostly MediaWiki https://github.com/WikiTeam/wikiteam\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-03T12:07:15Z",
        "closed_at": "2014-07-03T14:17:04Z",
        "merged_at": "2014-07-03T14:17:04Z",
        "body": "pyPDF2 is under active maintenance and can be complementary to PDFMiner\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-03T11:42:05Z",
        "closed_at": "2014-07-03T14:16:27Z",
        "merged_at": "2014-07-03T14:16:27Z",
        "body": "Added pycassa - Python Thrift driver for Apache Cassandra.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-03T09:32:54Z",
        "closed_at": "2014-07-03T10:58:15Z",
        "merged_at": "2014-07-03T10:58:15Z",
        "body": "Clime (command line tool)\nGrappelli (admin panel)\npudb (debugging tool)\nbpython (miscellaneous)\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-03T03:23:27Z",
        "closed_at": "2014-07-03T05:36:38Z",
        "merged_at": "2014-07-03T05:36:38Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-03T00:53:17Z",
        "closed_at": "2014-07-03T07:44:58Z",
        "merged_at": "2014-07-03T07:44:58Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-02T23:51:01Z",
        "closed_at": "2014-07-03T05:35:01Z",
        "merged_at": "2014-07-03T05:35:01Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-07-02T23:46:47Z",
        "closed_at": "2014-08-23T11:01:47Z",
        "merged_at": "2014-08-23T11:01:47Z",
        "body": "New maintainer since:\nhttps://github.com/aaronsw/html2text/issues/91\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 47,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-02T22:45:20Z",
        "closed_at": "2014-07-03T06:30:44Z",
        "merged_at": "2014-07-03T06:30:44Z",
        "body": "I wrote a small script that sorts the entries at the lowest level. I've explained how it's being done in the sort.py file. This is by no means an ideal solution - it is quite limited. In any case, for now, it is functional.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-02T20:04:37Z",
        "closed_at": "2014-07-03T06:37:43Z",
        "merged_at": "2014-07-03T06:37:43Z",
        "body": "requesting to add in \"Environment Management\" section\n\nabout from dev-site:\n\"eGenix PyRun\u2122 is our open source, one file, no installation version of Python, making the distribution of a Python interpreter to run based scripts and applications to Unix based systems as simple as copying a single file. eGenix PyRun's executable only needs 11MB for Python 2 and 13MB for Python 3, but still supports most Python applications and scripts - and it can be compressed to just 3-4MB using upx, if needed.\"\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 38,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2014-07-02T17:21:52Z",
        "closed_at": "2014-07-02T20:05:14Z",
        "merged_at": "2014-07-02T20:05:14Z",
        "body": "All important to Python development. I also added ctypes to the FFI section.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-02T17:13:21Z",
        "closed_at": "2014-07-02T20:06:09Z",
        "merged_at": "2014-07-02T20:06:09Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-07-02T17:04:36Z",
        "closed_at": "2014-07-02T20:04:04Z",
        "merged_at": "2014-07-02T20:04:04Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-02T16:20:43Z",
        "closed_at": "2014-07-03T07:38:40Z",
        "merged_at": "2014-07-03T07:38:40Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-02T14:42:06Z",
        "closed_at": "2014-07-03T08:20:18Z",
        "merged_at": "2014-07-03T08:20:18Z",
        "body": "Added percol, an interactive selection to the traditional pipe concept on UNIX and pywk, a python awk-like line processing tool\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-02T11:44:29Z",
        "closed_at": "2014-07-02T13:23:52Z",
        "merged_at": "2014-07-02T13:23:52Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-02T08:43:01Z",
        "closed_at": "2014-07-02T13:23:26Z",
        "merged_at": "2014-07-02T13:23:26Z",
        "body": "I'm the author of Contexts, a testing framework which I think is sufficiently awesome to be included in this list! :wink: \n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-02T07:53:06Z",
        "closed_at": "2014-07-02T13:23:05Z",
        "merged_at": "2014-07-02T13:23:05Z",
        "body": "I'm part of Plotly, and we'd love to be added to the list. Thanks!\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-02T07:19:02Z",
        "closed_at": "2014-07-02T13:31:08Z",
        "merged_at": "2014-07-02T13:31:08Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-02T06:50:21Z",
        "closed_at": "2014-07-02T13:22:01Z",
        "merged_at": "2014-07-02T13:22:01Z",
        "body": "Add Mistune for Markdown.\n\nAdd OAuthLib and Flask-OAuthlib for Authentication section.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-02T06:28:34Z",
        "closed_at": "2014-07-02T13:21:46Z",
        "merged_at": "2014-07-02T13:21:46Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-01T22:31:03Z",
        "closed_at": "2014-07-02T01:55:24Z",
        "merged_at": "2014-07-02T01:55:24Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-01T21:47:36Z",
        "closed_at": "2014-07-02T02:08:52Z",
        "merged_at": "2014-07-02T02:08:52Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-01T21:41:15Z",
        "closed_at": "2014-07-02T01:55:08Z",
        "merged_at": "2014-07-02T01:55:08Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-01T21:39:30Z",
        "closed_at": "2014-07-02T01:54:58Z",
        "merged_at": "2014-07-02T01:54:58Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-07-01T21:36:47Z",
        "closed_at": "2014-07-02T01:54:06Z",
        "merged_at": "2014-07-02T01:54:06Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-01T21:20:44Z",
        "closed_at": "2014-07-02T01:53:32Z",
        "merged_at": "2014-07-02T01:53:32Z",
        "body": "[webassets](https://github.com/miracle2k/webassets) is a pretty kickass asset management solution and should be included.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-01T20:00:33Z",
        "closed_at": "2014-07-02T01:51:36Z",
        "merged_at": "2014-07-02T01:51:36Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2014-07-01T18:59:58Z",
        "closed_at": "2014-07-02T13:20:59Z",
        "merged_at": "2014-07-02T13:20:59Z",
        "body": "Proposed tools: SCons and PlatformIO\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-01T18:38:56Z",
        "closed_at": "2014-07-03T07:44:58Z",
        "merged_at": "2014-07-03T07:44:58Z",
        "body": "Added scikit-image and scikit-video in the science module. As new modules are submitted, it would be probably better create a signal processing category.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-01T16:21:24Z",
        "closed_at": "2014-07-01T18:40:50Z",
        "merged_at": "2014-07-01T18:40:50Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-01T13:01:19Z",
        "closed_at": "2014-07-01T14:50:27Z",
        "merged_at": "2014-07-01T14:50:27Z",
        "body": "Added Genshi, Mako, Cheetah and webstring.\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-01T10:51:09Z",
        "closed_at": "2014-07-01T14:50:27Z",
        "merged_at": "2014-07-01T14:50:27Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-01T08:42:16Z",
        "closed_at": "2014-07-01T13:59:08Z",
        "merged_at": "2014-07-01T13:59:08Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-01T07:49:54Z",
        "closed_at": "2014-07-05T15:56:59Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-07-01T07:16:55Z",
        "closed_at": "2014-07-01T13:55:35Z",
        "merged_at": "2014-07-01T13:55:35Z",
        "body": "Edited readme file, added more package\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-01T05:05:10Z",
        "closed_at": "2016-12-13T17:31:01Z",
        "merged_at": null,
        "body": "excellent API for growth hackers & sales sleuths.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-01T04:08:12Z",
        "closed_at": "2014-07-01T13:36:27Z",
        "merged_at": "2014-07-01T13:36:27Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-01T01:56:55Z",
        "closed_at": "2014-07-01T03:30:58Z",
        "merged_at": "2014-07-01T03:30:58Z",
        "body": "Trivial addition\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-06-30T23:22:55Z",
        "closed_at": "2014-07-01T03:30:49Z",
        "merged_at": "2014-07-01T03:30:49Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-06-30T19:59:25Z",
        "closed_at": "2014-07-01T03:29:54Z",
        "merged_at": "2014-07-01T03:29:54Z",
        "body": "Adding MkDocs in Documentation section, a (future ?) markdown based sphinx alternative.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 11,
        "changed_files": 1,
        "created_at": "2014-06-30T18:08:04Z",
        "closed_at": "2014-07-01T03:26:07Z",
        "merged_at": "2014-07-01T03:26:07Z",
        "body": "Added TurboGears, Grok and CherryPy.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-06-30T18:05:24Z",
        "closed_at": "2014-07-01T03:19:01Z",
        "merged_at": "2014-07-01T03:19:01Z",
        "body": "Another new section, wasn't sure what else to call it.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2014-06-30T14:46:22Z",
        "closed_at": "2014-06-30T16:45:51Z",
        "merged_at": "2014-06-30T16:45:51Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-06-30T14:34:27Z",
        "closed_at": "2014-06-30T15:41:31Z",
        "merged_at": "2014-06-30T15:41:31Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-06-30T14:27:44Z",
        "closed_at": "2014-06-30T15:41:19Z",
        "merged_at": "2014-06-30T15:41:19Z",
        "body": "beaker library for caching and sessions.\n",
        "comments": 0
    }
]